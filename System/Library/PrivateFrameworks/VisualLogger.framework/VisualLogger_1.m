char *sub_2157B6F84(char *__dst, long long *a2)
{
  long long v4;
  char *v5;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  unsigned char *v10;
  long long v11;

  if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    v5 = __dst + 24;
    if ((*((char *)a2 + 47) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
    v5 = __dst + 24;
    if ((*((char *)a2 + 47) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = *(long long *)((char *)a2 + 24);
      *((void *)v5 + 2) = *((void *)a2 + 5);
      *(_OWORD *)v5 = v6;
      goto LABEL_6;
    }
  }
  sub_215738B0C(v5, *((void **)a2 + 3), *((void *)a2 + 4));
LABEL_6:
  if (*((char *)a2 + 71) < 0)
  {
    sub_215738B0C(__dst + 48, *((void **)a2 + 6), *((void *)a2 + 7));
  }
  else
  {
    v7 = a2[3];
    *((void *)__dst + 8) = *((void *)a2 + 8);
    *((_OWORD *)__dst + 3) = v7;
  }
  if (*((char *)a2 + 95) < 0)
  {
    sub_215738B0C(__dst + 72, *((void **)a2 + 9), *((void *)a2 + 10));
  }
  else
  {
    v8 = *(long long *)((char *)a2 + 72);
    *((void *)__dst + 11) = *((void *)a2 + 11);
    *(_OWORD *)(__dst + 72) = v8;
  }
  if (*((char *)a2 + 119) < 0)
  {
    sub_215738B0C(__dst + 96, *((void **)a2 + 12), *((void *)a2 + 13));
  }
  else
  {
    v9 = a2[6];
    *((void *)__dst + 14) = *((void *)a2 + 14);
    *((_OWORD *)__dst + 6) = v9;
  }
  v10 = __dst + 120;
  if (*((char *)a2 + 143) < 0)
  {
    sub_215738B0C(v10, *((void **)a2 + 15), *((void *)a2 + 16));
  }
  else
  {
    v11 = *(long long *)((char *)a2 + 120);
    *((void *)__dst + 17) = *((void *)a2 + 17);
    *(_OWORD *)v10 = v11;
  }
  return __dst;
}

void sub_2157B70EC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 119) < 0)
  {
    operator delete(*v5);
    if ((*(char *)(v1 + 95) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 71) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(char *)(v1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v4);
  if ((*(char *)(v1 + 71) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v1 + 47) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(*v3);
  if ((*(char *)(v1 + 47) & 0x80000000) == 0)
  {
LABEL_5:
    if ((*(char *)(v1 + 23) & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*v2);
  if ((*(char *)(v1 + 23) & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_2157B71B0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CE88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CE88))
  {
    sub_2157B7284();
    if (byte_26788D277 < 0)
    {
      sub_215738B0C(&xmmword_26788D230, (void *)xmmword_26788D260, *((unint64_t *)&xmmword_26788D260 + 1));
    }
    else
    {
      xmmword_26788D230 = xmmword_26788D260;
      qword_26788D240 = unk_26788D270;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D230, &dword_21572C000);
    __cxa_guard_release(&qword_26788CE88);
  }
}

void sub_2157B726C(_Unwind_Exception *a1)
{
}

void sub_2157B7284()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CE90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CE90))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZPeerInfo]", qword_26788D248);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D248, &dword_21572C000);
    __cxa_guard_release(&qword_26788CE90);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CE98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CE98))
  {
    sub_215E19DF4((uint64_t)qword_26788D248, (uint64_t)&xmmword_26788D260);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D260, &dword_21572C000);
    __cxa_guard_release(&qword_26788CE98);
  }
}

void sub_2157B7378(_Unwind_Exception *a1)
{
}

void sub_2157B7390(_Unwind_Exception *a1)
{
}

long long *sub_2157B73A8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678847C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678847C0))
  {
    return &xmmword_2678847A8;
  }
  uint64_t v1 = (char *)sub_2157B7490();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_2678847A8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_2678847B8 = *((void *)v1 + 2);
    xmmword_2678847A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678847A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678847C0);
  return &xmmword_2678847A8;
}

void sub_2157B7478(_Unwind_Exception *a1)
{
}

void *sub_2157B7490()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678847E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678847E0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::PeerInfo]", qword_2678847C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678847C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678847E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884800, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884800))
  {
    return &unk_2678847E8;
  }
  sub_215E19DF4((uint64_t)qword_2678847C8, (uint64_t)&unk_2678847E8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678847E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884800);
  return &unk_2678847E8;
}

void sub_2157B7594(_Unwind_Exception *a1)
{
}

void sub_2157B75AC(_Unwind_Exception *a1)
{
}

char *sub_2157B75C4(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  v6 = sub_2157B76C4(a1, a2, &v15, &v14, a3);
  if (*v6) {
    return (char *)*v6;
  }
  v8 = v6;
  v9 = (char *)operator new(0x40uLL);
  v10 = v9 + 32;
  if (*(char *)(a4 + 23) < 0)
  {
    sub_215738B0C(v10, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)v10 = *(_OWORD *)a4;
    *((void *)v9 + 6) = *(void *)(a4 + 16);
  }
  v9[56] = *(unsigned char *)(a4 + 24);
  v11 = v15;
  *(void *)v9 = 0;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = v11;
  uint64_t *v8 = (uint64_t)v9;
  v12 = (uint64_t *)**a1;
  v13 = (uint64_t *)v9;
  if (v12)
  {
    *a1 = v12;
    v13 = (uint64_t *)*v8;
  }
  sub_21573B048(a1[1], v13);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v9;
}

void sub_2157B76B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_2157B76C4(uint64_t **a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, const void **a5)
{
  v8 = a1 + 1;
  if (a1 + 1 == (uint64_t **)a2) {
    goto LABEL_23;
  }
  int v10 = *((char *)a5 + 23);
  if (v10 >= 0) {
    v11 = a5;
  }
  else {
    v11 = *a5;
  }
  if (v10 >= 0) {
    size_t v12 = *((unsigned __int8 *)a5 + 23);
  }
  else {
    size_t v12 = (size_t)a5[1];
  }
  int v13 = *((char *)a2 + 55);
  if (v13 >= 0) {
    v14 = a2 + 4;
  }
  else {
    v14 = (const void *)a2[4];
  }
  if (v13 >= 0) {
    size_t v15 = *((unsigned __int8 *)a2 + 55);
  }
  else {
    size_t v15 = a2[5];
  }
  if (v15 >= v12) {
    size_t v16 = v12;
  }
  else {
    size_t v16 = v15;
  }
  int v17 = memcmp(v11, v14, v16);
  if (!v17)
  {
    if (v12 >= v15) {
      goto LABEL_19;
    }
LABEL_23:
    v19 = (uint64_t *)*a2;
    if (*a1 == a2)
    {
      v21 = a2;
    }
    else
    {
      if (v19)
      {
        v20 = (uint64_t *)*a2;
        do
        {
          v21 = v20;
          v20 = (uint64_t *)v20[1];
        }
        while (v20);
      }
      else
      {
        v22 = a2;
        do
        {
          v21 = (uint64_t *)v22[2];
          BOOL v23 = *v21 == (void)v22;
          v22 = v21;
        }
        while (v23);
      }
      int v24 = *((char *)v21 + 55);
      if (v24 >= 0) {
        v25 = v21 + 4;
      }
      else {
        v25 = (const void *)v21[4];
      }
      if (v24 >= 0) {
        size_t v26 = *((unsigned __int8 *)v21 + 55);
      }
      else {
        size_t v26 = v21[5];
      }
      int v27 = *((char *)a5 + 23);
      if (v27 >= 0) {
        v28 = a5;
      }
      else {
        v28 = *a5;
      }
      if (v27 >= 0) {
        size_t v29 = *((unsigned __int8 *)a5 + 23);
      }
      else {
        size_t v29 = (size_t)a5[1];
      }
      if (v29 >= v26) {
        size_t v30 = v26;
      }
      else {
        size_t v30 = v29;
      }
      int v31 = memcmp(v25, v28, v30);
      if (v31)
      {
        if ((v31 & 0x80000000) == 0) {
          goto LABEL_48;
        }
      }
      else if (v26 >= v29)
      {
LABEL_48:
        v32 = *v8;
        if (!*v8)
        {
          v33 = v8;
LABEL_69:
          *a3 = (uint64_t *)v33;
          return (uint64_t *)v8;
        }
        while (1)
        {
          v33 = (uint64_t **)v32;
          v36 = (const void *)v32[4];
          v34 = v32 + 4;
          v35 = v36;
          int v37 = *((char *)v34 + 23);
          if (v37 >= 0) {
            v38 = v34;
          }
          else {
            v38 = v35;
          }
          if (v37 >= 0) {
            size_t v39 = *((unsigned __int8 *)v34 + 23);
          }
          else {
            size_t v39 = v34[1];
          }
          if (v39 >= v29) {
            size_t v40 = v29;
          }
          else {
            size_t v40 = v39;
          }
          int v41 = memcmp(v28, v38, v40);
          if (v41)
          {
            if (v41 < 0) {
              goto LABEL_50;
            }
LABEL_64:
            int v42 = memcmp(v38, v28, v40);
            if (v42)
            {
              if ((v42 & 0x80000000) == 0) {
                goto LABEL_69;
              }
            }
            else if (v39 >= v29)
            {
              goto LABEL_69;
            }
            v8 = v33 + 1;
            v32 = v33[1];
            if (!v32) {
              goto LABEL_69;
            }
          }
          else
          {
            if (v29 >= v39) {
              goto LABEL_64;
            }
LABEL_50:
            v32 = *v33;
            v8 = v33;
            if (!*v33) {
              goto LABEL_69;
            }
          }
        }
      }
    }
    if (v19)
    {
      *a3 = v21;
      return v21 + 1;
    }
    else
    {
      *a3 = a2;
      return a2;
    }
  }
  if (v17 < 0) {
    goto LABEL_23;
  }
LABEL_19:
  int v18 = memcmp(v14, v11, v16);
  if (v18)
  {
    if ((v18 & 0x80000000) == 0)
    {
LABEL_21:
      *a3 = a2;
      *a4 = a2;
      return (uint64_t *)a4;
    }
  }
  else if (v15 >= v12)
  {
    goto LABEL_21;
  }
  uint64_t v43 = a2[1];
  if (v43)
  {
    v44 = (uint64_t *)a2[1];
    do
    {
      a4 = (uint64_t **)v44;
      v44 = (uint64_t *)*v44;
    }
    while (v44);
  }
  else
  {
    v45 = a2;
    do
    {
      a4 = (uint64_t **)v45[2];
      BOOL v23 = *a4 == v45;
      v45 = (uint64_t *)a4;
    }
    while (!v23);
  }
  if (a4 != v8)
  {
    int v46 = *((char *)a4 + 55);
    if (v46 >= 0) {
      v47 = (uint64_t *)(a4 + 4);
    }
    else {
      v47 = a4[4];
    }
    if (v46 >= 0) {
      size_t v48 = *((unsigned __int8 *)a4 + 55);
    }
    else {
      size_t v48 = (size_t)a4[5];
    }
    if (v48 >= v12) {
      size_t v49 = v12;
    }
    else {
      size_t v49 = v48;
    }
    int v50 = memcmp(v11, v47, v49);
    if (v50)
    {
      if ((v50 & 0x80000000) == 0)
      {
LABEL_95:
        v51 = *v8;
        if (*v8)
        {
          v52 = a3;
          while (1)
          {
            v53 = (uint64_t **)v51;
            v56 = (const void *)v51[4];
            v54 = v51 + 4;
            v55 = v56;
            int v57 = *((char *)v54 + 23);
            if (v57 >= 0) {
              v58 = v54;
            }
            else {
              v58 = v55;
            }
            if (v57 >= 0) {
              size_t v59 = *((unsigned __int8 *)v54 + 23);
            }
            else {
              size_t v59 = v54[1];
            }
            if (v59 >= v12) {
              size_t v60 = v12;
            }
            else {
              size_t v60 = v59;
            }
            int v61 = memcmp(v11, v58, v60);
            if (v61)
            {
              if (v61 < 0) {
                goto LABEL_97;
              }
LABEL_111:
              int v62 = memcmp(v58, v11, v60);
              if (v62)
              {
                if ((v62 & 0x80000000) == 0) {
                  goto LABEL_123;
                }
              }
              else if (v59 >= v12)
              {
                goto LABEL_123;
              }
              v8 = v53 + 1;
              v51 = v53[1];
              if (!v51) {
                goto LABEL_123;
              }
            }
            else
            {
              if (v12 >= v59) {
                goto LABEL_111;
              }
LABEL_97:
              v51 = *v53;
              v8 = v53;
              if (!*v53) {
                goto LABEL_123;
              }
            }
          }
        }
        v53 = v8;
        v52 = a3;
LABEL_123:
        *v52 = (uint64_t *)v53;
        return (uint64_t *)v8;
      }
    }
    else if (v12 >= v48)
    {
      goto LABEL_95;
    }
  }
  if (v43)
  {
    *a3 = (uint64_t *)a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return (uint64_t *)a4;
}

void sub_2157B7A70()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CED0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CED0))
  {
    sub_2157B7B44();
    if (byte_26788D34F < 0)
    {
      sub_215738B0C(&xmmword_26788D308, (void *)xmmword_26788D338, *((unint64_t *)&xmmword_26788D338 + 1));
    }
    else
    {
      xmmword_26788D308 = xmmword_26788D338;
      unk_26788D318 = unk_26788D348;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D308, &dword_21572C000);
    __cxa_guard_release(&qword_26788CED0);
  }
}

void sub_2157B7B2C(_Unwind_Exception *a1)
{
}

void sub_2157B7B44()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CED8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CED8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::EnableState]", qword_26788D320);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D320, &dword_21572C000);
    __cxa_guard_release(&qword_26788CED8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CEE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CEE0))
  {
    sub_215E19DF4((uint64_t)qword_26788D320, (uint64_t)&xmmword_26788D338);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D338, &dword_21572C000);
    __cxa_guard_release(&qword_26788CEE0);
  }
}

void sub_2157B7C38(_Unwind_Exception *a1)
{
}

void sub_2157B7C50(_Unwind_Exception *a1)
{
}

void *sub_2157B7C68(uint64_t a1)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  result = operator new(0x38uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    void *result = &unk_26C6565D0;
    uint64_t v3 = *(void *)(a1 + 8);
    result[2] = *(void *)a1;
    result[3] = v3;
    if (v3) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
    }
    *((_OWORD *)result + 2) = *(_OWORD *)(a1 + 16);
    *((_DWORD *)result + 12) = 1;
    void *result = &unk_26C659028;
    result[1] = &unk_26C659078;
    return result;
  }
  sub_2157B7FE0();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CF98))
  {
    sub_2157B81D8();
    int v7 = byte_26788D58F;
    if (byte_26788D58F >= 0) {
      size_t v8 = byte_26788D58F;
    }
    else {
      size_t v8 = *((void *)&xmmword_26788D578 + 1);
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      int v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788D560 + 1) = v8 + 1;
      unk_26788D570 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788D560 = v10;
    }
    else
    {
      int v10 = &xmmword_26788D560;
      unk_26788D570 = 0;
      xmmword_26788D560 = 0uLL;
      byte_26788D577 = v8 + 1;
      if (!v8)
      {
LABEL_45:
        *(_WORD *)((char *)v10 + v8) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D560, &dword_21572C000);
        __cxa_guard_release(&qword_26788CF98);
        goto LABEL_6;
      }
    }
    if (v7 >= 0) {
      int v13 = &xmmword_26788D578;
    }
    else {
      int v13 = (long long *)xmmword_26788D578;
    }
    memmove(v10, v13, v8);
    goto LABEL_45;
  }
LABEL_6:
  if (byte_26788D577 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788D560, *((unint64_t *)&xmmword_26788D560 + 1));
  }
  else
  {
    long long __dst = xmmword_26788D560;
    uint64_t v28 = unk_26788D570;
  }
  sub_21573A150(&v25, (uint64_t)&__dst, 1uLL);
  v14[0] = 0;
  char v24 = 0;
  sub_21574086C((uint64_t *)&xmmword_26788D518, (uint64_t *)&v25, (uint64_t)v14, 0);
  if (v24 && v23)
  {
    if (v22)
    {
      if (v21 < 0) {
        operator delete(__p);
      }
      if (v19 < 0) {
        operator delete(v18);
      }
    }
    if (v17 && v16 < 0) {
      operator delete(v15);
    }
  }
  uint64_t v4 = (uint64_t)v25;
  if (v25)
  {
    uint64_t v5 = v26;
    v6 = v25;
    if ((void *)v26 != v25)
    {
      do
      {
        if (*(char *)(v5 - 1) < 0) {
          operator delete(*(void **)(v5 - 24));
        }
        v5 -= 24;
      }
      while (v5 != v4);
      v6 = v25;
    }
    uint64_t v26 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v28) < 0) {
    operator delete((void *)__dst);
  }
  return 0;
}

void sub_2157B7FB0(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788CF98);
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157B7FE0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CF80))
  {
    sub_2157B80B4();
    if (byte_26788D55F < 0)
    {
      sub_215738B0C(&xmmword_26788D518, (void *)xmmword_26788D548, *((unint64_t *)&xmmword_26788D548 + 1));
    }
    else
    {
      xmmword_26788D518 = xmmword_26788D548;
      unk_26788D528 = unk_26788D558;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D518, &dword_21572C000);
    __cxa_guard_release(&qword_26788CF80);
  }
}

void sub_2157B809C(_Unwind_Exception *a1)
{
}

void sub_2157B80B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CF88))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZSyncControl]", qword_26788D530);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D530, &dword_21572C000);
    __cxa_guard_release(&qword_26788CF88);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CF90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CF90))
  {
    sub_215E19DF4((uint64_t)qword_26788D530, (uint64_t)&xmmword_26788D548);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D548, &dword_21572C000);
    __cxa_guard_release(&qword_26788CF90);
  }
}

void sub_2157B81A8(_Unwind_Exception *a1)
{
}

void sub_2157B81C0(_Unwind_Exception *a1)
{
}

void sub_2157B81D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFA0))
  {
    sub_2157B82AC();
    if (byte_26788D5BF < 0)
    {
      sub_215738B0C(&xmmword_26788D578, (void *)xmmword_26788D5A8, *((unint64_t *)&xmmword_26788D5A8 + 1));
    }
    else
    {
      xmmword_26788D578 = xmmword_26788D5A8;
      unk_26788D588 = unk_26788D5B8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D578, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFA0);
  }
}

void sub_2157B8294(_Unwind_Exception *a1)
{
}

void sub_2157B82AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFA8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::SyncControl]", qword_26788D590);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D590, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFA8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFB0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFB0))
  {
    sub_215E19DF4((uint64_t)qword_26788D590, (uint64_t)&xmmword_26788D5A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D5A8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFB0);
  }
}

void sub_2157B83A0(_Unwind_Exception *a1)
{
}

void sub_2157B83B8(_Unwind_Exception *a1)
{
}

void *sub_2157B83D0(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C659210;
  long long v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2157B8468(void *a1)
{
  *a1 = &unk_26C659210;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_2157B8510(uint64_t a1)
{
  result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C659210;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_2157B856C(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C659210;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_2157B85A4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_2157B8620(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

uint64_t sub_2157B86BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(void *)(result + 8))
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_2157B8888(a2);
    uint64_t v6 = sub_21576C280(0, a3);
    result = (*(uint64_t (**)(void))(**(void **)(v4 + 8) + 16))();
    if (v6) {
      result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
    }
    if (v5)
    {
      int v7 = *(uint64_t (**)(char *))(*(void *)v5 + 24);
      return v7(v5);
    }
  }
  return result;
}

void sub_2157B879C(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
    if (!v1) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157B880C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "Z30ForwardReceivedMessageFunctionU13block_pointerFvPK16VZConnectionInfoPK12VZLogMessageEE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"Z30ForwardReceivedMessageFunctionU13block_pointerFvPK16VZConnectionInfoPK12VZLogMessageEE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z30ForwardReceivedMessageFunctionU13block_pointerFvPK16VZConnectionInfoPK12VZLogMessageEE3$_1"))return 0; {
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z30ForwardReceivedMessageFunctionU13block_pointerFvPK16VZConnectionInfoPK12VZLogMessageEE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  }
  return 0;
}

void *sub_2157B887C()
{
  return &unk_26C659280;
}

char *sub_2157B8888(uint64_t a1)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v2 = (char *)operator new(0x110uLL, MEMORY[0x263F8C180]);
  if (v2)
  {
    unint64_t v3 = v2;
    *(void *)uint64_t v2 = &unk_26C6565D0;
    v2[16] = *(unsigned char *)a1;
    *(_OWORD *)(v2 + 24) = *(_OWORD *)(a1 + 8);
    *((_DWORD *)v2 + 10) = *(_DWORD *)(a1 + 24);
    v2[48] = 0;
    v2[72] = 0;
    if (*(unsigned char *)(a1 + 56))
    {
      if (*(char *)(a1 + 55) < 0)
      {
        sub_215738B0C(v2 + 48, *(void **)(a1 + 32), *(void *)(a1 + 40));
      }
      else
      {
        *((_OWORD *)v2 + 3) = *(_OWORD *)(a1 + 32);
        *((void *)v2 + 8) = *(void *)(a1 + 48);
      }
      v3[72] = 1;
    }
    v3[80] = 0;
    v3[224] = 0;
    if (*(unsigned char *)(a1 + 208))
    {
      sub_2157B6F84(v3 + 80, (long long *)(a1 + 64));
      v3[224] = 1;
    }
    *(_OWORD *)(v3 + 232) = *(_OWORD *)(a1 + 216);
    *((void *)v3 + 31) = *(void *)(a1 + 232);
    *((_DWORD *)v3 + 64) = 1;
    *(void *)unint64_t v3 = &unk_26C658C48;
    *((void *)v3 + 1) = &unk_26C658C98;
    *((void *)v3 + 33) = 0;
    return v3;
  }
  sub_2157B8CD8();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFD0))
  {
    sub_2157B8ED0();
    int v8 = byte_26788D637;
    if (byte_26788D637 >= 0) {
      size_t v9 = byte_26788D637;
    }
    else {
      size_t v9 = qword_26788D628;
    }
    unint64_t v10 = v9 + 1;
    if (v9 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v10 >= 0x17)
    {
      uint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v10 | 7) != 0x17) {
        uint64_t v12 = v10 | 7;
      }
      uint64_t v13 = v12 + 1;
      uint64_t v11 = (long long *)operator new(v12 + 1);
      *((void *)&xmmword_26788D608 + 1) = v9 + 1;
      unk_26788D618 = v13 | 0x8000000000000000;
      *(void *)&xmmword_26788D608 = v11;
    }
    else
    {
      uint64_t v11 = &xmmword_26788D608;
      unk_26788D618 = 0;
      xmmword_26788D608 = 0uLL;
      byte_26788D61F = v9 + 1;
      if (!v9)
      {
LABEL_51:
        *(_WORD *)((char *)v11 + v9) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D608, &dword_21572C000);
        __cxa_guard_release(&qword_26788CFD0);
        goto LABEL_12;
      }
    }
    if (v8 >= 0) {
      v14 = &qword_26788D620;
    }
    else {
      v14 = (uint64_t *)qword_26788D620;
    }
    memmove(v11, v14, v9);
    goto LABEL_51;
  }
LABEL_12:
  if (byte_26788D61F < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788D608, *((unint64_t *)&xmmword_26788D608 + 1));
  }
  else
  {
    long long __dst = xmmword_26788D608;
    uint64_t v29 = unk_26788D618;
  }
  sub_21573A150(&v26, (uint64_t)&__dst, 1uLL);
  v15[0] = 0;
  char v25 = 0;
  sub_21574086C((uint64_t *)&xmmword_26788D5C0, (uint64_t *)&v26, (uint64_t)v15, 0);
  if (v25 && v24)
  {
    if (v23)
    {
      if (v22 < 0) {
        operator delete(__p);
      }
      if (v20 < 0) {
        operator delete(v19);
      }
    }
    if (v18 && v17 < 0) {
      operator delete(v16);
    }
  }
  uint64_t v5 = (uint64_t)v26;
  if (v26)
  {
    uint64_t v6 = v27;
    int v7 = v26;
    if ((void *)v27 != v26)
    {
      do
      {
        if (*(char *)(v6 - 1) < 0) {
          operator delete(*(void **)(v6 - 24));
        }
        v6 -= 24;
      }
      while (v6 != v5);
      int v7 = v26;
    }
    uint64_t v27 = v5;
    operator delete(v7);
  }
  if (SHIBYTE(v29) < 0) {
    operator delete((void *)__dst);
  }
  return 0;
}

void sub_2157B8CA4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_215731D80(a1);
}

void sub_2157B8CD8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFB8))
  {
    sub_2157B8DAC();
    if (byte_26788D607 < 0)
    {
      sub_215738B0C(&xmmword_26788D5C0, (void *)xmmword_26788D5F0, *((unint64_t *)&xmmword_26788D5F0 + 1));
    }
    else
    {
      xmmword_26788D5C0 = xmmword_26788D5F0;
      qword_26788D5D0 = unk_26788D600;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D5C0, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFB8);
  }
}

void sub_2157B8D94(_Unwind_Exception *a1)
{
}

void sub_2157B8DAC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZConnectionInfo]", qword_26788D5D8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D5D8, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFC8))
  {
    sub_215E19DF4((uint64_t)qword_26788D5D8, (uint64_t)&xmmword_26788D5F0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D5F0, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFC8);
  }
}

void sub_2157B8EA0(_Unwind_Exception *a1)
{
}

void sub_2157B8EB8(_Unwind_Exception *a1)
{
}

void sub_2157B8ED0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFD8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788CFD8))
  {
    return;
  }
  sub_2157B906C();
  int v0 = byte_26788D64F;
  if (byte_26788D64F >= 0) {
    size_t v1 = byte_26788D64F;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788D638 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788D628 = v1 + 6;
    unk_26788D630 = v5 | 0x8000000000000000;
    qword_26788D620 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    unint64_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788D628 = 0;
  unk_26788D630 = 0;
  qword_26788D620 = 0x2074736E6F63;
  byte_26788D637 = v1 + 6;
  unint64_t v3 = (char *)&qword_26788D620 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      int v7 = &xmmword_26788D638;
    }
    else {
      int v7 = (long long *)xmmword_26788D638;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D620, &dword_21572C000);

  __cxa_guard_release(&qword_26788CFD8);
}

void sub_2157B9054(_Unwind_Exception *a1)
{
}

void sub_2157B906C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFE0))
  {
    sub_2157B9140();
    if (byte_26788D67F < 0)
    {
      sub_215738B0C(&xmmword_26788D638, (void *)xmmword_26788D668, *((unint64_t *)&xmmword_26788D668 + 1));
    }
    else
    {
      xmmword_26788D638 = xmmword_26788D668;
      unk_26788D648 = unk_26788D678;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D638, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFE0);
  }
}

void sub_2157B9128(_Unwind_Exception *a1)
{
}

void sub_2157B9140()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFE8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFE8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ConnectionInfo]", qword_26788D650);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D650, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFE8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFF0))
  {
    sub_215E19DF4((uint64_t)qword_26788D650, (uint64_t)&xmmword_26788D668);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D668, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFF0);
  }
}

void sub_2157B9234(_Unwind_Exception *a1)
{
}

void sub_2157B924C(_Unwind_Exception *a1)
{
}

void *sub_2157B9264(void *result)
{
  size_t v1 = result;
  void *result = &unk_26C6592A0;
  unint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2157B92FC(void *a1)
{
  *a1 = &unk_26C6592A0;
  size_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_2157B93A4(uint64_t a1)
{
  result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C6592A0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_2157B9400(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C6592A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_2157B9438(uint64_t a1)
{
  size_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_2157B94B4(void *__p)
{
  size_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

uint64_t sub_2157B9550(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 8))
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_2157B8888(a2);
    result = (*(uint64_t (**)(void))(**(void **)(v2 + 8) + 16))();
    if (v3)
    {
      uint64_t v4 = *(uint64_t (**)(char *))(*(void *)v3 + 24);
      return v4(v3);
    }
  }
  return result;
}

void sub_2157B95F4(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157B962C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "Z30ForwardConnectionStatusChangedU13block_pointerFvPK16VZConnectionInfohEE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"Z30ForwardConnectionStatusChangedU13block_pointerFvPK16VZConnectionInfohEE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z30ForwardConnectionStatusChangedU13block_pointerFvPK16VZConnectionInfohEE3$_1")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z30ForwardConnectionStatusChangedU13block_pointerFvPK16VZConnectionInfohEE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2157B969C()
{
  return &unk_26C659300;
}

void *sub_2157B96A8(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C659320;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2157B9740(void *a1)
{
  *a1 = &unk_26C659320;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_2157B97E8(uint64_t a1)
{
  result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C659320;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_2157B9844(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C659320;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_2157B987C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_2157B98F8(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

uint64_t sub_2157B9994(uint64_t result, uint64_t a2, const void ***a3)
{
  if (*(void *)(result + 8))
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_2157B8888(a2);
    uint64_t v6 = sub_2157B9B5C(a3);
    result = (*(uint64_t (**)(void))(**(void **)(v4 + 8) + 16))();
    if (v6) {
      result = (*(uint64_t (**)(void *))(*v6 + 24))(v6);
    }
    if (v5)
    {
      int v7 = *(uint64_t (**)(char *))(*(void *)v5 + 24);
      return v7(v5);
    }
  }
  return result;
}

void sub_2157B9A70(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
    if (!v1) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157B9AE0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "Z20ForwardLoggerUpdatedU13block_pointerFvPK16VZConnectionInfoPK14VZLoggerUpdateEE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"Z20ForwardLoggerUpdatedU13block_pointerFvPK16VZConnectionInfoPK14VZLoggerUpdateEE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z20ForwardLoggerUpdatedU13block_pointerFvPK16VZConnectionInfoPK14VZLoggerUpdateEE3$_1")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z20ForwardLoggerUpdatedU13block_pointerFvPK16VZConnectionInfoPK14VZLoggerUpdateEE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2157B9B50()
{
  return &unk_26C659380;
}

void *sub_2157B9B5C(const void ***a1)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  uint64_t v2 = operator new(0x38uLL, MEMORY[0x263F8C180]);
  if (v2)
  {
    unint64_t v3 = v2;
    *uint64_t v2 = &unk_26C6565D0;
    v2[3] = 0;
    uint64_t v4 = v2 + 3;
    v2[2] = v2 + 3;
    uint64_t v5 = (uint64_t **)(v2 + 2);
    v2[4] = 0;
    int v8 = *a1;
    uint64_t v6 = a1 + 1;
    int v7 = v8;
    if (v8 != (const void **)v6)
    {
      do
      {
        sub_2157B75C4(v5, v4, v7 + 4, (uint64_t)(v7 + 4));
        unint64_t v10 = (const void **)v7[1];
        if (v10)
        {
          do
          {
            uint64_t v11 = (const void ***)v10;
            unint64_t v10 = (const void **)*v10;
          }
          while (v10);
        }
        else
        {
          do
          {
            uint64_t v11 = (const void ***)v7[2];
            BOOL v12 = *v11 == v7;
            int v7 = (const void **)v11;
          }
          while (!v12);
        }
        int v7 = (const void **)v11;
      }
      while (v11 != v6);
    }
    *((_DWORD *)v3 + 10) = 1;
    *unint64_t v3 = &unk_26C658D40;
    v3[1] = &unk_26C658D90;
    v3[6] = 0;
    return v3;
  }
  sub_2157B9F64();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D010, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D010))
  {
    sub_2157BA15C();
    int v16 = byte_26788D6F7;
    if (byte_26788D6F7 >= 0) {
      size_t v17 = byte_26788D6F7;
    }
    else {
      size_t v17 = qword_26788D6E8;
    }
    unint64_t v18 = v17 + 1;
    if (v17 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v18 >= 0x17)
    {
      uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v18 | 7) != 0x17) {
        uint64_t v20 = v18 | 7;
      }
      uint64_t v21 = v20 + 1;
      char v19 = (long long *)operator new(v20 + 1);
      *((void *)&xmmword_26788D6C8 + 1) = v17 + 1;
      unk_26788D6D8 = v21 | 0x8000000000000000;
      *(void *)&xmmword_26788D6C8 = v19;
    }
    else
    {
      char v19 = &xmmword_26788D6C8;
      unk_26788D6D8 = 0;
      xmmword_26788D6C8 = 0uLL;
      byte_26788D6DF = v17 + 1;
      if (!v17)
      {
LABEL_52:
        *(_WORD *)((char *)v19 + v17) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D6C8, &dword_21572C000);
        __cxa_guard_release(&qword_26788D010);
        goto LABEL_13;
      }
    }
    if (v16 >= 0) {
      char v22 = &qword_26788D6E0;
    }
    else {
      char v22 = (uint64_t *)qword_26788D6E0;
    }
    memmove(v19, v22, v17);
    goto LABEL_52;
  }
LABEL_13:
  if (byte_26788D6DF < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788D6C8, *((unint64_t *)&xmmword_26788D6C8 + 1));
  }
  else
  {
    long long __dst = xmmword_26788D6C8;
    uint64_t v37 = unk_26788D6D8;
  }
  sub_21573A150(&v34, (uint64_t)&__dst, 1uLL);
  v23[0] = 0;
  char v33 = 0;
  sub_21574086C((uint64_t *)&xmmword_26788D680, (uint64_t *)&v34, (uint64_t)v23, 0);
  if (v33 && v32)
  {
    if (v31)
    {
      if (v30 < 0) {
        operator delete(__p);
      }
      if (v28 < 0) {
        operator delete(v27);
      }
    }
    if (v26 && v25 < 0) {
      operator delete(v24);
    }
  }
  uint64_t v13 = (uint64_t)v34;
  if (v34)
  {
    uint64_t v14 = v35;
    size_t v15 = v34;
    if ((void *)v35 != v34)
    {
      do
      {
        if (*(char *)(v14 - 1) < 0) {
          operator delete(*(void **)(v14 - 24));
        }
        v14 -= 24;
      }
      while (v14 != v13);
      size_t v15 = v34;
    }
    uint64_t v35 = v13;
    operator delete(v15);
  }
  if (SHIBYTE(v37) < 0) {
    operator delete((void *)__dst);
  }
  return 0;
}

void sub_2157B9F30(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788D010);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157B9F48(uint64_t a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2157B9F54);
  }
  sub_215731D80(a1);
}

void sub_2157B9F64()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788CFF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788CFF8))
  {
    sub_2157BA038();
    if (byte_26788D6C7 < 0)
    {
      sub_215738B0C(&xmmword_26788D680, (void *)xmmword_26788D6B0, *((unint64_t *)&xmmword_26788D6B0 + 1));
    }
    else
    {
      xmmword_26788D680 = xmmword_26788D6B0;
      unk_26788D690 = unk_26788D6C0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D680, &dword_21572C000);
    __cxa_guard_release(&qword_26788CFF8);
  }
}

void sub_2157BA020(_Unwind_Exception *a1)
{
}

void sub_2157BA038()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D000, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D000))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZLoggerUpdate]", qword_26788D698);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D698, &dword_21572C000);
    __cxa_guard_release(&qword_26788D000);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D008, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D008))
  {
    sub_215E19DF4((uint64_t)qword_26788D698, (uint64_t)&xmmword_26788D6B0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D6B0, &dword_21572C000);
    __cxa_guard_release(&qword_26788D008);
  }
}

void sub_2157BA12C(_Unwind_Exception *a1)
{
}

void sub_2157BA144(_Unwind_Exception *a1)
{
}

void sub_2157BA15C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D018, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D018))
  {
    int v0 = sub_2157BA2F0();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      int v8 = (char *)operator new(v6 + 1);
      qword_26788D6E8 = v3 + 6;
      unk_26788D6F0 = v7 | 0x8000000000000000;
      qword_26788D6E0 = (uint64_t)v8;
      *(_DWORD *)int v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      uint64_t v5 = v8 + 6;
    }
    else
    {
      qword_26788D6E8 = 0;
      unk_26788D6F0 = 0;
      qword_26788D6E0 = 0x2074736E6F63;
      byte_26788D6F7 = v3 + 6;
      uint64_t v5 = (char *)&qword_26788D6E0 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D6E0, &dword_21572C000);
        __cxa_guard_release(&qword_26788D018);
        return;
      }
    }
    if (v2 >= 0) {
      size_t v9 = v1;
    }
    else {
      size_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157BA2D8(_Unwind_Exception *a1)
{
}

long long *sub_2157BA2F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884820, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884820))
  {
    return &xmmword_267884808;
  }
  uint64_t v1 = (char *)sub_2157BA3D8();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884808, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884818 = *((void *)v1 + 2);
    xmmword_267884808 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884808, &dword_21572C000);
  __cxa_guard_release(&qword_267884820);
  return &xmmword_267884808;
}

void sub_2157BA3C0(_Unwind_Exception *a1)
{
}

void *sub_2157BA3D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884840, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884840))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UpdateEnabledContexts]", qword_267884828);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884828, &dword_21572C000);
    __cxa_guard_release(&qword_267884840);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884860, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884860))
  {
    return &unk_267884848;
  }
  sub_215E19DF4((uint64_t)qword_267884828, (uint64_t)&unk_267884848);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884848, &dword_21572C000);
  __cxa_guard_release(&qword_267884860);
  return &unk_267884848;
}

void sub_2157BA4DC(_Unwind_Exception *a1)
{
}

void sub_2157BA4F4(_Unwind_Exception *a1)
{
}

void sub_2157BA50C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D048, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D048))
  {
    return;
  }
  sub_2157B8CD8();
  int v0 = SHIBYTE(qword_26788D5D0);
  if (qword_26788D5D0 >= 0) {
    size_t v1 = HIBYTE(qword_26788D5D0);
  }
  else {
    size_t v1 = *((void *)&xmmword_26788D5C0 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788D718 = v1 + 6;
    unk_26788D720 = v5 | 0x8000000000000000;
    qword_26788D710 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788D718 = 0;
  unk_26788D720 = 0;
  qword_26788D710 = 0x2074736E6F63;
  byte_26788D727 = v1 + 6;
  size_t v3 = (char *)&qword_26788D710 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788D5C0;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788D5C0;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D710, &dword_21572C000);

  __cxa_guard_release(&qword_26788D048);
}

void sub_2157BA690(_Unwind_Exception *a1)
{
}

void sub_2157BA6A8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D058, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D058))
  {
    return;
  }
  sub_2157B71B0();
  int v0 = SHIBYTE(qword_26788D240);
  if (qword_26788D240 >= 0) {
    size_t v1 = HIBYTE(qword_26788D240);
  }
  else {
    size_t v1 = *((void *)&xmmword_26788D230 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788D748 = v1 + 6;
    unk_26788D750 = v5 | 0x8000000000000000;
    qword_26788D740 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    size_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788D748 = 0;
  unk_26788D750 = 0;
  qword_26788D740 = 0x2074736E6F63;
  byte_26788D757 = v1 + 6;
  size_t v3 = (char *)&qword_26788D740 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788D230;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788D230;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D740, &dword_21572C000);

  __cxa_guard_release(&qword_26788D058);
}

void sub_2157BA82C(_Unwind_Exception *a1)
{
}

void sub_2157BA844()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D090, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D090))
  {
    sub_2157BA918();
    if (byte_26788D7CF < 0)
    {
      sub_215738B0C(&xmmword_26788D788, (void *)xmmword_26788D7B8, *((unint64_t *)&xmmword_26788D7B8 + 1));
    }
    else
    {
      xmmword_26788D788 = xmmword_26788D7B8;
      unk_26788D798 = unk_26788D7C8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D788, &dword_21572C000);
    __cxa_guard_release(&qword_26788D090);
  }
}

void sub_2157BA900(_Unwind_Exception *a1)
{
}

void sub_2157BA918()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D098, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D098))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZServerOptions]", qword_26788D7A0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D7A0, &dword_21572C000);
    __cxa_guard_release(&qword_26788D098);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0A0))
  {
    sub_215E19DF4((uint64_t)qword_26788D7A0, (uint64_t)&xmmword_26788D7B8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D7B8, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0A0);
  }
}

void sub_2157BAA0C(_Unwind_Exception *a1)
{
}

void sub_2157BAA24(_Unwind_Exception *a1)
{
}

void sub_2157BAA40()
{
}

__n128 sub_2157BAA54(uint64_t a1)
{
  unint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)unint64_t v2 = &unk_26C6593A0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2157BAAA0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26C6593A0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2157BAAD0(uint64_t result, uint64_t a2, unsigned __int8 *a3)
{
  if (*(void *)(result + 8))
  {
    uint64_t v3 = result;
    uint64_t v4 = *a3;
    uint64_t v5 = sub_2157B8888(a2);
    __n128 result = (*(uint64_t (**)(void, char *, uint64_t))(v3 + 8))(*(void *)(v3 + 16), v5, v4);
    if (v5)
    {
      uint64_t v6 = *(uint64_t (**)(char *))(*(void *)v5 + 24);
      return v6(v5);
    }
  }
  return result;
}

void sub_2157BAB68(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157BABA0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "Z49VZServerOptionsSetConnectionStatusChangedFunctionE3$_0") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"Z49VZServerOptionsSetConnectionStatusChangedFunctionE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z49VZServerOptionsSetConnectionStatusChangedFunctionE3$_0")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z49VZServerOptionsSetConnectionStatusChangedFunctionE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2157BAC10()
{
  return &unk_26C659400;
}

void sub_2157BAC20()
{
}

__n128 sub_2157BAC34(uint64_t a1)
{
  unint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)unint64_t v2 = &unk_26C659420;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2157BAC80(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26C659420;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2157BACB0(uint64_t result, uint64_t a2, const void ***a3)
{
  if (*(void *)(result + 8))
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_2157B8888(a2);
    uint64_t v6 = sub_2157B9B5C(a3);
    __n128 result = (*(uint64_t (**)(void, char *, void *))(v4 + 8))(*(void *)(v4 + 16), v5, v6);
    if (v6) {
      __n128 result = (*(uint64_t (**)(void *))(*v6 + 24))(v6);
    }
    if (v5)
    {
      uint64_t v7 = *(uint64_t (**)(char *))(*(void *)v5 + 24);
      return v7(v5);
    }
  }
  return result;
}

void sub_2157BAD80(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
    if (!v1) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157BADF0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "Z39VZServerOptionsSetLoggerUpdatedFunctionE3$_0") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"Z39VZServerOptionsSetLoggerUpdatedFunctionE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z39VZServerOptionsSetLoggerUpdatedFunctionE3$_0")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z39VZServerOptionsSetLoggerUpdatedFunctionE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2157BAE60()
{
  return &unk_26C659480;
}

uint64_t sub_2157BAE6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)(a1 + 5) = *(uint64_t *)((char *)a2 + 5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  if (*((unsigned char *)a2 + 40))
  {
    sub_2157BB1A4((void *)(a1 + 16), a2 + 2);
    *(unsigned char *)(a1 + 40) = 1;
  }
  int v5 = *((_DWORD *)a2 + 12);
  *(unsigned char *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 88) = 0;
  if (*((unsigned char *)a2 + 88))
  {
    uint64_t v6 = a2[10];
    if (v6)
    {
      if ((uint64_t *)v6 == a2 + 7)
      {
        *(void *)(a1 + 80) = a1 + 56;
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2[10] + 24))(a2[10], a1 + 56);
        goto LABEL_9;
      }
      uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 16))(v6);
    }
    *(void *)(a1 + 80) = v6;
LABEL_9:
    *(unsigned char *)(a1 + 88) = 1;
  }
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 128) = 0;
  if (*((unsigned char *)a2 + 128))
  {
    uint64_t v7 = a2[15];
    if (v7)
    {
      if ((uint64_t *)v7 == a2 + 12)
      {
        *(void *)(a1 + 120) = a1 + 96;
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2[15] + 24))(a2[15], a1 + 96);
        goto LABEL_16;
      }
      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 16))(v7);
    }
    *(void *)(a1 + 120) = v7;
LABEL_16:
    *(unsigned char *)(a1 + 128) = 1;
  }
  return a1;
}

void sub_2157BB004(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 128))
  {
    uint64_t v5 = *(void *)(v1 + 120);
    if (v5 == v3)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 32))(v3);
    }
    else if (v5)
    {
      (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
    }
  }
  sub_2157B6C10(v2);
  sub_2157B6CA8(v1);
  _Unwind_Resume(a1);
}

void sub_2157BB088(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 88))
  {
    uint64_t v4 = *(void *)(v1 + 80);
    if (v4 == v2)
    {
      (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
      sub_2157B6CA8(v1);
      _Unwind_Resume(a1);
    }
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 40))(v4);
    }
  }
  sub_2157B6CA8(v1);
  _Unwind_Resume(a1);
}

void sub_2157BB110(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 40))
  {
    uint64_t v4 = (char *)*v2;
    if (*v2)
    {
      uint64_t v5 = *(char **)(v1 + 24);
      uint64_t v6 = *v2;
      if (v5 != v4)
      {
        do
        {
          uint64_t v7 = (std::__shared_weak_count *)*((void *)v5 - 1);
          if (v7)
          {
            if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
              std::__shared_weak_count::__release_weak(v7);
            }
          }
          v5 -= 16;
        }
        while (v5 != v4);
        uint64_t v6 = *v2;
      }
      *(void *)(v1 + 24) = v4;
      operator delete(v6);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_2157BB1A4(void *a1, uint64_t *a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = v4 - *a2;
  if (v4 != *a2)
  {
    if (v5 < 0) {
      sub_215738AC0();
    }
    uint64_t v6 = (char *)operator new(v4 - *a2);
    uint64_t v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[16 * (v5 >> 4)];
    do
    {
      uint64_t v8 = v3 + v7;
      size_t v9 = &v6[v7];
      uint64_t v10 = *(void *)(v3 + v7 + 8);
      *(void *)size_t v9 = *(void *)(v3 + v7);
      *((void *)v9 + 1) = v10;
      if (v10) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      }
      v7 += 16;
    }
    while (v8 + 16 != v4);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_2157BB258(_Unwind_Exception *exception_object)
{
  uint64_t v3 = (char *)*v1;
  if (*v1)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = *v1;
    if (v4 != v3)
    {
      do
      {
        uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6)
        {
          if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 16;
      }
      while (v4 != v3);
      uint64_t v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157BB2E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0C0))
  {
    sub_2157BB3B8();
    if (byte_26788D817 < 0)
    {
      sub_215738B0C(&xmmword_26788D7E8, (void *)qword_26788D800, unk_26788D808);
    }
    else
    {
      xmmword_26788D7E8 = *(_OWORD *)&qword_26788D800;
      qword_26788D7F8 = unk_26788D810;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D7E8, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0C0);
  }
}

void sub_2157BB3A0(_Unwind_Exception *a1)
{
}

void sub_2157BB3B8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0C8))
  {
    sub_2157BB678(__p);
    sub_2157BB498(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D800, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0C8);
  }
}

void sub_2157BB458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788D0C8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788D0C8);
  _Unwind_Resume(a1);
}

void sub_2157BB498(void *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0D0))
  {
    sub_2157BB880();
    if (byte_26788D85F < 0)
    {
      sub_215738B0C(&xmmword_26788D818, (void *)xmmword_26788D848, *((unint64_t *)&xmmword_26788D848 + 1));
    }
    else
    {
      xmmword_26788D818 = xmmword_26788D848;
      unk_26788D828 = unk_26788D858;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D818, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0D0);
  }
  if (byte_26788D82F < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788D818, *((unint64_t *)&xmmword_26788D818 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788D818;
    uint64_t v10 = unk_26788D828;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788D800, v2, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    uint64_t v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    uint64_t v8 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2157BB630(_Unwind_Exception *a1)
{
}

void sub_2157BB64C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2157BB678(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0E8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0E8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::optional<cv3d::vl::visual_logger::ServerOptions>]", qword_26788D860);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D860, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0E8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0F0))
  {
    size_t v3 = sub_215747D98(qword_26788D860, "<", 0);
    sub_215747C90(qword_26788D860, 0, v3, qword_26788D878);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D878, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0F0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0F8))
  {
    sub_215E19DF4((uint64_t)qword_26788D878, (uint64_t)&xmmword_26788D890);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D890, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0F8);
  }
  if (byte_26788D8A7 < 0)
  {
    long long v2 = xmmword_26788D890;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788D890;
    __dst[2] = unk_26788D8A0;
  }
}

void sub_2157BB838(_Unwind_Exception *a1)
{
}

void sub_2157BB850(_Unwind_Exception *a1)
{
}

void sub_2157BB868(_Unwind_Exception *a1)
{
}

void sub_2157BB880()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0D8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0D8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::vl::visual_logger::ServerOptions]", qword_26788D830);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D830, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0D8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D0E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D0E0))
  {
    sub_215E19DF4((uint64_t)qword_26788D830, (uint64_t)&xmmword_26788D848);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D848, &dword_21572C000);
    __cxa_guard_release(&qword_26788D0E0);
  }
}

void sub_2157BB974(_Unwind_Exception *a1)
{
}

void sub_2157BB98C(_Unwind_Exception *a1)
{
}

uint64_t sub_2157BB9A4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 32)) {
    return a1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2 != a1)
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

void sub_2157BBA3C(uint64_t **a1, uint64_t a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  sub_2157BBFD8();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D118, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D118))
  {
    sub_2157BC1D0();
    if (byte_26788D91F < 0)
    {
      sub_215738B0C(&xmmword_26788D8F0, (void *)qword_26788D908, unk_26788D910);
    }
    else
    {
      xmmword_26788D8F0 = *(_OWORD *)&qword_26788D908;
      unk_26788D900 = unk_26788D918;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D8F0, &dword_21572C000);
    __cxa_guard_release(&qword_26788D118);
  }
  if (byte_26788D907 < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788D8F0, *((unint64_t *)&xmmword_26788D8F0 + 1));
  }
  else
  {
    long long __dst = xmmword_26788D8F0;
    uint64_t v23 = unk_26788D900;
  }
  sub_2157BB2E4();
  if (SHIBYTE(qword_26788D7F8) < 0)
  {
    sub_215738B0C(&v24, (void *)xmmword_26788D7E8, *((unint64_t *)&xmmword_26788D7E8 + 1));
  }
  else
  {
    long long v24 = xmmword_26788D7E8;
    uint64_t v25 = qword_26788D7F8;
  }
  uint64_t v4 = sub_215754F30();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&v26, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v27 = v4[2];
    long long v26 = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 3uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788D8A8, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (v19 && v18)
  {
    if (!v17) {
      goto LABEL_16;
    }
    if (v16 < 0)
    {
      operator delete(v15);
      if ((v14 & 0x80000000) == 0)
      {
LABEL_16:
        if (!v12) {
          goto LABEL_19;
        }
LABEL_17:
        if (v11 < 0) {
          operator delete(__p);
        }
        goto LABEL_19;
      }
    }
    else if ((v14 & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v13);
    if (!v12) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = (void **)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    uint64_t v8 = v20;
    if (v21 != v20)
    {
      do
      {
        if (*((char *)v7 - 1) < 0) {
          operator delete(*(v7 - 3));
        }
        v7 -= 3;
      }
      while (v7 != v6);
      uint64_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v27) < 0)
  {
    operator delete((void *)v26);
    if ((SHIBYTE(v25) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(v23) & 0x80000000) == 0) {
        return;
      }
LABEL_33:
      operator delete((void *)__dst);
      return;
    }
  }
  else if ((SHIBYTE(v25) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete((void *)v24);
  if (SHIBYTE(v23) < 0) {
    goto LABEL_33;
  }
}

void sub_2157BBD0C(_Unwind_Exception *a1)
{
}

void sub_2157BBD24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

uint64_t sub_2157BBDCC(uint64_t result)
{
  char v1 = (long long *)result;
  if (!*(unsigned char *)(result + 120))
  {
    exception = __cxa_allocate_exception(0x80uLL);
    long long v3 = *v1;
    sub_215741BFC(v4, v1 + 1);
    sub_215742684((uint64_t)exception, &v3);
    __cxa_throw(exception, (struct type_info *)&unk_26C656710, (void (*)(void *))sub_2157426E8);
  }
  return result;
}

void sub_2157BBE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157BBE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_21573FF04((uint64_t)&a9);
  __cxa_free_exception(v9);
  _Unwind_Resume(a1);
}

void sub_2157BBE84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2157BBE98(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_13;
    }
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_13:
        if (!*(unsigned char *)(a1 + 40)) {
          return a1;
        }
        goto LABEL_14;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
LABEL_14:
    if (*(char *)(a1 + 39) < 0)
    {
      operator delete(*(void **)(a1 + 16));
      return a1;
    }
    return a1;
  }
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  long long v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v3 || atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2157BBFD8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D100, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D100))
  {
    sub_2157BC0AC();
    if (byte_26788D8EF < 0)
    {
      sub_215738B0C(&xmmword_26788D8A8, (void *)xmmword_26788D8D8, *((unint64_t *)&xmmword_26788D8D8 + 1));
    }
    else
    {
      xmmword_26788D8A8 = xmmword_26788D8D8;
      unk_26788D8B8 = unk_26788D8E8;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D8A8, &dword_21572C000);
    __cxa_guard_release(&qword_26788D100);
  }
}

void sub_2157BC094(_Unwind_Exception *a1)
{
}

void sub_2157BC0AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D108, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D108))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZServer]", qword_26788D8C0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D8C0, &dword_21572C000);
    __cxa_guard_release(&qword_26788D108);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D110, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D110))
  {
    sub_215E19DF4((uint64_t)qword_26788D8C0, (uint64_t)&xmmword_26788D8D8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D8D8, &dword_21572C000);
    __cxa_guard_release(&qword_26788D110);
  }
}

void sub_2157BC1A0(_Unwind_Exception *a1)
{
}

void sub_2157BC1B8(_Unwind_Exception *a1)
{
}

void sub_2157BC1D0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D120, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D120))
  {
    sub_2157BC490(__p);
    sub_2157BC2B0(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788D908, &dword_21572C000);
    __cxa_guard_release(&qword_26788D120);
  }
}

void sub_2157BC270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788D120);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788D120);
  _Unwind_Resume(a1);
}

void sub_2157BC2B0(void *a1)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D128, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D128))
  {
    sub_2157BC698();
    if (byte_26788D967 < 0)
    {
      sub_215738B0C(&xmmword_26788D920, (void *)xmmword_26788D950, *((unint64_t *)&xmmword_26788D950 + 1));
    }
    else
    {
      xmmword_26788D920 = xmmword_26788D950;
      unk_26788D930 = unk_26788D960;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D920, &dword_21572C000);
    __cxa_guard_release(&qword_26788D128);
  }
  if (byte_26788D937 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788D920, *((unint64_t *)&xmmword_26788D920 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788D920;
    uint64_t v10 = unk_26788D930;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788D908, v2, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    long long v5 = v8;
    uint64_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      uint64_t v6 = __p;
    }
    uint64_t v8 = v4;
    operator delete(v6);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2157BC448(_Unwind_Exception *a1)
{
}

void sub_2157BC464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2157BC490(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D140, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D140))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::function<void (const cv3d::kit::viz::ConnectionInfo &, const cv3d::vl::visual_logger::LogMessage &)>]", qword_26788D968);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D968, &dword_21572C000);
    __cxa_guard_release(&qword_26788D140);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D148, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D148))
  {
    size_t v3 = sub_215747D98(qword_26788D968, "<", 0);
    sub_215747C90(qword_26788D968, 0, v3, qword_26788D980);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D980, &dword_21572C000);
    __cxa_guard_release(&qword_26788D148);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D150, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D150))
  {
    sub_215E19DF4((uint64_t)qword_26788D980, (uint64_t)&xmmword_26788D998);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D998, &dword_21572C000);
    __cxa_guard_release(&qword_26788D150);
  }
  if (byte_26788D9AF < 0)
  {
    long long v2 = xmmword_26788D998;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788D998;
    __dst[2] = unk_26788D9A8;
  }
}

void sub_2157BC650(_Unwind_Exception *a1)
{
}

void sub_2157BC668(_Unwind_Exception *a1)
{
}

void sub_2157BC680(_Unwind_Exception *a1)
{
}

void sub_2157BC698()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D130, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D130))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = void (const cv3d::kit::viz::ConnectionInfo &, const cv3d::vl::visual_logger::LogMessage &)]", qword_26788D938);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D938, &dword_21572C000);
    __cxa_guard_release(&qword_26788D130);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D138, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D138))
  {
    sub_215E19DF4((uint64_t)qword_26788D938, (uint64_t)&xmmword_26788D950);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D950, &dword_21572C000);
    __cxa_guard_release(&qword_26788D138);
  }
}

void sub_2157BC78C(_Unwind_Exception *a1)
{
}

void sub_2157BC7A4(_Unwind_Exception *a1)
{
}

void sub_2157BC7BC(uint64_t **a1, uint64_t a2)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  sub_2157BBFD8();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D158, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D158))
  {
    goto LABEL_2;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D160, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D160))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D168, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788D168))
    {
      sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = (lambda at /Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/VisualLogger/src/VZServer.cpp:351:37)]", qword_26788D9E0);
      __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788D9E0, &dword_21572C000);
      __cxa_guard_release(&qword_26788D168);
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D170, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788D170))
    {
      sub_215E19DF4((uint64_t)qword_26788D9E0, (uint64_t)&xmmword_26788D9F8);
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D9F8, &dword_21572C000);
      __cxa_guard_release(&qword_26788D170);
    }
    if (byte_26788DA0F < 0)
    {
      sub_215738B0C(&xmmword_26788D9C8, (void *)xmmword_26788D9F8, *((unint64_t *)&xmmword_26788D9F8 + 1));
    }
    else
    {
      xmmword_26788D9C8 = xmmword_26788D9F8;
      unk_26788D9D8 = unk_26788DA08;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D9C8, &dword_21572C000);
    __cxa_guard_release(&qword_26788D160);
  }
  int v9 = byte_26788D9DF;
  if (byte_26788D9DF >= 0) {
    size_t v10 = byte_26788D9DF;
  }
  else {
    size_t v10 = *((void *)&xmmword_26788D9C8 + 1);
  }
  unint64_t v11 = v10 + 1;
  if (v10 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v11 >= 0x17)
  {
    uint64_t v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v11 | 7) != 0x17) {
      uint64_t v13 = v11 | 7;
    }
    uint64_t v14 = v13 + 1;
    char v12 = (long long *)operator new(v13 + 1);
    *((void *)&xmmword_26788D9B0 + 1) = v10 + 1;
    unk_26788D9C0 = v14 | 0x8000000000000000;
    *(void *)&xmmword_26788D9B0 = v12;
    goto LABEL_49;
  }
  char v12 = &xmmword_26788D9B0;
  unk_26788D9C0 = 0;
  xmmword_26788D9B0 = 0uLL;
  byte_26788D9C7 = v10 + 1;
  if (v10)
  {
LABEL_49:
    if (v9 >= 0) {
      size_t v15 = &xmmword_26788D9C8;
    }
    else {
      size_t v15 = (long long *)xmmword_26788D9C8;
    }
    memmove(v12, v15, v10);
  }
  *(_WORD *)((char *)v12 + v10) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788D9B0, &dword_21572C000);
  __cxa_guard_release(&qword_26788D158);
LABEL_2:
  if (byte_26788D9C7 < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788D9B0, *((unint64_t *)&xmmword_26788D9B0 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788D9B0;
    uint64_t v30 = unk_26788D9C0;
  }
  sub_2157BB2E4();
  if (SHIBYTE(qword_26788D7F8) < 0)
  {
    sub_215738B0C(&v31, (void *)xmmword_26788D7E8, *((unint64_t *)&xmmword_26788D7E8 + 1));
  }
  else
  {
    long long v31 = xmmword_26788D7E8;
    uint64_t v32 = qword_26788D7F8;
  }
  uint64_t v4 = sub_215754F30();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&v33, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v34 = v4[2];
    long long v33 = v5;
  }
  sub_21573A150(&v27, (uint64_t)__dst, 3uLL);
  sub_215742C3C(v16, a2);
  sub_21574086C((uint64_t *)&xmmword_26788D8A8, (uint64_t *)&v27, (uint64_t)v16, **a1);
  if (!v26 || !v25) {
    goto LABEL_19;
  }
  if (!v24) {
    goto LABEL_16;
  }
  if ((v23 & 0x80000000) == 0)
  {
    if ((v21 & 0x80000000) == 0) {
      goto LABEL_16;
    }
LABEL_35:
    operator delete(v20);
    if (!v19) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  operator delete(v22);
  if (v21 < 0) {
    goto LABEL_35;
  }
LABEL_16:
  if (!v19) {
    goto LABEL_19;
  }
LABEL_17:
  if (v18 < 0) {
    operator delete(__p);
  }
LABEL_19:
  uint64_t v6 = (void **)v27;
  if (v27)
  {
    uint64_t v7 = v28;
    uint64_t v8 = v27;
    if (v28 != v27)
    {
      do
      {
        if (*((char *)v7 - 1) < 0) {
          operator delete(*(v7 - 3));
        }
        v7 -= 3;
      }
      while (v7 != v6);
      uint64_t v8 = v27;
    }
    uint64_t v28 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v34) < 0)
  {
    operator delete((void *)v33);
    if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(v30) & 0x80000000) == 0) {
        return;
      }
LABEL_33:
      operator delete(__dst[0]);
      return;
    }
  }
  else if ((SHIBYTE(v32) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete((void *)v31);
  if (SHIBYTE(v30) < 0) {
    goto LABEL_33;
  }
}

void sub_2157BCC88(_Unwind_Exception *a1)
{
}

void sub_2157BCCD4(_Unwind_Exception *a1)
{
}

void sub_2157BCCEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
}

void sub_2157BCD98()
{
}

__n128 sub_2157BCDAC(uint64_t a1)
{
  long long v2 = (char *)operator new(0x18uLL);
  *(void *)long long v2 = &unk_26C6594A0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_2157BCDF8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = &unk_26C6594A0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_2157BCE28(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(void *)(result + 8))
  {
    uint64_t v4 = result;
    long long v5 = sub_2157B8888(a2);
    uint64_t v6 = sub_21576C280(0, a3);
    __n128 result = (*(uint64_t (**)(void, char *, uint64_t))(v4 + 8))(*(void *)(v4 + 16), v5, v6);
    if (v6) {
      __n128 result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
    }
    if (v5)
    {
      uint64_t v7 = *(uint64_t (**)(char *))(*(void *)v5 + 24);
      return v7(v5);
    }
  }
  return result;
}

void sub_2157BCEFC(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
    if (!v1) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if (!v1)
  {
    goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157BCF6C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "Z26VZServerCreateWithFunctionE3$_0") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"Z26VZServerCreateWithFunctionE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "Z26VZServerCreateWithFunctionE3$_0")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"Z26VZServerCreateWithFunctionE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2157BCFDC()
{
  return &unk_26C659500;
}

void sub_2157BCFE8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D180, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D180))
  {
    return;
  }
  sub_2157BBFD8();
  int v0 = byte_26788D8BF;
  if (byte_26788D8BF >= 0) {
    size_t v1 = byte_26788D8BF;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788D8A8 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788DA30 = v1 + 6;
    unk_26788DA38 = v5 | 0x8000000000000000;
    qword_26788DA28 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    unint64_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788DA30 = 0;
  unk_26788DA38 = 0;
  qword_26788DA28 = 0x2074736E6F63;
  byte_26788DA3F = v1 + 6;
  unint64_t v3 = (char *)&qword_26788DA28 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788D8A8;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788D8A8;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DA28, &dword_21572C000);

  __cxa_guard_release(&qword_26788D180);
}

void sub_2157BD16C(_Unwind_Exception *a1)
{
}

void sub_2157BD184()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D190, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D190))
  {
    return;
  }
  sub_2157BD320();
  int v0 = byte_26788DA87;
  if (byte_26788DA87 >= 0) {
    size_t v1 = byte_26788DA87;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788DA70 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788DA60 = v1 + 6;
    unk_26788DA68 = v5 | 0x8000000000000000;
    qword_26788DA58 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    unint64_t v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788DA60 = 0;
  unk_26788DA68 = 0;
  qword_26788DA58 = 0x2074736E6F63;
  byte_26788DA6F = v1 + 6;
  unint64_t v3 = (char *)&qword_26788DA58 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788DA70;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788DA70;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DA58, &dword_21572C000);

  __cxa_guard_release(&qword_26788D190);
}

void sub_2157BD308(_Unwind_Exception *a1)
{
}

void sub_2157BD320()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D198, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D198))
  {
    sub_2157BD3F4();
    if (byte_26788DAB7 < 0)
    {
      sub_215738B0C(&xmmword_26788DA70, (void *)xmmword_26788DAA0, *((unint64_t *)&xmmword_26788DAA0 + 1));
    }
    else
    {
      xmmword_26788DA70 = xmmword_26788DAA0;
      unk_26788DA80 = unk_26788DAB0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DA70, &dword_21572C000);
    __cxa_guard_release(&qword_26788D198);
  }
}

void sub_2157BD3DC(_Unwind_Exception *a1)
{
}

void sub_2157BD3F4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D1A0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = __CFUUID]", qword_26788DA88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DA88, &dword_21572C000);
    __cxa_guard_release(&qword_26788D1A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D1A8))
  {
    sub_215E19DF4((uint64_t)qword_26788DA88, (uint64_t)&xmmword_26788DAA0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DAA0, &dword_21572C000);
    __cxa_guard_release(&qword_26788D1A8);
  }
}

void sub_2157BD4E8(_Unwind_Exception *a1)
{
}

void sub_2157BD500(_Unwind_Exception *a1)
{
}

void sub_2157BD518(uint64_t **a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_2157741C4();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1B0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788D1B0))
  {
    goto LABEL_2;
  }
  sub_2157BCFE8();
  int v8 = byte_26788DA3F;
  if (byte_26788DA3F >= 0) {
    size_t v9 = byte_26788DA3F;
  }
  else {
    size_t v9 = qword_26788DA30;
  }
  unint64_t v10 = v9 + 1;
  if (v9 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v10 >= 0x17)
  {
    uint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v12 = v10 | 7;
    }
    uint64_t v13 = v12 + 1;
    unint64_t v11 = (long long *)operator new(v12 + 1);
    *((void *)&xmmword_26788DAB8 + 1) = v9 + 1;
    unk_26788DAC8 = v13 | 0x8000000000000000;
    *(void *)&xmmword_26788DAB8 = v11;
    goto LABEL_47;
  }
  unint64_t v11 = &xmmword_26788DAB8;
  unk_26788DAC8 = 0;
  xmmword_26788DAB8 = 0uLL;
  byte_26788DACF = v9 + 1;
  if (v9)
  {
LABEL_47:
    if (v8 >= 0) {
      uint64_t v14 = &qword_26788DA28;
    }
    else {
      uint64_t v14 = (uint64_t *)qword_26788DA28;
    }
    memmove(v11, v14, v9);
  }
  *(_WORD *)((char *)v11 + v9) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DAB8, &dword_21572C000);
  __cxa_guard_release(&qword_26788D1B0);
LABEL_2:
  if (byte_26788DACF < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788DAB8, *((unint64_t *)&xmmword_26788DAB8 + 1));
  }
  else
  {
    long long __dst = xmmword_26788DAB8;
    uint64_t v29 = unk_26788DAC8;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1B8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D1B8))
  {
    sub_2157BDA08();
    if (byte_26788DB17 < 0)
    {
      sub_215738B0C(&xmmword_26788DAD0, (void *)xmmword_26788DB00, *((unint64_t *)&xmmword_26788DB00 + 1));
    }
    else
    {
      xmmword_26788DAD0 = xmmword_26788DB00;
      unk_26788DAE0 = unk_26788DB10;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DAD0, &dword_21572C000);
    __cxa_guard_release(&qword_26788D1B8);
  }
  if (byte_26788DAE7 < 0)
  {
    sub_215738B0C(&v30, (void *)xmmword_26788DAD0, *((unint64_t *)&xmmword_26788DAD0 + 1));
  }
  else
  {
    long long v30 = xmmword_26788DAD0;
    uint64_t v31 = unk_26788DAE0;
  }
  sub_21573A150(&v26, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v15, a2);
  sub_21574086C(v4, (uint64_t *)&v26, (uint64_t)v15, **a1);
  if (v25 && v24)
  {
    if (!v23) {
      goto LABEL_14;
    }
    if (v22 < 0)
    {
      operator delete(v21);
      if ((v20 & 0x80000000) == 0)
      {
LABEL_14:
        if (!v18) {
          goto LABEL_17;
        }
LABEL_15:
        if (v17 < 0) {
          operator delete(__p);
        }
        goto LABEL_17;
      }
    }
    else if ((v20 & 0x80000000) == 0)
    {
      goto LABEL_14;
    }
    operator delete(v19);
    if (!v18) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v5 = (void **)v26;
  if (v26)
  {
    uint64_t v6 = v27;
    uint64_t v7 = v26;
    if (v27 != v26)
    {
      do
      {
        if (*((char *)v6 - 1) < 0) {
          operator delete(*(v6 - 3));
        }
        v6 -= 3;
      }
      while (v6 != v5);
      uint64_t v7 = v26;
    }
    uint64_t v27 = v5;
    operator delete(v7);
  }
  if ((SHIBYTE(v31) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v29) & 0x80000000) == 0) {
      return;
    }
LABEL_29:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v30);
  if (SHIBYTE(v29) < 0) {
    goto LABEL_29;
  }
}

void sub_2157BD8D8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_26788D1B8);
  if (*(char *)(v1 - 121) < 0)
  {
    operator delete(*(void **)(v1 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2157BD964(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    sub_21573AE84(a1, *(char **)(a1 + 8));
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_2157BDA08()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D1C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::esn::random::UUID]", qword_26788DAE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DAE8, &dword_21572C000);
    __cxa_guard_release(&qword_26788D1C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788D1C8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788D1C8))
  {
    sub_215E19DF4((uint64_t)qword_26788DAE8, (uint64_t)&xmmword_26788DB00);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DB00, &dword_21572C000);
    __cxa_guard_release(&qword_26788D1C8);
  }
}

void sub_2157BDAFC(_Unwind_Exception *a1)
{
}

void sub_2157BDB14(_Unwind_Exception *a1)
{
}

uint64_t sub_2157BDB2C(uint64_t a1, void **a2)
{
  unint64_t v2 = *(void **)a1;
  if (*(void *)(*(void *)a1 + 16) != (*a2)[2]) {
    return 0;
  }
  uint64_t v5 = (void *)*v2;
  unint64_t v3 = v2 + 1;
  uint64_t v4 = v5;
  if (v5 != v3)
  {
    uint64_t v6 = (void *)**a2;
    while (1)
    {
      uint64_t v7 = *((unsigned __int8 *)v4 + 55);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = *((unsigned __int8 *)v4 + 55);
      }
      else {
        uint64_t v8 = v4[5];
      }
      uint64_t v9 = *((unsigned __int8 *)v6 + 55);
      int v10 = (char)v9;
      if ((v9 & 0x80u) != 0) {
        uint64_t v9 = v6[5];
      }
      if (v8 != v9) {
        return 0;
      }
      unint64_t v11 = (const void **)(v4 + 4);
      if (v10 >= 0) {
        uint64_t v12 = (unsigned __int8 *)(v6 + 4);
      }
      else {
        uint64_t v12 = (unsigned __int8 *)v6[4];
      }
      if ((v7 & 0x80) != 0)
      {
        BOOL v14 = memcmp(*v11, v12, v4[5]) == 0;
        uint64_t result = 0;
        if (!v14) {
          return result;
        }
      }
      else
      {
        if (*((unsigned char *)v4 + 55))
        {
          while (*(unsigned __int8 *)v11 == *v12)
          {
            unint64_t v11 = (const void **)((char *)v11 + 1);
            ++v12;
            if (!--v7) {
              goto LABEL_17;
            }
          }
          return 0;
        }
LABEL_17:
        uint64_t result = 0;
      }
      if (*((unsigned __int8 *)v4 + 56) != *((unsigned __int8 *)v6 + 56)) {
        return result;
      }
      size_t v15 = (void *)v4[1];
      char v16 = v4;
      if (v15)
      {
        do
        {
          uint64_t v4 = v15;
          size_t v15 = (void *)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          uint64_t v4 = (void *)v16[2];
          BOOL v17 = *v4 == (void)v16;
          char v16 = v4;
        }
        while (!v17);
      }
      char v18 = (void *)v6[1];
      if (v18)
      {
        do
        {
          char v19 = v18;
          char v18 = (void *)*v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          char v19 = (void *)v6[2];
          BOOL v17 = *v19 == (void)v6;
          uint64_t v6 = v19;
        }
        while (!v17);
      }
      uint64_t v6 = v19;
      if (v4 == v3) {
        return 1;
      }
    }
  }
  return 1;
}

void sub_2157BDCA4()
{
}

void sub_2157BDCB8()
{
}

uint64_t VZTimestampGetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DB80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788DB80))
  {
    return qword_26788DB78;
  }
  qword_26788DB78 = sub_21573DD88();
  __cxa_guard_release(&qword_26788DB80);
  return qword_26788DB78;
}

void *VZTimestampCreateNow()
{
  unint64_t v0 = sub_21596E280();
  uint64_t v2 = v1;
  uint64_t result = operator new(0x20uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[2] = v0;
    result[3] = v2;
    *((_DWORD *)result + 7) = 1;
    void *result = &unk_26C659540;
    result[1] = &unk_26C659590;
  }
  else
  {
    uint64_t v4 = (uint64_t *)sub_21575B068();
    char v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    v8[0] = 0;
    char v18 = 0;
    sub_21574086C(v4, (uint64_t *)&v19, (uint64_t)v8, 0);
    if (v18 && v17)
    {
      if (v16)
      {
        if (v15 < 0) {
          operator delete(__p);
        }
        if (v13 < 0) {
          operator delete(v12);
        }
      }
      if (v11 && v10 < 0) {
        operator delete(v9);
      }
    }
    uint64_t v5 = (uint64_t)v19;
    if (v19)
    {
      uint64_t v6 = v20;
      uint64_t v7 = v19;
      if ((void *)v20 != v19)
      {
        do
        {
          if (*(char *)(v6 - 1) < 0) {
            operator delete(*(void **)(v6 - 24));
          }
          v6 -= 24;
        }
        while (v6 != v5);
        uint64_t v7 = v19;
      }
      uint64_t v20 = v5;
      operator delete(v7);
    }
    return 0;
  }
  return result;
}

void *VZTimestampCreateMachContinuousNanoseconds()
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_21596E278();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t result = operator new(0x20uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[2] = v1;
    result[3] = v3;
    *((_DWORD *)result + 7) = 1;
    void *result = &unk_26C659540;
    result[1] = &unk_26C659590;
  }
  else
  {
    uint64_t v5 = (uint64_t *)sub_21575B068();
    sub_2157BEBB4();
    if (byte_26788DC2F < 0)
    {
      sub_215738B0C(&__dst, (void *)xmmword_26788DC18, *((unint64_t *)&xmmword_26788DC18 + 1));
    }
    else
    {
      long long __dst = xmmword_26788DC18;
      uint64_t v23 = unk_26788DC28;
    }
    sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
    v9[0] = 0;
    char v19 = 0;
    sub_21574086C(v5, (uint64_t *)&v20, (uint64_t)v9, 0);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    uint64_t v6 = (uint64_t)v20;
    if (v20)
    {
      uint64_t v7 = v21;
      uint64_t v8 = v20;
      if ((void *)v21 != v20)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0) {
            operator delete(*(void **)(v7 - 24));
          }
          v7 -= 24;
        }
        while (v7 != v6);
        uint64_t v8 = v20;
      }
      uint64_t v21 = v6;
      operator delete(v8);
    }
    if (SHIBYTE(v23) < 0) {
      operator delete((void *)__dst);
    }
    return 0;
  }
  return result;
}

void sub_2157BE0A4(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void *VZTimestampCreateFromMachContinuousTime(unint64_t a1)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  unint64_t v1 = sub_21596E348(a1);
  uint64_t v3 = v2;
  uint64_t result = operator new(0x20uLL, MEMORY[0x263F8C180]);
  if (result)
  {
    result[2] = v1;
    result[3] = v3;
    *((_DWORD *)result + 7) = 1;
    void *result = &unk_26C659540;
    result[1] = &unk_26C659590;
  }
  else
  {
    uint64_t v5 = (uint64_t *)sub_21575B068();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBE8, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788DBE8))
    {
      unk_26788DD48 = 0x700000000000000;
      xmmword_26788DD38 = 0x263436746E6975uLL;
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DD38, &dword_21572C000);
      __cxa_guard_release(&qword_26788DBE8);
    }
    if (byte_26788DD4F < 0)
    {
      sub_215738B0C(&__dst, (void *)xmmword_26788DD38, *((unint64_t *)&xmmword_26788DD38 + 1));
    }
    else
    {
      long long __dst = xmmword_26788DD38;
      uint64_t v23 = unk_26788DD48;
    }
    sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
    v9[0] = 0;
    char v19 = 0;
    sub_21574086C(v5, (uint64_t *)&v20, (uint64_t)v9, 0);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    uint64_t v6 = (uint64_t)v20;
    if (v20)
    {
      uint64_t v7 = v21;
      uint64_t v8 = v20;
      if ((void *)v21 != v20)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0) {
            operator delete(*(void **)(v7 - 24));
          }
          v7 -= 24;
        }
        while (v7 != v6);
        uint64_t v8 = v20;
      }
      uint64_t v21 = v6;
      operator delete(v8);
    }
    if (SHIBYTE(v23) < 0) {
      operator delete((void *)__dst);
    }
    return 0;
  }
  return result;
}

void sub_2157BE320(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

unsigned char *VZTimestampCreateSteadyNanoseconds(uint64_t a1)
{
  return sub_2157BF7E4(a1, 4);
}

unsigned char *VZTimestampCreateChronologicalNanoseconds(uint64_t a1)
{
  return sub_2157BF7E4(a1, 1);
}

uint64_t VZTimestampGetNanosecondsSinceEpoch(uint64_t a1)
{
  if (sub_2157BE388((uint64_t)"VZTimestampGetNanosecondsSinceEpoch", a1)) {
    return 0;
  }
  else {
    return *(void *)(a1 + 16);
  }
}

BOOL sub_2157BE388(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DC08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DC08))
  {
    sub_2157BFC08();
    int v5 = byte_26788DDC7;
    if (byte_26788DDC7 >= 0) {
      size_t v6 = byte_26788DDC7;
    }
    else {
      size_t v6 = qword_26788DDB8;
    }
    unint64_t v7 = v6 + 1;
    if (v6 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v7 >= 0x17)
    {
      uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v7 | 7) != 0x17) {
        uint64_t v9 = v7 | 7;
      }
      uint64_t v10 = v9 + 1;
      uint64_t v8 = (long long *)operator new(v9 + 1);
      *((void *)&xmmword_26788DD98 + 1) = v6 + 1;
      unk_26788DDA8 = v10 | 0x8000000000000000;
      *(void *)&xmmword_26788DD98 = v8;
    }
    else
    {
      unk_26788DDA8 = 0;
      xmmword_26788DD98 = 0uLL;
      uint64_t v8 = &xmmword_26788DD98;
      byte_26788DDAF = v6 + 1;
      if (!v6)
      {
LABEL_50:
        *(_WORD *)((char *)v8 + v6) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DD98, &dword_21572C000);
        __cxa_guard_release(&qword_26788DC08);
        goto LABEL_3;
      }
    }
    if (v5 >= 0) {
      char v11 = &qword_26788DDB0;
    }
    else {
      char v11 = (uint64_t *)qword_26788DDB0;
    }
    memmove(v8, v11, v6);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788DDAF < 0)
  {
    sub_215738B0C(v12, (void *)xmmword_26788DD98, *((unint64_t *)&xmmword_26788DD98 + 1));
  }
  else
  {
    *(_OWORD *)char v12 = xmmword_26788DD98;
    uint64_t v13 = unk_26788DDA8;
  }
  char v14 = 1;
  sub_21573FF94(a1, (uint64_t)v12, (uint64_t)&v15);
  long long v26 = v15;
  LOBYTE(v27) = 0;
  char v36 = 0;
  if (v25)
  {
    char v29 = 0;
    if (v18)
    {
      long long v27 = v16;
      uint64_t v28 = v17;
      uint64_t v17 = 0;
      long long v16 = 0uLL;
      char v29 = 1;
    }
    LOBYTE(v30) = 0;
    char v35 = 0;
    if (v24)
    {
      uint64_t v31 = v20;
      long long v30 = *(_OWORD *)v19;
      v19[0] = 0;
      v19[1] = 0;
      uint64_t v32 = v21;
      *(_OWORD *)__p = *(_OWORD *)v22;
      uint64_t v34 = v23;
      uint64_t v20 = 0;
      v22[0] = 0;
      v22[1] = 0;
      uint64_t v23 = 0;
      char v35 = 1;
    }
    char v36 = 1;
  }
  char v37 = 0;
  sub_21573E208(&v26, 0);
  if (!v37 && v36)
  {
    if (v35)
    {
      if (SHIBYTE(v34) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v31) < 0) {
        operator delete((void *)v30);
      }
    }
    if (v29 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
  }
  if (v25)
  {
    if (v24)
    {
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v20) < 0) {
        operator delete(v19[0]);
      }
    }
    if (v18 && SHIBYTE(v17) < 0) {
      operator delete((void *)v16);
    }
  }
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(v12[0]);
  }
  return a2 == 0;
}

void sub_2157BE6B8(_Unwind_Exception *a1)
{
}

void sub_2157BE6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZTimestampGetClockType(uint64_t a1)
{
  if (sub_2157BE388((uint64_t)"VZTimestampGetClockType", a1)) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(a1 + 24);
  }
}

uint64_t sub_2157BE754(uint64_t result)
{
  return result;
}

uint64_t sub_2157BE764(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 28), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157BE7A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DB80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788DB80))
  {
    return qword_26788DB78;
  }
  qword_26788DB78 = sub_21573DD88();
  __cxa_guard_release(&qword_26788DB80);
  return qword_26788DB78;
}

void *sub_2157BE804(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C6595F0, 0);
  if (result) {
    return (void *)(*(void *)(a1 + 16) == result[2]
  }
                   && *(unsigned __int8 *)(a1 + 24) == *((unsigned __int8 *)result + 24));
  return result;
}

void sub_2157BE88C(uint64_t a1)
{
  sub_21575B068();
  uint64_t v2 = a1;
  operator new();
}

void sub_2157BEAD8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_215733368((uint64_t)&a15);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_begin_catch(a1);
  uint64_t v23 = sub_21575B068();
  sub_215732BF4(&__p, "failed to create description");
  sub_2157402F0((std::string::size_type)v23, (const void **)&__p, 0);
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x2157BEABCLL);
}

uint64_t sub_2157BEBA8(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 28));
}

void sub_2157BEBB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DB88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DB88))
  {
    sub_2157BEC88();
    if (byte_26788DC47 < 0)
    {
      sub_215738B0C(&xmmword_26788DC18, (void *)qword_26788DC30, unk_26788DC38);
    }
    else
    {
      xmmword_26788DC18 = *(_OWORD *)&qword_26788DC30;
      unk_26788DC28 = unk_26788DC40;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DC18, &dword_21572C000);
    __cxa_guard_release(&qword_26788DB88);
  }
}

void sub_2157BEC70(_Unwind_Exception *a1)
{
}

void sub_2157BEC88()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DB90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DB90))
  {
    sub_2157BEFC4(__p);
    sub_2157BED68(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DC30, &dword_21572C000);
    __cxa_guard_release(&qword_26788DB90);
  }
}

void sub_2157BED28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788DB90);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788DB90);
  _Unwind_Resume(a1);
}

void sub_2157BED68(void *a1)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)"int64";
  uint64_t v10 = 0x500000000000000;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DB98))
  {
    sub_2157BF1CC();
    if (byte_26788DC77 < 0)
    {
      sub_215738B0C(&xmmword_26788DC48, (void *)qword_26788DC60, unk_26788DC68);
    }
    else
    {
      xmmword_26788DC48 = *(_OWORD *)&qword_26788DC60;
      unk_26788DC58 = unk_26788DC70;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DC48, &dword_21572C000);
    __cxa_guard_release(&qword_26788DB98);
  }
  if (byte_26788DC5F < 0)
  {
    sub_215738B0C(&v11, (void *)xmmword_26788DC48, *((unint64_t *)&xmmword_26788DC48 + 1));
  }
  else
  {
    long long v11 = xmmword_26788DC48;
    uint64_t v12 = unk_26788DC58;
  }
  sub_21573A150(&__p, (uint64_t)v9, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788DC30, v2, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    int v5 = v8;
    size_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      size_t v6 = __p;
    }
    uint64_t v8 = v4;
    operator delete(v6);
  }
  if ((SHIBYTE(v12) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v10) & 0x80000000) == 0) {
      return;
    }
LABEL_17:
    operator delete(v9[0]);
    return;
  }
  operator delete((void *)v11);
  if (SHIBYTE(v10) < 0) {
    goto LABEL_17;
  }
}

void sub_2157BEF4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if ((a18 & 0x80000000) == 0) {
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_2157BEFC4(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBD0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::chrono::duration<long long, std::ratio<1, 1000000000>>]", qword_26788DCF0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DCF0, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBD0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBD8))
  {
    size_t v3 = sub_215747D98(qword_26788DCF0, "<", 0);
    sub_215747C90(qword_26788DCF0, 0, v3, qword_26788DD08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DD08, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBD8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBE0))
  {
    sub_215E19DF4((uint64_t)qword_26788DD08, (uint64_t)&xmmword_26788DD20);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DD20, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBE0);
  }
  if (byte_26788DD37 < 0)
  {
    long long v2 = xmmword_26788DD20;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788DD20;
    __dst[2] = unk_26788DD30;
  }
}

void sub_2157BF184(_Unwind_Exception *a1)
{
}

void sub_2157BF19C(_Unwind_Exception *a1)
{
}

void sub_2157BF1B4(_Unwind_Exception *a1)
{
}

void sub_2157BF1CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBA0))
  {
    sub_2157BF5DC(__p);
    sub_2157BF2AC(__p);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DC60, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBA0);
  }
}

void sub_2157BF26C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_26788DBA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_26788DBA0);
  _Unwind_Resume(a1);
}

void sub_2157BF2AC(void *a1)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBA8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 1L]", v9);
    sub_215E1A038((uint64_t)v9, (std::string *)&xmmword_26788DC78);
    if (v10 < 0) {
      operator delete(v9[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DC78, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBA8);
  }
  if (byte_26788DC8F < 0)
  {
    sub_215738B0C(__dst, (void *)xmmword_26788DC78, *((unint64_t *)&xmmword_26788DC78 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788DC78;
    uint64_t v12 = unk_26788DC88;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBB0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBB0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 1000000000L]", v9);
    sub_215E1A038((uint64_t)v9, (std::string *)&xmmword_26788DC90);
    if (v10 < 0) {
      operator delete(v9[0]);
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DC90, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBB0);
  }
  if (byte_26788DCA7 < 0)
  {
    sub_215738B0C(&v13, (void *)xmmword_26788DC90, *((unint64_t *)&xmmword_26788DC90 + 1));
  }
  else
  {
    long long v13 = xmmword_26788DC90;
    uint64_t v14 = unk_26788DCA0;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, (std::string *)&qword_26788DC60, v2, v3);
  uint64_t v4 = (void **)__p;
  if (__p)
  {
    int v5 = v8;
    size_t v6 = __p;
    if (v8 != __p)
    {
      do
      {
        if (*((char *)v5 - 1) < 0) {
          operator delete(*(v5 - 3));
        }
        v5 -= 3;
      }
      while (v5 != v4);
      size_t v6 = __p;
    }
    uint64_t v8 = v4;
    operator delete(v6);
  }
  if ((SHIBYTE(v14) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v12) & 0x80000000) == 0) {
      return;
    }
LABEL_21:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v13);
  if (SHIBYTE(v12) < 0) {
    goto LABEL_21;
  }
}

void sub_2157BF528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_26788DBB0);
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(a1);
}

void sub_2157BF5DC(void *__dst)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBB8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = std::ratio<1, 1000000000>]", qword_26788DCA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DCA8, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBB8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBC0))
  {
    size_t v3 = sub_215747D98(qword_26788DCA8, "<", 0);
    sub_215747C90(qword_26788DCA8, 0, v3, qword_26788DCC0);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DCC0, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBC8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBC8))
  {
    sub_215E19DF4((uint64_t)qword_26788DCC0, (uint64_t)&xmmword_26788DCD8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DCD8, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBC8);
  }
  if (byte_26788DCEF < 0)
  {
    long long v2 = xmmword_26788DCD8;
    sub_215738B0C(__dst, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)long long __dst = xmmword_26788DCD8;
    __dst[2] = unk_26788DCE8;
  }
}

void sub_2157BF79C(_Unwind_Exception *a1)
{
}

void sub_2157BF7B4(_Unwind_Exception *a1)
{
}

void sub_2157BF7CC(_Unwind_Exception *a1)
{
}

unsigned char *sub_2157BF7E4(uint64_t a1, char a2)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t result = operator new(0x20uLL, MEMORY[0x263F8C180]);
  if (!result)
  {
    int v5 = (uint64_t *)sub_21575B068();
    sub_2157BEBB4();
    if (byte_26788DC2F < 0)
    {
      sub_215738B0C(&__dst, (void *)xmmword_26788DC18, *((unint64_t *)&xmmword_26788DC18 + 1));
    }
    else
    {
      long long __dst = xmmword_26788DC18;
      uint64_t v23 = unk_26788DC28;
    }
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBF0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_26788DBF0))
    {
      sub_2157BFAE4();
      if (byte_26788DD97 < 0)
      {
        sub_215738B0C(&xmmword_26788DD50, (void *)xmmword_26788DD80, *((unint64_t *)&xmmword_26788DD80 + 1));
      }
      else
      {
        xmmword_26788DD50 = xmmword_26788DD80;
        unk_26788DD60 = unk_26788DD90;
      }
      __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DD50, &dword_21572C000);
      __cxa_guard_release(&qword_26788DBF0);
    }
    if (byte_26788DD67 < 0)
    {
      sub_215738B0C(&v24, (void *)xmmword_26788DD50, *((unint64_t *)&xmmword_26788DD50 + 1));
    }
    else
    {
      long long v24 = xmmword_26788DD50;
      uint64_t v25 = unk_26788DD60;
    }
    sub_21573A150(&v20, (uint64_t)&__dst, 2uLL);
    v9[0] = 0;
    char v19 = 0;
    sub_21574086C(v5, (uint64_t *)&v20, (uint64_t)v9, 0);
    if (v19 && v18)
    {
      if (v17)
      {
        if (v16 < 0) {
          operator delete(__p);
        }
        if (v14 < 0) {
          operator delete(v13);
        }
      }
      if (v12 && v11 < 0) {
        operator delete(v10);
      }
    }
    uint64_t v6 = (uint64_t)v20;
    if (v20)
    {
      uint64_t v7 = v21;
      uint64_t v8 = v20;
      if ((void *)v21 != v20)
      {
        do
        {
          if (*(char *)(v7 - 1) < 0) {
            operator delete(*(void **)(v7 - 24));
          }
          v7 -= 24;
        }
        while (v7 != v6);
        uint64_t v8 = v20;
      }
      uint64_t v21 = v6;
      operator delete(v8);
    }
    if (SHIBYTE(v25) < 0)
    {
      operator delete((void *)v24);
      if ((SHIBYTE(v23) & 0x80000000) == 0) {
        return 0;
      }
    }
    else if ((SHIBYTE(v23) & 0x80000000) == 0)
    {
      return 0;
    }
    operator delete((void *)__dst);
    return 0;
  }
  result[24] = a2;
  *((_DWORD *)result + 7) = 1;
  *(void *)uint64_t result = &unk_26C659540;
  *((void *)result + 1) = &unk_26C659590;
  *((void *)result + 2) = a1;
  return result;
}

void sub_2157BFAB4(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788DBF0);
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157BFAE4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DBF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DBF8))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::time::ClockType]", qword_26788DD68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DD68, &dword_21572C000);
    __cxa_guard_release(&qword_26788DBF8);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DC00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DC00))
  {
    sub_215E19DF4((uint64_t)qword_26788DD68, (uint64_t)&xmmword_26788DD80);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DD80, &dword_21572C000);
    __cxa_guard_release(&qword_26788DC00);
  }
}

void sub_2157BFBD8(_Unwind_Exception *a1)
{
}

void sub_2157BFBF0(_Unwind_Exception *a1)
{
}

void sub_2157BFC08()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DC10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DC10))
  {
    uint64_t v0 = sub_21575B068();
    char v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      uint64_t v8 = (char *)operator new(v6 + 1);
      qword_26788DDB8 = v3 + 6;
      unk_26788DDC0 = v7 | 0x8000000000000000;
      qword_26788DDB0 = (uint64_t)v8;
      *(_DWORD *)uint64_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      int v5 = v8 + 6;
    }
    else
    {
      qword_26788DDB8 = 0;
      unk_26788DDC0 = 0;
      qword_26788DDB0 = 0x2074736E6F63;
      byte_26788DDC7 = v3 + 6;
      int v5 = (char *)&qword_26788DDB0 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DDB0, &dword_21572C000);
        __cxa_guard_release(&qword_26788DC10);
        return;
      }
    }
    if (v2 >= 0) {
      uint64_t v9 = v1;
    }
    else {
      uint64_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157BFD84(_Unwind_Exception *a1)
{
}

uint64_t sub_2157BFD9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  if (*(unsigned char *)(a1 + 80) && *(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if (!*(unsigned char *)(a1 + 48)) {
      goto LABEL_9;
    }
  }
  else if (!*(unsigned char *)(a1 + 48))
  {
    goto LABEL_9;
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
LABEL_9:
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v3) {
    MEMORY[0x2166C4D20](v3, 0x1000C4072FAA15ELL);
  }
  return a1;
}

uint64_t sub_2157BFE4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      goto LABEL_9;
    }
  }
  else if (!*(unsigned char *)(a1 + 40))
  {
    goto LABEL_9;
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
LABEL_9:
  uint64_t result = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (result) {
    return MEMORY[0x2166C4D20](result, 0x1000C4072FAA15ELL);
  }
  return result;
}

void sub_2157BFEF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  if (*(unsigned char *)(a1 + 80) && *(char *)(a1 + 79) < 0)
  {
    operator delete(*(void **)(a1 + 56));
    if (!*(unsigned char *)(a1 + 48)) {
      goto LABEL_9;
    }
  }
  else if (!*(unsigned char *)(a1 + 48))
  {
    goto LABEL_9;
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
LABEL_9:
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v3) {
    MEMORY[0x2166C4D20](v3, 0x1000C4072FAA15ELL);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157BFFC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      goto LABEL_9;
    }
  }
  else if (!*(unsigned char *)(a1 + 40))
  {
    goto LABEL_9;
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
LABEL_9:
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v3) {
    MEMORY[0x2166C4D20](v3, 0x1000C4072FAA15ELL);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t VZTransform3GetTypeID()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DDE8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788DDE8))
  {
    return qword_26788DDE0;
  }
  qword_26788DDE0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788DDE8);
  return qword_26788DDE0;
}

uint64_t VZDataCreateWithTransform3(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if (!sub_2157C06B8((uint64_t)"VZDataCreateWithTransform3", a1, a3))
  {
    sub_215744D68(a2, v9);
    uint64_t v7 = &v8;
    uint64_t v8 = a3;
    sub_215748384(v10, (uint64_t)v9);
    sub_21596E844(a1 + 16, v10);
  }
  return 0;
}

void sub_2157C04AC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x2157C04B4);
  }
  _Unwind_Resume(a1);
}

void sub_2157C04C4(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    sub_215744E28((uint64_t)&STACK[0x2F0]);
    if (a2 == 3)
    {
      exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
      std::logic_error::logic_error(&v8, exception_ptr);
      v8.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_begin_catch(a1);
      uint64_t v7 = std::logic_error::what(&v8);
      sub_2157482C8(&v13, &v7);
      sub_2159644BC((long long *)&v13, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_2157C24E8(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v15)
      {
        if (v14 < 0) {
          operator delete(v13.__vftable);
        }
      }
      MEMORY[0x2166C4250](&v8);
      __cxa_end_catch();
    }
    else if (a2 == 2)
    {
      int v5 = __cxa_get_exception_ptr(a1);
      sub_21574824C(&v13, (uint64_t)v5);
      __cxa_begin_catch(a1);
      uint64_t v6 = (const char *)(v16 + 48);
      if (*(char *)(v16 + 71) < 0) {
        uint64_t v6 = *(const char **)v6;
      }
      uint64_t v7 = v6;
      sub_2157482C8(&v8, &v7);
      sub_215964DE4((long long *)&v8, (uint64_t)&v11);
      long long v18 = v11;
      sub_215741BFC(v19, v12);
      char v20 = 1;
      sub_2157C24E8(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      sub_21573FF04((uint64_t)&v11);
      if (v10 && v9 < 0) {
        operator delete(v8.__vftable);
      }
      MEMORY[0x2166C4910](&v13);
      __cxa_end_catch();
    }
    else
    {
      __cxa_begin_catch(a1);
      LOBYTE(v18) = 0;
      char v20 = 0;
      sub_2157C24E8(v17, (uint64_t)&v18);
      sub_215740ECC((uint64_t)&v18);
      __cxa_end_catch();
    }
    JUMPOUT(0x2157C03ACLL);
  }
  _Unwind_Resume(a1);
}

void sub_2157C04DC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    JUMPOUT(0x2157C04E8);
  }
  _Unwind_Resume(a1);
}

void sub_2157C06A0(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2157C06A8);
  }
  sub_215731D80(a1);
}

BOOL sub_2157C06B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    return a2 == 0;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DDF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DDF0))
  {
    sub_2157C2154();
    int v7 = byte_26788DE9F;
    if (byte_26788DE9F >= 0) {
      size_t v8 = byte_26788DE9F;
    }
    else {
      size_t v8 = qword_26788DE90;
    }
    unint64_t v9 = v8 + 1;
    if (v8 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v9 >= 0x17)
    {
      uint64_t v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v9 | 7) != 0x17) {
        uint64_t v11 = v9 | 7;
      }
      uint64_t v12 = v11 + 1;
      char v10 = (long long *)operator new(v11 + 1);
      *((void *)&xmmword_26788DE70 + 1) = v8 + 1;
      unk_26788DE80 = v12 | 0x8000000000000000;
      *(void *)&xmmword_26788DE70 = v10;
    }
    else
    {
      unk_26788DE80 = 0;
      xmmword_26788DE70 = 0uLL;
      char v10 = &xmmword_26788DE70;
      byte_26788DE87 = v8 + 1;
      if (!v8)
      {
LABEL_50:
        *(_WORD *)((char *)v10 + v8) = 42;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DE70, &dword_21572C000);
        __cxa_guard_release(&qword_26788DDF0);
        goto LABEL_3;
      }
    }
    if (v7 >= 0) {
      std::runtime_error v13 = &qword_26788DE88;
    }
    else {
      std::runtime_error v13 = (uint64_t *)qword_26788DE88;
    }
    memmove(v10, v13, v8);
    goto LABEL_50;
  }
LABEL_3:
  if (byte_26788DE87 < 0)
  {
    sub_215738B0C(v14, (void *)xmmword_26788DE70, *((unint64_t *)&xmmword_26788DE70 + 1));
  }
  else
  {
    *(_OWORD *)char v14 = xmmword_26788DE70;
    uint64_t v15 = unk_26788DE80;
  }
  char v16 = 1;
  sub_21573FF94(a1, (uint64_t)v14, (uint64_t)&v17);
  long long v28 = v17;
  LOBYTE(v29) = 0;
  char v38 = 0;
  if (v27)
  {
    char v31 = 0;
    if (v20)
    {
      long long v29 = v18;
      uint64_t v30 = v19;
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      char v31 = 1;
    }
    LOBYTE(v32) = 0;
    char v37 = 0;
    if (v26)
    {
      uint64_t v33 = v22;
      long long v32 = *(_OWORD *)v21;
      v21[0] = 0;
      v21[1] = 0;
      uint64_t v34 = v23;
      *(_OWORD *)__p = *(_OWORD *)v24;
      uint64_t v36 = v25;
      uint64_t v22 = 0;
      v24[0] = 0;
      v24[1] = 0;
      uint64_t v25 = 0;
      char v37 = 1;
    }
    char v38 = 1;
  }
  char v39 = 0;
  sub_21573E208(&v28, a3);
  if (!v39 && v38)
  {
    if (v37)
    {
      if (SHIBYTE(v36) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v33) < 0) {
        operator delete((void *)v32);
      }
    }
    if (v31 && SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
  }
  if (v27)
  {
    if (v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[0]);
      }
      if (SHIBYTE(v22) < 0) {
        operator delete(v21[0]);
      }
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete((void *)v18);
    }
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return a2 == 0;
}

void sub_2157C09EC(_Unwind_Exception *a1)
{
}

void sub_2157C0A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t VZDataGetTransform3(uint64_t a1, uint64_t a2)
{
  if (sub_2157456B0((uint64_t)"VZDataGetTransform3", a1, a2)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 568);
  if (!v4)
  {
    uint64_t v6 = &v7;
    uint64_t v7 = a2;
    sub_21596ED9C(a1 + 32);
  }
  return v4;
}

void sub_2157C0CA0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::logic_error a10, unint64_t a11, char a12, long long a13, long long a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,std::runtime_error __dst,long long a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,char a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *__p,uint64_t a57,int a58,__int16 a59,char a60,char a61,char a62,int a63)
{
  if ((_BYTE)a66 && (_BYTE)a64)
  {
    if (a62)
    {
      if (a61 < 0) {
        operator delete(__p);
      }
      if (a54 < 0) {
        operator delete(a49);
      }
    }
    if (a48 && a47 < 0) {
      operator delete(a42);
    }
  }
  sub_2157C2A48((uint64_t *)(v67 - 192));
  if (a2 == 3)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a10, exception_ptr);
    a10.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    v71 = std::logic_error::what(&a10);
    size_t v72 = strlen(v71);
    if (v72 <= 0x7FFFFFFFFFFFFFF7)
    {
      v73 = (const char *)v72;
      if (v72 >= 0x17)
      {
        uint64_t v82 = (v72 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v72 | 7) != 0x17) {
          uint64_t v82 = v72 | 7;
        }
        uint64_t v83 = v82 + 1;
        p_dst = (std::runtime_error_vtbl *)operator new(v82 + 1);
        __dst.__imp_.__imp_ = v73;
        *(void *)&a37 = v83 | 0x8000000000000000;
        __dst.__vftable = p_dst;
      }
      else
      {
        BYTE7(a37) = v72;
        p_dst = (std::runtime_error_vtbl *)&__dst;
        if (!v72)
        {
LABEL_40:
          v73[(void)p_dst] = 0;
          BYTE8(a37) = 1;
          sub_2159644BC((long long *)&__dst, (uint64_t)&a13);
          a67 = a13;
          sub_215741BFC((unsigned char *)(v67 - 176), &a14);
          *(unsigned char *)(v67 - 72) = 1;
          sub_2157C288C((uint64_t **)(v67 - 64), v67 - 192);
          if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
          {
            if (*(unsigned char *)(v67 - 88))
            {
              if (*(char *)(v67 - 89) < 0) {
                operator delete(*(void **)(v67 - 112));
              }
              if (*(char *)(v67 - 121) < 0) {
                operator delete(*(void **)(v67 - 144));
              }
            }
            if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
              operator delete(*(void **)(v67 - 176));
            }
          }
          if ((_BYTE)a35)
          {
            if (a33)
            {
              if (a32 < 0) {
                operator delete(a27);
              }
              if (a25 < 0) {
                operator delete(a20);
              }
            }
            if (a19 && a18 < 0) {
              operator delete((void *)a14);
            }
          }
          if (BYTE8(a37))
          {
            if (SBYTE7(a37) < 0) {
              operator delete(__dst.__vftable);
            }
          }
          MEMORY[0x2166C4250](&a10);
          __cxa_end_catch();
          goto LABEL_91;
        }
      }
      memmove(p_dst, v71, (size_t)v73);
      goto LABEL_40;
    }
LABEL_90:
    sub_215731CD8();
  }
  if (a2 != 2)
  {
    __cxa_begin_catch(a1);
    *(unsigned char *)(v67 - 192) = 0;
    *(unsigned char *)(v67 - 72) = 0;
    sub_2157C288C((uint64_t **)(v67 - 64), v67 - 192);
    if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
    {
      if (*(unsigned char *)(v67 - 88))
      {
        if (*(char *)(v67 - 89) < 0) {
          operator delete(*(void **)(v67 - 112));
        }
        if (*(char *)(v67 - 121) < 0) {
          operator delete(*(void **)(v67 - 144));
        }
      }
      if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
        operator delete(*(void **)(v67 - 176));
      }
    }
    __cxa_end_catch();
LABEL_91:
    JUMPOUT(0x2157C0C14);
  }
  v75 = __cxa_get_exception_ptr(a1);
  std::runtime_error::runtime_error(&__dst, (const std::runtime_error *)v75);
  a37 = *((_OWORD *)v75 + 1);
  uint64_t v77 = *((void *)v75 + 4);
  uint64_t v76 = *((void *)v75 + 5);
  __dst.__vftable = (std::runtime_error_vtbl *)(MEMORY[0x263F8C348] + 16);
  a38 = v77;
  a39 = v76;
  if (v76) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v76 + 8), 1uLL, memory_order_relaxed);
  }
  __cxa_begin_catch(a1);
  v78 = (const char *)(a38 + 48);
  if (*(char *)(a38 + 71) < 0) {
    v78 = *(const char **)v78;
  }
  size_t v79 = strlen(v78);
  if (v79 > 0x7FFFFFFFFFFFFFF7) {
    goto LABEL_90;
  }
  v80 = (const char *)v79;
  if (v79 >= 0x17)
  {
    uint64_t v84 = (v79 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v79 | 7) != 0x17) {
      uint64_t v84 = v79 | 7;
    }
    uint64_t v85 = v84 + 1;
    v81 = (std::logic_error_vtbl *)operator new(v84 + 1);
    a10.__imp_.__imp_ = v80;
    a11 = v85 | 0x8000000000000000;
    a10.__vftable = v81;
  }
  else
  {
    HIBYTE(a11) = v79;
    v81 = (std::logic_error_vtbl *)&a10;
    if (!v79)
    {
LABEL_67:
      v80[(void)v81] = 0;
      a12 = 1;
      sub_215964DE4((long long *)&a10, (uint64_t)&a13);
      a67 = a13;
      sub_215741BFC((unsigned char *)(v67 - 176), &a14);
      *(unsigned char *)(v67 - 72) = 1;
      sub_2157C288C((uint64_t **)(v67 - 64), v67 - 192);
      if (*(unsigned char *)(v67 - 72) && *(unsigned char *)(v67 - 80))
      {
        if (*(unsigned char *)(v67 - 88))
        {
          if (*(char *)(v67 - 89) < 0) {
            operator delete(*(void **)(v67 - 112));
          }
          if (*(char *)(v67 - 121) < 0) {
            operator delete(*(void **)(v67 - 144));
          }
        }
        if (*(unsigned char *)(v67 - 152) && *(char *)(v67 - 153) < 0) {
          operator delete(*(void **)(v67 - 176));
        }
      }
      if ((_BYTE)a35)
      {
        if (a33)
        {
          if (a32 < 0) {
            operator delete(a27);
          }
          if (a25 < 0) {
            operator delete(a20);
          }
        }
        if (a19 && a18 < 0) {
          operator delete((void *)a14);
        }
      }
      if (a12 && SHIBYTE(a11) < 0) {
        operator delete(a10.__vftable);
      }
      MEMORY[0x2166C4910](&__dst);
      __cxa_end_catch();
      goto LABEL_91;
    }
  }
  memmove(v81, v78, (size_t)v80);
  goto LABEL_67;
}

uint64_t VZTransform3Create(uint64_t a1, char *a2, char *a3)
{
  int v5 = a1;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (!sub_2157A75AC((uint64_t)"VZTransform3Create", a1, 0))
  {
    uint64_t v6 = operator new(0x68uLL, MEMORY[0x263F8C180]);
    if (v6)
    {
      void *v6 = &unk_26C6565D0;
      sub_21596E590(v6 + 16, v5 + 16, a2, a3);
    }
    sub_2157C22F0();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DE20, memory_order_acquire) & 1) != 0
      || !__cxa_guard_acquire(&qword_26788DE20))
    {
LABEL_6:
      if (byte_26788DF17 < 0)
      {
        sub_215738B0C(&__dst, (void *)xmmword_26788DF00, *((unint64_t *)&xmmword_26788DF00 + 1));
      }
      else
      {
        long long __dst = xmmword_26788DF00;
        uint64_t v38 = unk_26788DF10;
      }
      size_t v8 = sub_21575C17C();
      if (*((char *)v8 + 23) < 0)
      {
        sub_215738B0C(&v39, (void *)*v8, v8[1]);
      }
      else
      {
        long long v9 = *(_OWORD *)v8;
        uint64_t v40 = v8[2];
        long long v39 = v9;
      }
      char v10 = sub_21575C17C();
      if (*((char *)v10 + 23) < 0)
      {
        sub_215738B0C(&v41, (void *)*v10, v10[1]);
      }
      else
      {
        long long v11 = *(_OWORD *)v10;
        uint64_t v42 = v10[2];
        long long v41 = v11;
      }
      sub_21573A150(&v35, (uint64_t)&__dst, 3uLL);
      v24[0] = 0;
      char v34 = 0;
      sub_21574086C((uint64_t *)&xmmword_26788DEA0, (uint64_t *)&v35, (uint64_t)v24, 0);
      if (v34 && v33)
      {
        if (v32)
        {
          if (v31 < 0) {
            operator delete(__p);
          }
          if (v29 < 0) {
            operator delete(v28);
          }
        }
        if (v27 && v26 < 0) {
          operator delete(v25);
        }
      }
      uint64_t v12 = (void **)v35;
      if (v35)
      {
        std::runtime_error v13 = v36;
        char v14 = v35;
        if (v36 != v35)
        {
          do
          {
            if (*((char *)v13 - 1) < 0) {
              operator delete(*(v13 - 3));
            }
            v13 -= 3;
          }
          while (v13 != v12);
          char v14 = v35;
        }
        uint64_t v36 = v12;
        operator delete(v14);
      }
      if (SHIBYTE(v42) < 0)
      {
        operator delete((void *)v41);
        if ((SHIBYTE(v40) & 0x80000000) == 0)
        {
LABEL_35:
          if ((SHIBYTE(v38) & 0x80000000) == 0) {
            return 0;
          }
          goto LABEL_39;
        }
      }
      else if ((SHIBYTE(v40) & 0x80000000) == 0)
      {
        goto LABEL_35;
      }
      operator delete((void *)v39);
      if ((SHIBYTE(v38) & 0x80000000) == 0) {
        return 0;
      }
LABEL_39:
      operator delete((void *)__dst);
      return 0;
    }
    uint64_t v15 = sub_2157AAEB0();
    char v16 = (const void **)v15;
    int v17 = *((char *)v15 + 23);
    if (v17 >= 0) {
      size_t v18 = *((unsigned __int8 *)v15 + 23);
    }
    else {
      size_t v18 = v15[1];
    }
    unint64_t v19 = v18 + 1;
    if (v18 + 1 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v19 >= 0x17)
    {
      uint64_t v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v19 | 7) != 0x17) {
        uint64_t v21 = v19 | 7;
      }
      uint64_t v22 = v21 + 1;
      char v20 = (long long *)operator new(v21 + 1);
      *((void *)&xmmword_26788DF00 + 1) = v18 + 1;
      unk_26788DF10 = v22 | 0x8000000000000000;
      *(void *)&xmmword_26788DF00 = v20;
    }
    else
    {
      char v20 = &xmmword_26788DF00;
      unk_26788DF10 = 0;
      xmmword_26788DF00 = 0uLL;
      byte_26788DF17 = v18 + 1;
      if (!v18)
      {
LABEL_55:
        *(_WORD *)((char *)v20 + v18) = 38;
        __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DF00, &dword_21572C000);
        __cxa_guard_release(&qword_26788DE20);
        goto LABEL_6;
      }
    }
    if (v17 >= 0) {
      uint64_t v23 = v16;
    }
    else {
      uint64_t v23 = *v16;
    }
    memmove(v20, v23, v18);
    goto LABEL_55;
  }
  return 0;
}

void sub_2157C1590(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788DE20);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157C15A8(uint64_t a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2157C15B4);
  }
  sub_215731D80(a1);
}

uint64_t VZTransform3GetValueType(uint64_t a1)
{
  if (sub_2157C06B8((uint64_t)"VZTransform3GetValueType", a1, 0)) {
    return 255;
  }
  int v3 = *(unsigned __int8 *)(*(void *)(a1 + 16) + 136);
  if (v3 == 2 || v3 == 5) {
    return 12;
  }
  else {
    return 11;
  }
}

uint64_t VZTransform3GetSE3(uint64_t a1)
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  BOOL v2 = sub_2157C06B8((uint64_t)"VZTransform3GetSE3", a1, 0);
  uint64_t result = 0;
  if (!v2)
  {
    uint64_t result = *(void *)(a1 + 96);
    if (!result) {
      operator new();
    }
  }
  return result;
}

void sub_2157C1A20(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    __cxa_guard_abort(&qword_26788DDC8);
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157C1A3C(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x2157C1A6CLL);
  }
  sub_215731D80(a1);
}

uint64_t VZTransform3GetSource(uint64_t a1)
{
  BOOL v2 = sub_2157C06B8((uint64_t)"VZTransform3GetSource", a1, 0);
  uint64_t result = 0;
  if (!v2)
  {
    if (*(unsigned char *)(a1 + 48))
    {
      uint64_t result = a1 + 24;
      if (*(char *)(a1 + 47) < 0) {
        return *(void *)result;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t VZTransform3GetDestination(uint64_t a1)
{
  BOOL v2 = sub_2157C06B8((uint64_t)"VZTransform3GetDestination", a1, 0);
  uint64_t result = 0;
  if (!v2)
  {
    if (*(unsigned char *)(a1 + 80))
    {
      uint64_t result = a1 + 56;
      if (*(char *)(a1 + 79) < 0) {
        return *(void *)result;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2157C1B64(uint64_t result)
{
  return result;
}

uint64_t sub_2157C1B74(uint64_t result)
{
  if (atomic_fetch_add((atomic_uint *volatile)(result + 88), 0xFFFFFFFF) == 1) {
    return (*(uint64_t (**)(void))(*(void *)(result + 8) + 8))();
  }
  return result;
}

uint64_t sub_2157C1BB0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DDE8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788DDE8))
  {
    return qword_26788DDE0;
  }
  qword_26788DDE0 = sub_21573DD88();
  __cxa_guard_release(&qword_26788DDE8);
  return qword_26788DDE0;
}

void *sub_2157C1C14(uint64_t a1, void *lpsrc)
{
  uint64_t result = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C656610, (const struct __class_type_info *)&unk_26C659700, 0);
  if (result) {
    return (void *)sub_215B27430(a1 + 16, (uint64_t)result + 16);
  }
  return result;
}

uint64_t sub_2157C1C98(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  __cxa_begin_catch(a1);
  sub_2157C22F0();
  sub_215732BF4(v20, "failed to compare equal");
  sub_2157402F0((std::string::size_type)&xmmword_26788DEA0, v20, 0);
  if (v21 < 0) {
    operator delete((void *)v20[0]);
  }
  __cxa_end_catch();
  return 0;
}

void sub_2157C1CF0(uint64_t a1)
{
  sub_2157C22F0();
  uint64_t v2 = a1;
  operator new();
}

uint64_t sub_2157C1F44(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  sub_215733368((uint64_t)&v34);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_begin_catch(a1);
  sub_2157C22F0();
  sub_215732BF4(v32, "failed to create description");
  sub_2157402F0((std::string::size_type)&xmmword_26788DEA0, v32, 0);
  if (v33 < 0) {
    operator delete((void *)v32[0]);
  }
  __cxa_end_catch();
  return 0;
}

uint64_t sub_2157C2024(uint64_t a1)
{
  return atomic_load((unsigned int *)(a1 + 88));
}

void sub_2157C2030()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DDD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DDD0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::SE3]", qword_26788DE40);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DE40, &dword_21572C000);
    __cxa_guard_release(&qword_26788DDD0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DDD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DDD8))
  {
    sub_215E19DF4((uint64_t)qword_26788DE40, (uint64_t)&xmmword_26788DE58);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DE58, &dword_21572C000);
    __cxa_guard_release(&qword_26788DDD8);
  }
}

void sub_2157C2124(_Unwind_Exception *a1)
{
}

void sub_2157C213C(_Unwind_Exception *a1)
{
}

void sub_2157C2154()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DDF8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788DDF8))
  {
    return;
  }
  sub_2157C22F0();
  int v0 = byte_26788DEB7;
  if (byte_26788DEB7 >= 0) {
    size_t v1 = byte_26788DEB7;
  }
  else {
    size_t v1 = *((void *)&xmmword_26788DEA0 + 1);
  }
  unint64_t v2 = v1 + 6;
  if (v1 + 6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v2 >= 0x17)
  {
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v4 = v2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = (char *)operator new(v4 + 1);
    qword_26788DE90 = v1 + 6;
    unk_26788DE98 = v5 | 0x8000000000000000;
    qword_26788DE88 = (uint64_t)v6;
    *(_DWORD *)uint64_t v6 = 1936617315;
    *((_WORD *)v6 + 2) = 8308;
    int v3 = v6 + 6;
    goto LABEL_14;
  }
  qword_26788DE90 = 0;
  unk_26788DE98 = 0;
  qword_26788DE88 = 0x2074736E6F63;
  byte_26788DE9F = v1 + 6;
  int v3 = (char *)&qword_26788DE88 + 6;
  if (v1)
  {
LABEL_14:
    if (v0 >= 0) {
      uint64_t v7 = &xmmword_26788DEA0;
    }
    else {
      uint64_t v7 = (long long *)xmmword_26788DEA0;
    }
    memmove(v3, v7, v1);
  }
  v3[v1] = 0;
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DE88, &dword_21572C000);

  __cxa_guard_release(&qword_26788DDF8);
}

void sub_2157C22D8(_Unwind_Exception *a1)
{
}

void sub_2157C22F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DE00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DE00))
  {
    sub_2157C23C4();
    if (byte_26788DEE7 < 0)
    {
      sub_215738B0C(&xmmword_26788DEA0, (void *)xmmword_26788DED0, *((unint64_t *)&xmmword_26788DED0 + 1));
    }
    else
    {
      xmmword_26788DEA0 = xmmword_26788DED0;
      unk_26788DEB0 = unk_26788DEE0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DEA0, &dword_21572C000);
    __cxa_guard_release(&qword_26788DE00);
  }
}

void sub_2157C23AC(_Unwind_Exception *a1)
{
}

void sub_2157C23C4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DE08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DE08))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = VZTransform3]", qword_26788DEB8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788DEB8, &dword_21572C000);
    __cxa_guard_release(&qword_26788DE08);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DE10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DE10))
  {
    sub_215E19DF4((uint64_t)qword_26788DEB8, (uint64_t)&xmmword_26788DED0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DED0, &dword_21572C000);
    __cxa_guard_release(&qword_26788DE10);
  }
}

void sub_2157C24B8(_Unwind_Exception *a1)
{
}

void sub_2157C24D0(_Unwind_Exception *a1)
{
}

void sub_2157C24E8(uint64_t **a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v4 = (uint64_t *)sub_21574875C();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DE18, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788DE18))
  {
    goto LABEL_2;
  }
  sub_2157C2154();
  int v10 = byte_26788DE9F;
  if (byte_26788DE9F >= 0) {
    size_t v11 = byte_26788DE9F;
  }
  else {
    size_t v11 = qword_26788DE90;
  }
  unint64_t v12 = v11 + 1;
  if (v11 + 1 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v12 >= 0x17)
  {
    uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v14 = v12 | 7;
    }
    uint64_t v15 = v14 + 1;
    std::runtime_error v13 = (long long *)operator new(v14 + 1);
    *((void *)&xmmword_26788DEE8 + 1) = v11 + 1;
    unk_26788DEF8 = v15 | 0x8000000000000000;
    *(void *)&xmmword_26788DEE8 = v13;
    goto LABEL_43;
  }
  std::runtime_error v13 = &xmmword_26788DEE8;
  unk_26788DEF8 = 0;
  xmmword_26788DEE8 = 0uLL;
  byte_26788DEFF = v11 + 1;
  if (v11)
  {
LABEL_43:
    if (v10 >= 0) {
      char v16 = &qword_26788DE88;
    }
    else {
      char v16 = (uint64_t *)qword_26788DE88;
    }
    memmove(v13, v16, v11);
  }
  *(_WORD *)((char *)v13 + v11) = 38;
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788DEE8, &dword_21572C000);
  __cxa_guard_release(&qword_26788DE18);
LABEL_2:
  if (byte_26788DEFF < 0)
  {
    sub_215738B0C(&__dst, (void *)xmmword_26788DEE8, *((unint64_t *)&xmmword_26788DEE8 + 1));
  }
  else
  {
    long long __dst = xmmword_26788DEE8;
    uint64_t v31 = unk_26788DEF8;
  }
  uint64_t v5 = sub_215747548();
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&v32, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v33 = *((void *)v5 + 2);
    long long v32 = v6;
  }
  sub_21573A150(&v28, (uint64_t)&__dst, 2uLL);
  sub_215742C3C(v17, a2);
  sub_21574086C(v4, (uint64_t *)&v28, (uint64_t)v17, **a1);
  if (!v27 || !v26) {
    goto LABEL_16;
  }
  if (!v25) {
    goto LABEL_13;
  }
  if ((v24 & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    operator delete(v21);
    if (!v20) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  operator delete(v23);
  if (v22 < 0) {
    goto LABEL_30;
  }
LABEL_13:
  if (!v20) {
    goto LABEL_16;
  }
LABEL_14:
  if (v19 < 0) {
    operator delete(__p);
  }
LABEL_16:
  uint64_t v7 = (void **)v28;
  if (v28)
  {
    size_t v8 = v29;
    long long v9 = v28;
    if (v29 != v28)
    {
      do
      {
        if (*((char *)v8 - 1) < 0) {
          operator delete(*(v8 - 3));
        }
        v8 -= 3;
      }
      while (v8 != v7);
      long long v9 = v28;
    }
    char v29 = v7;
    operator delete(v9);
  }
  if ((SHIBYTE(v33) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v31) & 0x80000000) == 0) {
      return;
    }
LABEL_28:
    operator delete((void *)__dst);
    return;
  }
  operator delete((void *)v32);
  if (SHIBYTE(v31) < 0) {
    goto LABEL_28;
  }
}

void sub_2157C2814(_Unwind_Exception *a1)
{
}

void sub_2157C282C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  sub_215740ECC((uint64_t)&a9);
  sub_2157352DC(&a25);
  if (*(char *)(v25 - 97) < 0) {
    operator delete(*(void **)(v25 - 120));
  }
  if (*(char *)(v25 - 121) < 0)
  {
    operator delete(*(void **)(v25 - 144));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157C288C(uint64_t **a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  sub_2157C22F0();
  uint64_t v4 = sub_21574A5CC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(&__dst, (void *)*v4, v4[1]);
  }
  else
  {
    long long v5 = *(_OWORD *)v4;
    uint64_t v23 = v4[2];
    long long __dst = v5;
  }
  sub_21573A150(&v20, (uint64_t)&__dst, 1uLL);
  sub_215742C3C(v9, a2);
  sub_21574086C((uint64_t *)&xmmword_26788DEA0, (uint64_t *)&v20, (uint64_t)v9, **a1);
  if (!v19 || !v18) {
    goto LABEL_12;
  }
  if (!v17) {
    goto LABEL_9;
  }
  if ((v16 & 0x80000000) == 0)
  {
    if ((v14 & 0x80000000) == 0) {
      goto LABEL_9;
    }
LABEL_24:
    operator delete(v13);
    if (!v12) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  operator delete(v15);
  if (v14 < 0) {
    goto LABEL_24;
  }
LABEL_9:
  if (!v12) {
    goto LABEL_12;
  }
LABEL_10:
  if (v11 < 0) {
    operator delete(__p);
  }
LABEL_12:
  uint64_t v6 = (uint64_t)v20;
  if (v20)
  {
    uint64_t v7 = v21;
    size_t v8 = v20;
    if ((void *)v21 != v20)
    {
      do
      {
        if (*(char *)(v7 - 1) < 0) {
          operator delete(*(void **)(v7 - 24));
        }
        v7 -= 24;
      }
      while (v7 != v6);
      size_t v8 = v20;
    }
    uint64_t v21 = v6;
    operator delete(v8);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_2157C2A0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215740ECC((uint64_t)va);
  sub_2157352DC((void **)(v2 - 72));
  if (*(char *)(v2 - 25) < 0) {
    operator delete(*(void **)(v2 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_2157C2A48(uint64_t *a1)
{
  if (*((unsigned char *)a1 + 120))
  {
    if (*((unsigned char *)a1 + 64) && *((char *)a1 + 63) < 0) {
      operator delete((void *)a1[5]);
    }
    if (*((unsigned char *)a1 + 32) && *((char *)a1 + 31) < 0) {
      operator delete((void *)a1[1]);
    }
    uint64_t v2 = *a1;
    *a1 = 0;
    if (v2) {
      MEMORY[0x2166C4D20](v2, 0x1000C4072FAA15ELL);
    }
    return a1;
  }
  if (!*((unsigned char *)a1 + 112)) {
    return a1;
  }
  if (!*((unsigned char *)a1 + 104)) {
    goto LABEL_15;
  }
  if (*((char *)a1 + 103) < 0)
  {
    operator delete((void *)a1[10]);
    if (*((char *)a1 + 71) < 0) {
      goto LABEL_19;
    }
LABEL_15:
    if (*((unsigned char *)a1 + 40)) {
      goto LABEL_16;
    }
    return a1;
  }
  if ((*((char *)a1 + 71) & 0x80000000) == 0) {
    goto LABEL_15;
  }
LABEL_19:
  operator delete((void *)a1[6]);
  if (!*((unsigned char *)a1 + 40)) {
    return a1;
  }
LABEL_16:
  if ((*((char *)a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete((void *)a1[2]);
  return a1;
}

uint64_t sub_2157C2B30(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 24);
  if (*(void *)(*(void *)a1 + 16)) {
    BOOL v2 = v1 == 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (v2
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  return v1;
}

void sub_2157C2BA4(const void *a1@<X0>, size_t a2@<X1>, uint64_t a3@<X8>)
{
  size_t v40 = a2;
  if (!a1 && a2)
  {
    sub_2157C2FA0("bytes pointer is null but num_bytes is ", &v40);
    if (SBYTE7(v19) < 0)
    {
      sub_215738B0C(__dst, v18[0], (unint64_t)v18[1]);
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)v18;
      uint64_t v21 = v19;
    }
    char v22 = 1;
    LOBYTE(v23) = 0;
    char v27 = 0;
    char v28 = 1;
    sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)&v29);
    *(_OWORD *)a3 = v29;
    *(unsigned char *)(a3 + 16) = 0;
    *(unsigned char *)(a3 + 112) = 0;
    if (v39)
    {
      *(unsigned char *)(a3 + 40) = 0;
      int v13 = v32;
      if (v32)
      {
        *(_OWORD *)(a3 + 16) = __p;
        *(void *)(a3 + 32) = v31;
        uint64_t v31 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a3 + 40) = 1;
      }
      *(unsigned char *)(a3 + 48) = 0;
      *(unsigned char *)(a3 + 104) = 0;
      if (v38)
      {
        uint64_t v14 = v35;
        *(void *)(a3 + 64) = v34;
        *(_OWORD *)(a3 + 48) = v33;
        long long v33 = 0uLL;
        *(void *)(a3 + 72) = v14;
        *(_OWORD *)(a3 + 80) = v36;
        *(void *)(a3 + 96) = v37;
        uint64_t v34 = 0;
        long long v36 = 0uLL;
        uint64_t v37 = 0;
        *(unsigned char *)(a3 + 104) = 1;
      }
      *(unsigned char *)(a3 + 112) = 1;
      *(unsigned char *)(a3 + 120) = 0;
      if (v13 && SHIBYTE(v31) < 0) {
        operator delete((void *)__p);
      }
      if (!v28) {
        goto LABEL_37;
      }
    }
    else
    {
      *(unsigned char *)(a3 + 120) = 0;
      if (!v28) {
        goto LABEL_37;
      }
    }
    if (!v27) {
      goto LABEL_34;
    }
    if (v26 < 0)
    {
      operator delete(v25);
      if ((v24 & 0x80000000) == 0)
      {
LABEL_34:
        if (v22) {
          goto LABEL_35;
        }
        goto LABEL_37;
      }
    }
    else if ((v24 & 0x80000000) == 0)
    {
      goto LABEL_34;
    }
    operator delete(v23);
    if (v22)
    {
LABEL_35:
      if (SHIBYTE(v21) < 0) {
        operator delete(__dst[0]);
      }
    }
LABEL_37:
    if ((SBYTE7(v19) & 0x80000000) == 0) {
      return;
    }
    char v12 = v18[0];
LABEL_40:
    operator delete(v12);
    return;
  }
  if (a1 || !a2)
  {
    uint64_t v15 = 0;
    char v16 = 0;
    char v17 = 0;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v15 = 0;
    char v16 = 0;
    char v17 = 0;
  }
  if ((a2 & 0x8000000000000000) != 0) {
    sub_2157C3CEC();
  }
  uint64_t v6 = (char *)operator new(a2);
  uint64_t v7 = &v6[a2];
  uint64_t v15 = v6;
  char v17 = &v6[a2];
  memcpy(v6, a1, a2);
  char v16 = v7;
LABEL_12:
  sub_215D0B178((uint64_t)&v29, (uint64_t)&v15);
  long long v8 = v29;
  *(_OWORD *)char v18 = v29;
  long long v19 = __p;
  long long v9 = (char *)operator new(0x38uLL);
  int v10 = (std::__shared_weak_count *)v9;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *(void *)long long v9 = &unk_26C659760;
  *(_OWORD *)(v9 + 24) = v8;
  v18[0] = 0;
  v18[1] = 0;
  *(_OWORD *)(v9 + 40) = v19;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v9 + 1, 1uLL, memory_order_relaxed);
  *(void *)a3 = v9 + 24;
  *(void *)(a3 + 8) = v9;
  *(unsigned char *)(a3 + 120) = 1;
  if (!atomic_fetch_add((atomic_ullong *volatile)v9 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v9 + 16))(v9);
    std::__shared_weak_count::__release_weak(v10);
  }
  char v11 = (std::__shared_weak_count *)v18[1];
  if (v18[1] && !atomic_fetch_add((atomic_ullong *volatile)v18[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  char v12 = v15;
  if (v15)
  {
    char v16 = v15;
    goto LABEL_40;
  }
}

void sub_2157C2F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157C2FA0(char *__s, unint64_t *a2)
{
  int v5 = 0;
  sub_2157C4454(v4, __s);
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1) {
    sub_215742D4C();
  }
  long long v8 = v7;
  ((void (*)(void **, _DWORD *))off_26C6597D8[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  if (v5 == -1) {
    sub_215742D4C();
  }
  v7[0] = &v6;
  uint64_t result = ((uint64_t (*)(void *, _DWORD *))off_26C6597F0[v5])(v7, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void *, _DWORD *))off_26C6597C0[v5])(v7, v4);
  }
  return result;
}

void sub_2157C30A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C30BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2157C30ACLL);
}

void sub_2157C30E0(void (**a1)(uint64_t), long long *a2)
{
  v10[4] = *(void (**)(uint64_t))MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  uint64_t v5 = *((void *)*a1 + 2);
  uint64_t v6 = *((void *)*a1 + 3);
  if (v5) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    uint64_t v4 = *a1;
  }
  long long v8 = a1[1];
  v10[1] = v4;
  v10[2] = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)v8 + 1, 1uLL, memory_order_relaxed);
  }
  v10[0] = (void (*)(uint64_t))sub_2157C42BC;
  sub_215D0C170(&v9, v10, v5, v6);
  if (v10[0]) {
    ((void (*)(void, void (**)(uint64_t), void, void, void))v10[0])(0, v10, 0, 0, 0);
  }
  sub_2157C32E0((uint64_t)&v9, a2);
}

void sub_2157C3278(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

void sub_2157C32E0(uint64_t a1, long long *a2)
{
  v31[5] = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384)) {
    sub_2157C4548();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v14) = info.numer;
      LODWORD(v15) = info.denom;
      *(double *)&qword_267890880 = (double)v14 / (double)v15;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      char v17 = v4;
      LOBYTE(v18) = 0;
      char v20 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v18, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v18 = *a2;
          uint64_t v19 = *((void *)a2 + 2);
        }
        char v20 = 1;
        LOBYTE(v21) = 0;
        char v23 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_22:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v21, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v21 = a2[6];
            uint64_t v22 = *((void *)a2 + 14);
          }
          char v23 = 1;
          LOBYTE(v24) = 0;
          char v25 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_14:
            LOBYTE(v26) = 0;
            char v30 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v26, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v26 = a2[2];
                uint64_t v27 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v28 = _X0;
              uint64_t v29 = 0;
              char v30 = 1;
            }
            sub_215746DAC((uint64_t)v31, (uint64_t)(a2 + 11));
            sub_2157C46B0();
          }
LABEL_13:
          long long v24 = a2[8];
          char v25 = 1;
          goto LABEL_14;
        }
LABEL_12:
        LOBYTE(v24) = 0;
        char v25 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
LABEL_11:
      LOBYTE(v21) = 0;
      char v23 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_22;
      }
      goto LABEL_12;
    }
  }
  mach_timebase_info info = v3;
  char v17 = v4;
  LOBYTE(v18) = 0;
  char v20 = 0;
  goto LABEL_11;
}

void sub_2157C3634(_Unwind_Exception *a1)
{
}

void sub_2157C364C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157C3704(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C6598A0, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_14:
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      goto LABEL_15;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_14;
  }
LABEL_9:
  uint64_t v8 = *(void *)(a1 + 424);
  uint64_t v7 = *(void *)(a1 + 432);
  if (v7)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
    uint64_t v23 = v8;
    uint64_t v24 = v7;
    if (v8)
    {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
      uint64_t v9 = *(void *)(v8 + 24);
      uint64_t v10 = *(void *)(v8 + 32);
      if (!v9) {
        goto LABEL_26;
      }
      goto LABEL_24;
    }
LABEL_15:
    char v11 = sub_215AB5250(9u);
    char v12 = v11;
    if (v11[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v11, *((void *)v11 + 1));
    }
    else
    {
      long long v13 = *(_OWORD *)v11;
      *(void *)&long long v27 = *((void *)v11 + 2);
      long long __dst = v13;
    }
    DWORD2(v27) = *((_DWORD *)v12 + 6);
    sub_2157C3E6C(&v22, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v19, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
      uint64_t v20 = *(void *)(a1 + 16);
    }
    int v21 = *(_DWORD *)(a1 + 24);
    char v16 = operator new(0x20uLL);
    long long v17 = xmmword_215E9AB80;
    strcpy((char *)v16, "cannot return data as VZBlob");
    char v18 = 1;
    sub_215964570((long long **)&v22, (uint64_t)v19, (uint64_t)&v16);
  }
  uint64_t v23 = *(void *)(a1 + 424);
  uint64_t v24 = 0;
  if (!v8) {
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v8 + 32);
  if (!v9) {
    goto LABEL_26;
  }
LABEL_24:
  if (!v10
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
LABEL_26:
  v25[1] = (void (*)(uint64_t))v8;
  v25[2] = (void (*)(uint64_t))v7;
  v25[0] = (void (*)(uint64_t))sub_2157C4124;
  sub_215D0C170(&__dst, v25, v9, v10);
  if (v25[0]) {
    ((void (*)(void, void (**)(uint64_t), void, void, void))v25[0])(0, v25, 0, 0, 0);
  }
  unint64_t v14 = (char *)operator new(0x38uLL);
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = 0;
  long long v15 = v27;
  *(_OWORD *)(v14 + 24) = __dst;
  *(void *)unint64_t v14 = &unk_26C659760;
  *(_OWORD *)(v14 + 40) = v15;
  *(void *)a2 = v14 + 24;
  *(void *)(a2 + 8) = v14;
  *(unsigned char *)(a2 + 120) = 1;
  if (v7)
  {
    if (!atomic_fetch_add((atomic_ullong *volatile)(v7 + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(uint64_t))(*(void *)v7 + 16))(v7);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v7);
    }
  }
}

void sub_2157C3BC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void **sub_2157C3C78(void **a1)
{
  BOOL v2 = (void **)*a1;
  if (*a1)
  {
    mach_timebase_info v3 = (void **)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 9) < 0) {
          operator delete(*(v3 - 4));
        }
        v3 -= 4;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_2157C3CEC()
{
}

uint64_t sub_2157C3D04(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v5 = *a3;
  *(void *)(a1 + 16) = *((void *)a3 + 2);
  *(_OWORD *)a1 = v5;
  *((void *)a3 + 1) = 0;
  *((void *)a3 + 2) = 0;
  *(void *)a3 = 0;
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a3 + 6);
  __n128 v6 = sub_215748434(a1 + 32, a3 + 2);
  uint64_t v7 = *((void *)a3 + 53);
  uint64_t v8 = *((void *)a3 + 54);
  *(void *)(a1 + 416) = &unk_26C678D20;
  *(void *)(a1 + 424) = v7;
  *(void *)(a1 + 432) = v8;
  *((void *)a3 + 53) = 0;
  *((void *)a3 + 54) = 0;
  *(unsigned char *)(a1 + 448) = 0;
  *(unsigned char *)(a1 + 480) = 0;
  if (*((unsigned char *)a3 + 480))
  {
    *(void *)(a1 + 448) = 0;
    *(void *)(a1 + 456) = 0;
    uint64_t v9 = (void (*)(uint64_t, __n128))*((void *)a3 + 56);
    if (v9) {
      v9(2, v6);
    }
    *(unsigned char *)(a1 + 480) = 1;
  }
  *(unsigned char *)(a1 + 488) = 0;
  *(unsigned char *)(a1 + 512) = 0;
  if (*((unsigned char *)a3 + 512))
  {
    *(void *)(a1 + 488) = &unk_26C684900;
    *(_OWORD *)(a1 + 496) = a3[31];
    *((void *)a3 + 62) = 0;
    *((void *)a3 + 63) = 0;
    *(unsigned char *)(a1 + 512) = 1;
  }
  return a1;
}

void sub_2157C3E08(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void (**sub_2157C3E24(void (**a1)(void, void, void, void, void)))(void, void, void, void, void)
{
  if (*a1) {
    (*a1)(0, a1, 0, 0, 0);
  }
  return a1;
}

void *sub_2157C3E6C(void *a1, uint64_t a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    if (a3 >> 59) {
      sub_2157C3CEC();
    }
    uint64_t v5 = 32 * a3;
    __n128 v6 = (char *)operator new(32 * a3);
    uint64_t v7 = 0;
    *a1 = v6;
    a1[1] = v6;
    a1[2] = &v6[v5];
    do
    {
      uint64_t v9 = &v6[v7];
      uint64_t v10 = (long long *)(a2 + v7);
      if (*(char *)(a2 + v7 + 23) < 0)
      {
        sub_215738B0C(v9, *(void **)v10, *((void *)v10 + 1));
      }
      else
      {
        long long v8 = *v10;
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *(_OWORD *)uint64_t v9 = v8;
      }
      *(_DWORD *)&v6[v7 + 24] = *(_DWORD *)(a2 + v7 + 24);
      v7 += 32;
    }
    while (v5 != v7);
    a1[1] = &v6[v7];
  }
  return a1;
}

void sub_2157C3F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_2157C3F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  for (; v11; v11 -= 32)
  {
    if (*(char *)(v10 + v11 - 9) < 0) {
      operator delete(*(void **)(v10 + v11 - 32));
    }
  }
  *(void *)(v9 + 8) = v10;
  sub_2157C3F98(&a9);
  _Unwind_Resume(a1);
}

void ***sub_2157C3F98(void ***result)
{
  uint64_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    BOOL v2 = *result;
    mach_timebase_info v3 = (void **)**result;
    if (v3)
    {
      uint64_t v4 = (void **)v2[1];
      uint64_t v5 = **result;
      if (v4 != v3)
      {
        do
        {
          if (*((char *)v4 - 9) < 0) {
            operator delete(*(v4 - 4));
          }
          v4 -= 4;
        }
        while (v4 != v3);
        uint64_t v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_2157C4030(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659760;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157C4050(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659760;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2157C40A4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void *sub_2157C4124(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C6597A0;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_2157C4124;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_2157C4124;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con4BlobENS3_7PackageELj9EvEEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con4BlobENS3_7PackageELj9EvEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con4BlobENS3_7PackageELj9EvEEEE"))return 0; {
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3viz11PackageDataINS2_3con4BlobENS3_7PackageELj9EvEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          }
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215E9AC30)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      long long v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

void *sub_2157C42BC(unsigned int a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C6597B0;
  switch(v5)
  {
    case 1:
      uint64_t v9 = a2[2];
      a3[1] = a2[1];
      a3[2] = v9;
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_2157C42BC;
      return result;
    case 2:
      uint64_t result = 0;
      *(_OWORD *)(a3 + 1) = *(_OWORD *)(a2 + 1);
      a2[1] = 0;
      a2[2] = 0;
      *a3 = sub_2157C42BC;
      *a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        unint64_t v10 = *(void *)(a4 + 8);
        if ((char *)v10 != "NSt3__110shared_ptrIKN4cv3d3kit3con4BlobEEE")
        {
          if (((v10 & (unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con4BlobEEE" & 0x8000000000000000) != 0) == __OFSUB__(v10, "NSt3__110shared_ptrIKN4cv3d3kit3con4BlobEEE")) {
            return 0;
          }
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIKN4cv3d3kit3con4BlobEEE" & 0x7FFFFFFFFFFFFFFFLL)))
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215E9AC60)
      {
        return 0;
      }
      return a2 + 1;
    case 4:
      return result;
    default:
      long long v8 = (std::__shared_weak_count *)a2[2];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      uint64_t result = 0;
      *a2 = 0;
      return result;
  }
}

_DWORD *sub_2157C4454(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6597C0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157C4548()
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v0 = mach_continuous_time();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v1) = info.numer;
      LODWORD(v2) = info.denom;
      *(double *)&qword_267890880 = (double)v1 / (double)v2;
      __cxa_guard_release(&qword_267890888);
    }
  }
  unint64_t v4 = llround(*(double *)&qword_267890880 * (double)v0);
  uint64_t v5 = 2;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v10 = 0;
  char v11 = 0;
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  char v15 = 0;
  sub_2157C46B0();
}

void sub_2157C4680(_Unwind_Exception *a1)
{
}

void sub_2157C4698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2157C6F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C46B0()
{
}

void sub_2157C47A8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157C47DC(_Unwind_Exception *a1)
{
  mach_timebase_info v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x2166C4D20](v1, 0x10F3C409A2DB966);
  _Unwind_Resume(a1);
}

void *sub_2157C4848(void *a1)
{
  *a1 = &unk_26C6598C8;
  sub_2157C6F18((uint64_t)(a1 + 6));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157C48E4(void *a1)
{
  *a1 = &unk_26C6598C8;
  sub_2157C6F18((uint64_t)(a1 + 6));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157C4990(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_2157C4998(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C659888, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = a1[3];
      if (v5 != *(void *)(result + 24)) {
        return 0;
      }
      char v6 = (unsigned __int8 *)a1[4];
      char v7 = *(unsigned __int8 **)(result + 32);
      char v8 = &v6[v5];
      char v9 = &v7[v5];
      if (v5)
      {
        for (uint64_t i = v5 - 1; ; --i)
        {
          uint64_t v11 = i;
          if (*v6 != *v7) {
            break;
          }
          ++v6;
          ++v7;
          if (!v11)
          {
            char v7 = v9;
            char v6 = v8;
            return v6 == v8 && v7 == v9;
          }
        }
        return 0;
      }
      return v6 == v8 && v7 == v9;
    }
  }
  return result;
}

void sub_2157C4A8C()
{
}

void sub_2157C4B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157C4B44()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884A20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884A20))
  {
    uint64_t v0 = sub_2157C5DEC();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      uint64_t v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267884A08, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267884A18 = *(void *)(v5 - 8);
      xmmword_267884A08 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884A08, &dword_21572C000);
    __cxa_guard_release(&qword_267884A20);
  }
  sub_2157C6864(&xmmword_267884A08, (uint64_t)"{");
}

void sub_2157C4C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2157C4C80(_Unwind_Exception *a1)
{
}

void sub_2157C4C98(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 9;
}

void sub_2157C4CC4(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_2157C4D14(void *a1)
{
  *a1 = &unk_26C6598C8;
  sub_2157C6F18((uint64_t)(a1 + 6));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157C4DB0(void *a1)
{
  *a1 = &unk_26C6598C8;
  sub_2157C6F18((uint64_t)(a1 + 6));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157C4E5C()
{
  uint64_t v0 = sub_2157C5840();
  sub_2157C5168(v0, (uint64_t)"{");
}

void sub_2157C4EB8()
{
  int v0 = 0;
  sub_2157C5398();
}

void sub_2157C4F54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C6597C0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157C4F8C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_2157C4FB8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  if (*(unsigned char *)(a2 + 40))
  {
    if (*(char *)(a2 + 39) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 16), *(void **)(a2 + 16), *(void *)(a2 + 24));
    }
    else
    {
      long long v4 = *(_OWORD *)(a2 + 16);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = v4;
    }
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  if (*(unsigned char *)(a2 + 72))
  {
    if (*(char *)(a2 + 71) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 48), *(void **)(a2 + 48), *(void *)(a2 + 56));
    }
    else
    {
      long long v5 = *(_OWORD *)(a2 + 48);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = v5;
    }
    *(unsigned char *)(a1 + 72) = 1;
  }
  long long v6 = *(_OWORD *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = 0;
  *(void *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 160) = 0;
  if (*(unsigned char *)(a2 + 160))
  {
    if (*(char *)(a2 + 135) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 112), *(void **)(a2 + 112), *(void *)(a2 + 120));
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 112);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = v8;
    }
    _X0 = 0;
    _X1 = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *(void *)(a1 + 144) = _X0;
    *(void *)(a1 + 152) = 0;
    *(unsigned char *)(a1 + 160) = 1;
  }
  sub_215746DAC(a1 + 176, a2 + 176);
  return a1;
}

void sub_2157C5100(_Unwind_Exception *exception_object)
{
  if (v2[160] && v2[135] < 0) {
    operator delete(*v4);
  }
  if (v2[72] && v2[71] < 0) {
    operator delete(*v3);
  }
  if (v2[40])
  {
    if (v2[39] < 0) {
      operator delete(*v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157C5168(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157C5398();
}

void sub_2157C5308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C5320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C5334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C5348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C535C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C5370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C5384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C5398()
{
}

void sub_2157C5584(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157C55A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157C55EC()
{
}

void sub_2157C57D8(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157C57FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_2157C5840()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678848E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678848E0))
  {
    return &xmmword_2678848C8;
  }
  uint64_t v1 = sub_2157C5928();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678848C8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678848D8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678848C8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678848C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678848E0);
  return &xmmword_2678848C8;
}

void sub_2157C5910(_Unwind_Exception *a1)
{
}

std::string *sub_2157C5928()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884900, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884900))
  {
    return &stru_2678848E8;
  }
  sub_2157C5BDC((uint64_t)__p);
  sub_2157C5A24(__p, &stru_2678848E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678848E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884900);
  return &stru_2678848E8;
}

void sub_2157C59E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884900);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884900);
  _Unwind_Resume(a1);
}

void sub_2157C5A24(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157C5DEC();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  long long v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  char v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    char v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2157C5B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157C5BDC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884980, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884980))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Blob>]", qword_267884968);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884968, &dword_21572C000);
    __cxa_guard_release(&qword_267884980);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678849A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678849A0))
  {
    size_t v3 = sub_215747D98(qword_267884968, "<", 0);
    sub_215747C90(qword_267884968, 0, v3, qword_267884988);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884988, &dword_21572C000);
    __cxa_guard_release(&qword_2678849A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678849C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678849C0))
  {
    sub_215E19DF4((uint64_t)qword_267884988, (uint64_t)&xmmword_2678849A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678849A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678849C0);
  }
  if (byte_2678849BF < 0)
  {
    long long v2 = xmmword_2678849A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678849A8;
    *(void *)(a1 + 16) = unk_2678849B8;
  }
}

void sub_2157C5DA4(_Unwind_Exception *a1)
{
}

void sub_2157C5DBC(_Unwind_Exception *a1)
{
}

void sub_2157C5DD4(_Unwind_Exception *a1)
{
}

long long *sub_2157C5DEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884920, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884920))
  {
    return &xmmword_267884908;
  }
  uint64_t v1 = (char *)sub_2157C5ED4();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884908, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884918 = *((void *)v1 + 2);
    xmmword_267884908 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884908, &dword_21572C000);
  __cxa_guard_release(&qword_267884920);
  return &xmmword_267884908;
}

void sub_2157C5EBC(_Unwind_Exception *a1)
{
}

void *sub_2157C5ED4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884940, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884940))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Blob]", qword_267884928);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884928, &dword_21572C000);
    __cxa_guard_release(&qword_267884940);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884960, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884960))
  {
    return &unk_267884948;
  }
  sub_215E19DF4((uint64_t)qword_267884928, (uint64_t)&unk_267884948);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884948, &dword_21572C000);
  __cxa_guard_release(&qword_267884960);
  return &unk_267884948;
}

void sub_2157C5FD8(_Unwind_Exception *a1)
{
}

void sub_2157C5FF0(_Unwind_Exception *a1)
{
}

long long *sub_2157C6008()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884880, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884880))
  {
    return &xmmword_267884868;
  }
  uint64_t v1 = (char *)sub_2157C60F0();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884868, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884878 = *((void *)v1 + 2);
    xmmword_267884868 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884868, &dword_21572C000);
  __cxa_guard_release(&qword_267884880);
  return &xmmword_267884868;
}

void sub_2157C60D8(_Unwind_Exception *a1)
{
}

void *sub_2157C60F0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678848A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678848A0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::UnknownPackage]", qword_267884888);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884888, &dword_21572C000);
    __cxa_guard_release(&qword_2678848A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678848C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678848C0))
  {
    return &unk_2678848A8;
  }
  sub_215E19DF4((uint64_t)qword_267884888, (uint64_t)&unk_2678848A8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678848A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678848C0);
  return &unk_2678848A8;
}

void sub_2157C61F4(_Unwind_Exception *a1)
{
}

void sub_2157C620C(_Unwind_Exception *a1)
{
}

void sub_2157C6224(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v9 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v8 = *((void *)a1 + 2);
  }
  int v9 = 1;
  p_dst = &__dst;
  uint64_t v11 = a2;
  char v12 = &__dst;
  uint64_t v13 = a2;
  uint64_t v14 = a2;
  sub_2157492F0((uint64_t *)&v12, (uint64_t)&__dst);
  p_dst = &__dst;
  uint64_t v11 = a3;
  char v12 = &__dst;
  uint64_t v13 = a3;
  uint64_t v14 = a3;
  if (v9 != -1)
  {
    p_p_dst = &p_dst;
    ((void (*)(long long ***, long long *))off_26C659808[v9])(&p_p_dst, &__dst);
    p_dst = &__dst;
    uint64_t v11 = a4;
    char v12 = &__dst;
    uint64_t v13 = a4;
    uint64_t v14 = a4;
    if (v9 != -1)
    {
      p_p_dst = &p_dst;
      ((void (*)(long long ***, long long *))off_26C659820[v9])(&p_p_dst, &__dst);
      sub_2157C55EC();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_2157C63FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C6414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C6428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C643C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C6450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C6464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C6478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_2157C648C()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678849E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678849E0))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2157C5DEC();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    uint64_t v13 = 0xC00000000000000;
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    size_t v3 = sub_2157C6760();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    uint64_t v17 = 0x400000000000000;
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_2678849C8, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678849C8, &dword_21572C000);
        __cxa_guard_release(&qword_2678849E0);
        return &stru_2678849C8;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_2678849C8;
}

void sub_2157C667C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_2678849E0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_2678849E0);
  _Unwind_Resume(a1);
}

std::string *sub_2157C6760()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884A00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884A00))
  {
    return &stru_2678849E8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 9U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678849E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678849E8, &dword_21572C000);
  __cxa_guard_release(&qword_267884A00);
  return &stru_2678849E8;
}

void sub_2157C6824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884A00);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884A00);
  _Unwind_Resume(a1);
}

void sub_2157C6864(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157C5398();
}

void sub_2157C69A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C69C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C69D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C69E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C69FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157C6A10(char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v32 = *MEMORY[0x263EF8340];
  if (a2)
  {
    char v10 = a1;
    uint64_t v11 = 0;
    *(void *)a6 = 0;
    *(void *)(a6 + 8) = 0;
    *(void *)(a6 + 16) = 0;
    uint64_t v29 = a1;
    __p[0] = a1;
    char v12 = &a1[a2];
    while (1)
    {
      std::string::size_type v15 = v12;
      if (v10 != v12)
      {
        if (a4)
        {
          std::string::size_type v15 = v10;
LABEL_10:
          uint64_t v16 = a4;
          uint64_t v17 = a3;
          while (*v17 != *v15)
          {
            ++v17;
            if (!--v16)
            {
              if (++v15 != v12) {
                goto LABEL_10;
              }
              goto LABEL_14;
            }
          }
        }
        else
        {
LABEL_14:
          std::string::size_type v15 = v12;
        }
      }
      uint64_t v29 = v15;
      if (a5 != 1 && v15 == v10) {
        goto LABEL_6;
      }
      if ((unint64_t)v11 >= *(void *)(a6 + 16))
      {
        uint64_t v11 = sub_2157C6CB0((void **)a6, (uint64_t *)__p, &v29);
        goto LABEL_5;
      }
      unint64_t v18 = v15 - v10;
      if ((unint64_t)(v15 - v10) >= 0x7FFFFFFFFFFFFFF8) {
        sub_215731CD8();
      }
      if (v18 > 0x16)
      {
        uint64_t v21 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v18 | 7) != 0x17) {
          uint64_t v21 = v18 | 7;
        }
        uint64_t v22 = v21 + 1;
        uint64_t v19 = (char *)operator new(v21 + 1);
        *((void *)v11 + 1) = v18;
        *((void *)v11 + 2) = v22 | 0x8000000000000000;
        *(void *)uint64_t v11 = v19;
        unint64_t v20 = v15 - v10;
        if (v15 == v10)
        {
LABEL_3:
          uint64_t v13 = v19;
          goto LABEL_4;
        }
      }
      else
      {
        v11[23] = v18;
        uint64_t v19 = v11;
        unint64_t v20 = v15 - v10;
        if (v15 == v10) {
          goto LABEL_3;
        }
      }
      if (v20 < 0x20 || (unint64_t)(v19 - v10) < 0x20)
      {
        uint64_t v23 = v10;
        uint64_t v13 = v19;
      }
      else
      {
        uint64_t v23 = &v10[v20 & 0xFFFFFFFFFFFFFFE0];
        uint64_t v13 = &v19[v20 & 0xFFFFFFFFFFFFFFE0];
        uint64_t v24 = v19 + 16;
        char v25 = (long long *)(v10 + 16);
        unint64_t v26 = v20 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v27 = *v25;
          *(v24 - 1) = *(v25 - 1);
          *uint64_t v24 = v27;
          v24 += 2;
          v25 += 2;
          v26 -= 32;
        }
        while (v26);
        if (v20 == (v20 & 0xFFFFFFFFFFFFFFE0)) {
          goto LABEL_4;
        }
      }
      do
      {
        char v28 = *v23++;
        *v13++ = v28;
      }
      while (v23 != v15);
LABEL_4:
      char *v13 = 0;
      v11 += 24;
      *(void *)(a6 + 8) = v11;
LABEL_5:
      *(void *)(a6 + 8) = v11;
      char v10 = v29;
LABEL_6:
      __p[0] = v10 + 1;
      if (v10++ == v12) {
        return;
      }
    }
  }
  if (a5)
  {
    char v31 = 0;
    LOBYTE(__p[0]) = 0;
    sub_21573A150((void *)a6, (uint64_t)__p, 1uLL);
    if (v31 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(void *)a6 = 0;
    *(void *)(a6 + 8) = 0;
    *(void *)(a6 + 16) = 0;
  }
}

void sub_2157C6C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157C6CB0(void **a1, uint64_t *a2, char **a3)
{
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v5) {
    unint64_t v5 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v8 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v8 = v5;
  }
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v9 = (char *)operator new(24 * v8);
  }
  else
  {
    char v9 = 0;
  }
  char v10 = &v9[24 * v4];
  char v31 = v10;
  uint64_t v32 = v10;
  long long v33 = &v9[24 * v8];
  uint64_t v11 = *a2;
  char v12 = *a3;
  unint64_t v13 = (unint64_t)&(*a3)[-v11];
  if (v13 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v13 <= 0x16)
  {
    v10[23] = v13;
    if ((char *)v11 != v12) {
      goto LABEL_14;
    }
LABEL_23:
    std::string::size_type v15 = v10;
    goto LABEL_26;
  }
  uint64_t v20 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v13 | 7) != 0x17) {
    uint64_t v20 = v13 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v22 = (char *)operator new(v20 + 1);
  *((void *)v10 + 1) = v13;
  *((void *)v10 + 2) = v21 | 0x8000000000000000;
  *(void *)char v10 = v22;
  char v10 = v22;
  if ((char *)v11 == v12) {
    goto LABEL_23;
  }
LABEL_14:
  if (v13 < 0x20 || (unint64_t)&v10[-v11] < 0x20)
  {
    long long v14 = (char *)v11;
    std::string::size_type v15 = v10;
    do
    {
LABEL_25:
      char v23 = *v14++;
      *v15++ = v23;
    }
    while (v14 != v12);
    goto LABEL_26;
  }
  long long v14 = (char *)(v11 + (v13 & 0xFFFFFFFFFFFFFFE0));
  std::string::size_type v15 = &v10[v13 & 0xFFFFFFFFFFFFFFE0];
  uint64_t v16 = v10 + 16;
  uint64_t v17 = (long long *)(v11 + 16);
  unint64_t v18 = v13 & 0xFFFFFFFFFFFFFFE0;
  do
  {
    long long v19 = *v17;
    *(v16 - 1) = *(v17 - 1);
    *uint64_t v16 = v19;
    v16 += 2;
    v17 += 2;
    v18 -= 32;
  }
  while (v18);
  if (v13 != (v13 & 0x7FFFFFFFFFFFFFE0)) {
    goto LABEL_25;
  }
LABEL_26:
  char *v15 = 0;
  uint64_t v24 = v31;
  char v25 = v32 + 24;
  unint64_t v26 = (void **)*a1;
  long long v27 = (void **)a1[1];
  if (v27 == *a1)
  {
    *a1 = v31;
    a1[1] = v25;
    a1[2] = v33;
  }
  else
  {
    do
    {
      long long v28 = *(_OWORD *)(v27 - 3);
      *((void *)v24 - 1) = *(v27 - 1);
      *(_OWORD *)(v24 - 24) = v28;
      v24 -= 24;
      *(v27 - 2) = 0;
      *(v27 - 1) = 0;
      *(v27 - 3) = 0;
      v27 -= 3;
    }
    while (v27 != v26);
    long long v27 = (void **)*a1;
    uint64_t v29 = (void **)a1[1];
    *a1 = v24;
    a1[1] = v25;
    a1[2] = v33;
    while (v29 != v27)
    {
      if (*((char *)v29 - 1) < 0) {
        operator delete(*(v29 - 3));
      }
      v29 -= 3;
    }
  }
  if (v27) {
    operator delete(v27);
  }
  return v32 + 24;
}

void sub_2157C6F04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2157C6F18(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 200))
  {
    uint64_t v2 = *(void *)(a1 + 176);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 184);
      unint64_t v4 = *(void **)(a1 + 176);
      if (v3 == v2)
      {
LABEL_14:
        *(void *)(a1 + 184) = v2;
        operator delete(v4);
        goto LABEL_15;
      }
      while (1)
      {
        if (*(unsigned char *)(v3 - 16) && *(char *)(v3 - 41) < 0)
        {
          operator delete(*(void **)(v3 - 64));
          if (*(unsigned char *)(v3 - 72))
          {
LABEL_9:
            if (*(char *)(v3 - 73) < 0) {
              operator delete(*(void **)(v3 - 96));
            }
          }
        }
        else if (*(unsigned char *)(v3 - 72))
        {
          goto LABEL_9;
        }
        v3 -= 96;
        if (v3 == v2)
        {
          unint64_t v4 = *(void **)(a1 + 176);
          goto LABEL_14;
        }
      }
    }
  }
LABEL_15:
  if (*(unsigned char *)(a1 + 160) && *(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    if (!*(unsigned char *)(a1 + 72)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(a1 + 72))
  {
    goto LABEL_21;
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
LABEL_21:
  if (!*(unsigned char *)(a1 + 40) || (*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_2157C7028(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>, float a5@<S2>, float a6@<S3>)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  int v12 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8)))
  {
    if (v12 == 11)
    {
      sub_2157C86C4(a2, a1, a3, a4, a5, a6);
    }
    else
    {
      sub_2157C8BC0(a2, a1, a3, a4, a5, a6);
    }
  }
  else if (v12 == 11)
  {
    sub_2157C7C90(a2, a1, a3, a4, a5, a6);
  }
  else
  {
    sub_2157C818C(a2, a1, a3, a4, a5, a6);
  }
}

void sub_2157C71F0(uint64_t a1, int a2)
{
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  if (a2 != 12 || v4 != 11) {
    return;
  }
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  if (v5 != 1)
  {
    if (!v5)
    {
      if (v6 == 2)
      {
        char v38 = *(const void **)(a1 + 8);
        if (!v38
          || (char v39 = (float32x4_t *)__dynamic_cast(v38, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A330, 0), (v41 = v39) == 0))
        {
          uint64_t v42 = sub_2157D3B28();
          sub_215D23BE0(a1, (const char *)v42, (uint64_t)"trying to cast camera");
        }
        v40.i32[0] = v39[3].i32[0];
        float32x4_t v43 = v39[2];
        float64x2_t v44 = vcvtq_f64_f32(*(float32x2_t *)&v39[1].u32[2]);
        float64x2_t v103 = vcvtq_f64_f32(*(float32x2_t *)v39[1].f32);
        float64x2_t v104 = v44;
        float64x2_t v105 = vcvtq_f64_f32(*(float32x2_t *)v43.f32);
        float64x2_t v106 = vcvt_hight_f64_f32(v43);
        uint64_t v107 = *(_OWORD *)&vcvtq_f64_f32(v40);
        uint64_t v108 = 0x3EE4F8B588E368F1;
        int v109 = 10;
        sub_2157D099C((uint64_t)&v91, (uint64_t *)&v103);
        long long v50 = v92;
        long long v54 = v93;
        std::__shared_count v58 = v94;
        long long v62 = v95;
        std::__shared_count v76 = *(std::__shared_count *)&v97[24];
        long long v72 = *(_OWORD *)&v97[8];
        long long v80 = *(_OWORD *)&v97[40];
        long long v88 = v100;
        long long v66 = v96;
        int v70 = *(_DWORD *)v97;
        uint64_t v90 = v101;
        std::__shared_count v86 = v99;
        long long v84 = v98;
        __int16 v45 = v102;
        int v46 = (std::__shared_weak_count_vtbl *)v41[7].i64[1];
        unint64_t v13 = (std::__shared_weak_count *)operator new(0xF8uLL);
        v13->__shared_weak_owners_ = 0;
        v13->__shared_owners_ = 0;
        p_shared_owners = &v13->__shared_owners_;
        v13->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659BF8;
        v13[1].__shared_owners_ = (uint64_t)&unk_26C659B18;
        *(_OWORD *)&v13[1].__shared_weak_owners_ = v50;
        long long v33 = v13 + 1;
        *(_OWORD *)&v13[2].__shared_owners_ = v54;
        v13[3].std::__shared_count = v58;
        *(_OWORD *)&v13[3].__shared_weak_owners_ = v62;
        *(_OWORD *)&v13[4].__shared_owners_ = v66;
        LODWORD(v13[5].__vftable) = v70;
        *(_OWORD *)&v13[5].__shared_owners_ = v72;
        v13[6].std::__shared_count = v76;
        v13[9].__shared_owners_ = v90;
        v13[8].std::__shared_count = v86;
        *(_OWORD *)&v13[8].__shared_weak_owners_ = v88;
        *(_OWORD *)&v13[6].__shared_weak_owners_ = v80;
        *(_OWORD *)&v13[7].__shared_owners_ = v84;
        LOWORD(v13[9].__shared_weak_owners_) = v45;
        v13[10].__vftable = v46;
        uint64_t v34 = (std::__shared_weak_count_vtbl *)&unk_26C659B78;
LABEL_22:
        v13[1].__vftable = v34;
        v91 = &unk_26C684548;
        *(void *)&long long v92 = v33;
        *((void *)&v92 + 1) = v13;
        atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
        if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_24;
        }
        goto LABEL_23;
      }
      if (v6 == 1)
      {
        uint64_t v7 = *(const void **)(a1 + 8);
        if (!v7
          || (unint64_t v8 = (float32x2_t *)__dynamic_cast(v7, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A270, 0), (v9 = v8) == 0))
        {
          char v10 = sub_2157CEE7C();
          sub_215D23BE0(a1, (const char *)v10, (uint64_t)"trying to cast camera");
        }
        float64x2_t v11 = vcvtq_f64_f32(v8[3]);
        float64x2_t v103 = vcvtq_f64_f32(v8[2]);
        float64x2_t v104 = v11;
        sub_2157CF520((uint64_t)&v91, (uint64_t *)&v103);
        long long v47 = v92;
        long long v51 = v93;
        std::__shared_count v55 = v94;
        long long v59 = v95;
        long long v73 = *(_OWORD *)&v97[16];
        long long v77 = *(_OWORD *)&v97[32];
        v81 = *(std::__shared_weak_count_vtbl **)&v97[48];
        long long v63 = v96;
        std::__shared_count v67 = *(std::__shared_count *)v97;
        uint64_t v12 = (uint64_t)v9[11];
        unint64_t v13 = (std::__shared_weak_count *)operator new(0xB8uLL);
        v13->__shared_weak_owners_ = 0;
        v13->__shared_owners_ = 0;
        long long v14 = &v13->__shared_owners_;
        v13->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659AC8;
        *(_OWORD *)&v13[1].__shared_weak_owners_ = v47;
        *(_OWORD *)&v13[2].__shared_owners_ = v51;
        v13[3].std::__shared_count = v55;
        *(_OWORD *)&v13[3].__shared_weak_owners_ = v59;
        v13[5].std::__shared_count = v67;
        *(_OWORD *)&v13[5].__shared_weak_owners_ = v73;
        *(_OWORD *)&v13[6].__shared_owners_ = v77;
        std::string::size_type v15 = v13 + 1;
        v13[1].__shared_owners_ = (uint64_t)&unk_26C659958;
        *(_OWORD *)&v13[4].__shared_owners_ = v63;
        v13[7].__vftable = v81;
        v13[7].__shared_owners_ = v12;
        uint64_t v16 = (std::__shared_weak_count_vtbl *)&unk_26C659A48;
        goto LABEL_16;
      }
    }
LABEL_18:
    char v23 = *(const void **)(a1 + 8);
    if (!v23
      || (uint64_t v24 = (float32x4_t *)__dynamic_cast(v23, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A2D0, 0), (v26 = v24) == 0))
    {
      long long v27 = sub_2157D3F1C();
      sub_215D23BE0(a1, (const char *)v27, (uint64_t)"trying to cast camera");
    }
    v25.i32[0] = v24[3].i32[0];
    float32x4_t v28 = v24[2];
    float64x2_t v29 = vcvtq_f64_f32(*(float32x2_t *)&v24[1].u32[2]);
    float64x2_t v103 = vcvtq_f64_f32(*(float32x2_t *)v24[1].f32);
    float64x2_t v104 = v29;
    float64x2_t v105 = vcvtq_f64_f32(*(float32x2_t *)v28.f32);
    float64x2_t v106 = vcvt_hight_f64_f32(v28);
    uint64_t v107 = *(_OWORD *)&vcvtq_f64_f32(v25);
    uint64_t v108 = 0x3EE4F8B588E368F1;
    int v109 = 10;
    sub_2157D099C((uint64_t)&v91, (uint64_t *)&v103);
    long long v49 = v92;
    long long v53 = v93;
    std::__shared_count v57 = v94;
    long long v61 = v95;
    std::__shared_count v75 = *(std::__shared_count *)&v97[24];
    long long v71 = *(_OWORD *)&v97[8];
    long long v79 = *(_OWORD *)&v97[40];
    long long v87 = v100;
    long long v65 = v96;
    int v69 = *(_DWORD *)v97;
    uint64_t v89 = v101;
    std::__shared_count v85 = v99;
    long long v83 = v98;
    __int16 v30 = v102;
    char v31 = (std::__shared_weak_count_vtbl *)v26[7].i64[1];
    unint64_t v13 = (std::__shared_weak_count *)operator new(0xF8uLL);
    v13->__shared_weak_owners_ = 0;
    v13->__shared_owners_ = 0;
    p_shared_owners = &v13->__shared_owners_;
    v13->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659D98;
    v13[1].__shared_owners_ = (uint64_t)&unk_26C659B18;
    *(_OWORD *)&v13[1].__shared_weak_owners_ = v49;
    long long v33 = v13 + 1;
    *(_OWORD *)&v13[2].__shared_owners_ = v53;
    v13[3].std::__shared_count = v57;
    *(_OWORD *)&v13[3].__shared_weak_owners_ = v61;
    *(_OWORD *)&v13[4].__shared_owners_ = v65;
    LODWORD(v13[5].__vftable) = v69;
    *(_OWORD *)&v13[5].__shared_owners_ = v71;
    v13[6].std::__shared_count = v75;
    v13[9].__shared_owners_ = v89;
    v13[8].std::__shared_count = v85;
    *(_OWORD *)&v13[8].__shared_weak_owners_ = v87;
    *(_OWORD *)&v13[6].__shared_weak_owners_ = v79;
    *(_OWORD *)&v13[7].__shared_owners_ = v83;
    LOWORD(v13[9].__shared_weak_owners_) = v30;
    v13[10].__vftable = v31;
    uint64_t v34 = (std::__shared_weak_count_vtbl *)&unk_26C659D18;
    goto LABEL_22;
  }
  if (v6 != 1) {
    goto LABEL_18;
  }
  uint64_t v17 = *(const void **)(a1 + 8);
  if (!v17
    || (unint64_t v18 = (float32x2_t *)__dynamic_cast(v17, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A120, 0), (v19 = v18) == 0))
  {
    uint64_t v20 = sub_2157D1088();
    sub_215D23BE0(a1, (const char *)v20, (uint64_t)"trying to cast camera");
  }
  float64x2_t v21 = vcvtq_f64_f32(v18[3]);
  float64x2_t v103 = vcvtq_f64_f32(v18[2]);
  float64x2_t v104 = v21;
  sub_2157CF520((uint64_t)&v91, (uint64_t *)&v103);
  long long v48 = v92;
  long long v52 = v93;
  std::__shared_count v56 = v94;
  long long v60 = v95;
  long long v74 = *(_OWORD *)&v97[16];
  long long v78 = *(_OWORD *)&v97[32];
  uint64_t v82 = *(std::__shared_weak_count_vtbl **)&v97[48];
  long long v64 = v96;
  std::__shared_count v68 = *(std::__shared_count *)v97;
  uint64_t v22 = (uint64_t)v19[11];
  unint64_t v13 = (std::__shared_weak_count *)operator new(0xB8uLL);
  v13->__shared_weak_owners_ = 0;
  v13->__shared_owners_ = 0;
  long long v14 = &v13->__shared_owners_;
  v13->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659CC8;
  *(_OWORD *)&v13[1].__shared_weak_owners_ = v48;
  *(_OWORD *)&v13[2].__shared_owners_ = v52;
  v13[3].std::__shared_count = v56;
  *(_OWORD *)&v13[3].__shared_weak_owners_ = v60;
  v13[5].std::__shared_count = v68;
  *(_OWORD *)&v13[5].__shared_weak_owners_ = v74;
  *(_OWORD *)&v13[6].__shared_owners_ = v78;
  std::string::size_type v15 = v13 + 1;
  v13[1].__shared_owners_ = (uint64_t)&unk_26C659958;
  *(_OWORD *)&v13[4].__shared_owners_ = v64;
  v13[7].__vftable = v82;
  v13[7].__shared_owners_ = v22;
  uint64_t v16 = (std::__shared_weak_count_vtbl *)&unk_26C659C48;
LABEL_16:
  v13[1].__vftable = v16;
  v91 = &unk_26C684548;
  *(void *)&long long v92 = v15;
  *((void *)&v92 + 1) = v13;
  atomic_fetch_add_explicit(v14, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_24;
  }
LABEL_23:
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
LABEL_24:
  long long v35 = v92;
  long long v92 = 0uLL;
  long long v36 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = v35;
  if (v36 && !atomic_fetch_add(&v36->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
    std::__shared_weak_count::__release_weak(v36);
  }
  v91 = &unk_26C684548;
  uint64_t v37 = (std::__shared_weak_count *)*((void *)&v92 + 1);
  if (*((void *)&v92 + 1))
  {
    if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v92 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
  }
}

void sub_2157C7C90(uint64_t a1, uint64_t a2, float a3, float a4, float a5, float a6)
{
  v36[0] = a3;
  v36[1] = a4;
  v36[2] = a5;
  v36[3] = a6;
  sub_2157D1B9C((uint64_t)v28, v36);
  if (!v35)
  {
    LODWORD(v24) = 0;
    sub_2157D24E4();
  }
  v21[0] = (void *)__PAIR64__(LODWORD(a4), LODWORD(a3));
  v21[1] = (void *)__PAIR64__(LODWORD(a6), LODWORD(a5));
  uint64_t v12 = (uint64_t *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8));
  sub_2157D19D8((uint64_t)&v22, (int *)v21);
  long long v13 = v23;
  v28[1] = &unk_26C65A188;
  long long v29 = v23;
  long long v30 = v24;
  long long v31 = v25;
  long long v32 = v26;
  LODWORD(v33) = v27;
  uint64_t v34 = *v12;
  uint64_t v14 = v34;
  v28[0] = &unk_26C659DE8;
  std::string::size_type v15 = (char *)operator new(0x78uLL);
  uint64_t v16 = (std::__shared_weak_count *)v15;
  *((void *)v15 + 1) = 0;
  *(void *)std::string::size_type v15 = &unk_26C659E28;
  *(_OWORD *)(v15 + 56) = v30;
  long long v17 = v32;
  *(_OWORD *)(v15 + 72) = v31;
  *((void *)v15 + 4) = &unk_26C65A188;
  *(_OWORD *)(v15 + 40) = v13;
  *(_OWORD *)(v15 + 88) = v17;
  *((_DWORD *)v15 + 26) = v33;
  *((void *)v15 + 14) = v14;
  *((void *)v15 + 2) = 0;
  *((void *)v15 + 3) = &unk_26C659DE8;
  uint64_t v22 = &unk_26C684548;
  *(void *)&long long v23 = v15 + 24;
  *((void *)&v23 + 1) = v15;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v15 + 1, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add((atomic_ullong *volatile)v15 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v15 + 16))(v15);
    std::__shared_weak_count::__release_weak(v16);
  }
  long long v18 = v23;
  long long v23 = 0uLL;
  long long v19 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v18;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  uint64_t v22 = &unk_26C684548;
  uint64_t v20 = (std::__shared_weak_count *)*((void *)&v23 + 1);
  if (*((void *)&v23 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v23 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
  *(unsigned char *)(a1 + 120) = 1;
}

void sub_2157C8160(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215742CF0((uint64_t)va);
  sub_215731D80(a1);
}

void sub_2157C8174(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215742CF0((uint64_t)va);
  sub_215731D80(a1);
}

void sub_2157C818C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  v37[0] = a3;
  v37[1] = a4;
  v37[2] = a5;
  v37[3] = a6;
  sub_2157CF6E0((uint64_t)v23, v37);
  if (!BYTE8(v30))
  {
    LODWORD(v40) = 0;
    sub_2157D24E4();
  }
  v34[0] = *(void **)&a3;
  v34[1] = *(void **)&a4;
  double v35 = a5;
  double v36 = a6;
  uint64_t v12 = (uint64_t *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8));
  sub_2157CF520((uint64_t)&v38, (uint64_t *)v34);
  v23[1] = &unk_26C659958;
  *(_OWORD *)long long v24 = v39;
  long long v25 = v40;
  *(_OWORD *)long long v26 = v41;
  long long v27 = v42;
  long long v30 = v45;
  long long v31 = v46;
  uint64_t v32 = v47;
  *(_OWORD *)float32x4_t v28 = v43;
  long long v29 = v44;
  uint64_t v33 = *v12;
  uint64_t v13 = v33;
  v23[0] = &unk_26C659A48;
  uint64_t v14 = (char *)operator new(0xB8uLL);
  std::string::size_type v15 = (std::__shared_weak_count *)v14;
  *((void *)v14 + 2) = 0;
  *((void *)v14 + 1) = 0;
  *(void *)uint64_t v14 = &unk_26C659AC8;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)v24;
  *(_OWORD *)(v14 + 56) = v25;
  long long v16 = v27;
  *(_OWORD *)(v14 + 72) = *(_OWORD *)v26;
  *(_OWORD *)(v14 + 88) = v16;
  long long v17 = *(_OWORD *)v28;
  *(_OWORD *)(v14 + 120) = v29;
  long long v18 = v31;
  *(_OWORD *)(v14 + 136) = v30;
  *(_OWORD *)(v14 + 152) = v18;
  *((void *)v14 + 4) = &unk_26C659958;
  uint64_t v19 = v32;
  *(_OWORD *)(v14 + 104) = v17;
  *((void *)v14 + 21) = v19;
  *((void *)v14 + 22) = v13;
  *((void *)v14 + 3) = &unk_26C659A48;
  char v38 = &unk_26C684548;
  *(void *)&long long v39 = v14 + 24;
  *((void *)&v39 + 1) = v14;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v14 + 1, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add((atomic_ullong *volatile)v14 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v14 + 16))(v14);
    std::__shared_weak_count::__release_weak(v15);
  }
  long long v20 = v39;
  long long v39 = 0uLL;
  float64x2_t v21 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v20;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
    std::__shared_weak_count::__release_weak(v21);
  }
  char v38 = &unk_26C684548;
  uint64_t v22 = (std::__shared_weak_count *)*((void *)&v39 + 1);
  if (*((void *)&v39 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v39 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  *(unsigned char *)(a1 + 120) = 1;
}

void sub_2157C8698(void *a1)
{
  sub_215742CF0(v1 - 240);
  sub_215731D80(a1);
}

void sub_2157C86AC(void *a1)
{
  sub_215742CF0(v1 - 240);
  sub_215731D80(a1);
}

void sub_2157C86C4(uint64_t a1, uint64_t a2, float a3, float a4, float a5, float a6)
{
  v36[0] = a3;
  v36[1] = a4;
  v36[2] = a5;
  v36[3] = a6;
  sub_2157D1B9C((uint64_t)v28, v36);
  if (!v35)
  {
    LODWORD(v24) = 0;
    sub_2157D24E4();
  }
  v21[0] = (void *)__PAIR64__(LODWORD(a4), LODWORD(a3));
  v21[1] = (void *)__PAIR64__(LODWORD(a6), LODWORD(a5));
  uint64_t v12 = (uint64_t *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8));
  sub_2157D19D8((uint64_t)&v22, (int *)v21);
  long long v13 = v23;
  v28[1] = &unk_26C65A188;
  long long v29 = v23;
  long long v30 = v24;
  long long v31 = v25;
  long long v32 = v26;
  LODWORD(v33) = v27;
  uint64_t v34 = *v12;
  uint64_t v14 = v34;
  v28[0] = &unk_26C65A0D8;
  std::string::size_type v15 = (char *)operator new(0x78uLL);
  long long v16 = (std::__shared_weak_count *)v15;
  *((void *)v15 + 1) = 0;
  *(void *)std::string::size_type v15 = &unk_26C65A1E8;
  *(_OWORD *)(v15 + 56) = v30;
  long long v17 = v32;
  *(_OWORD *)(v15 + 72) = v31;
  *((void *)v15 + 4) = &unk_26C65A188;
  *(_OWORD *)(v15 + 40) = v13;
  *(_OWORD *)(v15 + 88) = v17;
  *((_DWORD *)v15 + 26) = v33;
  *((void *)v15 + 14) = v14;
  *((void *)v15 + 2) = 0;
  *((void *)v15 + 3) = &unk_26C65A0D8;
  uint64_t v22 = &unk_26C684548;
  *(void *)&long long v23 = v15 + 24;
  *((void *)&v23 + 1) = v15;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v15 + 1, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add((atomic_ullong *volatile)v15 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v15 + 16))(v15);
    std::__shared_weak_count::__release_weak(v16);
  }
  long long v18 = v23;
  long long v23 = 0uLL;
  uint64_t v19 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v18;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
  uint64_t v22 = &unk_26C684548;
  long long v20 = (std::__shared_weak_count *)*((void *)&v23 + 1);
  if (*((void *)&v23 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v23 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
  *(unsigned char *)(a1 + 120) = 1;
}

void sub_2157C8B94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215742CF0((uint64_t)va);
  sub_215731D80(a1);
}

void sub_2157C8BA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215742CF0((uint64_t)va);
  sub_215731D80(a1);
}

void sub_2157C8BC0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  v37[0] = a3;
  v37[1] = a4;
  v37[2] = a5;
  v37[3] = a6;
  sub_2157CF6E0((uint64_t)v23, v37);
  if (!BYTE8(v30))
  {
    LODWORD(v40) = 0;
    sub_2157D24E4();
  }
  v34[0] = *(void **)&a3;
  v34[1] = *(void **)&a4;
  double v35 = a5;
  double v36 = a6;
  uint64_t v12 = (uint64_t *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8));
  sub_2157CF520((uint64_t)&v38, (uint64_t *)v34);
  v23[1] = &unk_26C659958;
  *(_OWORD *)long long v24 = v39;
  long long v25 = v40;
  *(_OWORD *)long long v26 = v41;
  long long v27 = v42;
  long long v30 = v45;
  long long v31 = v46;
  uint64_t v32 = v47;
  *(_OWORD *)float32x4_t v28 = v43;
  long long v29 = v44;
  uint64_t v33 = *v12;
  uint64_t v13 = v33;
  v23[0] = &unk_26C659C48;
  uint64_t v14 = (char *)operator new(0xB8uLL);
  std::string::size_type v15 = (std::__shared_weak_count *)v14;
  *((void *)v14 + 2) = 0;
  *((void *)v14 + 1) = 0;
  *(void *)uint64_t v14 = &unk_26C659CC8;
  *(_OWORD *)(v14 + 40) = *(_OWORD *)v24;
  *(_OWORD *)(v14 + 56) = v25;
  long long v16 = v27;
  *(_OWORD *)(v14 + 72) = *(_OWORD *)v26;
  *(_OWORD *)(v14 + 88) = v16;
  long long v17 = *(_OWORD *)v28;
  *(_OWORD *)(v14 + 120) = v29;
  long long v18 = v31;
  *(_OWORD *)(v14 + 136) = v30;
  *(_OWORD *)(v14 + 152) = v18;
  *((void *)v14 + 4) = &unk_26C659958;
  uint64_t v19 = v32;
  *(_OWORD *)(v14 + 104) = v17;
  *((void *)v14 + 21) = v19;
  *((void *)v14 + 22) = v13;
  *((void *)v14 + 3) = &unk_26C659C48;
  char v38 = &unk_26C684548;
  *(void *)&long long v39 = v14 + 24;
  *((void *)&v39 + 1) = v14;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v14 + 1, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add((atomic_ullong *volatile)v14 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v14 + 16))(v14);
    std::__shared_weak_count::__release_weak(v15);
  }
  long long v20 = v39;
  long long v39 = 0uLL;
  float64x2_t v21 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v20;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
    std::__shared_weak_count::__release_weak(v21);
  }
  char v38 = &unk_26C684548;
  uint64_t v22 = (std::__shared_weak_count *)*((void *)&v39 + 1);
  if (*((void *)&v39 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v39 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
    std::__shared_weak_count::__release_weak(v22);
  }
  *(unsigned char *)(a1 + 120) = 1;
}

void sub_2157C90CC(void *a1)
{
  sub_215742CF0(v1 - 240);
  sub_215731D80(a1);
}

void sub_2157C90E0(void *a1)
{
  sub_215742CF0(v1 - 240);
  sub_215731D80(a1);
}

void sub_2157C90F8(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  sub_2157C71F0(a1, 12);
  int v12 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8)))
  {
    if (v12 == 11)
    {
      float v13 = a3;
      float v14 = a4;
      float v15 = a5;
      float v16 = a6;
      sub_2157C86C4(a2, a1, v13, v14, v15, v16);
    }
    else
    {
      sub_2157C8BC0(a2, a1, a3, a4, a5, a6);
    }
  }
  else if (v12 == 11)
  {
    float v17 = a3;
    float v18 = a4;
    float v19 = a5;
    float v20 = a6;
    sub_2157C7C90(a2, a1, v17, v18, v19, v20);
  }
  else
  {
    sub_2157C818C(a2, a1, a3, a4, a5, a6);
  }
}

void sub_2157C929C(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>, float a5@<S2>, float a6@<S3>, float a7@<S4>, float a8@<S5>, float a9@<S6>, float a10@<S7>, int a11)
{
  (*(void (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  int v20 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8)))
  {
    if (v20 == 11)
    {
      *(float *)v27.i32 = a4;
      sub_2157C9FE8(a2, a1, a3, v27, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, a11);
    }
    else
    {
      sub_2157CA53C(a2, a1, a3, a4, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, COERCE__INT64(*(float *)&a11));
    }
  }
  else if (v20 == 11)
  {
    *(float *)v27.i32 = a4;
    sub_2157C94DC(a2, a1, a3, v27, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, a11);
  }
  else
  {
    sub_2157C9A30(a2, a1, a3, a4, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, COERCE__INT64(*(float *)&a11));
  }
}

void sub_2157C94DC(uint64_t a1, uint64_t a2, float a3, int32x2_t a4, float a5, float a6, float a7, float a8, float a9, float a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  *(float *)&a4.i32[1] = a6;
  v19.i64[0] = LODWORD(a3);
  v19.i64[1] = LODWORD(a5);
  int8x16_t v50 = vorrq_s8((int8x16_t)vshll_n_s32(a4, 0x20uLL), v19);
  float v51 = a7;
  float v52 = a8;
  float v53 = a9;
  float v54 = a10;
  int v55 = a17;
  uint64_t v56 = 0xA3727C5ACLL;
  sub_2157D2790((uint64_t)v41, (uint64_t)&v50);
  if (!(_BYTE)v49)
  {
    LODWORD(v33) = 0;
    sub_2157D24E4();
  }
  sub_2157D2B2C((uint64_t)&v31, v50.i32);
  int v20 = (uint64_t *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8));
  uint64_t v21 = *((void *)&v31 + 1);
  uint64_t v22 = __p;
  v41[1] = &unk_26C659E78;
  v41[2] = *((void *)&v31 + 1);
  v41[3] = __p;
  long long v42 = v33;
  uint64_t v23 = v35;
  *(void *)&v43[1] = v35;
  long long v44 = v36;
  long long v45 = v37;
  long long v46 = v38;
  v43[0] = v34;
  int v47 = v39;
  __int16 v24 = v40;
  __int16 v48 = v40;
  uint64_t v49 = *v20;
  uint64_t v25 = v49;
  v41[0] = &unk_26C659ED8;
  uint64_t v26 = (char *)operator new(0x98uLL);
  int32x2_t v27 = (std::__shared_weak_count *)v26;
  *((void *)v26 + 2) = 0;
  *((void *)v26 + 1) = 0;
  *(void *)uint64_t v26 = &unk_26C659F58;
  *(_OWORD *)(v26 + 56) = v33;
  *(_OWORD *)(v26 + 84) = v36;
  long long v28 = v37;
  *(_OWORD *)(v26 + 116) = v38;
  *((void *)v26 + 4) = &unk_26C659E78;
  *((void *)v26 + 5) = v21;
  *((void *)v26 + 6) = v22;
  *((_DWORD *)v26 + 18) = v34;
  *(void *)(v26 + 76) = v23;
  *((_DWORD *)v26 + 33) = v39;
  *(_OWORD *)(v26 + 100) = v28;
  *((_WORD *)v26 + 68) = v24;
  *((void *)v26 + 18) = v25;
  *((void *)v26 + 3) = &unk_26C659ED8;
  v30[0] = v26 + 24;
  v30[1] = v26;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v26 + 1, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add((atomic_ullong *volatile)v26 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v26 + 16))(v26);
    std::__shared_weak_count::__release_weak(v27);
  }
  long long v29 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v30;
  if (v29 && !atomic_fetch_add(&v29->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
    std::__shared_weak_count::__release_weak(v29);
  }
  *(unsigned char *)(a1 + 120) = 1;
}

void sub_2157C9A04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215742CF0((uint64_t)va);
  sub_215731D80(a1);
}

void sub_2157C9A18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215742CF0((uint64_t)va);
  sub_215731D80(a1);
}

void sub_2157C9A30(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(double *)std::__shared_count v67 = a3;
  *(double *)&v67[1] = a4;
  *(double *)&v67[2] = a5;
  *(double *)&v67[3] = a6;
  *(double *)&v67[4] = a7;
  *(double *)&v67[5] = a8;
  *(double *)&v67[6] = a9;
  *(double *)&v67[7] = a10;
  v67[8] = a17;
  v67[9] = 0x3EE4F8B588E368F1;
  int v68 = 10;
  sub_2157D0BB0((uint64_t)v32, (uint64_t)v67);
  if (!(_BYTE)v41)
  {
    LODWORD(v51) = 0;
    sub_2157D24E4();
  }
  sub_2157D099C((uint64_t)&v49, v67);
  int8x16_t v19 = (uint64_t *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8));
  *(_OWORD *)long long v33 = v50;
  long long v34 = v51;
  *(_OWORD *)uint64_t v35 = v52;
  long long v36 = v53;
  long long v40 = v57;
  long long v41 = v58;
  long long v42 = v59;
  long long v45 = v62;
  long long v44 = v61;
  v32[1] = &unk_26C659B18;
  uint64_t v37 = v54;
  uint64_t v38 = v55;
  int v39 = v56;
  uint64_t v46 = v63;
  long long v43 = v60;
  __int16 v20 = v64;
  __int16 v47 = v64;
  uint64_t v48 = *v19;
  uint64_t v21 = v48;
  v32[0] = &unk_26C659B78;
  uint64_t v22 = (char *)operator new(0xF8uLL);
  uint64_t v23 = (std::__shared_weak_count *)v22;
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 1) = 0;
  *(void *)uint64_t v22 = &unk_26C659BF8;
  *((void *)v22 + 4) = &unk_26C659B18;
  *(_OWORD *)(v22 + 40) = v50;
  *(_OWORD *)(v22 + 56) = v51;
  long long v24 = v53;
  *(_OWORD *)(v22 + 72) = v52;
  *(_OWORD *)(v22 + 88) = v24;
  uint64_t v25 = v55;
  *((void *)v22 + 13) = v54;
  *((void *)v22 + 14) = v25;
  *((_DWORD *)v22 + 30) = v56;
  long long v26 = v58;
  *((_OWORD *)v22 + 8) = v57;
  *((_OWORD *)v22 + 9) = v26;
  *((void *)v22 + 28) = v63;
  long long v27 = v62;
  *((_OWORD *)v22 + 12) = v61;
  *((_OWORD *)v22 + 13) = v27;
  long long v28 = v60;
  *((_OWORD *)v22 + 10) = v59;
  *((_OWORD *)v22 + 11) = v28;
  *((_WORD *)v22 + 116) = v20;
  *((void *)v22 + 30) = v21;
  *((void *)v22 + 3) = &unk_26C659B78;
  long long v65 = &unk_26C684548;
  *(void *)&long long v66 = v22 + 24;
  *((void *)&v66 + 1) = v22;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v22 + 1, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add((atomic_ullong *volatile)v22 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v22 + 16))(v22);
    std::__shared_weak_count::__release_weak(v23);
  }
  long long v29 = v66;
  long long v66 = 0uLL;
  long long v30 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v29;
  if (v30 && !atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
  long long v65 = &unk_26C684548;
  long long v31 = (std::__shared_weak_count *)*((void *)&v66 + 1);
  if (*((void *)&v66 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v66 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
    std::__shared_weak_count::__release_weak(v31);
  }
  *(unsigned char *)(a1 + 120) = 1;
}

void sub_2157C9FBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

void sub_2157C9FD0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

void sub_2157C9FE8(uint64_t a1, uint64_t a2, float a3, int32x2_t a4, float a5, float a6, float a7, float a8, float a9, float a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  *(float *)&a4.i32[1] = a6;
  v19.i64[0] = LODWORD(a3);
  v19.i64[1] = LODWORD(a5);
  int8x16_t v50 = vorrq_s8((int8x16_t)vshll_n_s32(a4, 0x20uLL), v19);
  float v51 = a7;
  float v52 = a8;
  float v53 = a9;
  float v54 = a10;
  int v55 = a17;
  uint64_t v56 = 0xA3727C5ACLL;
  sub_2157D2790((uint64_t)v41, (uint64_t)&v50);
  if (!(_BYTE)v49)
  {
    LODWORD(v33) = 0;
    sub_2157D24E4();
  }
  sub_2157D2B2C((uint64_t)&v31, v50.i32);
  __int16 v20 = (uint64_t *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8));
  uint64_t v21 = *((void *)&v31 + 1);
  uint64_t v22 = __p;
  v41[1] = &unk_26C659E78;
  v41[2] = *((void *)&v31 + 1);
  v41[3] = __p;
  long long v42 = v33;
  uint64_t v23 = v35;
  *(void *)&v43[1] = v35;
  long long v44 = v36;
  long long v45 = v37;
  long long v46 = v38;
  v43[0] = v34;
  int v47 = v39;
  __int16 v24 = v40;
  __int16 v48 = v40;
  uint64_t v49 = *v20;
  uint64_t v25 = v49;
  v41[0] = &unk_26C659FA8;
  long long v26 = (char *)operator new(0x98uLL);
  long long v27 = (std::__shared_weak_count *)v26;
  *((void *)v26 + 2) = 0;
  *((void *)v26 + 1) = 0;
  *(void *)long long v26 = &unk_26C65A028;
  *(_OWORD *)(v26 + 56) = v33;
  *(_OWORD *)(v26 + 84) = v36;
  long long v28 = v37;
  *(_OWORD *)(v26 + 116) = v38;
  *((void *)v26 + 4) = &unk_26C659E78;
  *((void *)v26 + 5) = v21;
  *((void *)v26 + 6) = v22;
  *((_DWORD *)v26 + 18) = v34;
  *(void *)(v26 + 76) = v23;
  *((_DWORD *)v26 + 33) = v39;
  *(_OWORD *)(v26 + 100) = v28;
  *((_WORD *)v26 + 68) = v24;
  *((void *)v26 + 18) = v25;
  *((void *)v26 + 3) = &unk_26C659FA8;
  v30[0] = v26 + 24;
  v30[1] = v26;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v26 + 1, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add((atomic_ullong *volatile)v26 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v26 + 16))(v26);
    std::__shared_weak_count::__release_weak(v27);
  }
  long long v29 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v30;
  if (v29 && !atomic_fetch_add(&v29->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
    std::__shared_weak_count::__release_weak(v29);
  }
  *(unsigned char *)(a1 + 120) = 1;
}

void sub_2157CA510(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215742CF0((uint64_t)va);
  sub_215731D80(a1);
}

void sub_2157CA524(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_215742CF0((uint64_t)va);
  sub_215731D80(a1);
}

void sub_2157CA53C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(double *)std::__shared_count v67 = a3;
  *(double *)&v67[1] = a4;
  *(double *)&v67[2] = a5;
  *(double *)&v67[3] = a6;
  *(double *)&v67[4] = a7;
  *(double *)&v67[5] = a8;
  *(double *)&v67[6] = a9;
  *(double *)&v67[7] = a10;
  v67[8] = a17;
  v67[9] = 0x3EE4F8B588E368F1;
  int v68 = 10;
  sub_2157D0BB0((uint64_t)v32, (uint64_t)v67);
  if (!(_BYTE)v41)
  {
    LODWORD(v51) = 0;
    sub_2157D24E4();
  }
  sub_2157D099C((uint64_t)&v49, v67);
  int8x16_t v19 = (uint64_t *)(*(uint64_t (**)(void))(**(void **)(a2 + 8) + 40))(*(void *)(a2 + 8));
  *(_OWORD *)long long v33 = v50;
  long long v34 = v51;
  *(_OWORD *)uint64_t v35 = v52;
  long long v36 = v53;
  long long v40 = v57;
  long long v41 = v58;
  long long v42 = v59;
  long long v45 = v62;
  long long v44 = v61;
  v32[1] = &unk_26C659B18;
  uint64_t v37 = v54;
  uint64_t v38 = v55;
  int v39 = v56;
  uint64_t v46 = v63;
  long long v43 = v60;
  __int16 v20 = v64;
  __int16 v47 = v64;
  uint64_t v48 = *v19;
  uint64_t v21 = v48;
  v32[0] = &unk_26C659D18;
  uint64_t v22 = (char *)operator new(0xF8uLL);
  uint64_t v23 = (std::__shared_weak_count *)v22;
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 1) = 0;
  *(void *)uint64_t v22 = &unk_26C659D98;
  *((void *)v22 + 4) = &unk_26C659B18;
  *(_OWORD *)(v22 + 40) = v50;
  *(_OWORD *)(v22 + 56) = v51;
  long long v24 = v53;
  *(_OWORD *)(v22 + 72) = v52;
  *(_OWORD *)(v22 + 88) = v24;
  uint64_t v25 = v55;
  *((void *)v22 + 13) = v54;
  *((void *)v22 + 14) = v25;
  *((_DWORD *)v22 + 30) = v56;
  long long v26 = v58;
  *((_OWORD *)v22 + 8) = v57;
  *((_OWORD *)v22 + 9) = v26;
  *((void *)v22 + 28) = v63;
  long long v27 = v62;
  *((_OWORD *)v22 + 12) = v61;
  *((_OWORD *)v22 + 13) = v27;
  long long v28 = v60;
  *((_OWORD *)v22 + 10) = v59;
  *((_OWORD *)v22 + 11) = v28;
  *((_WORD *)v22 + 116) = v20;
  *((void *)v22 + 30) = v21;
  *((void *)v22 + 3) = &unk_26C659D18;
  long long v65 = &unk_26C684548;
  *(void *)&long long v66 = v22 + 24;
  *((void *)&v66 + 1) = v22;
  atomic_fetch_add_explicit((atomic_ullong *volatile)v22 + 1, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add((atomic_ullong *volatile)v22 + 1, 0xFFFFFFFFFFFFFFFFLL))
  {
    (*(void (**)(char *))(*(void *)v22 + 16))(v22);
    std::__shared_weak_count::__release_weak(v23);
  }
  long long v29 = v66;
  long long v66 = 0uLL;
  long long v30 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v29;
  if (v30 && !atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
  }
  long long v65 = &unk_26C684548;
  long long v31 = (std::__shared_weak_count *)*((void *)&v66 + 1);
  if (*((void *)&v66 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v66 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
    std::__shared_weak_count::__release_weak(v31);
  }
  *(unsigned char *)(a1 + 120) = 1;
}

void sub_2157CAAC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

void sub_2157CAADC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

void sub_2157CAAF4(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>, uint64_t a11)
{
  sub_2157C71F0(a1, 12);
  int v20 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8)))
  {
    if (v20 == 11)
    {
      float v28 = a3;
      *(float *)v27.i32 = a4;
      float v29 = a5;
      float v30 = a6;
      float v31 = a7;
      float v32 = a8;
      float v33 = a9;
      float v34 = a10;
      *(float *)&int v35 = *(double *)&a11;
      sub_2157C9FE8(a2, a1, v28, v27, v29, v30, v31, v32, v33, v34, v21, v22, v23, v24, v25, v26, v35);
    }
    else
    {
      sub_2157CA53C(a2, a1, a3, a4, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, a11);
    }
  }
  else if (v20 == 11)
  {
    float v36 = a3;
    *(float *)v27.i32 = a4;
    float v37 = a5;
    float v38 = a6;
    float v39 = a7;
    float v40 = a8;
    float v41 = a9;
    float v42 = a10;
    *(float *)&int v43 = *(double *)&a11;
    sub_2157C94DC(a2, a1, v36, v27, v37, v38, v39, v40, v41, v42, v21, v22, v23, v24, v25, v26, v43);
  }
  else
  {
    sub_2157C9A30(a2, a1, a3, a4, a5, a6, a7, a8, a9, a10, v21, v22, v23, v24, v25, v26, a11);
  }
}

char *sub_2157CAD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v12 = "focal length";
  char v11 = 0;
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  char v11 = v4;
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  if (v4 != 11) {
    sub_2157D4310((uint64_t)v10, (const char *)&v12, "float32");
  }
  int v7 = v6;
  unint64_t v8 = *(const void **)(a1 + 8);
  if (v5 == 1)
  {
    if (v7)
    {
      if (!v8
        || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A120, 0)) == 0)
      {
        sub_2157D4760();
        sub_215D23BE0(a1, (const char *)&qword_26788DF70, (uint64_t)"trying to cast camera");
      }
    }
    else if (!v8 {
           || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A270, 0)) == 0)
    }
    {
      sub_2157D45CC();
      sub_215D23BE0(a1, (const char *)&qword_26788DF58, (uint64_t)"trying to cast camera");
    }
  }
  else if (v7)
  {
    if (!v8
      || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A2D0, 0)) == 0)
    {
      sub_2157D4A88();
      sub_215D23BE0(a1, (const char *)&qword_26788DFA0, (uint64_t)"trying to cast camera");
    }
  }
  else if (!v8 {
         || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A330, 0)) == 0)
  }
  {
    sub_2157D48F4();
    sub_215D23BE0(a1, (const char *)&qword_26788DF88, (uint64_t)"trying to cast camera");
  }
  *(void *)a2 = result + 16;
  *(unsigned char *)(a2 + 120) = 1;
  return result;
}

char *sub_2157CB1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v12 = "focal length";
  char v11 = 0;
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  char v11 = v4;
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  if (v4 != 12) {
    sub_2157D4310((uint64_t)v10, (const char *)&v12, "float64");
  }
  int v7 = v6;
  unint64_t v8 = *(const void **)(a1 + 8);
  if (v5 == 1)
  {
    if (v7)
    {
      if (!v8
        || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A240, 0)) == 0)
      {
        sub_2157D5D4C();
        sub_215D23BE0(a1, (const char *)&qword_26788DFD0, (uint64_t)"trying to cast camera");
      }
    }
    else if (!v8 {
           || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A2A0, 0)) == 0)
    }
    {
      sub_2157D5BB8();
      sub_215D23BE0(a1, (const char *)&qword_26788DFB8, (uint64_t)"trying to cast camera");
    }
  }
  else if (v7)
  {
    if (!v8
      || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A300, 0)) == 0)
    {
      sub_2157D6468();
      sub_215D23BE0(a1, (const char *)&qword_26788E000, (uint64_t)"trying to cast camera");
    }
  }
  else if (!v8 {
         || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A360, 0)) == 0)
  }
  {
    sub_2157D5EE0();
    sub_215D23BE0(a1, (const char *)&qword_26788DFE8, (uint64_t)"trying to cast camera");
  }
  *(void *)a2 = result + 16;
  *(unsigned char *)(a2 + 120) = 1;
  return result;
}

char *sub_2157CB630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v12 = "principal point";
  char v11 = 0;
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  char v11 = v4;
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  if (v4 != 11) {
    sub_2157D4310((uint64_t)v10, (const char *)&v12, "float32");
  }
  int v7 = v6;
  unint64_t v8 = *(const void **)(a1 + 8);
  if (v5 == 1)
  {
    if (v7)
    {
      if (!v8
        || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A120, 0)) == 0)
      {
        sub_2157D4760();
        sub_215D23BE0(a1, (const char *)&qword_26788DF70, (uint64_t)"trying to cast camera");
      }
    }
    else if (!v8 {
           || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A270, 0)) == 0)
    }
    {
      sub_2157D45CC();
      sub_215D23BE0(a1, (const char *)&qword_26788DF58, (uint64_t)"trying to cast camera");
    }
  }
  else if (v7)
  {
    if (!v8
      || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A2D0, 0)) == 0)
    {
      sub_2157D4A88();
      sub_215D23BE0(a1, (const char *)&qword_26788DFA0, (uint64_t)"trying to cast camera");
    }
  }
  else if (!v8 {
         || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A330, 0)) == 0)
  }
  {
    sub_2157D48F4();
    sub_215D23BE0(a1, (const char *)&qword_26788DF88, (uint64_t)"trying to cast camera");
  }
  *(void *)a2 = result + 24;
  *(unsigned char *)(a2 + 120) = 1;
  return result;
}

char *sub_2157CBAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v12 = "principal point";
  char v11 = 0;
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  char v11 = v4;
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  if (v4 != 12) {
    sub_2157D4310((uint64_t)v10, (const char *)&v12, "float64");
  }
  int v7 = v6;
  unint64_t v8 = *(const void **)(a1 + 8);
  if (v5 == 1)
  {
    if (v7)
    {
      if (!v8
        || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A240, 0)) == 0)
      {
        sub_2157D5D4C();
        sub_215D23BE0(a1, (const char *)&qword_26788DFD0, (uint64_t)"trying to cast camera");
      }
    }
    else if (!v8 {
           || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A2A0, 0)) == 0)
    }
    {
      sub_2157D5BB8();
      sub_215D23BE0(a1, (const char *)&qword_26788DFB8, (uint64_t)"trying to cast camera");
    }
  }
  else if (v7)
  {
    if (!v8
      || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A300, 0)) == 0)
    {
      sub_2157D6468();
      sub_215D23BE0(a1, (const char *)&qword_26788E000, (uint64_t)"trying to cast camera");
    }
  }
  else if (!v8 {
         || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A360, 0)) == 0)
  }
  {
    sub_2157D5EE0();
    sub_215D23BE0(a1, (const char *)&qword_26788DFE8, (uint64_t)"trying to cast camera");
  }
  *(void *)a2 = result + 32;
  *(unsigned char *)(a2 + 120) = 1;
  return result;
}

char *sub_2157CBF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v16 = 0;
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  char v16 = v4;
  char v15 = 0;
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  char v15 = v5;
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  if (v4 != 11) {
    sub_2157CC4EC((uint64_t)v12, "float32");
  }
  if (v5 == 1)
  {
    long long v13 = xmmword_215E9AD20;
    strcpy((char *)operator new(0x48uLL), "Cannot get heikkila distortion coefficients, camera lens model type is ");
    int v14 = 1;
    sub_2157D69F0();
  }
  int v7 = v6;
  unint64_t v8 = *(const void **)(a1 + 8);
  if (v7)
  {
    if (!v8
      || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A2D0, 0)) == 0)
    {
      char v10 = sub_2157D3F1C();
      sub_215D23BE0(a1, (const char *)v10, (uint64_t)"trying to cast camera");
    }
  }
  else if (!v8 {
         || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A330, 0)) == 0)
  }
  {
    char v11 = sub_2157D3B28();
    sub_215D23BE0(a1, (const char *)v11, (uint64_t)"trying to cast camera");
  }
  *(void *)a2 = result + 32;
  *(unsigned char *)(a2 + 120) = 1;
  return result;
}

void sub_2157CC4AC(void *a1)
{
  sub_215742CF0(v1 - 184);
  sub_215731D80(a1);
}

void sub_2157CC4C0(void *a1)
{
  sub_215742CF0(v1 - 184);
  sub_215731D80(a1);
}

void sub_2157CC4D4(void *a1)
{
  sub_215742CF0(v1 - 184);
  sub_215731D80(a1);
}

void sub_2157CC4EC(uint64_t a1, const char *a2)
{
  int v4 = 0;
  sub_2157D6C54(v3, "Cannot get heikkila distortion coefficients as ");
  int v5 = v3;
  int v6 = a2;
  int v7 = v3;
  unint64_t v8 = a2;
  char v9 = a2;
  if (v4 != -1)
  {
    char v10 = &v5;
    ((void (*)(void **, _DWORD *))off_26C65A098[v4])(&v10, v3);
    int v5 = v3;
    int v6 = ", camera value type is ";
    int v7 = v3;
    unint64_t v8 = ", camera value type is ";
    char v9 = ", camera value type is ";
    if (v4 != -1)
    {
      char v10 = &v5;
      ((void (*)(void **, _DWORD *))off_26C65A0B0[v4])(&v10, v3);
      sub_2157D4C1C();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_2157CC638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157CC64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157CC660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157CC674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157CC688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

char *sub_2157CC69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v16 = 0;
  int v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  char v16 = v4;
  char v15 = 0;
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  char v15 = v5;
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  if (v4 != 12) {
    sub_2157CC4EC((uint64_t)v12, "float64");
  }
  if (v5 == 1)
  {
    long long v13 = xmmword_215E9AD20;
    strcpy((char *)operator new(0x48uLL), "Cannot get heikkila distortion coefficients, camera lens model type is ");
    int v14 = 1;
    sub_2157D69F0();
  }
  int v7 = v6;
  unint64_t v8 = *(const void **)(a1 + 8);
  if (v7)
  {
    if (!v8
      || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A300, 0)) == 0)
    {
      char v10 = sub_2157D65FC();
      sub_215D23BE0(a1, (const char *)v10, (uint64_t)"trying to cast camera");
    }
  }
  else if (!v8 {
         || (uint64_t result = (char *)__dynamic_cast(v8, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A360, 0)) == 0)
  }
  {
    char v11 = sub_2157D6074();
    sub_215D23BE0(a1, (const char *)v11, (uint64_t)"trying to cast camera");
  }
  *(void *)a2 = result + 48;
  *(unsigned char *)(a2 + 120) = 1;
  return result;
}

void sub_2157CCC30(void *a1)
{
  sub_215742CF0(v1 - 184);
  sub_215731D80(a1);
}

void sub_2157CCC44(void *a1)
{
  sub_215742CF0(v1 - 184);
  sub_215731D80(a1);
}

void sub_2157CCC58(void *a1)
{
  sub_215742CF0(v1 - 184);
  sub_215731D80(a1);
}

void *sub_2157CCC70(void *result)
{
  char *result = &unk_26C65A148;
  return result;
}

void sub_2157CCC90(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1 == 1)
  {
    long long v27 = xmmword_215E9AD30;
    sub_2157D19D8((uint64_t)&v30, (int *)&v27);
    long long v9 = v31;
    *((void *)&v18 + 1) = &unk_26C65A188;
    long long __p = v31;
    long long v20 = v32;
    std::__shared_count v21 = v33;
    long long v22 = v34;
    LODWORD(v23) = v35;
    *((void *)&v23 + 1) = 0;
    *(void *)&long long v18 = &unk_26C65A0D8;
    int v4 = (std::__shared_weak_count *)operator new(0x78uLL);
    v4->__shared_weak_owners_ = 0;
    v4->__shared_owners_ = 0;
    p_shared_owners = &v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65A1E8;
    *(_OWORD *)&v4[2].__shared_owners_ = v20;
    long long v10 = v22;
    v4[3].std::__shared_count = v21;
    int v7 = v4 + 1;
    v4[1].__shared_owners_ = (uint64_t)&unk_26C65A188;
    *(_OWORD *)&v4[1].__shared_weak_owners_ = v9;
    *(_OWORD *)&v4[3].__shared_weak_owners_ = v10;
    LODWORD(v4[4].__shared_owners_) = v23;
    v4[4].__shared_weak_owners_ = 0;
    unint64_t v8 = (std::__shared_weak_count_vtbl *)&unk_26C65A0D8;
    goto LABEL_5;
  }
  if (!*a1)
  {
    long long v27 = xmmword_215E9AD30;
    sub_2157D19D8((uint64_t)&v30, (int *)&v27);
    long long v3 = v31;
    *((void *)&v18 + 1) = &unk_26C65A188;
    long long __p = v31;
    long long v20 = v32;
    std::__shared_count v21 = v33;
    long long v22 = v34;
    LODWORD(v23) = v35;
    *((void *)&v23 + 1) = 0;
    *(void *)&long long v18 = &unk_26C659DE8;
    int v4 = (std::__shared_weak_count *)operator new(0x78uLL);
    v4->__shared_weak_owners_ = 0;
    v4->__shared_owners_ = 0;
    p_shared_owners = &v4->__shared_owners_;
    v4->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659E28;
    *(_OWORD *)&v4[2].__shared_owners_ = v20;
    long long v6 = v22;
    v4[3].std::__shared_count = v21;
    int v7 = v4 + 1;
    v4[1].__shared_owners_ = (uint64_t)&unk_26C65A188;
    *(_OWORD *)&v4[1].__shared_weak_owners_ = v3;
    *(_OWORD *)&v4[3].__shared_weak_owners_ = v6;
    LODWORD(v4[4].__shared_owners_) = v23;
    v4[4].__shared_weak_owners_ = 0;
    unint64_t v8 = (std::__shared_weak_count_vtbl *)&unk_26C659DE8;
LABEL_5:
    v4[1].__vftable = v8;
    float v28 = &unk_26C684548;
    *(void *)&long long v29 = v7;
    *((void *)&v29 + 1) = v4;
    atomic_fetch_add_explicit(p_shared_owners, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    long long v31 = v29;
    if (*((void *)&v29 + 1))
    {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v29 + 1) + 8), 1uLL, memory_order_relaxed);
      long long v11 = v31;
    }
    else
    {
      long long v11 = (unint64_t)v29;
    }
    *(void *)a2 = &unk_26C684548;
    *(_OWORD *)(a2 + 8) = v11;
    long long v31 = 0uLL;
    *(unsigned char *)(a2 + 120) = 1;
    float v30 = &unk_26C684548;
    int v14 = (std::__shared_weak_count *)*((void *)&v29 + 1);
    float v28 = &unk_26C684548;
    if (*((void *)&v29 + 1))
    {
      if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v29 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    return;
  }
  char v15 = operator new(0x20uLL);
  long long v16 = xmmword_215E9AD40;
  strcpy((char *)v15, "invalid pixel origin value");
  char v17 = 1;
  sub_2159644BC((long long *)&v15, (uint64_t)&v18);
  *(_OWORD *)a2 = v18;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v26)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v12 = BYTE8(v20);
    if (BYTE8(v20))
    {
      *(_OWORD *)(a2 + 16) = __p;
      *(void *)(a2 + 32) = v20;
      *(void *)&long long v20 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v25)
    {
      uint64_t v13 = *((void *)&v22 + 1);
      *(void *)(a2 + 64) = v22;
      *(std::__shared_count *)(a2 + 48) = v21;
      std::__shared_count v21 = (std::__shared_count)0;
      *(void *)(a2 + 72) = v13;
      *(_OWORD *)(a2 + 80) = v23;
      *(void *)(a2 + 96) = v24;
      *(void *)&long long v22 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 120) = 0;
    if (v12 && SBYTE7(v20) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a2 + 120) = 0;
  }
  if (v17 && SHIBYTE(v16) < 0) {
    operator delete(v15);
  }
}

void *sub_2157CD190(void *result)
{
  char *result = &unk_26C659918;
  return result;
}

void sub_2157CD1B0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  int v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
  int v7 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  int v8 = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  long long v9 = *(const void **)(a1 + 8);
  if (v6 != 11)
  {
    if (v8 == 1)
    {
      if (v7)
      {
        if (!v9
          || (long long v18 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A240, 0)) == 0)
        {
          int8x16_t v19 = sub_2157D358C();
          sub_215D23BE0(a1, (const char *)v19, (uint64_t)"trying to cast camera");
        }
        long long v60 = v18[1];
        long long v65 = v18[2];
        long long v73 = v18[3];
        long long v83 = v18[4];
        long long v91 = v18[5];
        long long v110 = v18[7];
        long long v114 = v18[8];
        long long v102 = v18[6];
        uint64_t v118 = *((void *)v18 + 18);
        unint64_t v120 = a2 | (unint64_t)(a3 << 32);
        int v14 = (char *)operator new(0xB8uLL);
        *((void *)v14 + 2) = 0;
        *((void *)v14 + 1) = 0;
        long long v20 = (atomic_ullong *)(v14 + 8);
        *(void *)int v14 = &unk_26C659CC8;
        *(_OWORD *)(v14 + 40) = v60;
        *(_OWORD *)(v14 + 56) = v65;
        *(_OWORD *)(v14 + 72) = v73;
        *(_OWORD *)(v14 + 88) = v83;
        *(_OWORD *)(v14 + 120) = v102;
        *(_OWORD *)(v14 + 136) = v110;
        *(_OWORD *)(v14 + 152) = v114;
        std::__shared_count v21 = v14 + 24;
        *((void *)v14 + 4) = &unk_26C659958;
        *(_OWORD *)(v14 + 104) = v91;
        *((void *)v14 + 21) = v118;
        *((void *)v14 + 22) = v120;
        long long v22 = &unk_26C659C48;
      }
      else
      {
        if (!v9
          || (long long v44 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A2A0, 0)) == 0)
        {
          long long v45 = sub_2157D2FF0();
          sub_215D23BE0(a1, (const char *)v45, (uint64_t)"trying to cast camera");
        }
        long long v62 = v44[1];
        long long v69 = v44[2];
        long long v77 = v44[3];
        long long v86 = v44[4];
        long long v94 = v44[5];
        long long v111 = v44[7];
        long long v115 = v44[8];
        long long v104 = v44[6];
        uint64_t v119 = *((void *)v44 + 18);
        unint64_t v122 = a2 | (unint64_t)(a3 << 32);
        int v14 = (char *)operator new(0xB8uLL);
        *((void *)v14 + 2) = 0;
        *((void *)v14 + 1) = 0;
        long long v20 = (atomic_ullong *)(v14 + 8);
        *(void *)int v14 = &unk_26C659AC8;
        *(_OWORD *)(v14 + 40) = v62;
        *(_OWORD *)(v14 + 56) = v69;
        *(_OWORD *)(v14 + 72) = v77;
        *(_OWORD *)(v14 + 88) = v86;
        *(_OWORD *)(v14 + 120) = v104;
        *(_OWORD *)(v14 + 136) = v111;
        *(_OWORD *)(v14 + 152) = v115;
        std::__shared_count v21 = v14 + 24;
        *((void *)v14 + 4) = &unk_26C659958;
        *(_OWORD *)(v14 + 104) = v94;
        *((void *)v14 + 21) = v119;
        *((void *)v14 + 22) = v122;
        long long v22 = &unk_26C659A48;
      }
      *((void *)v14 + 3) = v22;
      *(void *)&long long v59 = v21;
      *((void *)&v59 + 1) = v14;
      atomic_fetch_add_explicit(v20, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(v20, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_33;
      }
      goto LABEL_34;
    }
    if (v7)
    {
      if (!v9
        || (std::__shared_count v33 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A300, 0)) == 0)
      {
        long long v58 = sub_2157D65FC();
        goto LABEL_52;
      }
      long long v61 = v33[1];
      long long v67 = v33[2];
      long long v75 = v33[3];
      long long v84 = v33[4];
      uint64_t v92 = *((void *)v33 + 10);
      uint64_t v97 = *((void *)v33 + 11);
      int v103 = *((_DWORD *)v33 + 24);
      long long v112 = *(_OWORD *)((char *)v33 + 120);
      long long v106 = *(_OWORD *)((char *)v33 + 104);
      long long v116 = *(_OWORD *)((char *)v33 + 136);
      uint64_t v128 = *((void *)v33 + 25);
      long long v126 = *(_OWORD *)((char *)v33 + 184);
      long long v124 = *(_OWORD *)((char *)v33 + 168);
      uint64_t v34 = a3;
      long long v121 = *(_OWORD *)((char *)v33 + 152);
      __int16 v35 = *((_WORD *)v33 + 104);
      unint64_t v36 = a2 | (unint64_t)(v34 << 32);
      int v14 = (char *)operator new(0xF8uLL);
      *((void *)v14 + 2) = 0;
      *((void *)v14 + 1) = 0;
      float v37 = (atomic_ullong *)(v14 + 8);
      *(void *)int v14 = &unk_26C659D98;
      *((void *)v14 + 4) = &unk_26C659B18;
      *(_OWORD *)(v14 + 40) = v61;
      float v38 = v14 + 24;
      *(_OWORD *)(v14 + 56) = v67;
      *(_OWORD *)(v14 + 72) = v75;
      *(_OWORD *)(v14 + 88) = v84;
      *((void *)v14 + 13) = v92;
      *((void *)v14 + 14) = v97;
      *((_DWORD *)v14 + 30) = v103;
      *((_OWORD *)v14 + 8) = v106;
      *((_OWORD *)v14 + 9) = v112;
      *((void *)v14 + 28) = v128;
      *((_OWORD *)v14 + 12) = v124;
      *((_OWORD *)v14 + 13) = v126;
      *((_OWORD *)v14 + 10) = v116;
      *((_OWORD *)v14 + 11) = v121;
      *((_WORD *)v14 + 116) = v35;
      *((void *)v14 + 30) = v36;
      float v39 = &unk_26C659D18;
    }
    else
    {
      if (!v9
        || (uint64_t v54 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A360, 0)) == 0)
      {
        long long v58 = sub_2157D6074();
        goto LABEL_52;
      }
      long long v63 = v54[1];
      long long v71 = v54[2];
      long long v79 = v54[3];
      long long v87 = v54[4];
      uint64_t v95 = *((void *)v54 + 10);
      uint64_t v99 = *((void *)v54 + 11);
      int v105 = *((_DWORD *)v54 + 24);
      long long v113 = *(_OWORD *)((char *)v54 + 120);
      long long v107 = *(_OWORD *)((char *)v54 + 104);
      long long v117 = *(_OWORD *)((char *)v54 + 136);
      uint64_t v129 = *((void *)v54 + 25);
      long long v127 = *(_OWORD *)((char *)v54 + 184);
      long long v125 = *(_OWORD *)((char *)v54 + 168);
      uint64_t v55 = a3;
      long long v123 = *(_OWORD *)((char *)v54 + 152);
      __int16 v56 = *((_WORD *)v54 + 104);
      unint64_t v57 = a2 | (unint64_t)(v55 << 32);
      int v14 = (char *)operator new(0xF8uLL);
      *((void *)v14 + 2) = 0;
      *((void *)v14 + 1) = 0;
      float v37 = (atomic_ullong *)(v14 + 8);
      *(void *)int v14 = &unk_26C659BF8;
      *((void *)v14 + 4) = &unk_26C659B18;
      *(_OWORD *)(v14 + 40) = v63;
      float v38 = v14 + 24;
      *(_OWORD *)(v14 + 56) = v71;
      *(_OWORD *)(v14 + 72) = v79;
      *(_OWORD *)(v14 + 88) = v87;
      *((void *)v14 + 13) = v95;
      *((void *)v14 + 14) = v99;
      *((_DWORD *)v14 + 30) = v105;
      *((_OWORD *)v14 + 8) = v107;
      *((_OWORD *)v14 + 9) = v113;
      *((void *)v14 + 28) = v129;
      *((_OWORD *)v14 + 12) = v125;
      *((_OWORD *)v14 + 13) = v127;
      *((_OWORD *)v14 + 10) = v117;
      *((_OWORD *)v14 + 11) = v123;
      *((_WORD *)v14 + 116) = v56;
      *((void *)v14 + 30) = v57;
      float v39 = &unk_26C659B78;
    }
    *((void *)v14 + 3) = v39;
    *(void *)&long long v59 = v38;
    *((void *)&v59 + 1) = v14;
    atomic_fetch_add_explicit(v37, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(v37, 0xFFFFFFFFFFFFFFFFLL)) {
      goto LABEL_34;
    }
LABEL_33:
    (*(void (**)(char *))(*(void *)v14 + 16))(v14);
    std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v14);
    goto LABEL_34;
  }
  if (v8 != 1)
  {
    if (v7)
    {
      if (v9)
      {
        long long v23 = (char *)__dynamic_cast(v9, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A2D0, 0);
        if (v23)
        {
          uint64_t v24 = *((void *)v23 + 2);
          uint64_t v25 = *((void *)v23 + 3);
          int v74 = *((_DWORD *)v23 + 12);
          long long v66 = *((_OWORD *)v23 + 2);
          uint64_t v26 = *(void *)(v23 + 52);
          long long v80 = *(_OWORD *)(v23 + 60);
          long long v88 = *(_OWORD *)(v23 + 76);
          long long v100 = *(_OWORD *)(v23 + 92);
          uint64_t v27 = a3;
          int v108 = *((_DWORD *)v23 + 27);
          __int16 v28 = *((_WORD *)v23 + 56);
          unint64_t v29 = a2 | (unint64_t)(v27 << 32);
          int v14 = (char *)operator new(0x98uLL);
          *((void *)v14 + 2) = 0;
          *((void *)v14 + 1) = 0;
          float v30 = (atomic_ullong *)(v14 + 8);
          *(void *)int v14 = &unk_26C65A028;
          *(_OWORD *)(v14 + 56) = v66;
          *(_OWORD *)(v14 + 84) = v80;
          *(_OWORD *)(v14 + 116) = v100;
          long long v31 = v14 + 24;
          *((void *)v14 + 4) = &unk_26C659E78;
          *((void *)v14 + 5) = v24;
          *((void *)v14 + 6) = v25;
          *((_DWORD *)v14 + 18) = v74;
          *(void *)(v14 + 76) = v26;
          *((_DWORD *)v14 + 33) = v108;
          *(_OWORD *)(v14 + 100) = v88;
          *((_WORD *)v14 + 68) = v28;
          *((void *)v14 + 18) = v29;
          long long v32 = &unk_26C659FA8;
          goto LABEL_41;
        }
      }
      long long v58 = sub_2157D3F1C();
    }
    else
    {
      if (v9)
      {
        __int16 v47 = (char *)__dynamic_cast(v9, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A330, 0);
        if (v47)
        {
          uint64_t v48 = *((void *)v47 + 2);
          uint64_t v49 = *((void *)v47 + 3);
          int v78 = *((_DWORD *)v47 + 12);
          long long v70 = *((_OWORD *)v47 + 2);
          uint64_t v50 = *(void *)(v47 + 52);
          long long v81 = *(_OWORD *)(v47 + 60);
          long long v89 = *(_OWORD *)(v47 + 76);
          long long v101 = *(_OWORD *)(v47 + 92);
          uint64_t v51 = a3;
          int v109 = *((_DWORD *)v47 + 27);
          __int16 v52 = *((_WORD *)v47 + 56);
          unint64_t v53 = a2 | (unint64_t)(v51 << 32);
          int v14 = (char *)operator new(0x98uLL);
          *((void *)v14 + 2) = 0;
          *((void *)v14 + 1) = 0;
          float v30 = (atomic_ullong *)(v14 + 8);
          *(void *)int v14 = &unk_26C659F58;
          *(_OWORD *)(v14 + 56) = v70;
          *(_OWORD *)(v14 + 84) = v81;
          *(_OWORD *)(v14 + 116) = v101;
          long long v31 = v14 + 24;
          *((void *)v14 + 4) = &unk_26C659E78;
          *((void *)v14 + 5) = v48;
          *((void *)v14 + 6) = v49;
          *((_DWORD *)v14 + 18) = v78;
          *(void *)(v14 + 76) = v50;
          *((_DWORD *)v14 + 33) = v109;
          *(_OWORD *)(v14 + 100) = v89;
          *((_WORD *)v14 + 68) = v52;
          *((void *)v14 + 18) = v53;
          long long v32 = &unk_26C659ED8;
LABEL_41:
          *((void *)v14 + 3) = v32;
          *(void *)&long long v59 = v31;
          *((void *)&v59 + 1) = v14;
          atomic_fetch_add_explicit(v30, 1uLL, memory_order_relaxed);
          if (atomic_fetch_add(v30, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_34;
          }
          goto LABEL_33;
        }
      }
      long long v58 = sub_2157D3B28();
    }
LABEL_52:
    sub_215D23BE0(a1, (const char *)v58, (uint64_t)"trying to cast camera");
  }
  if (v7)
  {
    if (!v9
      || (long long v10 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A120, 0)) == 0)
    {
      long long v11 = sub_2157D1088();
      sub_215D23BE0(a1, (const char *)v11, (uint64_t)"trying to cast camera");
    }
    uint64_t v12 = v10[2];
    uint64_t v13 = v10[3];
    long long v64 = *((_OWORD *)v10 + 2);
    long long v72 = *((_OWORD *)v10 + 3);
    long long v82 = *((_OWORD *)v10 + 4);
    int v90 = *((_DWORD *)v10 + 20);
    unint64_t v96 = a2 | (unint64_t)(a3 << 32);
    int v14 = (char *)operator new(0x78uLL);
    *((void *)v14 + 2) = 0;
    *((void *)v14 + 1) = 0;
    char v15 = (atomic_ullong *)(v14 + 8);
    *(void *)int v14 = &unk_26C65A1E8;
    *(_OWORD *)(v14 + 56) = v64;
    *(_OWORD *)(v14 + 72) = v72;
    long long v16 = v14 + 24;
    *((void *)v14 + 4) = &unk_26C65A188;
    *((void *)v14 + 5) = v12;
    *((void *)v14 + 6) = v13;
    *(_OWORD *)(v14 + 88) = v82;
    *((_DWORD *)v14 + 26) = v90;
    *((void *)v14 + 14) = v96;
    char v17 = &unk_26C65A0D8;
  }
  else
  {
    if (!v9
      || (float v40 = __dynamic_cast(v9, (const struct __class_type_info *)&unk_26C684620, (const struct __class_type_info *)&unk_26C65A270, 0)) == 0)
    {
      float v41 = sub_2157CEE7C();
      sub_215D23BE0(a1, (const char *)v41, (uint64_t)"trying to cast camera");
    }
    uint64_t v42 = v40[2];
    uint64_t v43 = v40[3];
    long long v68 = *((_OWORD *)v40 + 2);
    long long v76 = *((_OWORD *)v40 + 3);
    long long v85 = *((_OWORD *)v40 + 4);
    int v93 = *((_DWORD *)v40 + 20);
    unint64_t v98 = a2 | (unint64_t)(a3 << 32);
    int v14 = (char *)operator new(0x78uLL);
    *((void *)v14 + 2) = 0;
    *((void *)v14 + 1) = 0;
    char v15 = (atomic_ullong *)(v14 + 8);
    *(void *)int v14 = &unk_26C659E28;
    *(_OWORD *)(v14 + 56) = v68;
    *(_OWORD *)(v14 + 72) = v76;
    long long v16 = v14 + 24;
    *((void *)v14 + 4) = &unk_26C65A188;
    *((void *)v14 + 5) = v42;
    *((void *)v14 + 6) = v43;
    *(_OWORD *)(v14 + 88) = v85;
    *((_DWORD *)v14 + 26) = v93;
    *((void *)v14 + 14) = v98;
    char v17 = &unk_26C659DE8;
  }
  *((void *)v14 + 3) = v17;
  *(void *)&long long v59 = v16;
  *((void *)&v59 + 1) = v14;
  atomic_fetch_add_explicit(v15, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add(v15, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_33;
  }
LABEL_34:
  uint64_t v46 = *(std::__shared_weak_count **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = v59;
  if (v46)
  {
    if (!atomic_fetch_add(&v46->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
}

void sub_2157CE218()
{
  int v0 = 0;
  sub_2157D6D48();
}

void sub_2157CE300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157CE31C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157CE330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157CE344(uint64_t a1, long long *a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384))
  {
    v19[3] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(v19);
      LODWORD(v16) = v19[0].denom;
      LODWORD(v15) = v19[0].numer;
      *(double *)&qword_267890880 = (double)v15 / (double)v16;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info info = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    uint64_t v21 = 2;
    LOBYTE(v22) = 0;
    char v24 = 0;
    LOBYTE(v25) = 0;
    char v27 = 0;
    LOBYTE(v28) = 0;
    char v29 = 0;
    LOBYTE(v30) = 0;
    char v34 = 0;
    v35[0] = 0;
    v35[24] = 0;
    sub_2157D6F9C();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    v19[0] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v7 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v17) = info.numer;
      LODWORD(v18) = info.denom;
      *(double *)&qword_267890880 = (double)v17 / (double)v18;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v7);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      LOBYTE(v21) = v4;
      LOBYTE(v22) = 0;
      char v24 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v22, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v22 = *a2;
          uint64_t v23 = *((void *)a2 + 2);
        }
        char v24 = 1;
        LOBYTE(v25) = 0;
        char v27 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_23:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v25, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v25 = a2[6];
            uint64_t v26 = *((void *)a2 + 14);
          }
          char v27 = 1;
          LOBYTE(v28) = 0;
          char v29 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_15:
            LOBYTE(v30) = 0;
            char v34 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v30, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v30 = a2[2];
                uint64_t v31 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v32 = _X0;
              uint64_t v33 = 0;
              char v34 = 1;
            }
            sub_215746DAC((uint64_t)v35, (uint64_t)(a2 + 11));
            sub_2157D6F9C();
          }
LABEL_14:
          long long v28 = a2[8];
          char v29 = 1;
          goto LABEL_15;
        }
LABEL_13:
        LOBYTE(v28) = 0;
        char v29 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
LABEL_12:
      LOBYTE(v25) = 0;
      char v27 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_23;
      }
      goto LABEL_13;
    }
  }
  mach_timebase_info info = v3;
  LOBYTE(v21) = v4;
  LOBYTE(v22) = 0;
  char v24 = 0;
  goto LABEL_12;
}

void sub_2157CE78C(_Unwind_Exception *a1)
{
}

void sub_2157CE7A4(_Unwind_Exception *a1)
{
}

void sub_2157CE7BC(_Unwind_Exception *a1)
{
  if (LOBYTE(STACK[0x258]))
  {
    if (SLOBYTE(STACK[0x257]) < 0)
    {
      operator delete((void *)STACK[0x240]);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

void sub_2157CE89C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A3E0, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_15:
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v7 = *(void *)(a1 + 424);
  int v8 = *(std::__shared_weak_count **)(a1 + 432);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  if (!v7)
  {
LABEL_16:
    uint64_t v12 = sub_215AB5250(5u);
    uint64_t v13 = v12;
    if (v12[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v12, *((void *)v12 + 1));
    }
    else
    {
      long long v14 = *(_OWORD *)v12;
      uint64_t v25 = *((void *)v12 + 2);
      long long __dst = v14;
    }
    int v26 = *((_DWORD *)v13 + 6);
    sub_2157C3E6C(&v21, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v18, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)unint64_t v18 = *(_OWORD *)a1;
      uint64_t v19 = *(void *)(a1 + 16);
    }
    int v20 = *(_DWORD *)(a1 + 24);
    unint64_t v15 = operator new(0x20uLL);
    long long v16 = xmmword_215E9AD50;
    strcpy((char *)v15, "cannot return data as VZCamera");
    char v17 = 1;
    sub_215964570((long long **)&v21, (uint64_t)v18, (uint64_t)&v15);
  }
  unint64_t v10 = *(void *)(v7 + 16);
  uint64_t v9 = *(void *)(v7 + 24);
  if (v9)
  {
    *(void *)&long long v11 = v10;
    *((void *)&v11 + 1) = v9;
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  else
  {
    long long v11 = v10;
  }
  *(void *)a2 = &unk_26C684548;
  *(_OWORD *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 120) = 1;
  if (v8)
  {
    if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_2157CECA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23)
{
  sub_2157C3C78(&a23);
  if (*(char *)(v23 - 73) < 0)
  {
    operator delete(*(void **)(v23 - 96));
    sub_215733368(v23 - 112);
    _Unwind_Resume(a1);
  }
  sub_215733368(v23 - 112);
  _Unwind_Resume(a1);
}

void *sub_2157CED24(void *result)
{
  char *result = &unk_26C65A148;
  return result;
}

void sub_2157CED44(void *a1)
{
  *a1 = &unk_26C65A148;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157CED74()
{
  return 1;
}

uint64_t sub_2157CED7C()
{
  return 0;
}

uint64_t sub_2157CED84()
{
  return 11;
}

uint64_t sub_2157CED8C(uint64_t a1)
{
  return a1 + 88;
}

void *sub_2157CED94(void *result)
{
  char *result = &unk_26C659918;
  return result;
}

void sub_2157CEDB4(void *a1)
{
  *a1 = &unk_26C659918;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157CEDE4()
{
  return 0;
}

uint64_t sub_2157CEDEC()
{
  return 11;
}

uint64_t sub_2157CEDF4(uint64_t a1)
{
  return a1 + 88;
}

void *sub_2157CEDFC(void *result)
{
  char *result = &unk_26C659A88;
  return result;
}

void *sub_2157CEE1C(void *result)
{
  char *result = &unk_26C659BB8;
  return result;
}

void *sub_2157CEE3C(void *result)
{
  char *result = &unk_26C659C88;
  return result;
}

void *sub_2157CEE5C(void *result)
{
  char *result = &unk_26C659D58;
  return result;
}

long long *sub_2157CEE7C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884B80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884B80))
  {
    return &xmmword_267884B68;
  }
  uint64_t v1 = sub_2157CEF64();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884B68, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884B78 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884B68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884B68, &dword_21572C000);
  __cxa_guard_release(&qword_267884B80);
  return &xmmword_267884B68;
}

void sub_2157CEF4C(_Unwind_Exception *a1)
{
}

std::string *sub_2157CEF64()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884BA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884BA0))
  {
    return &stru_267884B88;
  }
  sub_2157CF208((uint64_t)__p);
  sub_2157CF060(__p, &stru_267884B88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884B88, &dword_21572C000);
  __cxa_guard_release(&qword_267884BA0);
  return &stru_267884B88;
}

void sub_2157CF020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884BA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884BA0);
  _Unwind_Resume(a1);
}

void sub_2157CF060(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)"float32";
  uint64_t v14 = 0x700000000000000;
  uint64_t v4 = sub_2157CF418();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v16 = v4->__r_.__value_.__r.__words[2];
    long long v15 = v5;
  }
  sub_21573A150(&__p, (uint64_t)v13, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  int v8 = (void **)__p;
  if (__p)
  {
    uint64_t v9 = v12;
    unint64_t v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      unint64_t v10 = __p;
    }
    uint64_t v12 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return;
    }
LABEL_16:
    operator delete(v13[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0) {
    goto LABEL_16;
  }
}

void sub_2157CF1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_2157CF208(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884BC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884BC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PinholeCamera<float, cv3d::kit::cam::PixelOrigin::Corner>]", qword_267884BA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884BA8, &dword_21572C000);
    __cxa_guard_release(&qword_267884BC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884BE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884BE0))
  {
    size_t v3 = sub_215747D98(qword_267884BA8, "<", 0);
    sub_215747C90(qword_267884BA8, 0, v3, qword_267884BC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884BC8, &dword_21572C000);
    __cxa_guard_release(&qword_267884BE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884C00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884C00))
  {
    sub_215E19DF4((uint64_t)qword_267884BC8, (uint64_t)&xmmword_267884BE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884BE8, &dword_21572C000);
    __cxa_guard_release(&qword_267884C00);
  }
  if (byte_267884BFF < 0)
  {
    long long v2 = xmmword_267884BE8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884BE8;
    *(void *)(a1 + 16) = unk_267884BF8;
  }
}

void sub_2157CF3D0(_Unwind_Exception *a1)
{
}

void sub_2157CF3E8(_Unwind_Exception *a1)
{
}

void sub_2157CF400(_Unwind_Exception *a1)
{
}

std::string *sub_2157CF418()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678850C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678850C0))
  {
    return &stru_2678850A8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PixelOrigin::Corner]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678850A8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678850A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678850C0);
  return &stru_2678850A8;
}

void sub_2157CF4DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678850C0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678850C0);
  _Unwind_Resume(a1);
}

uint64_t sub_2157CF520(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C659958;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 24) = *((_OWORD *)a2 + 1);
  uint64_t v3 = *a2;
  double v4 = *((double *)a2 + 1);
  double v5 = 1.0 / *(double *)a2;
  double v6 = *((double *)a2 + 2);
  double v7 = *((double *)a2 + 3);
  *(double *)(a1 + 40) = v5;
  *(double *)(a1 + 48) = 1.0 / v4;
  *(double *)(a1 + 56) = -(v6 * v5);
  *(double *)(a1 + 64) = -(v7 * (1.0 / v4));
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 80) = 0;
  *(double *)(a1 + 104) = v4;
  *(void *)(a1 + 112) = 0;
  *(double *)(a1 + 120) = v6;
  *(double *)(a1 + 128) = v7;
  *(void *)(a1 + 136) = 0x3FF0000000000000;
  sub_2157CF6E0((uint64_t)v11, (double *)(a1 + 8));
  int v8 = v21;
  if (v21)
  {
    sub_2157425B8((uint64_t)v11);
    if (v21) {
      return a1;
    }
  }
  if (!v20) {
    goto LABEL_10;
  }
  if (!v19) {
    goto LABEL_7;
  }
  if (v18 < 0)
  {
    operator delete(v17);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_7:
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_10;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(v15);
  if (v14)
  {
LABEL_8:
    if (v13 < 0) {
      operator delete(__p);
    }
  }
LABEL_10:
  if (!v8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "PinholeModel parameters invalid");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  return a1;
}

void sub_2157CF694(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2157CF6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157CF6BC()
{
}

uint64_t sub_2157CF6D0()
{
  return 1;
}

uint64_t sub_2157CF6D8()
{
  return 12;
}

void sub_2157CF6E0(uint64_t a1, double *a2)
{
  BOOL v4 = ((void)a2[2] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000
    && ((void)a2[3] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
  BOOL v5 = ((void)a2[1] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000
    && (*(void *)a2 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
  if (v5 && v4)
  {
    if (*a2 < 0.00000001 || a2[1] < 0.00000001)
    {
      uint64_t v10 = 0x3E45798EE2308C3ALL;
      int v44 = 0;
      sub_2157D02BC(v43, "focal length must be positive (>= ");
      sub_2157CFFD4((uint64_t)&v42, (uint64_t)v43, (double *)&v10);
      v45[0] = v43;
      v45[1] = ")";
      v45[2] = v43;
      v45[3] = ")";
      v45[4] = ")";
      if (v44 == -1) {
        sub_215742D4C();
      }
      uint64_t v46 = v45;
      ((void (*)(void **, _DWORD *))off_26C659A08[v44])(&v46, v43);
      if (v44 == -1) {
        sub_215742D4C();
      }
      v45[0] = &v46;
      ((void (*)(void **__return_ptr, void *, _DWORD *))off_26C659A20[v44])(v11, v45, v43);
      if (v44 != -1) {
        ((void (*)(void *, _DWORD *))off_26C6599A8[v44])(v45, v43);
      }
      if (SHIBYTE(v12) < 0)
      {
        sub_215738B0C(__dst, v11[0], (unint64_t)v11[1]);
      }
      else
      {
        *(_OWORD *)long long __dst = *(_OWORD *)v11;
        uint64_t v14 = v12;
      }
      char v15 = 1;
      LOBYTE(v16) = 0;
      char v20 = 0;
      char v21 = 1;
      sub_2157CFBCC(0x16u, (long long *)__dst, (uint64_t)&v31);
      *(_OWORD *)a1 = v31;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      if (v41)
      {
        *(unsigned char *)(a1 + 40) = 0;
        int v8 = v34;
        if (v34)
        {
          *(_OWORD *)(a1 + 16) = __p;
          *(void *)(a1 + 32) = v33;
          uint64_t v33 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(a1 + 40) = 1;
        }
        *(unsigned char *)(a1 + 48) = 0;
        *(unsigned char *)(a1 + 104) = 0;
        if (v40)
        {
          uint64_t v9 = v37;
          *(void *)(a1 + 64) = v36;
          *(_OWORD *)(a1 + 48) = v35;
          long long v35 = 0uLL;
          *(void *)(a1 + 72) = v9;
          *(_OWORD *)(a1 + 80) = v38;
          *(void *)(a1 + 96) = v39;
          uint64_t v36 = 0;
          long long v38 = 0uLL;
          uint64_t v39 = 0;
          *(unsigned char *)(a1 + 104) = 1;
        }
        *(unsigned char *)(a1 + 112) = 1;
        *(unsigned char *)(a1 + 120) = 0;
        if (v8 && SHIBYTE(v33) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        *(unsigned char *)(a1 + 120) = 0;
      }
      if (v21)
      {
        if (v20)
        {
          if (v19 < 0) {
            operator delete(v18);
          }
          if (v17 < 0) {
            operator delete(v16);
          }
        }
        if (v15 && SHIBYTE(v14) < 0) {
          operator delete(__dst[0]);
        }
      }
      if (SHIBYTE(v12) < 0) {
        operator delete(v11[0]);
      }
    }
    else
    {
      *(unsigned char *)(a1 + 120) = 1;
    }
    return;
  }
  sub_2157CFEA8((uint64_t)v22, "focal length and principal point must be finite");
  char v30 = 1;
  sub_2157CFBCC(0x16u, (long long *)v22, (uint64_t)&v31);
  *(_OWORD *)a1 = v31;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (!v41)
  {
    *(unsigned char *)(a1 + 120) = 0;
    if (!v30) {
      return;
    }
LABEL_34:
    if (!v29) {
      goto LABEL_37;
    }
    if (v28 < 0)
    {
      operator delete(v27);
      if ((v26 & 0x80000000) == 0)
      {
LABEL_37:
        if (!v24) {
          return;
        }
LABEL_38:
        if (v23 < 0) {
          operator delete(v22[0]);
        }
        return;
      }
    }
    else if ((v26 & 0x80000000) == 0)
    {
      goto LABEL_37;
    }
    operator delete(v25);
    if (!v24) {
      return;
    }
    goto LABEL_38;
  }
  *(unsigned char *)(a1 + 40) = 0;
  int v6 = v34;
  if (v34)
  {
    *(_OWORD *)(a1 + 16) = __p;
    *(void *)(a1 + 32) = v33;
    uint64_t v33 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  if (v40)
  {
    uint64_t v7 = v37;
    *(void *)(a1 + 64) = v36;
    *(_OWORD *)(a1 + 48) = v35;
    long long v35 = 0uLL;
    *(void *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + 80) = v38;
    *(void *)(a1 + 96) = v39;
    uint64_t v36 = 0;
    long long v38 = 0uLL;
    uint64_t v39 = 0;
    *(unsigned char *)(a1 + 104) = 1;
  }
  *(unsigned char *)(a1 + 112) = 1;
  *(unsigned char *)(a1 + 120) = 0;
  if (v6 && SHIBYTE(v33) < 0) {
    operator delete((void *)__p);
  }
  if (v30) {
    goto LABEL_34;
  }
}

void sub_2157CFB38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157CFBCC(unsigned int a1@<W0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_215741BFC(v7, a2);
  sub_2157CFD48((uint64_t)&v16, a1, (long long *)v7);
  *(_OWORD *)a3 = v16;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v26)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v5 = v19;
    if (v19)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v18;
      uint64_t v18 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v25)
    {
      uint64_t v6 = v22;
      *(void *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 48) = v20;
      long long v20 = 0uLL;
      *(void *)(a3 + 72) = v6;
      *(_OWORD *)(a3 + 80) = v23;
      *(void *)(a3 + 96) = v24;
      uint64_t v21 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    if (v5 && SHIBYTE(v18) < 0) {
      operator delete((void *)__p);
    }
  }
  if (v15)
  {
    if (!v14) {
      goto LABEL_13;
    }
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v9) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v10);
    if (!v9) {
      return;
    }
LABEL_14:
    if (v8 < 0) {
      operator delete(v7[0]);
    }
  }
}

void sub_2157CFD34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_2157CFD48(uint64_t a1, unsigned int a2, long long *a3)
{
  uint64_t v6 = std::generic_category();
  sub_215741BFC(__dst, a3);
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (!v18) {
    return a1;
  }
  *(unsigned char *)(a1 + 40) = 0;
  if (v11)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)__dst;
    *(void *)(a1 + 32) = v10;
    __dst[1] = 0;
    uint64_t v10 = 0;
    __dst[0] = 0;
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  if (!v17)
  {
    *(unsigned char *)(a1 + 112) = 1;
    if (!v11) {
      return a1;
    }
    goto LABEL_13;
  }
  uint64_t v7 = v14;
  *(void *)(a1 + 64) = v13;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v12;
  v12[0] = 0;
  v12[1] = 0;
  *(void *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)__p;
  *(void *)(a1 + 96) = v16;
  __p[1] = 0;
  uint64_t v16 = 0;
  uint64_t v13 = 0;
  __p[0] = 0;
  *(unsigned char *)(a1 + 104) = 1;
  *(unsigned char *)(a1 + 112) = 1;
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v13) & 0x80000000) == 0) {
      goto LABEL_7;
    }
LABEL_12:
    operator delete(v12[0]);
    if (!v11) {
      return a1;
    }
    goto LABEL_13;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v13) < 0) {
    goto LABEL_12;
  }
LABEL_7:
  if (!v11) {
    return a1;
  }
LABEL_13:
  if ((SHIBYTE(v10) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(__dst[0]);
  return a1;
}

uint64_t sub_2157CFEA8(uint64_t a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    p_dst = (long long *)operator new(v7 + 1);
    *((void *)&__dst + 1) = v5;
    unint64_t v12 = v8 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
LABEL_9:
    memcpy(p_dst, __s, v5);
    *((unsigned char *)p_dst + v5) = 0;
    if ((SHIBYTE(v12) & 0x80000000) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    char v9 = (void *)__dst;
    sub_215738B0C((unsigned char *)a1, (void *)__dst, *((unint64_t *)&__dst + 1));
    *(unsigned char *)(a1 + 24) = 1;
    *(unsigned char *)(a1 + 32) = 0;
    *(unsigned char *)(a1 + 88) = 0;
    operator delete(v9);
    return a1;
  }
  HIBYTE(v12) = v4;
  p_dst = &__dst;
  if (v4) {
    goto LABEL_9;
  }
  LOBYTE(__dst) = 0;
  if (SHIBYTE(v12) < 0) {
    goto LABEL_10;
  }
LABEL_5:
  *(_OWORD *)a1 = __dst;
  *(void *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 24) = 1;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  return a1;
}

void sub_2157CFFC0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_2157CFFD4(uint64_t a1, uint64_t a2, double *a3)
{
  std::to_string(&v22, *a3);
  size_t v5 = (std::string *)v22.__r_.__value_.__r.__words[0];
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v6 = &v22;
  }
  else {
    uint64_t v6 = (std::string *)v22.__r_.__value_.__r.__words[0];
  }
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v22.__r_.__value_.__l.__size_;
  }
  uint64_t v8 = (char *)&v6[-1].__r_.__value_.__r.__words[2] + 7;
  do
  {
    if (!size)
    {
      std::string::size_type size = -1;
      if ((*((unsigned char *)&v22.__r_.__value_.__s + 23) & 0x80) != 0) {
        goto LABEL_14;
      }
LABEL_11:
      if (size != HIBYTE(v22.__r_.__value_.__r.__words[2]) - 1)
      {
        size_t v5 = &v22;
        goto LABEL_17;
      }
LABEL_15:
      uint64_t v23 = a2;
      uint64_t v24 = &v22;
      uint64_t v25 = a2;
      char v26 = &v22;
      uint64_t v27 = &v22;
      uint64_t v10 = *(unsigned int *)(a2 + 24);
      if (v10 == -1) {
        sub_215742D4C();
      }
      goto LABEL_16;
    }
    int v9 = v8[size--];
  }
  while (v9 == 48);
  if ((*((unsigned char *)&v22.__r_.__value_.__s + 23) & 0x80) == 0) {
    goto LABEL_11;
  }
LABEL_14:
  if (size == v22.__r_.__value_.__l.__size_ - 1) {
    goto LABEL_15;
  }
LABEL_17:
  if (strtod((const char *)v5, 0) != *a3)
  {
    uint64_t v23 = a2;
    uint64_t v24 = &v22;
    uint64_t v25 = a2;
    char v26 = &v22;
    uint64_t v27 = &v22;
    uint64_t v10 = *(unsigned int *)(a2 + 24);
    if (v10 == -1) {
      sub_215742D4C();
    }
LABEL_16:
    __p[0] = &v23;
    ((void (*)(void **, uint64_t))off_26C6599D8[v10])(__p, a2);
    goto LABEL_40;
  }
  std::string::size_type v11 = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v12 = &v22;
  }
  else {
    unint64_t v12 = (std::string *)v22.__r_.__value_.__r.__words[0];
  }
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v11 = v22.__r_.__value_.__l.__size_;
  }
  uint64_t v13 = 1;
  if (v12->__r_.__value_.__s.__data_[size] == 46) {
    uint64_t v13 = 2;
  }
  size_t v14 = v13 + size;
  if (v11 >= v14) {
    size_t v15 = v14;
  }
  else {
    size_t v15 = v11;
  }
  if (v15 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v15 >= 0x17)
  {
    uint64_t v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17) {
      uint64_t v17 = v15 | 7;
    }
    uint64_t v18 = v17 + 1;
    uint64_t v16 = operator new(v17 + 1);
    __p[1] = (void *)v15;
    unint64_t v21 = v18 | 0x8000000000000000;
    __p[0] = v16;
    goto LABEL_37;
  }
  HIBYTE(v21) = v15;
  uint64_t v16 = __p;
  if (v15) {
LABEL_37:
  }
    memmove(v16, v12, v15);
  *((unsigned char *)v16 + v15) = 0;
  uint64_t v23 = a2;
  uint64_t v24 = (std::string *)__p;
  uint64_t v25 = a2;
  char v26 = (std::string *)__p;
  uint64_t v27 = (std::string *)__p;
  uint64_t v19 = *(unsigned int *)(a2 + 24);
  if (v19 == -1) {
    sub_215742D4C();
  }
  char v28 = &v23;
  ((void (*)(uint64_t **, uint64_t))off_26C6599F0[v19])(&v28, a2);
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
LABEL_40:
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_43;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    return;
  }
LABEL_43:
  operator delete(v22.__r_.__value_.__l.__data_);
}

void sub_2157D0250(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if ((a20 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2157D02BC(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6599A8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

uint64_t **sub_2157D03B0(uint64_t **result)
{
  uint64_t v1 = **result;
  char v2 = (long long *)(*result)[1];
  uint64_t v3 = *(unsigned int *)(v1 + 24);
  if (v3 != -1) {
    uint64_t result = (uint64_t **)((uint64_t (*)(char *, uint64_t))off_26C6599A8[v3])(&v5, v1);
  }
  *(_DWORD *)(v1 + 24) = -1;
  if (*((char *)v2 + 23) < 0)
  {
    uint64_t result = (uint64_t **)sub_215738B0C((unsigned char *)v1, *(void **)v2, *((void *)v2 + 1));
  }
  else
  {
    long long v4 = *v2;
    *(void *)(v1 + 16) = *((void *)v2 + 2);
    *(_OWORD *)uint64_t v1 = v4;
  }
  *(_DWORD *)(v1 + 24) = 1;
  return result;
}

void sub_2157D0450(uint64_t a1, uint64_t a2)
{
}

char *sub_2157D045C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157D0684((char **)a2, v3);
    *(void *)(a2 + 8) = result;
  }
  else
  {
    if (*(char *)(v3 + 23) < 0)
    {
      sub_215738B0C(*(unsigned char **)(a2 + 8), *(void **)v3, *(void *)(v3 + 8));
    }
    else
    {
      long long v5 = *(_OWORD *)v3;
      *(void *)(v4 + 16) = *(void *)(v3 + 16);
      *(_OWORD *)unint64_t v4 = v5;
    }
    uint64_t result = (char *)(v4 + 24);
    *(void *)(a2 + 8) = v4 + 24;
    *(void *)(a2 + 8) = v4 + 24;
  }
  return result;
}

void sub_2157D04F4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_2157D04FC(uint64_t *a1, uint64_t a2)
{
  v14[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v14 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v14[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v9 = v3;
  *(void *)uint64_t v10 = v14[0];
  *(void *)&v10[7] = *(void *)((char *)v14 + 7);
  char v11 = v4;
  memset(v14, 0, 15);
  long long v5 = (long long *)a1[1];
  if (*((char *)v5 + 23) < 0)
  {
    sub_215738B0C(&__p, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v13 = *((void *)v5 + 2);
    long long __p = v6;
  }
  uint64_t v7 = *(unsigned int *)(v2 + 24);
  if (v7 != -1) {
    ((void (*)(char *, uint64_t))off_26C6599A8[v7])(&v8, v2);
  }
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v9, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if ((v11 & 0x80000000) == 0) {
      return;
    }
LABEL_10:
    operator delete(v9);
    return;
  }
  operator delete((void *)__p);
  if (v11 < 0) {
    goto LABEL_10;
  }
}

void sub_2157D0640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157D0684(char **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * ((a1[2] - v3) >> 3) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v3) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3) >= 0x555555555555555) {
    unint64_t v8 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    uint64_t v9 = (char *)operator new(24 * v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &v9[24 * v5];
  uint64_t v16 = v10;
  uint64_t v17 = v10;
  uint64_t v18 = &v9[24 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_215738B0C(v10, *(void **)a2, *(void *)(a2 + 8));
    uint64_t v3 = *a1;
    char v4 = a1[1];
    uint64_t v10 = v16;
    char v11 = v17 + 24;
    if (v4 == *a1)
    {
LABEL_17:
      uint64_t v13 = v3;
      goto LABEL_18;
    }
  }
  else
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)a2;
    *((void *)v10 + 2) = *(void *)(a2 + 16);
    char v11 = v10 + 24;
    if (v4 == v3) {
      goto LABEL_17;
    }
  }
  do
  {
    long long v12 = *(_OWORD *)(v4 - 24);
    *((void *)v10 - 1) = *((void *)v4 - 1);
    *(_OWORD *)(v10 - 24) = v12;
    v10 -= 24;
    *((void *)v4 - 2) = 0;
    *((void *)v4 - 1) = 0;
    *((void *)v4 - 3) = 0;
    v4 -= 24;
  }
  while (v4 != v3);
  uint64_t v13 = *a1;
  uint64_t v3 = a1[1];
LABEL_18:
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v18;
  if (v3 != v13)
  {
    size_t v14 = (void **)(v3 - 24);
    do
    {
      if (*((char *)v14 + 23) < 0) {
        operator delete(*v14);
      }
      v14 -= 3;
    }
    while (v14 + 3 != (void **)v13);
    uint64_t v3 = v13;
  }
  if (v3) {
    operator delete(v3);
  }
  return v11;
}

void sub_2157D0848(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D085C(void *a1)
{
  *a1 = &unk_26C659A88;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D088C()
{
  return 0;
}

uint64_t sub_2157D0894()
{
  return 1;
}

uint64_t sub_2157D089C()
{
  return 12;
}

uint64_t sub_2157D08A4(uint64_t a1)
{
  return a1 + 152;
}

void *sub_2157D08AC(void *result)
{
  char *result = &unk_26C659A88;
  return result;
}

void sub_2157D08CC(void *a1)
{
  *a1 = &unk_26C659A88;
  JUMPOUT(0x2166C4D20);
}

void sub_2157D08FC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659AC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157D091C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659AC8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D0970(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_2157D099C(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = &unk_26C659B18;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 24) = *((_OWORD *)a2 + 1);
  long long v3 = *((_OWORD *)a2 + 2);
  long long v4 = *((_OWORD *)a2 + 3);
  *(void *)(a1 + 72) = a2[8];
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 40) = v3;
  uint64_t v5 = a2[9];
  *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 20);
  *(void *)(a1 + 80) = v5;
  uint64_t v6 = *a2;
  double v7 = *((double *)a2 + 1);
  double v8 = 1.0 / *(double *)a2;
  double v9 = *((double *)a2 + 2);
  double v10 = *((double *)a2 + 3);
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 136) = 0;
  double v11 = *((double *)a2 + 8);
  BOOL v12 = *((double *)a2 + 6) == 0.0;
  if (*((double *)a2 + 7) != 0.0) {
    BOOL v12 = 0;
  }
  *(double *)(a1 + 96) = v8;
  *(double *)(a1 + 104) = 1.0 / v7;
  *(double *)(a1 + 112) = -(v9 * v8);
  *(double *)(a1 + 120) = -(v10 * (1.0 / v7));
  *(void *)(a1 + 128) = v6;
  *(double *)(a1 + 160) = v7;
  *(void *)(a1 + 168) = 0;
  *(double *)(a1 + 176) = v9;
  *(double *)(a1 + 184) = v10;
  *(void *)(a1 + 192) = 0x3FF0000000000000;
  if (v11 != 0.0) {
    BOOL v12 = 0;
  }
  *(unsigned char *)(a1 + 200) = v12;
  *(unsigned char *)(a1 + 201) = v11 == 0.0;
  sub_2157D0BB0((uint64_t)v16, a1 + 8);
  int v13 = v26;
  if (!v26 || (sub_2157425B8((uint64_t)v16), !v26))
  {
    if (!v25) {
      goto LABEL_14;
    }
    if (!v24) {
      goto LABEL_11;
    }
    if (v23 < 0)
    {
      operator delete(v22);
      if ((v21 & 0x80000000) == 0)
      {
LABEL_11:
        if (v19) {
          goto LABEL_12;
        }
        goto LABEL_14;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
      goto LABEL_11;
    }
    operator delete(v20);
    if (v19)
    {
LABEL_12:
      if (v18 < 0) {
        operator delete(__p);
      }
    }
LABEL_14:
    if (!v13)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(exception, "HeikkilaModel parameters invalid");
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
    }
  }
  return a1;
}

void sub_2157D0B64(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2157D0B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D0B8C()
{
}

uint64_t sub_2157D0BA0()
{
  return 2;
}

uint64_t sub_2157D0BA8()
{
  return 12;
}

void sub_2157D0BB0(uint64_t a1, uint64_t a2)
{
  sub_2157CF6E0(a1, (double *)a2);
  if (!*(unsigned char *)(a1 + 120)) {
    return;
  }
  BOOL v4 = (*(void *)(a2 + 32) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
  if ((*(void *)(a2 + 32) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    BOOL v4 = (*(void *)(a2 + 40) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
    if ((*(void *)(a2 + 40) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      BOOL v4 = (*(void *)(a2 + 48) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
      if ((*(void *)(a2 + 48) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        BOOL v4 = (*(void *)(a2 + 56) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
        if ((*(void *)(a2 + 56) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL) {
          BOOL v4 = (*(void *)(a2 + 64) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
        }
      }
    }
  }
  if (v4)
  {
    if ((*(void *)(a2 + 72) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      sub_2157CFEA8((uint64_t)v9, "convergence epsilon must be finite");
      char v17 = 1;
      sub_2157CFBCC(0x16u, (long long *)v9, (uint64_t)&v27);
      *(_OWORD *)a1 = v27;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      if (v37)
      {
        *(unsigned char *)(a1 + 40) = 0;
        int v7 = v30;
        if (v30)
        {
          *(_OWORD *)(a1 + 16) = v28;
          *(void *)(a1 + 32) = v29;
          uint64_t v29 = 0;
          long long v28 = 0uLL;
          *(unsigned char *)(a1 + 40) = 1;
        }
        *(unsigned char *)(a1 + 48) = 0;
        *(unsigned char *)(a1 + 104) = 0;
        if (v36)
        {
          uint64_t v8 = v33;
          *(void *)(a1 + 64) = v32;
          *(_OWORD *)(a1 + 48) = v31;
          long long v31 = 0uLL;
          *(void *)(a1 + 72) = v8;
          *(_OWORD *)(a1 + 80) = v34;
          *(void *)(a1 + 96) = v35;
          uint64_t v32 = 0;
          long long v34 = 0uLL;
          uint64_t v35 = 0;
          *(unsigned char *)(a1 + 104) = 1;
        }
        *(unsigned char *)(a1 + 112) = 1;
        *(unsigned char *)(a1 + 120) = 0;
        if (v7 && SHIBYTE(v29) < 0) {
          operator delete((void *)v28);
        }
      }
      else
      {
        *(unsigned char *)(a1 + 120) = 0;
      }
      if (v17)
      {
        if (v16)
        {
          if (v15 < 0) {
            operator delete(v14);
          }
          if (v13 < 0) {
            operator delete(v12);
          }
        }
        if (v11)
        {
          if (v10 < 0) {
            operator delete(v9[0]);
          }
        }
      }
    }
    else
    {
      *(unsigned char *)(a1 + 120) = 1;
    }
    return;
  }
  sub_2157CFEA8((uint64_t)v18, "distortion coefficients must be finite");
  char v26 = 1;
  sub_2157CFBCC(0x16u, (long long *)v18, (uint64_t)&v27);
  *(_OWORD *)a1 = v27;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (!v37)
  {
    *(unsigned char *)(a1 + 120) = 0;
    if (!v26) {
      return;
    }
    goto LABEL_30;
  }
  *(unsigned char *)(a1 + 40) = 0;
  int v5 = v30;
  if (v30)
  {
    *(_OWORD *)(a1 + 16) = v28;
    *(void *)(a1 + 32) = v29;
    uint64_t v29 = 0;
    long long v28 = 0uLL;
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  if (v36)
  {
    uint64_t v6 = v33;
    *(void *)(a1 + 64) = v32;
    *(_OWORD *)(a1 + 48) = v31;
    long long v31 = 0uLL;
    *(void *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 80) = v34;
    *(void *)(a1 + 96) = v35;
    uint64_t v32 = 0;
    long long v34 = 0uLL;
    uint64_t v35 = 0;
    *(unsigned char *)(a1 + 104) = 1;
  }
  *(unsigned char *)(a1 + 112) = 1;
  *(unsigned char *)(a1 + 120) = 0;
  if (v5 && SHIBYTE(v29) < 0) {
    operator delete((void *)v28);
  }
  if (v26)
  {
LABEL_30:
    if (v25)
    {
      if (v24 < 0) {
        operator delete(__p);
      }
      if (v22 < 0) {
        operator delete(v21);
      }
    }
    if (v20 && v19 < 0) {
      operator delete(v18[0]);
    }
  }
}

void sub_2157D0F24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D0F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D0F4C(void *a1)
{
  *a1 = &unk_26C659BB8;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D0F7C()
{
  return 0;
}

uint64_t sub_2157D0F84()
{
  return 2;
}

uint64_t sub_2157D0F8C()
{
  return 12;
}

uint64_t sub_2157D0F94(uint64_t a1)
{
  return a1 + 216;
}

void *sub_2157D0F9C(void *result)
{
  char *result = &unk_26C659BB8;
  return result;
}

void sub_2157D0FBC(void *a1)
{
  *a1 = &unk_26C659BB8;
  JUMPOUT(0x2166C4D20);
}

void sub_2157D0FEC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659BF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157D100C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659BF8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D1060(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

long long *sub_2157D1088()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884A40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884A40))
  {
    return &xmmword_267884A28;
  }
  uint64_t v1 = sub_2157D1170();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884A28, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884A38 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884A28 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884A28, &dword_21572C000);
  __cxa_guard_release(&qword_267884A40);
  return &xmmword_267884A28;
}

void sub_2157D1158(_Unwind_Exception *a1)
{
}

std::string *sub_2157D1170()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884A60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884A60))
  {
    return &stru_267884A48;
  }
  sub_2157D1414((uint64_t)__p);
  sub_2157D126C(__p, &stru_267884A48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884A48, &dword_21572C000);
  __cxa_guard_release(&qword_267884A60);
  return &stru_267884A48;
}

void sub_2157D122C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884A60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884A60);
  _Unwind_Resume(a1);
}

void sub_2157D126C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  *(_OWORD *)char v13 = *(_OWORD *)"float32";
  uint64_t v14 = 0x700000000000000;
  BOOL v4 = sub_2157D1624();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v16 = v4->__r_.__value_.__r.__words[2];
    long long v15 = v5;
  }
  sub_21573A150(&__p, (uint64_t)v13, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  uint64_t v8 = (void **)__p;
  if (__p)
  {
    double v9 = v12;
    char v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      char v10 = __p;
    }
    BOOL v12 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return;
    }
LABEL_16:
    operator delete(v13[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0) {
    goto LABEL_16;
  }
}

void sub_2157D13B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_2157D1414(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884A80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884A80))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PinholeCamera<float, cv3d::kit::cam::PixelOrigin::Center>]", qword_267884A68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884A68, &dword_21572C000);
    __cxa_guard_release(&qword_267884A80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884AA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884AA0))
  {
    size_t v3 = sub_215747D98(qword_267884A68, "<", 0);
    sub_215747C90(qword_267884A68, 0, v3, qword_267884A88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884A88, &dword_21572C000);
    __cxa_guard_release(&qword_267884AA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884AC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884AC0))
  {
    sub_215E19DF4((uint64_t)qword_267884A88, (uint64_t)&xmmword_267884AA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884AA8, &dword_21572C000);
    __cxa_guard_release(&qword_267884AC0);
  }
  if (byte_267884ABF < 0)
  {
    long long v2 = xmmword_267884AA8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884AA8;
    *(void *)(a1 + 16) = unk_267884AB8;
  }
}

void sub_2157D15DC(_Unwind_Exception *a1)
{
}

void sub_2157D15F4(_Unwind_Exception *a1)
{
}

void sub_2157D160C(_Unwind_Exception *a1)
{
}

std::string *sub_2157D1624()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678850A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678850A0))
  {
    return &stru_267885088;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PixelOrigin::Center]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885088);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885088, &dword_21572C000);
  __cxa_guard_release(&qword_2678850A0);
  return &stru_267885088;
}

void sub_2157D16E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678850A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678850A0);
  _Unwind_Resume(a1);
}

void sub_2157D1728(void *a1)
{
  *a1 = &unk_26C659C88;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D1758()
{
  return 1;
}

uint64_t sub_2157D1760()
{
  return 1;
}

uint64_t sub_2157D1768()
{
  return 12;
}

uint64_t sub_2157D1770(uint64_t a1)
{
  return a1 + 152;
}

void *sub_2157D1778(void *result)
{
  char *result = &unk_26C659C88;
  return result;
}

void sub_2157D1798(void *a1)
{
  *a1 = &unk_26C659C88;
  JUMPOUT(0x2166C4D20);
}

void sub_2157D17C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659CC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157D17E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659CC8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D183C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_2157D1864(void *a1)
{
  *a1 = &unk_26C659D58;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D1894()
{
  return 1;
}

uint64_t sub_2157D189C()
{
  return 2;
}

uint64_t sub_2157D18A4()
{
  return 12;
}

uint64_t sub_2157D18AC(uint64_t a1)
{
  return a1 + 216;
}

void *sub_2157D18B4(void *result)
{
  char *result = &unk_26C659D58;
  return result;
}

void sub_2157D18D4(void *a1)
{
  *a1 = &unk_26C659D58;
  JUMPOUT(0x2166C4D20);
}

void sub_2157D1904(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659D98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157D1924(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659D98;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D1978(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_2157D19A0(void *a1)
{
  *a1 = &unk_26C65A148;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D19D0()
{
  return 1;
}

uint64_t sub_2157D19D8(uint64_t a1, int *a2)
{
  *(void *)a1 = &unk_26C65A188;
  *(void *)(a1 + 8) = *(void *)a2;
  *(void *)(a1 + 16) = *((void *)a2 + 1);
  int v3 = *a2;
  float v4 = *((float *)a2 + 1);
  float v5 = 1.0 / *(float *)a2;
  float v6 = *((float *)a2 + 2);
  float v7 = *((float *)a2 + 3);
  *(float *)(a1 + 24) = v5;
  *(float *)(a1 + 28) = 1.0 / v4;
  *(float *)(a1 + 32) = -(float)(v6 * v5);
  *(float *)(a1 + 36) = -(float)(v7 * (float)(1.0 / v4));
  *(_DWORD *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  *(float *)(a1 + 56) = v4;
  *(_DWORD *)(a1 + 60) = 0;
  *(float *)(a1 + 64) = v6;
  *(float *)(a1 + 68) = v7;
  *(_DWORD *)(a1 + 72) = 1065353216;
  sub_2157D1B9C((uint64_t)v11, (float *)(a1 + 8));
  int v8 = v21;
  if (v21)
  {
    sub_2157425B8((uint64_t)v11);
    if (v21) {
      return a1;
    }
  }
  if (!v20) {
    goto LABEL_10;
  }
  if (!v19) {
    goto LABEL_7;
  }
  if (v18 < 0)
  {
    operator delete(v17);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_7:
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_10;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_7;
  }
  operator delete(v15);
  if (v14)
  {
LABEL_8:
    if (v13 < 0) {
      operator delete(__p);
    }
  }
LABEL_10:
  if (!v8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "PinholeModel parameters invalid");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  return a1;
}

void sub_2157D1B50(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2157D1B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D1B78()
{
}

uint64_t sub_2157D1B8C()
{
  return 1;
}

uint64_t sub_2157D1B94()
{
  return 11;
}

void sub_2157D1B9C(uint64_t a1, float *a2)
{
  BOOL v4 = (a2[2] & 0x7FFFFFFFu) < 0x7F800000 && (a2[3] & 0x7FFFFFFFu) < 0x7F800000;
  BOOL v5 = (a2[1] & 0x7FFFFFFFu) < 0x7F800000 && (*(_DWORD *)a2 & 0x7FFFFFFFu) < 0x7F800000;
  if (v5 && v4)
  {
    if (*a2 < 0.000001 || a2[1] < 0.000001)
    {
      int v11 = 897988541;
      int v45 = 0;
      sub_2157D02BC(v44, "focal length must be positive (>= ");
      sub_2157D208C((uint64_t)&v43, (uint64_t)v44, (float *)&v11);
      v46[0] = v44;
      v46[1] = ")";
      v46[2] = v44;
      v46[3] = ")";
      v46[4] = ")";
      if (v45 == -1) {
        sub_215742D4C();
      }
      __int16 v47 = v46;
      ((void (*)(void **, _DWORD *))off_26C659A08[v45])(&v47, v44);
      if (v45 == -1) {
        sub_215742D4C();
      }
      v46[0] = &v47;
      ((void (*)(void **__return_ptr, void *, _DWORD *))off_26C659A20[v45])(v12, v46, v44);
      if (v45 != -1) {
        ((void (*)(void *, _DWORD *))off_26C6599A8[v45])(v46, v44);
      }
      if (SHIBYTE(v13) < 0)
      {
        sub_215738B0C(__dst, v12[0], (unint64_t)v12[1]);
      }
      else
      {
        *(_OWORD *)long long __dst = *(_OWORD *)v12;
        uint64_t v15 = v13;
      }
      char v16 = 1;
      LOBYTE(v17) = 0;
      char v21 = 0;
      char v22 = 1;
      sub_2157CFBCC(0x16u, (long long *)__dst, (uint64_t)&v32);
      *(_OWORD *)a1 = v32;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      if (v42)
      {
        *(unsigned char *)(a1 + 40) = 0;
        int v9 = v35;
        if (v35)
        {
          *(_OWORD *)(a1 + 16) = v33;
          *(void *)(a1 + 32) = v34;
          uint64_t v34 = 0;
          long long v33 = 0uLL;
          *(unsigned char *)(a1 + 40) = 1;
        }
        *(unsigned char *)(a1 + 48) = 0;
        *(unsigned char *)(a1 + 104) = 0;
        if (v41)
        {
          uint64_t v10 = v38;
          *(void *)(a1 + 64) = v37;
          *(_OWORD *)(a1 + 48) = v36;
          uint64_t v37 = 0;
          long long v36 = 0uLL;
          *(void *)(a1 + 72) = v10;
          *(_OWORD *)(a1 + 80) = v39;
          *(void *)(a1 + 96) = v40;
          long long v39 = 0uLL;
          uint64_t v40 = 0;
          *(unsigned char *)(a1 + 104) = 1;
        }
        *(unsigned char *)(a1 + 112) = 1;
        *(unsigned char *)(a1 + 120) = 0;
        if (v9 && SHIBYTE(v34) < 0) {
          operator delete((void *)v33);
        }
      }
      else
      {
        *(unsigned char *)(a1 + 120) = 0;
      }
      if (v22)
      {
        if (v21)
        {
          if (v20 < 0) {
            operator delete(__p);
          }
          if (v18 < 0) {
            operator delete(v17);
          }
        }
        if (v16 && SHIBYTE(v15) < 0) {
          operator delete(__dst[0]);
        }
      }
      if (SHIBYTE(v13) < 0) {
        operator delete(v12[0]);
      }
    }
    else
    {
      *(unsigned char *)(a1 + 120) = 1;
    }
    return;
  }
  sub_2157CFEA8((uint64_t)&v23, "focal length and principal point must be finite");
  char v31 = 1;
  sub_2157CFBCC(0x16u, &v23, (uint64_t)&v32);
  *(_OWORD *)a1 = v32;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (!v42)
  {
    *(unsigned char *)(a1 + 120) = 0;
    if (!v31) {
      return;
    }
LABEL_35:
    if (!v30) {
      goto LABEL_38;
    }
    if (v29 < 0)
    {
      operator delete(v28);
      if ((v27 & 0x80000000) == 0)
      {
LABEL_38:
        if (!v25) {
          return;
        }
LABEL_39:
        if (v24 < 0) {
          operator delete((void *)v23);
        }
        return;
      }
    }
    else if ((v27 & 0x80000000) == 0)
    {
      goto LABEL_38;
    }
    operator delete(v26);
    if (!v25) {
      return;
    }
    goto LABEL_39;
  }
  *(unsigned char *)(a1 + 40) = 0;
  int v7 = v35;
  if (v35)
  {
    *(_OWORD *)(a1 + 16) = v33;
    *(void *)(a1 + 32) = v34;
    uint64_t v34 = 0;
    long long v33 = 0uLL;
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  if (v41)
  {
    uint64_t v8 = v38;
    *(void *)(a1 + 64) = v37;
    *(_OWORD *)(a1 + 48) = v36;
    uint64_t v37 = 0;
    long long v36 = 0uLL;
    *(void *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 80) = v39;
    *(void *)(a1 + 96) = v40;
    long long v39 = 0uLL;
    uint64_t v40 = 0;
    *(unsigned char *)(a1 + 104) = 1;
  }
  *(unsigned char *)(a1 + 112) = 1;
  *(unsigned char *)(a1 + 120) = 0;
  if (v7 && SHIBYTE(v34) < 0) {
    operator delete((void *)v33);
  }
  if (v31) {
    goto LABEL_35;
  }
}

void sub_2157D1FF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157D208C(uint64_t a1, uint64_t a2, float *a3)
{
  std::to_string(&v22, *a3);
  BOOL v5 = (std::string *)v22.__r_.__value_.__r.__words[0];
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    float v6 = &v22;
  }
  else {
    float v6 = (std::string *)v22.__r_.__value_.__r.__words[0];
  }
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v22.__r_.__value_.__l.__size_;
  }
  uint64_t v8 = (char *)&v6[-1].__r_.__value_.__r.__words[2] + 7;
  do
  {
    if (!size)
    {
      std::string::size_type size = -1;
      if ((*((unsigned char *)&v22.__r_.__value_.__s + 23) & 0x80) != 0) {
        goto LABEL_14;
      }
LABEL_11:
      if (size != HIBYTE(v22.__r_.__value_.__r.__words[2]) - 1)
      {
        BOOL v5 = &v22;
        goto LABEL_17;
      }
LABEL_15:
      uint64_t v23 = a2;
      char v24 = &v22;
      uint64_t v25 = a2;
      char v26 = &v22;
      char v27 = &v22;
      uint64_t v10 = *(unsigned int *)(a2 + 24);
      if (v10 == -1) {
        sub_215742D4C();
      }
      goto LABEL_16;
    }
    int v9 = v8[size--];
  }
  while (v9 == 48);
  if ((*((unsigned char *)&v22.__r_.__value_.__s + 23) & 0x80) == 0) {
    goto LABEL_11;
  }
LABEL_14:
  if (size == v22.__r_.__value_.__l.__size_ - 1) {
    goto LABEL_15;
  }
LABEL_17:
  if (strtof((const char *)v5, 0) != *a3)
  {
    uint64_t v23 = a2;
    char v24 = &v22;
    uint64_t v25 = a2;
    char v26 = &v22;
    char v27 = &v22;
    uint64_t v10 = *(unsigned int *)(a2 + 24);
    if (v10 == -1) {
      sub_215742D4C();
    }
LABEL_16:
    __p[0] = &v23;
    ((void (*)(void **, uint64_t))off_26C6599D8[v10])(__p, a2);
    goto LABEL_40;
  }
  std::string::size_type v11 = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    BOOL v12 = &v22;
  }
  else {
    BOOL v12 = (std::string *)v22.__r_.__value_.__r.__words[0];
  }
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v11 = v22.__r_.__value_.__l.__size_;
  }
  uint64_t v13 = 1;
  if (v12->__r_.__value_.__s.__data_[size] == 46) {
    uint64_t v13 = 2;
  }
  size_t v14 = v13 + size;
  if (v11 >= v14) {
    size_t v15 = v14;
  }
  else {
    size_t v15 = v11;
  }
  if (v15 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v15 >= 0x17)
  {
    uint64_t v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17) {
      uint64_t v17 = v15 | 7;
    }
    uint64_t v18 = v17 + 1;
    char v16 = operator new(v17 + 1);
    __p[1] = (void *)v15;
    unint64_t v21 = v18 | 0x8000000000000000;
    __p[0] = v16;
    goto LABEL_37;
  }
  HIBYTE(v21) = v15;
  char v16 = __p;
  if (v15) {
LABEL_37:
  }
    memmove(v16, v12, v15);
  *((unsigned char *)v16 + v15) = 0;
  uint64_t v23 = a2;
  char v24 = (std::string *)__p;
  uint64_t v25 = a2;
  char v26 = (std::string *)__p;
  char v27 = (std::string *)__p;
  uint64_t v19 = *(unsigned int *)(a2 + 24);
  if (v19 == -1) {
    sub_215742D4C();
  }
  long long v28 = &v23;
  ((void (*)(uint64_t **, uint64_t))off_26C6599F0[v19])(&v28, a2);
  if ((SHIBYTE(v21) & 0x80000000) == 0)
  {
LABEL_40:
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_43;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    return;
  }
LABEL_43:
  operator delete(v22.__r_.__value_.__l.__data_);
}

void sub_2157D2308(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if ((a20 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_2157D2374(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65A1E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157D2394(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65A1E8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D23E8(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_2157D2410(void *a1)
{
  *a1 = &unk_26C659918;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D2440()
{
  return 1;
}

void sub_2157D2448(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659E28;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157D2468(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659E28;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D24BC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_2157D24E4()
{
}

void sub_2157D2710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  uint64_t v23 = *(void *)(v21 - 56);
  *(void *)(v21 - 56) = 0;
  if (!v23) {
    _Unwind_Resume(exception_object);
  }
  sub_215E15464(v21 - 56, v23);
  _Unwind_Resume(exception_object);
}

void sub_2157D2790(uint64_t a1, uint64_t a2)
{
  sub_2157D1B9C(a1, (float *)a2);
  if (!*(unsigned char *)(a1 + 120)) {
    return;
  }
  BOOL v4 = (*(_DWORD *)(a2 + 16) & 0x7FFFFFFFu) < 0x7F800000;
  if ((*(_DWORD *)(a2 + 16) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
  {
    BOOL v4 = (*(_DWORD *)(a2 + 20) & 0x7FFFFFFFu) < 0x7F800000;
    if ((*(_DWORD *)(a2 + 20) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
    {
      BOOL v4 = (*(_DWORD *)(a2 + 24) & 0x7FFFFFFFu) < 0x7F800000;
      if ((*(_DWORD *)(a2 + 24) & 0x7FFFFFFFu) <= 0x7F7FFFFF)
      {
        BOOL v4 = (*(_DWORD *)(a2 + 28) & 0x7FFFFFFFu) < 0x7F800000;
        if ((*(_DWORD *)(a2 + 28) & 0x7FFFFFFFu) <= 0x7F7FFFFF) {
          BOOL v4 = (*(_DWORD *)(a2 + 32) & 0x7FFFFFFFu) < 0x7F800000;
        }
      }
    }
  }
  if (v4)
  {
    if ((*(_DWORD *)(a2 + 36) & 0x7FFFFFFFu) >= 0x7F800000)
    {
      sub_2157CFEA8((uint64_t)v9, "convergence epsilon must be finite");
      char v17 = 1;
      sub_2157CFBCC(0x16u, (long long *)v9, (uint64_t)&v27);
      *(_OWORD *)a1 = v27;
      *(unsigned char *)(a1 + 16) = 0;
      *(unsigned char *)(a1 + 112) = 0;
      if (v37)
      {
        *(unsigned char *)(a1 + 40) = 0;
        int v7 = v30;
        if (v30)
        {
          *(_OWORD *)(a1 + 16) = v28;
          *(void *)(a1 + 32) = v29;
          uint64_t v29 = 0;
          long long v28 = 0uLL;
          *(unsigned char *)(a1 + 40) = 1;
        }
        *(unsigned char *)(a1 + 48) = 0;
        *(unsigned char *)(a1 + 104) = 0;
        if (v36)
        {
          uint64_t v8 = v33;
          *(void *)(a1 + 64) = v32;
          *(_OWORD *)(a1 + 48) = v31;
          long long v31 = 0uLL;
          *(void *)(a1 + 72) = v8;
          *(_OWORD *)(a1 + 80) = v34;
          *(void *)(a1 + 96) = v35;
          uint64_t v32 = 0;
          long long v34 = 0uLL;
          uint64_t v35 = 0;
          *(unsigned char *)(a1 + 104) = 1;
        }
        *(unsigned char *)(a1 + 112) = 1;
        *(unsigned char *)(a1 + 120) = 0;
        if (v7 && SHIBYTE(v29) < 0) {
          operator delete((void *)v28);
        }
      }
      else
      {
        *(unsigned char *)(a1 + 120) = 0;
      }
      if (v17)
      {
        if (v16)
        {
          if (v15 < 0) {
            operator delete(v14);
          }
          if (v13 < 0) {
            operator delete(v12);
          }
        }
        if (v11)
        {
          if (v10 < 0) {
            operator delete(v9[0]);
          }
        }
      }
    }
    else
    {
      *(unsigned char *)(a1 + 120) = 1;
    }
    return;
  }
  sub_2157CFEA8((uint64_t)v18, "distortion coefficients must be finite");
  char v26 = 1;
  sub_2157CFBCC(0x16u, (long long *)v18, (uint64_t)&v27);
  *(_OWORD *)a1 = v27;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (!v37)
  {
    *(unsigned char *)(a1 + 120) = 0;
    if (!v26) {
      return;
    }
    goto LABEL_30;
  }
  *(unsigned char *)(a1 + 40) = 0;
  int v5 = v30;
  if (v30)
  {
    *(_OWORD *)(a1 + 16) = v28;
    *(void *)(a1 + 32) = v29;
    uint64_t v29 = 0;
    long long v28 = 0uLL;
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 104) = 0;
  if (v36)
  {
    uint64_t v6 = v33;
    *(void *)(a1 + 64) = v32;
    *(_OWORD *)(a1 + 48) = v31;
    long long v31 = 0uLL;
    *(void *)(a1 + 72) = v6;
    *(_OWORD *)(a1 + 80) = v34;
    *(void *)(a1 + 96) = v35;
    uint64_t v32 = 0;
    long long v34 = 0uLL;
    uint64_t v35 = 0;
    *(unsigned char *)(a1 + 104) = 1;
  }
  *(unsigned char *)(a1 + 112) = 1;
  *(unsigned char *)(a1 + 120) = 0;
  if (v5 && SHIBYTE(v29) < 0) {
    operator delete((void *)v28);
  }
  if (v26)
  {
LABEL_30:
    if (v25)
    {
      if (v24 < 0) {
        operator delete(__p);
      }
      if (v22 < 0) {
        operator delete(v21);
      }
    }
    if (v20 && v19 < 0) {
      operator delete(v18[0]);
    }
  }
}

void sub_2157D2B04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D2B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_2157D2B2C(uint64_t a1, int *a2)
{
  *(void *)a1 = &unk_26C659E78;
  *(void *)(a1 + 8) = *(void *)a2;
  *(void *)(a1 + 16) = *((void *)a2 + 1);
  long long v3 = *((_OWORD *)a2 + 1);
  *(_DWORD *)(a1 + 40) = a2[8];
  *(_OWORD *)(a1 + 24) = v3;
  *(void *)(a1 + 44) = *(void *)(a2 + 9);
  int v4 = *a2;
  float v5 = *((float *)a2 + 1);
  float v6 = 1.0 / *(float *)a2;
  float v7 = *((float *)a2 + 2);
  float v8 = *((float *)a2 + 3);
  float v9 = *((float *)a2 + 7);
  float v10 = *((float *)a2 + 8);
  BOOL v11 = *((float *)a2 + 6) == 0.0;
  *(float *)(a1 + 52) = v6;
  *(float *)(a1 + 56) = 1.0 / v5;
  if (v9 != 0.0) {
    BOOL v11 = 0;
  }
  *(float *)(a1 + 60) = -(float)(v7 * v6);
  *(float *)(a1 + 64) = -(float)(v8 * (float)(1.0 / v5));
  *(_DWORD *)(a1 + 68) = v4;
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  *(float *)(a1 + 84) = v5;
  *(_DWORD *)(a1 + 88) = 0;
  *(float *)(a1 + 92) = v7;
  *(float *)(a1 + 96) = v8;
  *(_DWORD *)(a1 + 100) = 1065353216;
  if (v10 != 0.0) {
    BOOL v11 = 0;
  }
  *(unsigned char *)(a1 + 104) = v11;
  *(unsigned char *)(a1 + 105) = v10 == 0.0;
  sub_2157D2790((uint64_t)v15, a1 + 8);
  int v12 = v25;
  if (!v25 || (sub_2157425B8((uint64_t)v15), !v25))
  {
    if (!v24) {
      goto LABEL_14;
    }
    if (!v23) {
      goto LABEL_11;
    }
    if (v22 < 0)
    {
      operator delete(v21);
      if ((v20 & 0x80000000) == 0)
      {
LABEL_11:
        if (v18) {
          goto LABEL_12;
        }
        goto LABEL_14;
      }
    }
    else if ((v20 & 0x80000000) == 0)
    {
      goto LABEL_11;
    }
    operator delete(v19);
    if (v18)
    {
LABEL_12:
      if (v17 < 0) {
        operator delete(__p);
      }
    }
LABEL_14:
    if (!v12)
    {
      exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(exception, "HeikkilaModel parameters invalid");
      exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
      __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
    }
  }
  return a1;
}

void sub_2157D2CE8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_2157D2CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_2157D2D10(void *result)
{
  char *result = &unk_26C659F18;
  return result;
}

void sub_2157D2D34()
{
}

uint64_t sub_2157D2D48()
{
  return 2;
}

uint64_t sub_2157D2D50()
{
  return 11;
}

void sub_2157D2D58(void *a1)
{
  *a1 = &unk_26C659F18;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D2D88()
{
  return 0;
}

uint64_t sub_2157D2D90()
{
  return 2;
}

uint64_t sub_2157D2D98()
{
  return 11;
}

uint64_t sub_2157D2DA0(uint64_t a1)
{
  return a1 + 120;
}

void *sub_2157D2DA8(void *result)
{
  char *result = &unk_26C659F18;
  return result;
}

void sub_2157D2DC8(void *a1)
{
  *a1 = &unk_26C659F18;
  JUMPOUT(0x2166C4D20);
}

void sub_2157D2DF8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659F58;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157D2E18(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C659F58;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D2E6C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *sub_2157D2E94(void *result)
{
  char *result = &unk_26C659FE8;
  return result;
}

void sub_2157D2EB4(void *a1)
{
  *a1 = &unk_26C659FE8;
  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D2EE4()
{
  return 1;
}

uint64_t sub_2157D2EEC()
{
  return 2;
}

uint64_t sub_2157D2EF4()
{
  return 11;
}

uint64_t sub_2157D2EFC(uint64_t a1)
{
  return a1 + 120;
}

void *sub_2157D2F04(void *result)
{
  char *result = &unk_26C659FE8;
  return result;
}

void sub_2157D2F24(void *a1)
{
  *a1 = &unk_26C659FE8;
  JUMPOUT(0x2166C4D20);
}

void sub_2157D2F54(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65A028;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157D2F74(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65A028;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D2FC8(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

long long *sub_2157D2FF0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884C20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884C20))
  {
    return &xmmword_267884C08;
  }
  uint64_t v1 = sub_2157D30D8();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884C08, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884C18 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884C08 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884C08, &dword_21572C000);
  __cxa_guard_release(&qword_267884C20);
  return &xmmword_267884C08;
}

void sub_2157D30C0(_Unwind_Exception *a1)
{
}

std::string *sub_2157D30D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884C40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884C40))
  {
    return &stru_267884C28;
  }
  sub_2157D337C((uint64_t)__p);
  sub_2157D31D4(__p, &stru_267884C28);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884C28, &dword_21572C000);
  __cxa_guard_release(&qword_267884C40);
  return &stru_267884C28;
}

void sub_2157D3194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884C40);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884C40);
  _Unwind_Resume(a1);
}

void sub_2157D31D4(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  *(_OWORD *)char v13 = *(_OWORD *)"float64";
  uint64_t v14 = 0x700000000000000;
  int v4 = sub_2157CF418();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v16 = v4->__r_.__value_.__r.__words[2];
    long long v15 = v5;
  }
  sub_21573A150(&__p, (uint64_t)v13, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  float v8 = (void **)__p;
  if (__p)
  {
    float v9 = v12;
    float v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      float v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return;
    }
LABEL_16:
    operator delete(v13[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0) {
    goto LABEL_16;
  }
}

void sub_2157D3320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_2157D337C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884C60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884C60))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PinholeCamera<double, cv3d::kit::cam::PixelOrigin::Corner>]", qword_267884C48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884C48, &dword_21572C000);
    __cxa_guard_release(&qword_267884C60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884C80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884C80))
  {
    size_t v3 = sub_215747D98(qword_267884C48, "<", 0);
    sub_215747C90(qword_267884C48, 0, v3, qword_267884C68);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884C68, &dword_21572C000);
    __cxa_guard_release(&qword_267884C80);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884CA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884CA0))
  {
    sub_215E19DF4((uint64_t)qword_267884C68, (uint64_t)&xmmword_267884C88);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884C88, &dword_21572C000);
    __cxa_guard_release(&qword_267884CA0);
  }
  if (byte_267884C9F < 0)
  {
    long long v2 = xmmword_267884C88;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884C88;
    *(void *)(a1 + 16) = unk_267884C98;
  }
}

void sub_2157D3544(_Unwind_Exception *a1)
{
}

void sub_2157D355C(_Unwind_Exception *a1)
{
}

void sub_2157D3574(_Unwind_Exception *a1)
{
}

long long *sub_2157D358C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884AE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884AE0))
  {
    return &xmmword_267884AC8;
  }
  uint64_t v1 = sub_2157D3674();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884AC8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884AD8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884AC8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884AC8, &dword_21572C000);
  __cxa_guard_release(&qword_267884AE0);
  return &xmmword_267884AC8;
}

void sub_2157D365C(_Unwind_Exception *a1)
{
}

std::string *sub_2157D3674()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884B00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884B00))
  {
    return &stru_267884AE8;
  }
  sub_2157D3918((uint64_t)__p);
  sub_2157D3770(__p, &stru_267884AE8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884AE8, &dword_21572C000);
  __cxa_guard_release(&qword_267884B00);
  return &stru_267884AE8;
}

void sub_2157D3730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884B00);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884B00);
  _Unwind_Resume(a1);
}

void sub_2157D3770(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  *(_OWORD *)char v13 = *(_OWORD *)"float64";
  uint64_t v14 = 0x700000000000000;
  int v4 = sub_2157D1624();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v16 = v4->__r_.__value_.__r.__words[2];
    long long v15 = v5;
  }
  sub_21573A150(&__p, (uint64_t)v13, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  float v8 = (void **)__p;
  if (__p)
  {
    float v9 = v12;
    float v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      float v10 = __p;
    }
    int v12 = v8;
    operator delete(v10);
  }
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v14) & 0x80000000) == 0) {
      return;
    }
LABEL_16:
    operator delete(v13[0]);
    return;
  }
  operator delete((void *)v15);
  if (SHIBYTE(v14) < 0) {
    goto LABEL_16;
  }
}

void sub_2157D38BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  _Unwind_Resume(a1);
}

void sub_2157D3918(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884B20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884B20))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::PinholeCamera<double, cv3d::kit::cam::PixelOrigin::Center>]", qword_267884B08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884B08, &dword_21572C000);
    __cxa_guard_release(&qword_267884B20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884B40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884B40))
  {
    size_t v3 = sub_215747D98(qword_267884B08, "<", 0);
    sub_215747C90(qword_267884B08, 0, v3, qword_267884B28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884B28, &dword_21572C000);
    __cxa_guard_release(&qword_267884B40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884B60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884B60))
  {
    sub_215E19DF4((uint64_t)qword_267884B28, (uint64_t)&xmmword_267884B48);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884B48, &dword_21572C000);
    __cxa_guard_release(&qword_267884B60);
  }
  if (byte_267884B5F < 0)
  {
    long long v2 = xmmword_267884B48;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884B48;
    *(void *)(a1 + 16) = unk_267884B58;
  }
}

void sub_2157D3AE0(_Unwind_Exception *a1)
{
}

void sub_2157D3AF8(_Unwind_Exception *a1)
{
}

void sub_2157D3B10(_Unwind_Exception *a1)
{
}

long long *sub_2157D3B28()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884E00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884E00))
  {
    return &xmmword_267884DE8;
  }
  uint64_t v1 = sub_2157D3C10();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884DE8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884DF8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884DE8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884DE8, &dword_21572C000);
  __cxa_guard_release(&qword_267884E00);
  return &xmmword_267884DE8;
}

void sub_2157D3BF8(_Unwind_Exception *a1)
{
}

std::string *sub_2157D3C10()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884E20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884E20))
  {
    return &stru_267884E08;
  }
  sub_2157D3D0C((uint64_t)__p);
  sub_2157CF060(__p, &stru_267884E08);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884E08, &dword_21572C000);
  __cxa_guard_release(&qword_267884E20);
  return &stru_267884E08;
}

void sub_2157D3CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884E20);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884E20);
  _Unwind_Resume(a1);
}

void sub_2157D3D0C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884E40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884E40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::HeikkilaCamera<float, cv3d::kit::cam::PixelOrigin::Corner>]", qword_267884E28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884E28, &dword_21572C000);
    __cxa_guard_release(&qword_267884E40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884E60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884E60))
  {
    size_t v3 = sub_215747D98(qword_267884E28, "<", 0);
    sub_215747C90(qword_267884E28, 0, v3, qword_267884E48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884E48, &dword_21572C000);
    __cxa_guard_release(&qword_267884E60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884E80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884E80))
  {
    sub_215E19DF4((uint64_t)qword_267884E48, (uint64_t)&xmmword_267884E68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884E68, &dword_21572C000);
    __cxa_guard_release(&qword_267884E80);
  }
  if (byte_267884E7F < 0)
  {
    long long v2 = xmmword_267884E68;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884E68;
    *(void *)(a1 + 16) = unk_267884E78;
  }
}

void sub_2157D3ED4(_Unwind_Exception *a1)
{
}

void sub_2157D3EEC(_Unwind_Exception *a1)
{
}

void sub_2157D3F04(_Unwind_Exception *a1)
{
}

long long *sub_2157D3F1C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884CC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884CC0))
  {
    return &xmmword_267884CA8;
  }
  uint64_t v1 = sub_2157D4004();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884CA8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884CB8 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884CA8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884CA8, &dword_21572C000);
  __cxa_guard_release(&qword_267884CC0);
  return &xmmword_267884CA8;
}

void sub_2157D3FEC(_Unwind_Exception *a1)
{
}

std::string *sub_2157D4004()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884CE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884CE0))
  {
    return &stru_267884CC8;
  }
  sub_2157D4100((uint64_t)__p);
  sub_2157D126C(__p, &stru_267884CC8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884CC8, &dword_21572C000);
  __cxa_guard_release(&qword_267884CE0);
  return &stru_267884CC8;
}

void sub_2157D40C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884CE0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884CE0);
  _Unwind_Resume(a1);
}

void sub_2157D4100(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884D00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884D00))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::HeikkilaCamera<float, cv3d::kit::cam::PixelOrigin::Center>]", qword_267884CE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884CE8, &dword_21572C000);
    __cxa_guard_release(&qword_267884D00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884D20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884D20))
  {
    size_t v3 = sub_215747D98(qword_267884CE8, "<", 0);
    sub_215747C90(qword_267884CE8, 0, v3, qword_267884D08);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884D08, &dword_21572C000);
    __cxa_guard_release(&qword_267884D20);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884D40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884D40))
  {
    sub_215E19DF4((uint64_t)qword_267884D08, (uint64_t)&xmmword_267884D28);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884D28, &dword_21572C000);
    __cxa_guard_release(&qword_267884D40);
  }
  if (byte_267884D3F < 0)
  {
    long long v2 = xmmword_267884D28;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884D28;
    *(void *)(a1 + 16) = unk_267884D38;
  }
}

void sub_2157D42C8(_Unwind_Exception *a1)
{
}

void sub_2157D42E0(_Unwind_Exception *a1)
{
}

void sub_2157D42F8(_Unwind_Exception *a1)
{
}

void sub_2157D4310(uint64_t a1, const char *a2, const char *a3)
{
  int v6 = 0;
  sub_2157D4E8C(v5, "Cannot get ");
  if (*(void *)a2)
  {
    int8x16_t v7 = v5;
    float v8 = a2;
    float v9 = v5;
    float v10 = a2;
    BOOL v11 = a2;
    if (v6 != -1)
    {
      int v12 = &v7;
      ((void (*)(void **, _DWORD *))off_26C65A068[v6])(&v12, v5);
      goto LABEL_6;
    }
  }
  else
  {
    int8x16_t v7 = v5;
    float v8 = "nullptr";
    float v9 = v5;
    float v10 = "nullptr";
    BOOL v11 = "nullptr";
    if (v6 != -1)
    {
      int v12 = &v7;
      ((void (*)(void **, _DWORD *))off_26C6599C0[v6])(&v12, v5);
LABEL_6:
      int8x16_t v7 = v5;
      float v8 = " as ";
      float v9 = v5;
      float v10 = " as ";
      BOOL v11 = " as ";
      if (v6 != -1)
      {
        int v12 = &v7;
        ((void (*)(void **, _DWORD *))off_26C65A080[v6])(&v12, v5);
        int8x16_t v7 = v5;
        float v8 = a3;
        float v9 = v5;
        float v10 = a3;
        BOOL v11 = a3;
        if (v6 != -1)
        {
          int v12 = &v7;
          ((void (*)(void **, _DWORD *))off_26C65A098[v6])(&v12, v5);
          int8x16_t v7 = v5;
          float v8 = ", camera value type is ";
          float v9 = v5;
          float v10 = ", camera value type is ";
          BOOL v11 = ", camera value type is ";
          if (v6 != -1)
          {
            int v12 = &v7;
            ((void (*)(void **, _DWORD *))off_26C65A0B0[v6])(&v12, v5);
            sub_2157D4C1C();
          }
          sub_215742D4C();
        }
        sub_215742D4C();
      }
      sub_215742D4C();
    }
  }
  sub_215742D4C();
}

void sub_2157D4540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D4554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D4568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D457C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D4590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D45A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D45B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157D45CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DF18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DF18))
  {
    int v0 = sub_2157CEE7C();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      float v8 = (char *)operator new(v6 + 1);
      qword_26788DF60 = v3 + 6;
      unk_26788DF68 = v7 | 0x8000000000000000;
      qword_26788DF58 = (uint64_t)v8;
      *(_DWORD *)float v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      long long v5 = v8 + 6;
    }
    else
    {
      qword_26788DF60 = 0;
      unk_26788DF68 = 0;
      qword_26788DF58 = 0x2074736E6F63;
      byte_26788DF6F = v3 + 6;
      long long v5 = (char *)&qword_26788DF58 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DF58, &dword_21572C000);
        __cxa_guard_release(&qword_26788DF18);
        return;
      }
    }
    if (v2 >= 0) {
      float v9 = v1;
    }
    else {
      float v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157D4748(_Unwind_Exception *a1)
{
}

void sub_2157D4760()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DF20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DF20))
  {
    int v0 = sub_2157D1088();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      float v8 = (char *)operator new(v6 + 1);
      qword_26788DF78 = v3 + 6;
      unk_26788DF80 = v7 | 0x8000000000000000;
      qword_26788DF70 = (uint64_t)v8;
      *(_DWORD *)float v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      long long v5 = v8 + 6;
    }
    else
    {
      qword_26788DF78 = 0;
      unk_26788DF80 = 0;
      qword_26788DF70 = 0x2074736E6F63;
      byte_26788DF87 = v3 + 6;
      long long v5 = (char *)&qword_26788DF70 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DF70, &dword_21572C000);
        __cxa_guard_release(&qword_26788DF20);
        return;
      }
    }
    if (v2 >= 0) {
      float v9 = v1;
    }
    else {
      float v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157D48DC(_Unwind_Exception *a1)
{
}

void sub_2157D48F4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DF28, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DF28))
  {
    int v0 = sub_2157D3B28();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      float v8 = (char *)operator new(v6 + 1);
      qword_26788DF90 = v3 + 6;
      unk_26788DF98 = v7 | 0x8000000000000000;
      qword_26788DF88 = (uint64_t)v8;
      *(_DWORD *)float v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      long long v5 = v8 + 6;
    }
    else
    {
      qword_26788DF90 = 0;
      unk_26788DF98 = 0;
      qword_26788DF88 = 0x2074736E6F63;
      byte_26788DF9F = v3 + 6;
      long long v5 = (char *)&qword_26788DF88 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DF88, &dword_21572C000);
        __cxa_guard_release(&qword_26788DF28);
        return;
      }
    }
    if (v2 >= 0) {
      float v9 = v1;
    }
    else {
      float v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157D4A70(_Unwind_Exception *a1)
{
}

void sub_2157D4A88()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DF30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DF30))
  {
    int v0 = sub_2157D3F1C();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      float v8 = (char *)operator new(v6 + 1);
      qword_26788DFA8 = v3 + 6;
      unk_26788DFB0 = v7 | 0x8000000000000000;
      qword_26788DFA0 = (uint64_t)v8;
      *(_DWORD *)float v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      long long v5 = v8 + 6;
    }
    else
    {
      qword_26788DFA8 = 0;
      unk_26788DFB0 = 0;
      qword_26788DFA0 = 0x2074736E6F63;
      byte_26788DFB7 = v3 + 6;
      long long v5 = (char *)&qword_26788DFA0 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DFA0, &dword_21572C000);
        __cxa_guard_release(&qword_26788DF30);
        return;
      }
    }
    if (v2 >= 0) {
      float v9 = v1;
    }
    else {
      float v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157D4C04(_Unwind_Exception *a1)
{
}

void sub_2157D4C1C()
{
}

void sub_2157D4E24(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157D4E48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2157D4E8C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6599A8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_2157D4F80(_DWORD ***a1)
{
  return sub_2157D4F9C(**a1, (char *)(*a1)[1]);
}

void sub_2157D4F8C(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157D4F9C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6599A8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157D5090(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  size_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  char v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6599A8[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157D5248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157D528C(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157D5388((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157D5380(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157D5388(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  uint64_t v21 = v8;
  char v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      char v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  char v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  char v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157D5588(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2157D559C(_DWORD ***a1)
{
  return sub_2157D55B8(**a1, (char *)(*a1)[1]);
}

void sub_2157D55A8(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157D55B8(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6599A8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157D56AC(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  char v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C6599A8[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157D5864(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157D58A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157D59A4((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157D599C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157D59A4(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  uint64_t v21 = v8;
  char v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      char v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  char v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  char v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157D5BA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D5BB8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DF38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DF38))
  {
    int v0 = sub_2157D2FF0();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      uint64_t v8 = (char *)operator new(v6 + 1);
      qword_26788DFC0 = v3 + 6;
      unk_26788DFC8 = v7 | 0x8000000000000000;
      qword_26788DFB8 = (uint64_t)v8;
      *(_DWORD *)uint64_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      size_t v5 = v8 + 6;
    }
    else
    {
      qword_26788DFC0 = 0;
      unk_26788DFC8 = 0;
      qword_26788DFB8 = 0x2074736E6F63;
      byte_26788DFCF = v3 + 6;
      size_t v5 = (char *)&qword_26788DFB8 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DFB8, &dword_21572C000);
        __cxa_guard_release(&qword_26788DF38);
        return;
      }
    }
    if (v2 >= 0) {
      size_t v9 = v1;
    }
    else {
      size_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157D5D34(_Unwind_Exception *a1)
{
}

void sub_2157D5D4C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DF40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DF40))
  {
    int v0 = sub_2157D358C();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      uint64_t v8 = (char *)operator new(v6 + 1);
      qword_26788DFD8 = v3 + 6;
      unk_26788DFE0 = v7 | 0x8000000000000000;
      qword_26788DFD0 = (uint64_t)v8;
      *(_DWORD *)uint64_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      size_t v5 = v8 + 6;
    }
    else
    {
      qword_26788DFD8 = 0;
      unk_26788DFE0 = 0;
      qword_26788DFD0 = 0x2074736E6F63;
      byte_26788DFE7 = v3 + 6;
      size_t v5 = (char *)&qword_26788DFD0 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DFD0, &dword_21572C000);
        __cxa_guard_release(&qword_26788DF40);
        return;
      }
    }
    if (v2 >= 0) {
      size_t v9 = v1;
    }
    else {
      size_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157D5EC8(_Unwind_Exception *a1)
{
}

void sub_2157D5EE0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DF48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DF48))
  {
    int v0 = sub_2157D6074();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      uint64_t v8 = (char *)operator new(v6 + 1);
      qword_26788DFF0 = v3 + 6;
      unk_26788DFF8 = v7 | 0x8000000000000000;
      qword_26788DFE8 = (uint64_t)v8;
      *(_DWORD *)uint64_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      size_t v5 = v8 + 6;
    }
    else
    {
      qword_26788DFF0 = 0;
      unk_26788DFF8 = 0;
      qword_26788DFE8 = 0x2074736E6F63;
      byte_26788DFFF = v3 + 6;
      size_t v5 = (char *)&qword_26788DFE8 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788DFE8, &dword_21572C000);
        __cxa_guard_release(&qword_26788DF48);
        return;
      }
    }
    if (v2 >= 0) {
      size_t v9 = v1;
    }
    else {
      size_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157D605C(_Unwind_Exception *a1)
{
}

long long *sub_2157D6074()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884EA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884EA0))
  {
    return &xmmword_267884E88;
  }
  uint64_t v1 = sub_2157D615C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884E88, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884E98 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884E88 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884E88, &dword_21572C000);
  __cxa_guard_release(&qword_267884EA0);
  return &xmmword_267884E88;
}

void sub_2157D6144(_Unwind_Exception *a1)
{
}

std::string *sub_2157D615C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884EC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884EC0))
  {
    return &stru_267884EA8;
  }
  sub_2157D6258((uint64_t)__p);
  sub_2157D31D4(__p, &stru_267884EA8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884EA8, &dword_21572C000);
  __cxa_guard_release(&qword_267884EC0);
  return &stru_267884EA8;
}

void sub_2157D6218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884EC0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884EC0);
  _Unwind_Resume(a1);
}

void sub_2157D6258(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884EE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884EE0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::HeikkilaCamera<double, cv3d::kit::cam::PixelOrigin::Corner>]", qword_267884EC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884EC8, &dword_21572C000);
    __cxa_guard_release(&qword_267884EE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884F00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884F00))
  {
    size_t v3 = sub_215747D98(qword_267884EC8, "<", 0);
    sub_215747C90(qword_267884EC8, 0, v3, qword_267884EE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884EE8, &dword_21572C000);
    __cxa_guard_release(&qword_267884F00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884F20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884F20))
  {
    sub_215E19DF4((uint64_t)qword_267884EE8, (uint64_t)&xmmword_267884F08);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884F08, &dword_21572C000);
    __cxa_guard_release(&qword_267884F20);
  }
  if (byte_267884F1F < 0)
  {
    long long v2 = xmmword_267884F08;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884F08;
    *(void *)(a1 + 16) = unk_267884F18;
  }
}

void sub_2157D6420(_Unwind_Exception *a1)
{
}

void sub_2157D6438(_Unwind_Exception *a1)
{
}

void sub_2157D6450(_Unwind_Exception *a1)
{
}

void sub_2157D6468()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788DF50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788DF50))
  {
    int v0 = sub_2157D65FC();
    uint64_t v1 = (const void **)v0;
    int v2 = *((char *)v0 + 23);
    if (v2 >= 0) {
      size_t v3 = *((unsigned __int8 *)v0 + 23);
    }
    else {
      size_t v3 = *((void *)v0 + 1);
    }
    unint64_t v4 = v3 + 6;
    if (v3 + 6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v4 >= 0x17)
    {
      uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v6 = v4 | 7;
      }
      uint64_t v7 = v6 + 1;
      uint64_t v8 = (char *)operator new(v6 + 1);
      qword_26788E008 = v3 + 6;
      unk_26788E010 = v7 | 0x8000000000000000;
      qword_26788E000 = (uint64_t)v8;
      *(_DWORD *)uint64_t v8 = 1936617315;
      *((_WORD *)v8 + 2) = 8308;
      size_t v5 = v8 + 6;
    }
    else
    {
      qword_26788E008 = 0;
      unk_26788E010 = 0;
      qword_26788E000 = 0x2074736E6F63;
      byte_26788E017 = v3 + 6;
      size_t v5 = (char *)&qword_26788E000 + 6;
      if (!v3)
      {
LABEL_18:
        v5[v3] = 0;
        __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E000, &dword_21572C000);
        __cxa_guard_release(&qword_26788DF50);
        return;
      }
    }
    if (v2 >= 0) {
      size_t v9 = v1;
    }
    else {
      size_t v9 = *v1;
    }
    memmove(v5, v9, v3);
    goto LABEL_18;
  }
}

void sub_2157D65E4(_Unwind_Exception *a1)
{
}

long long *sub_2157D65FC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884D60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884D60))
  {
    return &xmmword_267884D48;
  }
  uint64_t v1 = sub_2157D66E4();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884D48, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884D58 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884D48 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884D48, &dword_21572C000);
  __cxa_guard_release(&qword_267884D60);
  return &xmmword_267884D48;
}

void sub_2157D66CC(_Unwind_Exception *a1)
{
}

std::string *sub_2157D66E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884D80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884D80))
  {
    return &stru_267884D68;
  }
  sub_2157D67E0((uint64_t)__p);
  sub_2157D3770(__p, &stru_267884D68);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884D68, &dword_21572C000);
  __cxa_guard_release(&qword_267884D80);
  return &stru_267884D68;
}

void sub_2157D67A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884D80);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884D80);
  _Unwind_Resume(a1);
}

void sub_2157D67E0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884DA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884DA0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::HeikkilaCamera<double, cv3d::kit::cam::PixelOrigin::Center>]", qword_267884D88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884D88, &dword_21572C000);
    __cxa_guard_release(&qword_267884DA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884DC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884DC0))
  {
    size_t v3 = sub_215747D98(qword_267884D88, "<", 0);
    sub_215747C90(qword_267884D88, 0, v3, qword_267884DA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884DA8, &dword_21572C000);
    __cxa_guard_release(&qword_267884DC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884DE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884DE0))
  {
    sub_215E19DF4((uint64_t)qword_267884DA8, (uint64_t)&xmmword_267884DC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884DC8, &dword_21572C000);
    __cxa_guard_release(&qword_267884DE0);
  }
  if (byte_267884DDF < 0)
  {
    long long v2 = xmmword_267884DC8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267884DC8;
    *(void *)(a1 + 16) = unk_267884DD8;
  }
}

void sub_2157D69A8(_Unwind_Exception *a1)
{
}

void sub_2157D69C0(_Unwind_Exception *a1)
{
}

void sub_2157D69D8(_Unwind_Exception *a1)
{
}

void sub_2157D69F0()
{
}

void sub_2157D6BEC(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157D6C10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2157D6C54(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C6599A8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157D6D48()
{
}

void sub_2157D6F34(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157D6F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157D6F9C()
{
}

void sub_2157D70C4(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157D70F8(_Unwind_Exception *a1)
{
  sub_215D2319C(v2);
  MEMORY[0x2166C4D20](v1, 0x10F3C40D7DF13C9);
  _Unwind_Resume(a1);
}

void *sub_2157D7124(void *a1)
{
  *a1 = &unk_26C65A408;
  sub_2157C6F18((uint64_t)(a1 + 4));
  a1[1] = &unk_26C684548;
  long long v2 = (std::__shared_weak_count *)a1[3];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157D71E0(void *a1)
{
  *a1 = &unk_26C65A408;
  sub_2157C6F18((uint64_t)(a1 + 4));
  a1[1] = &unk_26C684548;
  long long v2 = (std::__shared_weak_count *)a1[3];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157D72AC(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157D72B4(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A3C8, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      return sub_215D232DC((uint64_t)a1 + 8, result + 8);
    }
  }
  return result;
}

void sub_2157D7354()
{
}

void sub_2157D73F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157D740C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885080, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885080))
  {
    int v0 = sub_2157D809C();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      int v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267885068, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267885078 = *(void *)(v5 - 8);
      xmmword_267885068 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885068, &dword_21572C000);
    __cxa_guard_release(&qword_267885080);
  }
  sub_2157D8690(&xmmword_267885068, (uint64_t)"{");
}

void sub_2157D7528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2157D7548(_Unwind_Exception *a1)
{
}

void sub_2157D7560(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 5;
}

void sub_2157D758C(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_2157D75DC(void *a1)
{
  *a1 = &unk_26C65A408;
  sub_2157C6F18((uint64_t)(a1 + 4));
  a1[1] = &unk_26C684548;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157D7698(void *a1)
{
  *a1 = &unk_26C65A408;
  sub_2157C6F18((uint64_t)(a1 + 4));
  a1[1] = &unk_26C684548;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157D7764()
{
  int v0 = sub_2157D7AF0();
  sub_2157D78C0(v0, (uint64_t)"{");
}

void sub_2157D77C0()
{
  int v0 = 0;
  sub_2157D6D48();
}

void sub_2157D785C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C6599A8[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157D7894(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2157D78C0(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157D6D48();
}

void sub_2157D7A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D7A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D7A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D7AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D7AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D7AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D7ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

long long *sub_2157D7AF0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884F40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884F40))
  {
    return &xmmword_267884F28;
  }
  uint64_t v1 = sub_2157D7BD8();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267884F28, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267884F38 = v1->__r_.__value_.__r.__words[2];
    xmmword_267884F28 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884F28, &dword_21572C000);
  __cxa_guard_release(&qword_267884F40);
  return &xmmword_267884F28;
}

void sub_2157D7BC0(_Unwind_Exception *a1)
{
}

std::string *sub_2157D7BD8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884F60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884F60))
  {
    return &stru_267884F48;
  }
  sub_2157D7E8C((uint64_t)__p);
  sub_2157D7CD4(__p, &stru_267884F48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267884F48, &dword_21572C000);
  __cxa_guard_release(&qword_267884F60);
  return &stru_267884F48;
}

void sub_2157D7C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267884F60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267884F60);
  _Unwind_Resume(a1);
}

void sub_2157D7CD4(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157D809C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  size_t v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  size_t v10 = (void **)__p;
  if (__p)
  {
    char v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    uint64_t v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2157D7E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157D7E8C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884FE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884FE0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::cam::Camera>]", qword_267884FC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884FC8, &dword_21572C000);
    __cxa_guard_release(&qword_267884FE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885000, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885000))
  {
    size_t v3 = sub_215747D98(qword_267884FC8, "<", 0);
    sub_215747C90(qword_267884FC8, 0, v3, qword_267884FE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884FE8, &dword_21572C000);
    __cxa_guard_release(&qword_267885000);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885020, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885020))
  {
    sub_215E19DF4((uint64_t)qword_267884FE8, (uint64_t)&xmmword_267885008);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885008, &dword_21572C000);
    __cxa_guard_release(&qword_267885020);
  }
  if (byte_26788501F < 0)
  {
    long long v2 = xmmword_267885008;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885008;
    *(void *)(a1 + 16) = unk_267885018;
  }
}

void sub_2157D8054(_Unwind_Exception *a1)
{
}

void sub_2157D806C(_Unwind_Exception *a1)
{
}

void sub_2157D8084(_Unwind_Exception *a1)
{
}

long long *sub_2157D809C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884F80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884F80))
  {
    return &xmmword_267884F68;
  }
  uint64_t v1 = (char *)sub_2157D8184();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267884F68, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267884F78 = *((void *)v1 + 2);
    xmmword_267884F68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267884F68, &dword_21572C000);
  __cxa_guard_release(&qword_267884F80);
  return &xmmword_267884F68;
}

void sub_2157D816C(_Unwind_Exception *a1)
{
}

void *sub_2157D8184()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884FA0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267884FA0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cam::Camera]", qword_267884F88);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267884F88, &dword_21572C000);
    __cxa_guard_release(&qword_267884FA0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267884FC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267884FC0))
  {
    return &unk_267884FA8;
  }
  sub_215E19DF4((uint64_t)qword_267884F88, (uint64_t)&unk_267884FA8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267884FA8, &dword_21572C000);
  __cxa_guard_release(&qword_267884FC0);
  return &unk_267884FA8;
}

void sub_2157D8288(_Unwind_Exception *a1)
{
}

void sub_2157D82A0(_Unwind_Exception *a1)
{
}

std::string *sub_2157D82B8()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885040, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885040))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2157D809C();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_2157D858C();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_267885028, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885028, &dword_21572C000);
        __cxa_guard_release(&qword_267885040);
        return &stru_267885028;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_267885028;
}

void sub_2157D84A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_267885040);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_267885040);
  _Unwind_Resume(a1);
}

std::string *sub_2157D858C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885060, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885060))
  {
    return &stru_267885048;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 5U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885048);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885048, &dword_21572C000);
  __cxa_guard_release(&qword_267885060);
  return &stru_267885048;
}

void sub_2157D8650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885060);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885060);
  _Unwind_Resume(a1);
}

void sub_2157D8690(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157D6D48();
}

void sub_2157D87D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D87EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D8800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D8814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D8828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_2157D883C(uint64_t a1, char *__s, __int16 a3)
{
  if (__s && *__s)
  {
    size_t v6 = strlen(__s);
    if (v6 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v10 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v10 = v6 | 7;
      }
      uint64_t v11 = v10 + 1;
      p_dst = (long long *)operator new(v10 + 1);
      *((void *)&__dst + 1) = v7;
      unint64_t v13 = v11 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v13) = v6;
      p_dst = &__dst;
      if (!v6)
      {
        LOBYTE(__dst) = 0;
        if (*(unsigned char *)(a1 + 40))
        {
LABEL_7:
          if (*(char *)(a1 + 23) < 0) {
            operator delete(*(void **)a1);
          }
          double result = *(double *)&__dst;
          *(_OWORD *)a1 = __dst;
          *(void *)(a1 + 16) = v13;
          *(_WORD *)(a1 + 24) = a3;
          *(_DWORD *)(a1 + 32) = 0;
          return result;
        }
LABEL_19:
        double result = *(double *)&__dst;
        *(_OWORD *)a1 = __dst;
        *(void *)(a1 + 16) = v13;
        *(_WORD *)(a1 + 24) = a3;
        *(_DWORD *)(a1 + 32) = 0;
        *(unsigned char *)(a1 + 40) = 1;
        return result;
      }
    }
    memcpy(p_dst, __s, v7);
    *((unsigned char *)p_dst + v7) = 0;
    if (*(unsigned char *)(a1 + 40)) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(unsigned char *)(a1 + 40) = 0;
  }
  return result;
}

void sub_2157D89A8(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + 48) = a2;
  if (a2 < 3)
  {
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  unsigned __int8 v6 = a2;
  sub_2157D8BD0("invalid VZClientSyncType ", &v6);
  if (SHIBYTE(v8) < 0)
  {
    sub_215738B0C(__p, v7[0], (unint64_t)v7[1]);
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)v7;
    uint64_t v10 = v8;
  }
  char v11 = 1;
  LOBYTE(v12) = 0;
  char v16 = 0;
  char v17 = 1;
  sub_21573FCF8(0xAu, (long long *)__p, (uint64_t)&v18);
  *(_OWORD *)a3 = v18;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v28)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v4 = v21;
    if (v21)
    {
      *(_OWORD *)(a3 + 16) = v19;
      *(void *)(a3 + 32) = v20;
      uint64_t v20 = 0;
      long long v19 = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v27)
    {
      uint64_t v5 = v24;
      *(void *)(a3 + 64) = v23;
      *(_OWORD *)(a3 + 48) = v22;
      uint64_t v23 = 0;
      long long v22 = 0uLL;
      *(void *)(a3 + 72) = v5;
      *(_OWORD *)(a3 + 80) = v25;
      *(void *)(a3 + 96) = v26;
      long long v25 = 0uLL;
      uint64_t v26 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v4 && SHIBYTE(v20) < 0) {
      operator delete((void *)v19);
    }
    if (!v17) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v17) {
      goto LABEL_24;
    }
  }
  if (!v16) {
    goto LABEL_21;
  }
  if (v15 < 0)
  {
    operator delete(v14);
    if ((v13 & 0x80000000) == 0)
    {
LABEL_21:
      if (v11) {
        goto LABEL_22;
      }
      goto LABEL_24;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
    goto LABEL_21;
  }
  operator delete(v12);
  if (v11)
  {
LABEL_22:
    if (SHIBYTE(v10) < 0) {
      operator delete(__p[0]);
    }
  }
LABEL_24:
  if (SHIBYTE(v8) < 0) {
    operator delete(v7[0]);
  }
}

void sub_2157D8BA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157D8BD0(char *__s, unsigned __int8 *a2)
{
  int v5 = 0;
  sub_2157DBC1C(v4, __s);
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1) {
    sub_215742D4C();
  }
  uint64_t v8 = v7;
  ((void (*)(void **, _DWORD *))off_26C65A570[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  if (v5 == -1) {
    sub_215742D4C();
  }
  v7[0] = &v6;
  uint64_t result = ((uint64_t (*)(void *, _DWORD *))off_26C65A588[v5])(v7, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void *, _DWORD *))off_26C65A558[v5])(v7, v4);
  }
  return result;
}

void sub_2157D8CD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D8CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2157D8CDCLL);
}

void sub_2157D8D10(uint64_t a1, uint64_t *a2, char a3)
{
  if (a3)
  {
    uint64_t v4 = *a2;
    uint64_t v3 = a2[1];
    if (v3) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
    }
    int v5 = *(unsigned __int8 *)(a1 + 152);
    *(void *)(a1 + 136) = v4;
    if (!v5)
    {
      *(void *)(a1 + 144) = v3;
      *(unsigned char *)(a1 + 152) = 1;
      return;
    }
    std::string v6 = *(std::__shared_weak_count **)(a1 + 144);
    *(void *)(a1 + 144) = v3;
    if (!v6) {
      return;
    }
LABEL_9:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    return;
  }
  if (!*(unsigned char *)(a1 + 152))
  {
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 144) = 0;
    *(unsigned char *)(a1 + 152) = 1;
    return;
  }
  std::string v6 = *(std::__shared_weak_count **)(a1 + 144);
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  if (v6) {
    goto LABEL_9;
  }
}

void *sub_2157D8E00(void *a1, uint64_t a2)
{
  sub_215731D94(a1, (uint64_t)"{options={", 10);
  v10[0] = (void *)a2;
  v10[1] = (void *)(a2 + 48);
  v10[2] = (void *)(a2 + 56);
  v10[3] = (void *)(a2 + 72);
  v10[4] = (void *)(a2 + 112);
  char v11 = a1;
  sub_215731D94(a1, (uint64_t)"{", 1);
  LOBYTE(v13[0]) = 1;
  v13[1] = &v11;
  v13[2] = &v12;
  sub_21598BAA0((uint64_t *)v10, (uint64_t)v13);
  sub_215731D94(v11, (uint64_t)"}", 1);
  sub_215731D94(a1, (uint64_t)"}, log_control=", 15);
  if (*(unsigned char *)(a2 + 152))
  {
    uint64_t v5 = *(void *)(a2 + 136);
    uint64_t v4 = a2 + 136;
    if (v5)
    {
      v10[0] = a1;
      sub_215731D94(a1, (uint64_t)"{", 1);
      v13[0] = v4;
      sub_2157DBD10((uint64_t)&v11, v10, v13);
      std::string v6 = v10[0];
      size_t v7 = "}";
      uint64_t v8 = 1;
    }
    else
    {
      size_t v7 = "auto (deprecated)";
      std::string v6 = a1;
      uint64_t v8 = 17;
    }
  }
  else
  {
    size_t v7 = "disabled";
    std::string v6 = a1;
    uint64_t v8 = 8;
  }
  sub_215731D94(v6, (uint64_t)v7, v8);
  return a1;
}

void sub_2157D8F38(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (*(uint64_t (**)(void))(**((void **)a1 + 1) + 16))(*((void *)a1 + 1));
  uint64_t v5 = sub_215AB78E8();
  if (v4 == ((uint64_t (*)(void))(*v5)[2])(v5))
  {
    uint64_t v6 = *a1;
    if (v6 > 0xF) {
      unsigned int v7 = 1;
    }
    else {
      unsigned int v7 = dword_215E9B9DC[v6];
    }
    sub_215741BFC(__dst, (long long *)a1 + 1);
    sub_215742878(a2, v7, (long long *)__dst);
    if (v16)
    {
      if (v15)
      {
        if (v14 < 0) {
          operator delete(__p);
        }
        if (v12 < 0) {
          operator delete(v11);
        }
      }
      if (v10 && v9 < 0) {
        operator delete(__dst[0]);
      }
    }
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)a1;
    sub_215741BFC((unsigned char *)(a2 + 16), (long long *)a1 + 1);
  }
}

void sub_2157D9080(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D9094(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v68[0] = a1;
  v68[1] = a2;
  LOBYTE(v56) = 0;
  char v67 = 0;
  v55[0] = &unk_26C65A458;
  v55[1] = &v56;
  v55[2] = v68;
  sub_215E12638((uint64_t)v55, (uint64_t)&v44);
  if (v54)
  {
    char v32 = v66;
    if (v66)
    {
      long long v4 = v56;
      long long v56 = 0uLL;
      long long v22 = v4;
      *(_OWORD *)uint64_t v23 = v57;
      long long v57 = 0uLL;
      long long v24 = v58;
      long long v58 = 0uLL;
    }
    else
    {
      long long v22 = v56;
      LOBYTE(v23[0]) = 0;
      char v31 = 0;
      if (v65)
      {
        BYTE8(v24) = 0;
        if (BYTE8(v58))
        {
          *(_OWORD *)uint64_t v23 = v57;
          *(void *)&long long v24 = v58;
          *(void *)&long long v58 = 0;
          long long v57 = 0uLL;
          BYTE8(v24) = 1;
        }
        LOBYTE(v25) = 0;
        char v30 = 0;
        if (v64)
        {
          uint64_t v26 = v60;
          long long v25 = v59;
          long long v59 = 0uLL;
          long long v28 = v62;
          uint64_t v27 = v61;
          uint64_t v29 = v63;
          uint64_t v60 = 0;
          long long v62 = 0uLL;
          uint64_t v63 = 0;
          char v30 = 1;
        }
        char v31 = 1;
      }
    }
  }
  else
  {
    long long v33 = v44;
    uint64_t v5 = sub_215741BFC(&__p, &v45);
    long long v22 = v33;
    LOBYTE(v23[0]) = 0;
    char v31 = 0;
    if (v43)
    {
      BYTE8(v24) = 0;
      int v6 = v36;
      if (v36)
      {
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v5;
        *(void *)&long long v24 = *((void *)v5 + 2);
        *((void *)v5 + 1) = 0;
        *((void *)v5 + 2) = 0;
        *(void *)uint64_t v5 = 0;
        BYTE8(v24) = 1;
      }
      LOBYTE(v25) = 0;
      char v30 = 0;
      if (v42)
      {
        uint64_t v26 = v38;
        long long v25 = v37;
        long long v37 = 0uLL;
        long long v28 = v40;
        uint64_t v27 = v39;
        uint64_t v29 = v41;
        uint64_t v38 = 0;
        long long v40 = 0uLL;
        uint64_t v41 = 0;
        char v30 = 1;
      }
      char v31 = 1;
      char v32 = 0;
      if (v6 && v35 < 0) {
        operator delete(__p);
      }
    }
    else
    {
      char v32 = 0;
    }
    if (!v54 && v53)
    {
      if (v52)
      {
        if (v51 < 0) {
          operator delete(v50);
        }
        if (v49 < 0) {
          operator delete(v48);
        }
      }
      if (v47 && v46 < 0) {
        operator delete((void *)v45);
      }
    }
  }
  if (v67)
  {
    if (v66)
    {
      sub_2157D9970(&v56);
    }
    else if (v65)
    {
      if (v64)
      {
        if (SHIBYTE(v63) < 0) {
          operator delete((void *)v62);
        }
        if (SHIBYTE(v60) < 0) {
          operator delete((void *)v59);
        }
      }
      if (BYTE8(v58) && SBYTE7(v58) < 0) {
        operator delete((void *)v57);
      }
    }
  }
  if (v32)
  {
    *(unsigned char *)(a3 + 120) = 1;
    long long v7 = v22;
    long long v8 = *(_OWORD *)v23;
    long long v22 = 0uLL;
    *(_OWORD *)a3 = v7;
    *(_OWORD *)(a3 + 16) = v8;
    v23[0] = 0;
    v23[1] = 0;
    *(_OWORD *)(a3 + 32) = v24;
    long long v24 = 0uLL;
LABEL_34:
    sub_2157D9970(&v22);
    return;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E018, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E018))
  {
    char v12 = std::generic_category();
    qword_26788E020 = 22;
    qword_26788E028 = (uint64_t)v12;
    __cxa_guard_release(&qword_26788E018);
  }
  if (*((void *)&v22 + 1) != qword_26788E028 || v22 != qword_26788E020)
  {
    *(unsigned char *)(a3 + 120) = 0;
    *(_OWORD *)a3 = v22;
    *(unsigned char *)(a3 + 16) = 0;
    *(unsigned char *)(a3 + 112) = 0;
    if (!v31) {
      return;
    }
    *(unsigned char *)(a3 + 40) = 0;
    if (BYTE8(v24))
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)v23;
      *(void *)(a3 + 32) = v24;
      v23[1] = 0;
      *(void *)&long long v24 = 0;
      v23[0] = 0;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v30)
    {
      uint64_t v11 = v27;
      *(void *)(a3 + 64) = v26;
      *(_OWORD *)(a3 + 48) = v25;
      long long v25 = 0uLL;
      *(void *)(a3 + 72) = v11;
      *(_OWORD *)(a3 + 80) = v28;
      *(void *)(a3 + 96) = v29;
      uint64_t v26 = 0;
      long long v28 = 0uLL;
      uint64_t v29 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    goto LABEL_74;
  }
  sub_215741BFC(__dst, (long long *)v23);
  sub_21573FCF8(0xAu, (long long *)__dst, (uint64_t)&v56);
  *(_OWORD *)a3 = v56;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v65)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v9 = BYTE8(v58);
    if (BYTE8(v58))
    {
      *(_OWORD *)(a3 + 16) = v57;
      *(void *)(a3 + 32) = v58;
      *(void *)&long long v58 = 0;
      long long v57 = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v64)
    {
      uint64_t v10 = v61;
      *(void *)(a3 + 64) = v60;
      *(_OWORD *)(a3 + 48) = v59;
      long long v59 = 0uLL;
      *(void *)(a3 + 72) = v10;
      *(_OWORD *)(a3 + 80) = v62;
      *(void *)(a3 + 96) = v63;
      uint64_t v60 = 0;
      long long v62 = 0uLL;
      uint64_t v63 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v9 && SBYTE7(v58) < 0) {
      operator delete((void *)v57);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
  }
  if (v21)
  {
    if (v20)
    {
      if (v19 < 0) {
        operator delete(v18);
      }
      if (v17 < 0) {
        operator delete(v16);
      }
    }
    if (v15 && v14 < 0) {
      operator delete(__dst[0]);
    }
  }
  if (v32) {
    goto LABEL_34;
  }
  if (v31)
  {
LABEL_74:
    if (v30)
    {
      if (SHIBYTE(v29) < 0) {
        operator delete((void *)v28);
      }
      if (SHIBYTE(v26) < 0) {
        operator delete((void *)v25);
      }
    }
    if (BYTE8(v24))
    {
      if (SBYTE7(v24) < 0) {
        operator delete(v23[0]);
      }
    }
  }
}

void sub_2157D96A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  sub_21573FE74((uint64_t)va);
  sub_215754C4C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_2157D96C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_215754C4C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D96D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_215754C4C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157D96EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54)
{
  sub_2157407D4((uint64_t)&a54);
  sub_2157D9DD0(v54 - 192);
  _Unwind_Resume(a1);
}

void sub_2157D9708(_Unwind_Exception *a1)
{
  sub_2157D9DD0(v1 - 192);
  _Unwind_Resume(a1);
}

void sub_2157D971C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)a1 + 40))(v27);
  if (v37)
  {
    if (v28) {
      *(void *)a2 = v27[1];
    }
    else {
      *(void *)a2 = 0;
    }
    *(unsigned char *)(a2 + 120) = 1;
    return;
  }
  sub_2157D8F38((int *)v27, (uint64_t)&v6);
  long long v16 = v6;
  uint64_t v3 = sub_215741BFC(&__p, &v7);
  *(_OWORD *)a2 = v16;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (v26)
  {
    *(unsigned char *)(a2 + 40) = 0;
    int v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 16) = *(_OWORD *)v3;
      *(void *)(a2 + 32) = *((void *)v3 + 2);
      *((void *)v3 + 1) = 0;
      *((void *)v3 + 2) = 0;
      *(void *)uint64_t v3 = 0;
      *(unsigned char *)(a2 + 40) = 1;
    }
    *(unsigned char *)(a2 + 48) = 0;
    *(unsigned char *)(a2 + 104) = 0;
    if (v25)
    {
      uint64_t v5 = v22;
      *(void *)(a2 + 64) = v21;
      *(_OWORD *)(a2 + 48) = v20;
      long long v20 = 0uLL;
      *(void *)(a2 + 72) = v5;
      *(_OWORD *)(a2 + 80) = v23;
      *(void *)(a2 + 96) = v24;
      uint64_t v21 = 0;
      long long v23 = 0uLL;
      uint64_t v24 = 0;
      *(unsigned char *)(a2 + 104) = 1;
    }
    *(unsigned char *)(a2 + 112) = 1;
    *(unsigned char *)(a2 + 120) = 0;
    if (v4 && v18 < 0) {
      operator delete(__p);
    }
    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_18;
  }
  *(unsigned char *)(a2 + 120) = 0;
  if (v15)
  {
LABEL_18:
    if (v14)
    {
      if (v13 < 0) {
        operator delete(v12);
      }
      if (v11 < 0) {
        operator delete(v10);
      }
    }
    if (v9 && v8 < 0) {
      operator delete((void *)v7);
    }
  }
LABEL_26:
  if (!v37 && v36)
  {
    if (v35)
    {
      if (v34 < 0) {
        operator delete(v33);
      }
      if (v32 < 0) {
        operator delete(v31);
      }
    }
    if (v30 && v29 < 0) {
      operator delete((void *)v27[2]);
    }
  }
}

void sub_2157D9940(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FF04((uint64_t)va);
  sub_2157407D4(v2 - 160);
  _Unwind_Resume(a1);
}

void sub_2157D995C(_Unwind_Exception *a1)
{
  sub_2157407D4(v1 - 160);
  _Unwind_Resume(a1);
}

void *sub_2157D9970(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  int v4 = (std::__shared_weak_count *)a1[1];
  if (!v4 || atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_2157D9A88(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = *MEMORY[0x263EF8340];
  v37[0] = 0;
  v37[160] = 0;
  sub_215754CEC((uint64_t)v37, a1);
  LOBYTE(v34[0]) = 0;
  char v36 = 0;
  if (*(unsigned char *)(a2 + 32))
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5)
    {
      if (v5 == a2)
      {
        char v35 = v34;
        (*(void (**)(uint64_t, void *))(*(void *)a2 + 24))(a2, v34);
      }
      else
      {
        char v35 = *(void **)(a2 + 24);
        *(void *)(a2 + 24) = 0;
      }
    }
    else
    {
      char v35 = 0;
    }
    char v36 = 1;
  }
  sub_2157D9094((uint64_t)v37, (uint64_t)v34, (uint64_t)&v23);
  if (v36)
  {
    if (v35 == v34)
    {
      (*(void (**)(void *))(v34[0] + 32))(v34);
      sub_215753628((uint64_t)v37);
      if (v33) {
        goto LABEL_13;
      }
      goto LABEL_31;
    }
    if (v35) {
      (*(void (**)(void))(*v35 + 40))();
    }
  }
  sub_215753628((uint64_t)v37);
  if (v33)
  {
LABEL_13:
    long long v6 = v24;
    if (*((void *)&v24 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v24 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v8 = v25;
    uint64_t v7 = v26;
    if (v26) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v26 + 8), 1uLL, memory_order_relaxed);
    }
    *(_OWORD *)a3 = v6;
    *(void *)(a3 + 16) = v8;
    *(void *)(a3 + 24) = v7;
    *(unsigned char *)(a3 + 120) = 1;
    goto LABEL_18;
  }
LABEL_31:
  long long v12 = v23;
  char v9 = sub_215741BFC(&v13, &v24);
  *(_OWORD *)a3 = v12;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v22)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v10 = v15;
    if (v15)
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)v9;
      *(void *)(a3 + 32) = *((void *)v9 + 2);
      *((void *)v9 + 1) = 0;
      *((void *)v9 + 2) = 0;
      *(void *)char v9 = 0;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v21)
    {
      uint64_t v11 = v18;
      *(void *)(a3 + 64) = v17;
      *(_OWORD *)(a3 + 48) = v16;
      long long v16 = 0uLL;
      *(void *)(a3 + 72) = v11;
      *(_OWORD *)(a3 + 80) = v19;
      *(void *)(a3 + 96) = v20;
      uint64_t v17 = 0;
      long long v19 = 0uLL;
      uint64_t v20 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v10 && v14 < 0) {
      operator delete(v13);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
  }
LABEL_18:
  if (v33)
  {
    sub_2157D9970(&v23);
  }
  else if (v32)
  {
    if (v31)
    {
      if (v30 < 0) {
        operator delete(__p);
      }
      if (v28 < 0) {
        operator delete(v27);
      }
    }
    if ((_BYTE)v26)
    {
      if (SHIBYTE(v25) < 0) {
        operator delete((void *)v24);
      }
    }
  }
}

void sub_2157D9D80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_215731D80(exception_object);
}

uint64_t sub_2157D9DD0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 128)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 120))
  {
    sub_2157D9970((void *)a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (*(unsigned char *)(a1 + 104))
  {
    if (*(char *)(a1 + 103) < 0) {
      operator delete(*(void **)(a1 + 80));
    }
    if (*(char *)(a1 + 71) < 0) {
      operator delete(*(void **)(a1 + 48));
    }
  }
  if (!*(unsigned char *)(a1 + 40) || (*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_2157D9E64()
{
}

void sub_2157D9E78(uint64_t a1)
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(a1 + 16);
  uint64_t v2 = *v1;
  LOBYTE(v27) = 0;
  LOBYTE(v29) = 0;
  LOWORD(v30) = 0;
  BYTE2(v30) = 0;
  BYTE8(v30) = 0;
  LOBYTE(v31) = 0;
  LOBYTE(v32) = 0;
  char v33 = 0;
  LOBYTE(v34) = 0;
  LOBYTE(v35) = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  char v38 = 1;
  if (*(unsigned char *)(v2 + 160))
  {
    sub_2157540E8((char *)__p, (long long *)v2);
    LOBYTE(v50) = 0;
    char v52 = 0;
    if (!*(unsigned char *)(v2 + 152))
    {
LABEL_7:
      sub_2157540E8((char *)&__dst, (long long *)__p);
      if (v52 && (int v4 = v51) != 0 && !atomic_fetch_add(&v51->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
        if (!v47) {
          goto LABEL_14;
        }
      }
      else if (!v47)
      {
        goto LABEL_14;
      }
      if (v46 == v45)
      {
        (*(void (**)(void *))(v45[0] + 32))(v45);
        if (!v42) {
          goto LABEL_17;
        }
        goto LABEL_15;
      }
      if (v46) {
        (*(void (**)(void))(*v46 + 40))();
      }
LABEL_14:
      if (!v42) {
        goto LABEL_17;
      }
LABEL_15:
      if (v40 < 0) {
        operator delete(__p[0]);
      }
LABEL_17:
      uint64_t v5 = v1[1];
      if (!*(unsigned char *)(v5 + 32))
      {
        LOBYTE(v24[0]) = 0;
        char v26 = 0;
        uint64_t v8 = *v1;
        if (*(unsigned char *)(*v1 + 160)) {
          goto LABEL_46;
        }
        goto LABEL_23;
      }
      uint64_t v6 = *(void *)(v5 + 24);
      if (v6)
      {
        if (v6 != v5)
        {
          uint64_t v7 = (void **)(*(uint64_t (**)(void))(*(void *)v6 + 16))(*(void *)(v5 + 24));
          char v28 = v7;
          if (!v7) {
            goto LABEL_27;
          }
LABEL_31:
          if (v7 == &v27)
          {
            uint64_t v41 = __p;
            (*((void (**)(void **, void **))v27 + 3))(&v27, __p);
          }
          else
          {
            uint64_t v41 = v7;
            char v28 = 0;
          }
          goto LABEL_34;
        }
        char v28 = &v27;
        (*(void (**)(uint64_t, void **))(*(void *)v5 + 24))(v5, &v27);
        uint64_t v7 = v28;
        if (v28) {
          goto LABEL_31;
        }
      }
      else
      {
        char v28 = 0;
      }
LABEL_27:
      uint64_t v41 = 0;
LABEL_34:
      uint64_t v25 = 0;
      uint64_t v11 = operator new(0x28uLL);
      long long v12 = v11;
      void *v11 = &unk_26C65A498;
      char v13 = v11 + 1;
      if (v41)
      {
        if (v41 == __p)
        {
          v11[4] = v13;
          (*((void (**)(void **))__p[0] + 3))(__p);
        }
        else
        {
          v11[4] = v41;
          uint64_t v41 = 0;
        }
      }
      else
      {
        v11[4] = 0;
      }
      uint64_t v25 = v12;
      if (v41 == __p)
      {
        (*((void (**)(void **, void *))__p[0] + 4))(__p, v13);
        char v26 = 1;
        char v14 = v28;
        if (v28 != &v27) {
          goto LABEL_43;
        }
      }
      else
      {
        if (v41) {
          (*((void (**)(void))*v41 + 5))();
        }
        char v26 = 1;
        char v14 = v28;
        if (v28 != &v27)
        {
LABEL_43:
          if (v14) {
            (*((void (**)(void **, void *))*v14 + 5))(v14, v13);
          }
          uint64_t v8 = *v1;
          if (*(unsigned char *)(*v1 + 160))
          {
LABEL_46:
            if (*(unsigned char *)(v8 + 152))
            {
              uint64_t v10 = *(void *)(v8 + 136);
              BOOL v9 = v10 != 0;
LABEL_48:
              sub_2157540E8((char *)__p, &__dst);
              uint64_t v23 = 0;
              long long v21 = 0u;
              long long v22 = 0u;
              LOBYTE(v18[0]) = 0;
              char v20 = 0;
              if (!v26) {
                goto LABEL_63;
              }
              uint64_t v15 = (uint64_t)v25;
              if (v25)
              {
                if (v25 == v24)
                {
                  long long v19 = v18;
                  (*(void (**)(void *, void *))(v24[0] + 24))(v24, v18);
                  goto LABEL_62;
                }
                uint64_t v15 = (*(uint64_t (**)(void))(*v25 + 16))();
              }
              long long v19 = (void *)v15;
LABEL_62:
              char v20 = 1;
LABEL_63:
              sub_215987910(&v17, (uint64_t)__p, (uint64_t)&v21, (uint64_t)v18, v10, v9);
            }
            sub_2157540E8((char *)__p, &__dst);
            uint64_t v23 = 0;
            long long v21 = 0u;
            long long v22 = 0u;
            LOBYTE(v18[0]) = 0;
            char v20 = 0;
            if (!v26) {
LABEL_66:
            }
              sub_215987C3C(&v17, (uint64_t)__p, (uint64_t)&v21, (uint64_t)v18);
            uint64_t v16 = (uint64_t)v25;
            if (v25)
            {
              if (v25 == v24)
              {
                long long v19 = v18;
                (*(void (**)(void *, void *))(v24[0] + 24))(v24, v18);
                goto LABEL_65;
              }
              uint64_t v16 = (*(uint64_t (**)(void))(*v25 + 16))();
            }
            long long v19 = (void *)v16;
LABEL_65:
            char v20 = 1;
            goto LABEL_66;
          }
LABEL_23:
          BOOL v9 = 0;
          uint64_t v10 = 0;
          goto LABEL_48;
        }
      }
      (*((void (**)(void **, void *))v27 + 4))(&v27, v13);
      uint64_t v8 = *v1;
      if (*(unsigned char *)(*v1 + 160)) {
        goto LABEL_46;
      }
      goto LABEL_23;
    }
    uint64_t v3 = *(std::__shared_weak_count **)(v2 + 144);
    uint64_t v50 = *(void *)(v2 + 136);
    char v51 = v3;
    if (v3) {
      atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  else
  {
    LOBYTE(__p[0]) = 0;
    char v42 = 0;
    long long v43 = v30;
    uint64_t v44 = v31;
    LOBYTE(v45[0]) = 0;
    char v47 = 0;
    long long v48 = v34;
    uint64_t v50 = 0;
    char v51 = 0;
    uint64_t v49 = v35;
    char v52 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
  }
  char v52 = 1;
  goto LABEL_7;
}

void sub_2157DADB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a20)
  {
    if ((uint64_t *)a19 == &a16)
    {
      (*(void (**)(uint64_t *))(a16 + 32))(&a16);
    }
    else if (a19)
    {
      (*(void (**)(void))(*(void *)a19 + 40))();
    }
  }
  if (a25)
  {
    if ((uint64_t *)a24 == &a21)
    {
      (*(void (**)(uint64_t *))(a21 + 32))(&a21);
    }
    else if (a24)
    {
      (*(void (**)(void))(*(void *)a24 + 40))();
    }
  }
  if (a67)
  {
    if ((uint64_t *)a66 == &a63)
    {
      (*(void (**)(uint64_t *))(a63 + 32))(&a63);
    }
    else if (a66)
    {
      (*(void (**)(void))(*(void *)a66 + 40))();
    }
  }
  if (a59 && a56 < 0) {
    operator delete(__p);
  }
  if (a30)
  {
    if ((uint64_t *)a29 == &a26)
    {
      (*(void (**)(uint64_t *))(a26 + 32))(&a26);
    }
    else if (a29)
    {
      (*(void (**)(void))(*(void *)a29 + 40))();
    }
  }
  if (*(unsigned char *)(v67 - 88))
  {
    uint64_t v69 = *(void *)(v67 - 96);
    if (v69 == v67 - 120)
    {
      (*(void (**)(uint64_t))(*(void *)(v67 - 120) + 32))(v67 - 120);
    }
    else if (v69)
    {
      (*(void (**)(uint64_t))(*(void *)v69 + 40))(v69);
    }
  }
  if (*(unsigned char *)(v67 - 152))
  {
    if (*(char *)(v67 - 169) < 0) {
      operator delete(*(void **)(v67 - 192));
    }
  }
  _Unwind_Resume(a1);
}

void *sub_2157DB4E8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void *sub_2157DB578(void *a1)
{
  *a1 = &unk_26C65A498;
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_2157DB628(void *a1)
{
  *a1 = &unk_26C65A498;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_2157DB6EC(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26C65A498;
  uint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_2157DB7B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2157DB7C4(uint64_t result, void *a2)
{
  *a2 = &unk_26C65A498;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      uint64_t v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_2157DB894(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_2157DB8F8(char *__p)
{
  uint64_t v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_2157DB9AC(uint64_t a1, int *a2)
{
  sub_2157D8F38(a2, (uint64_t)v4);
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, unsigned char *))(*(void *)v3 + 48))(v3, v4);
  if (v13)
  {
    if (!v12) {
      goto LABEL_6;
    }
    if (v11 < 0)
    {
      operator delete(v10);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if (!v7) {
          return;
        }
LABEL_7:
        if (v6 < 0) {
          operator delete(__p);
        }
        return;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8);
    if (!v7) {
      return;
    }
    goto LABEL_7;
  }
}

void sub_2157DBA74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32,int a33,__int16 a34,char a35,char a36)
{
  if ((_BYTE)a34)
  {
    if (a32)
    {
      if (a31 < 0) {
        operator delete(__p);
      }
      if (a24 < 0) {
        operator delete(a19);
      }
    }
    if (a18)
    {
      if (a17 < 0) {
        operator delete(a12);
      }
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157DBAC8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d2vl13visual_logger18ForwardClientErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optional"
                     "ISA_EERNSB_IT_EEEUlS8_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d2vl13visual_logger18ForwardClientErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS"
                                "3_8optionalISA_EERNSB_IT_EEEUlS8_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d2vl13visual_logger18ForwardClientErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optionalISA_EERNSB_IT_EEEUlS8_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d2vl13visual_logger18ForwardClientErrorINSt3__18functionIFvRKNS_3esn5ErrorEEEEEENS3_8optionalISA_EERNSB_IT_EEEUlS8_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2157DBB38()
{
  return &unk_26C65A4F8;
}

void sub_2157DBB44(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65A518;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2157DBB64(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65A518;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157DBBB8(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_2157DBBE4(std::exception *a1)
{
  std::exception::~exception(a1);

  JUMPOUT(0x2166C4D20);
}

_DWORD *sub_2157DBC1C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65A558[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    char v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    char v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void *sub_2157DBD10(uint64_t a1, void **a2, void *a3)
{
  if (*a3) {
    operator new();
  }
  unint64_t v3 = *a2;

  return sub_215731D94(v3, (uint64_t)"nullptr", 7);
}

void sub_2157DBF1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157DBF84(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  unsigned __int8 v46 = a2;
  CFDataRef v8 = *(CFDataRef *)a1;
  char v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7
    && (atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
    {
LABEL_4:
      uint64_t v9 = sub_215DD154C((CFDataRef *)a1);
      uint64_t v42 = v9;
      switch(v46)
      {
        case 0u:
          if (v9)
          {
            int v50 = 2;
            uint64_t v49 = 1;
            int v48 = 2;
            uint64_t v47 = 2;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          BytePtr = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v11 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v12 = v11;
          if (BytePtr
            || !v11
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v12;
            *((void *)&v52 + 1) = BytePtr;
            sub_2157E38D4(v51, (size_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 1u:
          if ((v9 & 3) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 2;
            int v48 = 2;
            uint64_t v47 = 4;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v21 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v22 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v23 = v22;
          if (v21
            || v22 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v23 >> 1;
            *((void *)&v52 + 1) = v21;
            sub_2157E7FFC(v51, (uint64_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 2u:
          if ((v9 & 7) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 4;
            int v48 = 2;
            uint64_t v47 = 8;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v24 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v25 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v26 = v25;
          if (v24
            || v25 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v26 >> 2;
            *((void *)&v52 + 1) = v24;
            sub_2157E81BC(v51, (uint64_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 3u:
          if ((v9 & 0xF) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 8;
            int v48 = 2;
            uint64_t v47 = 16;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v30 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v31 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v32 = v31;
          if (v30
            || v31 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v32 >> 3;
            *((void *)&v52 + 1) = v30;
            sub_2157E8364(v51, (uint64_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 5u:
          if (v9)
          {
            int v50 = 2;
            uint64_t v49 = 1;
            int v48 = 2;
            uint64_t v47 = 2;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v15 = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v16 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v17 = v16;
          if (v15
            || !v16
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v17;
            *((void *)&v52 + 1) = v15;
            sub_2157E850C(v51, (size_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 6u:
          if ((v9 & 3) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 2;
            int v48 = 2;
            uint64_t v47 = 4;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          char v33 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v34 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v35 = v34;
          if (v33
            || v34 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v35 >> 1;
            *((void *)&v52 + 1) = v33;
            sub_2157E86B0(v51, (uint64_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 7u:
          if ((v9 & 7) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 4;
            int v48 = 2;
            uint64_t v47 = 8;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v36 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v37 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v38 = v37;
          if (v36
            || v37 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v38 >> 2;
            *((void *)&v52 + 1) = v36;
            sub_2157E8858(v51, (uint64_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 8u:
          if ((v9 & 0xF) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 8;
            int v48 = 2;
            uint64_t v47 = 16;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v27 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v28 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v29 = v28;
          if (v27
            || v28 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v29 >> 3;
            *((void *)&v52 + 1) = v27;
            sub_2157E8A00(v51, (uint64_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 0xBu:
          if ((v9 & 7) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 4;
            int v48 = 2;
            uint64_t v47 = 8;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v39 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v40 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v41 = v40;
          if (v39
            || v40 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v41 >> 2;
            *((void *)&v52 + 1) = v39;
            sub_2157E8BA8(v51, (uint64_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        case 0xCu:
          if ((v9 & 0xF) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 8;
            int v48 = 2;
            uint64_t v47 = 16;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v18 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v19 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v20 = v19;
          if (v18
            || v19 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v20 >> 3;
            *((void *)&v52 + 1) = v18;
            sub_2157E8D50(v51, (uint64_t *)&v52);
            sub_2157E39C4((uint64_t)v51, a3);
          }
          return;
        default:
          sub_215E097D8(v46);
      }
      abort();
    }
  }
  else if (v8)
  {
    goto LABEL_4;
  }
  LOBYTE(v43) = 0;
  char v45 = 0;
  sub_215964354(&v43, (uint64_t)&v52);
  *(_OWORD *)a4 = v52;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v62)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v13 = v55;
    if (v55)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v54;
      uint64_t v54 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v61)
    {
      uint64_t v14 = v58;
      *(void *)(a4 + 64) = v57;
      *(_OWORD *)(a4 + 48) = v56;
      long long v56 = 0uLL;
      *(void *)(a4 + 72) = v14;
      *(_OWORD *)(a4 + 80) = v59;
      *(void *)(a4 + 96) = v60;
      uint64_t v57 = 0;
      long long v59 = 0uLL;
      uint64_t v60 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 528) = 0;
    if (v13 && SHIBYTE(v54) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 528) = 0;
  }
  if (v45 && v44 < 0) {
    operator delete((void *)v43);
  }
}

void sub_2157DCEC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157DD0C8(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  unsigned __int8 v46 = a2;
  CFDataRef v8 = *(CFDataRef *)a1;
  char v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7
    && (atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
    {
LABEL_4:
      uint64_t v9 = sub_215DD154C((CFDataRef *)a1);
      uint64_t v42 = v9;
      switch(v46)
      {
        case 0u:
          if (0xAAAAAAAAAAAAAAABLL * v9 >= 0x5555555555555556)
          {
            int v50 = 3;
            uint64_t v49 = 1;
            int v48 = 3;
            uint64_t v47 = 3;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          BytePtr = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v13 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v14 = v13;
          if (BytePtr
            || !v13
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v14;
            *((void *)&v52 + 1) = BytePtr;
            sub_2157E8EF8(v51, (size_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 1u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 1) >= 0x2AAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 2;
            int v48 = 3;
            uint64_t v47 = 6;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v18 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v19 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v20 = v19;
          if (v18
            || v19 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v20 >> 1;
            *((void *)&v52 + 1) = v18;
            sub_2157EB388(v51, (uint64_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 2u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 2) >= 0x1555555555555556uLL)
          {
            int v50 = 3;
            uint64_t v49 = 4;
            int v48 = 3;
            uint64_t v47 = 12;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v21 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v22 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v23 = v22;
          if (v21
            || v22 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v23 >> 2;
            *((void *)&v52 + 1) = v21;
            sub_2157EB478(v51, (uint64_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 3u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 3) >= 0xAAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 8;
            int v48 = 3;
            uint64_t v47 = 24;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v27 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v28 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v29 = v28;
          if (v27
            || v28 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v29 >> 3;
            *((void *)&v52 + 1) = v27;
            sub_2157EB568(v51, (uint64_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 5u:
          if (0xAAAAAAAAAAAAAAABLL * v9 >= 0x5555555555555556)
          {
            int v50 = 3;
            uint64_t v49 = 1;
            int v48 = 3;
            uint64_t v47 = 3;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v30 = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v31 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v32 = v31;
          if (v30
            || !v31
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v32;
            *((void *)&v52 + 1) = v30;
            sub_2157EB658(v51, (size_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 6u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 1) >= 0x2AAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 2;
            int v48 = 3;
            uint64_t v47 = 6;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          char v33 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v34 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v35 = v34;
          if (v33
            || v34 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v35 >> 1;
            *((void *)&v52 + 1) = v33;
            sub_2157EB748(v51, (uint64_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 7u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 2) >= 0x1555555555555556uLL)
          {
            int v50 = 3;
            uint64_t v49 = 4;
            int v48 = 3;
            uint64_t v47 = 12;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v36 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v37 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v38 = v37;
          if (v36
            || v37 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v38 >> 2;
            *((void *)&v52 + 1) = v36;
            sub_2157EB838(v51, (uint64_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 8u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 3) >= 0xAAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 8;
            int v48 = 3;
            uint64_t v47 = 24;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v24 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v25 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v26 = v25;
          if (v24
            || v25 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v26 >> 3;
            *((void *)&v52 + 1) = v24;
            sub_2157EB928(v51, (uint64_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 0xBu:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 2) >= 0x1555555555555556uLL)
          {
            int v50 = 3;
            uint64_t v49 = 4;
            int v48 = 3;
            uint64_t v47 = 12;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v39 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v40 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v41 = v40;
          if (v39
            || v40 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v41 >> 2;
            *((void *)&v52 + 1) = v39;
            sub_2157EBA18(v51, (uint64_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        case 0xCu:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 3) >= 0xAAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 8;
            int v48 = 3;
            uint64_t v47 = 24;
            sub_2157E3390((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v15 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v16 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v17 = v16;
          if (v15
            || v16 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v17 >> 3;
            *((void *)&v52 + 1) = v15;
            sub_2157EBB08(v51, (uint64_t *)&v52);
            sub_2157E8FE8((uint64_t)v51, a3);
          }
          return;
        default:
          sub_215E097D8(v46);
      }
      abort();
    }
  }
  else if (v8)
  {
    goto LABEL_4;
  }
  LOBYTE(v43) = 0;
  char v45 = 0;
  sub_215964354(&v43, (uint64_t)&v52);
  *(_OWORD *)a4 = v52;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v62)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v10 = v55;
    if (v55)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v54;
      uint64_t v54 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v61)
    {
      uint64_t v11 = v58;
      *(void *)(a4 + 64) = v57;
      *(_OWORD *)(a4 + 48) = v56;
      long long v56 = 0uLL;
      *(void *)(a4 + 72) = v11;
      *(_OWORD *)(a4 + 80) = v59;
      *(void *)(a4 + 96) = v60;
      uint64_t v57 = 0;
      long long v59 = 0uLL;
      uint64_t v60 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 528) = 0;
    if (v10 && SHIBYTE(v54) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 528) = 0;
  }
  if (v45 && v44 < 0) {
    operator delete((void *)v43);
  }
}

void sub_2157DE120(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157DE324(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  unsigned __int8 v46 = a2;
  CFDataRef v8 = *(CFDataRef *)a1;
  char v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7
    && (atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
    {
LABEL_4:
      uint64_t v9 = sub_215DD154C((CFDataRef *)a1);
      uint64_t v42 = v9;
      switch(v46)
      {
        case 0u:
          if ((v9 & 3) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 1;
            int v48 = 2;
            uint64_t v47 = 4;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          BytePtr = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v13 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v14 = v13;
          if (BytePtr
            || !v13
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v14;
            *((void *)&v52 + 1) = BytePtr;
            sub_2157EC134(v51, (size_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 1u:
          if ((v9 & 7) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 2;
            int v48 = 2;
            uint64_t v47 = 8;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v18 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v19 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v20 = v19;
          if (v18
            || v19 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v20 >> 1;
            *((void *)&v52 + 1) = v18;
            sub_2157EEAB4(v51, (uint64_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 2u:
          if ((v9 & 0xF) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 4;
            int v48 = 2;
            uint64_t v47 = 16;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v21 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v22 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v23 = v22;
          if (v21
            || v22 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v23 >> 2;
            *((void *)&v52 + 1) = v21;
            sub_2157EEBA4(v51, (uint64_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 3u:
          if ((v9 & 0x1F) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 8;
            int v48 = 2;
            uint64_t v47 = 32;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v27 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v28 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v29 = v28;
          if (v27
            || v28 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v29 >> 3;
            *((void *)&v52 + 1) = v27;
            sub_2157EEC94(v51, (uint64_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 5u:
          if ((v9 & 3) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 1;
            int v48 = 2;
            uint64_t v47 = 4;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v30 = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v31 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v32 = v31;
          if (v30
            || !v31
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v32;
            *((void *)&v52 + 1) = v30;
            sub_2157EED84(v51, (size_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 6u:
          if ((v9 & 7) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 2;
            int v48 = 2;
            uint64_t v47 = 8;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          char v33 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v34 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v35 = v34;
          if (v33
            || v34 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v35 >> 1;
            *((void *)&v52 + 1) = v33;
            sub_2157EEE74(v51, (uint64_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 7u:
          if ((v9 & 0xF) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 4;
            int v48 = 2;
            uint64_t v47 = 16;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v36 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v37 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v38 = v37;
          if (v36
            || v37 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v38 >> 2;
            *((void *)&v52 + 1) = v36;
            sub_2157EEF64(v51, (uint64_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 8u:
          if ((v9 & 0x1F) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 8;
            int v48 = 2;
            uint64_t v47 = 32;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v24 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v25 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v26 = v25;
          if (v24
            || v25 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v26 >> 3;
            *((void *)&v52 + 1) = v24;
            sub_2157EF054(v51, (uint64_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 0xBu:
          if ((v9 & 0xF) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 4;
            int v48 = 2;
            uint64_t v47 = 16;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v39 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v40 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v41 = v40;
          if (v39
            || v40 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v41 >> 2;
            *((void *)&v52 + 1) = v39;
            sub_2157EF144(v51, (uint64_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        case 0xCu:
          if ((v9 & 0x1F) != 0)
          {
            int v50 = 2;
            uint64_t v49 = 8;
            int v48 = 2;
            uint64_t v47 = 32;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v15 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v16 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v17 = v16;
          if (v15
            || v16 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v17 >> 3;
            *((void *)&v52 + 1) = v15;
            sub_2157EF234(v51, (uint64_t *)&v52);
            sub_2157EC224((uint64_t)v51, a3);
          }
          return;
        default:
          sub_215E097D8(v46);
      }
      abort();
    }
  }
  else if (v8)
  {
    goto LABEL_4;
  }
  LOBYTE(v43) = 0;
  char v45 = 0;
  sub_215964354(&v43, (uint64_t)&v52);
  *(_OWORD *)a4 = v52;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v62)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v10 = v55;
    if (v55)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v54;
      uint64_t v54 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v61)
    {
      uint64_t v11 = v58;
      *(void *)(a4 + 64) = v57;
      *(_OWORD *)(a4 + 48) = v56;
      long long v56 = 0uLL;
      *(void *)(a4 + 72) = v11;
      *(_OWORD *)(a4 + 80) = v59;
      *(void *)(a4 + 96) = v60;
      uint64_t v57 = 0;
      long long v59 = 0uLL;
      uint64_t v60 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 528) = 0;
    if (v10 && SHIBYTE(v54) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 528) = 0;
  }
  if (v45 && v44 < 0) {
    operator delete((void *)v43);
  }
}

void sub_2157DF274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157DF478(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  unsigned __int8 v46 = a2;
  CFDataRef v8 = *(CFDataRef *)a1;
  char v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7
    && (atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
    {
LABEL_4:
      uint64_t v9 = sub_215DD154C((CFDataRef *)a1);
      uint64_t v42 = v9;
      switch(v46)
      {
        case 0u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 1) >= 0x2AAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 1;
            int v48 = 3;
            uint64_t v47 = 6;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          BytePtr = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v13 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v14 = v13;
          if (BytePtr
            || !v13
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v14;
            *((void *)&v52 + 1) = BytePtr;
            sub_2157EF324(v51, (size_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 1u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 2) >= 0x1555555555555556uLL)
          {
            int v50 = 3;
            uint64_t v49 = 2;
            int v48 = 3;
            uint64_t v47 = 12;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v18 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v19 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v20 = v19;
          if (v18
            || v19 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v20 >> 1;
            *((void *)&v52 + 1) = v18;
            sub_2157F1688(v51, (uint64_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 2u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 3) >= 0xAAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 4;
            int v48 = 3;
            uint64_t v47 = 24;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v21 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v22 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v23 = v22;
          if (v21
            || v22 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v23 >> 2;
            *((void *)&v52 + 1) = v21;
            sub_2157F1778(v51, (uint64_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 3u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 4) >= 0x555555555555556uLL)
          {
            int v50 = 3;
            uint64_t v49 = 8;
            int v48 = 3;
            uint64_t v47 = 48;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v27 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v28 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v29 = v28;
          if (v27
            || v28 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v29 >> 3;
            *((void *)&v52 + 1) = v27;
            sub_2157F1868(v51, (uint64_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 5u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 1) >= 0x2AAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 1;
            int v48 = 3;
            uint64_t v47 = 6;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v30 = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v31 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v32 = v31;
          if (v30
            || !v31
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v32;
            *((void *)&v52 + 1) = v30;
            sub_2157F1958(v51, (size_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 6u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 2) >= 0x1555555555555556uLL)
          {
            int v50 = 3;
            uint64_t v49 = 2;
            int v48 = 3;
            uint64_t v47 = 12;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          char v33 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v34 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v35 = v34;
          if (v33
            || v34 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v35 >> 1;
            *((void *)&v52 + 1) = v33;
            sub_2157F1A48(v51, (uint64_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 7u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 3) >= 0xAAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 4;
            int v48 = 3;
            uint64_t v47 = 24;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v36 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v37 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v38 = v37;
          if (v36
            || v37 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v38 >> 2;
            *((void *)&v52 + 1) = v36;
            sub_2157F1B38(v51, (uint64_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 8u:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 4) >= 0x555555555555556uLL)
          {
            int v50 = 3;
            uint64_t v49 = 8;
            int v48 = 3;
            uint64_t v47 = 48;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          long long v24 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v25 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v26 = v25;
          if (v24
            || v25 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v26 >> 3;
            *((void *)&v52 + 1) = v24;
            sub_2157F1C28(v51, (uint64_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 0xBu:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 3) >= 0xAAAAAAAAAAAAAABuLL)
          {
            int v50 = 3;
            uint64_t v49 = 4;
            int v48 = 3;
            uint64_t v47 = 24;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v39 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v40 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v41 = v40;
          if (v39
            || v40 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v41 >> 2;
            *((void *)&v52 + 1) = v39;
            sub_2157F1D18(v51, (uint64_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        case 0xCu:
          if (__ROR8__(0xAAAAAAAAAAAAAAABLL * v9, 4) >= 0x555555555555556uLL)
          {
            int v50 = 3;
            uint64_t v49 = 8;
            int v48 = 3;
            uint64_t v47 = 48;
            sub_2157EBBF8((uint64_t)v51, (unint64_t *)&v42);
          }
          uint64_t v15 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v16 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v17 = v16;
          if (v15
            || v16 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            *(void *)&long long v52 = v17 >> 3;
            *((void *)&v52 + 1) = v15;
            sub_2157F1E08(v51, (uint64_t *)&v52);
            sub_2157EF414((uint64_t)v51, a3);
          }
          return;
        default:
          sub_215E097D8(v46);
      }
      abort();
    }
  }
  else if (v8)
  {
    goto LABEL_4;
  }
  LOBYTE(v43) = 0;
  char v45 = 0;
  sub_215964354(&v43, (uint64_t)&v52);
  *(_OWORD *)a4 = v52;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v62)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v10 = v55;
    if (v55)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v54;
      uint64_t v54 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v61)
    {
      uint64_t v11 = v58;
      *(void *)(a4 + 64) = v57;
      *(_OWORD *)(a4 + 48) = v56;
      long long v56 = 0uLL;
      *(void *)(a4 + 72) = v11;
      *(_OWORD *)(a4 + 80) = v59;
      *(void *)(a4 + 96) = v60;
      uint64_t v57 = 0;
      long long v59 = 0uLL;
      uint64_t v60 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 528) = 0;
    if (v10 && SHIBYTE(v54) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 528) = 0;
  }
  if (v45 && v44 < 0) {
    operator delete((void *)v43);
  }
}

void sub_2157E04E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E06EC(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v62 = *MEMORY[0x263EF8340];
  unsigned __int8 v46 = a2;
  CFDataRef v8 = *(CFDataRef *)a1;
  char v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (v7
    && (atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    if (v8)
    {
LABEL_4:
      uint64_t v9 = sub_215DD154C((CFDataRef *)a1);
      uint64_t v42 = v9;
      switch(v46)
      {
        case 0u:
          BytePtr = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v11 = sub_215DD154C((CFDataRef *)a1);
          uint64_t v12 = (void *)v11;
          if (BytePtr
            || !v11
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            v49[0] = v12;
            v49[1] = (void *)BytePtr;
            sub_2157E5EC8((size_t *)v49, &v51);
            *(_OWORD *)long long __dst = v51;
            sub_2157F21BC((uint64_t)__dst, a3);
          }
          return;
        case 1u:
          if (v9)
          {
            unint64_t v47 = 2;
            sub_2157F1EF8((uint64_t)v49, (unint64_t *)&v42);
          }
          uint64_t v15 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v16 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v17 = v16;
          if (v15
            || v16 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            unint64_t v47 = v17 >> 1;
            int v48 = v15;
            sub_2157E80EC((uint64_t *)&v47, &v51);
            *(_OWORD *)uint64_t v49 = v51;
            sub_2157F21BC((uint64_t)v49, a3);
          }
          return;
        case 2u:
          if ((v9 & 3) != 0)
          {
            unint64_t v47 = 4;
            sub_2157F1EF8((uint64_t)v49, (unint64_t *)&v42);
          }
          uint64_t v27 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v28 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v29 = v28;
          if (v27
            || v28 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            unint64_t v47 = v29 >> 2;
            int v48 = v27;
            sub_2157E82AC((uint64_t *)&v47, &v51);
            *(_OWORD *)uint64_t v49 = v51;
            sub_2157F21BC((uint64_t)v49, a3);
          }
          return;
        case 3u:
          if ((v9 & 7) != 0)
          {
            unint64_t v47 = 8;
            sub_2157F1EF8((uint64_t)v49, (unint64_t *)&v42);
          }
          char v33 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v34 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v35 = v34;
          if (v33
            || v34 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            unint64_t v47 = v35 >> 3;
            int v48 = v33;
            sub_2157E8454((uint64_t *)&v47, &v51);
            *(_OWORD *)uint64_t v49 = v51;
            sub_2157F21BC((uint64_t)v49, a3);
          }
          return;
        case 5u:
          uint64_t v18 = CFDataGetBytePtr(*(CFDataRef *)a1);
          uint64_t v19 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v20 = (void *)v19;
          if (v18
            || !v19
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            v49[0] = v20;
            v49[1] = (void *)v18;
            sub_2157E85FC((size_t *)v49, &v51);
            *(_OWORD *)long long __dst = v51;
            sub_2157F21BC((uint64_t)__dst, a3);
          }
          return;
        case 6u:
          if (v9)
          {
            unint64_t v47 = 2;
            sub_2157F1EF8((uint64_t)v49, (unint64_t *)&v42);
          }
          long long v21 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v22 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v23 = v22;
          if (v21
            || v22 < 2
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            unint64_t v47 = v23 >> 1;
            int v48 = v21;
            sub_2157E87A0((uint64_t *)&v47, &v51);
            *(_OWORD *)uint64_t v49 = v51;
            sub_2157F21BC((uint64_t)v49, a3);
          }
          return;
        case 7u:
          if ((v9 & 3) != 0)
          {
            unint64_t v47 = 4;
            sub_2157F1EF8((uint64_t)v49, (unint64_t *)&v42);
          }
          uint64_t v36 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v37 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v38 = v37;
          if (v36
            || v37 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            unint64_t v47 = v38 >> 2;
            int v48 = v36;
            sub_2157E8948((uint64_t *)&v47, &v51);
            *(_OWORD *)uint64_t v49 = v51;
            sub_2157F21BC((uint64_t)v49, a3);
          }
          return;
        case 8u:
          if ((v9 & 7) != 0)
          {
            unint64_t v47 = 8;
            sub_2157F1EF8((uint64_t)v49, (unint64_t *)&v42);
          }
          long long v30 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v31 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v32 = v31;
          if (v30
            || v31 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            unint64_t v47 = v32 >> 3;
            int v48 = v30;
            sub_2157E8AF0((uint64_t *)&v47, &v51);
            *(_OWORD *)uint64_t v49 = v51;
            sub_2157F21BC((uint64_t)v49, a3);
          }
          return;
        case 0xBu:
          if ((v9 & 3) != 0)
          {
            unint64_t v47 = 4;
            sub_2157F1EF8((uint64_t)v49, (unint64_t *)&v42);
          }
          uint64_t v39 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v40 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v41 = v40;
          if (v39
            || v40 < 4
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            unint64_t v47 = v41 >> 2;
            int v48 = v39;
            sub_2157E8C98((uint64_t *)&v47, &v51);
            *(_OWORD *)uint64_t v49 = v51;
            sub_2157F21BC((uint64_t)v49, a3);
          }
          return;
        case 0xCu:
          if ((v9 & 7) != 0)
          {
            unint64_t v47 = 8;
            sub_2157F1EF8((uint64_t)v49, (unint64_t *)&v42);
          }
          long long v24 = CFDataGetBytePtr(*(CFDataRef *)a1);
          unint64_t v25 = sub_215DD154C((CFDataRef *)a1);
          unint64_t v26 = v25;
          if (v24
            || v25 < 8
            || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
          {
            unint64_t v47 = v26 >> 3;
            int v48 = v24;
            sub_2157E8E40((uint64_t *)&v47, &v51);
            *(_OWORD *)uint64_t v49 = v51;
            sub_2157F21BC((uint64_t)v49, a3);
          }
          return;
        default:
          sub_215E097D8(v46);
      }
      abort();
    }
  }
  else if (v8)
  {
    goto LABEL_4;
  }
  LOBYTE(v43) = 0;
  char v45 = 0;
  sub_215964354(&v43, (uint64_t)&v51);
  *(_OWORD *)a4 = v51;
  *(unsigned char *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 112) = 0;
  if (v61)
  {
    *(unsigned char *)(a4 + 40) = 0;
    int v13 = v54;
    if (v54)
    {
      *(_OWORD *)(a4 + 16) = __p;
      *(void *)(a4 + 32) = v53;
      uint64_t v53 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a4 + 40) = 1;
    }
    *(unsigned char *)(a4 + 48) = 0;
    *(unsigned char *)(a4 + 104) = 0;
    if (v60)
    {
      uint64_t v14 = v57;
      *(void *)(a4 + 64) = v56;
      *(_OWORD *)(a4 + 48) = v55;
      long long v55 = 0uLL;
      *(void *)(a4 + 72) = v14;
      *(_OWORD *)(a4 + 80) = v58;
      *(void *)(a4 + 96) = v59;
      uint64_t v56 = 0;
      long long v58 = 0uLL;
      uint64_t v59 = 0;
      *(unsigned char *)(a4 + 104) = 1;
    }
    *(unsigned char *)(a4 + 112) = 1;
    *(unsigned char *)(a4 + 528) = 0;
    if (v13 && SHIBYTE(v53) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 528) = 0;
  }
  if (v45 && v44 < 0) {
    operator delete((void *)v43);
  }
}

void sub_2157E146C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  if (a25 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E1670(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = *MEMORY[0x263EF8340];
  uint64_t v6 = *a1;
  size_t v5 = (std::__shared_weak_count *)a1[1];
  if (v5
    && (atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (v6)
    {
LABEL_4:
      if (!*((unsigned char *)a2 + 384))
      {
        unint64_t v29 = &unk_26C6835D0;
        uint64_t v12 = mach_continuous_time();
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_267890888))
        {
          mach_timebase_info(&info);
          LODWORD(v21) = info.numer;
          LODWORD(v22) = info.denom;
          *(double *)&qword_267890880 = (double)v21 / (double)v22;
          __cxa_guard_release(&qword_267890888);
        }
        mach_timebase_info v40 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v12);
        uint64_t v41 = 2;
        LOBYTE(v42) = 0;
        char v44 = 0;
        LOBYTE(v45) = 0;
        char v47 = 0;
        LOBYTE(v48) = 0;
        char v49 = 0;
        LOBYTE(v50) = 0;
        char v54 = 0;
        v55[0] = 0;
        v55[24] = 0;
        sub_2157F4714();
      }
      if (*((unsigned char *)a2 + 168))
      {
        mach_timebase_info v7 = (mach_timebase_info)*((void *)a2 + 19);
        uint64_t v8 = *((void *)a2 + 20);
        if (*((unsigned char *)a2 + 24)) {
          goto LABEL_7;
        }
      }
      else
      {
        mach_timebase_info info = (mach_timebase_info)&unk_26C6835D0;
        uint64_t v13 = mach_continuous_time();
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_267890888))
        {
          mach_timebase_info(&v40);
          LODWORD(v23) = v40.numer;
          LODWORD(v24) = v40.denom;
          *(double *)&qword_267890880 = (double)v23 / (double)v24;
          __cxa_guard_release(&qword_267890888);
        }
        mach_timebase_info v7 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v13);
        LOBYTE(v8) = 2;
        if (*((unsigned char *)a2 + 24))
        {
LABEL_7:
          sub_21582E5A0((const char *)a2, 1000000000);
          int v9 = *((unsigned __int8 *)a2 + 24);
          mach_timebase_info v40 = v7;
          LOBYTE(v41) = v8;
          LOBYTE(v42) = 0;
          char v44 = 0;
          if (v9)
          {
            if (*((char *)a2 + 23) < 0)
            {
              sub_215738B0C(&v42, *(void **)a2, *((void *)a2 + 1));
            }
            else
            {
              long long v42 = *a2;
              uint64_t v43 = *((void *)a2 + 2);
            }
            char v44 = 1;
            LOBYTE(v45) = 0;
            char v47 = 0;
            if (*((unsigned char *)a2 + 120))
            {
LABEL_40:
              if (*((char *)a2 + 119) < 0)
              {
                sub_215738B0C(&v45, *((void **)a2 + 12), *((void *)a2 + 13));
              }
              else
              {
                long long v45 = a2[6];
                uint64_t v46 = *((void *)a2 + 14);
              }
              char v47 = 1;
              LOBYTE(v48) = 0;
              char v49 = 0;
              if (!*((unsigned char *)a2 + 144))
              {
LABEL_27:
                LOBYTE(v50) = 0;
                char v54 = 0;
                if (*((unsigned char *)a2 + 80))
                {
                  if (*((char *)a2 + 55) < 0)
                  {
                    sub_215738B0C(&v50, *((void **)a2 + 4), *((void *)a2 + 5));
                  }
                  else
                  {
                    long long v50 = a2[2];
                    uint64_t v51 = *((void *)a2 + 6);
                  }
                  _X0 = 0;
                  _X1 = 0;
                  __asm { CASPAL          X0, X1, X0, X1, [X8] }
                  uint64_t v52 = _X0;
                  uint64_t v53 = 0;
                  char v54 = 1;
                }
                sub_215746DAC((uint64_t)v55, (uint64_t)(a2 + 11));
                sub_2157F4714();
              }
LABEL_26:
              long long v48 = a2[8];
              char v49 = 1;
              goto LABEL_27;
            }
LABEL_25:
            LOBYTE(v48) = 0;
            char v49 = 0;
            if (!*((unsigned char *)a2 + 144)) {
              goto LABEL_27;
            }
            goto LABEL_26;
          }
LABEL_24:
          LOBYTE(v45) = 0;
          char v47 = 0;
          if (*((unsigned char *)a2 + 120)) {
            goto LABEL_40;
          }
          goto LABEL_25;
        }
      }
      mach_timebase_info v40 = v7;
      LOBYTE(v41) = v8;
      LOBYTE(v42) = 0;
      char v44 = 0;
      goto LABEL_24;
    }
  }
  else if (v6)
  {
    goto LABEL_4;
  }
  LOBYTE(v25) = 0;
  char v27 = 0;
  sub_215964354(&v25, (uint64_t)v30);
  *(_OWORD *)a3 = *(_OWORD *)v30;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v39)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v10 = v33;
    if (v33)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v32;
      uint64_t v32 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v38)
    {
      uint64_t v11 = v35[1];
      *(void **)(a3 + 64) = v35[0];
      *(_OWORD *)(a3 + 48) = v34;
      long long v34 = 0uLL;
      *(void *)(a3 + 72) = v11;
      *(_OWORD *)(a3 + 80) = v36;
      *(void *)(a3 + 96) = v37;
      v35[0] = 0;
      long long v36 = 0uLL;
      uint64_t v37 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 528) = 0;
    if (v10 && SHIBYTE(v32) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 528) = 0;
  }
  if (v27 && v26 < 0) {
    operator delete((void *)v25);
  }
}

void sub_2157E2080(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, uint64_t a11, long long __dst, uint64_t a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28,int a29,__int16 a30,uint64_t a31,std::logic_error a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,long long a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,long long a52,long long __p,uint64_t a54,char a55,long long a56,uint64_t a57,uint64_t a58,long long a59,uint64_t a60,char a61,int a62,__int16 a63)
{
  __cxa_guard_abort(&qword_267890888);
  if (a2 == 1)
  {
    exception_ptr = (const std::logic_error *)__cxa_get_exception_ptr(a1);
    std::logic_error::logic_error(&a32, exception_ptr);
    a32.__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_begin_catch(a1);
    uint64_t v67 = std::logic_error::what(&a32);
    a9 = (uint64_t)v67;
    a37 = (uint64_t)operator new(0x38uLL);
    a38 = xmmword_215E9BA20;
    strcpy((char *)a37, "Invalid argument for creation of dictionary data: ");
    a39 = 1;
    if (v67)
    {
      a40 = (uint64_t)&a37;
      a41 = (uint64_t)&a9;
      a42 = (uint64_t)&a37;
      a43 = (uint64_t)&a9;
      a44 = (uint64_t)&a9;
      sub_215743B60(&a42, (uint64_t)&a37);
    }
    else
    {
      a40 = (uint64_t)&a37;
      a41 = (uint64_t)"nullptr";
      a42 = (uint64_t)&a37;
      a43 = (uint64_t)"nullptr";
      a44 = (uint64_t)"nullptr";
      sub_215743540(&a42, (uint64_t)&a37);
    }
    if (a39 != -1)
    {
      a40 = (uint64_t)&a47;
      ((void (*)(long long *__return_ptr, uint64_t *, uint64_t *))off_26C65A6B8[a39])(&a10, &a40, &a37);
      if (a39 != -1) {
        ((void (*)(uint64_t *, uint64_t *))off_26C65A5E0[a39])(&a40, &a37);
      }
      if (SHIBYTE(a11) < 0)
      {
        sub_215738B0C(&__dst, (void *)a10, *((unint64_t *)&a10 + 1));
      }
      else
      {
        long long __dst = a10;
        a13 = a11;
      }
      a14 = 1;
      LOBYTE(a15) = 0;
      a28 = 0;
      LOBYTE(a30) = 1;
      sub_21573FCF8(0xAu, &__dst, (uint64_t)&a52);
      *(_OWORD *)uint64_t v63 = a52;
      *(unsigned char *)(v63 + 16) = 0;
      *(unsigned char *)(v63 + 112) = 0;
      if ((_BYTE)a63)
      {
        *(unsigned char *)(v63 + 40) = 0;
        int v68 = a55;
        if (a55)
        {
          *(_OWORD *)(v63 + 16) = __p;
          *(void *)(v63 + 32) = a54;
          a54 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(v63 + 40) = 1;
        }
        *(unsigned char *)(v63 + 48) = 0;
        *(unsigned char *)(v63 + 104) = 0;
        if (a61)
        {
          uint64_t v69 = a58;
          *(void *)(v63 + 64) = a57;
          *(_OWORD *)(v63 + 48) = a56;
          a56 = 0uLL;
          *(void *)(v63 + 72) = v69;
          *(_OWORD *)(v63 + 80) = a59;
          *(void *)(v63 + 96) = a60;
          a57 = 0;
          a59 = 0uLL;
          a60 = 0;
          *(unsigned char *)(v63 + 104) = 1;
        }
        *(unsigned char *)(v63 + 112) = 1;
        *(unsigned char *)(v63 + 528) = 0;
        if (v68 && SHIBYTE(a54) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        *(unsigned char *)(v63 + 528) = 0;
      }
      if ((_BYTE)a30)
      {
        if (a28)
        {
          if (a27 < 0) {
            operator delete(a22);
          }
          if (a20 < 0) {
            operator delete(a15);
          }
        }
        if (a14 && SHIBYTE(a13) < 0) {
          operator delete((void *)__dst);
        }
      }
      if (SHIBYTE(a11) < 0) {
        operator delete((void *)a10);
      }
      MEMORY[0x2166C4250](&a32);
      __cxa_end_catch();
      JUMPOUT(0x2157E1F5CLL);
    }
    sub_215742D4C();
  }
  _Unwind_Resume(a1);
}

void sub_2157E250C(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v59 = *MEMORY[0x263EF8340];
  CFNumberRef v7 = *(CFNumberRef *)a1;
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6
    && (atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
    {
LABEL_4:
      sub_215DD9380((CFNumberRef *)a1, (uint64_t)&v26);
      if (!*((unsigned char *)a2 + 384))
      {
        unint64_t v31 = &unk_26C6835D0;
        uint64_t v13 = mach_continuous_time();
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_267890888))
        {
          mach_timebase_info(&info);
          LODWORD(v22) = info.numer;
          LODWORD(v23) = info.denom;
          *(double *)&qword_267890880 = (double)v22 / (double)v23;
          __cxa_guard_release(&qword_267890888);
        }
        mach_timebase_info v43 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v13);
        uint64_t v44 = 2;
        LOBYTE(v45) = 0;
        char v47 = 0;
        LOBYTE(v48) = 0;
        char v50 = 0;
        LOBYTE(v51) = 0;
        char v52 = 0;
        LOBYTE(v53) = 0;
        char v57 = 0;
        v58[0] = 0;
        v58[24] = 0;
        sub_2157F497C();
      }
      if (*((unsigned char *)a2 + 168))
      {
        mach_timebase_info v8 = (mach_timebase_info)*((void *)a2 + 19);
        uint64_t v9 = *((void *)a2 + 20);
        if (*((unsigned char *)a2 + 24)) {
          goto LABEL_7;
        }
      }
      else
      {
        mach_timebase_info info = (mach_timebase_info)&unk_26C6835D0;
        uint64_t v14 = mach_continuous_time();
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_267890888))
        {
          mach_timebase_info(&v43);
          LODWORD(v24) = v43.numer;
          LODWORD(v25) = v43.denom;
          *(double *)&qword_267890880 = (double)v24 / (double)v25;
          __cxa_guard_release(&qword_267890888);
        }
        mach_timebase_info v8 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v14);
        LOBYTE(v9) = 2;
        if (*((unsigned char *)a2 + 24))
        {
LABEL_7:
          sub_21582E5A0((const char *)a2, 1000000000);
          int v10 = *((unsigned __int8 *)a2 + 24);
          mach_timebase_info v43 = v8;
          LOBYTE(v44) = v9;
          LOBYTE(v45) = 0;
          char v47 = 0;
          if (v10)
          {
            if (*((char *)a2 + 23) < 0)
            {
              sub_215738B0C(&v45, *(void **)a2, *((void *)a2 + 1));
            }
            else
            {
              long long v45 = *a2;
              uint64_t v46 = *((void *)a2 + 2);
            }
            char v47 = 1;
            LOBYTE(v48) = 0;
            char v50 = 0;
            if (!*((unsigned char *)a2 + 120))
            {
LABEL_36:
              LOBYTE(v51) = 0;
              char v52 = 0;
              if (!*((unsigned char *)a2 + 144)) {
                goto LABEL_38;
              }
              goto LABEL_37;
            }
LABEL_25:
            if (*((char *)a2 + 119) < 0)
            {
              sub_215738B0C(&v48, *((void **)a2 + 12), *((void *)a2 + 13));
            }
            else
            {
              long long v48 = a2[6];
              uint64_t v49 = *((void *)a2 + 14);
            }
            char v50 = 1;
            LOBYTE(v51) = 0;
            char v52 = 0;
            if (!*((unsigned char *)a2 + 144))
            {
LABEL_38:
              LOBYTE(v53) = 0;
              char v57 = 0;
              if (*((unsigned char *)a2 + 80))
              {
                if (*((char *)a2 + 55) < 0)
                {
                  sub_215738B0C(&v53, *((void **)a2 + 4), *((void *)a2 + 5));
                }
                else
                {
                  long long v53 = a2[2];
                  uint64_t v54 = *((void *)a2 + 6);
                }
                _X0 = 0;
                _X1 = 0;
                __asm { CASPAL          X0, X1, X0, X1, [X8] }
                uint64_t v55 = _X0;
                uint64_t v56 = 0;
                char v57 = 1;
              }
              sub_215746DAC((uint64_t)v58, (uint64_t)(a2 + 11));
              sub_2157F497C();
            }
LABEL_37:
            long long v51 = a2[8];
            char v52 = 1;
            goto LABEL_38;
          }
LABEL_24:
          LOBYTE(v48) = 0;
          char v50 = 0;
          if (!*((unsigned char *)a2 + 120)) {
            goto LABEL_36;
          }
          goto LABEL_25;
        }
      }
      mach_timebase_info v43 = v8;
      LOBYTE(v44) = v9;
      LOBYTE(v45) = 0;
      char v47 = 0;
      goto LABEL_24;
    }
  }
  else if (v7)
  {
    goto LABEL_4;
  }
  LOBYTE(v27) = 0;
  char v29 = 0;
  sub_215964354(&v27, (uint64_t)&v32);
  *(_OWORD *)a3 = v32;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v42)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v11 = v35;
    if (v35)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v34;
      uint64_t v34 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v41)
    {
      uint64_t v12 = v38;
      *(void *)(a3 + 64) = v37;
      *(_OWORD *)(a3 + 48) = v36;
      long long v36 = 0uLL;
      *(void *)(a3 + 72) = v12;
      *(_OWORD *)(a3 + 80) = v39;
      *(void *)(a3 + 96) = v40;
      uint64_t v37 = 0;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 528) = 0;
    if (v11 && SHIBYTE(v34) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 528) = 0;
  }
  if (v29 && v28 < 0) {
    operator delete((void *)v27);
  }
}

void sub_2157E2ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p)
{
  if (__p)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157E2BC8(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  CFDataRef v7 = *(CFDataRef *)a1;
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (v6
    && (atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed),
        !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
    {
LABEL_4:
      BytePtr = CFDataGetBytePtr(*(CFDataRef *)a1);
      uint64_t v9 = sub_215DD154C((CFDataRef *)a1);
      size_t v10 = v9;
      if (BytePtr) {
        BOOL v11 = 1;
      }
      else {
        BOOL v11 = v9 == 0;
      }
      if (v11)
      {
        long long __p = 0;
        unint64_t v21 = 0;
        unint64_t v22 = 0;
        if (!v9) {
          goto LABEL_15;
        }
      }
      else
      {
        if (sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
        {
          abort();
        }
        long long __p = 0;
        unint64_t v21 = 0;
        unint64_t v22 = 0;
      }
      if ((v10 & 0x8000000000000000) != 0) {
        sub_2157C3CEC();
      }
      uint64_t v12 = (char *)operator new(v10);
      uint64_t v13 = &v12[v10];
      long long __p = v12;
      unint64_t v22 = &v12[v10];
      memcpy(v12, BytePtr, v10);
      unint64_t v21 = v13;
LABEL_15:
      sub_215D0B178((uint64_t)&v23, (uint64_t)&__p);
      if (__p)
      {
        unint64_t v21 = __p;
        operator delete(__p);
      }
      v16[0] = v23;
      v16[1] = *(_OWORD *)v24;
      sub_2157C32E0((uint64_t)v16, a2);
    }
  }
  else if (v7)
  {
    goto LABEL_4;
  }
  LOBYTE(v17) = 0;
  char v19 = 0;
  sub_215964354(&v17, (uint64_t)&v23);
  *(_OWORD *)a3 = v23;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v33)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v14 = v26;
    if (v26)
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)v24;
      *(void *)(a3 + 32) = v25;
      v24[1] = 0;
      uint64_t v25 = 0;
      v24[0] = 0;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v32)
    {
      uint64_t v15 = v29;
      *(void *)(a3 + 64) = v28;
      *(_OWORD *)(a3 + 48) = v27;
      long long v27 = 0uLL;
      *(void *)(a3 + 72) = v15;
      *(_OWORD *)(a3 + 80) = v30;
      *(void *)(a3 + 96) = v31;
      uint64_t v28 = 0;
      long long v30 = 0uLL;
      uint64_t v31 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 528) = 0;
    if (v14 && SHIBYTE(v25) < 0) {
      operator delete(v24[0]);
    }
  }
  else
  {
    *(unsigned char *)(a3 + 528) = 0;
  }
  if (v19 && v18 < 0) {
    operator delete((void *)v17);
  }
}

void sub_2157E2ED0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a20)
  {
    if (a19 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E2F3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  size_t v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C674630, 0) != 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (v6) {
      goto LABEL_9;
    }
    goto LABEL_14;
  }
LABEL_8:
  if (v6)
  {
LABEL_9:
    uint64_t v7 = *(void *)(a1 + 424);
    uint64_t v8 = *(void *)(a1 + 432);
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    if (v7)
    {
      uint64_t v9 = sub_215CE9B60((void *)(v7 + 8));
      sub_21575FC70(a2, v9);
    }
LABEL_15:
    size_t v10 = sub_215AB5250(6u);
    BOOL v11 = v10;
    if (v10[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v12 = *(_OWORD *)v10;
      uint64_t v23 = *((void *)v10 + 2);
      long long __dst = v12;
    }
    int v24 = *((_DWORD *)v11 + 6);
    sub_2157C3E6C(&v19, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v16, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)unint64_t v16 = *(_OWORD *)a1;
      uint64_t v17 = *(void *)(a1 + 16);
    }
    int v18 = *(_DWORD *)(a1 + 24);
    uint64_t v13 = operator new(0x28uLL);
    long long v14 = xmmword_215E9BA30;
    strcpy((char *)v13, "cannot return data as CFDictionary");
    char v15 = 1;
    sub_215964570((long long **)&v19, (uint64_t)v16, (uint64_t)&v13);
  }
LABEL_14:
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  goto LABEL_15;
}

void sub_2157E330C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23)
{
  sub_2157C3C78(&a23);
  if (*(char *)(v23 - 73) < 0)
  {
    operator delete(*(void **)(v23 - 96));
    sub_215733368(v23 - 112);
    _Unwind_Resume(a1);
  }
  sub_215733368(v23 - 112);
  _Unwind_Resume(a1);
}

void sub_2157E3390(uint64_t a1, unint64_t *a2)
{
  int v4 = 0;
  sub_2157E4058(v3, "Invalid CFData size ");
  std::to_string(&v5, *a2);
  uint64_t v7 = v3;
  uint64_t v8 = &v5;
  uint64_t v9 = v3;
  size_t v10 = &v5;
  BOOL v11 = &v5;
  if (v4 != -1)
  {
    BOOL v6 = &v7;
    ((void (*)(_DWORD ***, _DWORD *))off_26C65A610[v4])(&v6, v3);
    if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v5.__r_.__value_.__l.__data_);
    }
    uint64_t v7 = v3;
    uint64_t v8 = (std::string *)" for specified value type ";
    uint64_t v9 = v3;
    size_t v10 = (std::string *)" for specified value type ";
    BOOL v11 = (std::string *)" for specified value type ";
    if (v4 != -1)
    {
      v5.__r_.__value_.__r.__words[0] = (std::string::size_type)&v7;
      ((void (*)(std::string *, _DWORD *))off_26C65A628[v4])(&v5, v3);
      sub_2157E3DE8();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_2157E3854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

_OWORD *sub_2157E38D4(_OWORD *a1, size_t *a2)
{
  sub_2157E5EC8(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  unint64_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E3970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E39C4(uint64_t a1, long long *a2)
{
  v31[5] = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384)) {
    sub_2157E5F7C();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v14) = info.numer;
      LODWORD(v15) = info.denom;
      *(double *)&qword_267890880 = (double)v14 / (double)v15;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      char v17 = v4;
      LOBYTE(v18) = 0;
      char v20 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v18, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v18 = *a2;
          uint64_t v19 = *((void *)a2 + 2);
        }
        char v20 = 1;
        LOBYTE(v21) = 0;
        char v23 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_22:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v21, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v21 = a2[6];
            uint64_t v22 = *((void *)a2 + 14);
          }
          char v23 = 1;
          LOBYTE(v24) = 0;
          char v25 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_14:
            LOBYTE(v26) = 0;
            char v30 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v26, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v26 = a2[2];
                uint64_t v27 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v28 = _X0;
              uint64_t v29 = 0;
              char v30 = 1;
            }
            sub_215746DAC((uint64_t)v31, (uint64_t)(a2 + 11));
            sub_2157E60E4();
          }
LABEL_13:
          long long v24 = a2[8];
          char v25 = 1;
          goto LABEL_14;
        }
LABEL_12:
        LOBYTE(v24) = 0;
        char v25 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
LABEL_11:
      LOBYTE(v21) = 0;
      char v23 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_22;
      }
      goto LABEL_12;
    }
  }
  mach_timebase_info info = v3;
  char v17 = v4;
  LOBYTE(v18) = 0;
  char v20 = 0;
  goto LABEL_11;
}

void sub_2157E3D18(_Unwind_Exception *a1)
{
}

void sub_2157E3D30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E3DE8()
{
}

void sub_2157E3FD4(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157E3FF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2157E403C(_DWORD ***a1)
{
  return sub_2157E4058(**a1, (char *)(*a1)[1]);
}

void sub_2157E4048(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157E4058(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65A5E0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157E414C(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  mach_timebase_info v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65A5E0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157E4304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157E4348(uint64_t a1, uint64_t a2)
{
  mach_timebase_info v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157E4444((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157E443C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157E4444(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  long long v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157E4644(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2157E4658(_DWORD ***a1)
{
  return sub_2157E4674(**a1, (char *)(*a1)[1]);
}

void sub_2157E4664(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157E4674(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65A5E0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157E4768(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65A5E0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157E4920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157E4964(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157E4A60((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157E4A58(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157E4A60(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  long long v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157E4C60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2157E4C74(_DWORD ***a1)
{
  return sub_2157E4C90(**a1, (char *)(*a1)[1]);
}

void sub_2157E4C80(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157E4C90(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65A5E0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157E4D84(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65A5E0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157E4F3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157E4F80(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157E507C((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157E5074(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157E507C(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  long long v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157E527C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2157E5290(_DWORD ***a1)
{
  return sub_2157E52AC(**a1, (char *)(*a1)[1]);
}

void sub_2157E529C(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157E52AC(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65A5E0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157E53A0(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65A5E0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157E5558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157E559C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157E5698((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157E5690(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157E5698(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  long long v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157E5898(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2157E58AC(_DWORD ***a1)
{
  return sub_2157E58C8(**a1, (char *)(*a1)[1]);
}

void sub_2157E58B8(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157E58C8(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65A5E0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157E59BC(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  unint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65A5E0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157E5B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157E5BB8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157E5CB4((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157E5CAC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157E5CB4(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  long long v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157E5EB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E5EC8(size_t *a1@<X0>, void *a2@<X8>)
{
  size_t v3 = *a1;
  unint64_t v4 = (const void *)a1[1];
  uint64_t v8 = 0;
  size_t v9 = 0;
  long long __p = 0;
  if (v3)
  {
    if ((v3 & 0x8000000000000000) != 0) {
      sub_2157C3CEC();
    }
    size_t v5 = (char *)operator new(v3);
    unint64_t v6 = &v5[v3];
    long long __p = v5;
    size_t v9 = &v5[v3];
    memcpy(v5, v4, v3);
    uint64_t v8 = v6;
  }
  sub_215D1429C(a2, 0, (uint64_t)&__p);
  if (__p)
  {
    uint64_t v8 = __p;
    operator delete(__p);
  }
}

void sub_2157E5F5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E5F7C()
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v0 = mach_continuous_time();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v1) = info.numer;
      LODWORD(v2) = info.denom;
      *(double *)&qword_267890880 = (double)v1 / (double)v2;
      __cxa_guard_release(&qword_267890888);
    }
  }
  unint64_t v4 = llround(*(double *)&qword_267890880 * (double)v0);
  uint64_t v5 = 2;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v10 = 0;
  char v11 = 0;
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  char v15 = 0;
  sub_2157E60E4();
}

void sub_2157E60B4(_Unwind_Exception *a1)
{
}

void sub_2157E60CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2157C6F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E60E4()
{
}

void sub_2157E61D8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157E620C(_Unwind_Exception *a1)
{
  size_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

void *sub_2157E6278(void *a1)
{
  *a1 = &unk_26C65A930;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157E6314(void *a1)
{
  *a1 = &unk_26C65A930;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157E63C0(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157E63C8(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A8F0, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = result;
      char v6 = (unsigned __int8 *)a1[1];
      int v7 = *v6;
      char v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_215D17264(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_2157E649C()
{
}

void sub_2157E6538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E6554()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885520, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885520))
  {
    uint64_t v0 = sub_2157E7454();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      uint64_t v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267885508, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267885518 = *(void *)(v5 - 8);
      xmmword_267885508 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885508, &dword_21572C000);
    __cxa_guard_release(&qword_267885520);
  }
  sub_2157E7E50(&xmmword_267885508, (uint64_t)"{");
}

void sub_2157E6670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2157E6690(_Unwind_Exception *a1)
{
}

void sub_2157E66A8(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 3;
}

void sub_2157E66D4(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_2157E6724(void *a1)
{
  *a1 = &unk_26C65A930;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157E67C0(void *a1)
{
  *a1 = &unk_26C65A930;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157E686C()
{
  uint64_t v0 = sub_2157E6EA8();
  sub_2157E69C8(v0, (uint64_t)"{");
}

void sub_2157E68C8()
{
  int v0 = 0;
  sub_2157E6BF8();
}

void sub_2157E6964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C65A5E0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E699C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2157E69C8(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157E6BF8();
}

void sub_2157E6B68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E6B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E6B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E6BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E6BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E6BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E6BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E6BF8()
{
}

void sub_2157E6E40(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157E6E64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_2157E6EA8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678853A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678853A0))
  {
    return &xmmword_267885388;
  }
  uint64_t v1 = sub_2157E6F90();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267885388, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267885398 = v1->__r_.__value_.__r.__words[2];
    xmmword_267885388 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885388, &dword_21572C000);
  __cxa_guard_release(&qword_2678853A0);
  return &xmmword_267885388;
}

void sub_2157E6F78(_Unwind_Exception *a1)
{
}

std::string *sub_2157E6F90()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678853C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678853C0))
  {
    return &stru_2678853A8;
  }
  sub_2157E7244((uint64_t)__p);
  sub_2157E708C(__p, &stru_2678853A8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678853A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678853C0);
  return &stru_2678853A8;
}

void sub_2157E704C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678853C0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678853C0);
  _Unwind_Resume(a1);
}

void sub_2157E708C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157E7454();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  char v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  char v10 = (void **)__p;
  if (__p)
  {
    char v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    char v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2157E71F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157E7244(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885480, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885480))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Points<2>>]", qword_267885468);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885468, &dword_21572C000);
    __cxa_guard_release(&qword_267885480);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678854A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678854A0))
  {
    size_t v3 = sub_215747D98(qword_267885468, "<", 0);
    sub_215747C90(qword_267885468, 0, v3, qword_267885488);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885488, &dword_21572C000);
    __cxa_guard_release(&qword_2678854A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678854C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678854C0))
  {
    sub_215E19DF4((uint64_t)qword_267885488, (uint64_t)&xmmword_2678854A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678854A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678854C0);
  }
  if (byte_2678854BF < 0)
  {
    long long v2 = xmmword_2678854A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678854A8;
    *(void *)(a1 + 16) = unk_2678854B8;
  }
}

void sub_2157E740C(_Unwind_Exception *a1)
{
}

void sub_2157E7424(_Unwind_Exception *a1)
{
}

void sub_2157E743C(_Unwind_Exception *a1)
{
}

long long *sub_2157E7454()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678853E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678853E0))
  {
    return &xmmword_2678853C8;
  }
  uint64_t v1 = sub_2157E753C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678853C8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678853D8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678853C8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678853C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678853E0);
  return &xmmword_2678853C8;
}

void sub_2157E7524(_Unwind_Exception *a1)
{
}

std::string *sub_2157E753C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885400, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885400))
  {
    return &stru_2678853E8;
  }
  sub_2157E7764((uint64_t)__p);
  sub_2157E7638(__p, &stru_2678853E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678853E8, &dword_21572C000);
  __cxa_guard_release(&qword_267885400);
  return &stru_2678853E8;
}

void sub_2157E75F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885400);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885400);
  _Unwind_Resume(a1);
}

void sub_2157E7638(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157E7974();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  int64x2_t v8 = (void **)__p;
  if (__p)
  {
    int8x16_t v9 = v12;
    char v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      char v10 = __p;
    }
    char v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2157E7738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2157E7764(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885420, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885420))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Points<2>]", qword_267885408);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885408, &dword_21572C000);
    __cxa_guard_release(&qword_267885420);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885440, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885440))
  {
    size_t v3 = sub_215747D98(qword_267885408, "<", 0);
    sub_215747C90(qword_267885408, 0, v3, qword_267885428);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885428, &dword_21572C000);
    __cxa_guard_release(&qword_267885440);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885460, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885460))
  {
    sub_215E19DF4((uint64_t)qword_267885428, (uint64_t)&xmmword_267885448);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885448, &dword_21572C000);
    __cxa_guard_release(&qword_267885460);
  }
  if (byte_26788545F < 0)
  {
    long long v2 = xmmword_267885448;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885448;
    *(void *)(a1 + 16) = unk_267885458;
  }
}

void sub_2157E792C(_Unwind_Exception *a1)
{
}

void sub_2157E7944(_Unwind_Exception *a1)
{
}

void sub_2157E795C(_Unwind_Exception *a1)
{
}

std::string *sub_2157E7974()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885360, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885360))
  {
    return &stru_267885348;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 2U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885348);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885348, &dword_21572C000);
  __cxa_guard_release(&qword_267885360);
  return &stru_267885348;
}

void sub_2157E7A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885360);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885360);
  _Unwind_Resume(a1);
}

std::string *sub_2157E7A78()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678854E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678854E0))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2157E7454();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_2157E7D4C();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_2678854C8, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678854C8, &dword_21572C000);
        __cxa_guard_release(&qword_2678854E0);
        return &stru_2678854C8;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_2678854C8;
}

void sub_2157E7C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_2678854E0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_2678854E0);
  _Unwind_Resume(a1);
}

std::string *sub_2157E7D4C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885500, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885500))
  {
    return &stru_2678854E8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 3U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678854E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678854E8, &dword_21572C000);
  __cxa_guard_release(&qword_267885500);
  return &stru_2678854E8;
}

void sub_2157E7E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885500);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885500);
  _Unwind_Resume(a1);
}

void sub_2157E7E50(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157E6BF8();
}

void sub_2157E7F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E7FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E7FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E7FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E7FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

_OWORD *sub_2157E7FFC(_OWORD *a1, uint64_t *a2)
{
  sub_2157E80EC(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E8098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E80EC(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  size_t v3 = (const void *)a1[1];
  long long v6 = 0;
  uint64_t v7 = 0;
  long long __p = 0;
  if (v4)
  {
    if (v4 < 0) {
      sub_2157E81A4();
    }
    long long __p = operator new(2 * v4);
    uint64_t v7 = (char *)__p + 2 * v4;
    memcpy(__p, v3, 2 * v4);
    long long v6 = v7;
  }
  sub_215D14650(a2, 1, (uint64_t)&__p);
  if (__p)
  {
    long long v6 = __p;
    operator delete(__p);
  }
}

void sub_2157E8184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E81A4()
{
}

_OWORD *sub_2157E81BC(_OWORD *a1, uint64_t *a2)
{
  sub_2157E82AC(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E8258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E82AC(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  size_t v3 = (const void *)a1[1];
  long long v6 = 0;
  uint64_t v7 = 0;
  long long __p = 0;
  if (v4)
  {
    if (v4 < 0) {
      sub_2157E81A4();
    }
    long long __p = operator new(4 * v4);
    uint64_t v7 = (char *)__p + 4 * v4;
    memcpy(__p, v3, 4 * v4);
    long long v6 = v7;
  }
  sub_215D14A08(a2, 2, (uint64_t)&__p);
  if (__p)
  {
    long long v6 = __p;
    operator delete(__p);
  }
}

void sub_2157E8344(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157E8364(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8454(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E8400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E8454(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  size_t v3 = (const void *)a1[1];
  long long v6 = 0;
  uint64_t v7 = 0;
  long long __p = 0;
  if (v4)
  {
    if (v4 < 0) {
      sub_2157E81A4();
    }
    long long __p = operator new(8 * v4);
    uint64_t v7 = (char *)__p + 8 * v4;
    memcpy(__p, v3, 8 * v4);
    long long v6 = v7;
  }
  sub_215D14DC0(a2, 3, (uint64_t)&__p);
  if (__p)
  {
    long long v6 = __p;
    operator delete(__p);
  }
}

void sub_2157E84EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157E850C(_OWORD *a1, size_t *a2)
{
  sub_2157E85FC(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E85A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E85FC(size_t *a1@<X0>, void *a2@<X8>)
{
  size_t v3 = *a1;
  uint64_t v4 = (const void *)a1[1];
  int64x2_t v8 = 0;
  char v9 = 0;
  long long __p = 0;
  if (v3)
  {
    if ((v3 & 0x8000000000000000) != 0) {
      sub_2157E81A4();
    }
    long long v5 = (char *)operator new(v3);
    long long v6 = &v5[v3];
    long long __p = v5;
    char v9 = &v5[v3];
    memcpy(v5, v4, v3);
    int64x2_t v8 = v6;
  }
  sub_215D140C4(a2, 5, (uint64_t)&__p);
  if (__p)
  {
    int64x2_t v8 = __p;
    operator delete(__p);
  }
}

void sub_2157E8690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157E86B0(_OWORD *a1, uint64_t *a2)
{
  sub_2157E87A0(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E874C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E87A0(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  size_t v3 = (const void *)a1[1];
  long long v6 = 0;
  uint64_t v7 = 0;
  long long __p = 0;
  if (v4)
  {
    if (v4 < 0) {
      sub_2157E81A4();
    }
    long long __p = operator new(2 * v4);
    uint64_t v7 = (char *)__p + 2 * v4;
    memcpy(__p, v3, 2 * v4);
    long long v6 = v7;
  }
  sub_215D14474(a2, 6, (uint64_t)&__p);
  if (__p)
  {
    long long v6 = __p;
    operator delete(__p);
  }
}

void sub_2157E8838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157E8858(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8948(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E88F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E8948(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  size_t v3 = (const void *)a1[1];
  long long v6 = 0;
  uint64_t v7 = 0;
  long long __p = 0;
  if (v4)
  {
    if (v4 < 0) {
      sub_2157E81A4();
    }
    long long __p = operator new(4 * v4);
    uint64_t v7 = (char *)__p + 4 * v4;
    memcpy(__p, v3, 4 * v4);
    long long v6 = v7;
  }
  sub_215D1482C(a2, 7, (uint64_t)&__p);
  if (__p)
  {
    long long v6 = __p;
    operator delete(__p);
  }
}

void sub_2157E89E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157E8A00(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8AF0(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E8A9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E8AF0(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  size_t v3 = (const void *)a1[1];
  long long v6 = 0;
  uint64_t v7 = 0;
  long long __p = 0;
  if (v4)
  {
    if (v4 < 0) {
      sub_2157E81A4();
    }
    long long __p = operator new(8 * v4);
    uint64_t v7 = (char *)__p + 8 * v4;
    memcpy(__p, v3, 8 * v4);
    long long v6 = v7;
  }
  sub_215D14BE4(a2, 8, (uint64_t)&__p);
  if (__p)
  {
    long long v6 = __p;
    operator delete(__p);
  }
}

void sub_2157E8B88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157E8BA8(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8C98(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E8C44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E8C98(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  size_t v3 = (const void *)a1[1];
  long long v6 = 0;
  uint64_t v7 = 0;
  long long __p = 0;
  if (v4)
  {
    if (v4 < 0) {
      sub_2157E81A4();
    }
    long long __p = operator new(4 * v4);
    uint64_t v7 = (char *)__p + 4 * v4;
    memcpy(__p, v3, 4 * v4);
    long long v6 = v7;
  }
  sub_215D14F9C(a2, 11, (uint64_t)&__p);
  if (__p)
  {
    long long v6 = __p;
    operator delete(__p);
  }
}

void sub_2157E8D30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157E8D50(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8E40(a2, &v6);
  long long v5 = v6;
  sub_215D17C18((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E8DEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E8E40(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  size_t v3 = (const void *)a1[1];
  long long v6 = 0;
  uint64_t v7 = 0;
  long long __p = 0;
  if (v4)
  {
    if (v4 < 0) {
      sub_2157E81A4();
    }
    long long __p = operator new(8 * v4);
    uint64_t v7 = (char *)__p + 8 * v4;
    memcpy(__p, v3, 8 * v4);
    long long v6 = v7;
  }
  sub_215D15178(a2, 12, (uint64_t)&__p);
  if (__p)
  {
    long long v6 = __p;
    operator delete(__p);
  }
}

void sub_2157E8ED8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157E8EF8(_OWORD *a1, size_t *a2)
{
  sub_2157E5EC8(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157E8F94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E8FE8(uint64_t a1, long long *a2)
{
  v31[5] = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384)) {
    sub_2157E940C();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v14) = info.numer;
      LODWORD(v15) = info.denom;
      *(double *)&qword_267890880 = (double)v14 / (double)v15;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      char v17 = v4;
      LOBYTE(v18) = 0;
      char v20 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v18, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v18 = *a2;
          uint64_t v19 = *((void *)a2 + 2);
        }
        char v20 = 1;
        LOBYTE(v21) = 0;
        char v23 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_22:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v21, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v21 = a2[6];
            uint64_t v22 = *((void *)a2 + 14);
          }
          char v23 = 1;
          LOBYTE(v24) = 0;
          char v25 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_14:
            LOBYTE(v26) = 0;
            char v30 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v26, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v26 = a2[2];
                uint64_t v27 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v28 = _X0;
              uint64_t v29 = 0;
              char v30 = 1;
            }
            sub_215746DAC((uint64_t)v31, (uint64_t)(a2 + 11));
            sub_2157E9574();
          }
LABEL_13:
          long long v24 = a2[8];
          char v25 = 1;
          goto LABEL_14;
        }
LABEL_12:
        LOBYTE(v24) = 0;
        char v25 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
LABEL_11:
      LOBYTE(v21) = 0;
      char v23 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_22;
      }
      goto LABEL_12;
    }
  }
  mach_timebase_info info = v3;
  char v17 = v4;
  LOBYTE(v18) = 0;
  char v20 = 0;
  goto LABEL_11;
}

void sub_2157E933C(_Unwind_Exception *a1)
{
}

void sub_2157E9354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E940C()
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v0 = mach_continuous_time();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v1) = info.numer;
      LODWORD(v2) = info.denom;
      *(double *)&qword_267890880 = (double)v1 / (double)v2;
      __cxa_guard_release(&qword_267890888);
    }
  }
  unint64_t v4 = llround(*(double *)&qword_267890880 * (double)v0);
  uint64_t v5 = 2;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v10 = 0;
  char v11 = 0;
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  char v15 = 0;
  sub_2157E9574();
}

void sub_2157E9544(_Unwind_Exception *a1)
{
}

void sub_2157E955C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2157C6F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157E9574()
{
}

void sub_2157E9668(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157E969C(_Unwind_Exception *a1)
{
  mach_timebase_info v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

void *sub_2157E9708(void *a1)
{
  *a1 = &unk_26C65AA00;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157E97A4(void *a1)
{
  *a1 = &unk_26C65AA00;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157E9850(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157E9858(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A9C0, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = result;
      char v6 = (unsigned __int8 *)a1[1];
      int v7 = *v6;
      char v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_215D17264(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_2157E992C()
{
}

void sub_2157E99C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E99E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678856C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678856C0))
  {
    uint64_t v0 = sub_2157EA8E4();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      uint64_t v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_2678856A8, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_2678856B8 = *(void *)(v5 - 8);
      xmmword_2678856A8 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678856A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678856C0);
  }
  sub_2157EB1DC(&xmmword_2678856A8, (uint64_t)"{");
}

void sub_2157E9B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2157E9B20(_Unwind_Exception *a1)
{
}

void sub_2157E9B38(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 4;
}

void sub_2157E9B64(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_2157E9BB4(void *a1)
{
  *a1 = &unk_26C65AA00;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157E9C50(void *a1)
{
  *a1 = &unk_26C65AA00;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157E9CFC()
{
  uint64_t v0 = sub_2157EA338();
  sub_2157E9E58(v0, (uint64_t)"{");
}

void sub_2157E9D58()
{
  int v0 = 0;
  sub_2157EA088();
}

void sub_2157E9DF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C65A5E0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157E9E2C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2157E9E58(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157EA088();
}

void sub_2157E9FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EA010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EA024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EA038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EA04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EA060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EA074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EA088()
{
}

void sub_2157EA2D0(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157EA2F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_2157EA338()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885540, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885540))
  {
    return &xmmword_267885528;
  }
  uint64_t v1 = sub_2157EA420();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267885528, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267885538 = v1->__r_.__value_.__r.__words[2];
    xmmword_267885528 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885528, &dword_21572C000);
  __cxa_guard_release(&qword_267885540);
  return &xmmword_267885528;
}

void sub_2157EA408(_Unwind_Exception *a1)
{
}

std::string *sub_2157EA420()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885560, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885560))
  {
    return &stru_267885548;
  }
  sub_2157EA6D4((uint64_t)__p);
  sub_2157EA51C(__p, &stru_267885548);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885548, &dword_21572C000);
  __cxa_guard_release(&qword_267885560);
  return &stru_267885548;
}

void sub_2157EA4DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885560);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885560);
  _Unwind_Resume(a1);
}

void sub_2157EA51C(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157EA8E4();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  char v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  char v10 = (void **)__p;
  if (__p)
  {
    char v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    char v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2157EA684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157EA6D4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885620, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885620))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Points<3>>]", qword_267885608);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885608, &dword_21572C000);
    __cxa_guard_release(&qword_267885620);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885640, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885640))
  {
    size_t v3 = sub_215747D98(qword_267885608, "<", 0);
    sub_215747C90(qword_267885608, 0, v3, qword_267885628);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885628, &dword_21572C000);
    __cxa_guard_release(&qword_267885640);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885660, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885660))
  {
    sub_215E19DF4((uint64_t)qword_267885628, (uint64_t)&xmmword_267885648);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885648, &dword_21572C000);
    __cxa_guard_release(&qword_267885660);
  }
  if (byte_26788565F < 0)
  {
    long long v2 = xmmword_267885648;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885648;
    *(void *)(a1 + 16) = unk_267885658;
  }
}

void sub_2157EA89C(_Unwind_Exception *a1)
{
}

void sub_2157EA8B4(_Unwind_Exception *a1)
{
}

void sub_2157EA8CC(_Unwind_Exception *a1)
{
}

long long *sub_2157EA8E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885580, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885580))
  {
    return &xmmword_267885568;
  }
  uint64_t v1 = sub_2157EA9CC();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267885568, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267885578 = v1->__r_.__value_.__r.__words[2];
    xmmword_267885568 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885568, &dword_21572C000);
  __cxa_guard_release(&qword_267885580);
  return &xmmword_267885568;
}

void sub_2157EA9B4(_Unwind_Exception *a1)
{
}

std::string *sub_2157EA9CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678855A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678855A0))
  {
    return &stru_267885588;
  }
  sub_2157EABF4((uint64_t)__p);
  sub_2157EAAC8(__p, &stru_267885588);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885588, &dword_21572C000);
  __cxa_guard_release(&qword_2678855A0);
  return &stru_267885588;
}

void sub_2157EAA88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678855A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678855A0);
  _Unwind_Resume(a1);
}

void sub_2157EAAC8(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157E7D4C();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __dst = v5;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 1uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v6, v7);
  int64x2_t v8 = (void **)__p;
  if (__p)
  {
    int8x16_t v9 = v12;
    char v10 = __p;
    if (v12 != __p)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      char v10 = __p;
    }
    char v12 = v8;
    operator delete(v10);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_2157EABC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_2157EABF4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678855C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678855C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Points<3>]", qword_2678855A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678855A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678855C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678855E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678855E0))
  {
    size_t v3 = sub_215747D98(qword_2678855A8, "<", 0);
    sub_215747C90(qword_2678855A8, 0, v3, qword_2678855C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678855C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678855E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885600, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885600))
  {
    sub_215E19DF4((uint64_t)qword_2678855C8, (uint64_t)&xmmword_2678855E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678855E8, &dword_21572C000);
    __cxa_guard_release(&qword_267885600);
  }
  if (byte_2678855FF < 0)
  {
    long long v2 = xmmword_2678855E8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678855E8;
    *(void *)(a1 + 16) = unk_2678855F8;
  }
}

void sub_2157EADBC(_Unwind_Exception *a1)
{
}

void sub_2157EADD4(_Unwind_Exception *a1)
{
}

void sub_2157EADEC(_Unwind_Exception *a1)
{
}

std::string *sub_2157EAE04()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885680, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885680))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2157EA8E4();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_2157EB0D8();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_267885668, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885668, &dword_21572C000);
        __cxa_guard_release(&qword_267885680);
        return &stru_267885668;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_267885668;
}

void sub_2157EAFF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_267885680);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_267885680);
  _Unwind_Resume(a1);
}

std::string *sub_2157EB0D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678856A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678856A0))
  {
    return &stru_267885688;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 4U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885688);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885688, &dword_21572C000);
  __cxa_guard_release(&qword_2678856A0);
  return &stru_267885688;
}

void sub_2157EB19C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678856A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678856A0);
  _Unwind_Resume(a1);
}

void sub_2157EB1DC(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157EA088();
}

void sub_2157EB320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EB338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EB34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EB360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EB374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

_OWORD *sub_2157EB388(_OWORD *a1, uint64_t *a2)
{
  sub_2157E80EC(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EB424(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EB478(_OWORD *a1, uint64_t *a2)
{
  sub_2157E82AC(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EB514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EB568(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8454(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EB604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EB658(_OWORD *a1, size_t *a2)
{
  sub_2157E85FC(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EB6F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EB748(_OWORD *a1, uint64_t *a2)
{
  sub_2157E87A0(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EB7E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EB838(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8948(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EB8D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EB928(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8AF0(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EB9C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EBA18(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8C98(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EBAB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EBB08(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8E40(a2, &v6);
  long long v5 = v6;
  sub_215D17CEC((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EBBA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157EBBF8(uint64_t a1, unint64_t *a2)
{
  int v4 = 0;
  sub_2157E4058(v3, "Invalid CFData size ");
  std::to_string(&v5, *a2);
  uint64_t v7 = v3;
  int64x2_t v8 = &v5;
  char v9 = v3;
  char v10 = &v5;
  uint64_t v11 = &v5;
  if (v4 != -1)
  {
    long long v6 = &v7;
    ((void (*)(_DWORD ***, _DWORD *))off_26C65A610[v4])(&v6, v3);
    if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v5.__r_.__value_.__l.__data_);
    }
    uint64_t v7 = v3;
    int64x2_t v8 = (std::string *)" for specified value type ";
    char v9 = v3;
    char v10 = (std::string *)" for specified value type ";
    uint64_t v11 = (std::string *)" for specified value type ";
    if (v4 != -1)
    {
      v5.__r_.__value_.__r.__words[0] = (std::string::size_type)&v7;
      ((void (*)(std::string *, _DWORD *))off_26C65A628[v4])(&v5, v3);
      sub_2157E3DE8();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_2157EC0B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

_OWORD *sub_2157EC134(_OWORD *a1, size_t *a2)
{
  sub_2157E5EC8(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EC1D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157EC224(uint64_t a1, long long *a2)
{
  v31[5] = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384)) {
    sub_2157ECC64();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v14) = info.numer;
      LODWORD(v15) = info.denom;
      *(double *)&qword_267890880 = (double)v14 / (double)v15;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      char v17 = v4;
      LOBYTE(v18) = 0;
      char v20 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v18, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v18 = *a2;
          uint64_t v19 = *((void *)a2 + 2);
        }
        char v20 = 1;
        LOBYTE(v21) = 0;
        char v23 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_22:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v21, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v21 = a2[6];
            uint64_t v22 = *((void *)a2 + 14);
          }
          char v23 = 1;
          LOBYTE(v24) = 0;
          char v25 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_14:
            LOBYTE(v26) = 0;
            char v30 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v26, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v26 = a2[2];
                uint64_t v27 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v28 = _X0;
              uint64_t v29 = 0;
              char v30 = 1;
            }
            sub_215746DAC((uint64_t)v31, (uint64_t)(a2 + 11));
            sub_2157ECDCC();
          }
LABEL_13:
          long long v24 = a2[8];
          char v25 = 1;
          goto LABEL_14;
        }
LABEL_12:
        LOBYTE(v24) = 0;
        char v25 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
LABEL_11:
      LOBYTE(v21) = 0;
      char v23 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_22;
      }
      goto LABEL_12;
    }
  }
  mach_timebase_info info = v3;
  char v17 = v4;
  LOBYTE(v18) = 0;
  char v20 = 0;
  goto LABEL_11;
}

void sub_2157EC578(_Unwind_Exception *a1)
{
}

void sub_2157EC590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2157EC648(_DWORD ***a1)
{
  return sub_2157EC664(**a1, (char *)(*a1)[1]);
}

void sub_2157EC654(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157EC664(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65A5E0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157EC758(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  mach_timebase_info v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65A5E0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157EC910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157EC954(uint64_t a1, uint64_t a2)
{
  mach_timebase_info v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157ECA50((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157ECA48(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157ECA50(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  long long v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157ECC50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ECC64()
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v0 = mach_continuous_time();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v1) = info.numer;
      LODWORD(v2) = info.denom;
      *(double *)&qword_267890880 = (double)v1 / (double)v2;
      __cxa_guard_release(&qword_267890888);
    }
  }
  unint64_t v4 = llround(*(double *)&qword_267890880 * (double)v0);
  uint64_t v5 = 2;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v10 = 0;
  char v11 = 0;
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  char v15 = 0;
  sub_2157ECDCC();
}

void sub_2157ECD9C(_Unwind_Exception *a1)
{
}

void sub_2157ECDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2157C6F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ECDCC()
{
}

void sub_2157ECEC0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157ECEF4(_Unwind_Exception *a1)
{
  unint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

void *sub_2157ECF60(void *a1)
{
  *a1 = &unk_26C65AAD0;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157ECFFC(void *a1)
{
  *a1 = &unk_26C65AAD0;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157ED0A8(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157ED0B0(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65AA90, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = result;
      char v6 = (unsigned __int8 *)a1[1];
      int v7 = *v6;
      char v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_215D17264(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_2157ED184()
{
}

void sub_2157ED220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157ED23C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885860, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885860))
  {
    uint64_t v0 = sub_2157EE13C();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      uint64_t v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267885848, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267885858 = *(void *)(v5 - 8);
      xmmword_267885848 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885848, &dword_21572C000);
    __cxa_guard_release(&qword_267885860);
  }
  sub_2157EE908(&xmmword_267885848, (uint64_t)"{");
}

void sub_2157ED358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2157ED378(_Unwind_Exception *a1)
{
}

void sub_2157ED390(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 12;
}

void sub_2157ED3BC(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_2157ED40C(void *a1)
{
  *a1 = &unk_26C65AAD0;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157ED4A8(void *a1)
{
  *a1 = &unk_26C65AAD0;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157ED554()
{
  uint64_t v0 = sub_2157EDB90();
  sub_2157ED6B0(v0, (uint64_t)"{");
}

void sub_2157ED5B0()
{
  int v0 = 0;
  sub_2157ED8E0();
}

void sub_2157ED64C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C65A5E0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157ED684(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2157ED6B0(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157ED8E0();
}

void sub_2157ED850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ED868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ED87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ED890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ED8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ED8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ED8CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157ED8E0()
{
}

void sub_2157EDB28(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157EDB4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_2157EDB90()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678856E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678856E0))
  {
    return &xmmword_2678856C8;
  }
  uint64_t v1 = sub_2157EDC78();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678856C8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678856D8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678856C8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678856C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678856E0);
  return &xmmword_2678856C8;
}

void sub_2157EDC60(_Unwind_Exception *a1)
{
}

std::string *sub_2157EDC78()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885700, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885700))
  {
    return &stru_2678856E8;
  }
  sub_2157EDF2C((uint64_t)__p);
  sub_2157EDD74(__p, &stru_2678856E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678856E8, &dword_21572C000);
  __cxa_guard_release(&qword_267885700);
  return &stru_2678856E8;
}

void sub_2157EDD34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885700);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885700);
  _Unwind_Resume(a1);
}

void sub_2157EDD74(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157EE13C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  char v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  char v10 = (void **)__p;
  if (__p)
  {
    char v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    char v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2157EDEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157EDF2C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678857C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678857C0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Lines<2>>]", qword_2678857A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678857A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678857C0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678857E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678857E0))
  {
    size_t v3 = sub_215747D98(qword_2678857A8, "<", 0);
    sub_215747C90(qword_2678857A8, 0, v3, qword_2678857C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678857C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678857E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885800, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885800))
  {
    sub_215E19DF4((uint64_t)qword_2678857C8, (uint64_t)&xmmword_2678857E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678857E8, &dword_21572C000);
    __cxa_guard_release(&qword_267885800);
  }
  if (byte_2678857FF < 0)
  {
    long long v2 = xmmword_2678857E8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678857E8;
    *(void *)(a1 + 16) = unk_2678857F8;
  }
}

void sub_2157EE0F4(_Unwind_Exception *a1)
{
}

void sub_2157EE10C(_Unwind_Exception *a1)
{
}

void sub_2157EE124(_Unwind_Exception *a1)
{
}

long long *sub_2157EE13C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885720, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885720))
  {
    return &xmmword_267885708;
  }
  uint64_t v1 = sub_2157EE224();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267885708, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267885718 = v1->__r_.__value_.__r.__words[2];
    xmmword_267885708 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885708, &dword_21572C000);
  __cxa_guard_release(&qword_267885720);
  return &xmmword_267885708;
}

void sub_2157EE20C(_Unwind_Exception *a1)
{
}

std::string *sub_2157EE224()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885740, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885740))
  {
    return &stru_267885728;
  }
  sub_2157EE320((uint64_t)__p);
  sub_2157E7638(__p, &stru_267885728);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885728, &dword_21572C000);
  __cxa_guard_release(&qword_267885740);
  return &stru_267885728;
}

void sub_2157EE2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885740);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885740);
  _Unwind_Resume(a1);
}

void sub_2157EE320(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885760, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885760))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Lines<2>]", qword_267885748);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885748, &dword_21572C000);
    __cxa_guard_release(&qword_267885760);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885780, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885780))
  {
    size_t v3 = sub_215747D98(qword_267885748, "<", 0);
    sub_215747C90(qword_267885748, 0, v3, qword_267885768);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885768, &dword_21572C000);
    __cxa_guard_release(&qword_267885780);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678857A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678857A0))
  {
    sub_215E19DF4((uint64_t)qword_267885768, (uint64_t)&xmmword_267885788);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885788, &dword_21572C000);
    __cxa_guard_release(&qword_2678857A0);
  }
  if (byte_26788579F < 0)
  {
    long long v2 = xmmword_267885788;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885788;
    *(void *)(a1 + 16) = unk_267885798;
  }
}

void sub_2157EE4E8(_Unwind_Exception *a1)
{
}

void sub_2157EE500(_Unwind_Exception *a1)
{
}

void sub_2157EE518(_Unwind_Exception *a1)
{
}

std::string *sub_2157EE530()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885820, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885820))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2157EE13C();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_2157EE804();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_267885808, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885808, &dword_21572C000);
        __cxa_guard_release(&qword_267885820);
        return &stru_267885808;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_267885808;
}

void sub_2157EE720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_267885820);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_267885820);
  _Unwind_Resume(a1);
}

std::string *sub_2157EE804()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885840, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885840))
  {
    return &stru_267885828;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 12U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885828);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885828, &dword_21572C000);
  __cxa_guard_release(&qword_267885840);
  return &stru_267885828;
}

void sub_2157EE8C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885840);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885840);
  _Unwind_Resume(a1);
}

void sub_2157EE908(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157ED8E0();
}

void sub_2157EEA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EEA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EEA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EEA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EEAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

_OWORD *sub_2157EEAB4(_OWORD *a1, uint64_t *a2)
{
  sub_2157E80EC(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EEB50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EEBA4(_OWORD *a1, uint64_t *a2)
{
  sub_2157E82AC(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EEC40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EEC94(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8454(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EED30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EED84(_OWORD *a1, size_t *a2)
{
  sub_2157E85FC(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EEE20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EEE74(_OWORD *a1, uint64_t *a2)
{
  sub_2157E87A0(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EEF10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EEF64(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8948(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EF000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EF054(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8AF0(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EF0F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EF144(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8C98(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EF1E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EF234(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8E40(a2, &v6);
  long long v5 = v6;
  sub_215D0E078((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EF2D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157EF324(_OWORD *a1, size_t *a2)
{
  sub_2157E5EC8(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157EF3C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157EF414(uint64_t a1, long long *a2)
{
  v31[5] = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384)) {
    sub_2157EF838();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v14) = info.numer;
      LODWORD(v15) = info.denom;
      *(double *)&qword_267890880 = (double)v14 / (double)v15;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      char v17 = v4;
      LOBYTE(v18) = 0;
      char v20 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v18, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v18 = *a2;
          uint64_t v19 = *((void *)a2 + 2);
        }
        char v20 = 1;
        LOBYTE(v21) = 0;
        char v23 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_22:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v21, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v21 = a2[6];
            uint64_t v22 = *((void *)a2 + 14);
          }
          char v23 = 1;
          LOBYTE(v24) = 0;
          char v25 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_14:
            LOBYTE(v26) = 0;
            char v30 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v26, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v26 = a2[2];
                uint64_t v27 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v28 = _X0;
              uint64_t v29 = 0;
              char v30 = 1;
            }
            sub_215746DAC((uint64_t)v31, (uint64_t)(a2 + 11));
            sub_2157EF9A0();
          }
LABEL_13:
          long long v24 = a2[8];
          char v25 = 1;
          goto LABEL_14;
        }
LABEL_12:
        LOBYTE(v24) = 0;
        char v25 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
LABEL_11:
      LOBYTE(v21) = 0;
      char v23 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_22;
      }
      goto LABEL_12;
    }
  }
  mach_timebase_info info = v3;
  char v17 = v4;
  LOBYTE(v18) = 0;
  char v20 = 0;
  goto LABEL_11;
}

void sub_2157EF768(_Unwind_Exception *a1)
{
}

void sub_2157EF780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157EF838()
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v0 = mach_continuous_time();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v1) = info.numer;
      LODWORD(v2) = info.denom;
      *(double *)&qword_267890880 = (double)v1 / (double)v2;
      __cxa_guard_release(&qword_267890888);
    }
  }
  unint64_t v4 = llround(*(double *)&qword_267890880 * (double)v0);
  uint64_t v5 = 2;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v10 = 0;
  char v11 = 0;
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  char v15 = 0;
  sub_2157EF9A0();
}

void sub_2157EF970(_Unwind_Exception *a1)
{
}

void sub_2157EF988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2157C6F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157EF9A0()
{
}

void sub_2157EFA94(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157EFAC8(_Unwind_Exception *a1)
{
  mach_timebase_info v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

void *sub_2157EFB34(void *a1)
{
  *a1 = &unk_26C65ABA0;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157EFBD0(void *a1)
{
  *a1 = &unk_26C65ABA0;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157EFC7C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157EFC84(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65AB60, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = result;
      char v6 = (unsigned __int8 *)a1[1];
      int v7 = *v6;
      char v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_215D17264(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_2157EFD58()
{
}

void sub_2157EFDF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157EFE10()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885A00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885A00))
  {
    uint64_t v0 = sub_2157F0D10();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      uint64_t v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_2678859E8, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_2678859F8 = *(void *)(v5 - 8);
      xmmword_2678859E8 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678859E8, &dword_21572C000);
    __cxa_guard_release(&qword_267885A00);
  }
  sub_2157F14DC(&xmmword_2678859E8, (uint64_t)"{");
}

void sub_2157EFF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2157EFF4C(_Unwind_Exception *a1)
{
}

void sub_2157EFF64(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 13;
}

void sub_2157EFF90(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_2157EFFE0(void *a1)
{
  *a1 = &unk_26C65ABA0;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157F007C(void *a1)
{
  *a1 = &unk_26C65ABA0;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157F0128()
{
  uint64_t v0 = sub_2157F0764();
  sub_2157F0284(v0, (uint64_t)"{");
}

void sub_2157F0184()
{
  int v0 = 0;
  sub_2157F04B4();
}

void sub_2157F0220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C65A5E0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157F0258(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2157F0284(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157F04B4();
}

void sub_2157F0424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F043C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F0450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F0464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F0478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F048C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F04A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F04B4()
{
}

void sub_2157F06FC(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157F0720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_2157F0764()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885880, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885880))
  {
    return &xmmword_267885868;
  }
  uint64_t v1 = sub_2157F084C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267885868, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267885878 = v1->__r_.__value_.__r.__words[2];
    xmmword_267885868 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885868, &dword_21572C000);
  __cxa_guard_release(&qword_267885880);
  return &xmmword_267885868;
}

void sub_2157F0834(_Unwind_Exception *a1)
{
}

std::string *sub_2157F084C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678858A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678858A0))
  {
    return &stru_267885888;
  }
  sub_2157F0B00((uint64_t)__p);
  sub_2157F0948(__p, &stru_267885888);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885888, &dword_21572C000);
  __cxa_guard_release(&qword_2678858A0);
  return &stru_267885888;
}

void sub_2157F0908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678858A0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678858A0);
  _Unwind_Resume(a1);
}

void sub_2157F0948(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157F0D10();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  char v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  char v10 = (void **)__p;
  if (__p)
  {
    char v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    char v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2157F0AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157F0B00(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885960, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885960))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Lines<3>>]", qword_267885948);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885948, &dword_21572C000);
    __cxa_guard_release(&qword_267885960);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885980, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885980))
  {
    size_t v3 = sub_215747D98(qword_267885948, "<", 0);
    sub_215747C90(qword_267885948, 0, v3, qword_267885968);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885968, &dword_21572C000);
    __cxa_guard_release(&qword_267885980);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678859A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678859A0))
  {
    sub_215E19DF4((uint64_t)qword_267885968, (uint64_t)&xmmword_267885988);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885988, &dword_21572C000);
    __cxa_guard_release(&qword_2678859A0);
  }
  if (byte_26788599F < 0)
  {
    long long v2 = xmmword_267885988;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885988;
    *(void *)(a1 + 16) = unk_267885998;
  }
}

void sub_2157F0CC8(_Unwind_Exception *a1)
{
}

void sub_2157F0CE0(_Unwind_Exception *a1)
{
}

void sub_2157F0CF8(_Unwind_Exception *a1)
{
}

long long *sub_2157F0D10()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678858C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678858C0))
  {
    return &xmmword_2678858A8;
  }
  uint64_t v1 = sub_2157F0DF8();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678858A8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678858B8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678858A8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678858A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678858C0);
  return &xmmword_2678858A8;
}

void sub_2157F0DE0(_Unwind_Exception *a1)
{
}

std::string *sub_2157F0DF8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678858E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678858E0))
  {
    return &stru_2678858C8;
  }
  sub_2157F0EF4((uint64_t)__p);
  sub_2157EAAC8(__p, &stru_2678858C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678858C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678858E0);
  return &stru_2678858C8;
}

void sub_2157F0EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678858E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678858E0);
  _Unwind_Resume(a1);
}

void sub_2157F0EF4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885900, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885900))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Lines<3>]", qword_2678858E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678858E8, &dword_21572C000);
    __cxa_guard_release(&qword_267885900);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885920, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885920))
  {
    size_t v3 = sub_215747D98(qword_2678858E8, "<", 0);
    sub_215747C90(qword_2678858E8, 0, v3, qword_267885908);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885908, &dword_21572C000);
    __cxa_guard_release(&qword_267885920);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885940, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885940))
  {
    sub_215E19DF4((uint64_t)qword_267885908, (uint64_t)&xmmword_267885928);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885928, &dword_21572C000);
    __cxa_guard_release(&qword_267885940);
  }
  if (byte_26788593F < 0)
  {
    long long v2 = xmmword_267885928;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885928;
    *(void *)(a1 + 16) = unk_267885938;
  }
}

void sub_2157F10BC(_Unwind_Exception *a1)
{
}

void sub_2157F10D4(_Unwind_Exception *a1)
{
}

void sub_2157F10EC(_Unwind_Exception *a1)
{
}

std::string *sub_2157F1104()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678859C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678859C0))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2157F0D10();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_2157F13D8();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_2678859A8, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678859A8, &dword_21572C000);
        __cxa_guard_release(&qword_2678859C0);
        return &stru_2678859A8;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_2678859A8;
}

void sub_2157F12F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_2678859C0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_2678859C0);
  _Unwind_Resume(a1);
}

std::string *sub_2157F13D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678859E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678859E0))
  {
    return &stru_2678859C8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 13U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678859C8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678859C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678859E0);
  return &stru_2678859C8;
}

void sub_2157F149C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_2678859E0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_2678859E0);
  _Unwind_Resume(a1);
}

void sub_2157F14DC(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157F04B4();
}

void sub_2157F1620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F1638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F164C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F1660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F1674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

_OWORD *sub_2157F1688(_OWORD *a1, uint64_t *a2)
{
  sub_2157E80EC(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F1724(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157F1778(_OWORD *a1, uint64_t *a2)
{
  sub_2157E82AC(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F1814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157F1868(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8454(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F1904(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157F1958(_OWORD *a1, size_t *a2)
{
  sub_2157E85FC(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F19F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157F1A48(_OWORD *a1, uint64_t *a2)
{
  sub_2157E87A0(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F1AE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157F1B38(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8948(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F1BD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157F1C28(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8AF0(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F1CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157F1D18(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8C98(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F1DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_OWORD *sub_2157F1E08(_OWORD *a1, uint64_t *a2)
{
  sub_2157E8E40(a2, &v6);
  long long v5 = v6;
  sub_215D0E150((uint64_t)&v6, (uint64_t)&v5);
  size_t v3 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v6;
  return a1;
}

void sub_2157F1EA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10)
  {
    if (!atomic_fetch_add(&a10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_2157F1EF8(uint64_t a1, unint64_t *a2)
{
  int v4 = 0;
  sub_2157E4058(v3, "Invalid CFData size ");
  std::to_string(&v5, *a2);
  uint64_t v7 = v3;
  int64x2_t v8 = &v5;
  char v9 = v3;
  char v10 = &v5;
  uint64_t v11 = &v5;
  if (v4 != -1)
  {
    long long v6 = &v7;
    ((void (*)(_DWORD ***, _DWORD *))off_26C65A610[v4])(&v6, v3);
    if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v5.__r_.__value_.__l.__data_);
    }
    uint64_t v7 = v3;
    int64x2_t v8 = (std::string *)" for specified value type ";
    char v9 = v3;
    char v10 = (std::string *)" for specified value type ";
    uint64_t v11 = (std::string *)" for specified value type ";
    if (v4 != -1)
    {
      v5.__r_.__value_.__r.__words[0] = (std::string::size_type)&v7;
      ((void (*)(std::string *, _DWORD *))off_26C65A628[v4])(&v5, v3);
      sub_2157E3DE8();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_2157F2164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

void sub_2157F21BC(uint64_t a1, long long *a2)
{
  v31[5] = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384)) {
    sub_2157F2BFC();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v14) = info.numer;
      LODWORD(v15) = info.denom;
      *(double *)&qword_267890880 = (double)v14 / (double)v15;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      char v17 = v4;
      LOBYTE(v18) = 0;
      char v20 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v18, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v18 = *a2;
          uint64_t v19 = *((void *)a2 + 2);
        }
        char v20 = 1;
        LOBYTE(v21) = 0;
        char v23 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_22:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v21, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v21 = a2[6];
            uint64_t v22 = *((void *)a2 + 14);
          }
          char v23 = 1;
          LOBYTE(v24) = 0;
          char v25 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_14:
            LOBYTE(v26) = 0;
            char v30 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v26, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v26 = a2[2];
                uint64_t v27 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v28 = _X0;
              uint64_t v29 = 0;
              char v30 = 1;
            }
            sub_215746DAC((uint64_t)v31, (uint64_t)(a2 + 11));
            sub_2157F2D64();
          }
LABEL_13:
          long long v24 = a2[8];
          char v25 = 1;
          goto LABEL_14;
        }
LABEL_12:
        LOBYTE(v24) = 0;
        char v25 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
LABEL_11:
      LOBYTE(v21) = 0;
      char v23 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_22;
      }
      goto LABEL_12;
    }
  }
  mach_timebase_info info = v3;
  char v17 = v4;
  LOBYTE(v18) = 0;
  char v20 = 0;
  goto LABEL_11;
}

void sub_2157F2510(_Unwind_Exception *a1)
{
}

void sub_2157F2528(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_2157F25E0(_DWORD ***a1)
{
  return sub_2157F25FC(**a1, (char *)(*a1)[1]);
}

void sub_2157F25EC(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157F25FC(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65A5E0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157F26F0(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  mach_timebase_info v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65A5E0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157F28A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157F28EC(uint64_t a1, uint64_t a2)
{
  mach_timebase_info v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_2157F29E8((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157F29E0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157F29E8(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  long long v21 = v8;
  uint64_t v22 = v8;
  char v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      uint64_t v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  uint64_t v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157F2BE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F2BFC()
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  uint64_t v0 = mach_continuous_time();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v1) = info.numer;
      LODWORD(v2) = info.denom;
      *(double *)&qword_267890880 = (double)v1 / (double)v2;
      __cxa_guard_release(&qword_267890888);
    }
  }
  unint64_t v4 = llround(*(double *)&qword_267890880 * (double)v0);
  uint64_t v5 = 2;
  char v6 = 0;
  char v7 = 0;
  char v8 = 0;
  char v9 = 0;
  char v10 = 0;
  char v11 = 0;
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  char v15 = 0;
  sub_2157F2D64();
}

void sub_2157F2D34(_Unwind_Exception *a1)
{
}

void sub_2157F2D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_2157C6F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F2D64()
{
}

void sub_2157F2E58(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157F2E8C(_Unwind_Exception *a1)
{
  unint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

void *sub_2157F2EF8(void *a1)
{
  *a1 = &unk_26C65A860;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157F2F94(void *a1)
{
  *a1 = &unk_26C65A860;
  sub_2157C6F18((uint64_t)(a1 + 4));
  unint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157F3040(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157F3048(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A820, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = result;
      char v6 = (unsigned __int8 *)a1[1];
      int v7 = *v6;
      char v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_215D17264(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_2157F311C()
{
}

void sub_2157F31B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157F31D4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885380, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885380))
  {
    uint64_t v0 = sub_2157F4078();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      uint64_t v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267885368, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267885378 = *(void *)(v5 - 8);
      xmmword_267885368 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885368, &dword_21572C000);
    __cxa_guard_release(&qword_267885380);
  }
  sub_2157F4568(&xmmword_267885368, (uint64_t)"{");
}

void sub_2157F32F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2157F3310(_Unwind_Exception *a1)
{
}

void sub_2157F3328(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 2;
}

void sub_2157F3354(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_2157F33A4(void *a1)
{
  *a1 = &unk_26C65A860;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2157F3440(void *a1)
{
  *a1 = &unk_26C65A860;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157F34EC()
{
  uint64_t v0 = sub_2157F3ACC();
  sub_2157F3648(v0, (uint64_t)"{");
}

void sub_2157F3548()
{
  int v0 = 0;
  sub_2157F3878();
}

void sub_2157F35E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C65A5E0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157F361C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2157F3648(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157F3878();
}

void sub_2157F37E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F3800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F3814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F3828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F383C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F3850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F3864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F3878()
{
}

void sub_2157F3A64(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157F3A88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_2157F3ACC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885240, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885240))
  {
    return &xmmword_267885228;
  }
  uint64_t v1 = sub_2157F3BB4();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267885228, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267885238 = v1->__r_.__value_.__r.__words[2];
    xmmword_267885228 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885228, &dword_21572C000);
  __cxa_guard_release(&qword_267885240);
  return &xmmword_267885228;
}

void sub_2157F3B9C(_Unwind_Exception *a1)
{
}

std::string *sub_2157F3BB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885260, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885260))
  {
    return &stru_267885248;
  }
  sub_2157F3E68((uint64_t)__p);
  sub_2157F3CB0(__p, &stru_267885248);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885248, &dword_21572C000);
  __cxa_guard_release(&qword_267885260);
  return &stru_267885248;
}

void sub_2157F3C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885260);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885260);
  _Unwind_Resume(a1);
}

void sub_2157F3CB0(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157F4078();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  char v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  char v10 = (void **)__p;
  if (__p)
  {
    char v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    char v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2157F3E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157F3E68(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678852E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678852E0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Numbers>]", qword_2678852C8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678852C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678852E0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885300, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885300))
  {
    size_t v3 = sub_215747D98(qword_2678852C8, "<", 0);
    sub_215747C90(qword_2678852C8, 0, v3, qword_2678852E8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_2678852E8, &dword_21572C000);
    __cxa_guard_release(&qword_267885300);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885320, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885320))
  {
    sub_215E19DF4((uint64_t)qword_2678852E8, (uint64_t)&xmmword_267885308);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885308, &dword_21572C000);
    __cxa_guard_release(&qword_267885320);
  }
  if (byte_26788531F < 0)
  {
    long long v2 = xmmword_267885308;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885308;
    *(void *)(a1 + 16) = unk_267885318;
  }
}

void sub_2157F4030(_Unwind_Exception *a1)
{
}

void sub_2157F4048(_Unwind_Exception *a1)
{
}

void sub_2157F4060(_Unwind_Exception *a1)
{
}

long long *sub_2157F4078()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885280, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885280))
  {
    return &xmmword_267885268;
  }
  uint64_t v1 = (char *)sub_2157F4160();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267885268, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267885278 = *((void *)v1 + 2);
    xmmword_267885268 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885268, &dword_21572C000);
  __cxa_guard_release(&qword_267885280);
  return &xmmword_267885268;
}

void sub_2157F4148(_Unwind_Exception *a1)
{
}

void *sub_2157F4160()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678852A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678852A0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Numbers]", qword_267885288);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885288, &dword_21572C000);
    __cxa_guard_release(&qword_2678852A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678852C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678852C0))
  {
    return &unk_2678852A8;
  }
  sub_215E19DF4((uint64_t)qword_267885288, (uint64_t)&unk_2678852A8);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_2678852A8, &dword_21572C000);
  __cxa_guard_release(&qword_2678852C0);
  return &unk_2678852A8;
}

void sub_2157F4264(_Unwind_Exception *a1)
{
}

void sub_2157F427C(_Unwind_Exception *a1)
{
}

std::string *sub_2157F4294()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885340, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885340))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2157F4078();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_2157E7974();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_267885328, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885328, &dword_21572C000);
        __cxa_guard_release(&qword_267885340);
        return &stru_267885328;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_267885328;
}

void sub_2157F4484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_267885340);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_267885340);
  _Unwind_Resume(a1);
}

void sub_2157F4568(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157F3878();
}

void sub_2157F46AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F46C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F46D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F46EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F4700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F4714()
{
}

void sub_2157F4850(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  sub_2157F48C0((void **)va);
  _Unwind_Resume(a1);
}

void sub_2157F488C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215733368((uint64_t)va);
  MEMORY[0x2166C4D20](v3, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

void **sub_2157F48C0(void **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *uint64_t v2 = &unk_26C65FA88;
    sub_2157C6F18((uint64_t)(v2 + 4));
    uint64_t v3 = (std::__shared_weak_count *)v2[2];
    if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
    MEMORY[0x2166C4D20](v2, 0x10B3C40E92279A6);
  }
  return a1;
}

void sub_2157F497C()
{
}

void sub_2157F4A84(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_2157F4AB8(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  if (v3)
  {
    *(void *)(v1 + 24) = v3;
    operator delete(v3);
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C402343F4F0);
  _Unwind_Resume(a1);
}

void *sub_2157F4AEC(void *a1)
{
  *a1 = &unk_26C65A790;
  sub_2157C6F18((uint64_t)(a1 + 6));
  uint64_t v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_2157F4B40(void *a1)
{
  *a1 = &unk_26C65A790;
  sub_2157C6F18((uint64_t)(a1 + 6));
  uint64_t v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157F4BB4(uint64_t a1)
{
  return a1 + 48;
}

unint64_t sub_2157F4BBC(unsigned __int8 *a1, unsigned __int8 *lpsrc)
{
  unint64_t result = (unint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65A750, 0);
  if (result) {
    return a1 == lpsrc || sub_215E0AEDC(a1 + 8, (unsigned char *)(result + 8)) == 0;
  }
  return result;
}

void sub_2157F4C58()
{
}

void sub_2157F4CF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157F4D10()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885220, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885220))
  {
    int v0 = sub_2157F5B30();
    uint64_t v1 = *((void *)v0 + 1);
    if (*((char *)v0 + 23) >= 0)
    {
      uint64_t v2 = *((unsigned __int8 *)v0 + 23);
    }
    else
    {
      int v0 = *(long long **)v0;
      uint64_t v2 = v1;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267885208, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267885218 = *(void *)(v5 - 8);
      xmmword_267885208 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885208, &dword_21572C000);
    __cxa_guard_release(&qword_267885220);
  }
  sub_2157F6124(&xmmword_267885208, (uint64_t)"{");
}

void sub_2157F4E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2157F4E4C(_Unwind_Exception *a1)
{
}

void sub_2157F4E64(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 8;
}

void sub_2157F4E8C(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_2157F4EDC(void *a1)
{
  *a1 = &unk_26C65A790;
  sub_2157C6F18((uint64_t)(a1 + 6));
  uint64_t v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_2157F4F30(void *a1)
{
  *a1 = &unk_26C65A790;
  sub_2157C6F18((uint64_t)(a1 + 6));
  uint64_t v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_2157F4FA4()
{
  int v0 = sub_2157F5584();
  sub_2157F5100(v0, (uint64_t)"{");
}

void sub_2157F5000()
{
  int v0 = 0;
  sub_2157F5330();
}

void sub_2157F509C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C65A5E0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157F50D4(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2157F5100(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157F5330();
}

void sub_2157F52A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F52B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F52CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F52E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F52F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F5308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F531C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F5330()
{
}

void sub_2157F551C(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157F5540(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_2157F5584()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678850E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_2678850E0))
  {
    return &xmmword_2678850C8;
  }
  uint64_t v1 = sub_2157F566C();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678850C8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678850D8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678850C8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678850C8, &dword_21572C000);
  __cxa_guard_release(&qword_2678850E0);
  return &xmmword_2678850C8;
}

void sub_2157F5654(_Unwind_Exception *a1)
{
}

std::string *sub_2157F566C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885100, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885100))
  {
    return &stru_2678850E8;
  }
  sub_2157F5920((uint64_t)__p);
  sub_2157F5768(__p, &stru_2678850E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678850E8, &dword_21572C000);
  __cxa_guard_release(&qword_267885100);
  return &stru_2678850E8;
}

void sub_2157F5728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885100);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885100);
  _Unwind_Resume(a1);
}

void sub_2157F5768(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2157F5B30();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  int8x16_t v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  char v10 = (void **)__p;
  if (__p)
  {
    uint64_t v11 = v14;
    char v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      char v12 = __p;
    }
    long long v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2157F58D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_2157F5920(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885180, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885180))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::Number>]", qword_267885168);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885168, &dword_21572C000);
    __cxa_guard_release(&qword_267885180);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678851A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678851A0))
  {
    size_t v3 = sub_215747D98(qword_267885168, "<", 0);
    sub_215747C90(qword_267885168, 0, v3, qword_267885188);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885188, &dword_21572C000);
    __cxa_guard_release(&qword_2678851A0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678851C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678851C0))
  {
    sub_215E19DF4((uint64_t)qword_267885188, (uint64_t)&xmmword_2678851A8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678851A8, &dword_21572C000);
    __cxa_guard_release(&qword_2678851C0);
  }
  if (byte_2678851BF < 0)
  {
    long long v2 = xmmword_2678851A8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_2678851A8;
    *(void *)(a1 + 16) = unk_2678851B8;
  }
}

void sub_2157F5AE8(_Unwind_Exception *a1)
{
}

void sub_2157F5B00(_Unwind_Exception *a1)
{
}

void sub_2157F5B18(_Unwind_Exception *a1)
{
}

long long *sub_2157F5B30()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885120, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885120))
  {
    return &xmmword_267885108;
  }
  uint64_t v1 = (char *)sub_2157F5C18();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267885108, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267885118 = *((void *)v1 + 2);
    xmmword_267885108 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885108, &dword_21572C000);
  __cxa_guard_release(&qword_267885120);
  return &xmmword_267885108;
}

void sub_2157F5C00(_Unwind_Exception *a1)
{
}

void *sub_2157F5C18()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885140, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885140))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::Number]", qword_267885128);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885128, &dword_21572C000);
    __cxa_guard_release(&qword_267885140);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885160, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885160))
  {
    return &unk_267885148;
  }
  sub_215E19DF4((uint64_t)qword_267885128, (uint64_t)&unk_267885148);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267885148, &dword_21572C000);
  __cxa_guard_release(&qword_267885160);
  return &unk_267885148;
}

void sub_2157F5D1C(_Unwind_Exception *a1)
{
}

void sub_2157F5D34(_Unwind_Exception *a1)
{
}

std::string *sub_2157F5D4C()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678851E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678851E0))
  {
    sub_215732BF4(v8, "viz::PackageData");
    uint64_t v1 = sub_2157F5B30();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      uint64_t v11 = *((void *)v1 + 2);
      *(_OWORD *)long long __dst = v2;
    }
    *(_OWORD *)char v12 = *(_OWORD *)"viz::Package";
    uint64_t v13 = 0xC00000000000000;
    size_t v3 = sub_2157F6020();
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_215738B0C(&v14, v3->__r_.__value_.__l.__data_, v3->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
      std::string::size_type v15 = v3->__r_.__value_.__r.__words[2];
      long long v14 = v4;
    }
    *(_OWORD *)long long __p = *(_OWORD *)"void";
    uint64_t v17 = 0x400000000000000;
    sub_21573A150(v7, (uint64_t)__dst, 4uLL);
    sub_215E19EAC(v8, (uint64_t *)v7, &stru_2678851C8, v5, v6);
    sub_2157352DC(v7);
    if (SHIBYTE(v17) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v15) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v13) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v15) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v14);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12[0]);
    if ((SHIBYTE(v11) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v9 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678851C8, &dword_21572C000);
        __cxa_guard_release(&qword_2678851E0);
        return &stru_2678851C8;
      }
LABEL_20:
      operator delete(v8[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  return &stru_2678851C8;
}

void sub_2157F5F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_2678851E0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_2678851E0);
  _Unwind_Resume(a1);
}

std::string *sub_2157F6020()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885200, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885200))
  {
    return &stru_2678851E8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 8U]", __p);
  sub_215E1A038((uint64_t)__p, &stru_2678851E8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_2678851E8, &dword_21572C000);
  __cxa_guard_release(&qword_267885200);
  return &stru_2678851E8;
}

void sub_2157F60E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885200);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885200);
  _Unwind_Resume(a1);
}

void sub_2157F6124(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_2157F5330();
}

void sub_2157F6268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F6280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F6294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F62A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F62BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157F62D0()
{
  qword_26788E138 = 0;
  qword_26788E140 = 0;
  qword_26788E148 = 0;
  uint64_t v0 = sub_215E0CF48();
  if (v0)
  {
    char v2 = v1;
    size_t v3 = &v1[v0];
    do
    {
      int v5 = *v2;
      uint64_t v6 = sub_2157FC978(*v2);
      if ((v6 & 0xFF00000000) != 0)
      {
        int v7 = 1647392256;
        int v8 = 103;
        switch((int)v6)
        {
          case 1:
            if (v5 == 1278226488)
            {
              uint64_t v9 = 0;
LABEL_53:
              char v10 = (char *)&v30[v9];
              goto LABEL_54;
            }
            break;
          case 2:
            goto LABEL_37;
          case 3:
            if (v5 == 1278226536) {
              goto LABEL_38;
            }
            break;
          case 4:
            if (v5 == 1278226534) {
              goto LABEL_38;
            }
            break;
          case 5:
            if (v5 == 843264056) {
              goto LABEL_38;
            }
            break;
          case 7:
            if (v5 == 843264104) {
              goto LABEL_38;
            }
            break;
          case 8:
            if (v5 == 843264102) {
              goto LABEL_38;
            }
            break;
          case 17:
            if (v5 == 842285639) {
              goto LABEL_38;
            }
            break;
          case 21:
            int v7 = 0;
            int v8 = 24;
LABEL_37:
            if (v5 == (v7 | v8)) {
              goto LABEL_38;
            }
            break;
          case 22:
            if (v5 == 1647589490) {
              goto LABEL_38;
            }
            break;
          case 25:
            if (v5 == 1111970369) {
              goto LABEL_38;
            }
            break;
          case 29:
            if (v5 == 1380401729) {
              goto LABEL_38;
            }
            break;
          case 31:
            if (v5 == 1380411457) {
              goto LABEL_38;
            }
            break;
          case 32:
            if (v5 == 1380410945) {
              goto LABEL_38;
            }
            break;
          case 33:
            if (v5 == 1094862674) {
              goto LABEL_38;
            }
            break;
          case 37:
            if (v5 == 32) {
              goto LABEL_38;
            }
            break;
          case 38:
            if (v5 != 1647719521) {
              break;
            }
LABEL_38:
            uint64_t v9 = 1;
            char v10 = (char *)&v31;
            switch((int)v6)
            {
              case 2:
                goto LABEL_53;
              case 3:
                uint64_t v9 = 2;
                goto LABEL_53;
              case 4:
                uint64_t v9 = 3;
                goto LABEL_53;
              case 5:
                uint64_t v9 = 4;
                goto LABEL_53;
              case 7:
                uint64_t v9 = 5;
                goto LABEL_53;
              case 8:
                uint64_t v9 = 6;
                goto LABEL_53;
              case 21:
                uint64_t v9 = 7;
                goto LABEL_53;
              case 22:
                uint64_t v9 = 8;
                goto LABEL_53;
              case 25:
                uint64_t v9 = 9;
                goto LABEL_53;
              case 31:
                uint64_t v9 = 10;
                goto LABEL_53;
              case 32:
                uint64_t v9 = 11;
                goto LABEL_53;
              case 37:
                uint64_t v9 = 12;
                goto LABEL_53;
              case 38:
                uint64_t v9 = 13;
                goto LABEL_53;
              default:
                break;
            }
LABEL_54:
            if (v10 - (char *)v30 == 56) {
              break;
            }
            uint64_t v11 = qword_26788E140;
            if (qword_26788E140 < (unint64_t)qword_26788E148)
            {
              *(_DWORD *)qword_26788E140 = v5;
              uint64_t v4 = v11 + 4;
              goto LABEL_4;
            }
            char v12 = (void *)qword_26788E138;
            uint64_t v13 = qword_26788E140 - qword_26788E138;
            uint64_t v14 = (qword_26788E140 - qword_26788E138) >> 2;
            unint64_t v15 = v14 + 1;
            if ((unint64_t)(v14 + 1) >> 62) {
              sub_215738AC0();
            }
            uint64_t v16 = qword_26788E148 - qword_26788E138;
            if ((qword_26788E148 - qword_26788E138) >> 1 > v15) {
              unint64_t v15 = v16 >> 1;
            }
            if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v17 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v17 = v15;
            }
            if (!v17)
            {
              uint64_t v18 = 0;
              uint64_t v19 = (int *)(4 * v14);
              *(_DWORD *)(4 * v14) = v5;
              uint64_t v4 = 4 * v14 + 4;
              uint64_t v20 = v11 - (void)v12;
              if ((void *)v11 == v12) {
                goto LABEL_73;
              }
LABEL_67:
              unint64_t v21 = v20 - 4;
              if (v21 < 0x2C) {
                goto LABEL_80;
              }
              if ((unint64_t)(v11 - (void)v18 - v13) < 0x20) {
                goto LABEL_80;
              }
              uint64_t v22 = (v21 >> 2) + 1;
              uint64_t v23 = 4 * (v22 & 0x7FFFFFFFFFFFFFF8);
              uint64_t v24 = v11 - v23;
              uint64_t v19 = (int *)((char *)v19 - v23);
              char v25 = &v18[4 * v14 - 16];
              long long v26 = (long long *)(v11 - 16);
              uint64_t v27 = v22 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                long long v28 = *v26;
                *((_OWORD *)v25 - 1) = *(v26 - 1);
                *(_OWORD *)char v25 = v28;
                v25 -= 32;
                v26 -= 2;
                v27 -= 8;
              }
              while (v27);
              uint64_t v11 = v24;
              if (v22 != (v22 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_80:
                do
                {
                  int v29 = *(_DWORD *)(v11 - 4);
                  v11 -= 4;
                  *--uint64_t v19 = v29;
                }
                while ((void *)v11 != v12);
              }
              goto LABEL_73;
            }
            if (v17 >> 62) {
              sub_215738AD8();
            }
            uint64_t v18 = (char *)operator new(4 * v17);
            uint64_t v19 = (int *)&v18[4 * v14];
            int *v19 = v5;
            uint64_t v4 = (uint64_t)(v19 + 1);
            uint64_t v20 = v11 - (void)v12;
            if ((void *)v11 != v12) {
              goto LABEL_67;
            }
LABEL_73:
            qword_26788E138 = (uint64_t)v19;
            qword_26788E140 = v4;
            qword_26788E148 = (uint64_t)&v18[4 * v17];
            if (v12) {
              operator delete(v12);
            }
LABEL_4:
            qword_26788E140 = v4;
            break;
          default:
            break;
        }
      }
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_2157F6750(_Unwind_Exception *exception_object)
{
  if (qword_26788E138)
  {
    qword_26788E140 = qword_26788E138;
    operator delete((void *)qword_26788E138);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157F68A8(uint64_t a1)
{
  char v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_2157F68DC()
{
  qword_26788E150 = 0;
  qword_26788E158 = 0;
  qword_26788E160 = 0;
  uint64_t v0 = sub_215E0CF48();
  if (v0)
  {
    char v2 = v1;
    size_t v3 = &v1[v0];
    while (1)
    {
      int v5 = *v2;
      uint64_t v6 = sub_2157FC978(*v2);
      if ((v6 & 0xFF00000000) == 0) {
        goto LABEL_5;
      }
      uint64_t v7 = 0;
      int v8 = (char *)&v29;
      switch((int)v6)
      {
        case 1:
          goto LABEL_21;
        case 2:
          uint64_t v7 = 1;
          goto LABEL_21;
        case 3:
          uint64_t v7 = 2;
          goto LABEL_21;
        case 4:
          uint64_t v7 = 3;
          goto LABEL_21;
        case 5:
          uint64_t v7 = 4;
          goto LABEL_21;
        case 7:
          uint64_t v7 = 5;
          goto LABEL_21;
        case 8:
          uint64_t v7 = 6;
          goto LABEL_21;
        case 21:
          uint64_t v7 = 7;
          goto LABEL_21;
        case 22:
          uint64_t v7 = 8;
          goto LABEL_21;
        case 25:
          uint64_t v7 = 9;
          goto LABEL_21;
        case 31:
          uint64_t v7 = 10;
          goto LABEL_21;
        case 32:
          uint64_t v7 = 11;
          goto LABEL_21;
        case 37:
          uint64_t v7 = 12;
          goto LABEL_21;
        case 38:
          uint64_t v7 = 13;
LABEL_21:
          int v8 = (char *)&v28[v7];
          break;
        default:
          break;
      }
      if (v8 - (char *)v28 == 56) {
        goto LABEL_5;
      }
      uint64_t v9 = qword_26788E158;
      if (qword_26788E158 >= (unint64_t)qword_26788E160) {
        break;
      }
      *(_DWORD *)qword_26788E158 = v5;
      uint64_t v4 = v9 + 4;
LABEL_4:
      qword_26788E158 = v4;
LABEL_5:
      if (++v2 == v3) {
        return;
      }
    }
    char v10 = (void *)qword_26788E150;
    uint64_t v11 = qword_26788E158 - qword_26788E150;
    uint64_t v12 = (qword_26788E158 - qword_26788E150) >> 2;
    unint64_t v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 62) {
      sub_215738AC0();
    }
    uint64_t v14 = qword_26788E160 - qword_26788E150;
    if ((qword_26788E160 - qword_26788E150) >> 1 > v13) {
      unint64_t v13 = v14 >> 1;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v13;
    }
    if (v15)
    {
      if (v15 >> 62) {
        sub_215738AD8();
      }
      uint64_t v16 = (char *)operator new(4 * v15);
      unint64_t v17 = (int *)&v16[4 * v12];
      *unint64_t v17 = v5;
      uint64_t v4 = (uint64_t)(v17 + 1);
      uint64_t v18 = v9 - (void)v10;
      if ((void *)v9 == v10) {
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v16 = 0;
      unint64_t v17 = (int *)(4 * v12);
      *(_DWORD *)(4 * v12) = v5;
      uint64_t v4 = 4 * v12 + 4;
      uint64_t v18 = v9 - (void)v10;
      if ((void *)v9 == v10)
      {
LABEL_41:
        qword_26788E150 = (uint64_t)v17;
        qword_26788E158 = v4;
        qword_26788E160 = (uint64_t)&v16[4 * v15];
        if (v10) {
          operator delete(v10);
        }
        goto LABEL_4;
      }
    }
    unint64_t v19 = v18 - 4;
    if (v19 < 0x2C) {
      goto LABEL_48;
    }
    if ((unint64_t)(v9 - (void)v16 - v11) < 0x20) {
      goto LABEL_48;
    }
    uint64_t v20 = (v19 >> 2) + 1;
    uint64_t v21 = 4 * (v20 & 0x7FFFFFFFFFFFFFF8);
    uint64_t v22 = v9 - v21;
    unint64_t v17 = (int *)((char *)v17 - v21);
    uint64_t v23 = &v16[4 * v12 - 16];
    uint64_t v24 = (long long *)(v9 - 16);
    uint64_t v25 = v20 & 0x7FFFFFFFFFFFFFF8;
    do
    {
      long long v26 = *v24;
      *((_OWORD *)v23 - 1) = *(v24 - 1);
      *(_OWORD *)uint64_t v23 = v26;
      v23 -= 32;
      v24 -= 2;
      v25 -= 8;
    }
    while (v25);
    uint64_t v9 = v22;
    if (v20 != (v20 & 0x7FFFFFFFFFFFFFF8))
    {
LABEL_48:
      do
      {
        int v27 = *(_DWORD *)(v9 - 4);
        v9 -= 4;
        *--unint64_t v17 = v27;
      }
      while ((void *)v9 != v10);
    }
    goto LABEL_41;
  }
}

void sub_2157F6B74(_Unwind_Exception *exception_object)
{
  if (qword_26788E150)
  {
    qword_26788E158 = qword_26788E150;
    operator delete((void *)qword_26788E150);
  }
  _Unwind_Resume(exception_object);
}

void sub_2157F6C38(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  size_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  v23[0] = off_26C67D770;
  v23[1] = v4;
  uint64_t v24 = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_2157F7010((uint64_t)v25, (uint64_t)v23);
  v23[0] = off_26C67D770;
  int v5 = v24;
  if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (v32) {
      goto LABEL_6;
    }
  }
  else if (v32)
  {
LABEL_6:
    long long v6 = *(_OWORD *)&v25[8];
    *(void *)&v25[8] = 0;
    *(void *)&v25[16] = 0;
    *(void *)&long long v11 = &unk_26C66ADA8;
    *((void *)&v11 + 1) = &unk_26C657100;
    *(_OWORD *)unint64_t v13 = *(_OWORD *)v26;
    *(_OWORD *)&v13[14] = *(_OWORD *)&v26[14];
    LOBYTE(v14) = 0;
    char v20 = 0;
    char v21 = 0;
    char v22 = 0;
    *(void *)a2 = &unk_26C66ADA8;
    *(void *)(a2 + 8) = &unk_26C657100;
    __p[0] = 0;
    __p[1] = 0;
    long long v7 = *(_OWORD *)v26;
    *(_OWORD *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 32) = v7;
    *(_OWORD *)(a2 + 46) = *(_OWORD *)&v26[14];
    *(unsigned char *)(a2 + 64) = 0;
    *(unsigned char *)(a2 + 120) = 0;
    *(unsigned char *)(a2 + 128) = 0;
    *(unsigned char *)(a2 + 152) = 0;
    *(unsigned char *)(a2 + 160) = 1;
    sub_2158CA328((uint64_t)&v11);
    goto LABEL_16;
  }
  long long v11 = *(_OWORD *)v25;
  int v8 = sub_215741BFC(__p, (long long *)&v25[16]);
  *(_OWORD *)a2 = v11;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 112) = 0;
  if (!v19)
  {
    *(unsigned char *)(a2 + 160) = 0;
    if (v32) {
      goto LABEL_17;
    }
    goto LABEL_20;
  }
  *(unsigned char *)(a2 + 40) = 0;
  int v9 = v13[8];
  if (v13[8])
  {
    *(_OWORD *)(a2 + 16) = *(_OWORD *)v8;
    *(void *)(a2 + 32) = *((void *)v8 + 2);
    *((void *)v8 + 1) = 0;
    *((void *)v8 + 2) = 0;
    *(void *)int v8 = 0;
    *(unsigned char *)(a2 + 40) = 1;
  }
  *(unsigned char *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 104) = 0;
  if (v18)
  {
    uint64_t v10 = v15;
    *(void *)(a2 + 64) = v14;
    *(_OWORD *)(a2 + 48) = *(_OWORD *)&v13[16];
    *(_OWORD *)&v13[16] = 0uLL;
    *(void *)(a2 + 72) = v10;
    *(_OWORD *)(a2 + 80) = v16;
    *(void *)(a2 + 96) = v17;
    uint64_t v14 = 0;
    long long v16 = 0uLL;
    uint64_t v17 = 0;
    *(unsigned char *)(a2 + 104) = 1;
  }
  *(unsigned char *)(a2 + 112) = 1;
  *(unsigned char *)(a2 + 160) = 0;
  if (v9 && (v13[7] & 0x80000000) != 0) {
    operator delete(__p[0]);
  }
LABEL_16:
  if (v32)
  {
LABEL_17:
    (**(void (***)(unsigned char *))v25)(v25);
    return;
  }
LABEL_20:
  if (v31)
  {
    if (v30)
    {
      if (v29 < 0) {
        operator delete(v28);
      }
      if (v27 < 0) {
        operator delete(*(void **)&v26[24]);
      }
    }
    if (v26[16])
    {
      if ((v26[15] & 0x80000000) != 0) {
        operator delete(*(void **)&v25[16]);
      }
    }
  }
}

void sub_2157F6FE8(_Unwind_Exception *a1)
{
  sub_2157FA2D4(v1 - 160);
  _Unwind_Resume(a1);
}

void sub_2157F6FFC(_Unwind_Exception *a1)
{
  sub_215B62EA4((void *)(v1 - 184));
  _Unwind_Resume(a1);
}

void sub_2157F7010(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(uint64_t **)(a2 + 8);
  if (v3)
  {
    uint64_t v6 = *v3;
    int v5 = (std::__shared_weak_count *)v3[1];
    if (v5
      && (atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed),
          !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (v6) {
        goto LABEL_5;
      }
    }
    else if (v6)
    {
LABEL_5:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E038, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26788E038))
      {
        sub_2157F68DC();
        __cxa_atexit((void (*)(void *))sub_2157F68A8, &qword_26788E150, &dword_21572C000);
        __cxa_guard_release(&qword_26788E038);
      }
      uint64_t v7 = qword_26788E150;
      uint64_t v8 = qword_26788E158;
      int v9 = sub_215B61634(a2);
      uint64_t v10 = (v8 - v7) >> 2;
      if (v8 == v7)
      {
        if (!v10) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v11 = 4 * v10;
        uint64_t v12 = (_DWORD *)v7;
        do
        {
          if (*v12 == v9) {
            goto LABEL_11;
          }
          ++v12;
          v11 -= 4;
        }
        while (v11);
        uint64_t v12 = (_DWORD *)(v7 + ((v8 - v7) & 0xFFFFFFFFFFFFFFFCLL));
LABEL_11:
        if (v10 == ((uint64_t)v12 - v7) >> 2)
        {
LABEL_12:
          sub_215B61634(a2);
          if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E038, memory_order_acquire) & 1) == 0)
          {
            if (__cxa_guard_acquire(&qword_26788E038))
            {
              sub_2157F68DC();
              __cxa_atexit((void (*)(void *))sub_2157F68A8, &qword_26788E150, &dword_21572C000);
              __cxa_guard_release(&qword_26788E038);
            }
          }
          int v31 = 0;
          sub_2157FD010(&v30, "Invalid CVPixelBuffer format '");
          sub_2157FCC44();
        }
      }
      int v15 = sub_215B61634(a2);
      switch(sub_2157FC978(v15))
      {
        case 1u:
          operator new();
        case 2u:
          operator new();
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          operator new();
        case 7u:
          operator new();
        case 8u:
          operator new();
        case 0x15u:
          operator new();
        case 0x16u:
          operator new();
        case 0x19u:
          operator new();
        case 0x1Fu:
          operator new();
        case 0x20u:
          operator new();
        case 0x25u:
          operator new();
        case 0x26u:
          operator new();
        default:
          sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
          abort();
      }
    }
  }
  LOBYTE(v16) = 0;
  char v18 = 0;
  sub_215964354(&v16, (uint64_t)&v19);
  *(_OWORD *)a1 = v19;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (v29)
  {
    *(unsigned char *)(a1 + 40) = 0;
    int v13 = v22;
    if (v22)
    {
      *(_OWORD *)(a1 + 16) = __p;
      *(void *)(a1 + 32) = v21;
      uint64_t v21 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a1 + 40) = 1;
    }
    *(unsigned char *)(a1 + 48) = 0;
    *(unsigned char *)(a1 + 104) = 0;
    if (v28)
    {
      uint64_t v14 = v25;
      *(void *)(a1 + 64) = v24;
      *(_OWORD *)(a1 + 48) = v23;
      long long v23 = 0uLL;
      *(void *)(a1 + 72) = v14;
      *(_OWORD *)(a1 + 80) = v26;
      *(void *)(a1 + 96) = v27;
      uint64_t v24 = 0;
      long long v26 = 0uLL;
      uint64_t v27 = 0;
      *(unsigned char *)(a1 + 104) = 1;
    }
    *(unsigned char *)(a1 + 112) = 1;
    *(unsigned char *)(a1 + 120) = 0;
    if (v13 && SHIBYTE(v21) < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(unsigned char *)(a1 + 120) = 0;
  }
  if (v18 && v17 < 0) {
    operator delete((void *)v16);
  }
}

void sub_2157F9CEC(_Unwind_Exception *a1)
{
}

void sub_2157F9D04(_Unwind_Exception *a1)
{
}

void sub_2157F9D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40,uint64_t a41,uint64_t a42,std::__shared_weak_count *a43)
{
  sub_215733368(v43 - 104);
  if (a43)
  {
    if (!atomic_fetch_add(&a43->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a43->__on_zero_shared)(a43);
      std::__shared_weak_count::__release_weak(a43);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_2157FA2D4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    (**(void (***)(uint64_t))a1)(a1);
    return a1;
  }
  if (!*(unsigned char *)(a1 + 112)) {
    return a1;
  }
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  if ((*(char *)(a1 + 103) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
    goto LABEL_9;
  }
  operator delete(*(void **)(a1 + 80));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if (!*(unsigned char *)(a1 + 40)) {
    return a1;
  }
LABEL_9:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_2157FA394(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  int v5 = (char *)&v15;
  uint64_t v6 = 0;
  switch(v4)
  {
    case 1:
      goto LABEL_15;
    case 2:
      uint64_t v6 = 1;
      goto LABEL_15;
    case 3:
      uint64_t v6 = 2;
      goto LABEL_15;
    case 4:
      uint64_t v6 = 3;
      goto LABEL_15;
    case 5:
      uint64_t v6 = 4;
      goto LABEL_15;
    case 7:
      uint64_t v6 = 5;
      goto LABEL_15;
    case 8:
      uint64_t v6 = 6;
      goto LABEL_15;
    case 21:
      uint64_t v6 = 7;
      goto LABEL_15;
    case 22:
      uint64_t v6 = 8;
      goto LABEL_15;
    case 25:
      uint64_t v6 = 9;
      goto LABEL_15;
    case 31:
      uint64_t v6 = 10;
      goto LABEL_15;
    case 32:
      uint64_t v6 = 11;
      goto LABEL_15;
    case 37:
      uint64_t v6 = 12;
      goto LABEL_15;
    case 38:
      uint64_t v6 = 13;
LABEL_15:
      int v5 = (char *)&v12 + 4 * v6;
      break;
    default:
      break;
  }
  if (v5 - (char *)&v12 == 56)
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = off_26C67D770;
    *(unsigned char *)(a1 + 120) = 1;
    return;
  }
  sub_2158028F0(&v12, v4, a2 + 8);
  if (v13)
  {
    uint64_t v8 = *v13;
    uint64_t v7 = (std::__shared_weak_count *)v13[1];
    if (v7
      && (atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed),
          !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      if (v8)
      {
LABEL_23:
        uint64_t v10 = v13;
        int v9 = v14;
        *(void *)a1 = off_26C67D770;
        *(void *)(a1 + 8) = v10;
        *(void *)(a1 + 16) = v9;
        if (v9) {
          atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        goto LABEL_27;
      }
    }
    else if (v8)
    {
      goto LABEL_23;
    }
  }
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_26C67D770;
LABEL_27:
  *(unsigned char *)(a1 + 120) = 1;
  uint64_t v12 = off_26C67D770;
  uint64_t v11 = v14;
  if (v14)
  {
    if (!atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_2157FA684(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 152))
  {
    uint64_t v4 = *(void *)(a1 + 136);
    uint64_t v3 = *(void *)(a1 + 144);
    *(void *)a2 = off_26C67D770;
    *(void *)(a2 + 8) = v4;
    *(void *)(a2 + 16) = v3;
    if (v3) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a2 + 120) = 1;
  }
  else
  {
    uint64_t v40 = a1;
    int v5 = *(_DWORD *)(a1 + 56);
    int v39 = v5;
    uint64_t v6 = (char *)&v32 + 8;
    uint64_t v7 = 0;
    switch(v5)
    {
      case 1:
        goto LABEL_20;
      case 2:
        uint64_t v7 = 1;
        goto LABEL_20;
      case 3:
        uint64_t v7 = 2;
        goto LABEL_20;
      case 4:
        uint64_t v7 = 3;
        goto LABEL_20;
      case 5:
        uint64_t v7 = 4;
        goto LABEL_20;
      case 7:
        uint64_t v7 = 5;
        goto LABEL_20;
      case 8:
        uint64_t v7 = 6;
        goto LABEL_20;
      case 21:
        uint64_t v7 = 7;
        goto LABEL_20;
      case 22:
        uint64_t v7 = 8;
        goto LABEL_20;
      case 25:
        uint64_t v7 = 9;
        goto LABEL_20;
      case 31:
        uint64_t v7 = 10;
        goto LABEL_20;
      case 32:
        uint64_t v7 = 11;
        goto LABEL_20;
      case 37:
        uint64_t v7 = 12;
        goto LABEL_20;
      case 38:
        uint64_t v7 = 13;
LABEL_20:
        uint64_t v6 = (char *)&v28 + 4 * v7;
        break;
      default:
        break;
    }
    if (v6 - (char *)&v28 == 56) {
      sub_21581988C();
    }
    *(void *)&long long v28 = &v40;
    sub_215819FFC(v17, v5, (uint64_t)&v28, a1 + 8);
    if (!v17[1]) {
      goto LABEL_31;
    }
    uint64_t v9 = *(void *)v17[1];
    uint64_t v8 = (std::__shared_weak_count *)*((void *)v17[1] + 1);
    if (v8)
    {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    if (v9)
    {
      uint64_t v11 = v17[1];
      uint64_t v10 = v18;
      *(void *)a2 = off_26C67D770;
      *(void *)(a2 + 8) = v11;
      *(void *)(a2 + 16) = v10;
      if (v10) {
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      *(unsigned char *)(a2 + 120) = 1;
    }
    else
    {
LABEL_31:
      int v21 = 0;
      sub_2158210E8(__dst, "image does not contain a CVPixelBuffer");
      if (v21 == -1) {
        sub_215742D4C();
      }
      v42[0] = &v41;
      ((void (*)(void **__return_ptr, void *, void **))off_26C65AC58[v21])(v15, v42, __dst);
      if (v21 != -1) {
        ((void (*)(void *, void **))off_26C65ABE0[v21])(v42, __dst);
      }
      if (SHIBYTE(v16) < 0)
      {
        sub_215738B0C(__dst, v15[0], (unint64_t)v15[1]);
      }
      else
      {
        *(_OWORD *)long long __dst = *(_OWORD *)v15;
        uint64_t v20 = v16;
      }
      LOBYTE(v21) = 1;
      LOBYTE(v22) = 0;
      char v26 = 0;
      char v27 = 1;
      sub_21573FCF8(0xCu, (long long *)__dst, (uint64_t)&v28);
      *(_OWORD *)a2 = v28;
      *(unsigned char *)(a2 + 16) = 0;
      *(unsigned char *)(a2 + 112) = 0;
      if (v38)
      {
        *(unsigned char *)(a2 + 40) = 0;
        int v12 = v31;
        if (v31)
        {
          *(_OWORD *)(a2 + 16) = __p;
          *(void *)(a2 + 32) = v30;
          uint64_t v30 = 0;
          long long __p = 0uLL;
          *(unsigned char *)(a2 + 40) = 1;
        }
        *(unsigned char *)(a2 + 48) = 0;
        *(unsigned char *)(a2 + 104) = 0;
        if (v37)
        {
          uint64_t v13 = v34;
          *(void *)(a2 + 64) = v33;
          *(_OWORD *)(a2 + 48) = v32;
          long long v32 = 0uLL;
          *(void *)(a2 + 72) = v13;
          *(_OWORD *)(a2 + 80) = v35;
          *(void *)(a2 + 96) = v36;
          uint64_t v33 = 0;
          long long v35 = 0uLL;
          uint64_t v36 = 0;
          *(unsigned char *)(a2 + 104) = 1;
        }
        *(unsigned char *)(a2 + 112) = 1;
        *(unsigned char *)(a2 + 120) = 0;
        if (v12 && SHIBYTE(v30) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        *(unsigned char *)(a2 + 120) = 0;
      }
      if (v27)
      {
        if (v26)
        {
          if (v25 < 0) {
            operator delete(v24);
          }
          if (v23 < 0) {
            operator delete(v22);
          }
        }
        if ((_BYTE)v21 && SHIBYTE(v20) < 0) {
          operator delete(__dst[0]);
        }
      }
      if (SHIBYTE(v16) < 0) {
        operator delete(v15[0]);
      }
    }
    v17[0] = off_26C67D770;
    uint64_t v14 = v18;
    if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_2157FAC4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,int a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,char a41,int a42,__int16 a43,char a44,char a45)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_215B62EA4(&a15);
  _Unwind_Resume(a1);
}

void sub_2157FADFC(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v67 = *MEMORY[0x263EF8340];
  char v25 = off_26C67D770;
  long long v26 = *(_OWORD *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_2157F7010((uint64_t)&v27, (uint64_t)&v25);
  char v25 = off_26C67D770;
  int v5 = (std::__shared_weak_count *)*((void *)&v26 + 1);
  if (*((void *)&v26 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v26 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    if (v37)
    {
LABEL_4:
      if (!*((unsigned char *)a2 + 384))
      {
        int v39 = &unk_26C6835D0;
        uint64_t v12 = mach_continuous_time();
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_267890888))
        {
          mach_timebase_info(&info);
          LODWORD(v21) = info.numer;
          LODWORD(v22) = info.denom;
          *(double *)&qword_267890880 = (double)v21 / (double)v22;
          __cxa_guard_release(&qword_267890888);
        }
        mach_timebase_info v51 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v12);
        uint64_t v52 = 2;
        LOBYTE(v53) = 0;
        char v55 = 0;
        LOBYTE(v56) = 0;
        char v58 = 0;
        LOBYTE(v59) = 0;
        char v60 = 0;
        LOBYTE(v61) = 0;
        char v65 = 0;
        v66[0] = 0;
        v66[24] = 0;
        sub_2158211DC();
      }
      if (*((unsigned char *)a2 + 168))
      {
        mach_timebase_info v6 = (mach_timebase_info)*((void *)a2 + 19);
        uint64_t v7 = *((void *)a2 + 20);
        if (*((unsigned char *)a2 + 24)) {
          goto LABEL_7;
        }
      }
      else
      {
        mach_timebase_info info = (mach_timebase_info)&unk_26C6835D0;
        uint64_t v13 = mach_continuous_time();
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_267890888))
        {
          mach_timebase_info(&v51);
          LODWORD(v23) = v51.numer;
          LODWORD(v24) = v51.denom;
          *(double *)&qword_267890880 = (double)v23 / (double)v24;
          __cxa_guard_release(&qword_267890888);
        }
        mach_timebase_info v6 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v13);
        LOBYTE(v7) = 2;
        if (*((unsigned char *)a2 + 24))
        {
LABEL_7:
          sub_21582E5A0((const char *)a2, 1000000000);
          int v8 = *((unsigned __int8 *)a2 + 24);
          mach_timebase_info v51 = v6;
          LOBYTE(v52) = v7;
          LOBYTE(v53) = 0;
          char v55 = 0;
          if (v8)
          {
            if (*((char *)a2 + 23) < 0)
            {
              sub_215738B0C(&v53, *(void **)a2, *((void *)a2 + 1));
            }
            else
            {
              long long v53 = *a2;
              uint64_t v54 = *((void *)a2 + 2);
            }
            char v55 = 1;
            LOBYTE(v56) = 0;
            char v58 = 0;
            if (!*((unsigned char *)a2 + 120))
            {
LABEL_37:
              LOBYTE(v59) = 0;
              char v60 = 0;
              if (!*((unsigned char *)a2 + 144)) {
                goto LABEL_39;
              }
              goto LABEL_38;
            }
LABEL_26:
            if (*((char *)a2 + 119) < 0)
            {
              sub_215738B0C(&v56, *((void **)a2 + 12), *((void *)a2 + 13));
            }
            else
            {
              long long v56 = a2[6];
              uint64_t v57 = *((void *)a2 + 14);
            }
            char v58 = 1;
            LOBYTE(v59) = 0;
            char v60 = 0;
            if (!*((unsigned char *)a2 + 144))
            {
LABEL_39:
              LOBYTE(v61) = 0;
              char v65 = 0;
              if (*((unsigned char *)a2 + 80))
              {
                if (*((char *)a2 + 55) < 0)
                {
                  sub_215738B0C(&v61, *((void **)a2 + 4), *((void *)a2 + 5));
                }
                else
                {
                  long long v61 = a2[2];
                  uint64_t v62 = *((void *)a2 + 6);
                }
                _X0 = 0;
                _X1 = 0;
                __asm { CASPAL          X0, X1, X0, X1, [X8] }
                uint64_t v63 = _X0;
                uint64_t v64 = 0;
                char v65 = 1;
              }
              sub_215746DAC((uint64_t)v66, (uint64_t)(a2 + 11));
              sub_2158211DC();
            }
LABEL_38:
            long long v59 = a2[8];
            char v60 = 1;
            goto LABEL_39;
          }
LABEL_25:
          LOBYTE(v56) = 0;
          char v58 = 0;
          if (!*((unsigned char *)a2 + 120)) {
            goto LABEL_37;
          }
          goto LABEL_26;
        }
      }
      mach_timebase_info v51 = v6;
      LOBYTE(v52) = v7;
      LOBYTE(v53) = 0;
      char v55 = 0;
      goto LABEL_25;
    }
  }
  else if (v37)
  {
    goto LABEL_4;
  }
  long long v40 = v27;
  uint64_t v9 = sub_215741BFC(&__p, &v28);
  *(_OWORD *)a3 = v40;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v50)
  {
    *(unsigned char *)(a3 + 528) = 0;
    goto LABEL_29;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v10 = v43;
  if (v43)
  {
    *(_OWORD *)(a3 + 16) = *(_OWORD *)v9;
    *(void *)(a3 + 32) = *((void *)v9 + 2);
    *((void *)v9 + 1) = 0;
    *((void *)v9 + 2) = 0;
    *(void *)uint64_t v9 = 0;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v49)
  {
    uint64_t v11 = v46;
    *(void *)(a3 + 64) = v45;
    *(_OWORD *)(a3 + 48) = v44;
    long long v44 = 0uLL;
    *(void *)(a3 + 72) = v11;
    *(_OWORD *)(a3 + 80) = v47;
    *(void *)(a3 + 96) = v48;
    uint64_t v45 = 0;
    long long v47 = 0uLL;
    uint64_t v48 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 528) = 0;
  if (!v10 || (v42 & 0x80000000) == 0)
  {
LABEL_29:
    if (!v37) {
      goto LABEL_45;
    }
LABEL_30:
    (*(void (**)(long long *))v27)(&v27);
    return;
  }
  operator delete(__p);
  if (v37) {
    goto LABEL_30;
  }
LABEL_45:
  if (v36)
  {
    if (v35)
    {
      if (v34 < 0) {
        operator delete(v33);
      }
      if (v32 < 0) {
        operator delete(v31);
      }
    }
    if (v30 && v29 < 0) {
      operator delete((void *)v28);
    }
  }
}

void sub_2157FB448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  __cxa_guard_abort(&qword_267890888);
  sub_2157FA2D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157FB46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  if (LOBYTE(STACK[0x2F8]))
  {
    if (SLOBYTE(STACK[0x2F7]) < 0)
    {
      operator delete((void *)STACK[0x2E0]);
      sub_2157FA2D4((uint64_t)va);
      _Unwind_Resume(a1);
    }
  }
  sub_2157FA2D4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2157FB570(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215B62EA4((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL VZImageIsCVPixelFormatSupported_0(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E030, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_26788E030))
    {
      sub_2157F62D0();
      __cxa_atexit((void (*)(void *))sub_2157F68A8, &qword_26788E138, &dword_21572C000);
      __cxa_guard_release(&qword_26788E030);
    }
  }
  uint64_t v2 = (qword_26788E140 - qword_26788E138) >> 2;
  if (qword_26788E140 == qword_26788E138) {
    return v2 != 0;
  }
  uint64_t v3 = 4 * v2;
  uint64_t v4 = (_DWORD *)qword_26788E138;
  while (*v4 != a1)
  {
    ++v4;
    v3 -= 4;
    if (!v3)
    {
      uint64_t v4 = (_DWORD *)(qword_26788E138 + ((qword_26788E140 - qword_26788E138) & 0xFFFFFFFFFFFFFFFCLL));
      return v2 != ((uint64_t)v4 - qword_26788E138) >> 2;
    }
  }
  return v2 != ((uint64_t)v4 - qword_26788E138) >> 2;
}

void sub_2157FB660(_Unwind_Exception *a1)
{
}

BOOL VZImageIsCVPixelFormatPartiallySupported_0(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E038, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_26788E038))
    {
      sub_2157F68DC();
      __cxa_atexit((void (*)(void *))sub_2157F68A8, &qword_26788E150, &dword_21572C000);
      __cxa_guard_release(&qword_26788E038);
    }
  }
  uint64_t v2 = (qword_26788E158 - qword_26788E150) >> 2;
  if (qword_26788E158 == qword_26788E150) {
    return v2 != 0;
  }
  uint64_t v3 = 4 * v2;
  uint64_t v4 = (_DWORD *)qword_26788E150;
  while (*v4 != a1)
  {
    ++v4;
    v3 -= 4;
    if (!v3)
    {
      uint64_t v4 = (_DWORD *)(qword_26788E150 + ((qword_26788E158 - qword_26788E150) & 0xFFFFFFFFFFFFFFFCLL));
      return v2 != ((uint64_t)v4 - qword_26788E150) >> 2;
    }
  }
  return v2 != ((uint64_t)v4 - qword_26788E150) >> 2;
}

void sub_2157FB754(_Unwind_Exception *a1)
{
}

void sub_2157FB76C(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v4 = (const void *)*((void *)a1 + 53);
  int v5 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C678EB8, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_15:
      uint64_t v34 = 0;
      char v35 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v7 = *((void *)a1 + 53);
  int v8 = (std::__shared_weak_count *)*((void *)a1 + 54);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v34 = v7;
  char v35 = v8;
  if (!v7)
  {
LABEL_16:
    uint64_t v14 = sub_215AB5250(1u);
    uint64_t v15 = v14;
    if (v14[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v14, *((void *)v14 + 1));
    }
    else
    {
      long long v16 = *(_OWORD *)v14;
      uint64_t v37 = *((void *)v14 + 2);
      long long __dst = v16;
    }
    int v38 = *((_DWORD *)v15 + 6);
    sub_2157C3E6C(&v33, (uint64_t)&__dst, 1uLL);
    if (*((char *)a1 + 23) < 0)
    {
      sub_215738B0C(&v30, *(void **)a1, *((void *)a1 + 1));
    }
    else
    {
      long long v30 = *a1;
      uint64_t v31 = *((void *)a1 + 2);
    }
    int v32 = *((_DWORD *)a1 + 6);
    long long v27 = (char *)operator new(0x28uLL);
    long long v28 = xmmword_215E9BD80;
    strcpy(v27, "cannot return data as CVPixelBuffer");
    char v29 = 1;
    sub_215964570(&v33, (uint64_t)&v30, (uint64_t)&v27);
  }
  uint64_t v9 = *(void *)(v7 + 16);
  int v10 = *(std::__shared_weak_count **)(v7 + 24);
  if (v10)
  {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v11 = *(void *)(v7 + 48);
    int v12 = *(_DWORD *)(v7 + 56);
    __int16 v13 = *(_WORD *)(v7 + 60);
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v11 = *(void *)(v7 + 48);
    int v12 = *(_DWORD *)(v7 + 56);
    __int16 v13 = *(_WORD *)(v7 + 60);
  }
  *(void *)&long long v18 = v9;
  *((void *)&v18 + 1) = v10;
  *(_DWORD *)&v19[8] = *(_DWORD *)(v7 + 40);
  *(void *)long long v19 = *(void *)(v7 + 32);
  *(void *)&v19[16] = v11;
  *(_DWORD *)&v19[24] = v12;
  *(_WORD *)&v19[28] = v13;
  if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  v20[0] = &unk_26C66ADA8;
  v20[1] = &unk_26C657100;
  *(_OWORD *)long long __p = v18;
  *(_OWORD *)unint64_t v22 = *(_OWORD *)v19;
  *(_OWORD *)&v22[14] = *(_OWORD *)&v19[14];
  LOBYTE(v23) = 0;
  char v24 = 0;
  char v25 = 0;
  char v26 = 0;
  sub_2157FA394(a2, (uint64_t)v20);
  sub_2158CA328((uint64_t)v20);
  char v17 = v35;
  if (v35)
  {
    if (!atomic_fetch_add(&v35->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
}

void sub_2157FBCB8(_Unwind_Exception *a1)
{
  sub_2157C3C78((void **)(v1 - 136));
  if (*(char *)(v1 - 73) < 0)
  {
    operator delete(*(void **)(v1 - 96));
    sub_215733368(v1 - 112);
    _Unwind_Resume(a1);
  }
  sub_215733368(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_2157FBD5C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C678EB8, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_15:
      uint64_t v42 = 0;
      unsigned __int8 v43 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v7 = *(void *)(a1 + 424);
  int v8 = *(std::__shared_weak_count **)(a1 + 432);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v42 = v7;
  unsigned __int8 v43 = v8;
  if (!v7)
  {
LABEL_16:
    uint64_t v14 = sub_215AB5250(1u);
    uint64_t v15 = v14;
    if (v14[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v14, *((void *)v14 + 1));
    }
    else
    {
      long long v16 = *(_OWORD *)v14;
      *(void *)&long long v63 = *((void *)v14 + 2);
      long long __dst = v16;
    }
    DWORD2(v63) = *((_DWORD *)v15 + 6);
    sub_2157C3E6C(&v41, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v49, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)char v49 = *(_OWORD *)a1;
      uint64_t v50 = *(void *)(a1 + 16);
    }
    int v51 = *(_DWORD *)(a1 + 24);
    int v38 = operator new(0x28uLL);
    long long v39 = xmmword_215E9BD80;
    strcpy((char *)v38, "cannot return data as CVPixelBuffer");
    char v40 = 1;
    sub_215964570((long long **)&v41, (uint64_t)v49, (uint64_t)&v38);
  }
  uint64_t v9 = *(void *)(v7 + 16);
  int v10 = *(std::__shared_weak_count **)(v7 + 24);
  if (v10)
  {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v11 = *(void *)(v7 + 48);
    int v12 = *(_DWORD *)(v7 + 56);
    __int16 v13 = *(_WORD *)(v7 + 60);
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v11 = *(void *)(v7 + 48);
    int v12 = *(_DWORD *)(v7 + 56);
    __int16 v13 = *(_WORD *)(v7 + 60);
  }
  *(void *)&long long v28 = v9;
  *((void *)&v28 + 1) = v10;
  *(_DWORD *)&v29[8] = *(_DWORD *)(v7 + 40);
  *(void *)char v29 = *(void *)(v7 + 32);
  *(void *)&v29[16] = v11;
  *(_DWORD *)&v29[24] = v12;
  *(_WORD *)&v29[28] = v13;
  if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  long long v30 = &unk_26C66ADA8;
  uint64_t v31 = &unk_26C657100;
  *(_OWORD *)long long __p = v28;
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v29;
  *(_OWORD *)&v33[14] = *(_OWORD *)&v29[14];
  LOBYTE(v34) = 0;
  char v35 = 0;
  char v36 = 0;
  char v37 = 0;
  uint64_t v59 = a1;
  int v17 = *(void *)&v29[22] >> 16;
  int v58 = v17;
  long long v18 = (char *)&v66 + 8;
  uint64_t v19 = 0;
  switch(v17)
  {
    case 1:
      goto LABEL_41;
    case 2:
      uint64_t v19 = 1;
      goto LABEL_41;
    case 3:
      uint64_t v19 = 2;
      goto LABEL_41;
    case 4:
      uint64_t v19 = 3;
      goto LABEL_41;
    case 5:
      uint64_t v19 = 4;
      goto LABEL_41;
    case 7:
      uint64_t v19 = 5;
      goto LABEL_41;
    case 8:
      uint64_t v19 = 6;
      goto LABEL_41;
    case 21:
      uint64_t v19 = 7;
      goto LABEL_41;
    case 22:
      uint64_t v19 = 8;
      goto LABEL_41;
    case 25:
      uint64_t v19 = 9;
      goto LABEL_41;
    case 31:
      uint64_t v19 = 10;
      goto LABEL_41;
    case 32:
      uint64_t v19 = 11;
      goto LABEL_41;
    case 37:
      uint64_t v19 = 12;
      goto LABEL_41;
    case 38:
      uint64_t v19 = 13;
LABEL_41:
      long long v18 = (char *)&__dst + 4 * v19;
      break;
    default:
      break;
  }
  if (v18 - (char *)&__dst == 56) {
    sub_21581988C();
  }
  *(void *)&long long __dst = &v59;
  sub_215823594(&v46, v17, (uint64_t)&__dst, (uint64_t)&v31);
  if (!v47) {
    goto LABEL_52;
  }
  uint64_t v21 = *v47;
  uint64_t v20 = (std::__shared_weak_count *)v47[1];
  if (v20)
  {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  if (v21)
  {
    uint64_t v23 = v47;
    unint64_t v22 = v48;
    *(void *)a2 = &off_26C67D770;
    *(void *)(a2 + 8) = v23;
    *(void *)(a2 + 16) = v22;
    if (v22) {
      atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a2 + 120) = 1;
  }
  else
  {
LABEL_52:
    int v51 = 0;
    sub_2158210E8(v49, "image does not contain a CVPixelBuffer");
    if (v51 == -1) {
      sub_215742D4C();
    }
    long long v61 = &v60;
    ((void (*)(void **__return_ptr, char **, void **))off_26C65AC58[v51])(v44, &v61, v49);
    if (v51 != -1) {
      ((void (*)(char **, void **))off_26C65ABE0[v51])(&v61, v49);
    }
    if (SHIBYTE(v45) < 0)
    {
      sub_215738B0C(v49, v44[0], (unint64_t)v44[1]);
    }
    else
    {
      *(_OWORD *)char v49 = *(_OWORD *)v44;
      uint64_t v50 = v45;
    }
    LOBYTE(v51) = 1;
    LOBYTE(v52) = 0;
    char v56 = 0;
    char v57 = 1;
    sub_21573FCF8(0xCu, (long long *)v49, (uint64_t)&__dst);
    *(_OWORD *)a2 = __dst;
    *(unsigned char *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 112) = 0;
    if (v72)
    {
      *(unsigned char *)(a2 + 40) = 0;
      int v24 = v65;
      if (v65)
      {
        *(_OWORD *)(a2 + 16) = v63;
        *(void *)(a2 + 32) = v64;
        uint64_t v64 = 0;
        long long v63 = 0uLL;
        *(unsigned char *)(a2 + 40) = 1;
      }
      *(unsigned char *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 104) = 0;
      if (v71)
      {
        uint64_t v25 = v68;
        *(void *)(a2 + 64) = v67;
        *(_OWORD *)(a2 + 48) = v66;
        long long v66 = 0uLL;
        *(void *)(a2 + 72) = v25;
        *(_OWORD *)(a2 + 80) = v69;
        *(void *)(a2 + 96) = v70;
        uint64_t v67 = 0;
        long long v69 = 0uLL;
        uint64_t v70 = 0;
        *(unsigned char *)(a2 + 104) = 1;
      }
      *(unsigned char *)(a2 + 112) = 1;
      *(unsigned char *)(a2 + 120) = 0;
      if (v24 && SHIBYTE(v64) < 0) {
        operator delete((void *)v63);
      }
    }
    else
    {
      *(unsigned char *)(a2 + 120) = 0;
    }
    if (v57)
    {
      if (v56)
      {
        if (v55 < 0) {
          operator delete(v54);
        }
        if (v53 < 0) {
          operator delete(v52);
        }
      }
      if ((_BYTE)v51 && SHIBYTE(v50) < 0) {
        operator delete(v49[0]);
      }
    }
    if (SHIBYTE(v45) < 0) {
      operator delete(v44[0]);
    }
  }
  uint64_t v46 = &off_26C67D770;
  char v26 = v48;
  if (v48 && !atomic_fetch_add(&v48->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
    std::__shared_weak_count::__release_weak(v26);
  }
  sub_2158CA328((uint64_t)&v30);
  long long v27 = v43;
  if (v43)
  {
    if (!atomic_fetch_add(&v43->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
}

void sub_2157FC7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51)
{
  if (a50 < 0) {
    operator delete(__p);
  }
  sub_215B62EA4(&a51);
  sub_2158CA328((uint64_t)&a16);
  sub_215764BDC(&a9);
  sub_215733368((uint64_t)&a43);
  _Unwind_Resume(a1);
}

uint64_t sub_2157FC978(int a1)
{
  if (a1 > 1278226535)
  {
    if (a1 <= 1647589489)
    {
      if (a1 > 1380410944)
      {
        switch(a1)
        {
          case 1380410945:
            return 0x100000020;
          case 1380411457:
            return 0x10000001FLL;
          case 1647392359:
            return 0x100000002;
        }
        return 0;
      }
      if (a1 != 1278226536)
      {
        if (a1 == 1380401729) {
          return 0x10000001DLL;
        }
        return 0;
      }
    }
    else
    {
      if (a1 <= 1717856626)
      {
        if (a1 == 1647589490) {
          return 0x100000016;
        }
        if (a1 == 1647719521) {
          return 0x100000026;
        }
        int v1 = 1717855600;
        goto LABEL_22;
      }
      if (a1 == 1717856627) {
        return 0x100000004;
      }
      if (a1 != 1751410032 && a1 != 1751411059) {
        return 0;
      }
    }
    return 0x100000003;
  }
  if (a1 <= 843264103)
  {
    if (a1 <= 842285638)
    {
      if (a1 == 24) {
        return 0x100000015;
      }
      if (a1 == 32) {
        return 0x100000025;
      }
    }
    else
    {
      switch(a1)
      {
        case 842285639:
          return 0x100000011;
        case 843264056:
          return 0x100000005;
        case 843264102:
          return 0x100000008;
      }
    }
    return 0;
  }
  if (a1 > 1111970368)
  {
    if (a1 == 1111970369) {
      return 0x100000019;
    }
    if (a1 == 1278226488) {
      return 0x100000001;
    }
    int v1 = 1278226534;
LABEL_22:
    if (a1 != v1) {
      return 0;
    }
    return 0x100000004;
  }
  if (a1 == 843264104) {
    return 0x100000007;
  }
  if (a1 == 1094862674) {
    return 0x100000021;
  }
  return 0;
}

void sub_2157FCC44()
{
}

void sub_2157FCE30(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_2157FCE54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2157FCE98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (*a3 > 0)
  {
    uint64_t v6 = a2;
    uint64_t v7 = "{";
    uint64_t v8 = a2;
    uint64_t v9 = "{";
    int v10 = "{";
    uint64_t v3 = *(unsigned int *)(a2 + 24);
    if (v3 != -1)
    {
      uint64_t v11 = &v6;
      ((void (*)(uint64_t **, uint64_t))off_26C65AC40[v3])(&v11, a2);
      sub_2157FCC44();
    }
LABEL_6:
    sub_215742D4C();
  }
  uint64_t v6 = a2;
  uint64_t v7 = "{}";
  uint64_t v8 = a2;
  uint64_t v9 = "{}";
  int v10 = "{}";
  uint64_t v4 = *(unsigned int *)(a2 + 24);
  if (v4 == -1) {
    goto LABEL_6;
  }
  uint64_t v11 = &v6;
  return ((uint64_t (*)(uint64_t **, uint64_t))off_26C65AC28[v4])(&v11, a2);
}

_DWORD *sub_2157FD010(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65ABE0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_2157FD104(_DWORD ***a1)
{
  return sub_2157FD120(**a1, (char *)(*a1)[1]);
}

void sub_2157FD110(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2157FD120(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65ABE0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2157FD214(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  __int16 v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65ABE0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2157FD3CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_2157FD410(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    unint64_t result = sub_2157FD50C((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  unint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2157FD504(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_2157FD50C(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  uint64_t v21 = v8;
  unint64_t v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      __int16 v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  __int16 v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_2157FD70C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_2157FD720(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65E3A0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2157FD7B8(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65E3A0;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  unint64_t v6 = 0;
  *a2 = 0;
  sub_2157FDB90((uint64_t)(a1 + 1), &v5);
  unint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2157FD8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157FD8D8(void *a1)
{
  *a1 = &unk_26C65E3A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FD980()
{
  return 1;
}

uint64_t sub_2157FD988(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157FD990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 1);
}

uint64_t sub_2157FD9AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2157FDA38(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FDA70(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B598;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2157FDB1C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE1EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE1EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE1EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE1EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_2157FDB90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v8, v3, 1);
  uint64_t v5 = *(void *)(v8 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
  *(void *)(a1 + 32) = v5;
  uint64_t v8 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6) {
    return a1;
  }
  atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2157FDCE4(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_2157FDCF8(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65E4E8;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2157FDD90(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65E4E8;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  unint64_t v6 = 0;
  *a2 = 0;
  sub_2157FE168((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2157FDE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157FDEB0(void *a1)
{
  *a1 = &unk_26C65E4E8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FDF58()
{
  return 2;
}

uint64_t sub_2157FDF60(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157FDF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_2157FDF84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2157FE010(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FE048(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B7D8;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2157FE0F4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_2157FE168(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v8, v3, 2);
  uint64_t v5 = *(void *)(v8 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
  *(void *)(a1 + 32) = v5;
  uint64_t v8 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6) {
    return a1;
  }
  atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2157FE2BC(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_2157FE2D0(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65E630;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2157FE368(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65E630;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  unint64_t v6 = 0;
  *a2 = 0;
  sub_2157FE740((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2157FE474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157FE488(void *a1)
{
  *a1 = &unk_26C65E630;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FE530()
{
  return 3;
}

uint64_t sub_2157FE538(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157FE540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_2157FE55C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2157FE5E8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FE620(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B988;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2157FE6CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_2157FE740(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v8, v3, 3);
  uint64_t v5 = *(void *)(v8 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
  *(void *)(a1 + 32) = v5;
  uint64_t v8 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6) {
    return a1;
  }
  atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2157FE894(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_2157FE8A8(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65E778;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2157FE940(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65E778;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  unint64_t v6 = 0;
  *a2 = 0;
  sub_2157FED18((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2157FEA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157FEA60(void *a1)
{
  *a1 = &unk_26C65E778;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FEB08()
{
  return 4;
}

uint64_t sub_2157FEB10(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2157FEB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 4);
}

uint64_t sub_2157FEB34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2157FEBC0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FEBF8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67BB38;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2157FECA4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_2157FED18(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v8, v3, 4);
  uint64_t v5 = *(void *)(v8 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
  *(void *)(a1 + 32) = v5;
  uint64_t v8 = 0;
  MEMORY[0x2166C4D20]();
  unint64_t v6 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v6) {
    return a1;
  }
  atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_2157FEE6C(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_2157FEE80(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65E8C0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2157FEF18(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65E8C0;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  unint64_t v6 = 0;
  *a2 = 0;
  sub_2157FF2F0((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2157FF024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157FF038(void *a1)
{
  *a1 = &unk_26C65E8C0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FF0E0()
{
  return 5;
}

uint64_t sub_2157FF0E8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2157FF0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_2157FF10C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2157FF198(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FF1D0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B628;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2157FF27C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_2157FF2F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 5);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_2157FF444(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_2157FF458(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65EA08;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2157FF4F0(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65EA08;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_2157FF8C8((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2157FF5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157FF610(void *a1)
{
  *a1 = &unk_26C65EA08;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FF6B8()
{
  return 7;
}

uint64_t sub_2157FF6C0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2157FF6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2157FF6E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2157FF770(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FF7A8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67BA18;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2157FF854(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_2157FF8C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 7);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_2157FFA1C(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_2157FFA30(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65EB50;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2157FFAC8(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65EB50;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_2157FFEA0((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2157FFBD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2157FFBE8(void *a1)
{
  *a1 = &unk_26C65EB50;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FFC90()
{
  return 8;
}

uint64_t sub_2157FFC98(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2157FFCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2157FFCBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2157FFD48(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2157FFD80(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67BBC8;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2157FFE2C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_2157FFEA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 8);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_2157FFFF4(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_215800008(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65EC98;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2158000A0(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65EC98;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_215800478((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2158001AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2158001C0(void *a1)
{
  *a1 = &unk_26C65EC98;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215800268()
{
  return 21;
}

uint64_t sub_215800270(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215800278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215800294(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215800320(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215800358(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B6B8;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215800404(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_215800478(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 21);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_2158005CC(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_2158005E0(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65EDE0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_215800678(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65EDE0;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_215800A50((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_215800784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215800798(void *a1)
{
  *a1 = &unk_26C65EDE0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215800840()
{
  return 22;
}

uint64_t sub_215800848(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215800850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21580086C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158008F8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215800930(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B868;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_2158009DC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_215800A50(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 22);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_215800BA4(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_215800BB8(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65EF28;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_215800C50(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65EF28;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_215801028((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_215800D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215800D70(void *a1)
{
  *a1 = &unk_26C65EF28;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215800E18()
{
  return 25;
}

uint64_t sub_215800E20(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215800E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215800E44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215800ED0(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215800F08(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B748;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215800FB4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_215801028(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 25);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_21580117C(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_215801190(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65F070;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_215801228(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65F070;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_215801600((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_215801334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215801348(void *a1)
{
  *a1 = &unk_26C65F070;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158013F0()
{
  return 31;
}

uint64_t sub_2158013F8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215801400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21580141C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158014A8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158014E0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67BAA8;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21580158C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_215801600(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 31);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_215801754(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_215801768(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65F1B8;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_215801800(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65F1B8;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_215801BD8((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_21580190C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215801920(void *a1)
{
  *a1 = &unk_26C65F1B8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158019C8()
{
  return 32;
}

uint64_t sub_2158019D0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158019D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158019F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215801A80(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215801AB8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67BC58;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215801B64(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_215801BD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 32);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_215801D2C(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_215801D40(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65F300;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_215801DD8(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65F300;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_2158021B0((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_215801EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215801EF8(void *a1)
{
  *a1 = &unk_26C65F300;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215801FA0()
{
  return 37;
}

uint64_t sub_215801FA8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215801FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215801FCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215802058(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215802090(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B748;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_21580213C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_2158021B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 37);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_215802304(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void *sub_215802318(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65F448;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void *sub_2158023B0(void *a1, uint64_t *a2)
{
  *a1 = &unk_26C65F448;
  uint64_t v5 = *a2;
  if (v5) {
    operator new();
  }
  long long v6 = 0;
  *a2 = 0;
  sub_215802788((uint64_t)(a1 + 1), &v5);
  uint64_t v3 = v6;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_2158024BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_2158024D0(void *a1)
{
  *a1 = &unk_26C65F448;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215802578()
{
  return 38;
}

uint64_t sub_215802580(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215802588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158025A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215802630(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215802668(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  if (v1)
  {
    *(void *)uint64_t v1 = &unk_26C67B8F8;
    uint64_t v2 = *(unsigned int *)(v1 + 40);
    if (v2 != -1) {
      ((void (*)(char *, uint64_t))off_26C67C898[v2])(&v3, v1 + 16);
    }
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x2166C4D20);
  }
  return result;
}

uint64_t sub_215802714(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_215802788(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(void *)v3 + 64))(&v9, v3, 38);
  long long v6 = v9[1];
  long long v5 = v9[2];
  *(_OWORD *)(a1 + 16) = *v9;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v5;
  size_t v9 = 0;
  MEMORY[0x2166C4D20]();
  size_t v7 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v7) {
    return a1;
  }
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
  std::__shared_weak_count::__release_weak(v7);
  return a1;
}

void sub_2158028DC(_Unwind_Exception *a1)
{
  sub_215733368(v1);
  _Unwind_Resume(a1);
}

void sub_2158028F0(void *a1, int a2, uint64_t a3)
{
  switch(a2)
  {
    case 1:
      unint64_t v4 = &unk_26C65AE70;
      int v90 = &unk_26C65AE70;
      sub_2158066DC((uint64_t)&v91, a3);
      if (!sub_2158050C8(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65AC80;
      sub_215805418((uint64_t)&v108, &v90);
      uint64_t v5 = v108;
      long long v6 = v109;
      int v93 = &unk_26C65AC80;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[9] = *(_OWORD *)((char *)v110 + 9);
      LOBYTE(v97) = 1;
      LOBYTE(v105) = 0;
      long long v100 = &unk_26C65AD78;
      if (!v6)
      {
        uint64_t v101 = v5;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        *(void *)&long long v104 = *(void *)&v96[16];
        LOBYTE(v105) = 1;
        goto LABEL_102;
      }
      p_shared_owners = &v6->__shared_owners_;
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v103 = *(_OWORD *)v96;
      *(void *)&long long v104 = *(void *)&v96[16];
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v101 = v5;
      long long v102 = v6;
      if (atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_6:
          LOBYTE(v105) = 1;
          if (!(_BYTE)v97)
          {
LABEL_106:
            uint64_t v48 = v101;
            char v49 = v102;
            if (v102)
            {
              atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
              if (!atomic_fetch_add(&v49->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
                std::__shared_weak_count::__release_weak(v49);
              }
            }
            sub_215B2E878(v48, a1);
            goto LABEL_140;
          }
LABEL_102:
          int v93 = &unk_26C65AC80;
          long long v47 = v95;
          if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
            std::__shared_weak_count::__release_weak(v47);
          }
          if ((_BYTE)v105) {
            goto LABEL_106;
          }
          goto LABEL_246;
        }
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
        if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_6;
        }
      }
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
      LOBYTE(v105) = 1;
      if (!(_BYTE)v97) {
        goto LABEL_106;
      }
      goto LABEL_102;
    case 2:
      unint64_t v4 = &unk_26C65B1A0;
      int v90 = &unk_26C65B1A0;
      sub_215808B80((uint64_t)&v91, a3);
      if (!sub_215807980(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65AFB0;
      sub_215807CD0((uint64_t)&v108, &v90);
      uint64_t v8 = v108;
      size_t v9 = v109;
      int v93 = &unk_26C65AFB0;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[9] = *(_OWORD *)((char *)v110 + 9);
      LOBYTE(v97) = 1;
      LOBYTE(v105) = 0;
      long long v100 = &unk_26C65B0A8;
      if (v9)
      {
        size_t v10 = &v9->__shared_owners_;
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        *(void *)&long long v104 = *(void *)&v96[16];
        atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v8;
        long long v102 = v9;
        if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_12;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
          if (atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_12:
            LOBYTE(v105) = 1;
            if (!(_BYTE)v97)
            {
LABEL_116:
              uint64_t v51 = v101;
              uint64_t v52 = v102;
              if (v102)
              {
                atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v52->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
                  std::__shared_weak_count::__release_weak(v52);
                }
              }
              sub_215B34F60(v51, a1);
              goto LABEL_140;
            }
            goto LABEL_112;
          }
        }
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
        LOBYTE(v105) = 1;
        if (!(_BYTE)v97) {
          goto LABEL_116;
        }
      }
      else
      {
        uint64_t v101 = v8;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        *(void *)&long long v104 = *(void *)&v96[16];
        LOBYTE(v105) = 1;
      }
LABEL_112:
      int v93 = &unk_26C65AFB0;
      uint64_t v50 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
        std::__shared_weak_count::__release_weak(v50);
      }
      if ((_BYTE)v105) {
        goto LABEL_116;
      }
LABEL_246:
      a1[1] = 0;
      a1[2] = 0;
      *a1 = off_26C67D770;
      goto LABEL_247;
    case 3:
      unint64_t v4 = &unk_26C65B488;
      int v90 = &unk_26C65B488;
      sub_21580A13C((uint64_t)&v91, a3);
      if (!sub_215808F3C(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65B298;
      sub_21580928C((uint64_t)&v108, &v90);
      uint64_t v11 = v108;
      char v12 = v109;
      int v93 = &unk_26C65B298;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[9] = *(_OWORD *)((char *)v110 + 9);
      LOBYTE(v97) = 1;
      LOBYTE(v105) = 0;
      long long v100 = &unk_26C65B390;
      if (v12)
      {
        __int16 v13 = &v12->__shared_owners_;
        atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        *(void *)&long long v104 = *(void *)&v96[16];
        atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v11;
        long long v102 = v12;
        if (atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v13, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_18;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
          if (atomic_fetch_add(v13, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_18:
            LOBYTE(v105) = 1;
            if (!(_BYTE)v97) {
              goto LABEL_126;
            }
            goto LABEL_122;
          }
        }
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
        LOBYTE(v105) = 1;
        if (!(_BYTE)v97) {
          goto LABEL_126;
        }
      }
      else
      {
        uint64_t v101 = v11;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        *(void *)&long long v104 = *(void *)&v96[16];
        LOBYTE(v105) = 1;
      }
LABEL_122:
      int v93 = &unk_26C65B298;
      char v53 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
      if (!(_BYTE)v105) {
        goto LABEL_246;
      }
LABEL_126:
      uint64_t v54 = v101;
      char v55 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v55->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
          std::__shared_weak_count::__release_weak(v55);
        }
      }
      sub_215B39D38(v54, a1);
      goto LABEL_140;
    case 4:
      unint64_t v4 = &unk_26C65B770;
      int v90 = &unk_26C65B770;
      sub_21580B6F8((uint64_t)&v91, a3);
      if (!sub_21580A4F8(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65B580;
      sub_21580A848((uint64_t)&v108, &v90);
      uint64_t v14 = v108;
      uint64_t v15 = v109;
      int v93 = &unk_26C65B580;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[9] = *(_OWORD *)((char *)v110 + 9);
      LOBYTE(v97) = 1;
      LOBYTE(v105) = 0;
      long long v100 = &unk_26C65B678;
      if (!v15)
      {
        uint64_t v101 = v14;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        *(void *)&long long v104 = *(void *)&v96[16];
        LOBYTE(v105) = 1;
        goto LABEL_132;
      }
      uint64_t v16 = &v15->__shared_owners_;
      atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v103 = *(_OWORD *)v96;
      *(void *)&long long v104 = *(void *)&v96[16];
      atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v101 = v14;
      long long v102 = v15;
      if (atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v16, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_24;
        }
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
        std::__shared_weak_count::__release_weak(v15);
        if (atomic_fetch_add(v16, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_24:
          LOBYTE(v105) = 1;
          if (!(_BYTE)v97) {
            goto LABEL_136;
          }
          goto LABEL_132;
        }
      }
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      LOBYTE(v105) = 1;
      if (!(_BYTE)v97) {
        goto LABEL_136;
      }
LABEL_132:
      int v93 = &unk_26C65B580;
      char v56 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
        std::__shared_weak_count::__release_weak(v56);
      }
      if (!(_BYTE)v105) {
        goto LABEL_246;
      }
LABEL_136:
      uint64_t v57 = v101;
      int v58 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v58->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
          std::__shared_weak_count::__release_weak(v58);
        }
      }
      sub_215B3EA10(v57, a1);
LABEL_140:
      if (!(_BYTE)v105) {
        goto LABEL_247;
      }
      goto LABEL_243;
    case 5:
      unint64_t v4 = &unk_26C65BA58;
      int v90 = &unk_26C65BA58;
      sub_21580CCB4((uint64_t)&v91, a3);
      if (!sub_21580BAB4(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65B868;
      sub_21580BE04((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v17 = v108;
      long long v18 = v109;
      int v93 = &unk_26C65B868;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65B960;
      if (v18)
      {
        uint64_t v19 = &v18->__shared_owners_;
        atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v17;
        long long v102 = v18;
        if (atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v19, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_30;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
          if (atomic_fetch_add(v19, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_30:
            char v106 = 1;
            if (!v99) {
              goto LABEL_148;
            }
            goto LABEL_144;
          }
        }
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
        char v106 = 1;
        if (!v99) {
          goto LABEL_148;
        }
      }
      else
      {
        uint64_t v101 = v17;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
      }
LABEL_144:
      int v93 = &unk_26C65B868;
      uint64_t v59 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
        std::__shared_weak_count::__release_weak(v59);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_148:
      uint64_t v60 = v101;
      long long v61 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v61->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
      }
      sub_215B30234(v60, a1);
      goto LABEL_242;
    case 7:
      unint64_t v4 = &unk_26C65BD40;
      int v90 = &unk_26C65BD40;
      sub_21580E2F0((uint64_t)&v91, a3);
      if (!sub_21580D0F0(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65BB50;
      sub_21580D440((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v20 = v108;
      uint64_t v21 = v109;
      int v93 = &unk_26C65BB50;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65BC48;
      if (v21)
      {
        unint64_t v22 = &v21->__shared_owners_;
        atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v20;
        long long v102 = v21;
        if (atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v22, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_36;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
          if (atomic_fetch_add(v22, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_36:
            char v106 = 1;
            if (!v99) {
              goto LABEL_158;
            }
            goto LABEL_154;
          }
        }
        ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
        std::__shared_weak_count::__release_weak(v21);
        char v106 = 1;
        if (!v99) {
          goto LABEL_158;
        }
      }
      else
      {
        uint64_t v101 = v20;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
      }
LABEL_154:
      int v93 = &unk_26C65BB50;
      uint64_t v62 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
        std::__shared_weak_count::__release_weak(v62);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_158:
      uint64_t v63 = v101;
      uint64_t v64 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v64->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
          std::__shared_weak_count::__release_weak(v64);
        }
      }
      sub_215B3B7D4(v63, a1);
      goto LABEL_242;
    case 8:
      unint64_t v4 = &unk_26C65C028;
      int v90 = &unk_26C65C028;
      sub_21580F930((uint64_t)&v91, a3);
      if (!sub_21580E730(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65BE38;
      sub_21580EA80((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v23 = v108;
      int v24 = v109;
      int v93 = &unk_26C65BE38;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65BF30;
      if (v24)
      {
        uint64_t v25 = &v24->__shared_owners_;
        atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v23;
        long long v102 = v24;
        if (atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v25, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_42;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
          std::__shared_weak_count::__release_weak(v24);
          if (atomic_fetch_add(v25, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_42:
            char v106 = 1;
            if (!v99) {
              goto LABEL_168;
            }
            goto LABEL_164;
          }
        }
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
        char v106 = 1;
        if (!v99) {
          goto LABEL_168;
        }
      }
      else
      {
        uint64_t v101 = v23;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
      }
LABEL_164:
      int v93 = &unk_26C65BE38;
      unsigned __int8 v65 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
        std::__shared_weak_count::__release_weak(v65);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_168:
      uint64_t v66 = v101;
      uint64_t v67 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v67->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
          std::__shared_weak_count::__release_weak(v67);
        }
      }
      sub_215B40568(v66, a1);
      goto LABEL_242;
    case 21:
      unint64_t v4 = &unk_26C65C310;
      int v90 = &unk_26C65C310;
      sub_215810F70((uint64_t)&v91, a3);
      if (!sub_21580FD70(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65C120;
      sub_2158100C0((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v26 = v108;
      long long v27 = v109;
      int v93 = &unk_26C65C120;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65C218;
      if (v27)
      {
        long long v28 = &v27->__shared_owners_;
        atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v26;
        long long v102 = v27;
        if (atomic_fetch_add(&v27->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_48;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
          if (atomic_fetch_add(v28, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_48:
            char v106 = 1;
            if (!v99) {
              goto LABEL_178;
            }
            goto LABEL_174;
          }
        }
        ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
        std::__shared_weak_count::__release_weak(v27);
        char v106 = 1;
        if (!v99) {
          goto LABEL_178;
        }
      }
      else
      {
        uint64_t v101 = v26;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
      }
LABEL_174:
      int v93 = &unk_26C65C120;
      uint64_t v68 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
        std::__shared_weak_count::__release_weak(v68);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_178:
      uint64_t v69 = v101;
      uint64_t v70 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v70->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v70->__on_zero_shared)(v70);
          std::__shared_weak_count::__release_weak(v70);
        }
      }
      sub_215B31D70(v69, a1);
      goto LABEL_242;
    case 22:
      unint64_t v4 = &unk_26C65C5F8;
      int v90 = &unk_26C65C5F8;
      sub_2158125AC((uint64_t)&v91, a3);
      if (!sub_2158113AC(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65C408;
      sub_2158116FC((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v29 = v108;
      long long v30 = v109;
      int v93 = &unk_26C65C408;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65C500;
      if (v30)
      {
        uint64_t v31 = &v30->__shared_owners_;
        atomic_fetch_add_explicit(&v30->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v30->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        atomic_fetch_add_explicit(&v30->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v29;
        long long v102 = v30;
        if (atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v31, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_54;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
          if (atomic_fetch_add(v31, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_54:
            char v106 = 1;
            if (!v99) {
              goto LABEL_188;
            }
            goto LABEL_184;
          }
        }
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
        char v106 = 1;
        if (!v99) {
          goto LABEL_188;
        }
      }
      else
      {
        uint64_t v101 = v29;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
      }
LABEL_184:
      int v93 = &unk_26C65C408;
      char v71 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v71->__on_zero_shared)(v71);
        std::__shared_weak_count::__release_weak(v71);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_188:
      uint64_t v72 = v101;
      uint64_t v73 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v73->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
          std::__shared_weak_count::__release_weak(v73);
        }
      }
      sub_215B36AA4(v72, a1);
      goto LABEL_242;
    case 25:
      unint64_t v4 = &unk_26C65C8E0;
      int v90 = &unk_26C65C8E0;
      sub_215813BEC((uint64_t)&v91, a3);
      if (!sub_2158129EC(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65C6F0;
      sub_215812D3C((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v32 = v108;
      uint64_t v33 = v109;
      int v93 = &unk_26C65C6F0;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65C7E8;
      if (!v33)
      {
        uint64_t v101 = v32;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
LABEL_194:
        int v93 = &unk_26C65C6F0;
        int v74 = v95;
        if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
          std::__shared_weak_count::__release_weak(v74);
        }
        if (!v106) {
          goto LABEL_246;
        }
LABEL_198:
        uint64_t v75 = v101;
        long long v76 = v102;
        if (v102)
        {
          atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v76->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
        goto LABEL_201;
      }
      uint64_t v34 = &v33->__shared_owners_;
      atomic_fetch_add_explicit(&v33->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v33->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v103 = *(_OWORD *)v96;
      long long v104 = *(_OWORD *)&v96[16];
      long long v105 = v97;
      atomic_fetch_add_explicit(&v33->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v101 = v32;
      long long v102 = v33;
      if (atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v34, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_60;
        }
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
        std::__shared_weak_count::__release_weak(v33);
        if (atomic_fetch_add(v34, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_60:
          char v106 = 1;
          if (!v99) {
            goto LABEL_198;
          }
          goto LABEL_194;
        }
      }
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
      char v106 = 1;
      if (!v99) {
        goto LABEL_198;
      }
      goto LABEL_194;
    case 31:
      unint64_t v4 = &unk_26C65CBC8;
      int v90 = &unk_26C65CBC8;
      sub_215815228((uint64_t)&v91, a3);
      if (!sub_215814028(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65C9D8;
      sub_215814378((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v35 = v108;
      char v36 = v109;
      int v93 = &unk_26C65C9D8;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65CAD0;
      if (v36)
      {
        char v37 = &v36->__shared_owners_;
        atomic_fetch_add_explicit(&v36->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v36->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        atomic_fetch_add_explicit(&v36->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v35;
        long long v102 = v36;
        if (atomic_fetch_add(&v36->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v37, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_66;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
          if (atomic_fetch_add(v37, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_66:
            char v106 = 1;
            if (!v99) {
              goto LABEL_208;
            }
            goto LABEL_204;
          }
        }
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
        char v106 = 1;
        if (!v99) {
          goto LABEL_208;
        }
      }
      else
      {
        uint64_t v101 = v35;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
      }
LABEL_204:
      int v93 = &unk_26C65C9D8;
      long long v77 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v77->__on_zero_shared)(v77);
        std::__shared_weak_count::__release_weak(v77);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_208:
      uint64_t v78 = v101;
      long long v79 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v79->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v79->__on_zero_shared)(v79);
          std::__shared_weak_count::__release_weak(v79);
        }
      }
      sub_215B3D154(v78, a1);
      goto LABEL_242;
    case 32:
      unint64_t v4 = &unk_26C65CEB0;
      int v90 = &unk_26C65CEB0;
      sub_215816868((uint64_t)&v91, a3);
      if (!sub_215815668(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65CCC0;
      sub_2158159B8((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v38 = v108;
      long long v39 = v109;
      int v93 = &unk_26C65CCC0;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65CDB8;
      if (v39)
      {
        char v40 = &v39->__shared_owners_;
        atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v38;
        long long v102 = v39;
        if (atomic_fetch_add(&v39->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v40, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_72;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
          if (atomic_fetch_add(v40, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_72:
            char v106 = 1;
            if (!v99) {
              goto LABEL_218;
            }
            goto LABEL_214;
          }
        }
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
        char v106 = 1;
        if (!v99) {
          goto LABEL_218;
        }
      }
      else
      {
        uint64_t v101 = v38;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
      }
LABEL_214:
      int v93 = &unk_26C65CCC0;
      long long v80 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
        std::__shared_weak_count::__release_weak(v80);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_218:
      uint64_t v81 = v101;
      long long v82 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v82->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
          std::__shared_weak_count::__release_weak(v82);
        }
      }
      sub_215B4212C(v81, a1);
      goto LABEL_242;
    case 37:
      unint64_t v4 = &unk_26C65D198;
      int v90 = &unk_26C65D198;
      sub_215817EA8((uint64_t)&v91, a3);
      if (!sub_215816CA8(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65CFA8;
      sub_215816FF8((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v41 = v108;
      uint64_t v42 = v109;
      int v93 = &unk_26C65CFA8;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65D0A0;
      if (!v42)
      {
        uint64_t v101 = v41;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
        goto LABEL_224;
      }
      unsigned __int8 v43 = &v42->__shared_owners_;
      atomic_fetch_add_explicit(&v42->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v42->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v103 = *(_OWORD *)v96;
      long long v104 = *(_OWORD *)&v96[16];
      long long v105 = v97;
      atomic_fetch_add_explicit(&v42->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v101 = v41;
      long long v102 = v42;
      if (atomic_fetch_add(&v42->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v43, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_78;
        }
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
        std::__shared_weak_count::__release_weak(v42);
        if (atomic_fetch_add(v43, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_78:
          char v106 = 1;
          if (!v99) {
            goto LABEL_228;
          }
          goto LABEL_224;
        }
      }
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
      char v106 = 1;
      if (!v99) {
        goto LABEL_228;
      }
LABEL_224:
      int v93 = &unk_26C65CFA8;
      long long v83 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
        std::__shared_weak_count::__release_weak(v83);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_228:
      uint64_t v75 = v101;
      long long v84 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v84->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
          std::__shared_weak_count::__release_weak(v84);
        }
      }
LABEL_201:
      sub_215B336A4(v75, a1);
LABEL_242:
      if (v106)
      {
LABEL_243:
        long long v88 = v102;
        if (v102 && !atomic_fetch_add(&v102->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
          std::__shared_weak_count::__release_weak(v88);
        }
      }
LABEL_247:
      int v90 = v4;
      long long v89 = v92;
      if (v92)
      {
        if (!atomic_fetch_add(&v92->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v89->__on_zero_shared)(v89);
          std::__shared_weak_count::__release_weak(v89);
        }
      }
      return;
    case 38:
      unint64_t v4 = &unk_26C65D480;
      int v90 = &unk_26C65D480;
      sub_2158194E4((uint64_t)&v91, a3);
      if (!sub_2158182E4(v91, v92)) {
        goto LABEL_246;
      }
      long long v107 = &unk_26C65D290;
      sub_215818634((uint64_t)&v108, (uint64_t)&v90);
      uint64_t v44 = v108;
      uint64_t v45 = v109;
      int v93 = &unk_26C65D290;
      uint64_t v94 = v108;
      uint64_t v95 = v109;
      uint64_t v108 = 0;
      int v109 = 0;
      *(_OWORD *)unint64_t v96 = v110[0];
      *(_OWORD *)&v96[16] = v110[1];
      long long v97 = v111;
      char v98 = v112;
      char v99 = 1;
      char v106 = 0;
      long long v100 = &unk_26C65D388;
      if (v45)
      {
        uint64_t v46 = &v45->__shared_owners_;
        atomic_fetch_add_explicit(&v45->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v45->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        atomic_fetch_add_explicit(&v45->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v101 = v44;
        long long v102 = v45;
        if (atomic_fetch_add(&v45->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v46, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_84;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
          if (atomic_fetch_add(v46, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_84:
            char v106 = 1;
            if (!v99) {
              goto LABEL_238;
            }
            goto LABEL_234;
          }
        }
        ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
        std::__shared_weak_count::__release_weak(v45);
        char v106 = 1;
        if (!v99) {
          goto LABEL_238;
        }
      }
      else
      {
        uint64_t v101 = v44;
        long long v102 = 0;
        long long v103 = *(_OWORD *)v96;
        long long v104 = *(_OWORD *)&v96[16];
        long long v105 = v97;
        char v106 = 1;
      }
LABEL_234:
      int v93 = &unk_26C65D290;
      long long v85 = v95;
      if (v95 && !atomic_fetch_add(&v95->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
        std::__shared_weak_count::__release_weak(v85);
      }
      if (!v106) {
        goto LABEL_246;
      }
LABEL_238:
      uint64_t v86 = v101;
      long long v87 = v102;
      if (v102)
      {
        atomic_fetch_add_explicit(&v102->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v87->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
          std::__shared_weak_count::__release_weak(v87);
        }
      }
      sub_215B385F4(v86, a1);
      goto LABEL_242;
    default:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
      abort();
  }
}

void sub_215804E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,std::__shared_weak_count *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,char a40)
{
  if (a40 && a32 && !atomic_fetch_add(&a32->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a32->__on_zero_shared)(a32);
    std::__shared_weak_count::__release_weak(a32);
  }
  if (a11)
  {
    if (!atomic_fetch_add(&a11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_215805030(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65AE70;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_2158050C8(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (uint64_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C678, 0)) != 0)
  {
    size_t v7 = v3;
    uint64_t v8 = a2;
  }
  else
  {
    size_t v7 = 0;
    uint64_t v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      unint64_t v4 = 0;
      return v4 != 0;
    }
  }
  unint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_215805224(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65AC80;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158052BC(void *a1)
{
  *a1 = &unk_26C65AC80;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215805364()
{
  return 1;
}

uint64_t sub_21580536C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215805374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 1);
}

uint64_t sub_215805390(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215805418(uint64_t a1, void *a2)
{
  unint64_t v4 = (const void *)a2[1];
  uint64_t v5 = (std::__shared_weak_count *)a2[2];
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (long long v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C678, 0)) == 0)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_215805668((char *)&v9, (uint64_t)a2);
    std::logic_error::logic_error(exception, &v9);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  size_t v7 = a2 + 3;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = *v7;
    v9.__r_.__value_.__r.__words[2] = a2[5];
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    *(std::string *)(a1 + 16) = v9;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    *(_OWORD *)(a1 + 16) = *v7;
    *(void *)(a1 + 32) = a2[5];
  }
}

void sub_215805620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((v19 & 1) == 0)
    {
LABEL_6:
      sub_215733368((uint64_t)&a11);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v19)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v18);
  goto LABEL_6;
}

double sub_215805668(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E040, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E040))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_215805BEC();
  sub_215805B30((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_215805B30((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E168, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E168, &dword_21572C000);
  __cxa_guard_release(&qword_26788E040);
LABEL_2:
  sub_215805EE8();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E17F;
  if (byte_26788E17F >= 0)
  {
    uint64_t v5 = &qword_26788E168;
  }
  else
  {
    unint64_t v4 = unk_26788E170;
    uint64_t v5 = (uint64_t *)qword_26788E168;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E1DF;
  size_t v7 = &qword_26788E1C8;
  if (byte_26788E1DF < 0)
  {
    uint64_t v6 = qword_26788E1D0;
    size_t v7 = (uint64_t *)qword_26788E1C8;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  std::string v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    size_t v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    int v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      unint64_t v22 = &__p;
    }
    else {
      unint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  int v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_215805A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E040);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E040);
  _Unwind_Resume(a1);
}

void sub_215805B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215805B30(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215805BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_215805BEC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885BC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885BC0))
  {
    return &stru_267885BA8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885BA8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885BA8, &dword_21572C000);
  __cxa_guard_release(&qword_267885BC0);
  return &stru_267885BA8;
}

void sub_215805CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885BC0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885BC0);
  _Unwind_Resume(a1);
}

void sub_215805CF0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E048, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E048))
  {
    sub_215805DC4();
    if (byte_26788E1C7 < 0)
    {
      sub_215738B0C(&xmmword_26788E180, (void *)xmmword_26788E1B0, *((unint64_t *)&xmmword_26788E1B0 + 1));
    }
    else
    {
      xmmword_26788E180 = xmmword_26788E1B0;
      qword_26788E190 = unk_26788E1C0;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788E180, &dword_21572C000);
    __cxa_guard_release(&qword_26788E048);
  }
}

void sub_215805DAC(_Unwind_Exception *a1)
{
}

void sub_215805DC4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E050, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E050))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cv::CVBuffer]", qword_26788E198);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_26788E198, &dword_21572C000);
    __cxa_guard_release(&qword_26788E050);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E058, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E058))
  {
    sub_215E19DF4((uint64_t)qword_26788E198, (uint64_t)&xmmword_26788E1B0);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_26788E1B0, &dword_21572C000);
    __cxa_guard_release(&qword_26788E058);
  }
}

void sub_215805EB8(_Unwind_Exception *a1)
{
}

void sub_215805ED0(_Unwind_Exception *a1)
{
}

void sub_215805EE8()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E060, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E060))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_215805BEC();
    sub_2158060E4((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_2158060E4((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E1C8, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E1C8, &dword_21572C000);
          __cxa_guard_release(&qword_26788E060);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_215806030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E060);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E060);
  _Unwind_Resume(a1);
}

void sub_2158060E4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215806184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_2158061A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885C20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885C20))
  {
    return &xmmword_267885C08;
  }
  uint64_t v1 = (char *)sub_215806288();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267885C08, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267885C18 = *((void *)v1 + 2);
    xmmword_267885C08 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885C08, &dword_21572C000);
  __cxa_guard_release(&qword_267885C20);
  return &xmmword_267885C08;
}

void sub_215806270(_Unwind_Exception *a1)
{
}

void *sub_215806288()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885C40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885C40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::DynamicBuffer]", qword_267885C28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885C28, &dword_21572C000);
    __cxa_guard_release(&qword_267885C40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885C60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885C60))
  {
    return &unk_267885C48;
  }
  sub_215E19DF4((uint64_t)qword_267885C28, (uint64_t)&unk_267885C48);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267885C48, &dword_21572C000);
  __cxa_guard_release(&qword_267885C60);
  return &unk_267885C48;
}

void sub_21580638C(_Unwind_Exception *a1)
{
}

void sub_2158063A4(_Unwind_Exception *a1)
{
}

uint64_t sub_2158063BC(uint64_t result)
{
  uint64_t v1 = result;
  long long v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215806438(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158064C4()
{
  return 1;
}

uint64_t sub_2158064CC(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2158064D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 1);
}

uint64_t sub_2158064F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  long long v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215806580(void *a1)
{
  *a1 = &unk_26C65AE70;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215806628()
{
  return 1;
}

uint64_t sub_215806630(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215806638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 1);
}

uint64_t sub_215806654(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  long long v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158066DC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 1)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_21580698C();
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      *(void *)&long long v14 = v4;
      *((void *)&v14 + 1) = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      long long v14 = v4;
    }
  }
  else
  {
    long long v14 = 0uLL;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v8 = v7 != 0;
  BOOL v9 = v7 == 0;
  if (!*(_DWORD *)(a2 + 28)) {
    BOOL v9 = 1;
  }
  if (v9) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  }
  if (v9) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(a2 + 24);
  }
  if (HIDWORD(v11) * HIDWORD(v10) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  unint64_t v12 = v10 | v8;
  __int16 v13 = *(_WORD *)(a2 + 52);
  if (*((void *)&v14 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 1uLL, memory_order_relaxed);
    *(_OWORD *)a1 = v14;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v13;
    if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(void))(**((void **)&v14 + 1) + 16))(*((void *)&v14 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v14 + 1));
    }
  }
  else
  {
    *(_OWORD *)a1 = (unint64_t)v14;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v13;
  }
}

void sub_215806940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_21580698C()
{
  sub_215805EE8();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E1C8, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void sub_2158069FC(char *__s, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = 0;
  sub_2157F25FC(v9, __s);
  uint64_t v11 = v9;
  uint64_t v12 = a2;
  __int16 v13 = v9;
  uint64_t v14 = a2;
  uint64_t v15 = a2;
  if (v10 != -1)
  {
    int v16 = &v11;
    ((void (*)(void **, _DWORD *))off_26C65AF58[v10])(&v16, v9);
    uint64_t v11 = v9;
    uint64_t v12 = a3;
    __int16 v13 = v9;
    uint64_t v14 = a3;
    uint64_t v15 = a3;
    if (v10 != -1)
    {
      int v16 = &v11;
      ((void (*)(void **, _DWORD *))off_26C65AF70[v10])(&v16, v9);
      uint64_t v11 = v9;
      uint64_t v12 = a4;
      __int16 v13 = v9;
      uint64_t v14 = a4;
      uint64_t v15 = a4;
      if (v10 != -1)
      {
        int v16 = &v11;
        ((void (*)(void **, _DWORD *))off_26C65AF58[v10])(&v16, v9);
        uint64_t v11 = v9;
        uint64_t v12 = a5;
        __int16 v13 = v9;
        uint64_t v14 = a5;
        uint64_t v15 = a5;
        if (v10 != -1)
        {
          int v16 = &v11;
          ((void (*)(void **, _DWORD *))off_26C65AF88[v10])(&v16, v9);
          sub_215806C64();
        }
        sub_215742D4C();
      }
      sub_215742D4C();
    }
    sub_215742D4C();
  }
  sub_215742D4C();
}

void sub_215806BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215806BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215806C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215806C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215806C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215806C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215806C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215806C64()
{
}

void sub_215806E94(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215806EB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_215806EFC(_DWORD ***a1)
{
  return sub_215806F18(**a1, (char *)(*a1)[1]);
}

void sub_215806F08(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_215806F18(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65ABE0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    int v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    int v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_21580700C(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  int8x16_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  __int16 v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65ABE0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_2158071C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215807208(uint64_t a1, uint64_t a2)
{
  int8x16_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    double result = sub_215807304((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  double result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_2158072FC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215807304(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  uint64_t v21 = v8;
  unint64_t v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      __int16 v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  __int16 v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  int v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215807504(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_215807518()
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885BE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885BE0))
  {
    sub_215732BF4(v6, "ConstSharedImage");
    uint64_t v1 = sub_2158077E4();
    sub_215807728((uint64_t)v1, (uint64_t)v8);
    uint64_t v2 = sub_2158061A0();
    sub_215807728((uint64_t)v2, (uint64_t)&__p);
    sub_21573A150(v5, (uint64_t)v8, 2uLL);
    sub_215E19EAC(v6, (uint64_t *)v5, &stru_267885BC8, v3, v4);
    sub_2157352DC(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885BC8, &dword_21572C000);
          __cxa_guard_release(&qword_267885BE0);
          return &stru_267885BC8;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  return &stru_267885BC8;
}

void sub_215807674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_267885BE0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_267885BE0);
  _Unwind_Resume(a1);
}

void sub_215807728(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_2158077C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_2158077E4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885C00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885C00))
  {
    return &stru_267885BE8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Dynamic]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885BE8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885BE8, &dword_21572C000);
  __cxa_guard_release(&qword_267885C00);
  return &stru_267885BE8;
}

void sub_2158078A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885C00);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885C00);
  _Unwind_Resume(a1);
}

void *sub_2158078E8(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65B1A0;
  char v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215807980(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int64x2_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C690, 0)) != 0)
  {
    char v7 = v3;
    uint64_t v8 = a2;
  }
  else
  {
    char v7 = 0;
    uint64_t v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      int8x16_t v4 = 0;
      return v4 != 0;
    }
  }
  int8x16_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_215807ADC(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65AFB0;
  char v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215807B74(void *a1)
{
  *a1 = &unk_26C65AFB0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215807C1C()
{
  return 2;
}

uint64_t sub_215807C24(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215807C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_215807C48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  char v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215807CD0(uint64_t a1, void *a2)
{
  int8x16_t v4 = (const void *)a2[1];
  size_t v5 = (std::__shared_weak_count *)a2[2];
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (unint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C690, 0)) == 0)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_215807F20((char *)&v9, (uint64_t)a2);
    std::logic_error::logic_error(exception, &v9);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  char v7 = a2 + 3;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = *v7;
    v9.__r_.__value_.__r.__words[2] = a2[5];
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    *(std::string *)(a1 + 16) = v9;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    *(_OWORD *)(a1 + 16) = *v7;
    *(void *)(a1 + 32) = a2[5];
  }
}

void sub_215807ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((v19 & 1) == 0)
    {
LABEL_6:
      sub_215733368((uint64_t)&a11);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v19)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v18);
  goto LABEL_6;
}

double sub_215807F20(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E068, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E068))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_2158084A4();
  sub_2158083E8((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_2158083E8((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E1E0, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E1E0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E068);
LABEL_2:
  sub_2158085A8();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E1F7;
  if (byte_26788E1F7 >= 0)
  {
    size_t v5 = &qword_26788E1E0;
  }
  else
  {
    unint64_t v4 = unk_26788E1E8;
    size_t v5 = (uint64_t *)qword_26788E1E0;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E20F;
  char v7 = &qword_26788E1F8;
  if (byte_26788E20F < 0)
  {
    uint64_t v6 = qword_26788E200;
    char v7 = (uint64_t *)qword_26788E1F8;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  std::string v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    size_t v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    int v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      unint64_t v22 = &__p;
    }
    else {
      unint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  int v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_215808308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E068);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E068);
  _Unwind_Resume(a1);
}

void sub_2158083BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158083E8(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215808488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_2158084A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885A20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885A20))
  {
    return &stru_267885A08;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885A08);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885A08, &dword_21572C000);
  __cxa_guard_release(&qword_267885A20);
  return &stru_267885A08;
}

void sub_215808568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885A20);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885A20);
  _Unwind_Resume(a1);
}

void sub_2158085A8()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E070, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E070))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_2158084A4();
    sub_2158087A4((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_2158087A4((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E1F8, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E1F8, &dword_21572C000);
          __cxa_guard_release(&qword_26788E070);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_2158086F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E070);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E070);
  _Unwind_Resume(a1);
}

void sub_2158087A4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215808844(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215808860(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158088DC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215808968()
{
  return 2;
}

uint64_t sub_215808970(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215808978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_215808994(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215808A24(void *a1)
{
  *a1 = &unk_26C65B1A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215808ACC()
{
  return 2;
}

uint64_t sub_215808AD4(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215808ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_215808AF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215808B80(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 2)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_215808E34();
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      *(void *)&long long v14 = v4;
      *((void *)&v14 + 1) = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      long long v14 = v4;
    }
  }
  else
  {
    long long v14 = 0uLL;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v8 = v7 != 0;
  BOOL v9 = v7 == 0;
  if (!*(_DWORD *)(a2 + 28)) {
    BOOL v9 = 1;
  }
  if (v9) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  }
  if (v9) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(a2 + 24);
  }
  if (HIDWORD(v11) * HIDWORD(v10) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  unint64_t v12 = v10 | v8;
  __int16 v13 = *(_WORD *)(a2 + 52);
  if (*((void *)&v14 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 1uLL, memory_order_relaxed);
    *(_OWORD *)a1 = v14;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v13;
    if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(void))(**((void **)&v14 + 1) + 16))(*((void *)&v14 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v14 + 1));
    }
  }
  else
  {
    *(_OWORD *)a1 = (unint64_t)v14;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v13;
  }
}

void sub_215808DE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_215808E34()
{
  sub_2158085A8();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E1F8, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_215808EA4(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65B488;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215808F3C(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C6A8, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      unint64_t v4 = 0;
      return v4 != 0;
    }
  }
  unint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_215809098(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65B298;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215809130(void *a1)
{
  *a1 = &unk_26C65B298;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158091D8()
{
  return 3;
}

uint64_t sub_2158091E0(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_2158091E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_215809204(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580928C(uint64_t a1, void *a2)
{
  unint64_t v4 = (const void *)a2[1];
  size_t v5 = (std::__shared_weak_count *)a2[2];
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C6A8, 0)) == 0)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2158094DC((char *)&v9, (uint64_t)a2);
    std::logic_error::logic_error(exception, &v9);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = a2 + 3;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = *v7;
    v9.__r_.__value_.__r.__words[2] = a2[5];
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    *(std::string *)(a1 + 16) = v9;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    *(_OWORD *)(a1 + 16) = *v7;
    *(void *)(a1 + 32) = a2[5];
  }
}

void sub_215809494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((v19 & 1) == 0)
    {
LABEL_6:
      sub_215733368((uint64_t)&a11);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v19)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v18);
  goto LABEL_6;
}

double sub_2158094DC(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E078, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E078))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_215809A60();
  sub_2158099A4((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_2158099A4((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E210, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E210, &dword_21572C000);
  __cxa_guard_release(&qword_26788E078);
LABEL_2:
  sub_215809B64();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E227;
  if (byte_26788E227 >= 0)
  {
    size_t v5 = &qword_26788E210;
  }
  else
  {
    unint64_t v4 = unk_26788E218;
    size_t v5 = (uint64_t *)qword_26788E210;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E23F;
  int v7 = &qword_26788E228;
  if (byte_26788E23F < 0)
  {
    uint64_t v6 = qword_26788E230;
    int v7 = (uint64_t *)qword_26788E228;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  std::string v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    unint64_t v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    int v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      unint64_t v22 = &__p;
    }
    else {
      unint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  int v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_2158098C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E078);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E078);
  _Unwind_Resume(a1);
}

void sub_215809978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158099A4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215809A44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_215809A60()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885A40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885A40))
  {
    return &stru_267885A28;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885A28);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885A28, &dword_21572C000);
  __cxa_guard_release(&qword_267885A40);
  return &stru_267885A28;
}

void sub_215809B24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885A40);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885A40);
  _Unwind_Resume(a1);
}

void sub_215809B64()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E080, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E080))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_215809A60();
    sub_215809D60((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_215809D60((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E228, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E228, &dword_21572C000);
          __cxa_guard_release(&qword_26788E080);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_215809CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E080);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E080);
  _Unwind_Resume(a1);
}

void sub_215809D60(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215809E00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215809E1C(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215809E98(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215809F24()
{
  return 3;
}

uint64_t sub_215809F2C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215809F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_215809F50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215809FE0(void *a1)
{
  *a1 = &unk_26C65B488;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580A088()
{
  return 3;
}

uint64_t sub_21580A090(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_21580A098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 2);
}

uint64_t sub_21580A0B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580A13C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 3)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_21580A3F0();
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      *(void *)&long long v14 = v4;
      *((void *)&v14 + 1) = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      long long v14 = v4;
    }
  }
  else
  {
    long long v14 = 0uLL;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v8 = v7 != 0;
  BOOL v9 = v7 == 0;
  if (!*(_DWORD *)(a2 + 28)) {
    BOOL v9 = 1;
  }
  if (v9) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  }
  if (v9) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(a2 + 24);
  }
  if (HIDWORD(v11) * HIDWORD(v10) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  unint64_t v12 = v10 | v8;
  __int16 v13 = *(_WORD *)(a2 + 52);
  if (*((void *)&v14 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 1uLL, memory_order_relaxed);
    *(_OWORD *)a1 = v14;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v13;
    if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(void))(**((void **)&v14 + 1) + 16))(*((void *)&v14 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v14 + 1));
    }
  }
  else
  {
    *(_OWORD *)a1 = (unint64_t)v14;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v13;
  }
}

void sub_21580A3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_21580A3F0()
{
  sub_215809B64();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E228, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_21580A460(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65B770;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21580A4F8(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C6C0, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      unint64_t v4 = 0;
      return v4 != 0;
    }
  }
  unint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_21580A654(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65B580;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580A6EC(void *a1)
{
  *a1 = &unk_26C65B580;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580A794()
{
  return 4;
}

uint64_t sub_21580A79C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_21580A7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 4);
}

uint64_t sub_21580A7C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580A848(uint64_t a1, void *a2)
{
  unint64_t v4 = (const void *)a2[1];
  size_t v5 = (std::__shared_weak_count *)a2[2];
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C6C0, 0)) == 0)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21580AA98((char *)&v9, (uint64_t)a2);
    std::logic_error::logic_error(exception, &v9);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = a2 + 3;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(_OWORD *)&v9.__r_.__value_.__l.__data_ = *v7;
    v9.__r_.__value_.__r.__words[2] = a2[5];
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    *(std::string *)(a1 + 16) = v9;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    *(_OWORD *)(a1 + 16) = *v7;
    *(void *)(a1 + 32) = a2[5];
  }
}

void sub_21580AA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((v19 & 1) == 0)
    {
LABEL_6:
      sub_215733368((uint64_t)&a11);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v19)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v18);
  goto LABEL_6;
}

double sub_21580AA98(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E088, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E088))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_21580B01C();
  sub_21580AF60((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_21580AF60((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E240, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E240, &dword_21572C000);
  __cxa_guard_release(&qword_26788E088);
LABEL_2:
  sub_21580B120();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E257;
  if (byte_26788E257 >= 0)
  {
    size_t v5 = &qword_26788E240;
  }
  else
  {
    unint64_t v4 = unk_26788E248;
    size_t v5 = (uint64_t *)qword_26788E240;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E26F;
  int v7 = &qword_26788E258;
  if (byte_26788E26F < 0)
  {
    uint64_t v6 = qword_26788E260;
    int v7 = (uint64_t *)qword_26788E258;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  std::string v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    unint64_t v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    int v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      unint64_t v22 = &__p;
    }
    else {
      unint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  int v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_21580AE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E088);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E088);
  _Unwind_Resume(a1);
}

void sub_21580AF34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21580AF60(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21580B000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_21580B01C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885A60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885A60))
  {
    return &stru_267885A48;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Gray32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885A48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885A48, &dword_21572C000);
  __cxa_guard_release(&qword_267885A60);
  return &stru_267885A48;
}

void sub_21580B0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885A60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885A60);
  _Unwind_Resume(a1);
}

void sub_21580B120()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E090, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E090))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_21580B01C();
    sub_21580B31C((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_21580B31C((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E258, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E258, &dword_21572C000);
          __cxa_guard_release(&qword_26788E090);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_21580B268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E090);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E090);
  _Unwind_Resume(a1);
}

void sub_21580B31C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21580B3BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21580B3D8(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580B454(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580B4E0()
{
  return 4;
}

uint64_t sub_21580B4E8(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_21580B4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 4);
}

uint64_t sub_21580B50C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21580B59C(void *a1)
{
  *a1 = &unk_26C65B770;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580B644()
{
  return 4;
}

uint64_t sub_21580B64C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_21580B654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 2, a1 + 32, 2, a1 + 40, 4);
}

uint64_t sub_21580B670(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580B6F8(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 4)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_21580B9AC();
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      *(void *)&long long v14 = v4;
      *((void *)&v14 + 1) = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      long long v14 = v4;
    }
  }
  else
  {
    long long v14 = 0uLL;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v8 = v7 != 0;
  BOOL v9 = v7 == 0;
  if (!*(_DWORD *)(a2 + 28)) {
    BOOL v9 = 1;
  }
  if (v9) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  }
  if (v9) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(a2 + 24);
  }
  if (HIDWORD(v11) * HIDWORD(v10) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  unint64_t v12 = v10 | v8;
  __int16 v13 = *(_WORD *)(a2 + 52);
  if (*((void *)&v14 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 1uLL, memory_order_relaxed);
    *(_OWORD *)a1 = v14;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v13;
    if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(void))(**((void **)&v14 + 1) + 16))(*((void *)&v14 + 1));
      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v14 + 1));
    }
  }
  else
  {
    *(_OWORD *)a1 = (unint64_t)v14;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v13;
  }
}

void sub_21580B960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

void sub_21580B9AC()
{
  sub_21580B120();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E258, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_21580BA1C(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65BA58;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21580BAB4(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C6D8, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      unint64_t v4 = 0;
      return v4 != 0;
    }
  }
  unint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_21580BC10(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65B868;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580BCA8(void *a1)
{
  *a1 = &unk_26C65B868;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580BD50()
{
  return 5;
}

uint64_t sub_21580BD58(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580BD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_21580BD7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580BE04(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C6D8, 0)) == 0)
  {
    long long v14 = 0;
    uint64_t v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21580C054(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = (_OWORD *)(a2 + 24);
  long long v14 = v6;
  uint64_t v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)unint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_21580C00C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_21580C054(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E098, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E098))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_21580C5D8();
  sub_21580C51C((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_21580C51C((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E270, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E270, &dword_21572C000);
  __cxa_guard_release(&qword_26788E098);
LABEL_2:
  sub_21580C6DC();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E287;
  if (byte_26788E287 >= 0)
  {
    size_t v5 = &qword_26788E270;
  }
  else
  {
    unint64_t v4 = unk_26788E278;
    size_t v5 = (uint64_t *)qword_26788E270;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E29F;
  int v7 = &qword_26788E288;
  if (byte_26788E29F < 0)
  {
    uint64_t v6 = qword_26788E290;
    int v7 = (uint64_t *)qword_26788E288;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    int v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      unint64_t v22 = &__p;
    }
    else {
      unint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  int v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_21580C43C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E098);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E098);
  _Unwind_Resume(a1);
}

void sub_21580C4F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21580C51C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21580C5BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_21580C5D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885A80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885A80))
  {
    return &stru_267885A68;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885A68);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885A68, &dword_21572C000);
  __cxa_guard_release(&qword_267885A80);
  return &stru_267885A68;
}

void sub_21580C69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885A80);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885A80);
  _Unwind_Resume(a1);
}

void sub_21580C6DC()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E0A0))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_21580C5D8();
    sub_21580C8D8((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_21580C8D8((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E288, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E288, &dword_21572C000);
          __cxa_guard_release(&qword_26788E0A0);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_21580C824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0A0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E0A0);
  _Unwind_Resume(a1);
}

void sub_21580C8D8(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21580C978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21580C994(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580CA10(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580CA9C()
{
  return 5;
}

uint64_t sub_21580CAA4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580CAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_21580CAC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21580CB58(void *a1)
{
  *a1 = &unk_26C65BA58;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580CC00()
{
  return 5;
}

uint64_t sub_21580CC08(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580CC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_21580CC2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580CCB4(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 5)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_21580CFE8();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v20 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v10 = v7 == 0;
  BOOL v8 = v7 != 0;
  int v9 = v10;
  if (!*(_DWORD *)(a2 + 28)) {
    int v9 = 1;
  }
  BOOL v10 = v9 == 0;
  if (v9) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  }
  uint64_t v12 = v11 | (2 * v8);
  unint64_t v13 = *(void *)(a2 + 24);
  if (!v10) {
    unint64_t v13 = 0;
  }
  LODWORD(v21) = 2;
  *(void *)((char *)&v21 + 4) = v13;
  unint64_t v14 = v13;
  uint64_t v15 = v21;
  unint64_t v16 = HIDWORD(v13);
  LODWORD(v22) = 1;
  HIDWORD(v22) = v12;
  unint64_t v17 = HIDWORD(v11);
  if (HIDWORD(v13) * HIDWORD(v11) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v18 = *(_WORD *)(a2 + 52);
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 36) = v22;
  *(_DWORD *)(a1 + 44) = v17;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v12;
  *(_WORD *)(a1 + 64) = v18;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
}

void sub_21580CF9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_21580CFE8()
{
  sub_21580C6DC();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E288, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_21580D058(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65BD40;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21580D0F0(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C6F0, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_21580D24C(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65BB50;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580D2E4(void *a1)
{
  *a1 = &unk_26C65BB50;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580D38C()
{
  return 7;
}

uint64_t sub_21580D394(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580D39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21580D3B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580D440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C6F0, 0)) == 0)
  {
    unint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21580D690(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = (_OWORD *)(a2 + 24);
  unint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)uint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_21580D648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_21580D690(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0A8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E0A8))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_21580DC14();
  sub_21580DB58((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_21580DB58((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E2A0, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E2A0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E0A8);
LABEL_2:
  sub_21580DD18();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E2B7;
  if (byte_26788E2B7 >= 0)
  {
    size_t v5 = &qword_26788E2A0;
  }
  else
  {
    unint64_t v4 = unk_26788E2A8;
    size_t v5 = (uint64_t *)qword_26788E2A0;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E2CF;
  int v7 = &qword_26788E2B8;
  if (byte_26788E2CF < 0)
  {
    uint64_t v6 = qword_26788E2C0;
    int v7 = (uint64_t *)qword_26788E2B8;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_21580DA78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0A8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E0A8);
  _Unwind_Resume(a1);
}

void sub_21580DB2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21580DB58(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21580DBF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_21580DC14()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885AA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885AA0))
  {
    return &stru_267885A88;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885A88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885A88, &dword_21572C000);
  __cxa_guard_release(&qword_267885AA0);
  return &stru_267885A88;
}

void sub_21580DCD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885AA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885AA0);
  _Unwind_Resume(a1);
}

void sub_21580DD18()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E0B0))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_21580DC14();
    sub_21580DF14((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_21580DF14((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E2B8, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E2B8, &dword_21572C000);
          __cxa_guard_release(&qword_26788E0B0);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_21580DE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0B0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E0B0);
  _Unwind_Resume(a1);
}

void sub_21580DF14(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21580DFB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21580DFD0(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580E04C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580E0D8()
{
  return 7;
}

uint64_t sub_21580E0E0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580E0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21580E104(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21580E194(void *a1)
{
  *a1 = &unk_26C65BD40;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580E23C()
{
  return 7;
}

uint64_t sub_21580E244(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580E24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21580E268(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580E2F0(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 7)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_21580E628();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v20 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v10 = v7 == 0;
  BOOL v8 = v7 != 0;
  int v9 = v10;
  if (!*(_DWORD *)(a2 + 28)) {
    int v9 = 1;
  }
  BOOL v10 = v9 == 0;
  if (v9) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  }
  uint64_t v12 = v11 | (2 * v8);
  unint64_t v13 = *(void *)(a2 + 24);
  if (!v10) {
    unint64_t v13 = 0;
  }
  LODWORD(v21) = 2;
  *(void *)((char *)&v21 + 4) = v13;
  unint64_t v14 = v13;
  uint64_t v15 = v21;
  unint64_t v16 = HIDWORD(v13);
  LODWORD(v22) = 1;
  HIDWORD(v22) = v12;
  unint64_t v17 = HIDWORD(v11);
  if (HIDWORD(v13) * HIDWORD(v11) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v18 = *(_WORD *)(a2 + 52);
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 36) = v22;
  *(_DWORD *)(a1 + 44) = v17;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v12;
  *(_WORD *)(a1 + 64) = v18;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
}

void sub_21580E5DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_21580E628()
{
  sub_21580DD18();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E2B8, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_21580E698(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65C028;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21580E730(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C708, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_21580E88C(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65BE38;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580E924(void *a1)
{
  *a1 = &unk_26C65BE38;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580E9CC()
{
  return 8;
}

uint64_t sub_21580E9D4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580E9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_21580E9F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580EA80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C708, 0)) == 0)
  {
    unint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21580ECD0(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = (_OWORD *)(a2 + 24);
  unint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)uint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_21580EC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_21580ECD0(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0B8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E0B8))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_21580F254();
  sub_21580F198((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_21580F198((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E2D0, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E2D0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E0B8);
LABEL_2:
  sub_21580F358();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E2E7;
  if (byte_26788E2E7 >= 0)
  {
    size_t v5 = &qword_26788E2D0;
  }
  else
  {
    unint64_t v4 = unk_26788E2D8;
    size_t v5 = (uint64_t *)qword_26788E2D0;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E2FF;
  int v7 = &qword_26788E2E8;
  if (byte_26788E2FF < 0)
  {
    uint64_t v6 = qword_26788E2F0;
    int v7 = (uint64_t *)qword_26788E2E8;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_21580F0B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E0B8);
  _Unwind_Resume(a1);
}

void sub_21580F16C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_21580F198(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21580F238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_21580F254()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885AC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885AC0))
  {
    return &stru_267885AA8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885AA8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885AA8, &dword_21572C000);
  __cxa_guard_release(&qword_267885AC0);
  return &stru_267885AA8;
}

void sub_21580F318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885AC0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885AC0);
  _Unwind_Resume(a1);
}

void sub_21580F358()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E0C0))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_21580F254();
    sub_21580F554((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_21580F554((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E2E8, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E2E8, &dword_21572C000);
          __cxa_guard_release(&qword_26788E0C0);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_21580F4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0C0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E0C0);
  _Unwind_Resume(a1);
}

void sub_21580F554(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21580F5F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21580F610(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580F68C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580F718()
{
  return 8;
}

uint64_t sub_21580F720(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580F728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_21580F744(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21580F7D4(void *a1)
{
  *a1 = &unk_26C65C028;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21580F87C()
{
  return 8;
}

uint64_t sub_21580F884(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21580F88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_21580F8A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_21580F930(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 8)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_21580FC68();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v20 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v10 = v7 == 0;
  BOOL v8 = v7 != 0;
  int v9 = v10;
  if (!*(_DWORD *)(a2 + 28)) {
    int v9 = 1;
  }
  BOOL v10 = v9 == 0;
  if (v9) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  }
  uint64_t v12 = v11 | (2 * v8);
  unint64_t v13 = *(void *)(a2 + 24);
  if (!v10) {
    unint64_t v13 = 0;
  }
  LODWORD(v21) = 2;
  *(void *)((char *)&v21 + 4) = v13;
  unint64_t v14 = v13;
  uint64_t v15 = v21;
  unint64_t v16 = HIDWORD(v13);
  LODWORD(v22) = 1;
  HIDWORD(v22) = v12;
  unint64_t v17 = HIDWORD(v11);
  if (HIDWORD(v13) * HIDWORD(v11) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v18 = *(_WORD *)(a2 + 52);
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 36) = v22;
  *(_DWORD *)(a1 + 44) = v17;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v12;
  *(_WORD *)(a1 + 64) = v18;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
}

void sub_21580FC1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_21580FC68()
{
  sub_21580F358();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E2E8, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_21580FCD8(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65C310;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_21580FD70(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C720, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_21580FECC(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65C120;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21580FF64(void *a1)
{
  *a1 = &unk_26C65C120;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_21581000C()
{
  return 21;
}

uint64_t sub_215810014(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_21581001C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215810038(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158100C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C720, 0)) == 0)
  {
    unint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_215810310(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = (_OWORD *)(a2 + 24);
  unint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)uint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_2158102C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_215810310(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0C8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E0C8))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_215810894();
  sub_2158107D8((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_2158107D8((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E300, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E300, &dword_21572C000);
  __cxa_guard_release(&qword_26788E0C8);
LABEL_2:
  sub_215810998();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E317;
  if (byte_26788E317 >= 0)
  {
    size_t v5 = &qword_26788E300;
  }
  else
  {
    unint64_t v4 = unk_26788E308;
    size_t v5 = (uint64_t *)qword_26788E300;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E32F;
  int v7 = &qword_26788E318;
  if (byte_26788E32F < 0)
  {
    uint64_t v6 = qword_26788E320;
    int v7 = (uint64_t *)qword_26788E318;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_2158106F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0C8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E0C8);
  _Unwind_Resume(a1);
}

void sub_2158107AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158107D8(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215810878(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_215810894()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885AE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885AE0))
  {
    return &stru_267885AC8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885AC8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885AC8, &dword_21572C000);
  __cxa_guard_release(&qword_267885AE0);
  return &stru_267885AC8;
}

void sub_215810958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885AE0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885AE0);
  _Unwind_Resume(a1);
}

void sub_215810998()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E0D0))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_215810894();
    sub_215810B94((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_215810B94((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E318, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E318, &dword_21572C000);
          __cxa_guard_release(&qword_26788E0D0);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_215810AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0D0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E0D0);
  _Unwind_Resume(a1);
}

void sub_215810B94(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215810C34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215810C50(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215810CCC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215810D58()
{
  return 21;
}

uint64_t sub_215810D60(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215810D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215810D84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215810E14(void *a1)
{
  *a1 = &unk_26C65C310;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215810EBC()
{
  return 21;
}

uint64_t sub_215810EC4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215810ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215810EE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215810F70(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 21)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_2158112A4();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v18 = v4;
      uint64_t v19 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v19 = 0;
    }
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  BOOL v7 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24)) {
    uint64_t v8 = 3;
  }
  else {
    uint64_t v8 = 0;
  }
  if (!*(_DWORD *)(a2 + 28)) {
    BOOL v7 = 1;
  }
  BOOL v9 = !v7;
  if (v7) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  }
  unint64_t v11 = v10 | v8;
  unint64_t v12 = *(void *)(a2 + 24);
  if (!v9) {
    unint64_t v12 = 0;
  }
  *(void *)((char *)&v20 + 4) = v12;
  unint64_t v13 = v12;
  LODWORD(v20) = 3;
  uint64_t v14 = v20;
  unint64_t v15 = HIDWORD(v12);
  LODWORD(v21) = 1;
  HIDWORD(v21) = v11;
  unint64_t v16 = HIDWORD(v10);
  if (HIDWORD(v12) * HIDWORD(v10) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v17 = *(_WORD *)(a2 + 52);
  if (v19) {
    atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v19;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v14;
  *(_DWORD *)(a1 + 32) = v15;
  *(void *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v16;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v17;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
}

void sub_215811258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2158112A4()
{
  sub_215810998();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E318, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_215811314(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65C5F8;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_2158113AC(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C738, 0)) != 0)
  {
    BOOL v7 = v3;
    uint64_t v8 = a2;
  }
  else
  {
    BOOL v7 = 0;
    uint64_t v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_215811508(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65C408;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158115A0(void *a1)
{
  *a1 = &unk_26C65C408;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215811648()
{
  return 22;
}

uint64_t sub_215811650(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215811658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215811674(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158116FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C738, 0)) == 0)
  {
    uint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21581194C(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  BOOL v7 = (_OWORD *)(a2 + 24);
  uint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)unint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_215811904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_21581194C(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0D8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E0D8))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_215811ED0();
  sub_215811E14((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_215811E14((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E330, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E330, &dword_21572C000);
  __cxa_guard_release(&qword_26788E0D8);
LABEL_2:
  sub_215811FD4();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E347;
  if (byte_26788E347 >= 0)
  {
    size_t v5 = &qword_26788E330;
  }
  else
  {
    unint64_t v4 = unk_26788E338;
    size_t v5 = (uint64_t *)qword_26788E330;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E35F;
  BOOL v7 = &qword_26788E348;
  if (byte_26788E35F < 0)
  {
    uint64_t v6 = qword_26788E350;
    BOOL v7 = (uint64_t *)qword_26788E348;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_215811D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E0D8);
  _Unwind_Resume(a1);
}

void sub_215811DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215811E14(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215811EB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_215811ED0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885B00, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885B00))
  {
    return &stru_267885AE8;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885AE8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885AE8, &dword_21572C000);
  __cxa_guard_release(&qword_267885B00);
  return &stru_267885AE8;
}

void sub_215811F94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885B00);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885B00);
  _Unwind_Resume(a1);
}

void sub_215811FD4()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E0E0))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_215811ED0();
    sub_2158121D0((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_2158121D0((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E348, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E348, &dword_21572C000);
          __cxa_guard_release(&qword_26788E0E0);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_21581211C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0E0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E0E0);
  _Unwind_Resume(a1);
}

void sub_2158121D0(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215812270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21581228C(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215812308(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215812394()
{
  return 22;
}

uint64_t sub_21581239C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158123A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158123C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215812450(void *a1)
{
  *a1 = &unk_26C65C5F8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158124F8()
{
  return 22;
}

uint64_t sub_215812500(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215812508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_215812524(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158125AC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 22)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_2158128E4();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v18 = v4;
      uint64_t v19 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v19 = 0;
    }
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  BOOL v7 = *(_DWORD *)(a2 + 24) == 0;
  if (*(_DWORD *)(a2 + 24)) {
    uint64_t v8 = 3;
  }
  else {
    uint64_t v8 = 0;
  }
  if (!*(_DWORD *)(a2 + 28)) {
    BOOL v7 = 1;
  }
  BOOL v9 = !v7;
  if (v7) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  }
  unint64_t v11 = v10 | v8;
  unint64_t v12 = *(void *)(a2 + 24);
  if (!v9) {
    unint64_t v12 = 0;
  }
  *(void *)((char *)&v20 + 4) = v12;
  unint64_t v13 = v12;
  LODWORD(v20) = 3;
  uint64_t v14 = v20;
  unint64_t v15 = HIDWORD(v12);
  LODWORD(v21) = 1;
  HIDWORD(v21) = v10 | v8;
  unint64_t v16 = HIDWORD(v10);
  if (HIDWORD(v12) * HIDWORD(v10) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v17 = *(_WORD *)(a2 + 52);
  if (v19) {
    atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v19;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v14;
  *(_DWORD *)(a1 + 32) = v15;
  *(void *)(a1 + 36) = v21;
  *(_DWORD *)(a1 + 44) = v16;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v11;
  *(_WORD *)(a1 + 64) = v17;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
}

void sub_215812898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2158128E4()
{
  sub_215811FD4();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E348, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_215812954(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65C8E0;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_2158129EC(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C750, 0)) != 0)
  {
    BOOL v7 = v3;
    uint64_t v8 = a2;
  }
  else
  {
    BOOL v7 = 0;
    uint64_t v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_215812B48(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65C6F0;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215812BE0(void *a1)
{
  *a1 = &unk_26C65C6F0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215812C88()
{
  return 25;
}

uint64_t sub_215812C90(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215812C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215812CB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215812D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C750, 0)) == 0)
  {
    uint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_215812F8C(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  BOOL v7 = (_OWORD *)(a2 + 24);
  uint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)unint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_215812F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_215812F8C(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0E8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E0E8))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_215813510();
  sub_215813454((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_215813454((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E360, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E360, &dword_21572C000);
  __cxa_guard_release(&qword_26788E0E8);
LABEL_2:
  sub_215813614();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E377;
  if (byte_26788E377 >= 0)
  {
    size_t v5 = &qword_26788E360;
  }
  else
  {
    unint64_t v4 = unk_26788E368;
    size_t v5 = (uint64_t *)qword_26788E360;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E38F;
  BOOL v7 = &qword_26788E378;
  if (byte_26788E38F < 0)
  {
    uint64_t v6 = qword_26788E380;
    BOOL v7 = (uint64_t *)qword_26788E378;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_215813374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0E8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E0E8);
  _Unwind_Resume(a1);
}

void sub_215813428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215813454(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_2158134F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_215813510()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885B20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885B20))
  {
    return &stru_267885B08;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885B08);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885B08, &dword_21572C000);
  __cxa_guard_release(&qword_267885B20);
  return &stru_267885B08;
}

void sub_2158135D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885B20);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885B20);
  _Unwind_Resume(a1);
}

void sub_215813614()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E0F0))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_215813510();
    sub_215813810((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_215813810((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E378, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E378, &dword_21572C000);
          __cxa_guard_release(&qword_26788E0F0);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_21581375C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0F0);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E0F0);
  _Unwind_Resume(a1);
}

void sub_215813810(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_2158138B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158138CC(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215813948(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158139D4()
{
  return 25;
}

uint64_t sub_2158139DC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158139E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215813A00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215813A90(void *a1)
{
  *a1 = &unk_26C65C8E0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215813B38()
{
  return 25;
}

uint64_t sub_215813B40(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215813B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215813B64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215813BEC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 25)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_215813F20();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v20 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v10 = v7 == 0;
  BOOL v8 = v7 != 0;
  int v9 = v10;
  if (!*(_DWORD *)(a2 + 28)) {
    int v9 = 1;
  }
  BOOL v10 = v9 == 0;
  if (v9) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  }
  uint64_t v12 = v11 | (4 * v8);
  unint64_t v13 = *(void *)(a2 + 24);
  if (!v10) {
    unint64_t v13 = 0;
  }
  LODWORD(v21) = 4;
  *(void *)((char *)&v21 + 4) = v13;
  unint64_t v14 = v13;
  uint64_t v15 = v21;
  unint64_t v16 = HIDWORD(v13);
  LODWORD(v22) = 1;
  HIDWORD(v22) = v12;
  unint64_t v17 = HIDWORD(v11);
  if (HIDWORD(v13) * HIDWORD(v11) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v18 = *(_WORD *)(a2 + 52);
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 36) = v22;
  *(_DWORD *)(a1 + 44) = v17;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v12;
  *(_WORD *)(a1 + 64) = v18;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
}

void sub_215813ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_215813F20()
{
  sub_215813614();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E378, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_215813F90(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65CBC8;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215814028(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C768, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_215814184(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65C9D8;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581421C(void *a1)
{
  *a1 = &unk_26C65C9D8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158142C4()
{
  return 31;
}

uint64_t sub_2158142CC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158142D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158142F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215814378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C768, 0)) == 0)
  {
    unint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_2158145C8(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = (_OWORD *)(a2 + 24);
  unint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)uint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_215814580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_2158145C8(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E0F8, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E0F8))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_215814B4C();
  sub_215814A90((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_215814A90((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E390, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E390, &dword_21572C000);
  __cxa_guard_release(&qword_26788E0F8);
LABEL_2:
  sub_215814C50();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E3A7;
  if (byte_26788E3A7 >= 0)
  {
    size_t v5 = &qword_26788E390;
  }
  else
  {
    unint64_t v4 = unk_26788E398;
    size_t v5 = (uint64_t *)qword_26788E390;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E3BF;
  int v7 = &qword_26788E3A8;
  if (byte_26788E3BF < 0)
  {
    uint64_t v6 = qword_26788E3B0;
    int v7 = (uint64_t *)qword_26788E3A8;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_2158149B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E0F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E0F8);
  _Unwind_Resume(a1);
}

void sub_215814A64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215814A90(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215814B30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_215814B4C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885B40, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885B40))
  {
    return &stru_267885B28;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba16f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885B28);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885B28, &dword_21572C000);
  __cxa_guard_release(&qword_267885B40);
  return &stru_267885B28;
}

void sub_215814C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885B40);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885B40);
  _Unwind_Resume(a1);
}

void sub_215814C50()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E100, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E100))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_215814B4C();
    sub_215814E4C((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_215814E4C((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E3A8, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E3A8, &dword_21572C000);
          __cxa_guard_release(&qword_26788E100);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_215814D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E100);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E100);
  _Unwind_Resume(a1);
}

void sub_215814E4C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215814EEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215814F08(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215814F84(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215815010()
{
  return 31;
}

uint64_t sub_215815018(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215815020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21581503C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_2158150CC(void *a1)
{
  *a1 = &unk_26C65CBC8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215815174()
{
  return 31;
}

uint64_t sub_21581517C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215815184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158151A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215815228(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 31)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_215815560();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v20 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v10 = v7 == 0;
  BOOL v8 = v7 != 0;
  int v9 = v10;
  if (!*(_DWORD *)(a2 + 28)) {
    int v9 = 1;
  }
  BOOL v10 = v9 == 0;
  if (v9) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  }
  uint64_t v12 = v11 | (4 * v8);
  unint64_t v13 = *(void *)(a2 + 24);
  if (!v10) {
    unint64_t v13 = 0;
  }
  LODWORD(v21) = 4;
  *(void *)((char *)&v21 + 4) = v13;
  unint64_t v14 = v13;
  uint64_t v15 = v21;
  unint64_t v16 = HIDWORD(v13);
  LODWORD(v22) = 1;
  HIDWORD(v22) = v12;
  unint64_t v17 = HIDWORD(v11);
  if (HIDWORD(v13) * HIDWORD(v11) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v18 = *(_WORD *)(a2 + 52);
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 36) = v22;
  *(_DWORD *)(a1 + 44) = v17;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v12;
  *(_WORD *)(a1 + 64) = v18;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
}

void sub_215815514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_215815560()
{
  sub_215814C50();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E3A8, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_2158155D0(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65CEB0;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215815668(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C780, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_2158157C4(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65CCC0;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581585C(void *a1)
{
  *a1 = &unk_26C65CCC0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215815904()
{
  return 32;
}

uint64_t sub_21581590C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215815914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_215815930(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158159B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C780, 0)) == 0)
  {
    unint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_215815C08(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = (_OWORD *)(a2 + 24);
  unint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)uint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_215815BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_215815C08(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E108, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E108))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_21581618C();
  sub_2158160D0((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_2158160D0((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E3C0, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E3C0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E108);
LABEL_2:
  sub_215816290();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E3D7;
  if (byte_26788E3D7 >= 0)
  {
    size_t v5 = &qword_26788E3C0;
  }
  else
  {
    unint64_t v4 = unk_26788E3C8;
    size_t v5 = (uint64_t *)qword_26788E3C0;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E3EF;
  int v7 = &qword_26788E3D8;
  if (byte_26788E3EF < 0)
  {
    uint64_t v6 = qword_26788E3E0;
    int v7 = (uint64_t *)qword_26788E3D8;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_215815FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E108);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E108);
  _Unwind_Resume(a1);
}

void sub_2158160A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158160D0(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215816170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_21581618C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885B60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885B60))
  {
    return &stru_267885B48;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba32f]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885B48);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885B48, &dword_21572C000);
  __cxa_guard_release(&qword_267885B60);
  return &stru_267885B48;
}

void sub_215816250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885B60);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885B60);
  _Unwind_Resume(a1);
}

void sub_215816290()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E110, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E110))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_21581618C();
    sub_21581648C((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_21581648C((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E3D8, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E3D8, &dword_21572C000);
          __cxa_guard_release(&qword_26788E110);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_2158163D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E110);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E110);
  _Unwind_Resume(a1);
}

void sub_21581648C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_21581652C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215816548(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158165C4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215816650()
{
  return 32;
}

uint64_t sub_215816658(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215816660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_21581667C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_21581670C(void *a1)
{
  *a1 = &unk_26C65CEB0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158167B4()
{
  return 32;
}

uint64_t sub_2158167BC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158167C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 4);
}

uint64_t sub_2158167E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215816868(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 32)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_215816BA0();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v20 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v10 = v7 == 0;
  BOOL v8 = v7 != 0;
  int v9 = v10;
  if (!*(_DWORD *)(a2 + 28)) {
    int v9 = 1;
  }
  BOOL v10 = v9 == 0;
  if (v9) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = ((unint64_t)*(unsigned int *)(a2 + 32) << 30) & 0x3FFFFFFF00000000;
  }
  uint64_t v12 = v11 | (4 * v8);
  unint64_t v13 = *(void *)(a2 + 24);
  if (!v10) {
    unint64_t v13 = 0;
  }
  LODWORD(v21) = 4;
  *(void *)((char *)&v21 + 4) = v13;
  unint64_t v14 = v13;
  uint64_t v15 = v21;
  unint64_t v16 = HIDWORD(v13);
  LODWORD(v22) = 1;
  HIDWORD(v22) = v12;
  unint64_t v17 = HIDWORD(v11);
  if (HIDWORD(v13) * HIDWORD(v11) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v18 = *(_WORD *)(a2 + 52);
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 36) = v22;
  *(_DWORD *)(a1 + 44) = v17;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v12;
  *(_WORD *)(a1 + 64) = v18;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
}

void sub_215816B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_215816BA0()
{
  sub_215816290();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E3D8, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_215816C10(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65D198;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_215816CA8(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C798, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_215816E04(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65CFA8;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215816E9C(void *a1)
{
  *a1 = &unk_26C65CFA8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215816F44()
{
  return 37;
}

uint64_t sub_215816F4C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215816F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215816F70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215816FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C798, 0)) == 0)
  {
    unint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_215817248(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = (_OWORD *)(a2 + 24);
  unint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)uint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_215817200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_215817248(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E118, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E118))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_2158177CC();
  sub_215817710((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_215817710((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E3F0, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E3F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E118);
LABEL_2:
  sub_2158178D0();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E407;
  if (byte_26788E407 >= 0)
  {
    size_t v5 = &qword_26788E3F0;
  }
  else
  {
    unint64_t v4 = unk_26788E3F8;
    size_t v5 = (uint64_t *)qword_26788E3F0;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E41F;
  int v7 = &qword_26788E408;
  if (byte_26788E41F < 0)
  {
    uint64_t v6 = qword_26788E410;
    int v7 = (uint64_t *)qword_26788E408;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_215817630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E118);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E118);
  _Unwind_Resume(a1);
}

void sub_2158176E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215817710(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_2158177B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_2158177CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885B80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885B80))
  {
    return &stru_267885B68;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb8u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885B68);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885B68, &dword_21572C000);
  __cxa_guard_release(&qword_267885B80);
  return &stru_267885B68;
}

void sub_215817890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885B80);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885B80);
  _Unwind_Resume(a1);
}

void sub_2158178D0()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E120, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E120))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_2158177CC();
    sub_215817ACC((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_215817ACC((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E408, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E408, &dword_21572C000);
          __cxa_guard_release(&qword_26788E120);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_215817A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E120);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E120);
  _Unwind_Resume(a1);
}

void sub_215817ACC(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215817B6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215817B88(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215817C04(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215817C90()
{
  return 37;
}

uint64_t sub_215817C98(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215817CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215817CBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215817D4C(void *a1)
{
  *a1 = &unk_26C65D198;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215817DF4()
{
  return 37;
}

uint64_t sub_215817DFC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215817E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 1);
}

uint64_t sub_215817E20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215817EA8(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 37)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_2158181DC();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v20 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v10 = v7 == 0;
  BOOL v8 = v7 != 0;
  int v9 = v10;
  if (!*(_DWORD *)(a2 + 28)) {
    int v9 = 1;
  }
  BOOL v10 = v9 == 0;
  if (v9) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = (unint64_t)*(unsigned int *)(a2 + 32) << 32;
  }
  uint64_t v12 = v11 | (4 * v8);
  unint64_t v13 = *(void *)(a2 + 24);
  if (!v10) {
    unint64_t v13 = 0;
  }
  LODWORD(v21) = 4;
  *(void *)((char *)&v21 + 4) = v13;
  unint64_t v14 = v13;
  uint64_t v15 = v21;
  unint64_t v16 = HIDWORD(v13);
  LODWORD(v22) = 1;
  HIDWORD(v22) = v12;
  unint64_t v17 = HIDWORD(v11);
  if (HIDWORD(v13) * HIDWORD(v11) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v18 = *(_WORD *)(a2 + 52);
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 36) = v22;
  *(_DWORD *)(a1 + 44) = v17;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v12;
  *(_WORD *)(a1 + 64) = v18;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
}

void sub_215818190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_2158181DC()
{
  sub_2158178D0();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E408, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void *sub_21581824C(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65D480;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_2158182E4(const void *a1, std::__shared_weak_count *a2)
{
  if (a2) {
    atomic_fetch_add_explicit(&a2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (a1
    && (int8x16_t v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C7B0, 0)) != 0)
  {
    int v7 = v3;
    BOOL v8 = a2;
  }
  else
  {
    int v7 = 0;
    BOOL v8 = 0;
    if (a2 && !atomic_fetch_add(&a2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a2->__on_zero_shared)(a2);
      std::__shared_weak_count::__release_weak(a2);
      uint64_t v4 = 0;
      return v4 != 0;
    }
  }
  uint64_t v4 = v7;
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    return v7 != 0;
  }
  return v4 != 0;
}

void *sub_215818440(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65D290;
  int64x2_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158184D8(void *a1)
{
  *a1 = &unk_26C65D290;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215818580()
{
  return 38;
}

uint64_t sub_215818588(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215818590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158185AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_215818634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 8);
  size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v4
    || (uint64_t v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C67C7B0, 0)) == 0)
  {
    unint64_t v14 = 0;
    int v15 = 0;
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_215818884(v12, a2);
    std::logic_error::logic_error(exception, (const std::string *)v12);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  int v7 = (_OWORD *)(a2 + 24);
  unint64_t v14 = v6;
  int v15 = v5;
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)uint64_t v12 = *v7;
    *(_OWORD *)&v12[16] = v8;
    long long v13 = *(_OWORD *)(a2 + 56);
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v5;
    long long v9 = *(_OWORD *)&v12[16];
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)(a1 + 48) = v13;
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = 0;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 56);
  }
}

void sub_21581883C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_215733368(v18 - 48);
      sub_215733368((uint64_t)&a9);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

double sub_215818884(char *a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E128, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E128))
  {
    goto LABEL_2;
  }
  sub_215732BF4(v28, "ConstSharedImage");
  uint64_t v23 = sub_215818E08();
  sub_215818D4C((uint64_t)&v30, (uint64_t)v23);
  sub_215805CF0();
  sub_215818D4C((uint64_t)&v33, (uint64_t)&xmmword_26788E180);
  sub_21573A150(v27, (uint64_t)&v30, 2uLL);
  sub_215E19EAC(v28, (uint64_t *)v27, (std::string *)&qword_26788E420, v24, v25);
  sub_2157352DC(v27);
  if ((SHIBYTE(v35) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      goto LABEL_40;
    }
LABEL_44:
    operator delete(v30);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_41;
    }
LABEL_45:
    operator delete(v28[0]);
    goto LABEL_41;
  }
  operator delete(v33);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_44;
  }
LABEL_40:
  if (v29 < 0) {
    goto LABEL_45;
  }
LABEL_41:
  __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E420, &dword_21572C000);
  __cxa_guard_release(&qword_26788E128);
LABEL_2:
  sub_215818F0C();
  long long v30 = "Attempting to create an ";
  uint64_t v31 = 24;
  unint64_t v4 = byte_26788E437;
  if (byte_26788E437 >= 0)
  {
    size_t v5 = &qword_26788E420;
  }
  else
  {
    unint64_t v4 = unk_26788E428;
    size_t v5 = (uint64_t *)qword_26788E420;
  }
  uint64_t v32 = (const char *)v5;
  uint64_t v33 = (void *)v4;
  uint64_t v34 = " from an ";
  uint64_t v35 = 9;
  uint64_t v6 = byte_26788E44F;
  int v7 = &qword_26788E438;
  if (byte_26788E44F < 0)
  {
    uint64_t v6 = qword_26788E440;
    int v7 = (uint64_t *)qword_26788E438;
  }
  v36[0] = v7;
  v36[1] = v6;
  sub_2157430CC((uint64_t)&v30, (uint64_t)&v37, 0, 0, &__p);
  uint64_t v8 = *(void *)(a2 + 8);
  long long v9 = *(std::__shared_weak_count **)(a2 + 16);
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v8) {
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
      if (!v8) {
        goto LABEL_22;
      }
    }
    uint64_t v8 = *(void *)(a2 + 8);
    long long v10 = *(std::__shared_weak_count **)(a2 + 16);
    if (v10)
    {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
LABEL_17:
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 80))(v8);
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v30 = p_p;
    uint64_t v31 = size;
    uint64_t v32 = " but the other image contains an incompatible buffer type ";
    uint64_t v33 = (void *)58;
    uint64_t v34 = (const char *)v11;
    uint64_t v35 = v12;
    sub_2157430CC((uint64_t)&v30, (uint64_t)v36, 0, 0, (std::string *)a1);
    if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
      goto LABEL_20;
    }
    return result;
  }
  if (v8) {
    goto LABEL_17;
  }
LABEL_22:
  int v16 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v17 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v18 = v17 + 46;
  if (v17 + 46 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  if (v18 <= 0x16)
  {
    *((void *)a1 + 1) = 0;
    *((void *)a1 + 2) = 0;
    *(void *)a1 = 0;
    uint64_t v19 = a1;
    a1[23] = v18;
LABEL_31:
    if (v16 >= 0) {
      uint64_t v22 = &__p;
    }
    else {
      uint64_t v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    memmove(a1, v22, v17);
    goto LABEL_35;
  }
  uint64_t v20 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v18 | 7) != 0x17) {
    uint64_t v20 = v18 | 7;
  }
  uint64_t v21 = v20 + 1;
  uint64_t v19 = (char *)operator new(v20 + 1);
  *((void *)a1 + 1) = v18;
  *((void *)a1 + 2) = v21 | 0x8000000000000000;
  *(void *)a1 = v19;
  a1 = v19;
  if (v17) {
    goto LABEL_31;
  }
LABEL_35:
  strcpy(&v19[v17], " but the other image does not contain a buffer");
  double result = *(double *)"contain a buffer";
  if ((v16 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return result;
}

void sub_215818C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a26 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a20 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a26 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a21);
  if ((a20 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E128);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a15);
  __cxa_guard_abort(&qword_26788E128);
  _Unwind_Resume(a1);
}

void sub_215818D20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215818D4C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_215818DEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_215818E08()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885BA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885BA0))
  {
    return &stru_267885B88;
  }
  sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16u]", __p);
  sub_215E1A038((uint64_t)__p, &stru_267885B88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885B88, &dword_21572C000);
  __cxa_guard_release(&qword_267885BA0);
  return &stru_267885B88;
}

void sub_215818ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885BA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885BA0);
  _Unwind_Resume(a1);
}

void sub_215818F0C()
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E130, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26788E130))
  {
    sub_215732BF4(v5, "ConstSharedImage");
    uint64_t v0 = sub_215818E08();
    sub_215819108((uint64_t)v7, (uint64_t)v0);
    uint64_t v1 = sub_2158061A0();
    sub_215819108((uint64_t)&__p, (uint64_t)v1);
    sub_21573A150(v4, (uint64_t)v7, 2uLL);
    sub_215E19EAC(v5, (uint64_t *)v4, (std::string *)&qword_26788E438, v2, v3);
    sub_2157352DC(v4);
    if (v10 < 0)
    {
      operator delete(__p);
      if ((v8 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v6 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit(MEMORY[0x263F8C0B8], &qword_26788E438, &dword_21572C000);
          __cxa_guard_release(&qword_26788E130);
          return;
        }
LABEL_10:
        operator delete(v5[0]);
        goto LABEL_7;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
}

void sub_215819054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_26788E130);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_26788E130);
  _Unwind_Resume(a1);
}

void sub_215819108(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_215738B0C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_215E13B5C(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_2158191A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158191C4(uint64_t result)
{
  uint64_t v1 = result;
  int64x2_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215819240(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158192CC()
{
  return 38;
}

uint64_t sub_2158192D4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_2158192DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_2158192F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_215819388(void *a1)
{
  *a1 = &unk_26C65D480;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215819430()
{
  return 38;
}

uint64_t sub_215819438(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_215819440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_215DC93A4(a2, 3, a1 + 32, 3, a1 + 44, 2);
}

uint64_t sub_21581945C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  int64x2_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return v1;
  }
  atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

void sub_2158194E4(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 48) != 38)
  {
    __cxa_allocate_exception(0x10uLL);
    sub_21581981C();
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    size_t v5 = *(std::__shared_weak_count **)(a2 + 16);
    if (v5)
    {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v19 = v4;
      uint64_t v20 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      uint64_t v19 = *(void *)(a2 + 8);
      uint64_t v20 = 0;
    }
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(_DWORD *)(a2 + 24);
  BOOL v10 = v7 == 0;
  BOOL v8 = v7 != 0;
  int v9 = v10;
  if (!*(_DWORD *)(a2 + 28)) {
    int v9 = 1;
  }
  BOOL v10 = v9 == 0;
  if (v9) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = ((unint64_t)*(unsigned int *)(a2 + 32) << 31) & 0x7FFFFFFF00000000;
  }
  uint64_t v12 = v11 | (4 * v8);
  unint64_t v13 = *(void *)(a2 + 24);
  if (!v10) {
    unint64_t v13 = 0;
  }
  LODWORD(v21) = 4;
  *(void *)((char *)&v21 + 4) = v13;
  unint64_t v14 = v13;
  uint64_t v15 = v21;
  unint64_t v16 = HIDWORD(v13);
  LODWORD(v22) = 1;
  HIDWORD(v22) = v12;
  unint64_t v17 = HIDWORD(v11);
  if (HIDWORD(v13) * HIDWORD(v11) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  __int16 v18 = *(_WORD *)(a2 + 52);
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v15;
  *(_DWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 36) = v22;
  *(_DWORD *)(a1 + 44) = v17;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v12;
  *(_WORD *)(a1 + 64) = v18;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
}

void sub_2158197D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

void sub_21581981C()
{
  sub_215818F0C();
  uint64_t v0 = sub_215807518();
  sub_2158069FC("Attempting to create an ", (uint64_t)&qword_26788E438, (uint64_t)" from an ", (uint64_t)v0, (uint64_t)" but the image is of incompatible format ");
}

void sub_21581988C()
{
  v0[6] = 0;
  sub_2157D55B8(v0, "image of pixel format '");
  sub_215806C64();
}

void sub_215819990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158199A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158199B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158199CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_2158199E0(_DWORD ***a1)
{
  return sub_2158199FC(**a1, (char *)(*a1)[1]);
}

void sub_2158199EC(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2158199FC(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65ABE0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    int v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    int v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_215819AF0(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  int8x16_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v13 = v3;
  *(void *)unint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65ABE0[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_215819CA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215819CEC(uint64_t a1, uint64_t a2)
{
  int8x16_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    double result = sub_215819DE8((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  double result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215819DE0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215819DE8(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  long long v21 = v8;
  uint64_t v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      unint64_t v13 = (void **)*a1;
      unint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  unint64_t v13 = (void **)*a1;
  unint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  unint64_t v14 = (void **)*a1;
  uint64_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215819FE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215819FFC(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v205 = *MEMORY[0x263EF8340];
  switch(a2)
  {
    case 1:
      size_t v5 = &unk_26C65AE70;
      v175 = &unk_26C65AE70;
      sub_2158066DC((uint64_t)&v176, a4);
      if (!sub_2158050C8(v176, v177))
      {
        LOBYTE(v185) = 0;
        LOBYTE(v190) = 0;
        goto LABEL_87;
      }
      v192 = &unk_26C65AC80;
      sub_215805418((uint64_t)&v193, &v175);
      uint64_t v6 = (uint64_t)v193;
      size_t v7 = v194;
      v198 = &unk_26C65AC80;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[9] = *(_OWORD *)((char *)v195 + 9);
      LOBYTE(v202) = 1;
      LOBYTE(v190) = 0;
      v185 = &unk_26C65AD78;
      if (v200)
      {
        p_shared_owners = &v7->__shared_owners_;
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        *(void *)&long long v189 = *(void *)&v201[16];
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v6;
        v187 = v7;
        if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_6;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
          if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_6:
            LOBYTE(v190) = 1;
            if (!(_BYTE)v202)
            {
LABEL_248:
              uint64_t v133 = v186;
              v134 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v134->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v134->__on_zero_shared)(v134);
                  std::__shared_weak_count::__release_weak(v134);
                }
              }
              sub_215B2E878(v133, a1);
              goto LABEL_282;
            }
            goto LABEL_244;
          }
        }
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        LOBYTE(v190) = 1;
        if (!(_BYTE)v202) {
          goto LABEL_248;
        }
      }
      else
      {
        uint64_t v186 = v6;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        *(void *)&long long v189 = *(void *)&v201[16];
        LOBYTE(v190) = 1;
      }
LABEL_244:
      v198 = &unk_26C65AC80;
      v132 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
        std::__shared_weak_count::__release_weak(v132);
      }
      if ((_BYTE)v190) {
        goto LABEL_248;
      }
LABEL_87:
      uint64_t v48 = v178;
      if (v181 && v178)
      {
        char v49 = v176;
        uint64_t v50 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v50->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v49 + 88))(v49, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v48 = v178;
      }
      uint64_t v51 = v180;
      char v53 = v176;
      uint64_t v52 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65D590;
      v199 = v53;
      v200 = v52;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v179, 0x4C303038u, v48, v51 | 0x100000000, (uint64_t)&v198);
    case 2:
      size_t v5 = &unk_26C65B1A0;
      v175 = &unk_26C65B1A0;
      sub_215808B80((uint64_t)&v176, a4);
      if (!sub_215807980(v176, v177))
      {
        LOBYTE(v185) = 0;
        LOBYTE(v190) = 0;
        goto LABEL_97;
      }
      v192 = &unk_26C65AFB0;
      sub_215807CD0((uint64_t)&v193, &v175);
      uint64_t v9 = (uint64_t)v193;
      size_t v10 = v194;
      v198 = &unk_26C65AFB0;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[9] = *(_OWORD *)((char *)v195 + 9);
      LOBYTE(v202) = 1;
      LOBYTE(v190) = 0;
      v185 = &unk_26C65B0A8;
      if (v200)
      {
        uint64_t v11 = &v10->__shared_owners_;
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        *(void *)&long long v189 = *(void *)&v201[16];
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v9;
        v187 = v10;
        if (atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v11, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_12;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
          if (atomic_fetch_add(v11, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_12:
            LOBYTE(v190) = 1;
            if (!(_BYTE)v202)
            {
LABEL_258:
              uint64_t v136 = v186;
              v137 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v137->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v137->__on_zero_shared)(v137);
                  std::__shared_weak_count::__release_weak(v137);
                }
              }
              sub_215B34F60(v136, a1);
              goto LABEL_282;
            }
            goto LABEL_254;
          }
        }
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
        LOBYTE(v190) = 1;
        if (!(_BYTE)v202) {
          goto LABEL_258;
        }
      }
      else
      {
        uint64_t v186 = v9;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        *(void *)&long long v189 = *(void *)&v201[16];
        LOBYTE(v190) = 1;
      }
LABEL_254:
      v198 = &unk_26C65AFB0;
      v135 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
        std::__shared_weak_count::__release_weak(v135);
      }
      if ((_BYTE)v190) {
        goto LABEL_258;
      }
LABEL_97:
      uint64_t v54 = v178;
      if (v181 && v178)
      {
        char v55 = v176;
        char v56 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v56->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
            std::__shared_weak_count::__release_weak(v56);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v55 + 88))(v55, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v54 = v178;
      }
      uint64_t v57 = 2 * v180;
      uint64_t v59 = v176;
      int v58 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65D620;
      v199 = v59;
      v200 = v58;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v179, 0x62313667u, v54, v57 | 0x100000000, (uint64_t)&v198);
    case 3:
      size_t v5 = &unk_26C65B488;
      v175 = &unk_26C65B488;
      sub_21580A13C((uint64_t)&v176, a4);
      if (!sub_215808F3C(v176, v177))
      {
        LOBYTE(v185) = 0;
        LOBYTE(v190) = 0;
        goto LABEL_107;
      }
      v192 = &unk_26C65B298;
      sub_21580928C((uint64_t)&v193, &v175);
      uint64_t v12 = (uint64_t)v193;
      unint64_t v13 = v194;
      v198 = &unk_26C65B298;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[9] = *(_OWORD *)((char *)v195 + 9);
      LOBYTE(v202) = 1;
      LOBYTE(v190) = 0;
      v185 = &unk_26C65B390;
      if (v200)
      {
        unint64_t v14 = &v13->__shared_owners_;
        atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        *(void *)&long long v189 = *(void *)&v201[16];
        atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v12;
        v187 = v13;
        if (atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_18;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
          if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_18:
            LOBYTE(v190) = 1;
            if (!(_BYTE)v202)
            {
LABEL_268:
              uint64_t v139 = v186;
              v140 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v140->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v140->__on_zero_shared)(v140);
                  std::__shared_weak_count::__release_weak(v140);
                }
              }
              sub_215B39D38(v139, a1);
              goto LABEL_282;
            }
            goto LABEL_264;
          }
        }
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
        LOBYTE(v190) = 1;
        if (!(_BYTE)v202) {
          goto LABEL_268;
        }
      }
      else
      {
        uint64_t v186 = v12;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        *(void *)&long long v189 = *(void *)&v201[16];
        LOBYTE(v190) = 1;
      }
LABEL_264:
      v198 = &unk_26C65B298;
      v138 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
        std::__shared_weak_count::__release_weak(v138);
      }
      if ((_BYTE)v190) {
        goto LABEL_268;
      }
LABEL_107:
      uint64_t v60 = v178;
      if (v181 && v178)
      {
        long long v61 = v176;
        uint64_t v62 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v62->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v61 + 88))(v61, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v60 = v178;
      }
      uint64_t v63 = 2 * v180;
      unsigned __int8 v65 = v176;
      uint64_t v64 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65D6A0;
      v199 = v65;
      v200 = v64;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v179, 0x4C303068u, v60, v63 | 0x100000000, (uint64_t)&v198);
    case 4:
      size_t v5 = &unk_26C65B770;
      v175 = &unk_26C65B770;
      sub_21580B6F8((uint64_t)&v176, a4);
      if (!sub_21580A4F8(v176, v177))
      {
        LOBYTE(v185) = 0;
        LOBYTE(v190) = 0;
        goto LABEL_117;
      }
      v192 = &unk_26C65B580;
      sub_21580A848((uint64_t)&v193, &v175);
      uint64_t v15 = (uint64_t)v193;
      uint64_t v16 = v194;
      v198 = &unk_26C65B580;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[9] = *(_OWORD *)((char *)v195 + 9);
      LOBYTE(v202) = 1;
      LOBYTE(v190) = 0;
      v185 = &unk_26C65B678;
      if (!v200)
      {
        uint64_t v186 = v15;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        *(void *)&long long v189 = *(void *)&v201[16];
        LOBYTE(v190) = 1;
        goto LABEL_274;
      }
      unint64_t v17 = &v16->__shared_owners_;
      atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v188 = *(_OWORD *)v201;
      *(void *)&long long v189 = *(void *)&v201[16];
      atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v186 = v15;
      v187 = v16;
      if (atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v17, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_24;
        }
LABEL_273:
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
        LOBYTE(v190) = 1;
        if (!(_BYTE)v202) {
          goto LABEL_278;
        }
        goto LABEL_274;
      }
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
      if (!atomic_fetch_add(v17, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_273;
      }
LABEL_24:
      LOBYTE(v190) = 1;
      if ((_BYTE)v202)
      {
LABEL_274:
        v198 = &unk_26C65B580;
        v141 = v200;
        if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
          std::__shared_weak_count::__release_weak(v141);
        }
        if ((_BYTE)v190) {
          goto LABEL_278;
        }
LABEL_117:
        uint64_t v66 = v178;
        if (v181 && v178)
        {
          uint64_t v67 = v176;
          uint64_t v68 = v177;
          if (v177)
          {
            atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
            if (!atomic_fetch_add(&v68->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
              std::__shared_weak_count::__release_weak(v68);
            }
          }
          (*(void (**)(const void *, void, const char *))(*(void *)v67 + 88))(v67, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
          uint64_t v66 = v178;
        }
        uint64_t v69 = 4 * v180;
        char v71 = v176;
        uint64_t v70 = v177;
        if (v177) {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v198 = &unk_26C65D720;
        v199 = v71;
        v200 = v70;
        *(void *)v201 = &v198;
        v201[8] = 1;
        sub_215B6305C(v179, 0x4C303066u, v66, v69 | 0x100000000, (uint64_t)&v198);
      }
LABEL_278:
      uint64_t v142 = v186;
      v143 = v187;
      if (v187)
      {
        atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v143->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
          std::__shared_weak_count::__release_weak(v143);
        }
      }
      sub_215B3EA10(v142, a1);
LABEL_282:
      if (!(_BYTE)v190) {
        goto LABEL_286;
      }
LABEL_283:
      v144 = v187;
      if (v187 && !atomic_fetch_add(&v187->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
        std::__shared_weak_count::__release_weak(v144);
      }
LABEL_286:
      v175 = v5;
      v145 = v177;
      if (v177)
      {
        if (!atomic_fetch_add(&v177->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
          std::__shared_weak_count::__release_weak(v145);
        }
      }
      return;
    case 5:
      size_t v5 = &unk_26C65BA58;
      v175 = &unk_26C65BA58;
      sub_21580CCB4((uint64_t)&v176, a4);
      if (!sub_21580BAB4(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_127;
      }
      v192 = &unk_26C65B868;
      sub_21580BE04((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v18 = (uint64_t)v193;
      uint64_t v19 = v194;
      v198 = &unk_26C65B868;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65B960;
      if (v200)
      {
        uint64_t v20 = &v19->__shared_owners_;
        atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v18;
        v187 = v19;
        if (atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v20, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_30;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
          if (atomic_fetch_add(v20, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_30:
            char v191 = 1;
            if (!v204)
            {
LABEL_296:
              uint64_t v147 = v186;
              v148 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v148->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
                  std::__shared_weak_count::__release_weak(v148);
                }
              }
              sub_215B30234(v147, a1);
              goto LABEL_226;
            }
            goto LABEL_292;
          }
        }
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
        char v191 = 1;
        if (!v204) {
          goto LABEL_296;
        }
      }
      else
      {
        uint64_t v186 = v18;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
      }
LABEL_292:
      v198 = &unk_26C65B868;
      v146 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v146->__on_zero_shared)(v146);
        std::__shared_weak_count::__release_weak(v146);
      }
      if (v191) {
        goto LABEL_296;
      }
LABEL_127:
      uint64_t v72 = v178;
      if (v184 && v178)
      {
        uint64_t v73 = v176;
        int v74 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v74->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
            std::__shared_weak_count::__release_weak(v74);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v73 + 88))(v73, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v72 = v178;
      }
      uint64_t v75 = v182;
      long long v77 = v176;
      long long v76 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65D7A0;
      v199 = v77;
      v200 = v76;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v183, 0x32433038u, v72, v75 | 0x100000000, (uint64_t)&v198);
    case 7:
      size_t v5 = &unk_26C65BD40;
      v175 = &unk_26C65BD40;
      sub_21580E2F0((uint64_t)&v176, a4);
      if (!sub_21580D0F0(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_137;
      }
      v192 = &unk_26C65BB50;
      sub_21580D440((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v21 = (uint64_t)v193;
      uint64_t v22 = v194;
      v198 = &unk_26C65BB50;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65BC48;
      if (v200)
      {
        uint64_t v23 = &v22->__shared_owners_;
        atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v21;
        v187 = v22;
        if (atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v23, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_36;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
          if (atomic_fetch_add(v23, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_36:
            char v191 = 1;
            if (!v204)
            {
LABEL_306:
              uint64_t v150 = v186;
              v151 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v151->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
                  std::__shared_weak_count::__release_weak(v151);
                }
              }
              sub_215B3B7D4(v150, a1);
              goto LABEL_226;
            }
            goto LABEL_302;
          }
        }
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
        char v191 = 1;
        if (!v204) {
          goto LABEL_306;
        }
      }
      else
      {
        uint64_t v186 = v21;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
      }
LABEL_302:
      v198 = &unk_26C65BB50;
      v149 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
        std::__shared_weak_count::__release_weak(v149);
      }
      if (v191) {
        goto LABEL_306;
      }
LABEL_137:
      uint64_t v78 = v178;
      if (v184 && v178)
      {
        long long v79 = v176;
        long long v80 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v80->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
            std::__shared_weak_count::__release_weak(v80);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v79 + 88))(v79, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v78 = v178;
      }
      uint64_t v81 = 2 * v182;
      long long v83 = v176;
      long long v82 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65D820;
      v199 = v83;
      v200 = v82;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v183, 0x32433068u, v78, v81 | 0x100000000, (uint64_t)&v198);
    case 8:
      size_t v5 = &unk_26C65C028;
      v175 = &unk_26C65C028;
      sub_21580F930((uint64_t)&v176, a4);
      if (!sub_21580E730(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_147;
      }
      v192 = &unk_26C65BE38;
      sub_21580EA80((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v24 = (uint64_t)v193;
      int8x16_t v25 = v194;
      v198 = &unk_26C65BE38;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65BF30;
      if (v200)
      {
        uint64_t v26 = &v25->__shared_owners_;
        atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v24;
        v187 = v25;
        if (atomic_fetch_add(&v25->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v26, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_42;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
          if (atomic_fetch_add(v26, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_42:
            char v191 = 1;
            if (!v204)
            {
LABEL_316:
              uint64_t v153 = v186;
              v154 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v154->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
                  std::__shared_weak_count::__release_weak(v154);
                }
              }
              sub_215B40568(v153, a1);
              goto LABEL_226;
            }
            goto LABEL_312;
          }
        }
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
        char v191 = 1;
        if (!v204) {
          goto LABEL_316;
        }
      }
      else
      {
        uint64_t v186 = v24;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
      }
LABEL_312:
      v198 = &unk_26C65BE38;
      v152 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
        std::__shared_weak_count::__release_weak(v152);
      }
      if (v191) {
        goto LABEL_316;
      }
LABEL_147:
      long long v84 = v178;
      if (v184 && v178)
      {
        long long v85 = v176;
        uint64_t v86 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v86->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
            std::__shared_weak_count::__release_weak(v86);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v85 + 88))(v85, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        long long v84 = v178;
      }
      uint64_t v87 = 4 * v182;
      long long v89 = v176;
      long long v88 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65D8A0;
      v199 = v89;
      v200 = v88;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v183, 0x32433066u, v84, v87 | 0x100000000, (uint64_t)&v198);
    case 21:
      size_t v5 = &unk_26C65C310;
      v175 = &unk_26C65C310;
      sub_215810F70((uint64_t)&v176, a4);
      if (!sub_21580FD70(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_157;
      }
      v192 = &unk_26C65C120;
      sub_2158100C0((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v27 = (uint64_t)v193;
      long long v28 = v194;
      v198 = &unk_26C65C120;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65C218;
      if (v200)
      {
        char v29 = &v28->__shared_owners_;
        atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v27;
        v187 = v28;
        if (atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v29, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_48;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
          if (atomic_fetch_add(v29, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_48:
            char v191 = 1;
            if (!v204)
            {
LABEL_326:
              uint64_t v156 = v186;
              v157 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v157->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v157->__on_zero_shared)(v157);
                  std::__shared_weak_count::__release_weak(v157);
                }
              }
              sub_215B31D70(v156, a1);
              goto LABEL_226;
            }
            goto LABEL_322;
          }
        }
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
        char v191 = 1;
        if (!v204) {
          goto LABEL_326;
        }
      }
      else
      {
        uint64_t v186 = v27;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
      }
LABEL_322:
      v198 = &unk_26C65C120;
      v155 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v155->__on_zero_shared)(v155);
        std::__shared_weak_count::__release_weak(v155);
      }
      if (v191) {
        goto LABEL_326;
      }
LABEL_157:
      int v90 = v178;
      if (v184 && v178)
      {
        long long v91 = v176;
        uint64_t v92 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v92->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
            std::__shared_weak_count::__release_weak(v92);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v91 + 88))(v91, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        int v90 = v178;
      }
      uint64_t v93 = v182;
      uint64_t v95 = v176;
      uint64_t v94 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65D920;
      v199 = v95;
      v200 = v94;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v183, 0x18u, v90, v93 | 0x100000000, (uint64_t)&v198);
    case 22:
      size_t v5 = &unk_26C65C5F8;
      v175 = &unk_26C65C5F8;
      sub_2158125AC((uint64_t)&v176, a4);
      if (!sub_2158113AC(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_167;
      }
      v192 = &unk_26C65C408;
      sub_2158116FC((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v30 = (uint64_t)v193;
      uint64_t v31 = v194;
      v198 = &unk_26C65C408;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65C500;
      if (v200)
      {
        uint64_t v32 = &v31->__shared_owners_;
        atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v30;
        v187 = v31;
        if (atomic_fetch_add(&v31->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v32, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_54;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
          if (atomic_fetch_add(v32, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_54:
            char v191 = 1;
            if (!v204)
            {
LABEL_336:
              uint64_t v159 = v186;
              v160 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v160->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
                  std::__shared_weak_count::__release_weak(v160);
                }
              }
              sub_215B36AA4(v159, a1);
              goto LABEL_226;
            }
            goto LABEL_332;
          }
        }
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
        char v191 = 1;
        if (!v204) {
          goto LABEL_336;
        }
      }
      else
      {
        uint64_t v186 = v30;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
      }
LABEL_332:
      v198 = &unk_26C65C408;
      v158 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v158->__on_zero_shared)(v158);
        std::__shared_weak_count::__release_weak(v158);
      }
      if (v191) {
        goto LABEL_336;
      }
LABEL_167:
      unint64_t v96 = v178;
      if (v184 && v178)
      {
        long long v97 = v176;
        char v98 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v98->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v97 + 88))(v97, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        unint64_t v96 = v178;
      }
      uint64_t v99 = 2 * v182;
      uint64_t v101 = v176;
      long long v100 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65D9A0;
      v199 = v101;
      v200 = v100;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v183, 0x62343872u, v96, v99 | 0x100000000, (uint64_t)&v198);
    case 25:
      size_t v5 = &unk_26C65C8E0;
      v175 = &unk_26C65C8E0;
      sub_215813BEC((uint64_t)&v176, a4);
      if (!sub_2158129EC(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_177;
      }
      v192 = &unk_26C65C6F0;
      sub_215812D3C((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v33 = (uint64_t)v193;
      uint64_t v34 = v194;
      v198 = &unk_26C65C6F0;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65C7E8;
      if (!v200)
      {
        uint64_t v186 = v33;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
LABEL_342:
        v198 = &unk_26C65C6F0;
        v161 = v200;
        if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
          std::__shared_weak_count::__release_weak(v161);
        }
        if (v191) {
          goto LABEL_346;
        }
LABEL_177:
        long long v102 = v178;
        if (v184 && v178)
        {
          long long v103 = v176;
          long long v104 = v177;
          if (v177)
          {
            atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
            if (!atomic_fetch_add(&v104->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
              std::__shared_weak_count::__release_weak(v104);
            }
          }
          (*(void (**)(const void *, void, const char *))(*(void *)v103 + 88))(v103, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
          long long v102 = v178;
        }
        uint64_t v105 = v182;
        long long v107 = v176;
        char v106 = v177;
        if (v177) {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v198 = &unk_26C65DA20;
        v199 = v107;
        v200 = v106;
        *(void *)v201 = &v198;
        v201[8] = 1;
        sub_215B6305C(v183, 0x42475241u, v102, v105 | 0x100000000, (uint64_t)&v198);
      }
      uint64_t v35 = &v34->__shared_owners_;
      atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v188 = *(_OWORD *)v201;
      long long v189 = *(_OWORD *)&v201[16];
      long long v190 = v202;
      atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v186 = v33;
      v187 = v34;
      if (atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_60;
        }
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
        if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_60:
          char v191 = 1;
          if (!v204) {
            goto LABEL_346;
          }
          goto LABEL_342;
        }
      }
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      char v191 = 1;
      if (!v204)
      {
LABEL_346:
        uint64_t v162 = v186;
        v163 = v187;
        if (v187)
        {
          atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v163->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
            std::__shared_weak_count::__release_weak(v163);
          }
        }
LABEL_349:
        sub_215B336A4(v162, a1);
        goto LABEL_226;
      }
      goto LABEL_342;
    case 31:
      size_t v5 = &unk_26C65CBC8;
      v175 = &unk_26C65CBC8;
      sub_215815228((uint64_t)&v176, a4);
      if (!sub_215814028(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_187;
      }
      v192 = &unk_26C65C9D8;
      sub_215814378((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v36 = (uint64_t)v193;
      uint64_t v37 = v194;
      v198 = &unk_26C65C9D8;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65CAD0;
      if (v200)
      {
        uint64_t v38 = &v37->__shared_owners_;
        atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v36;
        v187 = v37;
        if (atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v38, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_66;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
          if (atomic_fetch_add(v38, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_66:
            char v191 = 1;
            if (!v204)
            {
LABEL_356:
              uint64_t v165 = v186;
              v166 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v166->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
                  std::__shared_weak_count::__release_weak(v166);
                }
              }
              sub_215B3D154(v165, a1);
              goto LABEL_226;
            }
            goto LABEL_352;
          }
        }
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
        char v191 = 1;
        if (!v204) {
          goto LABEL_356;
        }
      }
      else
      {
        uint64_t v186 = v36;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
      }
LABEL_352:
      v198 = &unk_26C65C9D8;
      v164 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
        std::__shared_weak_count::__release_weak(v164);
      }
      if (v191) {
        goto LABEL_356;
      }
LABEL_187:
      uint64_t v108 = v178;
      if (v184 && v178)
      {
        int v109 = v176;
        long long v110 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v110->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
            std::__shared_weak_count::__release_weak(v110);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v109 + 88))(v109, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v108 = v178;
      }
      uint64_t v111 = 2 * v182;
      long long v113 = v176;
      char v112 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65DAA0;
      v199 = v113;
      v200 = v112;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v183, 0x52476841u, v108, v111 | 0x100000000, (uint64_t)&v198);
    case 32:
      size_t v5 = &unk_26C65CEB0;
      v175 = &unk_26C65CEB0;
      sub_215816868((uint64_t)&v176, a4);
      if (!sub_215815668(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_197;
      }
      v192 = &unk_26C65CCC0;
      sub_2158159B8((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v39 = (uint64_t)v193;
      char v40 = v194;
      v198 = &unk_26C65CCC0;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65CDB8;
      if (v200)
      {
        uint64_t v41 = &v40->__shared_owners_;
        atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v39;
        v187 = v40;
        if (atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v41, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_72;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
          if (atomic_fetch_add(v41, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_72:
            char v191 = 1;
            if (!v204)
            {
LABEL_366:
              uint64_t v168 = v186;
              v169 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v169->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v169->__on_zero_shared)(v169);
                  std::__shared_weak_count::__release_weak(v169);
                }
              }
              sub_215B4212C(v168, a1);
              goto LABEL_226;
            }
            goto LABEL_362;
          }
        }
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
        char v191 = 1;
        if (!v204) {
          goto LABEL_366;
        }
      }
      else
      {
        uint64_t v186 = v39;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
      }
LABEL_362:
      v198 = &unk_26C65CCC0;
      v167 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
        std::__shared_weak_count::__release_weak(v167);
      }
      if (v191) {
        goto LABEL_366;
      }
LABEL_197:
      long long v114 = v178;
      if (v184 && v178)
      {
        long long v115 = v176;
        long long v116 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v116->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
            std::__shared_weak_count::__release_weak(v116);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v115 + 88))(v115, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        long long v114 = v178;
      }
      uint64_t v117 = 4 * v182;
      uint64_t v119 = v176;
      uint64_t v118 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65DB20;
      v199 = v119;
      v200 = v118;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v183, 0x52476641u, v114, v117 | 0x100000000, (uint64_t)&v198);
    case 37:
      size_t v5 = &unk_26C65D198;
      v175 = &unk_26C65D198;
      sub_215817EA8((uint64_t)&v176, a4);
      if (!sub_215816CA8(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_207;
      }
      v192 = &unk_26C65CFA8;
      sub_215816FF8((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v42 = (uint64_t)v193;
      unsigned __int8 v43 = v194;
      v198 = &unk_26C65CFA8;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65D0A0;
      if (!v200)
      {
        uint64_t v186 = v42;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
LABEL_372:
        v198 = &unk_26C65CFA8;
        v170 = v200;
        if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
          std::__shared_weak_count::__release_weak(v170);
        }
        if (v191) {
          goto LABEL_376;
        }
LABEL_207:
        unint64_t v120 = v178;
        if (v184 && v178)
        {
          long long v121 = v176;
          unint64_t v122 = v177;
          if (v177)
          {
            atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
            if (!atomic_fetch_add(&v122->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
              std::__shared_weak_count::__release_weak(v122);
            }
          }
          (*(void (**)(const void *, void, const char *))(*(void *)v121 + 88))(v121, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
          unint64_t v120 = v178;
        }
        uint64_t v123 = v182;
        long long v125 = v176;
        long long v124 = v177;
        if (v177) {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v198 = &unk_26C65DBA0;
        v199 = v125;
        v200 = v124;
        *(void *)v201 = &v198;
        v201[8] = 1;
        sub_215B6305C(v183, 0x20u, v120, v123 | 0x100000000, (uint64_t)&v198);
      }
      uint64_t v44 = &v43->__shared_owners_;
      atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v188 = *(_OWORD *)v201;
      long long v189 = *(_OWORD *)&v201[16];
      long long v190 = v202;
      atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v186 = v42;
      v187 = v43;
      if (atomic_fetch_add(&v43->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v44, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_78;
        }
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
        if (atomic_fetch_add(v44, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_78:
          char v191 = 1;
          if (!v204) {
            goto LABEL_376;
          }
          goto LABEL_372;
        }
      }
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
      char v191 = 1;
      if (!v204)
      {
LABEL_376:
        uint64_t v162 = v186;
        v171 = v187;
        if (v187)
        {
          atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v171->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
            std::__shared_weak_count::__release_weak(v171);
          }
        }
        goto LABEL_349;
      }
      goto LABEL_372;
    case 38:
      size_t v5 = &unk_26C65D480;
      v175 = &unk_26C65D480;
      sub_2158194E4((uint64_t)&v176, a4);
      if (!sub_2158182E4(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_217;
      }
      v192 = &unk_26C65D290;
      sub_215818634((uint64_t)&v193, (uint64_t)&v175);
      uint64_t v45 = (uint64_t)v193;
      uint64_t v46 = v194;
      v198 = &unk_26C65D290;
      v199 = v193;
      v200 = v194;
      v193 = 0;
      v194 = 0;
      *(_OWORD *)v201 = v195[0];
      *(_OWORD *)&v201[16] = v195[1];
      long long v202 = v196;
      char v203 = v197;
      char v204 = 1;
      char v191 = 0;
      v185 = &unk_26C65D388;
      if (v200)
      {
        long long v47 = &v46->__shared_owners_;
        atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v45;
        v187 = v46;
        if (atomic_fetch_add(&v46->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v47, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_84;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
          if (atomic_fetch_add(v47, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_84:
            char v191 = 1;
            if (!v204)
            {
LABEL_386:
              uint64_t v173 = v186;
              v174 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v174->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
                  std::__shared_weak_count::__release_weak(v174);
                }
              }
              sub_215B385F4(v173, a1);
LABEL_226:
              if (!v191) {
                goto LABEL_286;
              }
              goto LABEL_283;
            }
            goto LABEL_382;
          }
        }
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
        char v191 = 1;
        if (!v204) {
          goto LABEL_386;
        }
      }
      else
      {
        uint64_t v186 = v45;
        v187 = 0;
        long long v188 = *(_OWORD *)v201;
        long long v189 = *(_OWORD *)&v201[16];
        long long v190 = v202;
        char v191 = 1;
      }
LABEL_382:
      v198 = &unk_26C65D290;
      v172 = v200;
      if (v200 && !atomic_fetch_add(&v200->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v172->__on_zero_shared)(v172);
        std::__shared_weak_count::__release_weak(v172);
      }
      if (v191) {
        goto LABEL_386;
      }
LABEL_217:
      long long v126 = v178;
      if (v184 && v178)
      {
        long long v127 = v176;
        uint64_t v128 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v128->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
            std::__shared_weak_count::__release_weak(v128);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v127 + 88))(v127, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        long long v126 = v178;
      }
      uint64_t v129 = 2 * v182;
      v131 = v176;
      v130 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v198 = &unk_26C65DC20;
      v199 = v131;
      v200 = v130;
      *(void *)v201 = &v198;
      v201[8] = 1;
      sub_215B6305C(v183, 0x62363461u, v126, v129 | 0x100000000, (uint64_t)&v198);
    default:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
      abort();
  }
}

void sub_21581D64C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,std::__shared_weak_count *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char a30)
{
  if (a30 && a22 && !atomic_fetch_add(&a22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a22->__on_zero_shared)(a22);
    std::__shared_weak_count::__release_weak(a22);
  }
  if (a12)
  {
    if (!atomic_fetch_add(&a12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_21581DA38(void *result)
{
  uint64_t v1 = result;
  char *result = &unk_26C65D590;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581DAD0(void *a1)
{
  *a1 = &unk_26C65D590;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581DB78(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D590;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581DBD4(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D590;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581DC0C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581DC88(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581DD24(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581DDA4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE1ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE1ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE1ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE1ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581DE14()
{
  return &unk_26C65D600;
}

void *sub_21581DE20(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65D620;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581DEB8(void *a1)
{
  *a1 = &unk_26C65D620;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581DF60(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D620;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581DFBC(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D620;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581DFF4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581E070(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581E10C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581E18C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE2ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE2ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE2ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE2ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581E1FC()
{
  return &unk_26C65D680;
}

void *sub_21581E208(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65D6A0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581E2A0(void *a1)
{
  *a1 = &unk_26C65D6A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581E348(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D6A0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581E3A4(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D6A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581E3DC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581E458(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581E4F4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581E574(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE3ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE3ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE3ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE3ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581E5E4()
{
  return &unk_26C65D700;
}

void *sub_21581E5F0(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65D720;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581E688(void *a1)
{
  *a1 = &unk_26C65D720;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581E730(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D720;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581E78C(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D720;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581E7C4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581E840(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581E8DC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581E95C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE4ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE4ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE4ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE4ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581E9CC()
{
  return &unk_26C65D780;
}

void *sub_21581E9D8(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65D7A0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581EA70(void *a1)
{
  *a1 = &unk_26C65D7A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581EB18(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D7A0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581EB74(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D7A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581EBAC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581EC28(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581ECC4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581ED44(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE5ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE5ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE5ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE5ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581EDB4()
{
  return &unk_26C65D800;
}

void *sub_21581EDC0(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65D820;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581EE58(void *a1)
{
  *a1 = &unk_26C65D820;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581EF00(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D820;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581EF5C(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D820;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581EF94(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581F010(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581F0AC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581F12C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE7ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE7ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE7ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE7ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581F19C()
{
  return &unk_26C65D880;
}

void *sub_21581F1A8(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65D8A0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581F240(void *a1)
{
  *a1 = &unk_26C65D8A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581F2E8(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D8A0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581F344(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D8A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581F37C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581F3F8(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581F494(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581F514(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE8ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE8ENSL_13DynamicBufferELNSL_1"
                                "0MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE8ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE8ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581F584()
{
  return &unk_26C65D900;
}

void *sub_21581F590(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65D920;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581F628(void *a1)
{
  *a1 = &unk_26C65D920;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581F6D0(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D920;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581F72C(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D920;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581F764(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581F7E0(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581F87C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581F8FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE21ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE21ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE21ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE21ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581F96C()
{
  return &unk_26C65D980;
}

void *sub_21581F978(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65D9A0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581FA10(void *a1)
{
  *a1 = &unk_26C65D9A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581FAB8(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65D9A0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581FB14(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65D9A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581FB4C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581FBC8(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21581FC64(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21581FCE4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE22ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE22ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE22ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE22ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21581FD54()
{
  return &unk_26C65DA00;
}

void *sub_21581FD60(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DA20;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21581FDF8(void *a1)
{
  *a1 = &unk_26C65DA20;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21581FEA0(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DA20;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21581FEFC(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DA20;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21581FF34(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21581FFB0(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21582004C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_2158200CC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE25ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE25ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE25ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE25ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21582013C()
{
  return &unk_26C65DA80;
}

void *sub_215820148(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DAA0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158201E0(void *a1)
{
  *a1 = &unk_26C65DAA0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215820288(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DAA0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_2158202E4(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DAA0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21582031C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215820398(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_215820434(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_2158204B4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE31ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE31ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE31ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE31ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215820524()
{
  return &unk_26C65DB00;
}

void *sub_215820530(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DB20;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158205C8(void *a1)
{
  *a1 = &unk_26C65DB20;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215820670(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DB20;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_2158206CC(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DB20;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215820704(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215820780(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21582081C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21582089C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE32ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE32ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE32ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE32ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21582090C()
{
  return &unk_26C65DB80;
}

void *sub_215820918(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DBA0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158209B0(void *a1)
{
  *a1 = &unk_26C65DBA0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215820A58(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DBA0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215820AB4(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DBA0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215820AEC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215820B68(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_215820C04(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_215820C84(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE37ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE37ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE37ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE37ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215820CF4()
{
  return &unk_26C65DC00;
}

void *sub_215820D00(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DC20;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215820D98(void *a1)
{
  *a1 = &unk_26C65DC20;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215820E40(uint64_t a1)
{
  double result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DC20;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215820E9C(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DC20;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215820ED4(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215820F50(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_215820FEC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21582106C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5I"
                     "mageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_"
                     "clINSA_3img11SharedImageILNSL_6FormatE38ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Err"
                                "orEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE38ENSL_13DynamicBufferELNSL_"
                                "10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE38ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_5ImageEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEES6_T_ENKUlRKSG_E_clINSA_3img11SharedImageILNSL_6FormatE38ENSL_13DynamicBufferELNSL_10MutabilityE0EEEEESC_SI_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2158210DC()
{
  return &unk_26C65DC80;
}

_DWORD *sub_2158210E8(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65ABE0[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158211DC()
{
}

void sub_2158213AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  sub_215821460(&a9);
  _Unwind_Resume(a1);
}

void sub_2158213E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  *(void *)(v2 + 8) = v3;
  size_t v5 = *(std::__shared_weak_count **)(v2 + 24);
  if (v5)
  {
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_215764BDC((uint64_t *)va);
  MEMORY[0x2166C4D20](v2, 0x10F3C4035895BD5);
  _Unwind_Resume(a1);
}

void **sub_215821460(void **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *uint64_t v2 = &unk_26C65F6A0;
    sub_2157C6F18((uint64_t)(v2 + 8));
    v2[1] = &unk_26C657100;
    uint64_t v3 = (std::__shared_weak_count *)v2[3];
    if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
    MEMORY[0x2166C4D20](v2, 0x10F3C4035895BD5);
  }
  return a1;
}

void *sub_21582153C(void *a1)
{
  *a1 = &unk_26C65F6A0;
  sub_2157C6F18((uint64_t)(a1 + 8));
  a1[1] = &unk_26C657100;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_2158215F8(void *a1)
{
  *a1 = &unk_26C65F6A0;
  sub_2157C6F18((uint64_t)(a1 + 8));
  a1[1] = &unk_26C657100;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158216C4(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_2158216CC(uint64_t a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65F660, 0);
  if (result)
  {
    if ((void *)a1 == lpsrc)
    {
      return 1;
    }
    else if (*(void *)(a1 + 48) == *(void *)(result + 48))
    {
      if (*(_DWORD *)(a1 + 56) == *(_DWORD *)(result + 56)
        && (*(_DWORD *)(a1 + 32) == *(_DWORD *)(result + 32)
          ? (BOOL v5 = *(_DWORD *)(a1 + 36) == *(_DWORD *)(result + 36))
          : (BOOL v5 = 0),
            v5))
      {
        return *(_DWORD *)(a1 + 40) == *(_DWORD *)(result + 40);
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void sub_2158217B4()
{
}

void sub_215821850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21582186C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885D80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885D80))
  {
    uint64_t v0 = sub_215807518();
    std::string::size_type size = v0->__r_.__value_.__l.__size_;
    if ((v0->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    {
      uint64_t v2 = HIBYTE(v0->__r_.__value_.__r.__words[2]);
    }
    else
    {
      uint64_t v0 = (std::string *)v0->__r_.__value_.__r.__words[0];
      uint64_t v2 = size;
    }
    sub_2157C6A10((char *)v0, v2, "::", 2, 0, (uint64_t)&v4);
    if (*(char *)(v5 - 1) < 0)
    {
      sub_215738B0C(&xmmword_267885D68, *(void **)(v5 - 24), *(void *)(v5 - 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v5 - 24);
      qword_267885D78 = *(void *)(v5 - 8);
      xmmword_267885D68 = v3;
    }
    sub_2157352DC(&v4);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885D68, &dword_21572C000);
    __cxa_guard_release(&qword_267885D80);
  }
  sub_2158233E8(&xmmword_267885D68, (uint64_t)"{");
}

void sub_215821988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_2158219A8(_Unwind_Exception *a1)
{
}

void sub_2158219C0(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 1;
}

void sub_2158219EC(void *lpsrc@<X0>, void *a2@<X8>)
{
}

void *sub_215821A3C(void *a1)
{
  *a1 = &unk_26C65F6A0;
  sub_2157C6F18((uint64_t)(a1 + 8));
  a1[1] = &unk_26C657100;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_215821AF8(void *a1)
{
  *a1 = &unk_26C65F6A0;
  sub_2157C6F18((uint64_t)(a1 + 8));
  a1[1] = &unk_26C657100;
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215821BC4()
{
  uint64_t v0 = sub_215822C20();
  sub_215821D20(v0, (uint64_t)"{");
}

void sub_215821C20()
{
  int v0 = 0;
  sub_215821F50();
}

void sub_215821CBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C65ABE0[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_215821CF4(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_215821D20(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_215821F50();
}

void sub_215821EC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215821ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215821EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215821F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215821F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215821F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215821F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215821F50()
{
}

void sub_21582213C(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215822160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158221A4(void *a1, uint64_t a2)
{
  sub_215822684(a2, &v32);
  uint64_t v4 = sub_215807518();
  int v5 = SHIBYTE(v4->__r_.__value_.__r.__words[2]);
  if (v5 >= 0) {
    uint64_t v6 = (uint64_t)v4;
  }
  else {
    uint64_t v6 = v4->__r_.__value_.__r.__words[0];
  }
  if (v5 >= 0) {
    uint64_t size = HIBYTE(v4->__r_.__value_.__r.__words[2]);
  }
  else {
    uint64_t size = v4->__r_.__value_.__l.__size_;
  }
  uint64_t v8 = sub_215731D94(a1, v6, size);
  sub_215731D94(v8, (uint64_t)": ", 2);
  uint64_t v9 = *(unsigned int *)(a2 + 48);
  if (v9 >= 0x29)
  {
    sub_215731D94(a1, (uint64_t)"Invalid Format (", 16);
    char v11 = (void *)std::ostream::operator<<();
    size_t v10 = sub_215731D94(v11, (uint64_t)")", 1);
  }
  else
  {
    size_t v10 = sub_215731D94(a1, (uint64_t)(&off_26425AE38)[2 * v9], (uint64_t)(&off_26425AE38)[2 * v9 + 1]);
  }
  sub_215731D94(v10, (uint64_t)", ", 2);
  sub_2158227C4((unsigned int *)(a2 + 24), (unsigned int *)(a2 + 32), "x", 1uLL, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v13 = __p.__r_.__value_.__l.__size_;
  }
  unint64_t v14 = sub_215731D94(a1, (uint64_t)p_p, v13);
  sub_215731D94(v14, (uint64_t)" ", 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  sub_215731D94(a1, (uint64_t)"[row byte stride ", 17);
  uint64_t v15 = (void *)std::ostream::operator<<();
  sub_215731D94(v15, (uint64_t)", ", 2);
  if (*(unsigned char *)(a2 + 52) && *(void *)(a2 + 40))
  {
    uint64_t v16 = *(void *)(a2 + 8);
    unint64_t v17 = *(std::__shared_weak_count **)(a2 + 16);
    if (v17)
    {
      atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
      if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
    }
    (*(void (**)(uint64_t, void, const char *))(*(void *)v16 + 88))(v16, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
  }
  uint64_t v18 = (void *)std::ostream::operator<<();
  sub_215731D94(v18, (uint64_t)"]", 1);
  sub_215731D94(a1, (uint64_t)", values = {\n", 13);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_26C65F5B0;
  std::string::size_type v19 = *(void *)(a2 + 8);
  uint64_t v20 = *(std::__shared_weak_count **)(a2 + 16);
  if (v20)
  {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v21 = *(void *)(a2 + 40);
    unsigned int v22 = *(_DWORD *)(a2 + 48);
    __int16 v23 = *(_WORD *)(a2 + 52);
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    uint64_t v21 = *(void *)(a2 + 40);
    unsigned int v22 = *(_DWORD *)(a2 + 48);
    __int16 v23 = *(_WORD *)(a2 + 52);
  }
  __p.__r_.__value_.__l.__size_ = v19;
  __p.__r_.__value_.__r.__words[2] = (std::string::size_type)v20;
  uint64_t v27 = *(void *)(a2 + 24);
  int v28 = *(_DWORD *)(a2 + 32);
  uint64_t v29 = v21;
  unsigned int v30 = v22;
  __int16 v31 = v23;
  if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
    std::__shared_weak_count::__release_weak(v20);
  }
  uint64_t v33 = a1;
  sub_215DABBA8(v30, &v33, &__p);
  uint64_t v24 = (std::__shared_weak_count *)__p.__r_.__value_.__r.__words[2];
  if (__p.__r_.__value_.__r.__words[2]
    && !atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__r.__words[2] + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
    std::__shared_weak_count::__release_weak(v24);
  }
  sub_215731D94(a1, (uint64_t)"\n}", 2);
  uint64_t result = v32;
  uint64_t v32 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_21582253C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_215822608((uint64_t)&__p);
  uint64_t v21 = a20;
  a20 = 0;
  if (!v21) {
    _Unwind_Resume(a1);
  }
  (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_215822608(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215822684(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5)
  {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      if (!v4) {
        goto LABEL_15;
      }
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      if (!v4) {
        goto LABEL_15;
      }
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v6) {
      goto LABEL_10;
    }
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    if (atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
      goto LABEL_10;
    }
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (*(unsigned char *)(a1 + 53)) {
      goto LABEL_11;
    }
LABEL_15:
    *a2 = 0;
    return;
  }
  if (!v4) {
    goto LABEL_15;
  }
LABEL_10:
  if (!*(unsigned char *)(a1 + 53)) {
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v7 = *(void (**)(uint64_t, void))(*(void *)v4 + 96);

  v7(v4, 0);
}

void sub_2158227C4(unsigned int *a1@<X0>, unsigned int *a2@<X2>, const std::string::value_type *a3@<X4>, std::string::size_type a4@<X5>, std::string *a5@<X8>)
{
  uint64_t v9 = a1 - a2;
  if (v9 >= -1) {
    uint64_t v10 = -1;
  }
  else {
    uint64_t v10 = a1 - a2;
  }
  std::string::size_type v11 = a4 * ~v10;
  uint64_t v12 = 0;
  int64_t v13 = (char *)a1 - (char *)a2;
  if (a1 != a2)
  {
    unint64_t v14 = a1;
    do
    {
      sub_2158229B4(v14);
      if ((v24 & 0x80u) == 0) {
        std::string::size_type v15 = v24;
      }
      else {
        std::string::size_type v15 = v23;
      }
      if ((char)v24 < 0) {
        operator delete(__p);
      }
      v12 += v15;
      ++v14;
    }
    while (v14 != a2);
  }
  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::string::reserve(a5, v12 + v11);
  if (v13 < 0)
  {
    sub_2158229B4(a1);
    if ((v24 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v24 & 0x80u) == 0) {
      std::string::size_type v17 = v24;
    }
    else {
      std::string::size_type v17 = v23;
    }
    std::string::append(a5, p_p, v17);
    if ((char)v24 < 0)
    {
      operator delete(__p);
      if ((unint64_t)(v9 + 1) < 2) {
        return;
      }
    }
    else if ((unint64_t)(v9 + 1) < 2)
    {
      return;
    }
    for (uint64_t i = a1 + 1; i != a2; ++i)
    {
      std::string::append(a5, a3, a4);
      sub_2158229B4(i);
      if ((v24 & 0x80u) == 0) {
        std::string::size_type v19 = (const std::string::value_type *)&__p;
      }
      else {
        std::string::size_type v19 = (const std::string::value_type *)__p;
      }
      if ((v24 & 0x80u) == 0) {
        std::string::size_type v20 = v24;
      }
      else {
        std::string::size_type v20 = v23;
      }
      std::string::append(a5, v19, v20);
      if ((char)v24 < 0) {
        operator delete(__p);
      }
    }
  }
}

void sub_215822970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2158229B4(unsigned int *a1)
{
  int v3 = 0;
  std::to_string(&v4, *a1);
  v5[0] = v2;
  v5[1] = &v4;
  v5[2] = v2;
  v5[3] = &v4;
  v5[4] = &v4;
  uint64_t v6 = v5;
  ((void (*)(void **, unsigned char *))off_26C65ABF8[0])(&v6, v2);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  if (v3 == -1) {
    sub_215742D4C();
  }
  v5[0] = &v4;
  uint64_t result = ((uint64_t (*)(void *, unsigned char *))off_26C65AC58[v3])(v5, v2);
  if (v3 != -1) {
    return ((uint64_t (*)(void *, unsigned char *))off_26C65ABE0[v3])(v5, v2);
  }
  return result;
}

void sub_215822AA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215822ABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_215742CF0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_215822AE0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_215822B6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_215822B74(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_215822B7C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *(void *)(result + 24);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 32);
  return result;
}

uint64_t sub_215822B90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

long long *sub_215822C20()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885C80, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885C80))
  {
    return &xmmword_267885C68;
  }
  uint64_t v1 = sub_215822D08();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267885C68, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267885C78 = v1->__r_.__value_.__r.__words[2];
    xmmword_267885C68 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885C68, &dword_21572C000);
  __cxa_guard_release(&qword_267885C80);
  return &xmmword_267885C68;
}

void sub_215822CF0(_Unwind_Exception *a1)
{
}

std::string *sub_215822D08()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885CA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885CA0))
  {
    return &stru_267885C88;
  }
  sub_215822FBC((uint64_t)__p);
  sub_215822E04(__p, &stru_267885C88);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885C88, &dword_21572C000);
  __cxa_guard_release(&qword_267885CA0);
  return &stru_267885C88;
}

void sub_215822DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885CA0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885CA0);
  _Unwind_Resume(a1);
}

void sub_215822E04(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  std::string v4 = sub_215807518();
  if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(__dst, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    std::string::size_type v16 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __dst = v5;
  }
  uint64_t v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    std::string::size_type v11 = v14;
    uint64_t v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    unint64_t v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_215822F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215822FBC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885CC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885CC0))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::img::SharedImage<cv3d::kit::img::Format::Dynamic, cv3d::kit::img::DynamicBuffer, cv3d::kit::img::Mutability::Const>>]", qword_267885CA8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885CA8, &dword_21572C000);
    __cxa_guard_release(&qword_267885CC0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885CE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885CE0))
  {
    size_t v3 = sub_215747D98(qword_267885CA8, "<", 0);
    sub_215747C90(qword_267885CA8, 0, v3, qword_267885CC8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885CC8, &dword_21572C000);
    __cxa_guard_release(&qword_267885CE0);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885D00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885D00))
  {
    sub_215E19DF4((uint64_t)qword_267885CC8, (uint64_t)&xmmword_267885CE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885CE8, &dword_21572C000);
    __cxa_guard_release(&qword_267885D00);
  }
  if (byte_267885CFF < 0)
  {
    long long v2 = xmmword_267885CE8;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885CE8;
    *(void *)(a1 + 16) = unk_267885CF8;
  }
}

void sub_215823184(_Unwind_Exception *a1)
{
}

void sub_21582319C(_Unwind_Exception *a1)
{
}

void sub_2158231B4(_Unwind_Exception *a1)
{
}

long long *sub_2158231CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885D20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885D20))
  {
    return &xmmword_267885D08;
  }
  uint64_t v1 = (char *)sub_2158232B4();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267885D08, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267885D18 = *((void *)v1 + 2);
    xmmword_267885D08 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885D08, &dword_21572C000);
  __cxa_guard_release(&qword_267885D20);
  return &xmmword_267885D08;
}

void sub_21582329C(_Unwind_Exception *a1)
{
}

void *sub_2158232B4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885D40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885D40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ImageData]", qword_267885D28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885D28, &dword_21572C000);
    __cxa_guard_release(&qword_267885D40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885D60, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885D60))
  {
    return &unk_267885D48;
  }
  sub_215E19DF4((uint64_t)qword_267885D28, (uint64_t)&unk_267885D48);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267885D48, &dword_21572C000);
  __cxa_guard_release(&qword_267885D60);
  return &unk_267885D48;
}

void sub_2158233B8(_Unwind_Exception *a1)
{
}

void sub_2158233D0(_Unwind_Exception *a1)
{
}

void sub_2158233E8(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_215821F50();
}

void sub_21582352C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215823544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215823558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21582356C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215823580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215823594(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v205 = *MEMORY[0x263EF8340];
  switch(a2)
  {
    case 1:
      int v5 = &unk_26C65AE70;
      v175 = &unk_26C65AE70;
      sub_2158066DC((uint64_t)&v176, a4);
      if (!sub_2158050C8(v176, v177))
      {
        LOBYTE(v185) = 0;
        LOBYTE(v190) = 0;
        goto LABEL_87;
      }
      v199 = &unk_26C65AC80;
      sub_215805418((uint64_t)&v200, &v175);
      uint64_t v6 = (uint64_t)v200;
      uint64_t v7 = v201;
      v192 = &unk_26C65AC80;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[9] = *(_OWORD *)((char *)v202 + 9);
      LOBYTE(v196) = 1;
      LOBYTE(v190) = 0;
      v185 = &unk_26C65AD78;
      if (v7)
      {
        p_shared_owners = &v7->__shared_owners_;
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        *(void *)&long long v189 = *(void *)&v195[16];
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v6;
        v187 = v7;
        if (atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_6;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
          if (atomic_fetch_add(p_shared_owners, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_6:
            LOBYTE(v190) = 1;
            if (!(_BYTE)v196)
            {
LABEL_248:
              uint64_t v133 = v186;
              v134 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v134->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v134->__on_zero_shared)(v134);
                  std::__shared_weak_count::__release_weak(v134);
                }
              }
              sub_215B2E878(v133, a1);
              goto LABEL_282;
            }
            goto LABEL_244;
          }
        }
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
        LOBYTE(v190) = 1;
        if (!(_BYTE)v196) {
          goto LABEL_248;
        }
      }
      else
      {
        uint64_t v186 = v6;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        *(void *)&long long v189 = *(void *)&v195[16];
        LOBYTE(v190) = 1;
      }
LABEL_244:
      v192 = &unk_26C65AC80;
      v132 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
        std::__shared_weak_count::__release_weak(v132);
      }
      if ((_BYTE)v190) {
        goto LABEL_248;
      }
LABEL_87:
      uint64_t v48 = v178;
      if (v181 && v178)
      {
        char v49 = v176;
        uint64_t v50 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v50->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v49 + 88))(v49, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v48 = v178;
      }
      uint64_t v51 = v180;
      char v53 = v176;
      uint64_t v52 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65DCA0;
      v193 = v53;
      v194 = v52;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v179, 0x4C303038u, v48, v51 | 0x100000000, (uint64_t)&v192);
    case 2:
      int v5 = &unk_26C65B1A0;
      v175 = &unk_26C65B1A0;
      sub_215808B80((uint64_t)&v176, a4);
      if (!sub_215807980(v176, v177))
      {
        LOBYTE(v185) = 0;
        LOBYTE(v190) = 0;
        goto LABEL_97;
      }
      v199 = &unk_26C65AFB0;
      sub_215807CD0((uint64_t)&v200, &v175);
      uint64_t v9 = (uint64_t)v200;
      uint64_t v10 = v201;
      v192 = &unk_26C65AFB0;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[9] = *(_OWORD *)((char *)v202 + 9);
      LOBYTE(v196) = 1;
      LOBYTE(v190) = 0;
      v185 = &unk_26C65B0A8;
      if (v10)
      {
        std::string::size_type v11 = &v10->__shared_owners_;
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        *(void *)&long long v189 = *(void *)&v195[16];
        atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v9;
        v187 = v10;
        if (atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v11, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_12;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
          if (atomic_fetch_add(v11, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_12:
            LOBYTE(v190) = 1;
            if (!(_BYTE)v196)
            {
LABEL_258:
              uint64_t v136 = v186;
              v137 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v137->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v137->__on_zero_shared)(v137);
                  std::__shared_weak_count::__release_weak(v137);
                }
              }
              sub_215B34F60(v136, a1);
              goto LABEL_282;
            }
            goto LABEL_254;
          }
        }
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v10);
        LOBYTE(v190) = 1;
        if (!(_BYTE)v196) {
          goto LABEL_258;
        }
      }
      else
      {
        uint64_t v186 = v9;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        *(void *)&long long v189 = *(void *)&v195[16];
        LOBYTE(v190) = 1;
      }
LABEL_254:
      v192 = &unk_26C65AFB0;
      v135 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v135->__on_zero_shared)(v135);
        std::__shared_weak_count::__release_weak(v135);
      }
      if ((_BYTE)v190) {
        goto LABEL_258;
      }
LABEL_97:
      uint64_t v54 = v178;
      if (v181 && v178)
      {
        char v55 = v176;
        char v56 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v56->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
            std::__shared_weak_count::__release_weak(v56);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v55 + 88))(v55, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v54 = v178;
      }
      uint64_t v57 = 2 * v180;
      uint64_t v59 = v176;
      int v58 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65DD20;
      v193 = v59;
      v194 = v58;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v179, 0x62313667u, v54, v57 | 0x100000000, (uint64_t)&v192);
    case 3:
      int v5 = &unk_26C65B488;
      v175 = &unk_26C65B488;
      sub_21580A13C((uint64_t)&v176, a4);
      if (!sub_215808F3C(v176, v177))
      {
        LOBYTE(v185) = 0;
        LOBYTE(v190) = 0;
        goto LABEL_107;
      }
      v199 = &unk_26C65B298;
      sub_21580928C((uint64_t)&v200, &v175);
      uint64_t v12 = (uint64_t)v200;
      int64_t v13 = v201;
      v192 = &unk_26C65B298;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[9] = *(_OWORD *)((char *)v202 + 9);
      LOBYTE(v196) = 1;
      LOBYTE(v190) = 0;
      v185 = &unk_26C65B390;
      if (v13)
      {
        unint64_t v14 = &v13->__shared_owners_;
        atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        *(void *)&long long v189 = *(void *)&v195[16];
        atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v12;
        v187 = v13;
        if (atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_18;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
          if (atomic_fetch_add(v14, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_18:
            LOBYTE(v190) = 1;
            if (!(_BYTE)v196)
            {
LABEL_268:
              uint64_t v139 = v186;
              v140 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v140->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v140->__on_zero_shared)(v140);
                  std::__shared_weak_count::__release_weak(v140);
                }
              }
              sub_215B39D38(v139, a1);
              goto LABEL_282;
            }
            goto LABEL_264;
          }
        }
        ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
        std::__shared_weak_count::__release_weak(v13);
        LOBYTE(v190) = 1;
        if (!(_BYTE)v196) {
          goto LABEL_268;
        }
      }
      else
      {
        uint64_t v186 = v12;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        *(void *)&long long v189 = *(void *)&v195[16];
        LOBYTE(v190) = 1;
      }
LABEL_264:
      v192 = &unk_26C65B298;
      v138 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
        std::__shared_weak_count::__release_weak(v138);
      }
      if ((_BYTE)v190) {
        goto LABEL_268;
      }
LABEL_107:
      uint64_t v60 = v178;
      if (v181 && v178)
      {
        long long v61 = v176;
        uint64_t v62 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v62->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
            std::__shared_weak_count::__release_weak(v62);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v61 + 88))(v61, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v60 = v178;
      }
      uint64_t v63 = 2 * v180;
      unsigned __int8 v65 = v176;
      uint64_t v64 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65DDA0;
      v193 = v65;
      v194 = v64;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v179, 0x4C303068u, v60, v63 | 0x100000000, (uint64_t)&v192);
    case 4:
      int v5 = &unk_26C65B770;
      v175 = &unk_26C65B770;
      sub_21580B6F8((uint64_t)&v176, a4);
      if (!sub_21580A4F8(v176, v177))
      {
        LOBYTE(v185) = 0;
        LOBYTE(v190) = 0;
        goto LABEL_117;
      }
      v199 = &unk_26C65B580;
      sub_21580A848((uint64_t)&v200, &v175);
      uint64_t v15 = (uint64_t)v200;
      std::string::size_type v16 = v201;
      v192 = &unk_26C65B580;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[9] = *(_OWORD *)((char *)v202 + 9);
      LOBYTE(v196) = 1;
      LOBYTE(v190) = 0;
      v185 = &unk_26C65B678;
      if (!v16)
      {
        uint64_t v186 = v15;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        *(void *)&long long v189 = *(void *)&v195[16];
        LOBYTE(v190) = 1;
        goto LABEL_274;
      }
      long long v17 = &v16->__shared_owners_;
      atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v188 = *(_OWORD *)v195;
      *(void *)&long long v189 = *(void *)&v195[16];
      atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v186 = v15;
      v187 = v16;
      if (atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v17, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_24;
        }
LABEL_273:
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
        LOBYTE(v190) = 1;
        if (!(_BYTE)v196) {
          goto LABEL_278;
        }
        goto LABEL_274;
      }
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
      if (!atomic_fetch_add(v17, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_273;
      }
LABEL_24:
      LOBYTE(v190) = 1;
      if ((_BYTE)v196)
      {
LABEL_274:
        v192 = &unk_26C65B580;
        v141 = v194;
        if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v141->__on_zero_shared)(v141);
          std::__shared_weak_count::__release_weak(v141);
        }
        if ((_BYTE)v190) {
          goto LABEL_278;
        }
LABEL_117:
        uint64_t v66 = v178;
        if (v181 && v178)
        {
          uint64_t v67 = v176;
          uint64_t v68 = v177;
          if (v177)
          {
            atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
            if (!atomic_fetch_add(&v68->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
              std::__shared_weak_count::__release_weak(v68);
            }
          }
          (*(void (**)(const void *, void, const char *))(*(void *)v67 + 88))(v67, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
          uint64_t v66 = v178;
        }
        uint64_t v69 = 4 * v180;
        char v71 = v176;
        uint64_t v70 = v177;
        if (v177) {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v192 = &unk_26C65DE20;
        v193 = v71;
        v194 = v70;
        *(void *)v195 = &v192;
        v195[8] = 1;
        sub_215B6305C(v179, 0x4C303066u, v66, v69 | 0x100000000, (uint64_t)&v192);
      }
LABEL_278:
      uint64_t v142 = v186;
      v143 = v187;
      if (v187)
      {
        atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
        if (!atomic_fetch_add(&v143->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
          std::__shared_weak_count::__release_weak(v143);
        }
      }
      sub_215B3EA10(v142, a1);
LABEL_282:
      if (!(_BYTE)v190) {
        goto LABEL_286;
      }
LABEL_283:
      v144 = v187;
      if (v187 && !atomic_fetch_add(&v187->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v144->__on_zero_shared)(v144);
        std::__shared_weak_count::__release_weak(v144);
      }
LABEL_286:
      v175 = v5;
      v145 = v177;
      if (v177)
      {
        if (!atomic_fetch_add(&v177->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v145->__on_zero_shared)(v145);
          std::__shared_weak_count::__release_weak(v145);
        }
      }
      return;
    case 5:
      int v5 = &unk_26C65BA58;
      v175 = &unk_26C65BA58;
      sub_21580CCB4((uint64_t)&v176, a4);
      if (!sub_21580BAB4(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_127;
      }
      v199 = &unk_26C65B868;
      sub_21580BE04((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v18 = (uint64_t)v200;
      uint64_t v19 = v201;
      v192 = &unk_26C65B868;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65B960;
      if (v19)
      {
        std::string::size_type v20 = &v19->__shared_owners_;
        atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v18;
        v187 = v19;
        if (atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v20, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_30;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
          std::__shared_weak_count::__release_weak(v19);
          if (atomic_fetch_add(v20, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_30:
            char v191 = 1;
            if (!v198)
            {
LABEL_296:
              uint64_t v147 = v186;
              v148 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v148->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v148->__on_zero_shared)(v148);
                  std::__shared_weak_count::__release_weak(v148);
                }
              }
              sub_215B30234(v147, a1);
              goto LABEL_240;
            }
            goto LABEL_292;
          }
        }
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
        char v191 = 1;
        if (!v198) {
          goto LABEL_296;
        }
      }
      else
      {
        uint64_t v186 = v18;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
      }
LABEL_292:
      v192 = &unk_26C65B868;
      v146 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v146->__on_zero_shared)(v146);
        std::__shared_weak_count::__release_weak(v146);
      }
      if (v191) {
        goto LABEL_296;
      }
LABEL_127:
      uint64_t v72 = v178;
      if (v184 && v178)
      {
        uint64_t v73 = v176;
        int v74 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v74->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v74->__on_zero_shared)(v74);
            std::__shared_weak_count::__release_weak(v74);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v73 + 88))(v73, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v72 = v178;
      }
      uint64_t v75 = v182;
      long long v77 = v176;
      long long v76 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65DEA0;
      v193 = v77;
      v194 = v76;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v183, 0x32433038u, v72, v75 | 0x100000000, (uint64_t)&v192);
    case 7:
      int v5 = &unk_26C65BD40;
      v175 = &unk_26C65BD40;
      sub_21580E2F0((uint64_t)&v176, a4);
      if (!sub_21580D0F0(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_137;
      }
      v199 = &unk_26C65BB50;
      sub_21580D440((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v21 = (uint64_t)v200;
      unsigned int v22 = v201;
      v192 = &unk_26C65BB50;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65BC48;
      if (v22)
      {
        std::string::size_type v23 = &v22->__shared_owners_;
        atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v21;
        v187 = v22;
        if (atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v23, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_36;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
          std::__shared_weak_count::__release_weak(v22);
          if (atomic_fetch_add(v23, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_36:
            char v191 = 1;
            if (!v198)
            {
LABEL_306:
              uint64_t v150 = v186;
              v151 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v151->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v151->__on_zero_shared)(v151);
                  std::__shared_weak_count::__release_weak(v151);
                }
              }
              sub_215B3B7D4(v150, a1);
              goto LABEL_240;
            }
            goto LABEL_302;
          }
        }
        ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
        std::__shared_weak_count::__release_weak(v22);
        char v191 = 1;
        if (!v198) {
          goto LABEL_306;
        }
      }
      else
      {
        uint64_t v186 = v21;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
      }
LABEL_302:
      v192 = &unk_26C65BB50;
      v149 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
        std::__shared_weak_count::__release_weak(v149);
      }
      if (v191) {
        goto LABEL_306;
      }
LABEL_137:
      uint64_t v78 = v178;
      if (v184 && v178)
      {
        long long v79 = v176;
        long long v80 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v80->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
            std::__shared_weak_count::__release_weak(v80);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v79 + 88))(v79, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v78 = v178;
      }
      uint64_t v81 = 2 * v182;
      long long v83 = v176;
      long long v82 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65DF20;
      v193 = v83;
      v194 = v82;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v183, 0x32433068u, v78, v81 | 0x100000000, (uint64_t)&v192);
    case 8:
      int v5 = &unk_26C65C028;
      v175 = &unk_26C65C028;
      sub_21580F930((uint64_t)&v176, a4);
      if (!sub_21580E730(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_147;
      }
      v199 = &unk_26C65BE38;
      sub_21580EA80((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v24 = (uint64_t)v200;
      int8x16_t v25 = v201;
      v192 = &unk_26C65BE38;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65BF30;
      if (v25)
      {
        uint64_t v26 = &v25->__shared_owners_;
        atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v24;
        v187 = v25;
        if (atomic_fetch_add(&v25->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v26, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_42;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
          if (atomic_fetch_add(v26, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_42:
            char v191 = 1;
            if (!v198)
            {
LABEL_316:
              uint64_t v153 = v186;
              v154 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v154->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
                  std::__shared_weak_count::__release_weak(v154);
                }
              }
              sub_215B40568(v153, a1);
              goto LABEL_240;
            }
            goto LABEL_312;
          }
        }
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
        char v191 = 1;
        if (!v198) {
          goto LABEL_316;
        }
      }
      else
      {
        uint64_t v186 = v24;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
      }
LABEL_312:
      v192 = &unk_26C65BE38;
      v152 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v152->__on_zero_shared)(v152);
        std::__shared_weak_count::__release_weak(v152);
      }
      if (v191) {
        goto LABEL_316;
      }
LABEL_147:
      long long v84 = v178;
      if (v184 && v178)
      {
        long long v85 = v176;
        uint64_t v86 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v86->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v86->__on_zero_shared)(v86);
            std::__shared_weak_count::__release_weak(v86);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v85 + 88))(v85, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        long long v84 = v178;
      }
      uint64_t v87 = 4 * v182;
      long long v89 = v176;
      long long v88 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65DFA0;
      v193 = v89;
      v194 = v88;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v183, 0x32433066u, v84, v87 | 0x100000000, (uint64_t)&v192);
    case 21:
      int v5 = &unk_26C65C310;
      v175 = &unk_26C65C310;
      sub_215810F70((uint64_t)&v176, a4);
      if (!sub_21580FD70(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_157;
      }
      v199 = &unk_26C65C120;
      sub_2158100C0((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v27 = (uint64_t)v200;
      int v28 = v201;
      v192 = &unk_26C65C120;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65C218;
      if (v28)
      {
        uint64_t v29 = &v28->__shared_owners_;
        atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v27;
        v187 = v28;
        if (atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v29, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_48;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
          if (atomic_fetch_add(v29, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_48:
            char v191 = 1;
            if (!v198)
            {
LABEL_326:
              uint64_t v156 = v186;
              v157 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v157->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v157->__on_zero_shared)(v157);
                  std::__shared_weak_count::__release_weak(v157);
                }
              }
              sub_215B31D70(v156, a1);
              goto LABEL_240;
            }
            goto LABEL_322;
          }
        }
        ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
        std::__shared_weak_count::__release_weak(v28);
        char v191 = 1;
        if (!v198) {
          goto LABEL_326;
        }
      }
      else
      {
        uint64_t v186 = v27;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
      }
LABEL_322:
      v192 = &unk_26C65C120;
      v155 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v155->__on_zero_shared)(v155);
        std::__shared_weak_count::__release_weak(v155);
      }
      if (v191) {
        goto LABEL_326;
      }
LABEL_157:
      int v90 = v178;
      if (v184 && v178)
      {
        long long v91 = v176;
        uint64_t v92 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v92->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v92->__on_zero_shared)(v92);
            std::__shared_weak_count::__release_weak(v92);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v91 + 88))(v91, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        int v90 = v178;
      }
      uint64_t v93 = v182;
      uint64_t v95 = v176;
      uint64_t v94 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65E020;
      v193 = v95;
      v194 = v94;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v183, 0x18u, v90, v93 | 0x100000000, (uint64_t)&v192);
    case 22:
      int v5 = &unk_26C65C5F8;
      v175 = &unk_26C65C5F8;
      sub_2158125AC((uint64_t)&v176, a4);
      if (!sub_2158113AC(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_167;
      }
      v199 = &unk_26C65C408;
      sub_2158116FC((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v30 = (uint64_t)v200;
      __int16 v31 = v201;
      v192 = &unk_26C65C408;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65C500;
      if (v31)
      {
        uint64_t v32 = &v31->__shared_owners_;
        atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v30;
        v187 = v31;
        if (atomic_fetch_add(&v31->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v32, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_54;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
          std::__shared_weak_count::__release_weak(v31);
          if (atomic_fetch_add(v32, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_54:
            char v191 = 1;
            if (!v198)
            {
LABEL_336:
              uint64_t v159 = v186;
              v160 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v160->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
                  std::__shared_weak_count::__release_weak(v160);
                }
              }
              sub_215B36AA4(v159, a1);
              goto LABEL_240;
            }
            goto LABEL_332;
          }
        }
        ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
        std::__shared_weak_count::__release_weak(v31);
        char v191 = 1;
        if (!v198) {
          goto LABEL_336;
        }
      }
      else
      {
        uint64_t v186 = v30;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
      }
LABEL_332:
      v192 = &unk_26C65C408;
      v158 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v158->__on_zero_shared)(v158);
        std::__shared_weak_count::__release_weak(v158);
      }
      if (v191) {
        goto LABEL_336;
      }
LABEL_167:
      unint64_t v96 = v178;
      if (v184 && v178)
      {
        long long v97 = v176;
        char v98 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v98->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v97 + 88))(v97, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        unint64_t v96 = v178;
      }
      uint64_t v99 = 2 * v182;
      uint64_t v101 = v176;
      long long v100 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65E0A0;
      v193 = v101;
      v194 = v100;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v183, 0x62343872u, v96, v99 | 0x100000000, (uint64_t)&v192);
    case 25:
      int v5 = &unk_26C65C8E0;
      v175 = &unk_26C65C8E0;
      sub_215813BEC((uint64_t)&v176, a4);
      if (!sub_2158129EC(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_177;
      }
      v199 = &unk_26C65C6F0;
      sub_215812D3C((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v33 = (uint64_t)v200;
      uint64_t v34 = v201;
      v192 = &unk_26C65C6F0;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65C7E8;
      if (!v34)
      {
        uint64_t v186 = v33;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
LABEL_342:
        v192 = &unk_26C65C6F0;
        v161 = v194;
        if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v161->__on_zero_shared)(v161);
          std::__shared_weak_count::__release_weak(v161);
        }
        if (v191) {
          goto LABEL_346;
        }
LABEL_177:
        long long v102 = v178;
        if (v184 && v178)
        {
          long long v103 = v176;
          long long v104 = v177;
          if (v177)
          {
            atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
            if (!atomic_fetch_add(&v104->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v104->__on_zero_shared)(v104);
              std::__shared_weak_count::__release_weak(v104);
            }
          }
          (*(void (**)(const void *, void, const char *))(*(void *)v103 + 88))(v103, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
          long long v102 = v178;
        }
        uint64_t v105 = v182;
        long long v107 = v176;
        char v106 = v177;
        if (v177) {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v192 = &unk_26C65E120;
        v193 = v107;
        v194 = v106;
        *(void *)v195 = &v192;
        v195[8] = 1;
        sub_215B6305C(v183, 0x42475241u, v102, v105 | 0x100000000, (uint64_t)&v192);
      }
      uint64_t v35 = &v34->__shared_owners_;
      atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v188 = *(_OWORD *)v195;
      long long v189 = *(_OWORD *)&v195[16];
      long long v190 = v196;
      atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v186 = v33;
      v187 = v34;
      if (atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_60;
        }
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
        std::__shared_weak_count::__release_weak(v34);
        if (atomic_fetch_add(v35, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_60:
          char v191 = 1;
          if (!v198) {
            goto LABEL_346;
          }
          goto LABEL_342;
        }
      }
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      char v191 = 1;
      if (!v198)
      {
LABEL_346:
        uint64_t v162 = v186;
        v163 = v187;
        if (v187)
        {
          atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v163->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v163->__on_zero_shared)(v163);
            std::__shared_weak_count::__release_weak(v163);
          }
        }
LABEL_349:
        sub_215B336A4(v162, a1);
        goto LABEL_240;
      }
      goto LABEL_342;
    case 31:
      int v5 = &unk_26C65CBC8;
      v175 = &unk_26C65CBC8;
      sub_215815228((uint64_t)&v176, a4);
      if (!sub_215814028(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_187;
      }
      v199 = &unk_26C65C9D8;
      sub_215814378((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v36 = (uint64_t)v200;
      uint64_t v37 = v201;
      v192 = &unk_26C65C9D8;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65CAD0;
      if (v37)
      {
        uint64_t v38 = &v37->__shared_owners_;
        atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        atomic_fetch_add_explicit(&v37->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v36;
        v187 = v37;
        if (atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v38, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_66;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
          std::__shared_weak_count::__release_weak(v37);
          if (atomic_fetch_add(v38, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_66:
            char v191 = 1;
            if (!v198)
            {
LABEL_356:
              uint64_t v165 = v186;
              v166 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v166->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v166->__on_zero_shared)(v166);
                  std::__shared_weak_count::__release_weak(v166);
                }
              }
              sub_215B3D154(v165, a1);
              goto LABEL_240;
            }
            goto LABEL_352;
          }
        }
        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
        std::__shared_weak_count::__release_weak(v37);
        char v191 = 1;
        if (!v198) {
          goto LABEL_356;
        }
      }
      else
      {
        uint64_t v186 = v36;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
      }
LABEL_352:
      v192 = &unk_26C65C9D8;
      v164 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
        std::__shared_weak_count::__release_weak(v164);
      }
      if (v191) {
        goto LABEL_356;
      }
LABEL_187:
      uint64_t v108 = v178;
      if (v184 && v178)
      {
        int v109 = v176;
        long long v110 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v110->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
            std::__shared_weak_count::__release_weak(v110);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v109 + 88))(v109, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        uint64_t v108 = v178;
      }
      uint64_t v111 = 2 * v182;
      long long v113 = v176;
      char v112 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65E1A0;
      v193 = v113;
      v194 = v112;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v183, 0x52476841u, v108, v111 | 0x100000000, (uint64_t)&v192);
    case 32:
      int v5 = &unk_26C65CEB0;
      v175 = &unk_26C65CEB0;
      sub_215816868((uint64_t)&v176, a4);
      if (!sub_215815668(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_197;
      }
      v199 = &unk_26C65CCC0;
      sub_2158159B8((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v39 = (uint64_t)v200;
      char v40 = v201;
      v192 = &unk_26C65CCC0;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65CDB8;
      if (v40)
      {
        uint64_t v41 = &v40->__shared_owners_;
        atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        atomic_fetch_add_explicit(&v40->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v39;
        v187 = v40;
        if (atomic_fetch_add(&v40->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v41, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_72;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
          if (atomic_fetch_add(v41, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_72:
            char v191 = 1;
            if (!v198)
            {
LABEL_366:
              uint64_t v168 = v186;
              v169 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v169->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v169->__on_zero_shared)(v169);
                  std::__shared_weak_count::__release_weak(v169);
                }
              }
              sub_215B4212C(v168, a1);
              goto LABEL_240;
            }
            goto LABEL_362;
          }
        }
        ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
        std::__shared_weak_count::__release_weak(v40);
        char v191 = 1;
        if (!v198) {
          goto LABEL_366;
        }
      }
      else
      {
        uint64_t v186 = v39;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
      }
LABEL_362:
      v192 = &unk_26C65CCC0;
      v167 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v167->__on_zero_shared)(v167);
        std::__shared_weak_count::__release_weak(v167);
      }
      if (v191) {
        goto LABEL_366;
      }
LABEL_197:
      long long v114 = v178;
      if (v184 && v178)
      {
        long long v115 = v176;
        long long v116 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v116->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
            std::__shared_weak_count::__release_weak(v116);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v115 + 88))(v115, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        long long v114 = v178;
      }
      uint64_t v117 = 4 * v182;
      uint64_t v119 = v176;
      uint64_t v118 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65E220;
      v193 = v119;
      v194 = v118;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v183, 0x52476641u, v114, v117 | 0x100000000, (uint64_t)&v192);
    case 37:
      int v5 = &unk_26C65D198;
      v175 = &unk_26C65D198;
      sub_215817EA8((uint64_t)&v176, a4);
      if (!sub_215816CA8(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_207;
      }
      v199 = &unk_26C65CFA8;
      sub_215816FF8((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v42 = (uint64_t)v200;
      unsigned __int8 v43 = v201;
      v192 = &unk_26C65CFA8;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65D0A0;
      if (!v43)
      {
        uint64_t v186 = v42;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
LABEL_372:
        v192 = &unk_26C65CFA8;
        v170 = v194;
        if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v170->__on_zero_shared)(v170);
          std::__shared_weak_count::__release_weak(v170);
        }
        if (v191) {
          goto LABEL_376;
        }
LABEL_207:
        unint64_t v120 = v178;
        if (v184 && v178)
        {
          long long v121 = v176;
          unint64_t v122 = v177;
          if (v177)
          {
            atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
            if (!atomic_fetch_add(&v122->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
              std::__shared_weak_count::__release_weak(v122);
            }
          }
          (*(void (**)(const void *, void, const char *))(*(void *)v121 + 88))(v121, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
          unint64_t v120 = v178;
        }
        uint64_t v123 = v182;
        long long v125 = v176;
        long long v124 = v177;
        if (v177) {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        v192 = &unk_26C65E2A0;
        v193 = v125;
        v194 = v124;
        *(void *)v195 = &v192;
        v195[8] = 1;
        sub_215B6305C(v183, 0x20u, v120, v123 | 0x100000000, (uint64_t)&v192);
      }
      uint64_t v44 = &v43->__shared_owners_;
      atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
      atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
      long long v188 = *(_OWORD *)v195;
      long long v189 = *(_OWORD *)&v195[16];
      long long v190 = v196;
      atomic_fetch_add_explicit(&v43->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v186 = v42;
      v187 = v43;
      if (atomic_fetch_add(&v43->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        if (atomic_fetch_add(v44, 0xFFFFFFFFFFFFFFFFLL)) {
          goto LABEL_78;
        }
      }
      else
      {
        ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
        std::__shared_weak_count::__release_weak(v43);
        if (atomic_fetch_add(v44, 0xFFFFFFFFFFFFFFFFLL))
        {
LABEL_78:
          char v191 = 1;
          if (!v198) {
            goto LABEL_376;
          }
          goto LABEL_372;
        }
      }
      ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
      std::__shared_weak_count::__release_weak(v43);
      char v191 = 1;
      if (!v198)
      {
LABEL_376:
        uint64_t v162 = v186;
        v171 = v187;
        if (v187)
        {
          atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v171->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
            std::__shared_weak_count::__release_weak(v171);
          }
        }
        goto LABEL_349;
      }
      goto LABEL_372;
    case 38:
      int v5 = &unk_26C65D480;
      v175 = &unk_26C65D480;
      sub_2158194E4((uint64_t)&v176, a4);
      if (!sub_2158182E4(v176, v177))
      {
        LOBYTE(v185) = 0;
        char v191 = 0;
        goto LABEL_217;
      }
      v199 = &unk_26C65D290;
      sub_215818634((uint64_t)&v200, (uint64_t)&v175);
      uint64_t v45 = (uint64_t)v200;
      uint64_t v46 = v201;
      v192 = &unk_26C65D290;
      v193 = v200;
      v194 = v201;
      v200 = 0;
      v201 = 0;
      *(_OWORD *)v195 = v202[0];
      *(_OWORD *)&v195[16] = v202[1];
      long long v196 = v203;
      char v197 = v204;
      char v198 = 1;
      char v191 = 0;
      v185 = &unk_26C65D388;
      if (v46)
      {
        long long v47 = &v46->__shared_owners_;
        atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        atomic_fetch_add_explicit(&v46->__shared_owners_, 1uLL, memory_order_relaxed);
        uint64_t v186 = v45;
        v187 = v46;
        if (atomic_fetch_add(&v46->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          if (atomic_fetch_add(v47, 0xFFFFFFFFFFFFFFFFLL)) {
            goto LABEL_84;
          }
        }
        else
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
          if (atomic_fetch_add(v47, 0xFFFFFFFFFFFFFFFFLL))
          {
LABEL_84:
            char v191 = 1;
            if (!v198)
            {
LABEL_386:
              uint64_t v173 = v186;
              v174 = v187;
              if (v187)
              {
                atomic_fetch_add_explicit(&v187->__shared_owners_, 1uLL, memory_order_relaxed);
                if (!atomic_fetch_add(&v174->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v174->__on_zero_shared)(v174);
                  std::__shared_weak_count::__release_weak(v174);
                }
              }
              sub_215B385F4(v173, a1);
LABEL_240:
              if (!v191) {
                goto LABEL_286;
              }
              goto LABEL_283;
            }
            goto LABEL_382;
          }
        }
        ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
        std::__shared_weak_count::__release_weak(v46);
        char v191 = 1;
        if (!v198) {
          goto LABEL_386;
        }
      }
      else
      {
        uint64_t v186 = v45;
        v187 = 0;
        long long v188 = *(_OWORD *)v195;
        long long v189 = *(_OWORD *)&v195[16];
        long long v190 = v196;
        char v191 = 1;
      }
LABEL_382:
      v192 = &unk_26C65D290;
      v172 = v194;
      if (v194 && !atomic_fetch_add(&v194->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v172->__on_zero_shared)(v172);
        std::__shared_weak_count::__release_weak(v172);
      }
      if (v191) {
        goto LABEL_386;
      }
LABEL_217:
      long long v126 = v178;
      if (v184 && v178)
      {
        long long v127 = v176;
        uint64_t v128 = v177;
        if (v177)
        {
          atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
          if (!atomic_fetch_add(&v128->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
            std::__shared_weak_count::__release_weak(v128);
          }
        }
        (*(void (**)(const void *, void, const char *))(*(void *)v127 + 88))(v127, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/SharedImage.h:1234");
        long long v126 = v178;
      }
      uint64_t v129 = 2 * v182;
      v131 = v176;
      v130 = v177;
      if (v177) {
        atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      v192 = &unk_26C65E320;
      v193 = v131;
      v194 = v130;
      *(void *)v195 = &v192;
      v195[8] = 1;
      sub_215B6305C(v183, 0x62363461u, v126, v129 | 0x100000000, (uint64_t)&v192);
    default:
      sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_215E1ABD8);
      abort();
  }
}

void sub_2158277C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215827BF4(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DCA0;
  long long v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215827C8C(void *a1)
{
  *a1 = &unk_26C65DCA0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215827D34(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DCA0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215827D90(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DCA0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215827DC8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215827E44(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_215827EE0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_215827F60(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE1ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE1ENSO_13DynamicBuff"
                                "erELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE1ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE1ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215827FD0()
{
  return &unk_26C65DD00;
}

void *sub_215827FDC(unsigned int a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v5 = a1;
  uint64_t result = &unk_26C67D780;
  switch(v5)
  {
    case 1:
      uint64_t v9 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 24);
      a3[1] = off_26C67D770;
      a3[2] = v9;
      a3[3] = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t result = 0;
      *a3 = sub_215827FDC;
      return result;
    case 2:
      a3[1] = off_26C67D770;
      *((_OWORD *)a3 + 1) = *(_OWORD *)(a2 + 16);
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *a3 = sub_215827FDC;
      (**(void (***)(void))(a2 + 8))();
      uint64_t result = 0;
      *(void *)a2 = 0;
      return result;
    case 3:
      if (a4)
      {
        uint64_t v10 = *(void *)(a4 + 8);
        if (v10 != qword_26C67D788)
        {
          if ((qword_26C67D788 & v10) < 0 == __OFSUB__(v10, qword_26C67D788)) {
            return 0;
          }
          if (strcmp((const char *)(v10 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(qword_26C67D788 & 0x7FFFFFFFFFFFFFFFLL)))
          {
            return 0;
          }
        }
      }
      else if (a5 != &unk_215EA543C)
      {
        return 0;
      }
      return (void *)(a2 + 8);
    case 4:
      return result;
    default:
      (**(void (***)(void))(a2 + 8))();
      uint64_t result = 0;
      *(void *)a2 = 0;
      return result;
  }
}

void *sub_2158281D0(void *a1, void (**a2)(uint64_t))
{
  v4[8] = *MEMORY[0x263EF8340];
  v4[0] = 0;
  v4[1] = 0;
  if (*a2) {
    (*a2)(2);
  }
  if (v4 != a1 && *a1 != (unsigned __int128)0) {
    ((void (*)(uint64_t, void *, void *, void, void))*a1)(2, a1, v4, 0, 0);
  }
  if (v4[0]) {
    ((void (*)(void, void *, void, void, void))v4[0])(0, v4, 0, 0, 0);
  }
  return a1;
}

void sub_21582832C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_215731D80(a1);
  }
  _Unwind_Resume(a1);
}

void *sub_21582834C(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DD20;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158283E4(void *a1)
{
  *a1 = &unk_26C65DD20;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21582848C(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DD20;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_2158284E8(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DD20;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215828520(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21582859C(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_215828638(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_2158286B8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE2ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE2ENSO_13DynamicBuff"
                                "erELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE2ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE2ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215828728()
{
  return &unk_26C65DD80;
}

void *sub_215828734(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DDA0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_2158287CC(void *a1)
{
  *a1 = &unk_26C65DDA0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215828874(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DDA0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_2158288D0(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DDA0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215828908(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215828984(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_215828A20(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_215828AA0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE3ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE3ENSO_13DynamicBuff"
                                "erELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE3ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE3ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215828B10()
{
  return &unk_26C65DE00;
}

void *sub_215828B1C(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DE20;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215828BB4(void *a1)
{
  *a1 = &unk_26C65DE20;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215828C5C(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DE20;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215828CB8(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DE20;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215828CF0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215828D6C(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_215828E08(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_215828E88(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE4ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE4ENSO_13DynamicBuff"
                                "erELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE4ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE4ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215828EF8()
{
  return &unk_26C65DE80;
}

void *sub_215828F04(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DEA0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215828F9C(void *a1)
{
  *a1 = &unk_26C65DEA0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215829044(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DEA0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_2158290A0(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DEA0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_2158290D8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215829154(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_2158291F0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_215829270(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE5ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE5ENSO_13DynamicBuff"
                                "erELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE5ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE5ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2158292E0()
{
  return &unk_26C65DF00;
}

void *sub_2158292EC(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DF20;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215829384(void *a1)
{
  *a1 = &unk_26C65DF20;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21582942C(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DF20;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215829488(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DF20;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_2158294C0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21582953C(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_2158295D8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_215829658(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE7ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE7ENSO_13DynamicBuff"
                                "erELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE7ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE7ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_2158296C8()
{
  return &unk_26C65DF80;
}

void *sub_2158296D4(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65DFA0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21582976C(void *a1)
{
  *a1 = &unk_26C65DFA0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215829814(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65DFA0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215829870(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65DFA0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_2158298A8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215829924(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_2158299C0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_215829A40(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE8ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE8ENSO_13DynamicBuff"
                                "erELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE8ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE8ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215829AB0()
{
  return &unk_26C65E000;
}

void *sub_215829ABC(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65E020;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215829B54(void *a1)
{
  *a1 = &unk_26C65E020;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215829BFC(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65E020;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_215829C58(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65E020;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_215829C90(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215829D0C(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_215829DA8(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_215829E28(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE21ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE21ENSO_13DynamicBuf"
                                "ferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE21ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE21ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215829E98()
{
  return &unk_26C65E080;
}

void *sub_215829EA4(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65E0A0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_215829F3C(void *a1)
{
  *a1 = &unk_26C65E0A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215829FE4(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65E0A0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21582A040(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65E0A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21582A078(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21582A0F4(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21582A190(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21582A210(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE22ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE22ENSO_13DynamicBuf"
                                "ferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE22ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE22ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21582A280()
{
  return &unk_26C65E100;
}

void *sub_21582A28C(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65E120;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21582A324(void *a1)
{
  *a1 = &unk_26C65E120;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21582A3CC(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65E120;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21582A428(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65E120;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21582A460(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21582A4DC(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21582A578(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21582A5F8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE25ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE25ENSO_13DynamicBuf"
                                "ferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE25ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE25ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21582A668()
{
  return &unk_26C65E180;
}

void *sub_21582A674(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65E1A0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21582A70C(void *a1)
{
  *a1 = &unk_26C65E1A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21582A7B4(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65E1A0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21582A810(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65E1A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21582A848(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21582A8C4(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21582A960(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21582A9E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE31ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE31ENSO_13DynamicBuf"
                                "ferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE31ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE31ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21582AA50()
{
  return &unk_26C65E200;
}

void *sub_21582AA5C(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65E220;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21582AAF4(void *a1)
{
  *a1 = &unk_26C65E220;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21582AB9C(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65E220;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21582ABF8(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65E220;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21582AC30(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21582ACAC(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21582AD48(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21582ADC8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE32ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE32ENSO_13DynamicBuf"
                                "ferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE32ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE32ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21582AE38()
{
  return &unk_26C65E280;
}

void *sub_21582AE44(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65E2A0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21582AEDC(void *a1)
{
  *a1 = &unk_26C65E2A0;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21582AF84(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65E2A0;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21582AFE0(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65E2A0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21582B018(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21582B094(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21582B130(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21582B1B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE37ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE37ENSO_13DynamicBuf"
                                "ferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE37ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE37ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21582B220()
{
  return &unk_26C65E300;
}

void *sub_21582B22C(void *result)
{
  uint64_t v1 = result;
  void *result = &unk_26C65E320;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21582B2C4(void *a1)
{
  *a1 = &unk_26C65E320;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_21582B36C(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  void *result = &unk_26C65E320;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_21582B3C8(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = &unk_26C65E320;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_21582B400(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_21582B47C(void *__p)
{
  uint64_t v1 = __p;
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    std::string __p = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  operator delete(__p);
}

void sub_21582B518(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

uint64_t sub_21582B598(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4D"
                     "ataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENK"
                     "UlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE38ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferVi"
                                "ewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5Erro"
                                "rEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE38ENSO_13DynamicBuf"
                                "ferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE38ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger12_GLOBAL__N_120GetCVPixelBufferImplIZNS1_20GetCVPixelBufferViewERKNS1_4DataEE3$_0EENSt12experimental8expectedINS_3kit2cv14PixelBufferRefENS_3esn5ErrorEEERKNS1_5ImageET_ENKUlRKSJ_E_clINSA_3img11SharedImageILNSO_6FormatE38ENSO_13DynamicBufferELNSO_10MutabilityE0EEEEESC_SL_EUlPvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_21582B608()
{
  return &unk_26C65E380;
}

void sub_21582B614(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if (a1)
  {
    size_t v4 = strlen(a1);
    sub_215AEF2F0(a1, v4, (uint64_t)v13);
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 24) = 0;
    if (v15)
    {
      *(_OWORD *)a2 = *(_OWORD *)v13;
      *(void *)(a2 + 16) = v14;
      v13[1] = 0;
      uint64_t v14 = 0;
      v13[0] = 0;
      *(unsigned char *)(a2 + 24) = 1;
    }
    *(unsigned char *)(a2 + 32) = 0;
    *(unsigned char *)(a2 + 80) = 0;
    if (v18)
    {
      _X0 = 0;
      _X1 = 0;
      *(void *)(a2 + 48) = v17;
      *(_OWORD *)(a2 + 32) = *(_OWORD *)__p;
      __p[1] = 0;
      uint64_t v17 = 0;
      __p[0] = 0;
      __asm { CASPAL          X0, X1, X0, X1, [X8] }
      *(void *)(a2 + 64) = _X0;
      *(void *)(a2 + 72) = 0;
      *(unsigned char *)(a2 + 80) = 1;
      BOOL v12 = v18 != 0;
      *(unsigned char *)(a2 + 96) = 0;
      *(unsigned char *)(a2 + 120) = 0;
      *(unsigned char *)(a2 + 128) = 0;
      *(unsigned char *)(a2 + 144) = 0;
      if (v12 && SHIBYTE(v17) < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      *(unsigned char *)(a2 + 96) = 0;
      *(unsigned char *)(a2 + 120) = 0;
      *(unsigned char *)(a2 + 128) = 0;
      *(unsigned char *)(a2 + 144) = 0;
    }
    if (v15)
    {
      if (SHIBYTE(v14) < 0) {
        operator delete(v13[0]);
      }
    }
  }
  else
  {
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

uint64_t sub_21582B784(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80) && *(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if (!*(unsigned char *)(a1 + 24)) {
      return a1;
    }
  }
  else if (!*(unsigned char *)(a1 + 24))
  {
    return a1;
  }
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

size_t sub_21582B7F4@<X0>(size_t result@<X0>, uint64_t a2@<X8>)
{
  v24[2] = *MEMORY[0x263EF8340];
  if (!result)
  {
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  unint64_t v3 = (const void *)result;
  uint64_t result = strlen((const char *)result);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v4 = result;
  if (result >= 0x17)
  {
    uint64_t v6 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v6 = result | 7;
    }
    uint64_t v7 = v6 + 1;
    p_dst = operator new(v6 + 1);
    *(void *)&long long v19 = v4;
    *((void *)&v19 + 1) = v7 | 0x8000000000000000;
    long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v19) = result;
    p_dst = &__dst;
    if (!result) {
      goto LABEL_11;
    }
  }
  uint64_t result = (size_t)memcpy(p_dst, v3, v4);
LABEL_11:
  *((unsigned char *)p_dst + v4) = 0;
  *(void *)&v23[7] = *(void *)((char *)&v19 + 7);
  uint64_t v8 = __dst;
  *(void *)std::string::size_type v23 = v19;
  char v9 = HIBYTE(v19);
  uint64_t v10 = &v20;
  *(void *)&v21[7] = *(void *)&v23[7];
  unint64_t v11 = v19;
  std::string::size_type v20 = __dst;
  *(void *)uint64_t v21 = v19;
  char v22 = HIBYTE(v19);
  if (v19 >= 0) {
    unint64_t v11 = HIBYTE(v19);
  }
  else {
    uint64_t v10 = __dst;
  }
  if (v11)
  {
    BOOL v12 = v10;
    if (v11 >= 8)
    {
      BOOL v12 = (char *)v10 + (v11 & 0xFFFFFFFFFFFFFFF8);
      int64_t v13 = (char *)v10 + 3;
      unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFF8;
      while (1)
      {
        int8x8_t v15 = vceq_s8(*(int8x8_t *)(v13 - 3), (int8x8_t)0x2323232323232323);
        if (v15.i8[0])
        {
          *(v13 - 3) = 95;
          if ((v15.i8[1] & 1) == 0)
          {
LABEL_20:
            if ((v15.i8[2] & 1) == 0) {
              goto LABEL_21;
            }
            goto LABEL_29;
          }
        }
        else if ((v15.i8[1] & 1) == 0)
        {
          goto LABEL_20;
        }
        *(v13 - 2) = 95;
        if ((v15.i8[2] & 1) == 0)
        {
LABEL_21:
          if ((v15.i8[3] & 1) == 0) {
            goto LABEL_22;
          }
          goto LABEL_30;
        }
LABEL_29:
        *(v13 - 1) = 95;
        if ((v15.i8[3] & 1) == 0)
        {
LABEL_22:
          if ((v15.i8[4] & 1) == 0) {
            goto LABEL_23;
          }
          goto LABEL_31;
        }
LABEL_30:
        unsigned char *v13 = 95;
        if ((v15.i8[4] & 1) == 0)
        {
LABEL_23:
          if ((v15.i8[5] & 1) == 0) {
            goto LABEL_24;
          }
          goto LABEL_32;
        }
LABEL_31:
        v13[1] = 95;
        if ((v15.i8[5] & 1) == 0)
        {
LABEL_24:
          if ((v15.i8[6] & 1) == 0) {
            goto LABEL_25;
          }
          goto LABEL_33;
        }
LABEL_32:
        v13[2] = 95;
        if ((v15.i8[6] & 1) == 0)
        {
LABEL_25:
          if (v15.i8[7]) {
            goto LABEL_34;
          }
          goto LABEL_17;
        }
LABEL_33:
        void v13[3] = 95;
        if (v15.i8[7]) {
LABEL_34:
        }
          v13[4] = 95;
LABEL_17:
        v13 += 8;
        v14 -= 8;
        if (!v14)
        {
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_36;
          }
          break;
        }
      }
    }
    uint64_t v17 = (char *)v10 + v11;
    do
    {
      if (*v12 == 35) {
        unsigned char *v12 = 95;
      }
      ++v12;
    }
    while (v12 != v17);
LABEL_36:
    uint64_t v8 = v20;
    char v9 = v22;
  }
  v24[0] = *(void *)v21;
  *(void *)((char *)v24 + 7) = *(void *)&v21[7];
  uint64_t v16 = v24[0];
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v16;
  *(void *)(a2 + 15) = *(void *)((char *)v24 + 7);
  *(unsigned char *)(a2 + 23) = v9;
  *(unsigned char *)(a2 + 24) = 1;
  *(unsigned char *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 96) = 0;
  *(unsigned char *)(a2 + 120) = 0;
  *(unsigned char *)(a2 + 128) = 0;
  *(unsigned char *)(a2 + 144) = 0;
  return result;
}

void sub_21582BA9C(char *__s@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  v44[2] = *MEMORY[0x263EF8340];
  if (!__s)
  {
    BOOL v12 = 0;
    if (a2) {
      goto LABEL_16;
    }
LABEL_7:
    int64_t v13 = 0;
    if (__s) {
      goto LABEL_25;
    }
LABEL_8:
    unint64_t v14 = 0;
    if (a2) {
      goto LABEL_54;
    }
    goto LABEL_9;
  }
  size_t v9 = strlen(__s);
  if (v9 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v17 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v17 = v9 | 7;
    }
    uint64_t v18 = v17 + 1;
    p_dst = (void **)operator new(v17 + 1);
    *(void *)&long long v36 = v10;
    *((void *)&v36 + 1) = v18 | 0x8000000000000000;
    long long __dst = p_dst;
    goto LABEL_14;
  }
  HIBYTE(v36) = v9;
  p_dst = (void **)&__dst;
  if (v9) {
LABEL_14:
  }
    memcpy(p_dst, __s, v10);
  *((unsigned char *)p_dst + v10) = 0;
  BOOL v12 = __dst;
  v42[0] = v36;
  *(void *)((char *)v42 + 7) = *(void *)((char *)&v36 + 7);
  unsigned __int8 v5 = HIBYTE(v36);
  long long v36 = 0uLL;
  long long __dst = 0;
  if (!a2) {
    goto LABEL_7;
  }
LABEL_16:
  size_t v19 = strlen(a2);
  if (v19 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v20 = v19;
  if (v19 >= 0x17)
  {
    uint64_t v22 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v19 | 7) != 0x17) {
      uint64_t v22 = v19 | 7;
    }
    uint64_t v23 = v22 + 1;
    p_p = operator new(v22 + 1);
    *(void *)&long long v34 = v20;
    *((void *)&v34 + 1) = v23 | 0x8000000000000000;
    std::string __p = p_p;
    goto LABEL_23;
  }
  HIBYTE(v34) = v19;
  p_p = &__p;
  if (v19) {
LABEL_23:
  }
    memcpy(p_p, a2, v20);
  *((unsigned char *)p_p + v20) = 0;
  int64_t v13 = __p;
  v40[0] = v34;
  *(void *)((char *)v40 + 7) = *(void *)((char *)&v34 + 7);
  char v3 = HIBYTE(v34);
  long long v34 = 0uLL;
  std::string __p = 0;
  v41[0] = v40[0];
  *(void *)((char *)v41 + 7) = *(void *)((char *)v40 + 7);
  v40[0] = 0;
  *(void *)((char *)v40 + 7) = 0;
  if (!__s) {
    goto LABEL_8;
  }
LABEL_25:
  *(void *)&v38[7] = *(void *)((char *)v42 + 7);
  uint64_t v37 = v12;
  *(void *)uint64_t v38 = v42[0];
  unsigned __int8 v39 = v5;
  v42[0] = 0;
  *(void *)((char *)v42 + 7) = 0;
  if ((v5 & 0x80u) == 0) {
    uint64_t v24 = (void **)&v37;
  }
  else {
    uint64_t v24 = v12;
  }
  unint64_t v25 = v5;
  if ((v5 & 0x80u) != 0) {
    unint64_t v25 = *(void *)v38;
  }
  if (v25)
  {
    uint64_t v26 = v24;
    if (v25 >= 8)
    {
      uint64_t v26 = (char *)v24 + (v25 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v27 = (char *)v24 + 3;
      unint64_t v28 = v25 & 0xFFFFFFFFFFFFFFF8;
      while (1)
      {
        int8x8_t v29 = vceq_s8(*(int8x8_t *)(v27 - 3), (int8x8_t)0x2323232323232323);
        if (v29.i8[0])
        {
          *(v27 - 3) = 95;
          if ((v29.i8[1] & 1) == 0) {
            goto LABEL_36;
          }
        }
        else if ((v29.i8[1] & 1) == 0)
        {
LABEL_36:
          if (v29.i8[2]) {
            goto LABEL_37;
          }
          goto LABEL_45;
        }
        *(v27 - 2) = 95;
        if (v29.i8[2])
        {
LABEL_37:
          *(v27 - 1) = 95;
          if ((v29.i8[3] & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_46;
        }
LABEL_45:
        if ((v29.i8[3] & 1) == 0)
        {
LABEL_38:
          if (v29.i8[4]) {
            goto LABEL_39;
          }
          goto LABEL_47;
        }
LABEL_46:
        *uint64_t v27 = 95;
        if (v29.i8[4])
        {
LABEL_39:
          v27[1] = 95;
          if ((v29.i8[5] & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_48;
        }
LABEL_47:
        if ((v29.i8[5] & 1) == 0)
        {
LABEL_40:
          if (v29.i8[6]) {
            goto LABEL_41;
          }
          goto LABEL_49;
        }
LABEL_48:
        v27[2] = 95;
        if (v29.i8[6])
        {
LABEL_41:
          v27[3] = 95;
          if (v29.i8[7]) {
            goto LABEL_50;
          }
          goto LABEL_33;
        }
LABEL_49:
        if (v29.i8[7]) {
LABEL_50:
        }
          void v27[4] = 95;
LABEL_33:
        v27 += 8;
        v28 -= 8;
        if (!v28)
        {
          if (v25 == (v25 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_52;
          }
          break;
        }
      }
    }
    uint64_t v32 = (char *)v24 + v25;
    do
    {
      if (*v26 == 35) {
        *uint64_t v26 = 95;
      }
      ++v26;
    }
    while (v26 != v32);
LABEL_52:
    BOOL v12 = v37;
    unsigned __int8 v5 = v39;
  }
  unint64_t v14 = v12;
  v44[0] = *(void *)v38;
  *(void *)((char *)v44 + 7) = *(void *)&v38[7];
  unsigned __int8 v4 = v5;
  BOOL v12 = 0;
  unsigned __int8 v5 = 0;
  if (a2)
  {
LABEL_54:
    int8x8_t v15 = 0;
    char v16 = 0;
    v43[0] = v41[0];
    *(void *)((char *)v43 + 7) = *(void *)((char *)v41 + 7);
    v41[0] = 0;
    *(void *)((char *)v41 + 7) = 0;
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 24) = 0;
    if (!__s) {
      goto LABEL_56;
    }
    goto LABEL_55;
  }
LABEL_9:
  int8x8_t v15 = v13;
  char v16 = v3;
  int64_t v13 = 0;
  *(unsigned char *)a3 = 0;
  *(unsigned char *)(a3 + 24) = 0;
  if (__s)
  {
LABEL_55:
    uint64_t v30 = v44[0];
    *(void *)a3 = v14;
    *(void *)(a3 + 8) = v30;
    *(void *)(a3 + 15) = *(void *)((char *)v44 + 7);
    *(unsigned char *)(a3 + 23) = v4;
    v44[0] = 0;
    *(void *)((char *)v44 + 7) = 0;
    *(unsigned char *)(a3 + 24) = 1;
    unsigned __int8 v4 = 0;
    unint64_t v14 = 0;
  }
LABEL_56:
  *(unsigned char *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 80) = 0;
  if (a2)
  {
    uint64_t v31 = v43[0];
    *(void *)(a3 + 32) = v13;
    *(void *)(a3 + 40) = v31;
    *(void *)(a3 + 47) = *(void *)((char *)v43 + 7);
    *(unsigned char *)(a3 + 55) = v3;
    v43[0] = 0;
    *(void *)((char *)v43 + 7) = 0;
    *(void *)(a3 + 64) = 0;
    *(void *)(a3 + 72) = 0;
    *(unsigned char *)(a3 + 80) = 1;
  }
  *(unsigned char *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 120) = 0;
  *(unsigned char *)(a3 + 128) = 0;
  *(unsigned char *)(a3 + 144) = 0;
  if (__s)
  {
    if ((v4 & 0x80) != 0) {
      operator delete(v14);
    }
  }
  if (a2)
  {
    if ((v16 & 0x80) == 0)
    {
      if ((SHIBYTE(v34) & 0x80000000) == 0) {
        goto LABEL_64;
      }
LABEL_73:
      operator delete(__p);
      if (!__s) {
        return;
      }
      goto LABEL_65;
    }
    operator delete(v15);
    if (SHIBYTE(v34) < 0) {
      goto LABEL_73;
    }
  }
LABEL_64:
  if (!__s) {
    return;
  }
LABEL_65:
  if ((v5 & 0x80) != 0)
  {
    operator delete(v12);
    if ((SHIBYTE(v36) & 0x80000000) == 0) {
      return;
    }
  }
  else if ((SHIBYTE(v36) & 0x80000000) == 0)
  {
    return;
  }
  operator delete(__dst);
}

void sub_21582BF2C(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    if (v3 < 0) {
      operator delete(v2);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21582BF48(char *__s@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void v43[2] = *MEMORY[0x263EF8340];
  if (!__s)
  {
    size_t v10 = 0;
    goto LABEL_12;
  }
  size_t v7 = strlen(__s);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v8 = v7;
  if (v7 >= 0x17)
  {
    uint64_t v11 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v11 = v7 | 7;
    }
    uint64_t v12 = v11 + 1;
    size_t v9 = operator new(v11 + 1);
    *(void *)&long long v32 = v8;
    *((void *)&v32 + 1) = v12 | 0x8000000000000000;
    uint64_t v31 = v9;
  }
  else
  {
    HIBYTE(v32) = v7;
    size_t v9 = &v31;
    if (!v7) {
      goto LABEL_11;
    }
  }
  memcpy(v9, __s, v8);
LABEL_11:
  *((unsigned char *)v9 + v8) = 0;
  size_t v10 = (uint64_t *)v31;
  v41[0] = v32;
  *(void *)((char *)v41 + 7) = *(void *)((char *)&v32 + 7);
  unsigned __int8 v3 = HIBYTE(v32);
  long long v32 = 0uLL;
  uint64_t v31 = 0;
LABEL_12:
  uint64_t v33 = (uint64_t *)a2;
  sub_215ABA544((uint64_t *)&v33);
  _X0 = 0;
  _X1 = 0;
  uint64_t v38 = (uint64_t)v33;
  uint64_t v39 = 1;
  int8x8_t v15 = __p;
  v40[0] = v37;
  *(void *)((char *)v40 + 7) = *(void *)((char *)&v37 + 7);
  char v16 = HIBYTE(v37);
  long long v37 = 0uLL;
  std::string __p = 0;
  __asm { CASPAL          X0, X1, X0, X1, [X12] }
  if (__s)
  {
    *(void *)&v34[7] = *(void *)((char *)v41 + 7);
    uint64_t v33 = v10;
    *(void *)long long v34 = v41[0];
    unsigned __int8 v35 = v3;
    v41[0] = 0;
    *(void *)((char *)v41 + 7) = 0;
    if ((v3 & 0x80u) == 0) {
      uint64_t v22 = (uint64_t *)&v33;
    }
    else {
      uint64_t v22 = v10;
    }
    unint64_t v23 = v3;
    if ((v3 & 0x80u) != 0) {
      unint64_t v23 = *(void *)v34;
    }
    if (v23)
    {
      uint64_t v24 = v22;
      if (v23 >= 8)
      {
        uint64_t v24 = (uint64_t *)((char *)v22 + (v23 & 0xFFFFFFFFFFFFFFF8));
        unint64_t v25 = (char *)v22 + 3;
        unint64_t v26 = v23 & 0xFFFFFFFFFFFFFFF8;
        while (1)
        {
          int8x8_t v27 = vceq_s8(*(int8x8_t *)(v25 - 3), (int8x8_t)0x2323232323232323);
          if (v27.i8[0])
          {
            *(v25 - 3) = 95;
            if ((v27.i8[1] & 1) == 0) {
              goto LABEL_24;
            }
          }
          else if ((v27.i8[1] & 1) == 0)
          {
LABEL_24:
            if (v27.i8[2]) {
              goto LABEL_25;
            }
            goto LABEL_33;
          }
          *(v25 - 2) = 95;
          if (v27.i8[2])
          {
LABEL_25:
            *(v25 - 1) = 95;
            if ((v27.i8[3] & 1) == 0) {
              goto LABEL_26;
            }
            goto LABEL_34;
          }
LABEL_33:
          if ((v27.i8[3] & 1) == 0)
          {
LABEL_26:
            if (v27.i8[4]) {
              goto LABEL_27;
            }
            goto LABEL_35;
          }
LABEL_34:
          unsigned char *v25 = 95;
          if (v27.i8[4])
          {
LABEL_27:
            v25[1] = 95;
            if ((v27.i8[5] & 1) == 0) {
              goto LABEL_28;
            }
            goto LABEL_36;
          }
LABEL_35:
          if ((v27.i8[5] & 1) == 0)
          {
LABEL_28:
            if (v27.i8[6]) {
              goto LABEL_29;
            }
            goto LABEL_37;
          }
LABEL_36:
          v25[2] = 95;
          if (v27.i8[6])
          {
LABEL_29:
            v25[3] = 95;
            if (v27.i8[7]) {
              goto LABEL_38;
            }
            goto LABEL_21;
          }
LABEL_37:
          if (v27.i8[7]) {
LABEL_38:
          }
            v25[4] = 95;
LABEL_21:
          v25 += 8;
          v26 -= 8;
          if (!v26)
          {
            if (v23 == (v23 & 0xFFFFFFFFFFFFFFF8)) {
              goto LABEL_41;
            }
            break;
          }
        }
      }
      uint64_t v30 = (uint64_t *)((char *)v22 + v23);
      do
      {
        if (*(unsigned char *)v24 == 35) {
          *(unsigned char *)uint64_t v24 = 95;
        }
        uint64_t v24 = (uint64_t *)((char *)v24 + 1);
      }
      while (v24 != v30);
LABEL_41:
      size_t v10 = v33;
      unsigned __int8 v3 = v35;
    }
    *(void *)((char *)v43 + 7) = *(void *)&v34[7];
    HIBYTE(v43[0]) = v34[7];
    v42[0] = v40[0];
    *(void *)((char *)v42 + 7) = *(void *)((char *)v40 + 7);
    v40[0] = 0;
    *(void *)((char *)v40 + 7) = 0;
    uint64_t v28 = *(void *)v34;
    *(void *)a3 = v10;
    *(void *)(a3 + 8) = v28;
    *(void *)(a3 + 15) = *(void *)((char *)v43 + 7);
    *(unsigned char *)(a3 + 23) = v3;
    *(void *)((char *)v43 + 7) = 0;
    v43[0] = 0;
    *(unsigned char *)(a3 + 24) = 1;
    unsigned __int8 v3 = 0;
    size_t v10 = 0;
  }
  else
  {
    v42[0] = v40[0];
    *(void *)((char *)v42 + 7) = *(void *)((char *)v40 + 7);
    v40[0] = 0;
    *(void *)((char *)v40 + 7) = 0;
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 24) = 0;
  }
  uint64_t v29 = v42[0];
  *(void *)(a3 + 32) = v15;
  *(void *)(a3 + 40) = v29;
  *(void *)(a3 + 47) = *(void *)((char *)v42 + 7);
  *(unsigned char *)(a3 + 55) = v16;
  v42[0] = 0;
  *(void *)((char *)v42 + 7) = 0;
  *(void *)(a3 + 64) = _X0;
  *(void *)(a3 + 72) = 0;
  *(unsigned char *)(a3 + 80) = 1;
  *(unsigned char *)(a3 + 96) = 0;
  *(unsigned char *)(a3 + 120) = 0;
  *(unsigned char *)(a3 + 128) = 0;
  *(unsigned char *)(a3 + 144) = 0;
  if (SHIBYTE(v37) < 0)
  {
    operator delete(__p);
    if (!__s) {
      return;
    }
  }
  else if (!__s)
  {
    return;
  }
  if ((v3 & 0x80) == 0)
  {
    if ((SHIBYTE(v32) & 0x80000000) == 0) {
      return;
    }
LABEL_55:
    operator delete(v31);
    return;
  }
  operator delete(v10);
  if (SHIBYTE(v32) < 0) {
    goto LABEL_55;
  }
}

void sub_21582C314(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    if (v3 < 0) {
      operator delete(v2);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21582C330(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120)) {
    sub_21582FC8C();
  }
  if (*(char *)(a1 + 119) < 0) {
    return *(void *)(a1 + 96);
  }
  else {
    return a1 + 96;
  }
}

void sub_21582C444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21582C458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21582C46C(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    goto LABEL_14;
  }
  if (*(unsigned char *)(a2 + 24))
  {
    if (*(char *)(a2 + 23) < 0)
    {
      if (*(void *)(a2 + 8) && *(void *)a2) {
        goto LABEL_22;
      }
    }
    else if (*(unsigned char *)(a2 + 23))
    {
      goto LABEL_22;
    }
  }
  if (!*(unsigned char *)(a2 + 80)) {
    goto LABEL_14;
  }
  uint64_t v5 = *(unsigned __int8 *)(a2 + 55);
  int v6 = (char)v5;
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(a2 + 40);
  }
  if (!v5 || v6 < 0 && !*(void *)(a2 + 32))
  {
LABEL_14:
    if (*(unsigned char *)(a1 + 24))
    {
      if (*(char *)(a1 + 23) < 0) {
        operator delete(*(void **)a1);
      }
      *(unsigned char *)(a1 + 24) = 0;
    }
    if (*(unsigned char *)(a1 + 80))
    {
      if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      {
LABEL_30:
        *(unsigned char *)(a1 + 80) = 0;
        goto LABEL_31;
      }
      size_t v7 = *(void **)(a1 + 32);
LABEL_21:
      operator delete(v7);
      goto LABEL_30;
    }
    goto LABEL_31;
  }
LABEL_22:
  sub_21582F768(a1, (void *)a2);
  size_t v8 = (void **)(a2 + 32);
  size_t v9 = (void **)(a1 + 32);
  if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
  {
    if (*(unsigned char *)(a1 + 80))
    {
      if (v9 != v8)
      {
        char v10 = *(unsigned char *)(a2 + 55);
        if (*(char *)(a1 + 55) < 0)
        {
          if (v10 >= 0) {
            int64_t v13 = (void *)(a2 + 32);
          }
          else {
            int64_t v13 = *(void **)(a2 + 32);
          }
          if (v10 >= 0) {
            size_t v14 = *(unsigned __int8 *)(a2 + 55);
          }
          else {
            size_t v14 = *(void *)(a2 + 40);
          }
          sub_21573ABD0(v9, v13, v14);
        }
        else if ((*(unsigned char *)(a2 + 55) & 0x80) != 0)
        {
          sub_21573AB08(v9, *(void **)(a2 + 32), *(void *)(a2 + 40));
        }
        else
        {
          long long v11 = *(_OWORD *)v8;
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(_OWORD *)size_t v9 = v11;
        }
      }
      _X0 = 0;
      _X1 = 0;
      __asm { CASPAL          X0, X1, X0, X1, [X8] }
      uint64_t v25 = *(void *)(a1 + 64);
      do
      {
        _X5 = *(void *)(a1 + 72);
        __asm { CASPAL          X4, X5, X0, X1, [X8] }
        _ZF = _X4 == v25;
        uint64_t v25 = _X4;
      }
      while (!_ZF);
    }
  }
  else
  {
    if (*(unsigned char *)(a1 + 80))
    {
      if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
        goto LABEL_30;
      }
      size_t v7 = *v9;
      goto LABEL_21;
    }
    if (*(char *)(a2 + 55) < 0)
    {
      sub_215738B0C(v9, *(void **)(a2 + 32), *(void *)(a2 + 40));
    }
    else
    {
      long long v12 = *(_OWORD *)v8;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(_OWORD *)size_t v9 = v12;
    }
    _X0 = 0;
    _X1 = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *(void *)(a1 + 64) = _X0;
    *(void *)(a1 + 72) = 0;
    *(unsigned char *)(a1 + 80) = 1;
  }
LABEL_31:
  if (*(unsigned char *)(a1 + 368))
  {
    if (*(unsigned char *)(a1 + 328) && *(char *)(a1 + 327) < 0) {
      operator delete(*(void **)(a1 + 304));
    }
    if (*(unsigned char *)(a1 + 288) && *(char *)(a1 + 263) < 0) {
      operator delete(*(void **)(a1 + 240));
    }
    if (*(unsigned char *)(a1 + 232))
    {
      if (*(char *)(a1 + 231) < 0) {
        operator delete(*(void **)(a1 + 208));
      }
    }
    *(unsigned char *)(a1 + 368) = 0;
  }
}

void sub_21582C69C(uint64_t a1, char *__s)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  if (__s && (size_t v4 = strlen(__s)) != 0)
  {
    sub_215AEF2F0(__s, v4, (uint64_t)v12);
    LOBYTE(v18[0]) = 0;
    char v20 = 0;
    if (v14)
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v12;
      uint64_t v19 = v13;
      v12[1] = 0;
      uint64_t v13 = 0;
      v12[0] = 0;
      char v20 = 1;
    }
    LOBYTE(v21) = 0;
    char v25 = 0;
    if (v17)
    {
      _X0 = 0;
      _X1 = 0;
      uint64_t v22 = v16;
      long long v21 = *(_OWORD *)v15;
      v15[1] = 0;
      uint64_t v16 = 0;
      v15[0] = 0;
      __asm { CASPAL          X0, X1, X0, X1, [X8] }
      uint64_t v23 = _X0;
      uint64_t v24 = 0;
      char v25 = 1;
    }
    LOBYTE(__p) = 0;
    char v28 = 0;
    char v29 = 0;
    char v30 = 0;
    sub_21582C46C(a1, (uint64_t)v18, 1);
    if (v28 && v27 < 0) {
      operator delete(__p);
    }
    if (v25 && SHIBYTE(v22) < 0) {
      operator delete((void *)v21);
    }
    if (v20 && SHIBYTE(v19) < 0) {
      operator delete(v18[0]);
    }
    if (v17 && SHIBYTE(v16) < 0) {
      operator delete(v15[0]);
    }
    if (v14)
    {
      if (SHIBYTE(v13) < 0) {
        operator delete(v12[0]);
      }
    }
  }
  else
  {
    sub_21582C46C(a1, 0, 0);
  }
}

void sub_21582C87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
}

uint64_t sub_21582C89C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120) && *(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if (!*(unsigned char *)(a1 + 80)) {
      goto LABEL_7;
    }
  }
  else if (!*(unsigned char *)(a1 + 80))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
LABEL_7:
  if (!*(unsigned char *)(a1 + 24) || (*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

unint64_t sub_21582C924(uint64_t a1)
{
  v62[2] = *MEMORY[0x263EF8340];
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = *(char *)(a1 + 23);
    if (v5 < 0)
    {
      if (*(void *)(a1 + 8))
      {
LABEL_4:
        uint64_t v6 = a1 + 208;
        if (!*(unsigned char *)(a1 + 368))
        {
          LOBYTE(__dst[0]) = 0;
          unsigned __int8 v53 = 0;
          if ((v5 & 0x80) == 0)
          {
LABEL_6:
            *(_OWORD *)long long __dst = *(_OWORD *)a1;
            uint64_t v52 = *(void *)(a1 + 16);
            goto LABEL_16;
          }
LABEL_15:
          sub_215738B0C(__dst, *(void **)a1, *(void *)(a1 + 8));
LABEL_16:
          unsigned __int8 v53 = 1;
          int v8 = *(unsigned __int8 *)(a1 + 80);
          LOBYTE(v55[0]) = 0;
          unsigned __int8 v56 = 0;
          if (!v8)
          {
            int v10 = 0;
            int v11 = v53;
            goto LABEL_35;
          }
          if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
            goto LABEL_18;
          }
          goto LABEL_33;
        }
        goto LABEL_117;
      }
    }
    else if (*(unsigned char *)(a1 + 23))
    {
      goto LABEL_4;
    }
  }
  if (*(unsigned char *)(a1 + 80))
  {
    uint64_t v7 = *(unsigned __int8 *)(a1 + 55);
    if ((v7 & 0x80u) != 0) {
      uint64_t v7 = *(void *)(a1 + 40);
    }
    if (v7)
    {
      uint64_t v6 = a1 + 208;
      if (!*(unsigned char *)(a1 + 368))
      {
        LOBYTE(__dst[0]) = 0;
        unsigned __int8 v53 = 0;
        if (!v4)
        {
          LOBYTE(v55[0]) = 0;
          unsigned __int8 v56 = 0;
          if ((*(char *)(a1 + 55) & 0x80000000) == 0)
          {
LABEL_18:
            *(_OWORD *)char v55 = *(_OWORD *)(a1 + 32);
            v55[2] = *(void **)(a1 + 48);
            goto LABEL_34;
          }
LABEL_33:
          sub_215738B0C(v55, *(void **)(a1 + 32), *(void *)(a1 + 40));
LABEL_34:
          _X0 = 0;
          _X1 = 0;
          __asm { CASPAL          X0, X1, X0, X1, [X8] }
          v55[4] = _X0;
          v55[5] = 0;
          int v10 = 1;
          unsigned __int8 v56 = 1;
          int v11 = v53;
          if (!v53)
          {
            unint64_t v12 = 0;
            goto LABEL_64;
          }
LABEL_35:
          *(void *)&v54[1] = v52;
          v54[0] = *(_OWORD *)__dst;
          __dst[1] = 0;
          uint64_t v52 = 0;
          __dst[0] = 0;
          char v2 = BYTE7(v54[1]);
          unint64_t v12 = *(void *)&v54[0];
          if ((SBYTE7(v54[1]) & 0x80u) == 0) {
            uint64_t v18 = v54;
          }
          else {
            uint64_t v18 = *(_OWORD **)&v54[0];
          }
          unint64_t v26 = BYTE7(v54[1]);
          if (SBYTE7(v54[1]) < 0) {
            unint64_t v26 = *((void *)&v54[0] + 1);
          }
          if (v26)
          {
            char v27 = v18;
            if (v26 >= 8)
            {
              char v27 = (char *)v18 + (v26 & 0xFFFFFFFFFFFFFFF8);
              char v28 = (char *)v18 + 3;
              unint64_t v29 = v26 & 0xFFFFFFFFFFFFFFF8;
              while (1)
              {
                int8x8_t v30 = vceq_s8(*(int8x8_t *)(v28 - 3), (int8x8_t)0x2323232323232323);
                if (v30.i8[0])
                {
                  *(v28 - 3) = 95;
                  if ((v30.i8[1] & 1) == 0)
                  {
LABEL_46:
                    if ((v30.i8[2] & 1) == 0) {
                      goto LABEL_47;
                    }
                    goto LABEL_55;
                  }
                }
                else if ((v30.i8[1] & 1) == 0)
                {
                  goto LABEL_46;
                }
                *(v28 - 2) = 95;
                if ((v30.i8[2] & 1) == 0)
                {
LABEL_47:
                  if ((v30.i8[3] & 1) == 0) {
                    goto LABEL_48;
                  }
                  goto LABEL_56;
                }
LABEL_55:
                *(v28 - 1) = 95;
                if ((v30.i8[3] & 1) == 0)
                {
LABEL_48:
                  if ((v30.i8[4] & 1) == 0) {
                    goto LABEL_49;
                  }
                  goto LABEL_57;
                }
LABEL_56:
                unsigned char *v28 = 95;
                if ((v30.i8[4] & 1) == 0)
                {
LABEL_49:
                  if ((v30.i8[5] & 1) == 0) {
                    goto LABEL_50;
                  }
                  goto LABEL_58;
                }
LABEL_57:
                v28[1] = 95;
                if ((v30.i8[5] & 1) == 0)
                {
LABEL_50:
                  if ((v30.i8[6] & 1) == 0) {
                    goto LABEL_51;
                  }
                  goto LABEL_59;
                }
LABEL_58:
                void v28[2] = 95;
                if ((v30.i8[6] & 1) == 0)
                {
LABEL_51:
                  if (v30.i8[7]) {
                    goto LABEL_60;
                  }
                  goto LABEL_43;
                }
LABEL_59:
                v28[3] = 95;
                if (v30.i8[7]) {
LABEL_60:
                }
                  v28[4] = 95;
LABEL_43:
                v28 += 8;
                v29 -= 8;
                if (!v29)
                {
                  if (v26 == (v26 & 0xFFFFFFFFFFFFFFF8)) {
                    goto LABEL_62;
                  }
                  break;
                }
              }
            }
            uint64_t v18 = (_OWORD *)((char *)v18 + v26);
            do
            {
              if (*v27 == 35) {
                *char v27 = 95;
              }
              ++v27;
            }
            while (v27 != (unsigned char *)v18);
LABEL_62:
            unint64_t v12 = *(void *)&v54[0];
            char v2 = BYTE7(v54[1]);
            int v10 = v56;
          }
          v58[0] = *((void *)&v54[0] + 1);
          *(void *)((char *)v58 + 7) = *(void *)((char *)v54 + 15);
          memset(v54, 0, 24);
          if (!v10)
          {
            unint64_t v13 = 0;
            if (v11) {
              goto LABEL_65;
            }
            goto LABEL_24;
          }
LABEL_64:
          _X24 = 0;
          unint64_t v13 = (unint64_t)v55[0];
          v57[0] = v55[1];
          *(void **)((char *)v57 + 7) = *(void **)((char *)&v55[1] + 7);
          LOBYTE(v18) = HIBYTE(v55[2]);
          memset(v55, 0, 24);
          _X25 = 0;
          __asm { CASPAL          X24, X25, X24, X25, [X8] }
          if (v11)
          {
LABEL_65:
            uint64_t v48 = 0;
            char v50 = 0;
            v62[0] = v58[0];
            *(void *)((char *)v62 + 7) = *(void *)((char *)v58 + 7);
            v58[0] = 0;
            *(void *)((char *)v58 + 7) = 0;
            int v14 = 1;
            if (v10)
            {
LABEL_66:
              std::string __p = 0;
              char v49 = 0;
              v61[0] = v57[0];
              *(void *)((char *)v61 + 7) = *(void *)((char *)v57 + 7);
              v57[0] = 0;
              *(void *)((char *)v57 + 7) = 0;
              int v15 = 1;
              if (*(unsigned char *)(v6 + 160))
              {
LABEL_67:
                if (*(unsigned __int8 *)(v6 + 24) == v14)
                {
                  if (*(unsigned char *)(v6 + 24))
                  {
                    if (*(char *)(v6 + 23) < 0)
                    {
                      char v44 = (char)v18;
                      operator delete(*(void **)v6);
                      LOBYTE(v18) = v44;
                    }
                    *(void *)uint64_t v6 = v12;
                    uint64_t v33 = *(void *)((char *)v62 + 7);
                    *(void *)(v6 + 8) = v62[0];
                    *(void *)(v6 + 15) = v33;
                    *(unsigned char *)(v6 + 23) = v2;
                    v12 &= 0xFFFFFFFFFFFFFF00;
                    char v2 = 0;
                    int v34 = *(unsigned __int8 *)(v6 + 80);
                    if (v34 != v15) {
                      goto LABEL_91;
                    }
LABEL_78:
                    if (v34)
                    {
                      if (*(char *)(v6 + 55) < 0)
                      {
                        char v46 = (char)v18;
                        operator delete(*(void **)(v6 + 32));
                        LOBYTE(v18) = v46;
                      }
                      uint64_t v35 = v61[0];
                      *(void *)(v6 + 32) = v13;
                      *(void *)(v6 + 40) = v35;
                      *(void *)(v6 + 47) = *(void *)((char *)v61 + 7);
                      *(unsigned char *)(v6 + 55) = (_BYTE)v18;
                      v13 &= 0xFFFFFFFFFFFFFF00;
                      v54[0] = _X24;
                      uint64_t v36 = *(void *)(v6 + 64);
                      do
                      {
                        _X3 = *(void *)(v6 + 72);
                        __asm { CASPAL          X2, X3, X24, X25, [X8] }
                        _ZF = _X2 == v36;
                        uint64_t v36 = _X2;
                      }
                      while (!_ZF);
                      LOBYTE(v18) = 0;
                      if (!*(unsigned char *)(v6 + 120))
                      {
LABEL_99:
                        *(unsigned char *)(v6 + 128) = 0;
                        *(void *)(v6 + 129) = *(void *)v60;
                        *(void *)(v6 + 136) = *(void *)&v60[7];
                        *(unsigned char *)(v6 + 144) = 0;
                        if (!v10)
                        {
LABEL_102:
                          if (v11 && v2 < 0) {
                            operator delete((void *)v12);
                          }
                          if (v10 && v49 < 0) {
                            operator delete(__p);
                          }
                          if (v11 && v50 < 0) {
                            operator delete(v48);
                          }
                          if (v56 && SHIBYTE(v55[2]) < 0) {
                            operator delete(v55[0]);
                          }
                          if (v53 && SHIBYTE(v52) < 0) {
                            operator delete(__dst[0]);
                          }
                          goto LABEL_117;
                        }
LABEL_100:
                        if ((v18 & 0x80) != 0) {
                          operator delete((void *)v13);
                        }
                        goto LABEL_102;
                      }
LABEL_96:
                      if (*(char *)(v6 + 119) < 0)
                      {
                        char v41 = (char)v18;
                        operator delete(*(void **)(v6 + 96));
                        LOBYTE(v18) = v41;
                      }
                      *(unsigned char *)(v6 + 120) = 0;
                      goto LABEL_99;
                    }
LABEL_95:
                    if (!*(unsigned char *)(v6 + 120)) {
                      goto LABEL_99;
                    }
                    goto LABEL_96;
                  }
                }
                else
                {
                  if (!*(unsigned char *)(v6 + 24))
                  {
                    *(void *)uint64_t v6 = v12;
                    uint64_t v39 = *(void *)((char *)v62 + 7);
                    *(void *)(v6 + 8) = v62[0];
                    *(void *)(v6 + 15) = v39;
                    *(unsigned char *)(v6 + 23) = v2;
                    v62[0] = 0;
                    *(void *)((char *)v62 + 7) = 0;
                    *(unsigned char *)(v6 + 24) = 1;
                    char v2 = 0;
                    unint64_t v12 = 0;
                    int v34 = *(unsigned __int8 *)(v6 + 80);
                    if (v34 == v15) {
                      goto LABEL_78;
                    }
LABEL_91:
                    if (!v34)
                    {
                      uint64_t v43 = v61[0];
                      *(void *)(v6 + 32) = v13;
                      *(void *)(v6 + 40) = v43;
                      *(void *)(v6 + 47) = *(void *)((char *)v61 + 7);
                      *(unsigned char *)(v6 + 55) = (_BYTE)v18;
                      v61[0] = 0;
                      *(void *)((char *)v61 + 7) = 0;
                      *(void *)(v6 + 64) = _X24;
                      *(void *)(v6 + 72) = 0;
                      *(unsigned char *)(v6 + 80) = 1;
                      LOBYTE(v18) = 0;
                      unint64_t v13 = 0;
                      if (!*(unsigned char *)(v6 + 120)) {
                        goto LABEL_99;
                      }
                      goto LABEL_96;
                    }
                    if (*(char *)(v6 + 55) < 0)
                    {
                      char v40 = (char)v18;
                      operator delete(*(void **)(v6 + 32));
                      LOBYTE(v18) = v40;
                    }
                    *(unsigned char *)(v6 + 80) = 0;
                    goto LABEL_95;
                  }
                  if (*(char *)(v6 + 23) < 0)
                  {
                    char v45 = (char)v18;
                    operator delete(*(void **)v6);
                    LOBYTE(v18) = v45;
                  }
                  *(unsigned char *)(v6 + 24) = 0;
                }
                int v34 = *(unsigned __int8 *)(v6 + 80);
                if (v34 == v15) {
                  goto LABEL_78;
                }
                goto LABEL_91;
              }
LABEL_26:
              *(unsigned char *)uint64_t v6 = 0;
              *(unsigned char *)(v6 + 24) = 0;
              if (v11)
              {
                *(void *)uint64_t v6 = v12;
                uint64_t v16 = *(void *)((char *)v62 + 7);
                *(void *)(v6 + 8) = v62[0];
                *(void *)(v6 + 15) = v16;
                *(unsigned char *)(v6 + 23) = v2;
                v62[0] = 0;
                *(void *)((char *)v62 + 7) = 0;
                *(unsigned char *)(v6 + 24) = 1;
                char v2 = 0;
                unint64_t v12 = 0;
              }
              *(unsigned char *)(v6 + 32) = 0;
              *(unsigned char *)(v6 + 80) = 0;
              if (v10)
              {
                uint64_t v17 = v61[0];
                *(void *)(v6 + 32) = v13;
                *(void *)(v6 + 40) = v17;
                *(void *)(v6 + 47) = *(void *)((char *)v61 + 7);
                *(unsigned char *)(v6 + 55) = (_BYTE)v18;
                v61[0] = 0;
                *(void *)((char *)v61 + 7) = 0;
                *(void *)(v6 + 64) = _X24;
                *(void *)(v6 + 72) = 0;
                *(unsigned char *)(v6 + 80) = 1;
                LOBYTE(v18) = 0;
                unint64_t v13 = 0;
              }
              *(unsigned char *)(v6 + 96) = 0;
              *(unsigned char *)(v6 + 120) = 0;
              *(unsigned char *)(v6 + 128) = 0;
              *(void *)(v6 + 129) = *(void *)v60;
              *(void *)(v6 + 136) = *(void *)&v60[7];
              *(unsigned char *)(v6 + 144) = 0;
              *(_DWORD *)(v6 + 145) = v59[0];
              *(_DWORD *)(v6 + 148) = *(_DWORD *)((char *)v59 + 3);
              *(unsigned char *)(v6 + 160) = 1;
              if (!v10) {
                goto LABEL_102;
              }
              goto LABEL_100;
            }
LABEL_25:
            int v15 = 0;
            std::string __p = (void *)v13;
            char v49 = (char)v18;
            unint64_t v13 = 0;
            if (*(unsigned char *)(v6 + 160)) {
              goto LABEL_67;
            }
            goto LABEL_26;
          }
LABEL_24:
          int v14 = 0;
          uint64_t v48 = (void *)v12;
          char v50 = v2;
          unint64_t v12 = 0;
          if (v10) {
            goto LABEL_66;
          }
          goto LABEL_25;
        }
        if ((*(unsigned char *)(a1 + 23) & 0x80) == 0) {
          goto LABEL_6;
        }
        goto LABEL_15;
      }
LABEL_117:
      unint64_t v9 = v6 & 0xFFFFFFFFFFFFFF00;
      uint64_t v7 = v6;
      return v7 | v9;
    }
    unint64_t v9 = 0;
  }
  else
  {
    unint64_t v9 = 0;
    uint64_t v7 = 0;
  }
  return v7 | v9;
}

void sub_21582D048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (a35 && a31 < 0) {
    operator delete(__p);
  }
  if (a21)
  {
    if (a20 < 0) {
      operator delete(a15);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21582D08C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 168))
  {
    *(void *)a2 = *(void *)(a1 + 152);
    *(unsigned char *)(a2 + 120) = 1;
  }
  else
  {
    sub_21582D1B8((uint64_t)&v5);
    *(_OWORD *)a2 = v5;
    *(unsigned char *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 112) = 0;
    if (v15)
    {
      *(unsigned char *)(a2 + 40) = 0;
      int v3 = v8;
      if (v8)
      {
        *(_OWORD *)(a2 + 16) = __p;
        *(void *)(a2 + 32) = v7;
        uint64_t v7 = 0;
        long long __p = 0uLL;
        *(unsigned char *)(a2 + 40) = 1;
      }
      *(unsigned char *)(a2 + 48) = 0;
      *(unsigned char *)(a2 + 104) = 0;
      if (v14)
      {
        uint64_t v4 = v11;
        *(void *)(a2 + 64) = v10;
        *(_OWORD *)(a2 + 48) = v9;
        long long v9 = 0uLL;
        *(void *)(a2 + 72) = v4;
        *(_OWORD *)(a2 + 80) = v12;
        *(void *)(a2 + 96) = v13;
        uint64_t v10 = 0;
        long long v12 = 0uLL;
        uint64_t v13 = 0;
        *(unsigned char *)(a2 + 104) = 1;
      }
      *(unsigned char *)(a2 + 112) = 1;
      *(unsigned char *)(a2 + 120) = 0;
      if (v3)
      {
        if (SHIBYTE(v7) < 0) {
          operator delete((void *)__p);
        }
      }
    }
    else
    {
      *(unsigned char *)(a2 + 120) = 0;
    }
  }
}

void sub_21582D1B8(uint64_t a1)
{
  sub_2157CFEA8((uint64_t)__p, "Data info does not yet contain a log timestamp (will be generated during data creation).");
  char v10 = 1;
  sub_21573FCF8(0x12u, (long long *)__p, a1);
  if (v10)
  {
    if (!v9) {
      goto LABEL_5;
    }
    if (v8 < 0)
    {
      operator delete(v7);
      if ((v6 & 0x80000000) == 0)
      {
LABEL_5:
        if (!v4) {
          return;
        }
        goto LABEL_6;
      }
    }
    else if ((v6 & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v5);
    if (!v4) {
      return;
    }
LABEL_6:
    if (v3 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_21582D264(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_21582D278(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 144)) {
    return *(void *)(a1 + 128);
  }
  if (*(unsigned char *)(a1 + 168)) {
    return *(void *)(a1 + 152);
  }
  return 0;
}

uint64_t sub_21582D2A8(unsigned __int8 *a1)
{
  if (a1[144]) {
    return a1[136];
  }
  if (a1[168]) {
    return a1[160];
  }
  return 0;
}

void sub_21582D2D8(uint64_t a1, char *__s)
{
  void v23[2] = *MEMORY[0x263EF8340];
  if (__s)
  {
    size_t v4 = strlen(__s);
    if (v4 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    size_t v5 = v4;
    if (v4 >= 0x17)
    {
      uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v7 = v4 | 7;
      }
      uint64_t v8 = v7 + 1;
      char v6 = operator new(v7 + 1);
      *(void *)&long long v22 = v5;
      *((void *)&v22 + 1) = v8 | 0x8000000000000000;
      long long v21 = v6;
    }
    else
    {
      HIBYTE(v22) = v4;
      char v6 = &v21;
      if (!v4) {
        goto LABEL_15;
      }
    }
    memcpy(v6, __s, v5);
LABEL_15:
    *((unsigned char *)v6 + v5) = 0;
    char v9 = v21;
    v23[0] = v22;
    *(void *)((char *)v23 + 7) = *(void *)((char *)&v22 + 7);
    char v10 = HIBYTE(v22);
    long long v22 = 0uLL;
    long long v21 = 0;
    if (!*(unsigned char *)(a1 + 80))
    {
      uint64_t v20 = v23[0];
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v20;
      *(void *)(a1 + 47) = *(void *)((char *)v23 + 7);
      *(unsigned char *)(a1 + 55) = v10;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = 0;
      *(unsigned char *)(a1 + 80) = 1;
      if (!*(unsigned char *)(a1 + 368)) {
        return;
      }
      goto LABEL_22;
    }
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    uint64_t v11 = v23[0];
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 47) = *(void *)((char *)v23 + 7);
    *(unsigned char *)(a1 + 55) = v10;
    uint64_t v12 = *(void *)(a1 + 64);
    do
    {
      _X2 = 0;
      _X5 = *(void *)(a1 + 72);
      __asm { CASPAL          X4, X5, X2, X3, [X8] }
      _ZF = _X4 == v12;
      uint64_t v12 = _X4;
    }
    while (!_ZF);
    goto LABEL_21;
  }
  if (!*(unsigned char *)(a1 + 80))
  {
LABEL_21:
    if (!*(unsigned char *)(a1 + 368)) {
      return;
    }
    goto LABEL_22;
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  *(unsigned char *)(a1 + 80) = 0;
  if (*(unsigned char *)(a1 + 368))
  {
LABEL_22:
    if (*(unsigned char *)(a1 + 328) && *(char *)(a1 + 327) < 0) {
      operator delete(*(void **)(a1 + 304));
    }
    if (*(unsigned char *)(a1 + 288) && *(char *)(a1 + 263) < 0) {
      operator delete(*(void **)(a1 + 240));
    }
    if (*(unsigned char *)(a1 + 232))
    {
      if (*(char *)(a1 + 231) < 0) {
        operator delete(*(void **)(a1 + 208));
      }
    }
    *(unsigned char *)(a1 + 368) = 0;
  }
}

void sub_21582D4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  v17[0] = a2;
  sub_215ABA544(v17);
  uint64_t v20 = v17[0];
  uint64_t v21 = 1;
  char v3 = (void **)(a1 + 32);
  if (*(unsigned char *)(a1 + 80))
  {
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*v3);
    }
    _X0 = 0;
    _X1 = 0;
    *(_OWORD *)char v3 = *(_OWORD *)__p;
    *(void *)(a1 + 48) = v19;
    HIBYTE(v19) = 0;
    LOBYTE(__p[0]) = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    v17[0] = _X0;
    v17[1] = 0;
    uint64_t v11 = *(void *)(a1 + 64);
    do
    {
      _X5 = *(void *)(a1 + 72);
      __asm { CASPAL          X4, X5, X0, X1, [X8] }
      _ZF = _X4 == v11;
      uint64_t v11 = _X4;
    }
    while (!_ZF);
    if ((SHIBYTE(v19) & 0x80000000) == 0)
    {
LABEL_8:
      if (!*(unsigned char *)(a1 + 368)) {
        return;
      }
      goto LABEL_12;
    }
  }
  else
  {
    _X0 = 0;
    _X1 = 0;
    *(void *)(a1 + 48) = v19;
    *(_OWORD *)char v3 = *(_OWORD *)__p;
    __p[1] = 0;
    uint64_t v19 = 0;
    __p[0] = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X9] }
    *(void *)(a1 + 64) = _X0;
    *(void *)(a1 + 72) = 0;
    *(unsigned char *)(a1 + 80) = 1;
    if ((SHIBYTE(v19) & 0x80000000) == 0) {
      goto LABEL_8;
    }
  }
  operator delete(__p[0]);
  if (!*(unsigned char *)(a1 + 368)) {
    return;
  }
LABEL_12:
  if (*(unsigned char *)(a1 + 328) && *(char *)(a1 + 327) < 0) {
    operator delete(*(void **)(a1 + 304));
  }
  if (*(unsigned char *)(a1 + 288) && *(char *)(a1 + 263) < 0) {
    operator delete(*(void **)(a1 + 240));
  }
  if (*(unsigned char *)(a1 + 232))
  {
    if (*(char *)(a1 + 231) < 0) {
      operator delete(*(void **)(a1 + 208));
    }
  }
  *(unsigned char *)(a1 + 368) = 0;
}

uint64_t sub_21582D684(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 24))
  {
    if (*(char *)(a2 + 23) < 0)
    {
      if (*(void *)(a2 + 8)) {
        BOOL v4 = *(void *)a2 == 0;
      }
      else {
        BOOL v4 = 1;
      }
      if (!v4) {
        goto LABEL_16;
      }
    }
    else if (*(unsigned char *)(a2 + 23))
    {
      goto LABEL_16;
    }
  }
  if (!*(unsigned char *)(a2 + 80)) {
    return 0;
  }
  uint64_t v5 = *(unsigned __int8 *)(a2 + 55);
  int v6 = (char)v5;
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(a2 + 40);
  }
  if (!v5 || v6 < 0 && !*(void *)(a2 + 32)) {
    return 0;
  }
LABEL_16:
  if (*(unsigned char *)(a1 + 200))
  {
    uint64_t v8 = *(unsigned __int8 **)(a1 + 176);
    uint64_t v7 = *(unsigned __int8 **)(a1 + 184);
    if (v8 == v7)
    {
      uint64_t v7 = *(unsigned __int8 **)(a1 + 176);
      goto LABEL_25;
    }
    while ((sub_215AEF77C(v8, (unsigned __int8 *)a2) & 1) == 0)
    {
      v8 += 96;
      if (v8 == v7) {
        goto LABEL_25;
      }
    }
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 192) = 0;
    *(unsigned char *)(a1 + 200) = 1;
  }
  if (v8 != v7) {
    return 0;
  }
LABEL_25:
  if ((unint64_t)v7 >= *(void *)(a1 + 192))
  {
    char v10 = sub_21582F8A4((char **)(a1 + 176), (long long *)a2);
  }
  else
  {
    sub_21574709C(v7, (long long *)a2);
    char v10 = (char *)(v7 + 96);
    *(void *)(a1 + 184) = v7 + 96;
  }
  *(void *)(a1 + 184) = v10;
  return 1;
}

void sub_21582D7CC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 184) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_21582D7D4(uint64_t a1, char *__s)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  size_t v4 = strlen(__s);
  sub_215AEF2F0(__s, v4, (uint64_t)v14);
  LOBYTE(v20[0]) = 0;
  char v22 = 0;
  if (v16)
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v14;
    uint64_t v21 = v15;
    v14[1] = 0;
    uint64_t v15 = 0;
    v14[0] = 0;
    char v22 = 1;
  }
  LOBYTE(v23) = 0;
  char v27 = 0;
  if (v19)
  {
    _X0 = 0;
    _X1 = 0;
    uint64_t v24 = v18;
    long long v23 = *(_OWORD *)v17;
    v17[1] = 0;
    uint64_t v18 = 0;
    v17[0] = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    uint64_t v25 = _X0;
    uint64_t v26 = 0;
    char v27 = 1;
  }
  LOBYTE(__p) = 0;
  char v30 = 0;
  char v31 = 0;
  char v32 = 0;
  uint64_t v12 = sub_21582D684(a1, (uint64_t)v20);
  if (v30 && v29 < 0) {
    operator delete(__p);
  }
  if (v27 && SHIBYTE(v24) < 0) {
    operator delete((void *)v23);
  }
  if (v22 && SHIBYTE(v21) < 0) {
    operator delete(v20[0]);
  }
  if (v19 && SHIBYTE(v18) < 0) {
    operator delete(v17[0]);
  }
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  return v12;
}

void sub_21582D968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
}

void sub_21582D988(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  if (!*(unsigned char *)(a1 + 200))
  {
    unint64_t v6 = 0;
LABEL_9:
    int v31 = 0;
    sub_21576B740(v30, "index ");
    std::to_string(&v32, a2);
    uint64_t v33 = (std::string *)v30;
    int v34 = &v32;
    uint64_t v35 = v30;
    uint64_t v36 = &v32;
    long long v37 = &v32;
    if (v31 == -1) {
      sub_215742D4C();
    }
    uint64_t v38 = &v33;
    ((void (*)(std::string ***, _DWORD *))off_26C65F730[v31])(&v38, v30);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    uint64_t v33 = (std::string *)v30;
    int v34 = (std::string *)" out of range for reference list of size ";
    uint64_t v35 = v30;
    uint64_t v36 = (std::string *)" out of range for reference list of size ";
    long long v37 = (std::string *)" out of range for reference list of size ";
    if (v31 == -1) {
      sub_215742D4C();
    }
    v32.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33;
    ((void (*)(std::string *, _DWORD *))off_26C65F778[v31])(&v32, v30);
    std::to_string(&v32, v6);
    uint64_t v33 = (std::string *)v30;
    int v34 = &v32;
    uint64_t v35 = v30;
    uint64_t v36 = &v32;
    long long v37 = &v32;
    if (v31 == -1) {
      sub_215742D4C();
    }
    uint64_t v38 = &v33;
    ((void (*)(std::string ***, _DWORD *))off_26C65F730[v31])(&v38, v30);
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    if (v31 == -1) {
      sub_215742D4C();
    }
    uint64_t v33 = &v32;
    ((void (*)(long long *__return_ptr, std::string **, _DWORD *))off_26C65F760[v31])(&v19, &v33, v30);
    if (v31 != -1) {
      ((void (*)(std::string **, _DWORD *))off_26C65F748[v31])(&v33, v30);
    }
    if (SHIBYTE(v20) < 0)
    {
      sub_215738B0C(__p, (void *)v19, *((unint64_t *)&v19 + 1));
    }
    else
    {
      *(_OWORD *)long long __p = v19;
      uint64_t v22 = v20;
    }
    char v23 = 1;
    LOBYTE(v24) = 0;
    char v28 = 0;
    char v29 = 1;
    sub_21573FCF8(0xAu, (long long *)__p, (uint64_t)&__dst);
    *(_OWORD *)a3 = __dst;
    *(unsigned char *)(a3 + 16) = 0;
    *(unsigned char *)(a3 + 112) = 0;
    if ((_BYTE)v47)
    {
      *(unsigned char *)(a3 + 40) = 0;
      int v16 = BYTE8(v41);
      if (BYTE8(v41))
      {
        *(_OWORD *)(a3 + 16) = v40;
        *(void *)(a3 + 32) = v41;
        *(void *)&long long v41 = 0;
        long long v40 = 0uLL;
        *(unsigned char *)(a3 + 40) = 1;
      }
      *(unsigned char *)(a3 + 48) = 0;
      *(unsigned char *)(a3 + 104) = 0;
      if (BYTE8(v46))
      {
        uint64_t v17 = v44;
        *(void *)(a3 + 64) = v43;
        *(_OWORD *)(a3 + 48) = v42;
        long long v42 = 0uLL;
        *(void *)(a3 + 72) = v17;
        *(_OWORD *)(a3 + 80) = v45;
        *(void *)(a3 + 96) = v46;
        uint64_t v43 = 0;
        long long v45 = 0uLL;
        *(void *)&long long v46 = 0;
        *(unsigned char *)(a3 + 104) = 1;
      }
      *(unsigned char *)(a3 + 112) = 1;
      *(unsigned char *)(a3 + 160) = 0;
      if (v16 && SBYTE7(v41) < 0) {
        operator delete((void *)v40);
      }
      if (!v29) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)(a3 + 160) = 0;
      if (!v29) {
        goto LABEL_39;
      }
    }
    if (!v28) {
      goto LABEL_36;
    }
    if (v27 < 0)
    {
      operator delete(v26);
      if ((v25 & 0x80000000) == 0)
      {
LABEL_36:
        if (v23) {
          goto LABEL_37;
        }
        goto LABEL_39;
      }
    }
    else if ((v25 & 0x80000000) == 0)
    {
      goto LABEL_36;
    }
    operator delete(v24);
    if (v23)
    {
LABEL_37:
      if (SHIBYTE(v22) < 0) {
        operator delete(__p[0]);
      }
    }
LABEL_39:
    if ((SHIBYTE(v20) & 0x80000000) == 0) {
      return;
    }
    uint64_t v18 = (void *)v19;
    goto LABEL_48;
  }
  uint64_t v5 = *(void *)(a1 + 176);
  unint64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((*(void *)(a1 + 184) - v5) >> 5);
  if (v6 <= a2) {
    goto LABEL_9;
  }
  sub_21574709C(&__dst, (long long *)(v5 + 96 * a2));
  LOBYTE(v46) = 0;
  unsigned __int8 v48 = 0;
  LOBYTE(v49) = 0;
  LOBYTE(v50) = 0;
  *(unsigned char *)a3 = 0;
  *(unsigned char *)(a3 + 24) = 0;
  if (BYTE8(v40))
  {
    *(_OWORD *)a3 = __dst;
    *(void *)(a3 + 16) = v40;
    *(void *)&long long v40 = 0;
    long long __dst = 0uLL;
    *(unsigned char *)(a3 + 24) = 1;
  }
  *(unsigned char *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 80) = 0;
  if ((_BYTE)v45)
  {
    _X0 = 0;
    _X1 = 0;
    long long v9 = v41;
    *(void *)(a3 + 48) = v42;
    *(_OWORD *)(a3 + 32) = v9;
    *(void *)&long long v42 = 0;
    long long v41 = 0uLL;
    __asm { CASPAL          X0, X1, X0, X1, [X9] }
    *(unsigned char *)(a3 + 96) = 0;
    *(void *)(a3 + 64) = _X0;
    *(void *)(a3 + 72) = 0;
    *(unsigned char *)(a3 + 80) = 1;
    int v15 = v48;
    *(unsigned char *)(a3 + 120) = 0;
    if (v15)
    {
      *(_OWORD *)(a3 + 96) = v46;
      *(void *)(a3 + 112) = v47;
      uint64_t v47 = 0;
      long long v46 = 0uLL;
      *(unsigned char *)(a3 + 120) = 1;
    }
  }
  else
  {
    *(unsigned char *)(a3 + 96) = 0;
    *(unsigned char *)(a3 + 120) = 0;
  }
  *(_OWORD *)(a3 + 128) = v49;
  *(void *)(a3 + 144) = v50;
  *(unsigned char *)(a3 + 160) = 1;
  if ((_BYTE)v45 && SBYTE7(v42) < 0) {
    operator delete((void *)v41);
  }
  if (BYTE8(v40) && SBYTE7(v40) < 0)
  {
    uint64_t v18 = (void *)__dst;
LABEL_48:
    operator delete(v18);
  }
}

void sub_21582DE50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_21582DE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_21582DEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_21582DEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_21582DECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_21582DEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  sub_215742CF0((uint64_t)&a26);
  _Unwind_Resume(a1);
}

uint64_t sub_21582DF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  size_t v4 = *(std::__shared_weak_count **)(a2 + 16);
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  if (!v5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_21582FB60(exception, "SharedData is null");
    __cxa_throw(exception, (struct type_info *)off_26425A320, MEMORY[0x263F8C080]);
  }
  sub_215AF0948(a2);
  uint64_t v6 = sub_215AF0140(a2);
  uint64_t v7 = v6;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 56) = 0;
  if (*(unsigned char *)(v6 + 40))
  {
    if (*(char *)(v6 + 39) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 32), *(void **)(v6 + 16), *(void *)(v6 + 24));
    }
    else
    {
      long long v8 = *(_OWORD *)(v6 + 16);
      *(void *)(a1 + 48) = *(void *)(v6 + 32);
      *(_OWORD *)(a1 + 32) = v8;
    }
    *(unsigned char *)(a1 + 56) = 1;
  }
  *(unsigned char *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  if (*(unsigned char *)(v7 + 160))
  {
    if (*(char *)(v7 + 135) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 64), *(void **)(v7 + 112), *(void *)(v7 + 120));
    }
    else
    {
      long long v9 = *(_OWORD *)(v7 + 112);
      *(void *)(a1 + 80) = *(void *)(v7 + 128);
      *(_OWORD *)(a1 + 64) = v9;
    }
    _X0 = 0;
    _X1 = 0;
    __asm { CASPAL          X0, X1, X0, X1, [X8] }
    *(void *)(a1 + 96) = _X0;
    *(void *)(a1 + 104) = 0;
    *(unsigned char *)(a1 + 112) = 1;
  }
  *(unsigned char *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  if (*(unsigned char *)(v7 + 72))
  {
    if (*(char *)(v7 + 71) < 0)
    {
      sub_215738B0C((unsigned char *)(a1 + 128), *(void **)(v7 + 48), *(void *)(v7 + 56));
    }
    else
    {
      long long v17 = *(_OWORD *)(v7 + 48);
      *(void *)(a1 + 144) = *(void *)(v7 + 64);
      *(_OWORD *)(a1 + 128) = v17;
    }
    *(unsigned char *)(a1 + 152) = 1;
  }
  uint64_t v18 = (_OWORD *)(a1 + 160);
  char v19 = *(unsigned char *)(v7 + 96);
  if (v19)
  {
    *(void *)&long long v24 = *(void *)(v7 + 80);
    BYTE8(v24) = *(unsigned char *)(v7 + 88);
    *uint64_t v18 = v24;
    char v19 = 1;
  }
  else
  {
    *(unsigned char *)uint64_t v18 = 0;
  }
  *(unsigned char *)(a1 + 176) = v19;
  *(void *)&long long v23 = *(void *)v7;
  BYTE8(v23) = *(unsigned char *)(v7 + 8);
  *(_OWORD *)(a1 + 184) = v23;
  *(unsigned char *)(a1 + 200) = 1;
  sub_215746DAC(a1 + 208, v7 + 176);
  *(unsigned char *)(a1 + 240) = 0;
  *(unsigned char *)(a1 + 400) = 0;
  *(void *)(a1 + 416) = &unk_26C678D20;
  *(void *)(a1 + 424) = *(void *)(a2 + 8);
  uint64_t v20 = *(void *)(a2 + 16);
  *(void *)(a1 + 432) = v20;
  if (v20) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v20 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 448) = 0;
  *(unsigned char *)(a1 + 480) = 0;
  *(unsigned char *)(a1 + 488) = 0;
  *(unsigned char *)(a1 + 512) = 0;
  return a1;
}

void sub_21582E1A4(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 152) && *(char *)(v1 + 151) < 0) {
    operator delete(*v4);
  }
  if (*(unsigned char *)(v1 + 112) && *(char *)(v1 + 87) < 0) {
    operator delete(*v3);
  }
  if (*(unsigned char *)(v1 + 56) && *(char *)(v1 + 55) < 0) {
    operator delete(*v2);
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21582E238(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  uint64_t v6 = a2;
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0)
  {
    if (memcmp(*(const void **)a1, a2, *((void *)a1 + 1))) {
      return 0;
    }
  }
  else if (a1[23])
  {
    long long v8 = a1;
    while (*v8 == *a2)
    {
      ++v8;
      ++a2;
      if (!--v2) {
        goto LABEL_18;
      }
    }
    return 0;
  }
LABEL_18:
  if (*((_DWORD *)a1 + 6) != *((_DWORD *)v6 + 6)) {
    return 0;
  }
  v11[0] = a1 + 32;
  v11[1] = a1 + 64;
  v11[2] = a1 + 128;
  v11[3] = a1 + 160;
  v11[4] = a1 + 184;
  v11[5] = a1 + 208;
  v10[0] = v6 + 32;
  v10[1] = v6 + 64;
  v10[2] = v6 + 128;
  v10[3] = v6 + 160;
  v10[4] = v6 + 184;
  v10[5] = v6 + 208;
  uint64_t result = sub_21575CB04((uint64_t)&v12, v11, v10);
  if (result) {
    return sub_215AEFC4C((uint64_t)(a1 + 416), (void *)v6 + 52);
  }
  return result;
}

void sub_21582E37C()
{
}

void sub_21582E554(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_21582E578(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  uint64_t v10 = a9;
  a9 = 0;
  if (!v10) {
    _Unwind_Resume(exception_object);
  }
  sub_215E15464((uint64_t)&a9, v10);
  _Unwind_Resume(exception_object);
}

void sub_21582E5A0(const char *a1, std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep a2)
{
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v2 = *((unsigned __int8 *)a1 + 23);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = (uint64_t *)a1;
  }
  else {
    uint64_t v3 = *(uint64_t **)a1;
  }
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *((void *)a1 + 1);
  }
  if (v2)
  {
    uint64_t v6 = 0;
    while (*((unsigned char *)v3 + v6) != 35)
    {
      if (v2 == ++v6) {
        return;
      }
    }
    if (v2 != v6 && v6 != -1)
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E458, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_26788E458))
      {
        sub_215732BF4(v57, "cv3dapi.visual_logger");
        sub_21573DD40((uint64_t)v57, &qword_26788E450);
        if (SHIBYTE(v58[0]) < 0) {
          operator delete(v57[0]);
        }
        __cxa_atexit((void (*)(void *))nullsub_3, &qword_26788E450, &dword_21572C000);
        __cxa_guard_release(&qword_26788E458);
      }
      uint64_t v67 = qword_26788E450;
      if (**(int **)(qword_26788E450 + 56) <= 4)
      {
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E460, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_26788E460))
        {
          long long v46 = operator new(0x28uLL);
          v46[1] = 0;
          v46[2] = 0;
          *long long v46 = &unk_26C65F6F0;
          *((unsigned char *)v46 + 24) = 0;
          *((unsigned char *)v46 + 32) = 0;
          qword_26788E468 = (uint64_t)(v46 + 3);
          qword_26788E470 = (uint64_t)v46;
          unk_26788E478 = a2;
          __cxa_atexit((void (*)(void *))sub_21582FB94, &qword_26788E468, &dword_21572C000);
          __cxa_guard_release(&qword_26788E460);
        }
        uint64_t v7 = (void *)qword_26788E468;
        int v8 = *(unsigned __int8 *)(qword_26788E468 + 8);
        v9.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
        if (!v8 || a2 < 1)
        {
          uint64_t v11 = (std::chrono::steady_clock::time_point *)qword_26788E468;
          if (!*(unsigned char *)(qword_26788E468 + 8)) {
            *(unsigned char *)(qword_26788E468 + 8) = 1;
          }
        }
        else
        {
          if (v9.__d_.__rep_ - *v7 < a2) {
            return;
          }
          uint64_t v11 = (std::chrono::steady_clock::time_point *)qword_26788E468;
        }
        v11->__d_.__rep_ = v9.__d_.__rep_;
        int v12 = *(unsigned __int8 *)(v67 + 72);
        unint64_t v13 = sub_2157362A4(v67, "OSLogSurrogateAppender", 1, 0);
        unint64_t v14 = v13;
        if (v12 || v13)
        {
          sub_2157328B8((uint64_t)v57);
          if (a1[23] >= 0) {
            int v15 = (uint64_t *)a1;
          }
          else {
            int v15 = *(uint64_t **)a1;
          }
          unsigned __int8 v16 = *((unsigned char *)v15 + v6);
          int v49 = 0;
          sub_2157D4E8C(v48, "Data name \"");
          *(void *)&long long v73 = v48;
          *((void *)&v73 + 1) = a1;
          int v74 = v48;
          uint64_t v75 = a1;
          long long v76 = a1;
          if (v49 == -1) {
            sub_215742D4C();
          }
          *(void *)&long long v70 = &v73;
          ((void (*)(long long *, void *))off_26C65F790[v49])(&v70, v48);
          *(void *)&long long v73 = v48;
          *((void *)&v73 + 1) = "\" contains reserved character '";
          int v74 = v48;
          uint64_t v75 = "\" contains reserved character '";
          long long v76 = "\" contains reserved character '";
          if (v49 == -1) {
            sub_215742D4C();
          }
          *(void *)&long long v70 = &v73;
          ((void (*)(long long *, void *))off_26C65F7A8[v49])(&v70, v48);
          char v71 = 1;
          LOWORD(v70) = v16;
          *(void *)&long long v73 = v48;
          *((void *)&v73 + 1) = &v70;
          int v74 = v48;
          uint64_t v75 = (const char *)&v70;
          long long v76 = (const char *)&v70;
          if (v49 == -1) {
            sub_215742D4C();
          }
          uint64_t v72 = &v73;
          ((void (*)(long long **, void *))off_26C65F730[v49])(&v72, v48);
          if (v71 < 0) {
            operator delete((void *)v70);
          }
          *(void *)&long long v73 = v48;
          *((void *)&v73 + 1) = "'. Using reserved characters in names could cause unintended equivalency with other da"
                                  "ta when referencing. VisualLogger guidelines recommend to use underscores or other cha"
                                  "racters instead. (Logged at most once per second)";
          int v74 = v48;
          uint64_t v75 = "'. Using reserved characters in names could cause unintended equivalency with other data when referencin"
                "g. VisualLogger guidelines recommend to use underscores or other characters instead. (Logged at most once per second)";
          long long v76 = "'. Using reserved characters in names could cause unintended equivalency with other data when referencin"
                "g. VisualLogger guidelines recommend to use underscores or other characters instead. (Logged at most once per second)";
          if (v49 == -1) {
            sub_215742D4C();
          }
          *(void *)&long long v70 = &v73;
          ((void (*)(long long *, void *))off_26C65F7C0[v49])(&v70, v48);
          if (v49 == -1) {
            sub_215742D4C();
          }
          *(void *)&long long v73 = &v70;
          ((void (*)(void **__return_ptr, long long *, void *))off_26C65F760[v49])(__p, &v73, v48);
          if (v49 != -1) {
            ((void (*)(long long *, void *))off_26C65F748[v49])(&v73, v48);
          }
          if ((v69 & 0x80u) == 0) {
            long long v17 = __p;
          }
          else {
            long long v17 = (void **)__p[0];
          }
          if ((v69 & 0x80u) == 0) {
            uint64_t v18 = v69;
          }
          else {
            uint64_t v18 = (uint64_t)__p[1];
          }
          sub_215731D94(v58, (uint64_t)v17, v18);
          if ((char)v69 < 0) {
            operator delete(__p[0]);
          }
          unint64_t v47 = v14;
          if ((v65 & 0x10) != 0)
          {
            unint64_t v21 = v64;
            if (v64 < v61)
            {
              unint64_t v64 = v61;
              unint64_t v21 = v61;
            }
            uint64_t v22 = (const void **)&v60;
          }
          else
          {
            if ((v65 & 8) == 0)
            {
              size_t v19 = 0;
              HIBYTE(v56) = 0;
              uint64_t v20 = __dst;
              goto LABEL_62;
            }
            uint64_t v22 = (const void **)v59;
            unint64_t v21 = v59[2];
          }
          long long v23 = *v22;
          size_t v19 = v21 - (void)*v22;
          if (v19 > 0x7FFFFFFFFFFFFFF7) {
            sub_215731CD8();
          }
          if (v19 >= 0x17)
          {
            uint64_t v24 = (v19 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v19 | 7) != 0x17) {
              uint64_t v24 = v19 | 7;
            }
            uint64_t v25 = v24 + 1;
            uint64_t v20 = (void **)operator new(v24 + 1);
            __dst[1] = (void *)v19;
            int64_t v56 = v25 | 0x8000000000000000;
            __dst[0] = v20;
          }
          else
          {
            HIBYTE(v56) = v21 - *(unsigned char *)v22;
            uint64_t v20 = __dst;
            if (!v19)
            {
LABEL_62:
              *((unsigned char *)v20 + v19) = 0;
              v48[0] = &v67;
              v48[1] = std::chrono::steady_clock::now().__d_.__rep_;
              v48[2] = std::chrono::system_clock::now().__d_.__rep_;
              int v49 = 4;
              uint64_t v50 = "unknown file";
              int v51 = 424;
              uint64_t v53 = 0;
              uint64_t v54 = 0;
              uint64_t v52 = "unknown function";
              if (v56 >= 0) {
                uint64_t v26 = __dst;
              }
              else {
                uint64_t v26 = (void **)__dst[0];
              }
              uint64_t v27 = *(void *)v48[0];
              char v28 = (const char *)(*(void *)v48[0] + 16);
              if (*(char *)(*(void *)v48[0] + 39) < 0)
              {
                char v28 = *(const char **)(v27 + 16);
                size_t v29 = *(void *)(v27 + 24);
              }
              else
              {
                size_t v29 = *(unsigned __int8 *)(*(void *)v48[0] + 39);
              }
              if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267883880, memory_order_acquire) & 1) == 0
                && __cxa_guard_acquire(&qword_267883880))
              {
                sub_215E0EFD4((uint64_t)&v73);
                sub_2157420B4("com.apple.cv3d", (unint64_t)&v73, &qword_267883868);
                if ((_BYTE)v75 && SHIBYTE(v74) < 0) {
                  operator delete((void *)v73);
                }
                __cxa_atexit(MEMORY[0x263F8C0B8], &qword_267883868, &dword_21572C000);
                __cxa_guard_release(&qword_267883880);
              }
              if (byte_26788387F >= 0) {
                char v30 = (const char *)&qword_267883868;
              }
              else {
                char v30 = (const char *)qword_267883868;
              }
              if (byte_26788387F >= 0) {
                size_t v31 = byte_26788387F;
              }
              else {
                size_t v31 = unk_267883870;
              }
              *(void *)&long long v73 = os_log_create(v30, v28);
              std::string v32 = (char *)&v73 + 8;
              if (v31 > 0x7FFFFFFFFFFFFFF7) {
                sub_215731CD8();
              }
              if (v31 >= 0x17)
              {
                int v33 = v12;
                uint64_t v34 = (v31 & 0xFFFFFFFFFFFFFFF8) + 8;
                if ((v31 | 7) != 0x17) {
                  uint64_t v34 = v31 | 7;
                }
                uint64_t v35 = v34 + 1;
                std::string v32 = (char *)operator new(v34 + 1);
                int v74 = (void *)v31;
                uint64_t v75 = (const char *)(v35 | 0x8000000000000000);
                *((void *)&v73 + 1) = v32;
                int v12 = v33;
              }
              else
              {
                HIBYTE(v75) = v31;
                if (!v31)
                {
LABEL_83:
                  v32[v31] = 0;
                  LOBYTE(v76) = 1;
                  uint64_t v36 = v77;
                  if (v29 > 0x7FFFFFFFFFFFFFF7) {
                    sub_215731CD8();
                  }
                  long long v37 = v26;
                  if (v29 >= 0x17)
                  {
                    uint64_t v39 = (v29 & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v29 | 7) != 0x17) {
                      uint64_t v39 = v29 | 7;
                    }
                    uint64_t v40 = v39 + 1;
                    unint64_t v38 = v47;
                    uint64_t v36 = (void **)operator new(v39 + 1);
                    v77[1] = (void *)v29;
                    unint64_t v78 = v40 | 0x8000000000000000;
                    v77[0] = v36;
                  }
                  else
                  {
                    HIBYTE(v78) = v29;
                    unint64_t v38 = v47;
                    if (!v29) {
                      goto LABEL_91;
                    }
                  }
                  memmove(v36, v28, v29);
LABEL_91:
                  *((unsigned char *)v36 + v29) = 0;
                  char v79 = 1;
                  long long v41 = v73;
                  if (SHIBYTE(v78) < 0) {
                    operator delete(v77[0]);
                  }
                  if ((_BYTE)v76 && SHIBYTE(v75) < 0) {
                    operator delete(*((void **)&v73 + 1));
                  }
                  if ((void)v73) {
                    os_release((void *)v73);
                  }
                  if (v38 && *(void *)(v38 + 24))
                  {
                    _os_log_pack_size();
                    MEMORY[0x2166C4D30]();
                    operator new();
                  }
                  os_log_type_enabled(v41, OS_LOG_TYPE_ERROR);
                  LODWORD(v73) = 136315138;
                  *(void *)((char *)&v73 + 4) = v37;
                  long long v42 = (void *)_os_log_send_and_compose_impl();
                  if (v42) {
                    free(v42);
                  }
                  if (v12)
                  {
                    uint64_t v43 = (const char *)__dst;
                    if (v56 < 0) {
                      uint64_t v43 = (const char *)__dst[0];
                    }
                    sub_21573230C((uint64_t)v48, "%s", v43);
                    sub_215741D8C((uint64_t)v48);
                  }
                  sub_215741D8C((uint64_t)v48);
                  uint64_t v44 = v54;
                  if (v54 && !atomic_fetch_add(&v54->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                  {
                    ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
                    std::__shared_weak_count::__release_weak(v44);
                  }
                  if (SHIBYTE(v56) < 0) {
                    operator delete(__dst[0]);
                  }
                  v57[0] = *(void **)MEMORY[0x263F8C2B8];
                  uint64_t v45 = *(void *)(MEMORY[0x263F8C2B8] + 72);
                  *(void **)((char *)v57 + *((void *)v57[0] - 3)) = *(void **)(MEMORY[0x263F8C2B8] + 64);
                  v58[0] = v45;
                  v58[1] = MEMORY[0x263F8C318] + 16;
                  if (v63 < 0) {
                    operator delete(v62);
                  }
                  std::streambuf::~streambuf();
                  std::iostream::~basic_iostream();
                  MEMORY[0x2166C4BF0](&v66);
                  return;
                }
              }
              memmove(v32, v30, v31);
              goto LABEL_83;
            }
          }
          memmove(v20, v23, v19);
          goto LABEL_62;
        }
      }
    }
  }
}

void sub_21582F504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30)
{
  if (*(unsigned char *)(v30 - 152) && *(char *)(v30 - 153) < 0) {
    operator delete(*(void **)(v30 - 176));
  }
  __cxa_guard_abort(&qword_267883880);
  sub_21582F6E4((uint64_t)&a15);
  if (a29 < 0)
  {
    operator delete(__p);
    sub_2157351A4((uint64_t)&a30);
    _Unwind_Resume(a1);
  }
  sub_2157351A4((uint64_t)&a30);
  _Unwind_Resume(a1);
}

uint64_t sub_21582F6E4(uint64_t a1)
{
  sub_215741D8C(a1);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_21582F768(uint64_t a1, void *a2)
{
  if (*(unsigned __int8 *)(a1 + 24) == *((unsigned __int8 *)a2 + 24))
  {
    if ((void *)a1 != a2 && *(unsigned char *)(a1 + 24))
    {
      if (*(char *)(a1 + 23) < 0)
      {
        size_t v5 = a2[1];
        if (*((char *)a2 + 23) >= 0)
        {
          size_t v6 = *((unsigned __int8 *)a2 + 23);
        }
        else
        {
          a2 = (void *)*a2;
          size_t v6 = v5;
        }
        sub_21573ABD0((void **)a1, a2, v6);
      }
      else if ((*((unsigned char *)a2 + 23) & 0x80) != 0)
      {
        size_t v7 = a2[1];
        int v8 = (void *)*a2;
        sub_21573AB08((void *)a1, v8, v7);
      }
      else
      {
        long long v3 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = a2[2];
        *(_OWORD *)a1 = v3;
      }
    }
  }
  else if (*(unsigned char *)(a1 + 24))
  {
    if (*(char *)(a1 + 23) < 0)
    {
      operator delete(*(void **)a1);
      *(unsigned char *)(a1 + 24) = 0;
    }
    else
    {
      *(unsigned char *)(a1 + 24) = 0;
    }
  }
  else if (*((char *)a2 + 23) < 0)
  {
    sub_215738B0C((unsigned char *)a1, (void *)*a2, a2[1]);
    *(unsigned char *)(a1 + 24) = 1;
  }
  else
  {
    long long v4 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)a1 = v4;
    *(unsigned char *)(a1 + 24) = 1;
  }
}

char *sub_21582F8A4(char **a1, long long *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * ((a1[2] - *a1) >> 5) > v4) {
    unint64_t v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 5);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 5) >= 0x155555555555555) {
    unint64_t v6 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x2AAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(96 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  unint64_t v14 = &v7[96 * v3];
  *((void *)&v15 + 1) = &v7[96 * v6];
  sub_21574709C(v14, a2);
  int v8 = v14 + 96;
  uint64_t v10 = *a1;
  std::chrono::steady_clock::time_point v9 = a1[1];
  if (v9 != *a1)
  {
    uint64_t v11 = 0;
    do
    {
      sub_21574709C(&v14[v11 - 96], (long long *)&v9[v11 - 96]);
      v11 -= 96;
    }
    while (&v9[v11] != v10);
    std::chrono::steady_clock::time_point v9 = *a1;
    int v12 = (void **)a1[1];
    *a1 = &v14[v11];
    *(void *)&long long v15 = v14 + 96;
    *(_OWORD *)(a1 + 1) = v15;
    int v8 = v14 + 96;
    while (1)
    {
      if (v12 == (void **)v9) {
        goto LABEL_25;
      }
      if (*((unsigned char *)v12 - 16) && *((char *)v12 - 41) < 0)
      {
        operator delete(*(v12 - 8));
        if (!*((unsigned char *)v12 - 72)) {
          goto LABEL_15;
        }
      }
      else if (!*((unsigned char *)v12 - 72))
      {
        goto LABEL_15;
      }
      if (*((char *)v12 - 73) < 0) {
        operator delete(*(v12 - 12));
      }
LABEL_15:
      v12 -= 12;
    }
  }
  *a1 = v14;
  a1[1] = v8;
  a1[2] = (char *)*((void *)&v15 + 1);
LABEL_25:
  if (v9) {
    operator delete(v9);
  }
  return v8;
}

void sub_21582FA50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21582FACC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_21582FA64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (!v2)
  {
LABEL_2:
    sub_21582FACC((uint64_t)va);
    _Unwind_Resume(a1);
  }
  while (1)
  {
    uint64_t v5 = v3 + v2;
    if (*(unsigned char *)(v3 + v2 + 80) && *(char *)(v5 + 55) < 0)
    {
      operator delete(*(void **)(v5 + 32));
      if (*(unsigned char *)(v5 + 24))
      {
LABEL_7:
        if (*(char *)(v3 + v2 + 23) < 0) {
          operator delete(*(void **)v5);
        }
      }
    }
    else if (*(unsigned char *)(v5 + 24))
    {
      goto LABEL_7;
    }
    v2 += 96;
    if (!v2) {
      goto LABEL_2;
    }
  }
}

uint64_t sub_21582FACC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 96;
    if (*(unsigned char *)(i - 16) && *(char *)(i - 41) < 0)
    {
      operator delete(*(void **)(i - 64));
      if (!*(unsigned char *)(i - 72)) {
        continue;
      }
    }
    else if (!*(unsigned char *)(i - 72))
    {
      continue;
    }
    if (*(char *)(i - 73) < 0) {
      operator delete(*(void **)(i - 96));
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

std::logic_error *sub_21582FB60(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C3A0] + 16);
  return result;
}

uint64_t sub_21582FB94(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_21582FC10(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65F6F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_21582FC30(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65F6F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_21582FC8C()
{
}

void sub_21582FED4(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_21582FEF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_21582FF3C(uint64_t *a1, int **a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  int v6 = **a2;
  if (v6)
  {
    sub_215731D94(a2[1], (uint64_t)", ", 2);
    uint64_t v5 = *a2;
    int v6 = **a2;
  }
  int v8 = a2[1];
  size_t v7 = a2[2];
  *uint64_t v5 = v6 + 1;
  sub_215731D94(v8, *(void *)&v7[4 * v6], *(void *)&v7[4 * v6 + 2]);
  sub_215731D94(v8, (uint64_t)" = ", 3);
  std::chrono::steady_clock::time_point v9 = a2[1];
  if (*(unsigned char *)(v4 + 24))
  {
    int v10 = *(char *)(v4 + 23);
    if (v10 >= 0) {
      uint64_t v11 = v4;
    }
    else {
      uint64_t v11 = *(void *)v4;
    }
    if (v10 >= 0) {
      uint64_t v12 = *(unsigned __int8 *)(v4 + 23);
    }
    else {
      uint64_t v12 = *(void *)(v4 + 8);
    }
    sub_215731D94(v9, v11, v12);
    uint64_t v13 = a1[1];
    unint64_t v14 = *a2;
    int v15 = **a2;
    if (v15) {
      goto LABEL_11;
    }
  }
  else
  {
    sub_215731D94(v9, (uint64_t)"nullopt", 7);
    uint64_t v13 = a1[1];
    unint64_t v14 = *a2;
    int v15 = **a2;
    if (v15)
    {
LABEL_11:
      sub_215731D94(a2[1], (uint64_t)", ", 2);
      unint64_t v14 = *a2;
      int v15 = **a2;
    }
  }
  long long v17 = a2[1];
  unsigned __int8 v16 = a2[2];
  int *v14 = v15 + 1;
  sub_215731D94(v17, *(void *)&v16[4 * v15], *(void *)&v16[4 * v15 + 2]);
  sub_215731D94(v17, (uint64_t)" = ", 3);
  uint64_t v18 = a2[1];
  if (*(unsigned char *)(v13 + 48))
  {
    int v19 = *(char *)(v13 + 23);
    if (v19 >= 0) {
      uint64_t v20 = v13;
    }
    else {
      uint64_t v20 = *(void *)v13;
    }
    if (v19 >= 0) {
      uint64_t v21 = *(unsigned __int8 *)(v13 + 23);
    }
    else {
      uint64_t v21 = *(void *)(v13 + 8);
    }
    sub_215731D94(v18, v20, v21);
    uint64_t v22 = a1[2];
    long long v23 = *a2;
    int v24 = **a2;
    if (v24) {
      goto LABEL_20;
    }
  }
  else
  {
    sub_215731D94(v18, (uint64_t)"nullopt", 7);
    uint64_t v22 = a1[2];
    long long v23 = *a2;
    int v24 = **a2;
    if (v24)
    {
LABEL_20:
      sub_215731D94(a2[1], (uint64_t)", ", 2);
      long long v23 = *a2;
      int v24 = **a2;
    }
  }
  uint64_t v26 = a2[1];
  uint64_t v25 = a2[2];
  *long long v23 = v24 + 1;
  sub_215731D94(v26, *(void *)&v25[4 * v24], *(void *)&v25[4 * v24 + 2]);
  sub_215731D94(v26, (uint64_t)" = ", 3);
  uint64_t v27 = a2[1];
  if (*(unsigned char *)(v22 + 24))
  {
    int v28 = *(char *)(v22 + 23);
    if (v28 >= 0) {
      uint64_t v29 = v22;
    }
    else {
      uint64_t v29 = *(void *)v22;
    }
    if (v28 >= 0) {
      uint64_t v30 = *(unsigned __int8 *)(v22 + 23);
    }
    else {
      uint64_t v30 = *(void *)(v22 + 8);
    }
    sub_215731D94(v27, v29, v30);
    uint64_t v31 = a1[3];
    std::string v32 = *a2;
    int v33 = **a2;
    if (v33) {
      goto LABEL_29;
    }
  }
  else
  {
    sub_215731D94(v27, (uint64_t)"nullopt", 7);
    uint64_t v31 = a1[3];
    std::string v32 = *a2;
    int v33 = **a2;
    if (v33)
    {
LABEL_29:
      sub_215731D94(a2[1], (uint64_t)", ", 2);
      std::string v32 = *a2;
      int v33 = **a2;
    }
  }
  uint64_t v35 = a2[1];
  uint64_t v34 = a2[2];
  int *v32 = v33 + 1;
  sub_215731D94(v35, *(void *)&v34[4 * v33], *(void *)&v34[4 * v33 + 2]);
  sub_215731D94(v35, (uint64_t)" = ", 3);
  uint64_t v36 = a2[1];
  if (*(unsigned char *)(v31 + 16)) {
    sub_215D07BE8((uint64_t)v36, v31);
  }
  sub_215731D94(v36, (uint64_t)"nullopt", 7);
  uint64_t v47 = a1[4];
  long long v37 = *a2;
  int v38 = **a2;
  if (v38)
  {
    sub_215731D94(a2[1], (uint64_t)", ", 2);
    long long v37 = *a2;
    int v38 = **a2;
  }
  uint64_t v40 = a2[1];
  uint64_t v39 = a2[2];
  *long long v37 = v38 + 1;
  sub_215731D94(v40, *(void *)&v39[4 * v38], *(void *)&v39[4 * v38 + 2]);
  sub_215731D94(v40, (uint64_t)" = ", 3);
  long long v41 = a2[1];
  if (*(unsigned char *)(v47 + 16)) {
    sub_215D07BE8((uint64_t)v41, v47);
  }
  sub_215731D94(v41, (uint64_t)"nullopt", 7);
  uint64_t v48 = a1[5];
  long long v42 = *a2;
  int v43 = **a2;
  if (v43)
  {
    sub_215731D94(a2[1], (uint64_t)", ", 2);
    long long v42 = *a2;
    int v43 = **a2;
  }
  uint64_t v45 = a2[1];
  uint64_t v44 = a2[2];
  *long long v42 = v43 + 1;
  sub_215731D94(v45, *(void *)&v44[4 * v43], *(void *)&v44[4 * v43 + 2]);
  sub_215731D94(v45, (uint64_t)" = ", 3);
  int v49 = a2[1];
  return sub_215830304((uint64_t)&v50, (void **)&v49, v48);
}

void *sub_215830304(uint64_t a1, void **a2, uint64_t a3)
{
  if (*(unsigned char *)(a3 + 24))
  {
    uint64_t v5 = *a2;
    if ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) > 95)
    {
      sub_215731D94(v5, (uint64_t)"{", 1);
      uint64_t v9 = *(void *)a3;
      int v10 = *a2;
      if (*(unsigned char *)(*(void *)a3 + 24))
      {
        int v11 = *(char *)(v9 + 23);
        if (v11 >= 0) {
          uint64_t v12 = *(void *)a3;
        }
        else {
          uint64_t v12 = *(void *)v9;
        }
        if (v11 >= 0) {
          uint64_t v13 = *(unsigned __int8 *)(v9 + 23);
        }
        else {
          uint64_t v13 = *(void *)(v9 + 8);
        }
        sub_215731D94(*a2, v12, v13);
      }
      if (*(unsigned char *)(v9 + 80))
      {
        unint64_t v14 = sub_215731D94(v10, (uint64_t)"#", 1);
        int v15 = *(char *)(v9 + 55);
        if (v15 >= 0) {
          uint64_t v16 = v9 + 32;
        }
        else {
          uint64_t v16 = *(void *)(v9 + 32);
        }
        if (v15 >= 0) {
          uint64_t v17 = *(unsigned __int8 *)(v9 + 55);
        }
        else {
          uint64_t v17 = *(void *)(v9 + 40);
        }
        sub_215731D94(v14, v16, v17);
      }
      uint64_t v18 = *(void *)(a3 + 8);
      for (uint64_t i = v9 + 96; i != v18; i += 96)
      {
        sub_215731D94(*a2, (uint64_t)",", 1);
        uint64_t v20 = *a2;
        if (*(unsigned char *)(i + 24))
        {
          int v21 = *(char *)(i + 23);
          if (v21 >= 0) {
            uint64_t v22 = i;
          }
          else {
            uint64_t v22 = *(void *)i;
          }
          if (v21 >= 0) {
            uint64_t v23 = *(unsigned __int8 *)(i + 23);
          }
          else {
            uint64_t v23 = *(void *)(i + 8);
          }
          sub_215731D94(*a2, v22, v23);
        }
        if (*(unsigned char *)(i + 80))
        {
          int v24 = sub_215731D94(v20, (uint64_t)"#", 1);
          int v25 = *(char *)(i + 55);
          if (v25 >= 0) {
            uint64_t v26 = i + 32;
          }
          else {
            uint64_t v26 = *(void *)(i + 32);
          }
          if (v25 >= 0) {
            uint64_t v27 = *(unsigned __int8 *)(i + 55);
          }
          else {
            uint64_t v27 = *(void *)(i + 40);
          }
          sub_215731D94(v24, v26, v27);
        }
      }
      uint64_t v5 = *a2;
      int v6 = "}";
      uint64_t v7 = 1;
    }
    else
    {
      int v6 = "{}";
      uint64_t v7 = 2;
    }
  }
  else
  {
    uint64_t v5 = *a2;
    int v6 = "nullopt";
    uint64_t v7 = 7;
  }
  return sub_215731D94(v5, (uint64_t)v6, v7);
}

void sub_215830504(uint64_t *a1, int **a2)
{
  sub_215830620(a2, *a1);
  sub_215830700(a2, a1[1]);
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  int v6 = **a2;
  if (v6)
  {
    sub_215731D94(a2[1], (uint64_t)", ", 2);
    uint64_t v5 = *a2;
    int v6 = **a2;
  }
  int v8 = a2[1];
  uint64_t v7 = a2[2];
  *uint64_t v5 = v6 + 1;
  sub_215731D94(v8, *(void *)&v7[4 * v6], *(void *)&v7[4 * v6 + 2]);
  sub_215731D94(v8, (uint64_t)" = ", 3);
  uint64_t v9 = a2[1];
  sub_215AF01DC(v4);
  if ((v13 & 0x80u) == 0) {
    int v10 = __p;
  }
  else {
    int v10 = (void **)__p[0];
  }
  if ((v13 & 0x80u) == 0) {
    uint64_t v11 = v13;
  }
  else {
    uint64_t v11 = (uint64_t)__p[1];
  }
  sub_215731D94(v9, (uint64_t)v10, v11);
  if ((char)v13 < 0) {
    operator delete(__p[0]);
  }
}

void sub_215830604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_215830620(int **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  int v5 = **a1;
  if (v5)
  {
    sub_215731D94(a1[1], (uint64_t)", ", 2);
    uint64_t v4 = *a1;
    int v5 = **a1;
  }
  uint64_t v7 = a1[1];
  int v6 = a1[2];
  *uint64_t v4 = v5 + 1;
  sub_215731D94(v7, *(void *)&v6[4 * v5], *(void *)&v6[4 * v5 + 2]);
  sub_215731D94(v7, (uint64_t)" = ", 3);
  uint64_t v9 = a1[1];
  v10[0] = a2;
  v10[1] = a2 + 24;
  sub_215731D94(v9, (uint64_t)"{", 1);
  v12[0] = 1;
  unsigned __int8 v13 = &v9;
  unint64_t v14 = &v11;
  sub_215830818(v10, (uint64_t)v12);
  return sub_215731D94(v9, (uint64_t)"}", 1);
}

void *sub_215830700(int **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  int v5 = **a1;
  if (v5)
  {
    sub_215731D94(a1[1], (uint64_t)", ", 2);
    uint64_t v4 = *a1;
    int v5 = **a1;
  }
  uint64_t v7 = a1[1];
  int v6 = a1[2];
  *uint64_t v4 = v5 + 1;
  sub_215731D94(v7, *(void *)&v6[4 * v5], *(void *)&v6[4 * v5 + 2]);
  sub_215731D94(v7, (uint64_t)" = ", 3);
  int v8 = a1[1];
  v13[2] = xmmword_26425A5A0;
  void v13[3] = *(_OWORD *)&off_26425A5B0;
  v13[4] = xmmword_26425A5C0;
  v13[5] = *(_OWORD *)&off_26425A5D0;
  v13[0] = xmmword_26425A580;
  v13[1] = *(_OWORD *)&off_26425A590;
  int v12 = 0;
  sub_215731D94(v8, (uint64_t)"{", 1);
  v11[0] = a2;
  v11[1] = a2 + 32;
  v11[2] = a2 + 96;
  v11[3] = a2 + 128;
  v11[4] = a2 + 152;
  v11[5] = a2 + 176;
  v10[0] = &v12;
  v10[1] = v8;
  uint64_t v10[2] = (int *)v13;
  sub_21582FF3C(v11, v10);
  return sub_215731D94(v8, (uint64_t)"}", 1);
}

void sub_215830818(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  if (!*(unsigned char *)a2) {
    sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
  }
  *(unsigned char *)a2 = 0;
  int v5 = *(char *)(v4 + 23);
  if (v5 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = *(void *)v4;
  }
  if (v5 >= 0) {
    uint64_t v7 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    uint64_t v7 = *(void *)(v4 + 8);
  }
  sub_215731D94(**(void ***)(a2 + 8), v6, v7);
  int v8 = (unsigned int *)a1[1];
  if (!*(unsigned char *)a2) {
    sub_215731D94(**(void ***)(a2 + 8), (uint64_t)",", 1);
  }
  *(unsigned char *)a2 = 0;
  uint64_t v9 = *(void ***)(a2 + 8);
  std::to_string(&v12, *v8);
  if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v10 = &v12;
  }
  else {
    int v10 = (std::string *)v12.__r_.__value_.__r.__words[0];
  }
  if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v12.__r_.__value_.__l.__size_;
  }
  sub_215731D94(*v9, (uint64_t)v10, size);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
}

void sub_215830918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

size_t sub_215830934(void **a1)
{
  uint64_t v1 = (_DWORD *)**a1;
  uint64_t v2 = (const char *)(*a1)[1];
  uint64_t v3 = v1[6];
  if (v3 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65F748[v3])(&v9, v1);
  }
  v1[6] = -1;
  size_t result = strlen(v2);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    *((void *)v1 + 1) = v5;
    *((void *)v1 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v1 = v6;
  }
  else
  {
    *((unsigned char *)v1 + 23) = result;
    uint64_t v6 = v1;
    if (!result) {
      goto LABEL_11;
    }
  }
  size_t result = (size_t)memmove(v6, v2, v5);
LABEL_11:
  *((unsigned char *)v6 + v5) = 0;
  v1[6] = 1;
  return result;
}

void sub_215830A24(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  uint64_t v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  unint64_t v14 = v4;
  *(void *)int v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  uint64_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  char v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    uint64_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65F748[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_215830BE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215830C24(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  uint64_t v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      v5[2] = v15 | 0x8000000000000000;
      *char v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  uint64_t v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    uint64_t v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)uint64_t v17 = v20;
  }
  else
  {
    v17[23] = v18;
    uint64_t v20 = v17;
    if (!v18)
    {
      int v21 = &v13[24 * v12];
      *uint64_t v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      uint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v23 = (void **)*a2;
      uint64_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  int v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  uint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_215830EB8(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_215830ED0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_215830ED8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 416;
  size_t v6 = sub_215990AC4(0);
  if (*(unsigned char *)(a2 + 24)) {
    size_t v7 = (uint64_t *)a2;
  }
  else {
    size_t v7 = v6;
  }
  sub_2157BB1A4(&v18, v7);
  sub_215991088(v5, (uint64_t)&v18, (uint64_t)&v20);
  if (v31)
  {
    size_t v8 = (char *)operator new(0x38uLL);
    *((void *)v8 + 1) = 0;
    *((void *)v8 + 2) = 0;
    *(void *)size_t v8 = &unk_26C659760;
    unint64_t v9 = v21;
    *((void *)v8 + 3) = v20;
    *((void *)v8 + 4) = v9;
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *(_OWORD *)(v8 + 40) = *(_OWORD *)v22;
    *(void *)a3 = v8 + 24;
    *(void *)(a3 + 8) = v8;
    *(unsigned char *)(a3 + 120) = 1;
    goto LABEL_8;
  }
  if (v20 <= 0xDu)
  {
    if ((v20 - 1) > 0xCu) {
      unsigned int v11 = 0;
    }
    else {
      unsigned int v11 = dword_215EAA948[(char)(v20 - 1)];
    }
  }
  else
  {
    unsigned int v11 = 1;
  }
  sub_215741BFC(__dst, (long long *)v22);
  sub_21573FCF8(v11, (long long *)__dst, (uint64_t)&v41);
  *(_OWORD *)a3 = v41;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v51)
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v40) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v16 = v44;
  if (v44)
  {
    *(_OWORD *)(a3 + 16) = v42;
    *(void *)(a3 + 32) = v43;
    uint64_t v43 = 0;
    long long v42 = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v50)
  {
    uint64_t v17 = v47;
    *(void *)(a3 + 64) = v46;
    *(_OWORD *)(a3 + 48) = v45;
    long long v45 = 0uLL;
    *(void *)(a3 + 72) = v17;
    *(_OWORD *)(a3 + 80) = v48;
    *(void *)(a3 + 96) = v49;
    uint64_t v46 = 0;
    long long v48 = 0uLL;
    uint64_t v49 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 120) = 0;
  if (v16 && SHIBYTE(v43) < 0) {
    operator delete((void *)v42);
  }
  if (v40)
  {
LABEL_47:
    if (v39)
    {
      if (v38 < 0) {
        operator delete(v37);
      }
      if (v36 < 0) {
        operator delete(v35);
      }
    }
    if (v34 && v33 < 0) {
      operator delete(__dst[0]);
    }
  }
LABEL_8:
  if (v31)
  {
    unint64_t v10 = v21;
    if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  else if (v30)
  {
    if (v29)
    {
      if (v28 < 0) {
        operator delete(__p);
      }
      if (v26 < 0) {
        operator delete(v25);
      }
    }
    if (v24 && v23 < 0) {
      operator delete(v22[0]);
    }
  }
  unint64_t v12 = (char *)v18;
  if (v18)
  {
    char v13 = v19;
    uint64_t v14 = v18;
    if (v19 != v18)
    {
      do
      {
        uint64_t v15 = (std::__shared_weak_count *)*((void *)v13 - 1);
        if (v15)
        {
          if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
            std::__shared_weak_count::__release_weak(v15);
          }
        }
        v13 -= 16;
      }
      while (v13 != v12);
      uint64_t v14 = v18;
    }
    size_t v19 = v12;
    operator delete(v14);
  }
}

void sub_215831240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_21583126C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215831280((void **)va);
  _Unwind_Resume(a1);
}

void **sub_215831280(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_215831334(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v50 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  size_t v6 = sub_215990AC4(0);
  if (*(unsigned char *)(a2 + 24)) {
    size_t v7 = (uint64_t *)a2;
  }
  else {
    size_t v7 = v6;
  }
  sub_2157BB1A4(&v17, v7);
  sub_2159917B8(v5, (uint64_t)&v17, (uint64_t)&v19);
  if (v29)
  {
    long long __dst = &unk_26C678D20;
    long long v31 = *(_OWORD *)v20;
    v20[0] = 0;
    v20[1] = 0;
    sub_21582DF1C((uint64_t)&v39, (uint64_t)&__dst);
    sub_2157C3D04(a3, 0, &v39);
    *(unsigned char *)(a3 + 528) = 1;
    sub_215748B40((uint64_t)&v39);
    size_t v8 = (std::__shared_weak_count *)*((void *)&v31 + 1);
    if (*((void *)&v31 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v31 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
    goto LABEL_32;
  }
  if (v19 <= 0xDu)
  {
    if ((v19 - 1) > 0xCu) {
      unsigned int v9 = 0;
    }
    else {
      unsigned int v9 = dword_215EAA948[(char)(v19 - 1)];
    }
  }
  else
  {
    unsigned int v9 = 1;
  }
  sub_215741BFC(&__dst, (long long *)&v20[1]);
  sub_21573FCF8(v9, (long long *)&__dst, (uint64_t)&v39);
  *(_OWORD *)a3 = v39;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (!v49)
  {
    *(unsigned char *)(a3 + 528) = 0;
    if (!v38) {
      goto LABEL_32;
    }
    goto LABEL_24;
  }
  *(unsigned char *)(a3 + 40) = 0;
  int v10 = v42;
  if (v42)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(void *)(a3 + 32) = v41;
    uint64_t v41 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a3 + 40) = 1;
  }
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 104) = 0;
  if (v48)
  {
    uint64_t v11 = v45;
    *(void *)(a3 + 64) = v44;
    *(_OWORD *)(a3 + 48) = v43;
    long long v43 = 0uLL;
    *(void *)(a3 + 72) = v11;
    *(_OWORD *)(a3 + 80) = v46;
    *(void *)(a3 + 96) = v47;
    uint64_t v44 = 0;
    long long v46 = 0uLL;
    uint64_t v47 = 0;
    *(unsigned char *)(a3 + 104) = 1;
  }
  *(unsigned char *)(a3 + 112) = 1;
  *(unsigned char *)(a3 + 528) = 0;
  if (v10 && SHIBYTE(v41) < 0) {
    operator delete((void *)__p);
  }
  if (v38)
  {
LABEL_24:
    if (v37)
    {
      if (v36 < 0) {
        operator delete(v35);
      }
      if (v34 < 0) {
        operator delete(v33);
      }
    }
    if (v32 && SHIBYTE(v31) < 0) {
      operator delete(__dst);
    }
  }
LABEL_32:
  if (v29)
  {
    unint64_t v12 = (std::__shared_weak_count *)v20[1];
    if (v20[1] && !atomic_fetch_add((atomic_ullong *volatile)v20[1] + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  else if (v28)
  {
    if (v27)
    {
      if (v26 < 0) {
        operator delete(v25);
      }
      if (v24 < 0) {
        operator delete(v23);
      }
    }
    if (v22 && v21 < 0) {
      operator delete(v20[1]);
    }
  }
  char v13 = (char *)v17;
  if (v17)
  {
    uint64_t v14 = v18;
    uint64_t v15 = v17;
    if (v18 != v17)
    {
      do
      {
        int v16 = (std::__shared_weak_count *)*((void *)v14 - 1);
        if (v16)
        {
          if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
            std::__shared_weak_count::__release_weak(v16);
          }
        }
        v14 -= 16;
      }
      while (v14 != v13);
      uint64_t v15 = v17;
    }
    size_t v18 = v13;
    operator delete(v15);
  }
}

void sub_21583170C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_215831758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

uint64_t sub_215831770(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 120))
  {
    if (!*(unsigned char *)(a1 + 112)) {
      return a1;
    }
    if (!*(unsigned char *)(a1 + 104)) {
      goto LABEL_9;
    }
    if (*(char *)(a1 + 103) < 0)
    {
      operator delete(*(void **)(a1 + 80));
      if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      {
LABEL_9:
        if (!*(unsigned char *)(a1 + 40)) {
          return a1;
        }
        goto LABEL_10;
      }
    }
    else if ((*(char *)(a1 + 71) & 0x80000000) == 0)
    {
      goto LABEL_9;
    }
    operator delete(*(void **)(a1 + 48));
    if (!*(unsigned char *)(a1 + 40)) {
      return a1;
    }
LABEL_10:
    if (*(char *)(a1 + 39) < 0)
    {
      operator delete(*(void **)(a1 + 16));
      return a1;
    }
    return a1;
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void *sub_215831860(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  *a1 = v4;
  a1[1] = v5;
  size_t v6 = operator new(0x28uLL);
  size_t v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  void *v6 = &unk_26C65F918;
  size_t v8 = v6 + 3;
  uint64_t v9 = *a2;
  int v10 = (std::__shared_weak_count *)a2[1];
  if (v10)
  {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    v6[3] = v9;
    v6[4] = v10;
    if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  else
  {
    v6[3] = v9;
    v6[4] = 0;
  }
  a1[2] = v8;
  a1[3] = v7;
  return a1;
}

void sub_215831944(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    if (!atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_215831994(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v4 = (void *)a1[3];
  if (v4)
  {
    if (v4 == a1)
    {
      char v21 = &v20;
      (*(void (**)(void *, long long *))(*a1 + 24))(a1, &v20);
    }
    else
    {
      char v21 = (long long *)(*(uint64_t (**)(void))(*v4 + 16))(a1[3]);
    }
  }
  else
  {
    char v21 = 0;
  }
  int v19 = 0;
  uint64_t v5 = operator new(0x28uLL);
  size_t v6 = v5;
  *uint64_t v5 = &unk_26C65F7E8;
  size_t v7 = v5 + 1;
  if (v21)
  {
    if (v21 == &v20)
    {
      v5[4] = v7;
      (*(void (**)(long long *))(v20 + 24))(&v20);
    }
    else
    {
      v5[4] = v21;
      char v21 = 0;
    }
  }
  else
  {
    v5[4] = 0;
  }
  int v19 = v6;
  if (v21 == &v20)
  {
    (*(void (**)(long long *, void *))(v20 + 32))(&v20, v7);
    if (*(unsigned char *)(a3 + 32)) {
      goto LABEL_15;
    }
  }
  else
  {
    if (v21) {
      (*(void (**)(void))(*(void *)v21 + 40))();
    }
    if (*(unsigned char *)(a3 + 32))
    {
LABEL_15:
      uint64_t v8 = *(void *)(a3 + 24);
      if (v8)
      {
        if (v8 != a3)
        {
          uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v8 + 16))(v8, v7);
          char v24 = v9;
          if (!v9) {
            goto LABEL_22;
          }
LABEL_24:
          if (v9 == v23)
          {
            char v21 = &v20;
            (*(void (**)(void *, long long *))(v23[0] + 24))(v23, &v20);
          }
          else
          {
            char v21 = (long long *)v9;
            char v24 = 0;
          }
          goto LABEL_27;
        }
        char v24 = v23;
        (*(void (**)(uint64_t, void *))(*(void *)a3 + 24))(a3, v23);
        uint64_t v9 = v24;
        if (v24) {
          goto LABEL_24;
        }
      }
      else
      {
        char v24 = 0;
      }
LABEL_22:
      char v21 = 0;
LABEL_27:
      int v16 = 0;
      int v10 = operator new(0x28uLL);
      uint64_t v11 = (long long *)v10;
      void *v10 = &unk_26C65F868;
      unint64_t v12 = v10 + 1;
      if (v21)
      {
        if (v21 == &v20)
        {
          v10[4] = v12;
          (*(void (**)(long long *))(v20 + 24))(&v20);
        }
        else
        {
          v10[4] = v21;
          char v21 = 0;
        }
      }
      else
      {
        v10[4] = 0;
      }
      int v16 = v11;
      if (v21 == &v20)
      {
        (*(void (**)(long long *, void *))(v20 + 32))(&v20, v12);
        char v17 = 1;
        char v13 = v24;
        if (v24 != v23)
        {
LABEL_36:
          if (v13) {
            (*(void (**)(void *, void *))(*v13 + 40))(v13, v12);
          }
LABEL_40:
          uint64_t v14 = operator new(0x30uLL);
          v14[1] = 0;
          v14[2] = 0;
          void *v14 = &unk_26C65F968;
          if (v19)
          {
            if (v19 == v18)
            {
              char v24 = v23;
              (*(void (**)(void *, void *))(v18[0] + 24))(v18, v23);
            }
            else
            {
              char v24 = v19;
              int v19 = 0;
            }
          }
          else
          {
            char v24 = 0;
          }
          LOBYTE(v20) = 0;
          char v22 = 0;
          if (v17)
          {
            if (v16)
            {
              if (v16 == (long long *)v15)
              {
                char v21 = &v20;
                (*(void (**)(void *, long long *))(v15[0] + 24))(v15, &v20);
              }
              else
              {
                char v21 = v16;
                int v16 = 0;
              }
            }
            else
            {
              char v21 = 0;
            }
            char v22 = 1;
          }
          sub_21597FBB8(v14 + 3, v23, (uint64_t)&v20);
        }
      }
      else
      {
        if (v21) {
          (*(void (**)(void))(*(void *)v21 + 40))();
        }
        char v17 = 1;
        char v13 = v24;
        if (v24 != v23) {
          goto LABEL_36;
        }
      }
      (*(void (**)(void *, void *))(v23[0] + 32))(v23, v12);
      goto LABEL_40;
    }
  }
  LOBYTE(v15[0]) = 0;
  char v17 = 0;
  goto LABEL_40;
}

void sub_215832174(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158321A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_2158322B8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_2158321B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t *a26)
{
  if (a26 == &a23)
  {
    (*(void (**)(uint64_t *))(a23 + 32))(&a23);
  }
  else if (a26)
  {
    (*(void (**)(void))(*a26 + 40))();
  }
  sub_2157DB4E8((void *)(v26 - 72));
  sub_2158322B8(&a19);
  _Unwind_Resume(a1);
}

void sub_215832234(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  sub_215733368((uint64_t)va);
  sub_215733368((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_215832250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va2, a6);
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v16 = va_arg(va2, void);
  uint64_t v18 = va_arg(va2, void);
  uint64_t v19 = va_arg(va2, void);
  uint64_t v20 = va_arg(va2, void);
  sub_215754968((uint64_t)va2);
  sub_2158322B8((void *)(v7 - 72));
  std::__shared_weak_count::~__shared_weak_count(v6);
  operator delete(v9);
  sub_215754968((uint64_t)va);
  sub_2158322B8((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_215832288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_215754968((uint64_t)va);
  sub_2158322B8((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_2158322A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_215768C40((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_2158322B8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_215832348(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = *(char **)a1;
  if (a2 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 5)
  {
    if (a2 >> 59) {
      sub_215738AC0();
    }
    uint64_t v4 = *(unsigned char **)(a1 + 8);
    uint64_t v5 = 32 * a2;
    size_t v6 = (char *)operator new(32 * a2);
    uint64_t v7 = &v6[v5];
    uint64_t v8 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
    }
    else
    {
      uint64_t v9 = &v6[v4 - v2];
      do
      {
        long long v10 = *((_OWORD *)v4 - 2);
        v4 -= 32;
        *((_OWORD *)v9 - 2) = v10;
        v9 -= 32;
        *(void *)uint64_t v4 = 0;
        *((void *)v4 + 1) = 0;
        *((_OWORD *)v9 + 1) = *((_OWORD *)v4 + 1);
        *((void *)v4 + 2) = 0;
        *((void *)v4 + 3) = 0;
      }
      while (v4 != v2);
      uint64_t v2 = *(char **)a1;
      uint64_t v11 = *(char **)(a1 + 8);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v7;
      while (v11 != v2)
      {
        uint64_t v12 = (std::__shared_weak_count *)*((void *)v11 - 1);
        if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
          uint64_t v13 = (std::__shared_weak_count *)*((void *)v11 - 3);
          if (v13)
          {
LABEL_12:
            if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
              std::__shared_weak_count::__release_weak(v13);
            }
          }
        }
        else
        {
          uint64_t v13 = (std::__shared_weak_count *)*((void *)v11 - 3);
          if (v13) {
            goto LABEL_12;
          }
        }
        v11 -= 32;
      }
    }
    if (v2)
    {
      operator delete(v2);
    }
  }
}

_OWORD *sub_2158324C8(void **a1, long long *a2)
{
  uint64_t v3 = ((unsigned char *)a1[1] - (unsigned char *)*a1) >> 5;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59) {
    sub_215738AC0();
  }
  uint64_t v5 = (unsigned char *)a1[2] - (unsigned char *)*a1;
  if (v5 >> 4 > v4) {
    unint64_t v4 = v5 >> 4;
  }
  BOOL v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFE0;
  unint64_t v7 = 0x7FFFFFFFFFFFFFFLL;
  if (!v6) {
    unint64_t v7 = v4;
  }
  if (v7 >> 59) {
    sub_215738AD8();
  }
  uint64_t v9 = 32 * v7;
  long long v10 = (char *)operator new(32 * v7);
  uint64_t v11 = &v10[32 * v3];
  uint64_t v12 = &v10[v9];
  long long v13 = *a2;
  long long v14 = a2[1];
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  *(_OWORD *)uint64_t v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  *((void *)a2 + 2) = 0;
  *((void *)a2 + 3) = 0;
  uint64_t v15 = v11 + 32;
  uint64_t v16 = (char *)*a1;
  char v17 = (char *)a1[1];
  if (v17 == *a1)
  {
    *a1 = v11;
    a1[1] = v15;
    a1[2] = v12;
  }
  else
  {
    do
    {
      long long v18 = *((_OWORD *)v17 - 2);
      v17 -= 32;
      *((_OWORD *)v11 - 2) = v18;
      v11 -= 32;
      *(void *)char v17 = 0;
      *((void *)v17 + 1) = 0;
      *((_OWORD *)v11 + 1) = *((_OWORD *)v17 + 1);
      *((void *)v17 + 2) = 0;
      *((void *)v17 + 3) = 0;
    }
    while (v17 != v16);
    char v17 = (char *)*a1;
    uint64_t v19 = (char *)a1[1];
    *a1 = v11;
    a1[1] = v15;
    a1[2] = v12;
    while (v19 != v17)
    {
      uint64_t v20 = (std::__shared_weak_count *)*((void *)v19 - 1);
      if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
        std::__shared_weak_count::__release_weak(v20);
        char v21 = (std::__shared_weak_count *)*((void *)v19 - 3);
        if (v21)
        {
LABEL_15:
          if (!atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
      }
      else
      {
        char v21 = (std::__shared_weak_count *)*((void *)v19 - 3);
        if (v21) {
          goto LABEL_15;
        }
      }
      v19 -= 32;
    }
  }
  if (v17) {
    operator delete(v17);
  }
  return v15;
}

void *sub_215832678(void *a1)
{
  *a1 = &unk_26C65F7E8;
  uint64_t v2 = a1 + 1;
  uint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_215832728(void *a1)
{
  *a1 = &unk_26C65F7E8;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_2158327EC(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26C65F7E8;
  uint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_2158328B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158328C4(uint64_t result, void *a2)
{
  *a2 = &unk_26C65F7E8;
  uint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      uint64_t v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      size_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_215832994(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_2158329F8(char *__p)
{
  uint64_t v2 = __p + 8;
  uint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_215832AAC(uint64_t a1, std::__shared_weak_count_vtbl **a2)
{
  uint64_t v4 = (std::__shared_weak_count *)operator new(0x40uLL);
  v4->__shared_owners_ = 0;
  v4->__shared_weak_owners_ = 0;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C658088;
  uint64_t v5 = (uint64_t)a2[1];
  v4[1].__vftable = *a2;
  v4[1].__shared_owners_ = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  unint64_t v7 = a2[3];
  uint64_t v6 = (uint64_t)a2[4];
  v4[1].__shared_weak_owners_ = (uint64_t)&unk_26C678D20;
  v4[2].__vftable = v7;
  v4[2].__shared_owners_ = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = &v4[1].__vftable;
  uint64_t v12 = v4;
  uint64_t v13 = 0;
  long long v14 = 0;
  char v15 = 0;
  uint64_t v8 = *(void *)(a1 + 32);
  if (!v8) {
    sub_21573D7DC();
  }
  (*(void (**)(uint64_t, void **))(*(void *)v8 + 48))(v8, &v11);
  uint64_t v9 = v14;
  if (v14)
  {
    if (atomic_fetch_add(v14 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v9 + 16))(v9);
      if (atomic_fetch_add(v9 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v9 + 24))(v9);
      }
    }
  }
  long long v10 = v12;
  if (v12)
  {
    if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_215832C78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, atomic_uint *a13)
{
  if (a13)
  {
    if (atomic_fetch_add(a13 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)a13 + 16))(a13);
      if (atomic_fetch_add(a13 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)a13 + 24))(a13);
      }
    }
  }
  if (a11)
  {
    if (!atomic_fetch_add(&a11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))a11->__on_zero_shared)(a11);
      std::__shared_weak_count::__release_weak(a11);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215832D50(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger29CreateDestinationWithCallbackENSt3__18functionIFvRKNS1_10LogMessageEEEE"
                     "NS2_8optionalINS1_26CallbackDestinationOptionsEEENS9_INS3_IFvRKNS_3esn5ErrorEEEEEEENK3$_1clEvEUlRKN"
                     "S_3kit3viz11ContextDataEE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger29CreateDestinationWithCallbackENSt3__18functionIFvRKNS1_10Log"
                                "MessageEEEENS2_8optionalINS1_26CallbackDestinationOptionsEEENS9_INS3_IFvRKNS_3esn5ErrorE"
                                "EEEEEENK3$_1clEvEUlRKNS_3kit3viz11ContextDataEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger29CreateDestinationWithCallbackENSt3__18functionIFvRKNS1_10LogMessageEEEENS2_8optionalINS1_26CallbackDestinationOptionsEEENS9_INS3_IFvRKNS_3esn5ErrorEEEEEEENK3$_1clEvEUlRKNS_3kit3viz11ContextDataEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger29CreateDestinationWithCallbackENSt3__18functionIFvRKNS1_10LogMessageEEEENS2_8optionalINS1_26CallbackDestinationOptionsEEENS9_INS3_IFvRKNS_3esn5ErrorEEEEEEENK3$_1clEvEUlRKNS_3kit3viz11ContextDataEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215832DC0()
{
  return &unk_26C65F848;
}

void *sub_215832DCC(void *a1)
{
  *a1 = &unk_26C65F868;
  uint64_t v2 = a1 + 1;
  unint64_t v3 = (void *)a1[4];
  if (v3 == v2)
  {
    (*(void (**)(void *))(*v2 + 32))(v2);
    return a1;
  }
  else
  {
    if (v3) {
      (*(void (**)(void *))(*v3 + 40))(v3);
    }
    return a1;
  }
}

void sub_215832E7C(void *a1)
{
  *a1 = &unk_26C65F868;
  uint64_t v1 = a1 + 1;
  uint64_t v2 = (void *)a1[4];
  if (v2 == v1)
  {
    (*(void (**)(void *))(*v1 + 32))(v1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void *sub_215832F40(uint64_t a1)
{
  uint64_t v2 = operator new(0x28uLL);
  *uint64_t v2 = &unk_26C65F868;
  unint64_t v3 = v2 + 1;
  uint64_t v4 = *(void *)(a1 + 32);
  if (!v4) {
    goto LABEL_4;
  }
  if (v4 != a1 + 8)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 16))(v4, v3);
LABEL_4:
    v2[4] = v4;
    return v2;
  }
  v2[4] = v3;
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return v2;
}

void sub_215833004(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215833018(uint64_t result, void *a2)
{
  *a2 = &unk_26C65F868;
  unint64_t v3 = a2 + 1;
  uint64_t v4 = *(void *)(result + 32);
  if (v4)
  {
    if (v4 == result + 8)
    {
      a2[4] = v3;
      uint64_t v5 = *(uint64_t (**)(void))(**(void **)(result + 32) + 24);
      return v5();
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void, void *))(*(void *)v4 + 16))(*(void *)(result + 32), v3);
      a2[4] = result;
    }
  }
  else
  {
    a2[4] = 0;
  }
  return result;
}

uint64_t sub_2158330E8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t result = *(void *)(a1 + 32);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_21583314C(char *__p)
{
  uint64_t v2 = __p + 8;
  unint64_t v3 = (char *)*((void *)__p + 4);
  if (v3 == v2)
  {
    (*(void (**)(char *))(*(void *)v2 + 32))(v2);
    uint64_t v4 = __p;
  }
  else
  {
    if (v3) {
      (*(void (**)(char *))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

void sub_215833200()
{
  int v1 = 0;
  sub_21583358C(__dst, "callback threw: ");
  sub_2157D24E4();
}

void sub_215833414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_215833510(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN4cv3d2vl13visual_logger29CreateDestinationWithCallbackENSt3__18functionIFvRKNS1_10LogMessageEEEE"
                     "NS2_8optionalINS1_26CallbackDestinationOptionsEEENS9_INS3_IFvRKNS_3esn5ErrorEEEEEEENK3$_0clEvEUlSF_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN4cv3d2vl13visual_logger29CreateDestinationWithCallbackENSt3__18functionIFvRKNS1_10Log"
                                "MessageEEEENS2_8optionalINS1_26CallbackDestinationOptionsEEENS9_INS3_IFvRKNS_3esn5ErrorE"
                                "EEEEEENK3$_0clEvEUlSF_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN4cv3d2vl13visual_logger29CreateDestinationWithCallbackENSt3__18functionIFvRKNS1_10LogMessageEEEENS2_8optionalINS1_26CallbackDestinationOptionsEEENS9_INS3_IFvRKNS_3esn5ErrorEEEEEEENK3$_0clEvEUlSF_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN4cv3d2vl13visual_logger29CreateDestinationWithCallbackENSt3__18functionIFvRKNS1_10LogMessageEEEENS2_8optionalINS1_26CallbackDestinationOptionsEEENS9_INS3_IFvRKNS_3esn5ErrorEEEEEEENK3$_0clEvEUlSF_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

void *sub_215833580()
{
  return &unk_26C65F8F8;
}

_DWORD *sub_21583358C(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65F8C8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    unint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    unint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_215833680(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65F918;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_2158336A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65F918;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

void sub_2158336F4(uint64_t a1)
{
  int v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
}

void sub_215833774(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65F968;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_215833794(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_26C65F968;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x2166C4D20);
}

uint64_t sub_2158337E8(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_215833810@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  v7[0] = a2;
  v7[1] = 1;
  char v8 = a3;
  uint64_t result = sub_215CE91A0(*a1, (uint64_t)v7);
  if (*(char *)(result + 23) >= 0) {
    uint64_t v6 = result;
  }
  else {
    uint64_t v6 = *(void *)result;
  }
  *(void *)a4 = v6;
  *(unsigned char *)(a4 + 120) = 1;
  return result;
}

void sub_215833C10(void *a1)
{
  uint64_t v1 = sub_215CE9B60(a1);
  sub_21575FC70((uint64_t)v2, v1);
}

void sub_215834000(const char *a1)
{
  size_t v2 = strlen(a1);
  if (v2 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v3 = v2;
  if (v2 >= 0x17)
  {
    uint64_t v5 = (v2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v2 | 7) != 0x17) {
      uint64_t v5 = v2 | 7;
    }
    uint64_t v6 = v5 + 1;
    uint64_t v4 = operator new(v5 + 1);
    __dst[1] = v3;
    unint64_t v8 = v6 | 0x8000000000000000;
    __dst[0] = v4;
  }
  else
  {
    HIBYTE(v8) = v2;
    uint64_t v4 = __dst;
    if (!v2)
    {
LABEL_9:
      *((unsigned char *)v4 + v3) = 0;
      sub_215CE9740();
    }
  }
  memcpy(v4, a1, v3);
  goto LABEL_9;
}

void sub_215834104(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, long long __dst, int a14, __int16 a15, char a16, char a17, char a18, long long a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,long long a27,uint64_t a28,uint64_t a29,long long a30,uint64_t a31,char a32,int a33,__int16 a34,char a35,char a36)
{
}

void sub_215834438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a22)
  {
    if (a21 < 0) {
      operator delete(__p);
    }
  }
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_2158344A8(uint64_t a1)
{
  sub_215CE9884((uint64_t)v1, a1);
}

void sub_215834898(uint64_t a1, long long *a2)
{
  uint64_t v36 = *MEMORY[0x263EF8340];
  if (!*((unsigned char *)a2 + 384))
  {
    void v19[3] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v6 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(v19);
      LODWORD(v16) = v19[0].denom;
      LODWORD(v15) = v19[0].numer;
      *(double *)&qword_267890880 = (double)v15 / (double)v16;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info info = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v6);
    uint64_t v21 = 2;
    LOBYTE(v22) = 0;
    char v24 = 0;
    LOBYTE(v25) = 0;
    char v27 = 0;
    LOBYTE(v28) = 0;
    char v29 = 0;
    LOBYTE(v30) = 0;
    char v34 = 0;
    v35[0] = 0;
    v35[24] = 0;
    sub_2158354A4();
  }
  if (*((unsigned char *)a2 + 168))
  {
    mach_timebase_info v3 = (mach_timebase_info)*((void *)a2 + 19);
    uint64_t v4 = *((void *)a2 + 20);
    if (*((unsigned char *)a2 + 24)) {
      goto LABEL_4;
    }
  }
  else
  {
    v19[0] = (mach_timebase_info)&unk_26C6835D0;
    uint64_t v7 = mach_continuous_time();
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267890888, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_267890888))
    {
      mach_timebase_info(&info);
      LODWORD(v17) = info.numer;
      LODWORD(v18) = info.denom;
      *(double *)&qword_267890880 = (double)v17 / (double)v18;
      __cxa_guard_release(&qword_267890888);
    }
    mach_timebase_info v3 = (mach_timebase_info)llround(*(double *)&qword_267890880 * (double)v7);
    LOBYTE(v4) = 2;
    if (*((unsigned char *)a2 + 24))
    {
LABEL_4:
      sub_21582E5A0((const char *)a2, 1000000000);
      int v5 = *((unsigned __int8 *)a2 + 24);
      mach_timebase_info info = v3;
      LOBYTE(v21) = v4;
      LOBYTE(v22) = 0;
      char v24 = 0;
      if (v5)
      {
        if (*((char *)a2 + 23) < 0)
        {
          sub_215738B0C(&v22, *(void **)a2, *((void *)a2 + 1));
        }
        else
        {
          long long v22 = *a2;
          uint64_t v23 = *((void *)a2 + 2);
        }
        char v24 = 1;
        LOBYTE(v25) = 0;
        char v27 = 0;
        if (*((unsigned char *)a2 + 120))
        {
LABEL_23:
          if (*((char *)a2 + 119) < 0)
          {
            sub_215738B0C(&v25, *((void **)a2 + 12), *((void *)a2 + 13));
          }
          else
          {
            long long v25 = a2[6];
            uint64_t v26 = *((void *)a2 + 14);
          }
          char v27 = 1;
          LOBYTE(v28) = 0;
          char v29 = 0;
          if (!*((unsigned char *)a2 + 144))
          {
LABEL_15:
            LOBYTE(v30) = 0;
            char v34 = 0;
            if (*((unsigned char *)a2 + 80))
            {
              if (*((char *)a2 + 55) < 0)
              {
                sub_215738B0C(&v30, *((void **)a2 + 4), *((void *)a2 + 5));
              }
              else
              {
                long long v30 = a2[2];
                uint64_t v31 = *((void *)a2 + 6);
              }
              _X0 = 0;
              _X1 = 0;
              __asm { CASPAL          X0, X1, X0, X1, [X8] }
              uint64_t v32 = _X0;
              uint64_t v33 = 0;
              char v34 = 1;
            }
            sub_215746DAC((uint64_t)v35, (uint64_t)(a2 + 11));
            sub_2158354A4();
          }
LABEL_14:
          long long v28 = a2[8];
          char v29 = 1;
          goto LABEL_15;
        }
LABEL_13:
        LOBYTE(v28) = 0;
        char v29 = 0;
        if (!*((unsigned char *)a2 + 144)) {
          goto LABEL_15;
        }
        goto LABEL_14;
      }
LABEL_12:
      LOBYTE(v25) = 0;
      char v27 = 0;
      if (*((unsigned char *)a2 + 120)) {
        goto LABEL_23;
      }
      goto LABEL_13;
    }
  }
  mach_timebase_info info = v3;
  LOBYTE(v21) = v4;
  LOBYTE(v22) = 0;
  char v24 = 0;
  goto LABEL_12;
}

void sub_215834CE0(_Unwind_Exception *a1)
{
}

void sub_215834CF8(_Unwind_Exception *a1)
{
}

void sub_215834D10(_Unwind_Exception *a1)
{
  if (LOBYTE(STACK[0x258]))
  {
    if (SLOBYTE(STACK[0x257]) < 0)
    {
      operator delete((void *)STACK[0x240]);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

void sub_215834DF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(const void **)(a1 + 424);
  int v5 = *(std::__shared_weak_count **)(a1 + 432);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v4)
  {
    BOOL v6 = __dynamic_cast(v4, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C674630, 0) != 0;
    if (!v5)
    {
LABEL_8:
      if (v6) {
        goto LABEL_9;
      }
LABEL_16:
      uint64_t v21 = 0;
      long long v22 = 0;
      goto LABEL_17;
    }
  }
  else
  {
    BOOL v6 = 0;
    if (!v5) {
      goto LABEL_8;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_8;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  if (!v6) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v7 = *(void *)(a1 + 424);
  unint64_t v8 = *(std::__shared_weak_count **)(a1 + 432);
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v21 = v7;
  long long v22 = v8;
  if (!v7)
  {
LABEL_17:
    char v11 = sub_215AB5250(6u);
    uint64_t v12 = v11;
    if (v11[23] < 0)
    {
      sub_215738B0C(&__dst, *(void **)v11, *((void *)v11 + 1));
    }
    else
    {
      long long v13 = *(_OWORD *)v11;
      uint64_t v24 = *((void *)v11 + 2);
      long long __dst = v13;
    }
    int v25 = *((_DWORD *)v12 + 6);
    sub_2157C3E6C(&v20, (uint64_t)&__dst, 1uLL);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_215738B0C(v17, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)unint64_t v17 = *(_OWORD *)a1;
      uint64_t v18 = *(void *)(a1 + 16);
    }
    int v19 = *(_DWORD *)(a1 + 24);
    long long v14 = operator new(0x28uLL);
    long long v15 = xmmword_215E9BA30;
    strcpy((char *)v14, "cannot return data as VZDictionary");
    char v16 = 1;
    sub_215964570((long long **)&v20, (uint64_t)v17, (uint64_t)&v14);
  }
  uint64_t v10 = *(void *)(v7 + 8);
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 120) = 1;
  if (v8)
  {
    if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_2158351C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23)
{
  sub_2157C3C78(&a23);
  if (*(char *)(v23 - 73) < 0)
  {
    operator delete(*(void **)(v23 - 96));
    sub_215733368(v23 - 112);
    _Unwind_Resume(a1);
  }
  sub_215733368(v23 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_215835240(uint64_t a1, const char *a2)
{
  int v5 = 0;
  sub_2158353B0(v4, "Failed to parse json string: ");
  if (*(void *)a2)
  {
    BOOL v6 = (void **)v4;
    uint64_t v7 = a2;
    unint64_t v8 = v4;
    uint64_t v9 = a2;
    uint64_t v10 = a2;
    if (v5 != -1)
    {
      char v11 = &v6;
      ((void (*)(void **, _DWORD *))off_26C65F9E8[v5])(&v11, v4);
      goto LABEL_6;
    }
LABEL_10:
    sub_215742D4C();
  }
  BOOL v6 = (void **)v4;
  uint64_t v7 = "nullptr";
  unint64_t v8 = v4;
  uint64_t v9 = "nullptr";
  uint64_t v10 = "nullptr";
  if (v5 == -1) {
    goto LABEL_10;
  }
  char v11 = &v6;
  ((void (*)(void **, _DWORD *))off_26C65F9D0[v5])(&v11, v4);
LABEL_6:
  if (v5 == -1) {
    sub_215742D4C();
  }
  BOOL v6 = &v11;
  uint64_t result = ((uint64_t (*)(void ***, _DWORD *))off_26C65FA00[v5])(&v6, v4);
  if (v5 != -1) {
    return ((uint64_t (*)(void ***, _DWORD *))off_26C65F9B8[v5])(&v6, v4);
  }
  return result;
}

void sub_215835374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_215835388(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_21583539C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

_DWORD *sub_2158353B0(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65F9B8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    uint64_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158354A4()
{
}

void sub_2158355B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  sub_2157F48C0((void **)va);
  _Unwind_Resume(a1);
}

void sub_2158355EC(_Unwind_Exception *a1)
{
  mach_timebase_info v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
  {
    if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  MEMORY[0x2166C4D20](v1, 0x10B3C40E92279A6);
  _Unwind_Resume(a1);
}

uint64_t sub_215835658(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_215835660(void *a1, void *lpsrc)
{
  uint64_t result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C678D60, (const struct __class_type_info *)&unk_26C65FA60, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = *(void *)(result + 8);
      uint64_t v6 = a1[1];
      return sub_215CE9390(v6, v5);
    }
  }
  return result;
}

void *sub_215835700(void *a1)
{
  *a1 = &unk_26C65FA88;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_21583579C(void *a1)
{
  *a1 = &unk_26C65FA88;
  sub_2157C6F18((uint64_t)(a1 + 4));
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }

  JUMPOUT(0x2166C4D20);
}

void sub_215835848()
{
  int v0 = sub_215835E7C();
  sub_2158359A4(v0, (uint64_t)"{");
}

void sub_2158358A4()
{
  int v0 = 0;
  sub_215835BD4();
}

void sub_215835940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  if (a13 != -1) {
    ((void (*)(uint64_t, char *))off_26C65F9B8[a13])(v13 - 17, &a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_215835978(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

void sub_2158359A4(long long *a1, uint64_t a2)
{
  int v5 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_215738B0C(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v4 = *((void *)a1 + 2);
  }
  int v5 = 1;
  p_dst = &__dst;
  uint64_t v7 = a2;
  v8[0] = (uint64_t)&__dst;
  v8[1] = a2;
  v8[2] = a2;
  sub_2157492F0(v8, (uint64_t)&__dst);
  sub_215835BD4();
}

void sub_215835B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215835B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215835B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215835B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215835B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215835BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215835BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_215835BD4()
{
}

void sub_215835E14(_Unwind_Exception *a1)
{
  MEMORY[0x2166C4D20](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_215835E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_215835E7C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885DA0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885DA0))
  {
    return &xmmword_267885D88;
  }
  uint64_t v1 = sub_215835F64();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_267885D88, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_267885D98 = v1->__r_.__value_.__r.__words[2];
    xmmword_267885D88 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885D88, &dword_21572C000);
  __cxa_guard_release(&qword_267885DA0);
  return &xmmword_267885D88;
}

void sub_215835F4C(_Unwind_Exception *a1)
{
}

std::string *sub_215835F64()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885DC0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885DC0))
  {
    return &stru_267885DA8;
  }
  sub_215836218((uint64_t)__p);
  sub_215836060(__p, &stru_267885DA8);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267885DA8, &dword_21572C000);
  __cxa_guard_release(&qword_267885DC0);
  return &stru_267885DA8;
}

void sub_215836020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267885DC0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267885DC0);
  _Unwind_Resume(a1);
}

void sub_215836060(void *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_215836428();
  if (*((char *)v4 + 23) < 0)
  {
    sub_215738B0C(__dst, *(void **)v4, *((void *)v4 + 1));
  }
  else
  {
    long long v5 = *v4;
    uint64_t v16 = *((void *)v4 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  uint64_t v6 = sub_2157C6008();
  if (*((char *)v6 + 23) < 0)
  {
    sub_215738B0C(&v17, *(void **)v6, *((void *)v6 + 1));
  }
  else
  {
    long long v7 = *v6;
    uint64_t v18 = *((void *)v6 + 2);
    long long v17 = v7;
  }
  sub_21573A150(&__p, (uint64_t)__dst, 2uLL);
  sub_215E19EAC(a1, (uint64_t *)&__p, a2, v8, v9);
  uint64_t v10 = (void **)__p;
  if (__p)
  {
    char v11 = v14;
    uint64_t v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0) {
          operator delete(*(v11 - 3));
        }
        v11 -= 3;
      }
      while (v11 != v10);
      uint64_t v12 = __p;
    }
    long long v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_19;
  }
}

void sub_2158361C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_215836218(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885E40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885E40))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::dict::Dictionary>]", qword_267885E28);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885E28, &dword_21572C000);
    __cxa_guard_release(&qword_267885E40);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885E60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885E60))
  {
    size_t v3 = sub_215747D98(qword_267885E28, "<", 0);
    sub_215747C90(qword_267885E28, 0, v3, qword_267885E48);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885E48, &dword_21572C000);
    __cxa_guard_release(&qword_267885E60);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885E80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885E80))
  {
    sub_215E19DF4((uint64_t)qword_267885E48, (uint64_t)&xmmword_267885E68);
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885E68, &dword_21572C000);
    __cxa_guard_release(&qword_267885E80);
  }
  if (byte_267885E7F < 0)
  {
    long long v2 = xmmword_267885E68;
    sub_215738B0C((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_267885E68;
    *(void *)(a1 + 16) = unk_267885E78;
  }
}

void sub_2158363E0(_Unwind_Exception *a1)
{
}

void sub_2158363F8(_Unwind_Exception *a1)
{
}

void sub_215836410(_Unwind_Exception *a1)
{
}

long long *sub_215836428()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885DE0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885DE0))
  {
    return &xmmword_267885DC8;
  }
  uint64_t v1 = (char *)sub_215836510();
  if (v1[23] < 0)
  {
    sub_215738B0C(&xmmword_267885DC8, *(void **)v1, *((void *)v1 + 1));
  }
  else
  {
    long long v2 = *(_OWORD *)v1;
    qword_267885DD8 = *((void *)v1 + 2);
    xmmword_267885DC8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_267885DC8, &dword_21572C000);
  __cxa_guard_release(&qword_267885DE0);
  return &xmmword_267885DC8;
}

void sub_2158364F8(_Unwind_Exception *a1)
{
}

void *sub_215836510()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885E00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_267885E00))
  {
    sub_215E19B7C("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::dict::Dictionary]", qword_267885DE8);
    __cxa_atexit(MEMORY[0x263F8C0B8], qword_267885DE8, &dword_21572C000);
    __cxa_guard_release(&qword_267885E00);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267885E20, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267885E20))
  {
    return &unk_267885E08;
  }
  sub_215E19DF4((uint64_t)qword_267885DE8, (uint64_t)&unk_267885E08);
  __cxa_atexit(MEMORY[0x263F8C0B8], &unk_267885E08, &dword_21572C000);
  __cxa_guard_release(&qword_267885E20);
  return &unk_267885E08;
}

void sub_215836614(_Unwind_Exception *a1)
{
}

void sub_21583662C(_Unwind_Exception *a1)
{
}

void sub_215836644(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3 = a1;
  sub_215836780("given enable-state value (", &v3, (std::string *)") is invalid");
  if (SHIBYTE(v5) < 0)
  {
    sub_215738B0C(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)v4;
    uint64_t v7 = v5;
  }
  char v8 = 1;
  LOBYTE(v9) = 0;
  char v13 = 0;
  char v14 = 1;
  sub_21573FCF8(0xAu, (long long *)__p, a2);
  if (!v14) {
    goto LABEL_11;
  }
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      operator delete(v9);
      if (!v8) {
        goto LABEL_11;
      }
      goto LABEL_9;
    }
    operator delete(v11);
    if (v10 < 0) {
      goto LABEL_14;
    }
  }
LABEL_8:
  if (!v8) {
    goto LABEL_11;
  }
LABEL_9:
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
LABEL_11:
  if (SHIBYTE(v5) < 0) {
    operator delete(v4[0]);
  }
}

void sub_215836754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215836780(char *__s, unsigned __int8 *a2, std::string *a3)
{
  int v7 = 0;
  sub_2157E4674(v6, __s);
  std::to_string(&v8, *a2);
  char v10 = (std::string *)v6;
  char v11 = &v8;
  char v12 = v6;
  char v13 = &v8;
  char v14 = &v8;
  if (v7 == -1) {
    sub_215742D4C();
  }
  int8x16_t v9 = &v10;
  ((void (*)(std::string ***, _DWORD *))off_26C65FAF8[v7])(&v9, v6);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  char v10 = (std::string *)v6;
  char v11 = a3;
  char v12 = v6;
  char v13 = a3;
  char v14 = a3;
  if (v7 == -1) {
    sub_215742D4C();
  }
  v8.__r_.__value_.__r.__words[0] = (std::string::size_type)&v10;
  ((void (*)(std::string *, _DWORD *))off_26C65FB10[v7])(&v8, v6);
  if (v7 == -1) {
    sub_215742D4C();
  }
  char v10 = &v8;
  uint64_t result = ((uint64_t (*)(std::string **, _DWORD *))off_26C65FB28[v7])(&v10, v6);
  if (v7 != -1) {
    return ((uint64_t (*)(std::string **, _DWORD *))off_26C65FAC8[v7])(&v10, v6);
  }
  return result;
}

void sub_2158368D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215742CF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_2158368F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_215742CF0((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x2158368E0);
}

BOOL sub_215836914(uint64_t a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v5 = (const void *)v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = (const void **)operator new(v7 + 1);
    __dst[1] = v5;
    unint64_t v12 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v12) = v4;
  uint64_t v6 = __dst;
  if (v4) {
LABEL_8:
  }
    memcpy(v6, __s, (size_t)v5);
  *((unsigned char *)v5 + (void)v6) = 0;
  int8x16_t v9 = sub_215837FE8(a1, __dst);
  if (SHIBYTE(v12) < 0) {
    operator delete((void *)__dst[0]);
  }
  return a1 + 8 != (void)v9;
}

void sub_2158369F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215836A14(char *__s@<X1>, uint64_t a2@<X0>, uint64_t a3@<X8>)
{
  char v37 = __s;
  size_t v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    p_dst = (long long *)operator new(v9 + 1);
    *((void *)&__dst + 1) = v7;
    *(void *)&long long v27 = v10 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
    goto LABEL_8;
  }
  BYTE7(v27) = v6;
  p_dst = &__dst;
  if (v6) {
LABEL_8:
  }
    memcpy(p_dst, __s, v7);
  *((unsigned char *)p_dst + v7) = 0;
  char v11 = sub_215837FE8(a2, (const void **)&__dst);
  unint64_t v12 = v11;
  if (SBYTE7(v27) < 0)
  {
    operator delete((void *)__dst);
    if ((uint64_t *)(a2 + 8) != v12) {
      goto LABEL_11;
    }
  }
  else if ((uint64_t *)(a2 + 8) != v11)
  {
LABEL_11:
    *(unsigned char *)a3 = *((unsigned char *)v12 + 56);
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  int v39 = 0;
  sub_2157E4C90(v38, "key '");
  if (v37)
  {
    char v40 = (void **)v38;
    uint64_t v41 = (const char *)&v37;
    unsigned __int8 v42 = v38;
    long long v43 = (const char *)&v37;
    uint64_t v44 = (const char *)&v37;
    if (v39 != -1)
    {
      uint64_t v45 = &v40;
      ((void (*)(void **, _DWORD *))off_26C65FB40[v39])(&v45, v38);
      goto LABEL_18;
    }
LABEL_48:
    sub_215742D4C();
  }
  char v40 = (void **)v38;
  uint64_t v41 = "nullptr";
  unsigned __int8 v42 = v38;
  long long v43 = "nullptr";
  uint64_t v44 = "nullptr";
  if (v39 == -1) {
    goto LABEL_48;
  }
  uint64_t v45 = &v40;
  ((void (*)(void **, _DWORD *))off_26C65FAE0[v39])(&v45, v38);
LABEL_18:
  char v40 = (void **)v38;
  uint64_t v41 = "' not contained in enable-states";
  unsigned __int8 v42 = v38;
  long long v43 = "' not contained in enable-states";
  uint64_t v44 = "' not contained in enable-states";
  if (v39 == -1) {
    sub_215742D4C();
  }
  uint64_t v45 = &v40;
  ((void (*)(void **, _DWORD *))off_26C65FB58[v39])(&v45, v38);
  if (v39 == -1) {
    sub_215742D4C();
  }
  char v40 = &v45;
  ((void (*)(void **__return_ptr, void ***, _DWORD *))off_26C65FB28[v39])(v15, &v40, v38);
  if (v39 != -1) {
    ((void (*)(void ***, _DWORD *))off_26C65FAC8[v39])(&v40, v38);
  }
  if (SHIBYTE(v16) < 0)
  {
    sub_215738B0C(v17, v15[0], (unint64_t)v15[1]);
  }
  else
  {
    *(_OWORD *)long long v17 = *(_OWORD *)v15;
    uint64_t v18 = v16;
  }
  char v19 = 1;
  LOBYTE(v20) = 0;
  char v24 = 0;
  char v25 = 1;
  sub_21573FCF8(0x16u, (long long *)v17, (uint64_t)&__dst);
  *(_OWORD *)a3 = __dst;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v36)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v13 = v29;
    if (v29)
    {
      *(_OWORD *)(a3 + 16) = v27;
      *(void *)(a3 + 32) = v28;
      uint64_t v28 = 0;
      long long v27 = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v35)
    {
      uint64_t v14 = v32;
      *(void *)(a3 + 64) = v31;
      *(_OWORD *)(a3 + 48) = v30;
      long long v30 = 0uLL;
      *(void *)(a3 + 72) = v14;
      *(_OWORD *)(a3 + 80) = v33;
      *(void *)(a3 + 96) = v34;
      uint64_t v31 = 0;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v13 && SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
    if (!v25) {
      goto LABEL_44;
    }
    goto LABEL_36;
  }
  *(unsigned char *)(a3 + 120) = 0;
  if (v25)
  {
LABEL_36:
    if (v24)
    {
      if (v23 < 0) {
        operator delete(__p);
      }
      if (v21 < 0) {
        operator delete(v20);
      }
    }
    if (v19 && SHIBYTE(v18) < 0) {
      operator delete(v17[0]);
    }
  }
LABEL_44:
  if (SHIBYTE(v16) < 0) {
    operator delete(v15[0]);
  }
}

void sub_215836DF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215836E88(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a2;
  if (*(void *)(a1 + 16) > (unint64_t)a2)
  {
    size_t v4 = *(void **)a1;
    if (a2 < 0)
    {
      do
      {
        char v11 = (void *)*v4;
        if (*v4)
        {
          do
          {
            uint64_t v5 = v11;
            char v11 = (void *)v11[1];
          }
          while (v11);
        }
        else
        {
          do
          {
            uint64_t v5 = (void *)v4[2];
            BOOL v9 = *v5 == (void)v4;
            size_t v4 = v5;
          }
          while (v9);
        }
        size_t v4 = v5;
      }
      while (!__CFADD__(a2++, 1));
    }
    else if (a2)
    {
      do
      {
        uint64_t v8 = (void *)v4[1];
        if (v8)
        {
          do
          {
            uint64_t v5 = v8;
            uint64_t v8 = (void *)*v8;
          }
          while (v8);
        }
        else
        {
          do
          {
            uint64_t v5 = (void *)v4[2];
            BOOL v9 = *v5 == (void)v4;
            size_t v4 = v5;
          }
          while (!v9);
        }
        size_t v4 = v5;
      }
      while (a2-- > 1);
    }
    else
    {
      uint64_t v5 = *(void **)a1;
    }
    size_t v6 = v5 + 4;
    if (*((char *)v5 + 55) < 0) {
      size_t v6 = (void *)*v6;
    }
    *(void *)a3 = v6;
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  unint64_t v14 = *(void *)(a1 + 16);
  sub_215837148((uint64_t)v15, (unint64_t *)&v37, &v14);
  if (SHIBYTE(v16) < 0)
  {
    sub_215738B0C(__dst, v15[0], (unint64_t)v15[1]);
  }
  else
  {
    *(_OWORD *)long long __dst = *(_OWORD *)v15;
    uint64_t v18 = v16;
  }
  char v19 = 1;
  LOBYTE(v20) = 0;
  char v24 = 0;
  char v25 = 1;
  sub_21573FCF8(0x11u, (long long *)__dst, (uint64_t)&v26);
  *(_OWORD *)a3 = v26;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v36)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v12 = v29;
    if (v29)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v28;
      uint64_t v28 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v35)
    {
      uint64_t v13 = v32;
      *(void *)(a3 + 64) = v31;
      *(_OWORD *)(a3 + 48) = v30;
      long long v30 = 0uLL;
      *(void *)(a3 + 72) = v13;
      *(_OWORD *)(a3 + 80) = v33;
      *(void *)(a3 + 96) = v34;
      uint64_t v31 = 0;
      long long v33 = 0uLL;
      uint64_t v34 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v12 && SHIBYTE(v28) < 0) {
      operator delete((void *)__p);
    }
    if (!v25) {
      goto LABEL_42;
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v25) {
      goto LABEL_42;
    }
  }
  if (!v24) {
    goto LABEL_39;
  }
  if (v23 < 0)
  {
    operator delete(v22);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_39:
      if (v19) {
        goto LABEL_40;
      }
      goto LABEL_42;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_39;
  }
  operator delete(v20);
  if (v19)
  {
LABEL_40:
    if (SHIBYTE(v18) < 0) {
      operator delete(__dst[0]);
    }
  }
LABEL_42:
  if (SHIBYTE(v16) < 0) {
    operator delete(v15[0]);
  }
}

void sub_21583711C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_215837148(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  int v7 = 0;
  sub_2158386B8(v6, "given index is ");
  std::to_string(&v8, *a2);
  uint64_t v10 = (std::string *)v6;
  char v11 = &v8;
  int v12 = v6;
  uint64_t v13 = &v8;
  unint64_t v14 = &v8;
  if (v7 == -1) {
    sub_215742D4C();
  }
  BOOL v9 = &v10;
  ((void (*)(std::string ***, _DWORD *))off_26C65FAF8[v7])(&v9, v6);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  uint64_t v10 = (std::string *)v6;
  char v11 = (std::string *)" but enable-states only contain ";
  int v12 = v6;
  uint64_t v13 = (std::string *)" but enable-states only contain ";
  unint64_t v14 = (std::string *)" but enable-states only contain ";
  if (v7 == -1) {
    sub_215742D4C();
  }
  v8.__r_.__value_.__r.__words[0] = (std::string::size_type)&v10;
  ((void (*)(std::string *, _DWORD *))off_26C65FB58[v7])(&v8, v6);
  std::to_string(&v8, *a3);
  uint64_t v10 = (std::string *)v6;
  char v11 = &v8;
  int v12 = v6;
  uint64_t v13 = &v8;
  unint64_t v14 = &v8;
  if (v7 == -1) {
    sub_215742D4C();
  }
  BOOL v9 = &v10;
  ((void (*)(std::string ***, _DWORD *))off_26C65FAF8[v7])(&v9, v6);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  uint64_t v10 = (std::string *)v6;
  char v11 = (std::string *)" entries";
  int v12 = v6;
  uint64_t v13 = (std::string *)" entries";
  unint64_t v14 = (std::string *)" entries";
  if (v7 == -1) {
    sub_215742D4C();
  }
  v8.__r_.__value_.__r.__words[0] = (std::string::size_type)&v10;
  ((void (*)(std::string *, _DWORD *))off_26C65FB70[v7])(&v8, v6);
  if (v7 == -1) {
    sub_215742D4C();
  }
  uint64_t v10 = &v8;
  uint64_t result = ((uint64_t (*)(std::string **, _DWORD *))off_26C65FB28[v7])(&v10, v6);
  if (v7 != -1) {
    return ((uint64_t (*)(std::string **, _DWORD *))off_26C65FAC8[v7])(&v10, v6);
  }
  return result;
}

void sub_21583734C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
}

void sub_21583739C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a2;
  if (*(void *)(a1 + 16) > (unint64_t)a2)
  {
    size_t v4 = *(void **)a1;
    if (a2 < 0)
    {
      do
      {
        uint64_t v10 = (void *)*v4;
        if (*v4)
        {
          do
          {
            uint64_t v5 = v10;
            uint64_t v10 = (void *)v10[1];
          }
          while (v10);
        }
        else
        {
          do
          {
            uint64_t v5 = (void *)v4[2];
            BOOL v8 = *v5 == (void)v4;
            size_t v4 = v5;
          }
          while (v8);
        }
        size_t v4 = v5;
      }
      while (!__CFADD__(a2++, 1));
    }
    else if (a2)
    {
      do
      {
        int v7 = (void *)v4[1];
        if (v7)
        {
          do
          {
            uint64_t v5 = v7;
            int v7 = (void *)*v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            uint64_t v5 = (void *)v4[2];
            BOOL v8 = *v5 == (void)v4;
            size_t v4 = v5;
          }
          while (!v8);
        }
        size_t v4 = v5;
      }
      while (a2-- > 1);
    }
    else
    {
      uint64_t v5 = *(void **)a1;
    }
    *(unsigned char *)a3 = *((unsigned char *)v5 + 56);
    *(unsigned char *)(a3 + 120) = 1;
    return;
  }
  unint64_t v13 = *(void *)(a1 + 16);
  sub_215837148((uint64_t)v14, (unint64_t *)&v36, &v13);
  if (SHIBYTE(v15) < 0)
  {
    sub_215738B0C(__dst, v14[0], (unint64_t)v14[1]);
  }
  else
  {
    *(_OWORD *)long long __dst = *(_OWORD *)v14;
    uint64_t v17 = v15;
  }
  char v18 = 1;
  LOBYTE(v19) = 0;
  char v23 = 0;
  char v24 = 1;
  sub_21573FCF8(0x11u, (long long *)__dst, (uint64_t)&v25);
  *(_OWORD *)a3 = v25;
  *(unsigned char *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 112) = 0;
  if (v35)
  {
    *(unsigned char *)(a3 + 40) = 0;
    int v11 = v28;
    if (v28)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(void *)(a3 + 32) = v27;
      uint64_t v27 = 0;
      long long __p = 0uLL;
      *(unsigned char *)(a3 + 40) = 1;
    }
    *(unsigned char *)(a3 + 48) = 0;
    *(unsigned char *)(a3 + 104) = 0;
    if (v34)
    {
      uint64_t v12 = v31;
      *(void *)(a3 + 64) = v30;
      *(_OWORD *)(a3 + 48) = v29;
      long long v29 = 0uLL;
      *(void *)(a3 + 72) = v12;
      *(_OWORD *)(a3 + 80) = v32;
      *(void *)(a3 + 96) = v33;
      uint64_t v30 = 0;
      long long v32 = 0uLL;
      uint64_t v33 = 0;
      *(unsigned char *)(a3 + 104) = 1;
    }
    *(unsigned char *)(a3 + 112) = 1;
    *(unsigned char *)(a3 + 120) = 0;
    if (v11 && SHIBYTE(v27) < 0) {
      operator delete((void *)__p);
    }
    if (!v24) {
      goto LABEL_40;
    }
  }
  else
  {
    *(unsigned char *)(a3 + 120) = 0;
    if (!v24) {
      goto LABEL_40;
    }
  }
  if (!v23) {
    goto LABEL_37;
  }
  if (v22 < 0)
  {
    operator delete(v21);
    if ((v20 & 0x80000000) == 0)
    {
LABEL_37:
      if (v18) {
        goto LABEL_38;
      }
      goto LABEL_40;
    }
  }
  else if ((v20 & 0x80000000) == 0)
  {
    goto LABEL_37;
  }
  operator delete(v19);
  if (v18)
  {
LABEL_38:
    if (SHIBYTE(v17) < 0) {
      operator delete(__dst[0]);
    }
  }
LABEL_40:
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
}

void sub_215837624(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_215837650(char *__s@<X1>, uint64_t **a2@<X0>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  if (a3 <= 2)
  {
    size_t v8 = strlen(__s);
    size_t v9 = v8;
    if (!a3 && !v8)
    {
      sub_21583927C((uint64_t)v21);
      *(_OWORD *)a4 = *(_OWORD *)v21;
      *(unsigned char *)(a4 + 16) = 0;
      uint64_t v10 = a4 + 16;
      *(unsigned char *)(a4 + 112) = 0;
      if (v31)
      {
        *(unsigned char *)(a4 + 40) = 0;
        int v11 = v24;
        if (v24) {
          goto LABEL_9;
        }
        goto LABEL_10;
      }
LABEL_15:
      *(unsigned char *)(a4 + 120) = 0;
      return;
    }
    if (v8 >= 0x7FFFFFFFFFFFFFF8) {
      sub_215731CD8();
    }
    if (v8 >= 0x17)
    {
      uint64_t v14 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v8 | 7) != 0x17) {
        uint64_t v14 = v8 | 7;
      }
      uint64_t v15 = v14 + 1;
      p_dst = (long long *)operator new(v14 + 1);
      *((void *)&__dst + 1) = v9;
      unint64_t v20 = v15 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      HIBYTE(v20) = v8;
      p_dst = &__dst;
      if (!v8)
      {
LABEL_24:
        *((unsigned char *)p_dst + v9) = 0;
        *(_OWORD *)char v21 = __dst;
        *(void *)&long long __p = v20;
        BYTE8(__p) = a3;
        uint64_t v17 = sub_215838DC8(a2, (const void **)v21, (uint64_t)v21);
        char v18 = v16;
        if (SBYTE7(__p) < 0)
        {
          operator delete(v21[0]);
          if (v18) {
            goto LABEL_26;
          }
        }
        else if (v16)
        {
LABEL_26:
          *(unsigned char *)(a4 + 120) = 1;
          return;
        }
        *((unsigned char *)v17 + 56) = a3;
        goto LABEL_26;
      }
    }
    memcpy(p_dst, __s, v9);
    goto LABEL_24;
  }
  sub_215836644(a3, (uint64_t)v21);
  *(_OWORD *)a4 = *(_OWORD *)v21;
  *(unsigned char *)(a4 + 16) = 0;
  uint64_t v10 = a4 + 16;
  *(unsigned char *)(a4 + 112) = 0;
  if (!v31) {
    goto LABEL_15;
  }
  *(unsigned char *)(a4 + 40) = 0;
  int v11 = v24;
  if (v24)
  {
LABEL_9:
    *(_OWORD *)uint64_t v10 = __p;
    *(void *)(v10 + 16) = v23;
    uint64_t v23 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a4 + 40) = 1;
  }
LABEL_10:
  *(unsigned char *)(a4 + 48) = 0;
  *(unsigned char *)(a4 + 104) = 0;
  if (v30)
  {
    uint64_t v12 = v27;
    *(void *)(a4 + 64) = v26;
    *(_OWORD *)(a4 + 48) = v25;
    long long v25 = 0uLL;
    *(void *)(a4 + 72) = v12;
    *(_OWORD *)(a4 + 80) = v28;
    *(void *)(a4 + 96) = v29;
    uint64_t v26 = 0;
    long long v28 = 0uLL;
    uint64_t v29 = 0;
    *(unsigned char *)(a4 + 104) = 1;
  }
  *(unsigned char *)(a4 + 112) = 1;
  *(unsigned char *)(a4 + 120) = 0;
  if (v11)
  {
    if (SHIBYTE(v23) < 0) {
      operator delete((void *)__p);
    }
  }
}

void sub_215837898(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_2158378B4(uint64_t **a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v5 = (const void *)v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    size_t v6 = (const void **)operator new(v7 + 1);
    __dst[1] = v5;
    unint64_t v17 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v17) = v4;
  size_t v6 = __dst;
  if (v4) {
LABEL_8:
  }
    memcpy(v6, __s, (size_t)v5);
  *((unsigned char *)v5 + (void)v6) = 0;
  size_t v9 = sub_215837FE8((uint64_t)a1, __dst);
  if (SHIBYTE(v17) < 0) {
    operator delete((void *)__dst[0]);
  }
  if (a1 + 1 != (uint64_t **)v9)
  {
    uint64_t v10 = (uint64_t *)v9[1];
    if (v10)
    {
      do
      {
        int v11 = v10;
        uint64_t v10 = (uint64_t *)*v10;
      }
      while (v10);
    }
    else
    {
      uint64_t v12 = v9;
      do
      {
        int v11 = (uint64_t *)v12[2];
        BOOL v13 = *v11 == (void)v12;
        uint64_t v12 = v11;
      }
      while (!v13);
    }
    if (*a1 == v9) {
      *a1 = v11;
    }
    uint64_t v14 = a1[1];
    a1[2] = (uint64_t *)((char *)a1[2] - 1);
    sub_21573B1FC(v14, v9);
    if (*((char *)v9 + 55) < 0) {
      operator delete((void *)v9[4]);
    }
    operator delete(v9);
  }
  return a1 + 1 != (uint64_t **)v9;
}

void sub_215837A0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_215837A28(_DWORD ***a1)
{
  return sub_21574F544(**a1, (char *)(*a1)[1]);
}

void sub_215837A34(uint64_t a1, uint64_t a2)
{
}

char *sub_215837A44(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3 = *(const char **)(*(void *)a1 + 32);
  size_t v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_215837B40((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    uint64_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)size_t v4 = v7;
  }
  else
  {
    v4[23] = v5;
    uint64_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215837B38(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215837B40(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    uint64_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  char v21 = v8;
  char v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      int v11 = v8;
      uint64_t v12 = v8 + 24;
      BOOL v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  int v11 = v21;
  uint64_t v12 = v22 + 24;
  BOOL v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  char v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215837D40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_215837D54(uint64_t a1, void **a2, void *a3)
{
  unint64_t v3 = a3 + 1;
  unint64_t v4 = *a2;
  if ((void *)*a3 == a3 + 1)
  {
    uint64_t v16 = "{}";
    uint64_t v17 = 2;
  }
  else
  {
    sub_215731D94(v4, (uint64_t)"{", 1);
    uint64_t v7 = (void *)*a3;
    sub_215731D94(*a2, (uint64_t)"{", 1);
    int v8 = *((char *)v7 + 55);
    if (v8 >= 0) {
      uint64_t v9 = (uint64_t)(v7 + 4);
    }
    else {
      uint64_t v9 = v7[4];
    }
    if (v8 >= 0) {
      uint64_t v10 = *((unsigned __int8 *)v7 + 55);
    }
    else {
      uint64_t v10 = v7[5];
    }
    sub_215731D94(*a2, v9, v10);
    sub_215731D94(*a2, (uint64_t)",", 1);
    int v11 = *a2;
    unint64_t v12 = *((unsigned __int8 *)v7 + 56);
    if (v12 > 2)
    {
      sub_215731D94(v11, (uint64_t)"Invalid(", 8);
      int v11 = (void *)std::ostream::operator<<();
      uint64_t v14 = ")";
      uint64_t v15 = 1;
    }
    else
    {
      BOOL v13 = &(&off_26425A8B8)[2 * v12];
      uint64_t v14 = *v13;
      uint64_t v15 = (uint64_t)v13[1];
    }
    sub_215731D94(v11, (uint64_t)v14, v15);
    sub_215731D94(*a2, (uint64_t)"}", 1);
    long long v18 = (void *)v7[1];
    if (v18)
    {
      do
      {
        char v19 = v18;
        long long v18 = (void *)*v18;
      }
      while (v18);
    }
    else
    {
      do
      {
        char v19 = (void *)v7[2];
        BOOL v20 = *v19 == (void)v7;
        uint64_t v7 = v19;
      }
      while (!v20);
    }
    if (v19 != v3)
    {
      do
      {
        sub_215731D94(*a2, (uint64_t)",", 1);
        sub_215731D94(*a2, (uint64_t)"{", 1);
        int v21 = *((char *)v19 + 55);
        if (v21 >= 0) {
          uint64_t v22 = (uint64_t)(v19 + 4);
        }
        else {
          uint64_t v22 = v19[4];
        }
        if (v21 >= 0) {
          uint64_t v23 = *((unsigned __int8 *)v19 + 55);
        }
        else {
          uint64_t v23 = v19[5];
        }
        sub_215731D94(*a2, v22, v23);
        sub_215731D94(*a2, (uint64_t)",", 1);
        unsigned __int8 v24 = *a2;
        unint64_t v25 = *((unsigned __int8 *)v19 + 56);
        if (v25 > 2)
        {
          sub_215731D94(v24, (uint64_t)"Invalid(", 8);
          unsigned __int8 v24 = (void *)std::ostream::operator<<();
          uint64_t v27 = ")";
          uint64_t v28 = 1;
        }
        else
        {
          uint64_t v26 = &(&off_26425A8B8)[2 * v25];
          uint64_t v27 = *v26;
          uint64_t v28 = (uint64_t)v26[1];
        }
        sub_215731D94(v24, (uint64_t)v27, v28);
        sub_215731D94(*a2, (uint64_t)"}", 1);
        uint64_t v29 = (void *)v19[1];
        if (v29)
        {
          do
          {
            char v30 = v29;
            uint64_t v29 = (void *)*v29;
          }
          while (v29);
        }
        else
        {
          do
          {
            char v30 = (void *)v19[2];
            BOOL v20 = *v30 == (void)v19;
            char v19 = v30;
          }
          while (!v20);
        }
        char v19 = v30;
      }
      while (v30 != v3);
    }
    unint64_t v4 = *a2;
    uint64_t v16 = "}";
    uint64_t v17 = 1;
  }

  return sub_215731D94(v4, (uint64_t)v16, v17);
}

uint64_t *sub_215837FE8(uint64_t a1, const void **a2)
{
  uint64_t v2 = (uint64_t *)(a1 + 8);
  unint64_t v3 = *(uint64_t **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = a2;
  }
  else {
    size_t v5 = *a2;
  }
  if (v4 >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  uint64_t v7 = (uint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      int v8 = *((char *)v3 + 55);
      uint64_t v9 = v8 >= 0 ? v3 + 4 : (uint64_t *)v3[4];
      size_t v10 = v8 >= 0 ? *((unsigned __int8 *)v3 + 55) : v3[5];
      size_t v11 = v6 >= v10 ? v10 : v6;
      int v12 = memcmp(v9, v5, v11);
      if (v12) {
        break;
      }
      if (v10 >= v6) {
        goto LABEL_23;
      }
LABEL_9:
      unint64_t v3 = (uint64_t *)v3[1];
      if (!v3) {
        goto LABEL_24;
      }
    }
    if (v12 < 0) {
      goto LABEL_9;
    }
LABEL_23:
    uint64_t v7 = v3;
    unint64_t v3 = (uint64_t *)*v3;
  }
  while (v3);
LABEL_24:
  if (v7 == v2) {
    return v2;
  }
  int v13 = *((char *)v7 + 55);
  if (v13 >= 0) {
    uint64_t v14 = v7 + 4;
  }
  else {
    uint64_t v14 = (const void *)v7[4];
  }
  if (v13 >= 0) {
    size_t v15 = *((unsigned __int8 *)v7 + 55);
  }
  else {
    size_t v15 = v7[5];
  }
  if (v15 >= v6) {
    size_t v16 = v6;
  }
  else {
    size_t v16 = v15;
  }
  int v17 = memcmp(v5, v14, v16);
  if (v17)
  {
    if ((v17 & 0x80000000) == 0) {
      return v7;
    }
    return v2;
  }
  else
  {
    if (v6 < v15) {
      return v2;
    }
    return v7;
  }
}

_DWORD *sub_215838104(_DWORD ***a1)
{
  return sub_2158385C4(**a1, (char *)(*a1)[1]);
}

void sub_215838110(uint64_t *a1, uint64_t a2)
{
  v19[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  *(void *)((char *)v19 + 7) = *(void *)(a2 + 15);
  int v4 = *(void **)a2;
  v19[0] = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  uint64_t v14 = v4;
  *(void *)size_t v15 = v19[0];
  *(void *)&v15[7] = *(void *)((char *)v19 + 7);
  char v16 = v5;
  memset(v19, 0, 15);
  size_t v6 = __p;
  uint64_t v7 = *(const char **)(v2 + 24);
  size_t v8 = strlen(v7);
  if (v8 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v9 = (void *)v8;
  if (v8 >= 0x17)
  {
    uint64_t v11 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17) {
      uint64_t v11 = v8 | 7;
    }
    uint64_t v12 = v11 + 1;
    size_t v6 = operator new(v11 + 1);
    __p[1] = v9;
    unint64_t v18 = v12 | 0x8000000000000000;
    __p[0] = v6;
LABEL_9:
    memmove(v6, v7, (size_t)v9);
    *((unsigned char *)v9 + (void)v6) = 0;
    uint64_t v10 = *(unsigned int *)(v3 + 24);
    if (v10 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v18) = v8;
  if (v8) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v10 = *(unsigned int *)(v3 + 24);
  if (v10 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65FAC8[v10])(&v13, v3);
LABEL_11:
  *(_DWORD *)(v3 + 24) = -1;
  sub_21573A150((void *)v3, (uint64_t)&v14, 2uLL);
  *(_DWORD *)(v3 + 24) = 2;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v14);
    return;
  }
  operator delete(__p[0]);
  if (v16 < 0) {
    goto LABEL_15;
  }
}

void sub_2158382CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_215838310(uint64_t a1, void **a2)
{
  uint64_t v3 = *(const void **)(*(void *)a1 + 32);
  char v5 = a2[1];
  int v4 = a2[2];
  if (v5 < (void *)v4)
  {
    size_t v6 = strlen(*(const char **)(*(void *)a1 + 32));
    if (v6 > 0x7FFFFFFFFFFFFFF7) {
      sub_215731CD8();
    }
    size_t v7 = v6;
    if (v6 >= 0x17)
    {
      uint64_t v14 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v6 | 7) != 0x17) {
        uint64_t v14 = v6 | 7;
      }
      uint64_t v15 = v14 + 1;
      size_t v8 = operator new(v14 + 1);
      v5[1] = v7;
      v5[2] = v15 | 0x8000000000000000;
      *char v5 = v8;
    }
    else
    {
      *((unsigned char *)v5 + 23) = v6;
      size_t v8 = v5;
      if (!v6) {
        goto LABEL_19;
      }
    }
    memmove(v8, v3, v7);
LABEL_19:
    *((unsigned char *)v8 + v7) = 0;
    char v16 = (char *)(v5 + 3);
    a2[1] = v5 + 3;
    goto LABEL_39;
  }
  unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)*a2) >> 3);
  if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a2) >> 3);
  uint64_t v11 = 2 * v10;
  if (2 * v10 <= v9 + 1) {
    uint64_t v11 = v9 + 1;
  }
  if (v10 >= 0x555555555555555) {
    unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12)
  {
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    char v13 = (char *)operator new(24 * v12);
  }
  else
  {
    char v13 = 0;
  }
  int v17 = &v13[24 * v9];
  size_t v18 = strlen((const char *)v3);
  if (v18 > 0x7FFFFFFFFFFFFFF7) {
    sub_215731CD8();
  }
  size_t v19 = v18;
  if (v18 >= 0x17)
  {
    uint64_t v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v18 | 7) != 0x17) {
      uint64_t v24 = v18 | 7;
    }
    uint64_t v25 = v24 + 1;
    BOOL v20 = operator new(v24 + 1);
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v25 | 0x8000000000000000;
    *(void *)int v17 = v20;
  }
  else
  {
    v17[23] = v18;
    BOOL v20 = v17;
    if (!v18)
    {
      int v21 = &v13[24 * v12];
      *int v17 = 0;
      char v16 = v17 + 24;
      uint64_t v22 = (void **)*a2;
      uint64_t v23 = (void **)a2[1];
      if (v23 == *a2) {
        goto LABEL_36;
      }
      do
      {
LABEL_30:
        long long v26 = *(_OWORD *)(v23 - 3);
        *((void *)v17 - 1) = *(v23 - 1);
        *(_OWORD *)(v17 - 24) = v26;
        v17 -= 24;
        *(v23 - 2) = 0;
        *(v23 - 1) = 0;
        *(v23 - 3) = 0;
        v23 -= 3;
      }
      while (v23 != v22);
      uint64_t v23 = (void **)*a2;
      uint64_t v27 = (void **)a2[1];
      *a2 = v17;
      a2[1] = v16;
      a2[2] = v21;
      while (v27 != v23)
      {
        if (*((char *)v27 - 1) < 0) {
          operator delete(*(v27 - 3));
        }
        v27 -= 3;
      }
      goto LABEL_37;
    }
  }
  memmove(v20, v3, v19);
  int v21 = &v13[24 * v12];
  *((unsigned char *)v20 + v19) = 0;
  char v16 = v17 + 24;
  uint64_t v22 = (void **)*a2;
  uint64_t v23 = (void **)a2[1];
  if (v23 != *a2) {
    goto LABEL_30;
  }
LABEL_36:
  *a2 = v17;
  a2[1] = v16;
  a2[2] = v21;
LABEL_37:
  if (v23) {
    operator delete(v23);
  }
LABEL_39:
  a2[1] = v16;
}

void sub_2158385A4(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_2158385BC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

_DWORD *sub_2158385C4(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65FAC8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_2158386B8(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65FAC8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_2158387AC(_DWORD ***a1)
{
  return sub_2158387C8(**a1, (char *)(*a1)[1]);
}

void sub_2158387B8(uint64_t a1, uint64_t a2)
{
}

_DWORD *sub_2158387C8(_DWORD *a1, char *__s)
{
  uint64_t v4 = a1[6];
  if (v4 != -1) {
    ((void (*)(char *, _DWORD *))off_26C65FAC8[v4])(&v11, a1);
  }
  a1[6] = -1;
  size_t v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    size_t v7 = operator new(v8 + 1);
    *((void *)a1 + 1) = v6;
    *((void *)a1 + 2) = v9 | 0x8000000000000000;
    *(void *)a1 = v7;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v5;
    size_t v7 = a1;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_2158388BC(uint64_t *a1, uint64_t a2)
{
  v18[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *a1;
  *(void *)((char *)v18 + 7) = *(void *)(a2 + 15);
  uint64_t v3 = *(void **)a2;
  v18[0] = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 23);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  char v13 = v3;
  *(void *)uint64_t v14 = v18[0];
  *(void *)&v14[7] = *(void *)((char *)v18 + 7);
  char v15 = v4;
  memset(v18, 0, 15);
  size_t v5 = __p;
  size_t v6 = (const char *)a1[1];
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  uint64_t v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    uint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v10 = v7 | 7;
    }
    uint64_t v11 = v10 + 1;
    size_t v5 = operator new(v10 + 1);
    __p[1] = v8;
    unint64_t v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((unsigned char *)v8 + (void)v5) = 0;
    uint64_t v9 = *(unsigned int *)(v2 + 24);
    if (v9 == -1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7) {
    goto LABEL_9;
  }
  LOBYTE(__p[0]) = 0;
  uint64_t v9 = *(unsigned int *)(v2 + 24);
  if (v9 != -1) {
LABEL_10:
  }
    ((void (*)(char *, uint64_t))off_26C65FAC8[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_21573A150((void *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0) {
    goto LABEL_15;
  }
}

void sub_215838A74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2) {
    sub_215731D80(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_215838AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(const char **)(*(void *)a1 + 32);
  char v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(void *)(a2 + 16))
  {
    uint64_t result = sub_215838BB4((void **)a2, v3);
    *(void *)(a2 + 8) = result;
    return result;
  }
  size_t v5 = strlen(*(const char **)(*(void *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v9 = v5 | 7;
    }
    uint64_t v10 = v9 + 1;
    size_t v7 = operator new(v9 + 1);
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v10 | 0x8000000000000000;
    *(void *)char v4 = v7;
  }
  else
  {
    v4[23] = v5;
    size_t v7 = v4;
    if (!v5) {
      goto LABEL_11;
    }
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((unsigned char *)v7 + v6) = 0;
  uint64_t result = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  *(void *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_215838BAC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_215838BB4(void **a1, const char *a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_215738AC0();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_215738AD8();
    }
    size_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  int v21 = v8;
  uint64_t v22 = v8;
  uint64_t v23 = &v7[24 * v6];
  size_t v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_215731CD8();
  }
  size_t v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v15 = v9 | 7;
    }
    uint64_t v16 = v15 + 1;
    unint64_t v17 = (char *)operator new(v15 + 1);
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v16 | 0x8000000000000000;
    *(void *)uint64_t v8 = v17;
    uint64_t v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      char *v8 = 0;
      uint64_t v11 = v8;
      char v12 = v8 + 24;
      char v13 = (void **)*a1;
      uint64_t v14 = (void **)a1[1];
      if (v14 == *a1) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  uint64_t v11 = v21;
  char v12 = v22 + 24;
  char v13 = (void **)*a1;
  uint64_t v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    long long v18 = *(_OWORD *)(v14 - 3);
    *((void *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  uint64_t v14 = (void **)*a1;
  size_t v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0) {
      operator delete(*(v19 - 3));
    }
    v19 -= 3;
  }
LABEL_27:
  if (v14) {
    operator delete(v14);
  }
  return v12;
}

void sub_215838DB4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_215739038((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_215838DC8(uint64_t **a1, const void **a2, uint64_t a3)
{
  unint64_t v6 = a1 + 1;
  size_t v5 = a1[1];
  if (!v5)
  {
    size_t v10 = a1 + 1;
    goto LABEL_29;
  }
  int v7 = *((char *)a2 + 23);
  if (v7 >= 0) {
    uint64_t v8 = a2;
  }
  else {
    uint64_t v8 = *a2;
  }
  if (v7 >= 0) {
    size_t v9 = (const void *)*((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v9 = a2[1];
  }
  do
  {
    while (1)
    {
      size_t v10 = (uint64_t **)v5;
      uint64_t v13 = v5[4];
      uint64_t v11 = v5 + 4;
      char v12 = (void *)v13;
      int v14 = *((char *)v11 + 23);
      uint64_t v15 = v14 >= 0 ? v11 : v12;
      uint64_t v16 = v14 >= 0 ? (const void *)*((unsigned __int8 *)v11 + 23) : (const void *)v11[1];
      size_t v17 = (size_t)(v16 >= v9 ? v9 : v16);
      int v18 = memcmp(v8, v15, v17);
      if (v18) {
        break;
      }
      if (v9 >= v16) {
        goto LABEL_22;
      }
LABEL_8:
      size_t v5 = *v10;
      unint64_t v6 = v10;
      if (!*v10) {
        goto LABEL_29;
      }
    }
    if (v18 < 0) {
      goto LABEL_8;
    }
LABEL_22:
    int v19 = memcmp(v15, v8, v17);
    if (v19)
    {
      if ((v19 & 0x80000000) == 0) {
        return v10;
      }
    }
    else if (v16 >= v9)
    {
      return v10;
    }
    size_t v5 = v10[1];
  }
  while (v5);
  unint64_t v6 = v10 + 1;
LABEL_29:
  BOOL v20 = (uint64_t *)v10;
  size_t v10 = (uint64_t **)operator new(0x40uLL);
  *((_OWORD *)v10 + 2) = *(_OWORD *)a3;
  void v10[6] = *(uint64_t **)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *((unsigned char *)v10 + 56) = *(unsigned char *)(a3 + 24);
  uint64_t *v10 = 0;
  v10[1] = 0;
  uint64_t v10[2] = v20;
  const char *v6 = (uint64_t *)v10;
  int v21 = (uint64_t *)**a1;
  uint64_t v22 = (uint64_t *)v10;
  if (v21)
  {
    *a1 = v21;
    uint64_t v22 = *v6;
  }
  sub_21573B048(a1[1], v22);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v10;
}

void sub_215838F34(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1 > 0xDu)
  {
LABEL_3:
    sub_215E10780((uint64_t)a1, &v5);
    if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
      sub_215738B0C(&__p, v5.__r_.__value_.__l.__data_, v5.__r_.__value_.__l.__size_);
    }
    else {
      std::string __p = v5;
    }
    char v7 = 1;
    LOBYTE(v8) = 0;
    char v12 = 0;
    char v13 = 1;
    sub_215742878(a2, 5u, (long long *)&__p);
    if (!v13) {
      goto LABEL_13;
    }
    if (v12)
    {
      if ((v11 & 0x80000000) == 0)
      {
        if ((v9 & 0x80000000) == 0) {
          goto LABEL_10;
        }
LABEL_16:
        operator delete(v8);
        if (v7)
        {
LABEL_11:
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
LABEL_13:
        if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v5.__r_.__value_.__l.__data_);
        }
        return;
      }
      operator delete(v10);
      if (v9 < 0) {
        goto LABEL_16;
      }
    }
LABEL_10:
    if (v7) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  switch(*a1)
  {
    case 1u:
    case 4u:
    case 8u:
    case 0xCu:
    case 0xDu:
      goto LABEL_3;
    case 2u:
      unsigned int v3 = 14;
      break;
    case 3u:
      unsigned int v3 = 4;
      break;
    case 5u:
      unsigned int v3 = 15;
      break;
    case 6u:
      unsigned int v3 = 16;
      break;
    case 7u:
      unsigned int v3 = 31;
      break;
    case 9u:
      unsigned int v3 = 19;
      break;
    case 0xAu:
      unsigned int v3 = 20;
      break;
    case 0xBu:
      unsigned int v3 = 21;
      break;
    default:
      unsigned int v3 = 0;
      break;
  }
  if (a1[112]) {
    unint64_t v4 = (long long *)(a1 + 16);
  }
  else {
    unint64_t v4 = (long long *)&unk_215EF9F28;
  }
  sub_2158391B4(__dst, v4);
  sub_215742878(a2, v3, (long long *)__dst);
  if (v22)
  {
    if (v21)
    {
      if (v20 < 0) {
        operator delete(v19);
      }
      if (v18 < 0) {
        operator delete(v17);
      }
    }
    if (v16 && v15 < 0) {
      operator delete(__dst[0]);
    }
  }
}

void sub_215839140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_2158391B4(unsigned char *__dst, long long *a2)
{
  *long long __dst = 0;
  __dst[96] = 0;
  if (*((unsigned char *)a2 + 24))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_215738B0C(__dst, *(void **)a2, *((void *)a2 + 1));
    }
    else
    {
      long long v3 = *a2;
      *((void *)__dst + 2) = *((void *)a2 + 2);
      *(_OWORD *)long long __dst = v3;
    }
    __dst[24] = 1;
    __dst[32] = 0;
    __dst[88] = 0;
    __dst[96] = 1;
  }
  return __dst;
}

void sub_215839228(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 96))
  {
    if (*(unsigned char *)(v1 + 88))
    {
      if (*(char *)(v1 + 87) < 0) {
        operator delete(*(void **)(v1 + 64));
      }
      if (*(char *)(v1 + 55) < 0) {
        operator delete(*(void **)(v1 + 32));
      }
    }
    if (*(unsigned char *)(v1 + 24))
    {
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_21583927C(uint64_t a1@<X8>)
{
  sub_2157CFEA8((uint64_t)__p, "Invalid VZEnableState 'VZEnableStateInherit'");
  char v10 = 1;
  sub_21573FCF8(0x1Eu, (long long *)__p, a1);
  if (v10)
  {
    if (!v9) {
      goto LABEL_5;
    }
    if (v8 < 0)
    {
      operator delete(v7);
      if ((v6 & 0x80000000) == 0)
      {
LABEL_5:
        if (!v4) {
          return;
        }
        goto LABEL_6;
      }
    }
    else if ((v6 & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v5);
    if (!v4) {
      return;
    }
LABEL_6:
    if (v3 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_215839328(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21573FE74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_215839340(uint64_t a1, uint64_t *a2, size_t a3)
{
  *(void *)a1 = &unk_26C65FB98;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  v10[0] = (size_t)&unk_26C665220;
  sub_215D92C68(a2, (uint64_t)&v11);
  *(void *)(a1 + 24) = &unk_26C663A60;
  *(_OWORD *)(a1 + 32) = v12[0];
  *(_OWORD *)(a1 + 44) = *(_OWORD *)((char *)v12 + 12);
  uint64_t v5 = v14;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v15;
  *(_OWORD *)(a1 + 88) = v16;
  *(_DWORD *)(a1 + 104) = 1;
  if (*(_DWORD *)(a1 + 12)) {
    BOOL v6 = *(_DWORD *)(a1 + 8) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v6) {
    uint64_t v7 = 0;
  }
  uint64_t v11 = v5;
  *(void *)&v12[0] = v7;
  *((void *)&v12[0] + 1) = v8;
  if (HIDWORD(v7) * HIDWORD(v8) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  v10[0] = a3;
  v10[1] = (size_t)&v11;
  sub_21584F0C8(v10);
  return a1;
}

void sub_21583949C(_Unwind_Exception *a1)
{
  sub_2158394B0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158394B0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 104);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v2 = *(void (**)(void, void))(a1 + 40);
  if (!v2 || (v2(*(void *)(a1 + 32), *(void *)(a1 + 24)), LODWORD(v2) = *(_DWORD *)(a1 + 104), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661348[v2])(&v4, a1 + 24);
LABEL_7:
  *(_DWORD *)(a1 + 104) = -1;
  return a1;
}

uint64_t sub_215839534(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 104);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v2 = *(void (**)(void, void))(a1 + 40);
  if (!v2 || (v2(*(void *)(a1 + 32), *(void *)(a1 + 24)), LODWORD(v2) = *(_DWORD *)(a1 + 104), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661348[v2])(&v4, a1 + 24);
LABEL_7:
  *(_DWORD *)(a1 + 104) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C406B89191FLL);
}

uint64_t sub_2158395CC()
{
  return 1;
}

uint64_t (***sub_2158395D4())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215839650()
{
}

void sub_21583970C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 104);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661348[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 104) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C406B89191FLL);
  _Unwind_Resume(a1);
}

size_t *sub_215839760(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (size_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C660F88, 0);
  if (result)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(result + 1);
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    uint64_t v7 = *((unsigned int *)result + 26);
    if (v6 != -1)
    {
      if (v7 == -1)
      {
        uint64_t result = (size_t *)((uint64_t (*)(long long *, uint64_t))off_26C661348[v6])(&v16, a1 + 24);
        *(_DWORD *)(a1 + 104) = -1;
        return result;
      }
LABEL_10:
      *(void *)&long long v16 = a1 + 24;
      return (size_t *)((uint64_t (*)(long long *))off_26C6637D0[v7])(&v16);
    }
    if (v7 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v15, lpsrc, 1);
    uint64_t v8 = *(void *)(v15[0] + 16);
    long long v16 = *(_OWORD *)v15[0];
    uint64_t v17 = v8;
    v15[0] = 0;
    MEMORY[0x2166C4D20]();
    int v9 = *(_DWORD *)(a1 + 104);
    if (v9 == 1)
    {
      char v10 = (uint64_t *)(a1 + 72);
    }
    else
    {
      if (v9) {
        sub_215742D4C();
      }
      char v10 = (uint64_t *)(a1 + 24);
    }
    uint64_t v11 = *v10;
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v12 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v12 = 1;
    }
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = *(void *)(a1 + 16);
    if (v12) {
      uint64_t v13 = 0;
    }
    v15[0] = v11;
    v15[1] = v13;
    v15[2] = v14;
    if (HIDWORD(v13) * HIDWORD(v14) == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    v18[0] = (size_t)&v16;
    v18[1] = (size_t)v15;
    return sub_21584F0C8(v18);
  }
  return result;
}

uint64_t sub_21583995C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 104);
  if (v1 == 1) {
    return *(void *)(a1 + 72);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 24);
}

void sub_21583999C(uint64_t a1, int a2)
{
  if (a2 == 1
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 104) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v3 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v3) {
      int v6 = 0;
    }
    else {
      int v6 = HIDWORD(v4);
    }
    if (v6 * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

void sub_215839ABC(uint64_t a1, int a2)
{
  if (a2 == 1
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 104) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v3 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v3) {
      int v6 = 0;
    }
    else {
      int v6 = HIDWORD(v4);
    }
    if (v6 * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215839BE0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  *(void *)a1 = &unk_26C65FC18;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  sub_215D92EA0(a2, (uint64_t)&v10);
  *(void *)(a1 + 24) = &unk_26C663AE0;
  *(_OWORD *)(a1 + 32) = v11[0];
  *(_OWORD *)(a1 + 44) = *(_OWORD *)((char *)v11 + 12);
  uint64_t v5 = v13;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 88) = v15;
  *(_DWORD *)(a1 + 104) = 1;
  if (*(_DWORD *)(a1 + 12)) {
    BOOL v6 = *(_DWORD *)(a1 + 8) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v6) {
    uint64_t v7 = 0;
  }
  uint64_t v10 = v5;
  *(void *)&v11[0] = v7;
  *((void *)&v11[0] + 1) = v8;
  if (HIDWORD(v7) * HIDWORD(v8) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21584FC70(a3, (uint64_t)&v10);
  return a1;
}

void sub_215839D30(_Unwind_Exception *a1)
{
  sub_215839D44(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215839D44(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 104);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v2 = *(void (**)(void, void))(a1 + 40);
  if (!v2 || (v2(*(void *)(a1 + 32), *(void *)(a1 + 24)), LODWORD(v2) = *(_DWORD *)(a1 + 104), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661368[v2])(&v4, a1 + 24);
LABEL_7:
  *(_DWORD *)(a1 + 104) = -1;
  return a1;
}

uint64_t sub_215839DC8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 104);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v2 = *(void (**)(void, void))(a1 + 40);
  if (!v2 || (v2(*(void *)(a1 + 32), *(void *)(a1 + 24)), LODWORD(v2) = *(_DWORD *)(a1 + 104), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661368[v2])(&v4, a1 + 24);
LABEL_7:
  *(_DWORD *)(a1 + 104) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C406B89191FLL);
}

uint64_t sub_215839E60()
{
  return 2;
}

uint64_t (***sub_215839E68())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215839EE4()
{
}

void sub_215839FA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 104);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661368[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 104) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C406B89191FLL);
  _Unwind_Resume(a1);
}

uint64_t *sub_215839FF4(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (uint64_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C660FA0, 0);
  if (result)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(result + 1);
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    uint64_t v7 = *((unsigned int *)result + 26);
    if (v6 != -1)
    {
      if (v7 == -1)
      {
        uint64_t result = (uint64_t *)((uint64_t (*)(long long *, uint64_t))off_26C661368[v6])(&v16, a1 + 24);
        *(_DWORD *)(a1 + 104) = -1;
        return result;
      }
LABEL_10:
      *(void *)&long long v16 = a1 + 24;
      return (uint64_t *)((uint64_t (*)(long long *))off_26C6637E0[v7])(&v16);
    }
    if (v7 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v15, lpsrc, 2);
    uint64_t v8 = *(void *)(v15[0] + 16);
    long long v16 = *(_OWORD *)v15[0];
    uint64_t v17 = v8;
    v15[0] = 0;
    MEMORY[0x2166C4D20]();
    int v9 = *(_DWORD *)(a1 + 104);
    if (v9 == 1)
    {
      uint64_t v10 = (uint64_t *)(a1 + 72);
    }
    else
    {
      if (v9) {
        sub_215742D4C();
      }
      uint64_t v10 = (uint64_t *)(a1 + 24);
    }
    uint64_t v11 = *v10;
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v12 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v12 = 1;
    }
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = *(void *)(a1 + 16);
    if (v12) {
      uint64_t v13 = 0;
    }
    v15[0] = v11;
    v15[1] = v13;
    v15[2] = v14;
    if (HIDWORD(v13) * HIDWORD(v14) == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    return sub_21584FC70((uint64_t *)&v16, (uint64_t)v15);
  }
  return result;
}

uint64_t sub_21583A1E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 104);
  if (v1 == 1) {
    return *(void *)(a1 + 72);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 24);
}

void sub_21583A228(uint64_t a1, int a2)
{
  if (a2 == 2
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 104) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v3 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v3) {
      int v6 = 0;
    }
    else {
      int v6 = HIDWORD(v4);
    }
    if (v6 * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

void sub_21583A348(uint64_t a1, int a2)
{
  if (a2 == 2
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 104) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v3 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v3) {
      int v6 = 0;
    }
    else {
      int v6 = HIDWORD(v4);
    }
    if (v6 * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583A46C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)a1 = &unk_26C65FC98;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  v11[0] = (uint64_t)&unk_26C665280;
  sub_215D930F0(a2, (uint64_t)&v12);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(void *)(a1 + 24) = &unk_26C663B60;
  *(_OWORD *)(a1 + 32) = v13[0];
  *(_OWORD *)(a1 + 44) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(a1 + 64) = v14;
  *(void *)(a1 + 80) = v15;
  long long v14 = 0uLL;
  *(_OWORD *)(a1 + 88) = v16;
  *(_DWORD *)(a1 + 104) = 1;
  sub_215D7D7C4((uint64_t)&v12);
  int v6 = *(_DWORD *)(a1 + 104);
  if (v6)
  {
    if (v6 != 1) {
      sub_215742D4C();
    }
    uint64_t v5 = (uint64_t *)(a1 + 72);
  }
  if (*(_DWORD *)(a1 + 12)) {
    BOOL v7 = *(_DWORD *)(a1 + 8) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v7) {
    uint64_t v8 = 0;
  }
  uint64_t v12 = *v5;
  *(void *)&v13[0] = v8;
  *((void *)&v13[0] + 1) = v9;
  if (HIDWORD(v8) * HIDWORD(v9) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  v11[0] = a3;
  v11[1] = (uint64_t)&v12;
  sub_2158A12BC(v11);
  return a1;
}

void sub_21583A5F4(_Unwind_Exception *a1)
{
  sub_21583A608(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21583A608(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 104);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v2 = *(void (**)(void, void))(a1 + 40);
  if (!v2 || (v2(*(void *)(a1 + 32), *(void *)(a1 + 24)), LODWORD(v2) = *(_DWORD *)(a1 + 104), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661388[v2])(&v4, a1 + 24);
LABEL_7:
  *(_DWORD *)(a1 + 104) = -1;
  return a1;
}

uint64_t sub_21583A68C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 104);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v2 = *(void (**)(void, void))(a1 + 40);
  if (!v2 || (v2(*(void *)(a1 + 32), *(void *)(a1 + 24)), LODWORD(v2) = *(_DWORD *)(a1 + 104), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661388[v2])(&v4, a1 + 24);
LABEL_7:
  *(_DWORD *)(a1 + 104) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C406B89191FLL);
}

uint64_t sub_21583A724()
{
  return 3;
}

uint64_t (***sub_21583A72C())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583A7A8()
{
}

void sub_21583A864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 104);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661388[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 104) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C406B89191FLL);
  _Unwind_Resume(a1);
}

double sub_21583A8B8(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C660FB8, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v7 = *(unsigned int *)(a1 + 104);
    uint64_t v8 = *((unsigned int *)v5 + 26);
    if (v7 == -1)
    {
      if (v8 == -1) {
        return *(double *)&v6;
      }
    }
    else if (v8 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C661388[v7])(&v18, a1 + 24);
      *(_DWORD *)(a1 + 104) = -1;
      return *(double *)&v6;
    }
    *(void *)&long long v18 = a1 + 24;
    ((void (*)(long long *))off_26C6637F0[v8])(&v18);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v17, lpsrc, 3);
    uint64_t v9 = *(void *)(v17[0] + 16);
    long long v18 = *(_OWORD *)v17[0];
    uint64_t v19 = v9;
    v17[0] = 0;
    MEMORY[0x2166C4D20]();
    int v10 = *(_DWORD *)(a1 + 104);
    if (v10 == 1)
    {
      uint64_t v11 = (uint64_t *)(a1 + 72);
    }
    else
    {
      if (v10) {
        sub_215742D4C();
      }
      uint64_t v11 = (uint64_t *)(a1 + 24);
    }
    uint64_t v12 = *v11;
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v13 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v13 = 1;
    }
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = *(void *)(a1 + 16);
    if (v13) {
      uint64_t v14 = 0;
    }
    v17[0] = v12;
    v17[1] = v14;
    uint64_t v17[2] = v15;
    if (HIDWORD(v14) * HIDWORD(v15) == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    v20[0] = (uint64_t)&v18;
    v20[1] = (uint64_t)v17;
    *(void *)&long long v6 = sub_2158A12BC(v20);
  }
  return *(double *)&v6;
}

uint64_t sub_21583AAB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 104);
  if (v1 == 1) {
    return *(void *)(a1 + 72);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 24);
}

void sub_21583AAF4(uint64_t a1, int a2)
{
  if (a2 == 3
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 104) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v3 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v3) {
      int v6 = 0;
    }
    else {
      int v6 = HIDWORD(v4);
    }
    if (v6 * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

void sub_21583AC14(uint64_t a1, int a2)
{
  if (a2 == 3
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 104) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v3 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v3) {
      int v6 = 0;
    }
    else {
      int v6 = HIDWORD(v4);
    }
    if (v6 * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583AD38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)a1 = &unk_26C65FD18;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  sub_215D93398(a2, (uint64_t)&v10);
  *(void *)(a1 + 24) = &unk_26C663BE0;
  *(_OWORD *)(a1 + 32) = v11[0];
  *(_OWORD *)(a1 + 44) = *(_OWORD *)((char *)v11 + 12);
  uint64_t v5 = v13;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v14;
  *(_OWORD *)(a1 + 88) = v15;
  *(_DWORD *)(a1 + 104) = 1;
  if (*(_DWORD *)(a1 + 12)) {
    BOOL v6 = *(_DWORD *)(a1 + 8) == 0;
  }
  else {
    BOOL v6 = 1;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v6) {
    uint64_t v7 = 0;
  }
  uint64_t v10 = v5;
  *(void *)&v11[0] = v7;
  *((void *)&v11[0] + 1) = v8;
  if (HIDWORD(v7) * HIDWORD(v8) == -1
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21585114C(a3, (uint64_t)&v10);
  return a1;
}

void sub_21583AE88(_Unwind_Exception *a1)
{
  sub_21583AE9C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21583AE9C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 104);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v2 = *(void (**)(void, void))(a1 + 40);
  if (!v2 || (v2(*(void *)(a1 + 32), *(void *)(a1 + 24)), LODWORD(v2) = *(_DWORD *)(a1 + 104), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6613A8[v2])(&v4, a1 + 24);
LABEL_7:
  *(_DWORD *)(a1 + 104) = -1;
  return a1;
}

uint64_t sub_21583AF20(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 104);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v2 = *(void (**)(void, void))(a1 + 40);
  if (!v2 || (v2(*(void *)(a1 + 32), *(void *)(a1 + 24)), LODWORD(v2) = *(_DWORD *)(a1 + 104), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6613A8[v2])(&v4, a1 + 24);
LABEL_7:
  *(_DWORD *)(a1 + 104) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C406B89191FLL);
}

uint64_t sub_21583AFB8()
{
  return 4;
}

uint64_t (***sub_21583AFC0())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583B03C()
{
}

void sub_21583B0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 104);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6613A8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 104) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C406B89191FLL);
  _Unwind_Resume(a1);
}

float sub_21583B14C(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C660FD0, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v7 = *(unsigned int *)(a1 + 104);
    uint64_t v8 = *((unsigned int *)v5 + 26);
    if (v7 == -1)
    {
      if (v8 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v8 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C6613A8[v7])(&v18, a1 + 24);
      *(_DWORD *)(a1 + 104) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v18 = a1 + 24;
    ((void (*)(long long *))off_26C663800[v8])(&v18);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v17, lpsrc, 4);
    uint64_t v9 = *(void *)(v17[0] + 16);
    long long v18 = *(_OWORD *)v17[0];
    uint64_t v19 = v9;
    v17[0] = 0;
    MEMORY[0x2166C4D20]();
    int v10 = *(_DWORD *)(a1 + 104);
    if (v10 == 1)
    {
      uint64_t v11 = (uint64_t *)(a1 + 72);
    }
    else
    {
      if (v10) {
        sub_215742D4C();
      }
      uint64_t v11 = (uint64_t *)(a1 + 24);
    }
    uint64_t v12 = *v11;
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v13 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v13 = 1;
    }
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = *(void *)(a1 + 16);
    if (v13) {
      uint64_t v14 = 0;
    }
    v17[0] = v12;
    v17[1] = v14;
    uint64_t v17[2] = v15;
    if (HIDWORD(v14) * HIDWORD(v15) == -1
      && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      abort();
    }
    *(float *)&long long v6 = sub_21585114C((uint64_t)&v18, (uint64_t)v17);
  }
  return *(float *)&v6;
}

uint64_t sub_21583B340(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 104);
  if (v1 == 1) {
    return *(void *)(a1 + 72);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 24);
}

void sub_21583B380(uint64_t a1, int a2)
{
  if (a2 == 4
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 104) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v3 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v3) {
      int v6 = 0;
    }
    else {
      int v6 = HIDWORD(v4);
    }
    if (v6 * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

void sub_21583B4A0(uint64_t a1, int a2)
{
  if (a2 == 4
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 104) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 12)) {
      BOOL v3 = *(_DWORD *)(a1 + 8) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    if (v3) {
      int v6 = 0;
    }
    else {
      int v6 = HIDWORD(v4);
    }
    if (v6 * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583B5C4(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 160);
  if (v2 == 1)
  {
    BOOL v3 = (uint64_t *)(a2 + 120);
  }
  else
  {
    if (v2) {
      sub_215742D4C();
    }
    BOOL v3 = (uint64_t *)(a2 + 48);
  }
  uint64_t v4 = *v3;
  if (*(_DWORD *)(a2 + 16)) {
    BOOL v5 = *(_DWORD *)(a2 + 12) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  BOOL v6 = v5 || *(_DWORD *)(a2 + 8) == 0;
  uint64_t v7 = *(void *)(a2 + 12);
  if (v6) {
    uint64_t v7 = 0;
  }
  LODWORD(v9) = 2;
  DWORD1(v9) = v7;
  uint64_t v8 = v9;
  LODWORD(v9) = 1;
  *(void *)((char *)&v9 + 4) = *(void *)(a2 + 24);
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = v8;
  *(_DWORD *)(result + 16) = HIDWORD(v7);
  *(void *)(result + 20) = v9;
  *(_DWORD *)(result + 28) = DWORD2(v9);
  *(void *)(result + 32) = v7;
  *(void *)(result + 40) = *(void *)((char *)&v9 + 4);
  if (DWORD2(v9) * HIDWORD(v7) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  return result;
}

uint64_t sub_21583B6F4(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6613C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583B778(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6613C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583B810()
{
  return 5;
}

uint64_t (***sub_21583B818())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583B894()
{
}

void sub_21583B960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6613C8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

size_t *sub_21583B9B4(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (size_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C660FE8, 0);
  if (!result)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 5);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583B5C4((uint64_t)v13, a1);
    v15[0] = (size_t)v14;
    v15[1] = (size_t)v13;
    return sub_2158A24F4(v15);
  }
  long long v6 = *(_OWORD *)(result + 1);
  long long v7 = *(_OWORD *)(result + 3);
  *(void *)(a1 + 40) = result[5];
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)result + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      uint64_t result = (size_t *)((uint64_t (*)(_OWORD *, uint64_t))off_26C6613C8[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return result;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    return (size_t *)((uint64_t (*)(_OWORD *))off_26C663810[v9])(v14);
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_21583BB38(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583BB78(uint64_t a1, int a2)
{
  if (a2 != 5
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583B5C4((uint64_t)&v3, a1);
  operator new();
}

void sub_21583BC24(uint64_t a1, int a2)
{
  if (a2 == 5
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583BDE0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6613E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583BE64(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6613E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583BEFC()
{
  return 6;
}

uint64_t (***sub_21583BF04())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583BF80()
{
}

void sub_21583C04C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6613E8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

uint64_t *sub_21583C0A0(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (uint64_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661000, 0);
  if (!result)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 6);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583B5C4((uint64_t)v13, a1);
    v15[0] = (uint64_t)v14;
    v15[1] = (uint64_t)v13;
    return sub_2158A307C(v15);
  }
  long long v6 = *(_OWORD *)(result + 1);
  long long v7 = *(_OWORD *)(result + 3);
  *(void *)(a1 + 40) = result[5];
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)result + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      uint64_t result = (uint64_t *)((uint64_t (*)(_OWORD *, uint64_t))off_26C6613E8[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return result;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    return (uint64_t *)((uint64_t (*)(_OWORD *))off_26C663820[v9])(v14);
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_21583C224(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583C264(uint64_t a1, int a2)
{
  if (a2 != 6
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583B5C4((uint64_t)&v3, a1);
  operator new();
}

void sub_21583C310(uint64_t a1, int a2)
{
  if (a2 == 6
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583C4CC(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661408[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583C550(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661408[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583C5E8()
{
  return 7;
}

uint64_t (***sub_21583C5F0())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583C66C()
{
}

void sub_21583C738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661408[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21583C78C(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661018, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 7);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583B5C4((uint64_t)v13, a1);
    v15[0] = (uint64_t)v14;
    v15[1] = (uint64_t)v13;
    sub_2158A3B98(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661408[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C663830[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_21583C910(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583C950(uint64_t a1, int a2)
{
  if (a2 != 7
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583B5C4((uint64_t)&v3, a1);
  operator new();
}

void sub_21583C9FC(uint64_t a1, int a2)
{
  if (a2 == 7
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583CBB8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661428[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583CC3C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661428[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583CCD4()
{
  return 8;
}

uint64_t (***sub_21583CCDC())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583CD58()
{
}

void sub_21583CE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661428[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21583CE78(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661030, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 8);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583B5C4((uint64_t)v13, a1);
    v15[0] = (uint64_t)v14;
    v15[1] = (uint64_t)v13;
    sub_2158A4CE8(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661428[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C663840[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_21583CFFC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583D03C(uint64_t a1, int a2)
{
  if (a2 != 8
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583B5C4((uint64_t)&v3, a1);
  operator new();
}

void sub_21583D0E8(uint64_t a1, int a2)
{
  if (a2 == 8
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583D2A4(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 160);
  if (v2 == 1)
  {
    BOOL v3 = (uint64_t *)(a2 + 120);
  }
  else
  {
    if (v2) {
      sub_215742D4C();
    }
    BOOL v3 = (uint64_t *)(a2 + 48);
  }
  uint64_t v4 = *v3;
  if (*(_DWORD *)(a2 + 16)) {
    BOOL v5 = *(_DWORD *)(a2 + 12) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  BOOL v6 = v5 || *(_DWORD *)(a2 + 8) == 0;
  uint64_t v7 = *(void *)(a2 + 12);
  if (v6) {
    uint64_t v7 = 0;
  }
  LODWORD(v9) = 3;
  DWORD1(v9) = v7;
  uint64_t v8 = v9;
  LODWORD(v9) = 1;
  *(void *)((char *)&v9 + 4) = *(void *)(a2 + 24);
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = v8;
  *(_DWORD *)(result + 16) = HIDWORD(v7);
  *(void *)(result + 20) = v9;
  *(_DWORD *)(result + 28) = DWORD2(v9);
  *(void *)(result + 32) = v7;
  *(void *)(result + 40) = *(void *)((char *)&v9 + 4);
  if (DWORD2(v9) * HIDWORD(v7) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  return result;
}

uint64_t sub_21583D3D4(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C65FF98;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D94674(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C663E60;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v11, a1);
  v8[0] = (size_t)a3;
  v8[1] = (size_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158A2610(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A57D4((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21583D53C(_Unwind_Exception *a1)
{
  sub_21583D550(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21583D550(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661448[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583D5D4(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661448[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583D66C()
{
  return 9;
}

uint64_t (***sub_21583D674())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583D6F0()
{
}

void sub_21583D7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661448[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

size_t *sub_21583D810(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (size_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661048, 0);
  if (result)
  {
    long long v6 = *(_OWORD *)(result + 1);
    long long v7 = *(_OWORD *)(result + 3);
    *(void *)(a1 + 40) = result[5];
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)result + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        uint64_t result = (size_t *)((uint64_t (*)(long long *, uint64_t))off_26C661448[v8])(&v29, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return result;
      }
LABEL_10:
      *(void *)&long long v29 = a1 + 48;
      return (size_t *)((uint64_t (*)(long long *))off_26C663850[v9])(&v29);
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v25, lpsrc, 9);
    long long v11 = *(_OWORD *)(v25[0] + 16);
    long long v10 = *(_OWORD *)(v25[0] + 32);
    long long v29 = *(_OWORD *)v25[0];
    long long v30 = v11;
    long long v31 = v10;
    v25[0] = 0;
    MEMORY[0x2166C4D20]();
    uint64_t result = (size_t *)sub_21583D2A4((uint64_t)v25, a1);
    v32[0] = (size_t)&v29;
    v32[1] = (size_t)v25;
    if (DWORD1(v30) == 1 && v26 == 1)
    {
      return sub_2158A2610(v32);
    }
    else if (DWORD2(v29) && HIDWORD(v29) && v30)
    {
      int v12 = HIDWORD(v29) - 1;
      uint64_t v13 = DWORD2(v30);
      uint64_t v14 = v27;
      uint64_t v15 = (unsigned char *)v29;
      uint64_t v16 = (unsigned char *)v25[0];
      int v17 = v30 - 1;
      if (v30 != 1)
      {
        uint64_t v18 = v28;
        uint64_t v19 = HIDWORD(v30);
        if (HIDWORD(v29) == 1)
        {
          do
          {
            *uint64_t v16 = *v15;
            v16[1] = v15[1];
            _OWORD v16[2] = v15[2];
            v15 += v19;
            v16 += v18;
            --v17;
          }
          while (v17);
        }
        else
        {
          int v20 = 0;
          uint64_t v21 = v25[0] + 2;
          uint64_t result = (size_t *)(v29 + 2);
          do
          {
            char v22 = result;
            uint64_t v23 = (unsigned char *)v21;
            int v24 = v12;
            do
            {
              *(v23 - 2) = *((unsigned char *)v22 - 2);
              *(v23 - 1) = *((unsigned char *)v22 - 1);
              *uint64_t v23 = *(unsigned char *)v22;
              v23 += v14;
              char v22 = (size_t *)((char *)v22 + v13);
              --v24;
            }
            while (v24);
            *(v23 - 2) = *((unsigned char *)v22 - 2);
            *(v23 - 1) = *((unsigned char *)v22 - 1);
            *uint64_t v23 = *(unsigned char *)v22;
            v15 += v19;
            v16 += v18;
            ++v20;
            v21 += v18;
            uint64_t result = (size_t *)((char *)result + v19);
          }
          while (v20 != v17);
        }
      }
      for (; v12; --v12)
      {
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        _OWORD v16[2] = v15[2];
        v15 += v13;
        v16 += v14;
      }
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
    }
  }
  return result;
}

uint64_t sub_21583DAE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583DB24(uint64_t a1, int a2)
{
  if (a2 != 9
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_21583DBD0(uint64_t a1, int a2)
{
  if (a2 == 9
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583DD8C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660018;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D94B80(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C663EE0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158530CC(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      long long v10 = &v9;
      sub_2158A5CC4((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21583DEF4(_Unwind_Exception *a1)
{
  sub_21583DF08(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21583DF08(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661468[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583DF8C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661468[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583E024()
{
  return 10;
}

uint64_t (***sub_21583E02C())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583E0A8()
{
}

void sub_21583E174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661468[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

uint64_t *sub_21583E1C8(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (uint64_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661060, 0);
  if (!result)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v26, lpsrc, 10);
    long long v11 = *(_OWORD *)(v26[0] + 16);
    long long v10 = *(_OWORD *)(v26[0] + 32);
    long long v30 = *(_OWORD *)v26[0];
    long long v31 = v11;
    long long v32 = v10;
    v26[0] = 0;
    MEMORY[0x2166C4D20]();
    uint64_t result = (uint64_t *)sub_21583D2A4((uint64_t)v26, a1);
    v33[0] = (uint64_t)&v30;
    v33[1] = (uint64_t)v26;
    if (DWORD1(v31) == 1 && v27 == 1) {
      return sub_2158530CC(v33);
    }
    if (!DWORD2(v30) || !HIDWORD(v30) || !v31) {
      return result;
    }
    int v12 = HIDWORD(v30) - 1;
    uint64_t v13 = DWORD2(v31);
    uint64_t v14 = v28;
    uint64_t v15 = (_WORD *)v30;
    uint64_t v16 = (_WORD *)v26[0];
    int v17 = v31 - 1;
    if (v31 != 1)
    {
      uint64_t v18 = v29;
      uint64_t v19 = HIDWORD(v31);
      if (HIDWORD(v30) == 1)
      {
        do
        {
          *uint64_t v16 = *v15;
          v16[1] = v15[1];
          _OWORD v16[2] = v15[2];
          v15 += v19;
          v16 += v18;
          --v17;
        }
        while (v17);
LABEL_24:
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        _OWORD v16[2] = v15[2];
        return result;
      }
      int v20 = 0;
      uint64_t result = (uint64_t *)(2 * v28);
      uint64_t v21 = v26[0] + 4;
      char v22 = (_WORD *)(v30 + 4);
      do
      {
        uint64_t v23 = v22;
        int v24 = (_WORD *)v21;
        int v25 = v12;
        do
        {
          *(v24 - 2) = *(v23 - 2);
          *(v24 - 1) = *(v23 - 1);
          *int v24 = *v23;
          int v24 = (_WORD *)((char *)result + (void)v24);
          v23 += v13;
          --v25;
        }
        while (v25);
        *(v24 - 2) = *(v23 - 2);
        *(v24 - 1) = *(v23 - 1);
        *int v24 = *v23;
        v15 += v19;
        v16 += v18;
        ++v20;
        v21 += 2 * v18;
        v22 += v19;
      }
      while (v20 != v17);
    }
    for (; v12; --v12)
    {
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
      v15 += v13;
      v16 += v14;
    }
    goto LABEL_24;
  }
  long long v6 = *(_OWORD *)(result + 1);
  long long v7 = *(_OWORD *)(result + 3);
  *(void *)(a1 + 40) = result[5];
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)result + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      uint64_t result = (uint64_t *)((uint64_t (*)(long long *, uint64_t))off_26C661468[v8])(&v30, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return result;
    }
LABEL_10:
    *(void *)&long long v30 = a1 + 48;
    return (uint64_t *)((uint64_t (*)(long long *))off_26C663860[v9])(&v30);
  }
  if (v9 != -1) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_21583E4BC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583E4FC(uint64_t a1, int a2)
{
  if (a2 != 10
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_21583E5A8(uint64_t a1, int a2)
{
  if (a2 == 10
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583E764(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661488[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583E7E8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661488[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583E880()
{
  return 11;
}

uint64_t (***sub_21583E888())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583E904()
{
}

void sub_21583E9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661488[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21583EA24(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661078, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 11);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583D2A4((uint64_t)v13, a1);
    v15[0] = v14;
    v15[1] = v13;
    sub_2158A6204(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661488[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C663870[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_21583EBA8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583EBE8(uint64_t a1, int a2)
{
  if (a2 != 11
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_21583EC94(uint64_t a1, int a2)
{
  if (a2 == 11
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583EE50(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660118;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D95378(a2, (uint64_t)v9);
  *(void *)(a1 + 48) = &unk_26C663FE0;
  *(_OWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 72) = v11;
  *(_OWORD *)(a1 + 88) = v12;
  *(void *)(a1 + 104) = v13;
  *(_OWORD *)(a1 + 112) = v14;
  *(void *)(a1 + 128) = v15;
  *(void *)(a1 + 152) = v17;
  *(_OWORD *)(a1 + 136) = v16;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v9, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v9;
  if (a3[5] == 1 && HIDWORD(v10) == 1)
  {
    sub_215854ED0(v8);
    return a1;
  }
  if (!a3[2] || !a3[3] || !a3[4]) {
    return a1;
  }
  sub_2158A69C0((uint64_t)a3, (uint64_t)v9);
  return a1;
}

void sub_21583EFBC(_Unwind_Exception *a1)
{
  sub_21583EFD0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21583EFD0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6614A8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583F054(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6614A8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583F0EC()
{
  return 12;
}

uint64_t (***sub_21583F0F4())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583F170()
{
}

void sub_21583F23C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6614A8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

float sub_21583F290(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661090, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 == -1)
    {
      if (v9 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v9 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C6614A8[v8])(&v32, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v32 = a1 + 48;
    ((void (*)(long long *))off_26C663880[v9])(&v32);
    return *(float *)&v6;
  }
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v28, lpsrc, 12);
  long long v11 = *(_OWORD *)(v28[0] + 16);
  long long v10 = *(_OWORD *)(v28[0] + 32);
  long long v32 = *(_OWORD *)v28[0];
  long long v33 = v11;
  long long v34 = v10;
  v28[0] = 0;
  MEMORY[0x2166C4D20]();
  sub_21583D2A4((uint64_t)v28, a1);
  v35[0] = (uint64_t)&v32;
  v35[1] = (uint64_t)v28;
  if (DWORD1(v33) == 1 && v29 == 1)
  {
    sub_215854ED0(v35);
    return *(float *)&v6;
  }
  if (DWORD2(v32) && HIDWORD(v32) && v33)
  {
    int v12 = HIDWORD(v32) - 1;
    uint64_t v13 = DWORD2(v33);
    uint64_t v14 = v30;
    uint64_t v15 = (_DWORD *)v32;
    uint64_t v16 = (_DWORD *)v28[0];
    int v17 = v33 - 1;
    if (v33 != 1)
    {
      uint64_t v18 = v31;
      uint64_t v19 = HIDWORD(v33);
      if (HIDWORD(v32) == 1)
      {
        do
        {
          *uint64_t v16 = *v15;
          v16[1] = v15[1];
          _OWORD v16[2] = v15[2];
          v15 += v19;
          v16 += v18;
          --v17;
        }
        while (v17);
LABEL_24:
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        LODWORD(v6) = v15[2];
        _OWORD v16[2] = v6;
        return *(float *)&v6;
      }
      int v20 = 0;
      uint64_t v21 = 4 * v30;
      uint64_t v22 = v28[0] + 8;
      uint64_t v23 = (_DWORD *)(v32 + 8);
      do
      {
        int v24 = v23;
        int v25 = (_DWORD *)v22;
        int v26 = v12;
        do
        {
          *(v25 - 2) = *(v24 - 2);
          *(v25 - 1) = *(v24 - 1);
          _DWORD *v25 = *v24;
          int v25 = (_DWORD *)((char *)v25 + v21);
          v24 += v13;
          --v26;
        }
        while (v26);
        *(v25 - 2) = *(v24 - 2);
        *(v25 - 1) = *(v24 - 1);
        _DWORD *v25 = *v24;
        v15 += v19;
        v16 += v18;
        ++v20;
        v22 += 4 * v18;
        v23 += v19;
      }
      while (v20 != v17);
    }
    for (; v12; --v12)
    {
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
      v15 += v13;
      v16 += v14;
    }
    goto LABEL_24;
  }
  return *(float *)&v6;
}

uint64_t sub_21583F584(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583F5C4(uint64_t a1, int a2)
{
  if (a2 != 12
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_21583F670(uint64_t a1, int a2)
{
  if (a2 == 12
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21583F82C(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 160);
  if (v2 == 1)
  {
    BOOL v3 = (uint64_t *)(a2 + 120);
  }
  else
  {
    if (v2) {
      sub_215742D4C();
    }
    BOOL v3 = (uint64_t *)(a2 + 48);
  }
  uint64_t v4 = *v3;
  if (*(_DWORD *)(a2 + 16)) {
    BOOL v5 = *(_DWORD *)(a2 + 12) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  BOOL v6 = v5 || *(_DWORD *)(a2 + 8) == 0;
  uint64_t v7 = *(void *)(a2 + 12);
  if (v6) {
    uint64_t v7 = 0;
  }
  LODWORD(v9) = 4;
  DWORD1(v9) = v7;
  uint64_t v8 = v9;
  LODWORD(v9) = 1;
  *(void *)((char *)&v9 + 4) = *(void *)(a2 + 24);
  *(void *)uint64_t result = v4;
  *(void *)(result + 8) = v8;
  *(_DWORD *)(result + 16) = HIDWORD(v7);
  *(void *)(result + 20) = v9;
  *(_DWORD *)(result + 28) = DWORD2(v9);
  *(void *)(result + 32) = v7;
  *(void *)(result + 40) = *(void *)((char *)&v9 + 4);
  if (DWORD2(v9) * HIDWORD(v7) == -1)
  {
    uint64_t result = sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8);
    if (result) {
      abort();
    }
  }
  return result;
}

uint64_t sub_21583F95C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660198;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D956D4(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664060;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (size_t)a3;
  v8[1] = (size_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158A2610(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      long long v10 = &v9;
      sub_2158A6EF0((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21583FAC4(_Unwind_Exception *a1)
{
  sub_21583FAD8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21583FAD8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6614C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21583FB5C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6614C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21583FBF4()
{
  return 13;
}

uint64_t (***sub_21583FBFC())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21583FC78()
{
}

void sub_21583FD44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6614C8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21583FD98(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6610A8, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C6614C8[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C663890[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 13);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (size_t)&v15;
    v18[1] = (size_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158A2610(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          int v20 = &v19;
          sub_2158A6EF0((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_21583FF7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21583FFBC(uint64_t a1, int a2)
{
  if (a2 != 13
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_215840068(uint64_t a1, int a2)
{
  if (a2 == 13
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215840224(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660218;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D95BF0(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C6640E0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158530CC(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A7430((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21584038C(_Unwind_Exception *a1)
{
  sub_2158403A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158403A0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6614E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215840424(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6614E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_2158404BC()
{
  return 14;
}

uint64_t (***sub_2158404C4())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215840540()
{
}

void sub_21584060C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6614E8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_215840660(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6610C0, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C6614E8[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C6638A0[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 14);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (uint64_t)&v15;
    v18[1] = (uint64_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158530CC(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          int v20 = &v19;
          sub_2158A7430((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_215840844(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215840884(uint64_t a1, int a2)
{
  if (a2 != 14
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_215840930(uint64_t a1, int a2)
{
  if (a2 == 14
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215840AEC(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661508[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215840B70(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661508[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215840C08()
{
  return 15;
}

uint64_t (***sub_215840C10())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215840C8C()
{
}

void sub_215840D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661508[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_215840DAC(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6610D8, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 15);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v15[0] = v14;
    v15[1] = v13;
    sub_2158A79C0(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661508[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C6638B0[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_215840F30(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215840F70(uint64_t a1, int a2)
{
  if (a2 != 15
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584101C(uint64_t a1, int a2)
{
  if (a2 == 15
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_2158411D8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660318;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D96400(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C6641E0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_215854ED0(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A81CC((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_215841340(_Unwind_Exception *a1)
{
  sub_215841354(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215841354(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661528[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_2158413D8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661528[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215841470()
{
  return 16;
}

uint64_t (***sub_215841478())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_2158414F4()
{
}

void sub_2158415C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661528[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

float sub_215841614(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6610F0, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 == -1)
    {
      if (v9 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v9 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C661528[v8])(&v16, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v16 = a1 + 48;
    ((void (*)(long long *))off_26C6638C0[v9])(&v16);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v14, lpsrc, 16);
    uint64_t v10 = v14[0];
    long long v12 = *(_OWORD *)(v14[0] + 16);
    long long v11 = *(_OWORD *)(v14[0] + 32);
    long long v16 = *(_OWORD *)v14[0];
    long long v17 = v12;
    long long v18 = v11;
    v14[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v14, a1);
    v19[0] = (uint64_t)&v16;
    v19[1] = (uint64_t)v14;
    if (DWORD1(v17) == 1 && v15 == 1)
    {
      sub_215854ED0(v19);
    }
    else
    {
      char v20 = 0;
      if (DWORD2(v16) && HIDWORD(v16) && v17)
      {
        uint64_t v21 = &v20;
        *(float *)&long long v6 = sub_2158A81CC((uint64_t)&v21, (uint64_t)&v16, (uint64_t)v14);
      }
    }
  }
  return *(float *)&v6;
}

uint64_t sub_2158417F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215841838(uint64_t a1, int a2)
{
  if (a2 != 16
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_2158418E4(uint64_t a1, int a2)
{
  if (a2 == 16
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215841AA0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660398;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D96764(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664260;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v11, a1);
  v8[0] = (size_t)a3;
  v8[1] = (size_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158A2610(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A57D4((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_215841C08(_Unwind_Exception *a1)
{
  sub_215841C1C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215841C1C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661548[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215841CA0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661548[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215841D38()
{
  return 17;
}

uint64_t (***sub_215841D40())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215841DBC()
{
}

void sub_215841E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661548[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

size_t *sub_215841EDC(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (size_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661108, 0);
  if (result)
  {
    long long v6 = *(_OWORD *)(result + 1);
    long long v7 = *(_OWORD *)(result + 3);
    *(void *)(a1 + 40) = result[5];
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)result + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        uint64_t result = (size_t *)((uint64_t (*)(long long *, uint64_t))off_26C661548[v8])(&v29, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return result;
      }
LABEL_10:
      *(void *)&long long v29 = a1 + 48;
      return (size_t *)((uint64_t (*)(long long *))off_26C6638D0[v9])(&v29);
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v25, lpsrc, 17);
    long long v11 = *(_OWORD *)(v25[0] + 16);
    long long v10 = *(_OWORD *)(v25[0] + 32);
    long long v29 = *(_OWORD *)v25[0];
    long long v30 = v11;
    long long v31 = v10;
    v25[0] = 0;
    MEMORY[0x2166C4D20]();
    uint64_t result = (size_t *)sub_21583D2A4((uint64_t)v25, a1);
    v32[0] = (size_t)&v29;
    v32[1] = (size_t)v25;
    if (DWORD1(v30) == 1 && v26 == 1)
    {
      return sub_2158A2610(v32);
    }
    else if (DWORD2(v29) && HIDWORD(v29) && v30)
    {
      int v12 = HIDWORD(v29) - 1;
      uint64_t v13 = DWORD2(v30);
      uint64_t v14 = v27;
      uint64_t v15 = (unsigned char *)v29;
      uint64_t v16 = (unsigned char *)v25[0];
      int v17 = v30 - 1;
      if (v30 != 1)
      {
        uint64_t v18 = v28;
        uint64_t v19 = HIDWORD(v30);
        if (HIDWORD(v29) == 1)
        {
          do
          {
            *uint64_t v16 = *v15;
            v16[1] = v15[1];
            _OWORD v16[2] = v15[2];
            v15 += v19;
            v16 += v18;
            --v17;
          }
          while (v17);
        }
        else
        {
          int v20 = 0;
          uint64_t v21 = v25[0] + 2;
          uint64_t result = (size_t *)(v29 + 2);
          do
          {
            uint64_t v22 = result;
            uint64_t v23 = (unsigned char *)v21;
            int v24 = v12;
            do
            {
              *(v23 - 2) = *((unsigned char *)v22 - 2);
              *(v23 - 1) = *((unsigned char *)v22 - 1);
              *uint64_t v23 = *(unsigned char *)v22;
              v23 += v14;
              uint64_t v22 = (size_t *)((char *)v22 + v13);
              --v24;
            }
            while (v24);
            *(v23 - 2) = *((unsigned char *)v22 - 2);
            *(v23 - 1) = *((unsigned char *)v22 - 1);
            *uint64_t v23 = *(unsigned char *)v22;
            v15 += v19;
            v16 += v18;
            ++v20;
            v21 += v18;
            uint64_t result = (size_t *)((char *)result + v19);
          }
          while (v20 != v17);
        }
      }
      for (; v12; --v12)
      {
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        _OWORD v16[2] = v15[2];
        v15 += v13;
        v16 += v14;
      }
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
    }
  }
  return result;
}

uint64_t sub_2158421B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_2158421F0(uint64_t a1, int a2)
{
  if (a2 != 17
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_21584229C(uint64_t a1, int a2)
{
  if (a2 == 17
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215842458(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660418;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D96C70(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C6642E0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158530CC(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      long long v10 = &v9;
      sub_2158A5CC4((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_2158425C0(_Unwind_Exception *a1)
{
  sub_2158425D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158425D4(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661568[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215842658(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661568[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_2158426F0()
{
  return 18;
}

uint64_t (***sub_2158426F8())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215842774()
{
}

void sub_215842840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661568[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

uint64_t *sub_215842894(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (uint64_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661120, 0);
  if (!result)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v26, lpsrc, 18);
    long long v11 = *(_OWORD *)(v26[0] + 16);
    long long v10 = *(_OWORD *)(v26[0] + 32);
    long long v30 = *(_OWORD *)v26[0];
    long long v31 = v11;
    long long v32 = v10;
    v26[0] = 0;
    MEMORY[0x2166C4D20]();
    uint64_t result = (uint64_t *)sub_21583D2A4((uint64_t)v26, a1);
    v33[0] = (uint64_t)&v30;
    v33[1] = (uint64_t)v26;
    if (DWORD1(v31) == 1 && v27 == 1) {
      return sub_2158530CC(v33);
    }
    if (!DWORD2(v30) || !HIDWORD(v30) || !v31) {
      return result;
    }
    int v12 = HIDWORD(v30) - 1;
    uint64_t v13 = DWORD2(v31);
    uint64_t v14 = v28;
    uint64_t v15 = (_WORD *)v30;
    uint64_t v16 = (_WORD *)v26[0];
    int v17 = v31 - 1;
    if (v31 != 1)
    {
      uint64_t v18 = v29;
      uint64_t v19 = HIDWORD(v31);
      if (HIDWORD(v30) == 1)
      {
        do
        {
          *uint64_t v16 = *v15;
          v16[1] = v15[1];
          _OWORD v16[2] = v15[2];
          v15 += v19;
          v16 += v18;
          --v17;
        }
        while (v17);
LABEL_24:
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        _OWORD v16[2] = v15[2];
        return result;
      }
      int v20 = 0;
      uint64_t result = (uint64_t *)(2 * v28);
      uint64_t v21 = v26[0] + 4;
      uint64_t v22 = (_WORD *)(v30 + 4);
      do
      {
        uint64_t v23 = v22;
        int v24 = (_WORD *)v21;
        int v25 = v12;
        do
        {
          *(v24 - 2) = *(v23 - 2);
          *(v24 - 1) = *(v23 - 1);
          *int v24 = *v23;
          int v24 = (_WORD *)((char *)result + (void)v24);
          v23 += v13;
          --v25;
        }
        while (v25);
        *(v24 - 2) = *(v23 - 2);
        *(v24 - 1) = *(v23 - 1);
        *int v24 = *v23;
        v15 += v19;
        v16 += v18;
        ++v20;
        v21 += 2 * v18;
        v22 += v19;
      }
      while (v20 != v17);
    }
    for (; v12; --v12)
    {
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
      v15 += v13;
      v16 += v14;
    }
    goto LABEL_24;
  }
  long long v6 = *(_OWORD *)(result + 1);
  long long v7 = *(_OWORD *)(result + 3);
  *(void *)(a1 + 40) = result[5];
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)result + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      uint64_t result = (uint64_t *)((uint64_t (*)(long long *, uint64_t))off_26C661568[v8])(&v30, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return result;
    }
LABEL_10:
    *(void *)&long long v30 = a1 + 48;
    return (uint64_t *)((uint64_t (*)(long long *))off_26C6638E0[v9])(&v30);
  }
  if (v9 != -1) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_215842B88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215842BC8(uint64_t a1, int a2)
{
  if (a2 != 18
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_215842C74(uint64_t a1, int a2)
{
  if (a2 == 18
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215842E30(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661588[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215842EB4(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661588[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215842F4C()
{
  return 19;
}

uint64_t (***sub_215842F54())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215842FD0()
{
}

void sub_21584309C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661588[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_2158430F0(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661138, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 19);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    void v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583D2A4((uint64_t)v13, a1);
    v15[0] = v14;
    v15[1] = v13;
    sub_2158A6204(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661588[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C6638F0[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_215843274(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_2158432B4(uint64_t a1, int a2)
{
  if (a2 != 19
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_215843360(uint64_t a1, int a2)
{
  if (a2 == 19
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584351C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660518;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D97468(a2, (uint64_t)v9);
  *(void *)(a1 + 48) = &unk_26C6643E0;
  *(_OWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 72) = v11;
  *(_OWORD *)(a1 + 88) = v12;
  *(void *)(a1 + 104) = v13;
  *(_OWORD *)(a1 + 112) = v14;
  *(void *)(a1 + 128) = v15;
  *(void *)(a1 + 152) = v17;
  *(_OWORD *)(a1 + 136) = v16;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v9, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v9;
  if (a3[5] == 1 && HIDWORD(v10) == 1)
  {
    sub_215854ED0(v8);
    return a1;
  }
  if (!a3[2] || !a3[3] || !a3[4]) {
    return a1;
  }
  sub_2158A69C0((uint64_t)a3, (uint64_t)v9);
  return a1;
}

void sub_215843688(_Unwind_Exception *a1)
{
  sub_21584369C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21584369C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6615A8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215843720(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6615A8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_2158437B8()
{
  return 20;
}

uint64_t (***sub_2158437C0())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584383C()
{
}

void sub_215843908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6615A8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

float sub_21584395C(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661150, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 == -1)
    {
      if (v9 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v9 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C6615A8[v8])(&v32, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v32 = a1 + 48;
    ((void (*)(long long *))off_26C663900[v9])(&v32);
    return *(float *)&v6;
  }
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v28, lpsrc, 20);
  long long v11 = *(_OWORD *)(v28[0] + 16);
  long long v10 = *(_OWORD *)(v28[0] + 32);
  long long v32 = *(_OWORD *)v28[0];
  long long v33 = v11;
  long long v34 = v10;
  v28[0] = 0;
  MEMORY[0x2166C4D20]();
  sub_21583D2A4((uint64_t)v28, a1);
  v35[0] = (uint64_t)&v32;
  v35[1] = (uint64_t)v28;
  if (DWORD1(v33) == 1 && v29 == 1)
  {
    sub_215854ED0(v35);
    return *(float *)&v6;
  }
  if (DWORD2(v32) && HIDWORD(v32) && v33)
  {
    int v12 = HIDWORD(v32) - 1;
    uint64_t v13 = DWORD2(v33);
    uint64_t v14 = v30;
    uint64_t v15 = (_DWORD *)v32;
    uint64_t v16 = (_DWORD *)v28[0];
    int v17 = v33 - 1;
    if (v33 != 1)
    {
      uint64_t v18 = v31;
      uint64_t v19 = HIDWORD(v33);
      if (HIDWORD(v32) == 1)
      {
        do
        {
          *uint64_t v16 = *v15;
          v16[1] = v15[1];
          _OWORD v16[2] = v15[2];
          v15 += v19;
          v16 += v18;
          --v17;
        }
        while (v17);
LABEL_24:
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        LODWORD(v6) = v15[2];
        _OWORD v16[2] = v6;
        return *(float *)&v6;
      }
      int v20 = 0;
      uint64_t v21 = 4 * v30;
      uint64_t v22 = v28[0] + 8;
      uint64_t v23 = (_DWORD *)(v32 + 8);
      do
      {
        int v24 = v23;
        int v25 = (_DWORD *)v22;
        int v26 = v12;
        do
        {
          *(v25 - 2) = *(v24 - 2);
          *(v25 - 1) = *(v24 - 1);
          _DWORD *v25 = *v24;
          int v25 = (_DWORD *)((char *)v25 + v21);
          v24 += v13;
          --v26;
        }
        while (v26);
        *(v25 - 2) = *(v24 - 2);
        *(v25 - 1) = *(v24 - 1);
        _DWORD *v25 = *v24;
        v15 += v19;
        v16 += v18;
        ++v20;
        v22 += 4 * v18;
        v23 += v19;
      }
      while (v20 != v17);
    }
    for (; v12; --v12)
    {
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
      v15 += v13;
      v16 += v14;
    }
    goto LABEL_24;
  }
  return *(float *)&v6;
}

uint64_t sub_215843C50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215843C90(uint64_t a1, int a2)
{
  if (a2 != 20
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_215843D3C(uint64_t a1, int a2)
{
  if (a2 == 20
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215843EF8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660598;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D977C4(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664460;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v11, a1);
  v8[0] = (size_t)a3;
  v8[1] = (size_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158A2610(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      long long v10 = &v9;
      sub_2158A57D4((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_215844060(_Unwind_Exception *a1)
{
  sub_215844074(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215844074(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6615C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_2158440F8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6615C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215844190()
{
  return 21;
}

uint64_t (***sub_215844198())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215844214()
{
}

void sub_2158442E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6615C8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

size_t *sub_215844334(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (size_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661168, 0);
  if (result)
  {
    long long v6 = *(_OWORD *)(result + 1);
    long long v7 = *(_OWORD *)(result + 3);
    *(void *)(a1 + 40) = result[5];
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)result + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        uint64_t result = (size_t *)((uint64_t (*)(long long *, uint64_t))off_26C6615C8[v8])(&v29, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return result;
      }
LABEL_10:
      *(void *)&long long v29 = a1 + 48;
      return (size_t *)((uint64_t (*)(long long *))off_26C663910[v9])(&v29);
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v25, lpsrc, 21);
    long long v11 = *(_OWORD *)(v25[0] + 16);
    long long v10 = *(_OWORD *)(v25[0] + 32);
    long long v29 = *(_OWORD *)v25[0];
    long long v30 = v11;
    long long v31 = v10;
    v25[0] = 0;
    MEMORY[0x2166C4D20]();
    uint64_t result = (size_t *)sub_21583D2A4((uint64_t)v25, a1);
    v32[0] = (size_t)&v29;
    v32[1] = (size_t)v25;
    if (DWORD1(v30) == 1 && v26 == 1)
    {
      return sub_2158A2610(v32);
    }
    else if (DWORD2(v29) && HIDWORD(v29) && v30)
    {
      int v12 = HIDWORD(v29) - 1;
      uint64_t v13 = DWORD2(v30);
      uint64_t v14 = v27;
      uint64_t v15 = (unsigned char *)v29;
      uint64_t v16 = (unsigned char *)v25[0];
      int v17 = v30 - 1;
      if (v30 != 1)
      {
        uint64_t v18 = v28;
        uint64_t v19 = HIDWORD(v30);
        if (HIDWORD(v29) == 1)
        {
          do
          {
            *uint64_t v16 = *v15;
            v16[1] = v15[1];
            _OWORD v16[2] = v15[2];
            v15 += v19;
            v16 += v18;
            --v17;
          }
          while (v17);
        }
        else
        {
          int v20 = 0;
          uint64_t v21 = v25[0] + 2;
          uint64_t result = (size_t *)(v29 + 2);
          do
          {
            uint64_t v22 = result;
            uint64_t v23 = (unsigned char *)v21;
            int v24 = v12;
            do
            {
              *(v23 - 2) = *((unsigned char *)v22 - 2);
              *(v23 - 1) = *((unsigned char *)v22 - 1);
              *uint64_t v23 = *(unsigned char *)v22;
              v23 += v14;
              uint64_t v22 = (size_t *)((char *)v22 + v13);
              --v24;
            }
            while (v24);
            *(v23 - 2) = *((unsigned char *)v22 - 2);
            *(v23 - 1) = *((unsigned char *)v22 - 1);
            *uint64_t v23 = *(unsigned char *)v22;
            v15 += v19;
            v16 += v18;
            ++v20;
            v21 += v18;
            uint64_t result = (size_t *)((char *)result + v19);
          }
          while (v20 != v17);
        }
      }
      for (; v12; --v12)
      {
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        _OWORD v16[2] = v15[2];
        v15 += v13;
        v16 += v14;
      }
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
    }
  }
  return result;
}

uint64_t sub_215844608(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215844648(uint64_t a1, int a2)
{
  if (a2 != 21
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_2158446F4(uint64_t a1, int a2)
{
  if (a2 == 21
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_2158448B0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660618;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D97CD0(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C6644E0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158530CC(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      long long v10 = &v9;
      sub_2158A5CC4((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_215844A18(_Unwind_Exception *a1)
{
  sub_215844A2C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215844A2C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6615E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215844AB0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6615E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215844B48()
{
  return 22;
}

uint64_t (***sub_215844B50())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215844BCC()
{
}

void sub_215844C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6615E8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

uint64_t *sub_215844CEC(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t result = (uint64_t *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661180, 0);
  if (!result)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v26, lpsrc, 22);
    long long v11 = *(_OWORD *)(v26[0] + 16);
    long long v10 = *(_OWORD *)(v26[0] + 32);
    long long v30 = *(_OWORD *)v26[0];
    long long v31 = v11;
    long long v32 = v10;
    v26[0] = 0;
    MEMORY[0x2166C4D20]();
    uint64_t result = (uint64_t *)sub_21583D2A4((uint64_t)v26, a1);
    v33[0] = (uint64_t)&v30;
    v33[1] = (uint64_t)v26;
    if (DWORD1(v31) == 1 && v27 == 1) {
      return sub_2158530CC(v33);
    }
    if (!DWORD2(v30) || !HIDWORD(v30) || !v31) {
      return result;
    }
    int v12 = HIDWORD(v30) - 1;
    uint64_t v13 = DWORD2(v31);
    uint64_t v14 = v28;
    uint64_t v15 = (_WORD *)v30;
    uint64_t v16 = (_WORD *)v26[0];
    int v17 = v31 - 1;
    if (v31 != 1)
    {
      uint64_t v18 = v29;
      uint64_t v19 = HIDWORD(v31);
      if (HIDWORD(v30) == 1)
      {
        do
        {
          *uint64_t v16 = *v15;
          v16[1] = v15[1];
          _OWORD v16[2] = v15[2];
          v15 += v19;
          v16 += v18;
          --v17;
        }
        while (v17);
LABEL_24:
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        _OWORD v16[2] = v15[2];
        return result;
      }
      int v20 = 0;
      uint64_t result = (uint64_t *)(2 * v28);
      uint64_t v21 = v26[0] + 4;
      uint64_t v22 = (_WORD *)(v30 + 4);
      do
      {
        uint64_t v23 = v22;
        int v24 = (_WORD *)v21;
        int v25 = v12;
        do
        {
          *(v24 - 2) = *(v23 - 2);
          *(v24 - 1) = *(v23 - 1);
          *int v24 = *v23;
          int v24 = (_WORD *)((char *)result + (void)v24);
          v23 += v13;
          --v25;
        }
        while (v25);
        *(v24 - 2) = *(v23 - 2);
        *(v24 - 1) = *(v23 - 1);
        *int v24 = *v23;
        v15 += v19;
        v16 += v18;
        ++v20;
        v21 += 2 * v18;
        v22 += v19;
      }
      while (v20 != v17);
    }
    for (; v12; --v12)
    {
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
      v15 += v13;
      v16 += v14;
    }
    goto LABEL_24;
  }
  long long v6 = *(_OWORD *)(result + 1);
  long long v7 = *(_OWORD *)(result + 3);
  *(void *)(a1 + 40) = result[5];
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)result + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      uint64_t result = (uint64_t *)((uint64_t (*)(long long *, uint64_t))off_26C6615E8[v8])(&v30, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return result;
    }
LABEL_10:
    *(void *)&long long v30 = a1 + 48;
    return (uint64_t *)((uint64_t (*)(long long *))off_26C663920[v9])(&v30);
  }
  if (v9 != -1) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_215844FE0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215845020(uint64_t a1, int a2)
{
  if (a2 != 22
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_2158450CC(uint64_t a1, int a2)
{
  if (a2 == 22
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215845288(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661608[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584530C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661608[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_2158453A4()
{
  return 23;
}

uint64_t (***sub_2158453AC())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215845428()
{
}

void sub_2158454F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661608[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_215845548(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661198, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 23);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    void v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583D2A4((uint64_t)v13, a1);
    v15[0] = v14;
    v15[1] = v13;
    sub_2158A6204(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661608[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C663930[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_2158456CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584570C(uint64_t a1, int a2)
{
  if (a2 != 23
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_2158457B8(uint64_t a1, int a2)
{
  if (a2 == 23
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215845974(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660718;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D984C8(a2, (uint64_t)v9);
  *(void *)(a1 + 48) = &unk_26C6645E0;
  *(_OWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 72) = v11;
  *(_OWORD *)(a1 + 88) = v12;
  *(void *)(a1 + 104) = v13;
  *(_OWORD *)(a1 + 112) = v14;
  *(void *)(a1 + 128) = v15;
  *(void *)(a1 + 152) = v17;
  *(_OWORD *)(a1 + 136) = v16;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583D2A4((uint64_t)v9, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v9;
  if (a3[5] == 1 && HIDWORD(v10) == 1)
  {
    sub_215854ED0(v8);
    return a1;
  }
  if (!a3[2] || !a3[3] || !a3[4]) {
    return a1;
  }
  sub_2158A69C0((uint64_t)a3, (uint64_t)v9);
  return a1;
}

void sub_215845AE0(_Unwind_Exception *a1)
{
  sub_215845AF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215845AF4(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661628[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215845B78(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661628[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215845C10()
{
  return 24;
}

uint64_t (***sub_215845C18())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215845C94()
{
}

void sub_215845D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661628[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

float sub_215845DB4(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6611B0, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 == -1)
    {
      if (v9 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v9 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C661628[v8])(&v32, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v32 = a1 + 48;
    ((void (*)(long long *))off_26C663940[v9])(&v32);
    return *(float *)&v6;
  }
  (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v28, lpsrc, 24);
  long long v11 = *(_OWORD *)(v28[0] + 16);
  long long v10 = *(_OWORD *)(v28[0] + 32);
  long long v32 = *(_OWORD *)v28[0];
  long long v33 = v11;
  long long v34 = v10;
  v28[0] = 0;
  MEMORY[0x2166C4D20]();
  sub_21583D2A4((uint64_t)v28, a1);
  v35[0] = (uint64_t)&v32;
  v35[1] = (uint64_t)v28;
  if (DWORD1(v33) == 1 && v29 == 1)
  {
    sub_215854ED0(v35);
    return *(float *)&v6;
  }
  if (DWORD2(v32) && HIDWORD(v32) && v33)
  {
    int v12 = HIDWORD(v32) - 1;
    uint64_t v13 = DWORD2(v33);
    uint64_t v14 = v30;
    uint64_t v15 = (_DWORD *)v32;
    uint64_t v16 = (_DWORD *)v28[0];
    int v17 = v33 - 1;
    if (v33 != 1)
    {
      uint64_t v18 = v31;
      uint64_t v19 = HIDWORD(v33);
      if (HIDWORD(v32) == 1)
      {
        do
        {
          *uint64_t v16 = *v15;
          v16[1] = v15[1];
          _OWORD v16[2] = v15[2];
          v15 += v19;
          v16 += v18;
          --v17;
        }
        while (v17);
LABEL_24:
        *uint64_t v16 = *v15;
        v16[1] = v15[1];
        LODWORD(v6) = v15[2];
        _OWORD v16[2] = v6;
        return *(float *)&v6;
      }
      int v20 = 0;
      uint64_t v21 = 4 * v30;
      uint64_t v22 = v28[0] + 8;
      uint64_t v23 = (_DWORD *)(v32 + 8);
      do
      {
        int v24 = v23;
        int v25 = (_DWORD *)v22;
        int v26 = v12;
        do
        {
          *(v25 - 2) = *(v24 - 2);
          *(v25 - 1) = *(v24 - 1);
          _DWORD *v25 = *v24;
          int v25 = (_DWORD *)((char *)v25 + v21);
          v24 += v13;
          --v26;
        }
        while (v26);
        *(v25 - 2) = *(v24 - 2);
        *(v25 - 1) = *(v24 - 1);
        _DWORD *v25 = *v24;
        v15 += v19;
        v16 += v18;
        ++v20;
        v22 += 4 * v18;
        v23 += v19;
      }
      while (v20 != v17);
    }
    for (; v12; --v12)
    {
      *uint64_t v16 = *v15;
      v16[1] = v15[1];
      _OWORD v16[2] = v15[2];
      v15 += v13;
      v16 += v14;
    }
    goto LABEL_24;
  }
  return *(float *)&v6;
}

uint64_t sub_2158460A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_2158460E8(uint64_t a1, int a2)
{
  if (a2 != 24
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583D2A4((uint64_t)&v3, a1);
  operator new();
}

void sub_215846194(uint64_t a1, int a2)
{
  if (a2 == 24
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215846350(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660798;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D98824(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664660;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (size_t)a3;
  v8[1] = (size_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158A2610(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      long long v10 = &v9;
      sub_2158A6EF0((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_2158464B8(_Unwind_Exception *a1)
{
  sub_2158464CC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_2158464CC(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661648[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215846550(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661648[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_2158465E8()
{
  return 25;
}

uint64_t (***sub_2158465F0())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584666C()
{
}

void sub_215846738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661648[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21584678C(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6611C8, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C661648[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C663950[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 25);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (size_t)&v15;
    v18[1] = (size_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158A2610(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          int v20 = &v19;
          sub_2158A6EF0((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_215846970(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_2158469B0(uint64_t a1, int a2)
{
  if (a2 != 25
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_215846A5C(uint64_t a1, int a2)
{
  if (a2 == 25
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215846C18(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660818;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D98D40(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C6646E0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158530CC(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A7430((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_215846D80(_Unwind_Exception *a1)
{
  sub_215846D94(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215846D94(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661668[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215846E18(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661668[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215846EB0()
{
  return 26;
}

uint64_t (***sub_215846EB8())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215846F34()
{
}

void sub_215847000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661668[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_215847054(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6611E0, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C661668[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C663960[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 26);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (uint64_t)&v15;
    v18[1] = (uint64_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158530CC(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          int v20 = &v19;
          sub_2158A7430((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_215847238(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215847278(uint64_t a1, int a2)
{
  if (a2 != 26
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_215847324(uint64_t a1, int a2)
{
  if (a2 == 26
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_2158474E0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661688[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215847564(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661688[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_2158475FC()
{
  return 27;
}

uint64_t (***sub_215847604())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215847680()
{
}

void sub_21584774C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661688[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_2158477A0(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6611F8, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 27);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    void v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v15[0] = v14;
    v15[1] = v13;
    sub_2158A79C0(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661688[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C663970[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_215847924(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215847964(uint64_t a1, int a2)
{
  if (a2 != 27
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_215847A10(uint64_t a1, int a2)
{
  if (a2 == 27
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215847BCC(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660918;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D99550(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C6647E0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_215854ED0(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A81CC((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_215847D34(_Unwind_Exception *a1)
{
  sub_215847D48(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215847D48(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6616A8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215847DCC(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6616A8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215847E64()
{
  return 28;
}

uint64_t (***sub_215847E6C())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215847EE8()
{
}

void sub_215847FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6616A8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

float sub_215848008(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661210, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 == -1)
    {
      if (v9 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v9 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C6616A8[v8])(&v16, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v16 = a1 + 48;
    ((void (*)(long long *))off_26C663980[v9])(&v16);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v14, lpsrc, 28);
    uint64_t v10 = v14[0];
    long long v12 = *(_OWORD *)(v14[0] + 16);
    long long v11 = *(_OWORD *)(v14[0] + 32);
    long long v16 = *(_OWORD *)v14[0];
    long long v17 = v12;
    long long v18 = v11;
    v14[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v14, a1);
    v19[0] = (uint64_t)&v16;
    v19[1] = (uint64_t)v14;
    if (DWORD1(v17) == 1 && v15 == 1)
    {
      sub_215854ED0(v19);
    }
    else
    {
      char v20 = 0;
      if (DWORD2(v16) && HIDWORD(v16) && v17)
      {
        uint64_t v21 = &v20;
        *(float *)&long long v6 = sub_2158A81CC((uint64_t)&v21, (uint64_t)&v16, (uint64_t)v14);
      }
    }
  }
  return *(float *)&v6;
}

uint64_t sub_2158481EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584822C(uint64_t a1, int a2)
{
  if (a2 != 28
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_2158482D8(uint64_t a1, int a2)
{
  if (a2 == 28
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215848494(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660998;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D998B4(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664860;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (size_t)a3;
  v8[1] = (size_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158A2610(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A6EF0((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_2158485FC(_Unwind_Exception *a1)
{
  sub_215848610(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215848610(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6616C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215848694(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6616C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584872C()
{
  return 29;
}

uint64_t (***sub_215848734())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_2158487B0()
{
}

void sub_21584887C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6616C8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_2158488D0(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661228, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C6616C8[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C663990[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 29);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (size_t)&v15;
    v18[1] = (size_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158A2610(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          char v20 = &v19;
          sub_2158A6EF0((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_215848AB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215848AF4(uint64_t a1, int a2)
{
  if (a2 != 29
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_215848BA0(uint64_t a1, int a2)
{
  if (a2 == 29
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215848D5C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660A18;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D99DD0(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C6648E0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158530CC(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A7430((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_215848EC4(_Unwind_Exception *a1)
{
  sub_215848ED8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215848ED8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6616E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215848F5C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6616E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215848FF4()
{
  return 30;
}

uint64_t (***sub_215848FFC())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_215849078()
{
}

void sub_215849144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6616E8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_215849198(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661240, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C6616E8[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C6639A0[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 30);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (uint64_t)&v15;
    v18[1] = (uint64_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158530CC(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          char v20 = &v19;
          sub_2158A7430((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_21584937C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_2158493BC(uint64_t a1, int a2)
{
  if (a2 != 30
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_215849468(uint64_t a1, int a2)
{
  if (a2 == 30
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215849624(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661708[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_2158496A8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661708[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215849740()
{
  return 31;
}

uint64_t (***sub_215849748())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_2158497C4()
{
}

void sub_215849890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661708[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_2158498E4(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661258, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 31);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    void v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v15[0] = v14;
    v15[1] = v13;
    sub_2158A79C0(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661708[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C6639B0[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_215849A68(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_215849AA8(uint64_t a1, int a2)
{
  if (a2 != 31
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_215849B54(uint64_t a1, int a2)
{
  if (a2 == 31
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_215849D10(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660B18;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D9A5E0(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C6649E0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_215854ED0(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A81CC((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_215849E78(_Unwind_Exception *a1)
{
  sub_215849E8C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_215849E8C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661728[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_215849F10(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661728[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_215849FA8()
{
  return 32;
}

uint64_t (***sub_215849FB0())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584A02C()
{
}

void sub_21584A0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661728[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

float sub_21584A14C(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661270, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 == -1)
    {
      if (v9 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v9 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C661728[v8])(&v16, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v16 = a1 + 48;
    ((void (*)(long long *))off_26C6639C0[v9])(&v16);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v14, lpsrc, 32);
    uint64_t v10 = v14[0];
    long long v12 = *(_OWORD *)(v14[0] + 16);
    long long v11 = *(_OWORD *)(v14[0] + 32);
    long long v16 = *(_OWORD *)v14[0];
    long long v17 = v12;
    long long v18 = v11;
    v14[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v14, a1);
    v19[0] = (uint64_t)&v16;
    v19[1] = (uint64_t)v14;
    if (DWORD1(v17) == 1 && v15 == 1)
    {
      sub_215854ED0(v19);
    }
    else
    {
      char v20 = 0;
      if (DWORD2(v16) && HIDWORD(v16) && v17)
      {
        uint64_t v21 = &v20;
        *(float *)&long long v6 = sub_2158A81CC((uint64_t)&v21, (uint64_t)&v16, (uint64_t)v14);
      }
    }
  }
  return *(float *)&v6;
}

uint64_t sub_21584A330(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584A370(uint64_t a1, int a2)
{
  if (a2 != 32
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584A41C(uint64_t a1, int a2)
{
  if (a2 == 32
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584A5D8(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660B98;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D9A944(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664A60;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (size_t)a3;
  v8[1] = (size_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158A2610(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A6EF0((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21584A740(_Unwind_Exception *a1)
{
  sub_21584A754(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21584A754(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661748[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584A7D8(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661748[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584A870()
{
  return 33;
}

uint64_t (***sub_21584A878())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584A8F4()
{
}

void sub_21584A9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661748[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21584AA14(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661288, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C661748[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C6639D0[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 33);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (size_t)&v15;
    v18[1] = (size_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158A2610(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          char v20 = &v19;
          sub_2158A6EF0((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_21584ABF8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584AC38(uint64_t a1, int a2)
{
  if (a2 != 33
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584ACE4(uint64_t a1, int a2)
{
  if (a2 == 33
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584AEA0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660C18;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D9AE60(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664AE0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158530CC(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A7430((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21584B008(_Unwind_Exception *a1)
{
  sub_21584B01C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21584B01C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661768[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584B0A0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661768[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584B138()
{
  return 34;
}

uint64_t (***sub_21584B140())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584B1BC()
{
}

void sub_21584B288(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661768[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21584B2DC(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6612A0, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C661768[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C6639E0[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 34);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (uint64_t)&v15;
    v18[1] = (uint64_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158530CC(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          char v20 = &v19;
          sub_2158A7430((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_21584B4C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584B500(uint64_t a1, int a2)
{
  if (a2 != 34
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584B5AC(uint64_t a1, int a2)
{
  if (a2 == 34
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584B768(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661788[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584B7EC(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661788[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584B884()
{
  return 35;
}

uint64_t (***sub_21584B88C())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584B908()
{
}

void sub_21584B9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661788[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21584BA28(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6612B8, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 35);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    void v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v15[0] = v14;
    v15[1] = v13;
    sub_2158A79C0(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661788[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C6639F0[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_21584BBAC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584BBEC(uint64_t a1, int a2)
{
  if (a2 != 35
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584BC98(uint64_t a1, int a2)
{
  if (a2 == 35
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584BE54(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660D18;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D9B670(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664BE0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_215854ED0(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A81CC((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21584BFBC(_Unwind_Exception *a1)
{
  sub_21584BFD0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21584BFD0(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6617A8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584C054(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6617A8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584C0EC()
{
  return 36;
}

uint64_t (***sub_21584C0F4())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584C170()
{
}

void sub_21584C23C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6617A8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

float sub_21584C290(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6612D0, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 == -1)
    {
      if (v9 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v9 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C6617A8[v8])(&v16, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v16 = a1 + 48;
    ((void (*)(long long *))off_26C663A00[v9])(&v16);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v14, lpsrc, 36);
    uint64_t v10 = v14[0];
    long long v12 = *(_OWORD *)(v14[0] + 16);
    long long v11 = *(_OWORD *)(v14[0] + 32);
    long long v16 = *(_OWORD *)v14[0];
    long long v17 = v12;
    long long v18 = v11;
    v14[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v14, a1);
    v19[0] = (uint64_t)&v16;
    v19[1] = (uint64_t)v14;
    if (DWORD1(v17) == 1 && v15 == 1)
    {
      sub_215854ED0(v19);
    }
    else
    {
      char v20 = 0;
      if (DWORD2(v16) && HIDWORD(v16) && v17)
      {
        uint64_t v21 = &v20;
        *(float *)&long long v6 = sub_2158A81CC((uint64_t)&v21, (uint64_t)&v16, (uint64_t)v14);
      }
    }
  }
  return *(float *)&v6;
}

uint64_t sub_21584C474(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584C4B4(uint64_t a1, int a2)
{
  if (a2 != 36
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584C560(uint64_t a1, int a2)
{
  if (a2 == 36
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584C71C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660D98;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D9B9D4(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664C60;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (size_t)a3;
  v8[1] = (size_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158A2610(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A6EF0((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21584C884(_Unwind_Exception *a1)
{
  sub_21584C898(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21584C898(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6617C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584C91C(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6617C8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584C9B4()
{
  return 37;
}

uint64_t (***sub_21584C9BC())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584CA38()
{
}

void sub_21584CB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6617C8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21584CB58(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C6612E8, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C6617C8[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C663A10[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 37);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (size_t)&v15;
    v18[1] = (size_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158A2610(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          char v20 = &v19;
          sub_2158A6EF0((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_21584CD3C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584CD7C(uint64_t a1, int a2)
{
  if (a2 != 37
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584CE28(uint64_t a1, int a2)
{
  if (a2 == 37
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584CFE4(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660E18;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D9BEF0(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664CE0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_2158530CC(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A7430((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21584D14C(_Unwind_Exception *a1)
{
  sub_21584D160(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21584D160(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6617E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584D1E4(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C6617E8[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584D27C()
{
  return 38;
}

uint64_t (***sub_21584D284())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584D300()
{
}

void sub_21584D3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C6617E8[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21584D420(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661300, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 != -1)
    {
      if (v9 == -1)
      {
        ((void (*)(long long *, uint64_t))off_26C6617E8[v8])(&v15, a1 + 48);
        *(_DWORD *)(a1 + 160) = -1;
        return;
      }
LABEL_10:
      *(void *)&long long v15 = a1 + 48;
      ((void (*)(long long *))off_26C663A20[v9])(&v15);
      return;
    }
    if (v9 != -1) {
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 38);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    long long v15 = *(_OWORD *)v13[0];
    long long v16 = v12;
    long long v17 = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v18[0] = (uint64_t)&v15;
    v18[1] = (uint64_t)v13;
    if (DWORD1(v16) == 1 && v14 == 1)
    {
      sub_2158530CC(v18);
    }
    else
    {
      char v19 = 0;
      if (DWORD2(v15) && HIDWORD(v15))
      {
        if (v16)
        {
          char v20 = &v19;
          sub_2158A7430((uint64_t)&v20, (uint64_t)&v15, (uint64_t)v13);
        }
      }
    }
  }
}

uint64_t sub_21584D604(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584D644(uint64_t a1, int a2)
{
  if (a2 != 38
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584D6F0(uint64_t a1, int a2)
{
  if (a2 == 38
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584D8AC(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661808[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584D930(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661808[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584D9C8()
{
  return 39;
}

uint64_t (***sub_21584D9D0())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584DA4C()
{
}

void sub_21584DB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661808[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

void sub_21584DB6C(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  uint64_t v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661318, 0);
  if (!v5)
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v13, lpsrc, 39);
    uint64_t v10 = v13[0];
    long long v12 = *(_OWORD *)(v13[0] + 16);
    long long v11 = *(_OWORD *)(v13[0] + 32);
    v14[0] = *(_OWORD *)v13[0];
    v14[1] = v12;
    void v14[2] = v11;
    v13[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v13, a1);
    v15[0] = v14;
    v15[1] = v13;
    sub_2158A79C0(v15);
    return;
  }
  long long v6 = *(_OWORD *)(v5 + 8);
  long long v7 = *(_OWORD *)(v5 + 24);
  *(void *)(a1 + 40) = *((void *)v5 + 5);
  *(_OWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 8) = v6;
  uint64_t v8 = *(unsigned int *)(a1 + 160);
  uint64_t v9 = *((unsigned int *)v5 + 40);
  if (v8 != -1)
  {
    if (v9 == -1)
    {
      ((void (*)(_OWORD *, uint64_t))off_26C661808[v8])(v14, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return;
    }
LABEL_8:
    *(void *)&v14[0] = a1 + 48;
    ((void (*)(_OWORD *))off_26C663A30[v9])(v14);
    return;
  }
  if (v9 != -1) {
    goto LABEL_8;
  }
}

uint64_t sub_21584DCF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584DD30(uint64_t a1, int a2)
{
  if (a2 != 39
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584DDDC(uint64_t a1, int a2)
{
  if (a2 == 39
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

uint64_t sub_21584DF98(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = &unk_26C660F18;
  long long v5 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 40) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 8) = v5;
  sub_215D9C700(a2, (uint64_t)v11);
  *(void *)(a1 + 48) = &unk_26C664DE0;
  *(_OWORD *)(a1 + 56) = v12;
  *(_OWORD *)(a1 + 72) = v13;
  *(_OWORD *)(a1 + 88) = v14;
  *(void *)(a1 + 104) = v15;
  *(_OWORD *)(a1 + 112) = v16;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 152) = v19;
  *(_OWORD *)(a1 + 136) = v18;
  *(_DWORD *)(a1 + 160) = 1;
  sub_21583F82C((uint64_t)v11, a1);
  v8[0] = (uint64_t)a3;
  v8[1] = (uint64_t)v11;
  if (a3[5] == 1 && HIDWORD(v12) == 1)
  {
    sub_215854ED0(v8);
  }
  else
  {
    char v9 = 0;
    if (a3[2] && a3[3] && a3[4])
    {
      uint64_t v10 = &v9;
      sub_2158A81CC((uint64_t)&v10, (uint64_t)a3, (uint64_t)v11);
    }
  }
  return a1;
}

void sub_21584E100(_Unwind_Exception *a1)
{
  sub_21584E114(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_21584E114(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661828[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return a1;
}

uint64_t sub_21584E198(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 160);
  if (v2)
  {
    if (v2 == -1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  int v2 = *(void (**)(void, void))(a1 + 64);
  if (!v2 || (v2(*(void *)(a1 + 56), *(void *)(a1 + 48)), LODWORD(v2) = *(_DWORD *)(a1 + 160), v2 != -1)) {
LABEL_6:
  }
    ((void (*)(char *, uint64_t))off_26C661828[v2])(&v4, a1 + 48);
LABEL_7:
  *(_DWORD *)(a1 + 160) = -1;
  return MEMORY[0x2166C4D20](a1, 0x1093C40699DA9F5);
}

uint64_t sub_21584E230()
{
  return 40;
}

uint64_t (***sub_21584E238())()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26788E480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_26788E480))
  {
    return &off_26ACF23F0;
  }
  __cxa_atexit((void (*)(void *))nullsub_107, &off_26ACF23F0, &dword_21572C000);
  __cxa_guard_release(&qword_26788E480);
  return &off_26ACF23F0;
}

void sub_21584E2B4()
{
}

void sub_21584E380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v16 = *(unsigned int *)(v13 + 160);
  if (v16 != -1) {
    ((void (*)(char *, uint64_t))off_26C661828[v16])(&a13, v14);
  }
  *(_DWORD *)(v13 + 160) = -1;
  MEMORY[0x2166C4D20](v13, 0x1093C40699DA9F5);
  _Unwind_Resume(a1);
}

float sub_21584E3D4(uint64_t a1, uint64_t *lpsrc)
{
  uint64_t v4 = *lpsrc;
  long long v5 = (char *)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_26C6847E0, (const struct __class_type_info *)&unk_26C661330, 0);
  if (v5)
  {
    long long v6 = *(_OWORD *)(v5 + 8);
    long long v7 = *(_OWORD *)(v5 + 24);
    *(void *)(a1 + 40) = *((void *)v5 + 5);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 8) = v6;
    uint64_t v8 = *(unsigned int *)(a1 + 160);
    uint64_t v9 = *((unsigned int *)v5 + 40);
    if (v8 == -1)
    {
      if (v9 == -1) {
        return *(float *)&v6;
      }
    }
    else if (v9 == -1)
    {
      ((void (*)(long long *, uint64_t))off_26C661828[v8])(&v16, a1 + 48);
      *(_DWORD *)(a1 + 160) = -1;
      return *(float *)&v6;
    }
    *(void *)&long long v16 = a1 + 48;
    ((void (*)(long long *))off_26C663A40[v9])(&v16);
  }
  else
  {
    (*(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v4 + 72))(v14, lpsrc, 40);
    uint64_t v10 = v14[0];
    long long v12 = *(_OWORD *)(v14[0] + 16);
    long long v11 = *(_OWORD *)(v14[0] + 32);
    long long v16 = *(_OWORD *)v14[0];
    long long v17 = v12;
    long long v18 = v11;
    v14[0] = 0;
    MEMORY[0x2166C4D20](v10);
    sub_21583F82C((uint64_t)v14, a1);
    v19[0] = (uint64_t)&v16;
    v19[1] = (uint64_t)v14;
    if (DWORD1(v17) == 1 && v15 == 1)
    {
      sub_215854ED0(v19);
    }
    else
    {
      char v20 = 0;
      if (DWORD2(v16) && HIDWORD(v16) && v17)
      {
        uint64_t v21 = &v20;
        *(float *)&long long v6 = sub_2158A81CC((uint64_t)&v21, (uint64_t)&v16, (uint64_t)v14);
      }
    }
  }
  return *(float *)&v6;
}

uint64_t sub_21584E5B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 160);
  if (v1 == 1) {
    return *(void *)(a1 + 120);
  }
  if (v1) {
    sub_215742D4C();
  }
  return *(void *)(a1 + 48);
}

void sub_21584E5F8(uint64_t a1, int a2)
{
  if (a2 != 40
    && sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 102, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    abort();
  }
  sub_21583F82C((uint64_t)&v3, a1);
  operator new();
}

void sub_21584E6A4(uint64_t a1, int a2)
{
  if (a2 == 40
    || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/VL/VisualLogger/src/ExternalBuffer.cpp", 108, (uint64_t)"F == format", 11, (uint64_t)"", 0, (void (*)(void **))sub_215E1ABD8))
  {
    if (*(_DWORD *)(a1 + 160) > 1u) {
      sub_215742D4C();
    }
    if (*(_DWORD *)(a1 + 16)) {
      BOOL v3 = *(_DWORD *)(a1 + 12) == 0;
    }
    else {
      BOOL v3 = 1;
    }
    BOOL v4 = v3 || *(_DWORD *)(a1 + 8) == 0;
    uint64_t v5 = *(void *)(a1 + 12);
    if (v4) {
      HIDWORD(v5) = 0;
    }
    if (HIDWORD(*(void *)(a1 + 24)) * HIDWORD(v5) != -1
      || !sub_215E1A31C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D_VisualLogger/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_215E1ABD8))
    {
      operator new();
    }
  }
  abort();
}

const char *sub_21584E85C()
{
  return "{unknown buffer type}";
}

void sub_21584E870(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_21584E878()
{
  return 0;
}

uint64_t sub_21584E880()
{
  return 1;
}

long long *sub_21584E88C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2678861E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2678861E0))
  {
    int v1 = sub_21584E970();
    if (*((char *)v1 + 23) < 0)
    {
      sub_215738B0C(&xmmword_2678861C8, *(void **)v1, *((void *)v1 + 1));
    }
    else
    {
      long long v2 = *v1;
      unk_2678861D8 = *((void *)v1 + 2);
      xmmword_2678861C8 = v2;
    }
    __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678861C8, &dword_21572C000);
    __cxa_guard_release(&qword_2678861E0);
  }
  if (byte_2678861DF >= 0) {
    return &xmmword_2678861C8;
  }
  else {
    return (long long *)xmmword_2678861C8;
  }
}

void sub_21584E958(_Unwind_Exception *a1)
{
}

long long *sub_21584E970()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886200, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886200))
  {
    return &xmmword_2678861E8;
  }
  int v1 = sub_21584EA58();
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_215738B0C(&xmmword_2678861E8, v1->__r_.__value_.__l.__data_, v1->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v2 = *(_OWORD *)&v1->__r_.__value_.__l.__data_;
    qword_2678861F8 = v1->__r_.__value_.__r.__words[2];
    xmmword_2678861E8 = v2;
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &xmmword_2678861E8, &dword_21572C000);
  __cxa_guard_release(&qword_267886200);
  return &xmmword_2678861E8;
}

void sub_21584EA40(_Unwind_Exception *a1)
{
}

std::string *sub_21584EA58()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_267886220, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_267886220))
  {
    return &stru_267886208;
  }
  sub_21584EC80((uint64_t)__p);
  sub_21584EB54(__p, &stru_267886208);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
  __cxa_atexit(MEMORY[0x263F8C0B8], &stru_267886208, &dword_21572C000);
  __cxa_guard_release(&qword_267886220);
  return &stru_267886208;
}

void sub_21584EB14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_267886220);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_267886220);
  _Unwind_Resume(a1);
}