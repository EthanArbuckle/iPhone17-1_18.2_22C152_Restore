unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

id getWFDatabaseLogObject()
{
  if (getWFDatabaseLogObject_onceToken != -1) {
    dispatch_once(&getWFDatabaseLogObject_onceToken, &__block_literal_global_20);
  }
  v0 = (void *)getWFDatabaseLogObject_log;
  return v0;
}

__CFString *WFSystemImageNameForGlyphCharacter(uint64_t a1)
{
  int v1 = WFReplacementGlyphCharacterForCharacter(a1);
  result = 0;
  switch(v1)
  {
    case 61440:
      result = @"app.2.stack.3d";
      break;
    case 61441:
    case 61443:
    case 61445:
    case 61451:
    case 61463:
    case 61469:
    case 61485:
    case 61492:
    case 61516:
    case 61526:
    case 61527:
    case 61580:
    case 61594:
    case 61595:
    case 61596:
    case 61597:
    case 61598:
    case 61599:
    case 61600:
    case 61601:
    case 61602:
    case 61603:
    case 61604:
    case 61605:
    case 61606:
    case 61607:
    case 61608:
    case 61609:
    case 61610:
    case 61611:
    case 61612:
    case 61613:
    case 61614:
    case 61615:
    case 61616:
    case 61617:
    case 61618:
    case 61619:
    case 61620:
    case 61621:
    case 61622:
    case 61623:
    case 61624:
    case 61625:
    case 61626:
    case 61627:
    case 61628:
    case 61629:
    case 61630:
    case 61631:
    case 61632:
    case 61633:
    case 61634:
    case 61635:
    case 61636:
    case 61637:
    case 61638:
    case 61639:
    case 61640:
    case 61641:
    case 61642:
    case 61643:
    case 61644:
    case 61645:
    case 61646:
    case 61647:
    case 61648:
    case 61649:
    case 61650:
    case 61651:
    case 61652:
    case 61653:
    case 61654:
    case 61655:
    case 61656:
    case 61657:
    case 61658:
    case 61659:
    case 61660:
    case 61661:
    case 61662:
    case 61663:
    case 61664:
    case 61665:
    case 61666:
    case 61667:
    case 61668:
    case 61669:
    case 61670:
    case 61671:
    case 61672:
    case 61673:
    case 61674:
    case 61675:
    case 61676:
    case 61677:
    case 61678:
    case 61679:
    case 61680:
    case 61681:
    case 61682:
    case 61683:
    case 61684:
    case 61685:
    case 61686:
    case 61687:
    case 61688:
    case 61689:
    case 61690:
    case 61691:
    case 61692:
    case 61693:
    case 61694:
    case 61695:
    case 61706:
    case 61707:
    case 61708:
    case 61709:
    case 61710:
    case 61711:
    case 61722:
    case 61723:
    case 61724:
    case 61725:
    case 61726:
    case 61727:
    case 61738:
    case 61739:
    case 61740:
    case 61741:
    case 61742:
    case 61743:
    case 61754:
    case 61755:
    case 61756:
    case 61757:
    case 61758:
    case 61759:
    case 61770:
    case 61771:
    case 61772:
    case 61773:
    case 61774:
    case 61775:
    case 61786:
    case 61787:
    case 61788:
    case 61789:
    case 61790:
    case 61791:
    case 61802:
    case 61803:
    case 61804:
    case 61805:
    case 61806:
    case 61807:
    case 61818:
    case 61819:
    case 61820:
    case 61821:
    case 61822:
    case 61823:
    case 61834:
    case 61835:
    case 61836:
    case 61837:
    case 61838:
    case 61839:
    case 61850:
    case 61851:
    case 61852:
    case 61853:
    case 61854:
    case 61855:
    case 61856:
    case 61857:
    case 61858:
    case 61859:
    case 61860:
    case 61861:
    case 61862:
    case 61863:
    case 61864:
    case 61865:
    case 61866:
    case 61867:
    case 61868:
    case 61869:
    case 61870:
    case 61871:
    case 61872:
    case 61873:
    case 61874:
    case 61875:
    case 61876:
    case 61877:
    case 61878:
    case 61879:
    case 61880:
    case 61881:
    case 61882:
    case 61883:
    case 61884:
    case 61885:
    case 61886:
    case 61887:
    case 61888:
    case 61889:
    case 61890:
    case 61891:
    case 61892:
    case 61893:
    case 61894:
    case 61895:
    case 61896:
    case 61897:
    case 61898:
    case 61899:
    case 61900:
    case 61901:
    case 61902:
    case 61903:
    case 61904:
    case 61905:
    case 61906:
    case 61907:
    case 61908:
    case 61909:
    case 61910:
    case 61911:
    case 61912:
    case 61913:
    case 61914:
    case 61915:
    case 61916:
    case 61917:
    case 61918:
    case 61919:
    case 61920:
    case 61921:
    case 61922:
    case 61923:
    case 61924:
    case 61925:
    case 61926:
    case 61927:
    case 61928:
    case 61929:
    case 61930:
    case 61931:
    case 61932:
    case 61933:
    case 61934:
    case 61935:
    case 61936:
    case 61937:
    case 61938:
    case 61939:
    case 61940:
    case 61941:
    case 61942:
    case 61943:
    case 61944:
    case 61945:
    case 61946:
    case 61947:
    case 61948:
    case 61949:
    case 61950:
    case 61951:
    case 61962:
    case 61963:
    case 61964:
    case 61965:
    case 61966:
    case 61967:
    case 61978:
    case 61979:
    case 61980:
    case 61981:
    case 61982:
    case 61983:
    case 61994:
    case 61995:
    case 61996:
    case 61997:
    case 61998:
    case 61999:
    case 62010:
    case 62011:
    case 62012:
    case 62013:
    case 62014:
    case 62015:
    case 62026:
    case 62027:
    case 62028:
    case 62029:
    case 62030:
    case 62031:
    case 62032:
    case 62042:
    case 62043:
    case 62044:
    case 62045:
    case 62046:
    case 62047:
    case 62058:
    case 62059:
    case 62060:
    case 62061:
    case 62062:
    case 62063:
    case 62074:
    case 62075:
    case 62076:
    case 62077:
    case 62078:
    case 62079:
    case 62090:
    case 62091:
    case 62092:
    case 62093:
    case 62094:
    case 62095:
    case 62106:
    case 62107:
    case 62108:
    case 62109:
    case 62110:
    case 62111:
    case 62112:
    case 62113:
    case 62114:
    case 62115:
    case 62116:
    case 62117:
    case 62118:
    case 62119:
    case 62120:
    case 62121:
    case 62122:
    case 62123:
    case 62124:
    case 62125:
    case 62126:
    case 62127:
    case 62128:
    case 62129:
    case 62130:
    case 62131:
    case 62132:
    case 62133:
    case 62134:
    case 62135:
    case 62136:
    case 62137:
    case 62138:
    case 62139:
    case 62140:
    case 62141:
    case 62142:
    case 62143:
    case 62144:
    case 62145:
    case 62146:
    case 62147:
    case 62148:
    case 62149:
    case 62150:
    case 62151:
    case 62152:
    case 62153:
    case 62154:
    case 62155:
    case 62156:
    case 62157:
    case 62158:
    case 62159:
    case 62160:
    case 62161:
    case 62162:
    case 62163:
    case 62164:
    case 62165:
    case 62166:
    case 62167:
    case 62168:
    case 62169:
    case 62170:
    case 62171:
    case 62172:
    case 62173:
    case 62174:
    case 62175:
    case 62176:
    case 62177:
    case 62178:
    case 62179:
    case 62180:
    case 62181:
    case 62182:
    case 62183:
    case 62184:
    case 62185:
    case 62186:
    case 62187:
    case 62188:
    case 62189:
    case 62190:
    case 62191:
    case 62192:
    case 62193:
    case 62194:
    case 62195:
    case 62196:
    case 62197:
    case 62198:
    case 62199:
    case 62200:
    case 62201:
    case 62202:
    case 62203:
    case 62204:
    case 62205:
    case 62206:
    case 62207:
      return result;
    case 61442:
      result = @"book.closed.fill";
      break;
    case 61444:
      result = @"map.fill";
      break;
    case 61446:
      result = @"car.2.fill";
      break;
    case 61447:
      result = @"bolt.car.fill";
      break;
    case 61448:
      result = @"bus.doubledecker.fill";
      break;
    case 61449:
      result = @"tram.fill";
      break;
    case 61450:
      result = @"tram.tunnel.fill";
      break;
    case 61452:
      result = @"gauge";
      break;
    case 61453:
      result = @"speedometer";
      break;
    case 61454:
      result = @"barometer";
      break;
    case 61455:
      result = @"network";
      break;
    case 61456:
      result = @"rectangle.stack.fill";
      break;
    case 61457:
      result = @"square.stack.fill";
      break;
    case 61458:
      result = @"square.stack.3d.down.right.fill";
      break;
    case 61459:
      result = @"photo.fill.on.rectangle.fill";
      break;
    case 61460:
      result = @"photo.on.rectangle.angled";
      break;
    case 61461:
      result = @"camera.aperture";
      break;
    case 61462:
      result = @"paperplane.circle.fill";
      break;
    case 61464:
      result = @"note";
      break;
    case 61465:
      result = @"note.text";
      break;
    case 61466:
      result = @"note.text.badge.plus";
      break;
    case 61467:
      result = @"arrow.up.message.fill";
      break;
    case 61468:
      result = @"plus.message.fill";
      break;
    case 61470:
      result = @"speaker.wave.2.fill";
      break;
    case 61471:
      result = @"speaker.wave.3.fill";
      break;
    case 61472:
      result = @"speaker.slash.fill";
      break;
    case 61473:
      result = @"speaker.fill";
      break;
    case 61474:
      result = @"tv.and.hifispeaker.fill";
      break;
    case 61475:
      result = @"earpods";
      break;
    case 61476:
      result = @"airpods";
      break;
    case 61477:
      result = @"airpodspro";
      break;
    case 61478:
      result = @"hifispeaker.fill";
      break;
    case 61479:
      result = @"headphones.circle.fill";
      break;
    case 61480:
      result = @"radio.fill";
      break;
    case 61481:
      result = @"hearingdevice.ear.fill";
      break;
    case 61482:
      result = @"appletv.fill";
      break;
    case 61483:
      result = @"homepod.fill";
      break;
    case 61484:
      result = @"applewatch.radiowaves.left.and.right";
      break;
    case 61486:
      result = @"iphone";
      break;
    case 61487:
      result = @"iphone.radiowaves.left.and.right";
      break;
    case 61488:
      result = @"apps.iphone";
      break;
    case 61489:
      result = @"ipad";
      break;
    case 61490:
      result = @"ipad.landscape";
      break;
    case 61491:
      result = @"ipod";
      break;
    case 61493:
      result = @"figure.run.circle.fill";
      break;
    case 61494:
      result = @"figure.run.motion";
      break;
    case 61495:
      result = @"person.closed.fill";
      break;
    case 61496:
      result = @"person.open.fill";
      break;
    case 61497:
      result = @"arrow.triangle.turn.up.right.diamond.fill";
      break;
    case 61498:
      result = @"arrow.turn.up.right";
      break;
    case 61499:
      result = @"airplayaudio";
      break;
    case 61500:
      result = @"airplayvideo";
      break;
    case 61501:
      result = @"airdrop";
      break;
    case 61502:
      result = @"music.note.list";
      break;
    case 61503:
      result = @"music.note";
      break;
    case 61504:
      result = @"music.square.stack.fill";
      break;
    case 61505:
      result = @"waveform.path";
      break;
    case 61506:
      result = @"livephoto.play";
      break;
    case 61507:
      result = @"livephoto";
      break;
    case 61508:
      result = @"slowmo";
      break;
    case 61509:
      result = @"timelapse";
      break;
    case 61510:
      result = @"calendar.badge.plus";
      break;
    case 61511:
      result = @"calendar.badge.exclamationmark";
      break;
    case 61512:
      result = @"timer";
      break;
    case 61513:
      result = @"timer.square";
      break;
    case 61514:
      result = @"square.and.pencil";
      break;
    case 61515:
      result = @"plus.square.fill.on.square.fill";
      break;
    case 61517:
      result = @"moon.circle.fill";
      break;
    case 61518:
      result = @"nightshift";
      break;
    case 61519:
      result = @"truetone";
      break;
    case 61520:
      result = @"dial.low.fill";
      break;
    case 61521:
      result = @"dial.high.fill";
      break;
    case 61522:
      result = @"qrcode.viewfinder";
      break;
    case 61523:
      result = @"camera.viewfinder";
      break;
    case 61524:
      result = @"wallet.pass.fill";
      break;
    case 61525:
      result = @"appearance";
      break;
    case 61528:
      result = @"nosign";
      break;
    case 61529:
      result = @"command";
      break;
    case 61530:
      result = @"command.circle.fill";
      break;
    case 61531:
      result = @"command.square.fill";
      break;
    case 61532:
      result = @"brain.filled.head.profile";
      break;
    case 61533:
      result = @"brain.fill";
      break;
    case 61534:
      result = @"emoji.face.grinning.inverse";
      break;
    case 61535:
      result = @"emoji.face.smiling.with.smiling.eyes.inverse";
      break;
    case 61536:
      result = @"emoji.face.grinning.with.squinting.eyes.inverse";
      break;
    case 61537:
      result = @"emoji.face.with.tears.of.joy.inverse";
      break;
    case 61538:
      result = @"emoji.face.rolling.on.the.floor.laughing.inverse";
      break;
    case 61539:
      result = @"emoji.face.winking.with.stuck.out.tongue.inverse";
      break;
    case 61540:
      result = @"emoji.face.grimacing.inverse";
      break;
    case 61541:
      result = @"emoji.face.smiling.with.heart.eyes.inverse";
      break;
    case 61542:
      result = @"emoji.face.blowing.a.kiss.inverse";
      break;
    case 61543:
      result = @"emoji.face.smiling.with.hearts.inverse";
      break;
    case 61544:
      result = @"emoji.face.smiling.with.sunglasses.inverse";
      break;
    case 61545:
      result = @"emoji.face.with.starry.eyes.inverse";
      break;
    case 61546:
      result = @"memoji.inverse";
      break;
    case 61547:
      result = @"emoji.thumbsup.fill";
      break;
    case 61548:
      result = @"emoji.peace.hand.sign.fill";
      break;
    case 61549:
      result = @"emoji.love.you.gesture.fill";
      break;
    case 61550:
      result = @"emoji.closed.fist.fill";
      break;
    case 61551:
      result = @"facemask.fill";
      break;
    case 61552:
      result = @"puzzlepiece.extension.fill";
      break;
    case 61553:
      result = @"takeoutbag.and.cup.and.straw.fill";
      break;
    case 61554:
      result = @"emoji.bear.face.inverse";
      break;
    case 61555:
      result = @"emoji.tiger.face.inverse";
      break;
    case 61556:
      result = @"emoji.monkey.face.inverse";
      break;
    case 61557:
      result = @"emoji.ram.face.inverse";
      break;
    case 61558:
      result = @"emoji.rabbit.face.inverse";
      break;
    case 61559:
      result = @"emoji.snake.inverse";
      break;
    case 61560:
      result = @"emoji.chicken.face.inverse";
      break;
    case 61561:
      result = @"emoji.pig.face.inverse";
      break;
    case 61562:
      result = @"emoji.mouse.face.inverse";
      break;
    case 61563:
      result = @"emoji.cow.face.inverse";
      break;
    case 61564:
      result = @"emoji.dragon.face.inverse";
      break;
    case 61565:
      result = @"emoji.alien.monster.inverse";
      break;
    case 61566:
      result = @"emoji.robot.face.inverse";
      break;
    case 61567:
      result = @"emoji.ghost.inverse";
      break;
    case 61568:
      result = @"emoji.pile.of.poop.inverse";
      break;
    case 61569:
      result = @"emoji.skull.inverse";
      break;
    case 61570:
      result = @"folder";
      break;
    case 61571:
      result = @"folder.fill.badge.gearshape";
      break;
    case 61572:
      result = @"rectangle.grid.2x2.fill";
      break;
    case 61573:
      result = @"rectangle.grid.2x2";
      break;
    case 61574:
      result = @"rectangle.split.2x1.fill";
      break;
    case 61575:
      result = @"rectangle.split.3x1.fill";
      break;
    case 61576:
      result = @"rectangle.split.3x1";
      break;
    case 61577:
      result = @"emoji.heart.fill";
      break;
    case 61578:
      result = @"emoji.hearts.2.fill";
      break;
    case 61579:
      result = @"star.leadinghalf.filled";
      break;
    case 61581:
      result = @"emoji.sparkles";
      break;
    case 61582:
      result = @"arrow.up.message";
      break;
    case 61583:
      result = @"quote.bubble";
      break;
    case 61584:
      result = @"hand.raised.slash.fill";
      break;
    case 61585:
      result = @"hand.raised.slash";
      break;
    case 61586:
      result = @"waveform";
      break;
    case 61587:
      result = @"checklist";
      break;
    case 61588:
      result = @"character.textbox";
      break;
    case 61589:
      result = @"xmark.square";
      break;
    case 61590:
      result = @"eraser.fill";
      break;
    case 61591:
      result = @"scribble.variable";
      break;
    case 61592:
      result = @"pencil.and.scribble";
      break;
    case 61593:
      result = @"clipboard.fill";
      break;
    case 61696:
      result = @"list.bullet.clipboard.fill";
      break;
    case 61697:
      result = @"richtext.page.fill";
      break;
    case 61698:
      result = @"text.page.fill";
      break;
    case 61699:
      result = @"append.page.fill";
      break;
    case 61700:
      result = @"apple.terminal.fill";
      break;
    case 61701:
      result = @"calendar.badge.clock";
      break;
    case 61702:
      result = @"calendar.badge.minus";
      break;
    case 61703:
      result = @"calendar.badge.checkmark";
      break;
    case 61704:
      result = @"quicknote";
      break;
    case 61705:
      result = @"menucard.fill";
      break;
    case 61712:
      result = @"magazine.fill";
      break;
    case 61713:
      result = @"photo.artframe";
      break;
    case 61714:
      result = @"figure.wave";
      break;
    case 61715:
      result = @"dumbbell.fill";
      break;
    case 61716:
      result = @"sportscourt.fill";
      break;
    case 61717:
      result = @"tennis.racket";
      break;
    case 61718:
      result = @"skateboard.fill";
      break;
    case 61719:
      result = @"duffle.bag.fill";
      break;
    case 61720:
      result = @"apple.classical";
      break;
    case 61721:
      result = @"bluetooth";
      break;
    case 61728:
      result = @"flag.2.crossed.fill";
      break;
    case 61729:
      result = @"flag.checkered.2.crossed";
      break;
    case 61730:
      result = @"x.squareroot";
      break;
    case 61731:
      result = @"flashlight.on.fill";
      break;
    case 61732:
      result = @"flashlight.slash";
      break;
    case 61733:
      result = @"paintpalette.fill";
      break;
    case 61734:
      result = @"mail.stack.fill";
      break;
    case 61735:
      result = @"mail.fill";
      break;
    case 61736:
      result = @"gearshape.fill";
      break;
    case 61737:
      result = @"gearshape.2.fill";
      break;
    case 61744:
      result = @"signature";
      break;
    case 61745:
      result = @"wallet.fill";
      break;
    case 61746:
      result = @"metronome.fill";
      break;
    case 61747:
      result = @"numbers";
      break;
    case 61748:
      result = @"pianokeys.inverse";
      break;
    case 61749:
      result = @"paintbrush.pointed.fill";
      break;
    case 61750:
      result = @"applescript.fill";
      break;
    case 61751:
      result = @"scroll.fill";
      break;
    case 61752:
      result = @"scanner.fill";
      break;
    case 61753:
      result = @"handbag.fill";
      break;
    case 61760:
      result = @"suitcase.rolling.fill";
      break;
    case 61761:
      result = @"homekit";
      break;
    case 61762:
      result = @"building.columns.fill";
      break;
    case 61763:
      result = @"lamp.desk.fill";
      break;
    case 61764:
      result = @"lamp.ceiling.fill";
      break;
    case 61765:
      result = @"fan.floor.fill";
      break;
    case 61766:
      result = @"fan.fill";
      break;
    case 61767:
      result = @"fan.ceiling.fill";
      break;
    case 61768:
      result = @"lamp.floor.fill";
      break;
    case 61769:
      result = @"powerplug.fill";
      break;
    case 61776:
      result = @"balloon.fill";
      break;
    case 61777:
      result = @"sailboat.regatta.fill";
      break;
    case 61778:
      result = @"fireworks";
      break;
    case 61779:
      result = @"party.popper.fill";
      break;
    case 61780:
      result = @"popcorn.fill";
      break;
    case 61781:
      result = @"frying.pan.fill";
      break;
    case 61782:
      result = @"sofa.fill";
      break;
    case 61783:
      result = @"torus";
      break;
    case 61784:
      result = @"macintosh.classic";
      break;
    case 61785:
      result = @"finder";
      break;
    case 61792:
      result = @"watch.analog";
      break;
    case 61793:
      result = @"applewatch.side.right";
      break;
    case 61794:
      result = @"mediastick";
      break;
    case 61795:
      result = @"tv";
      break;
    case 61796:
      result = @"shazam.logo.fill";
      break;
    case 61797:
      result = @"guitars.fill";
      break;
    case 61798:
      result = @"moped.fill";
      break;
    case 61799:
      result = @"scooter";
      break;
    case 61800:
      result = @"stroller.fill";
      break;
    case 61801:
      result = @"comb.fill";
      break;
    case 61808:
      result = @"horn.fill";
      break;
    case 61809:
      result = @"tortoise.fill";
      break;
    case 61810:
      result = @"hare.fill";
      break;
    case 61811:
      result = @"dog.fill";
      break;
    case 61812:
      result = @"cat.fill";
      break;
    case 61813:
      result = @"lizard.fill";
      break;
    case 61814:
      result = @"bird.fill";
      break;
    case 61815:
      result = @"ant.fill";
      break;
    case 61816:
      result = @"ladybug.fill";
      break;
    case 61817:
      result = @"function";
      break;
    case 61824:
      result = @"percent";
      break;
    case 61825:
      result = @"teddybear.fill";
      break;
    case 61826:
      result = @"leaf.fill";
      break;
    case 61827:
      result = @"textformat.characters";
      break;
    case 61828:
      result = @"crown.fill";
      break;
    case 61829:
      result = @"movieclapper.fill";
      break;
    case 61830:
      result = @"textformat";
      break;
    case 61831:
      result = @"film.stack.fill";
      break;
    case 61832:
      result = @"textformat.size";
      break;
    case 61833:
      result = @"textformat.superscript";
      break;
    case 61840:
      result = @"textformat.subscript";
      break;
    case 61841:
      result = @"sum";
      break;
    case 61842:
      result = @"compass.drawing";
      break;
    case 61843:
      result = @"angle";
      break;
    case 61844:
      result = @"bold.italic.underline";
      break;
    case 61845:
      result = @"characters.lowercase";
      break;
    case 61846:
      result = @"characters.uppercase";
      break;
    case 61847:
      result = @"vision.pro";
      break;
    case 61848:
      result = @"battery.25percent";
      break;
    case 61849:
      result = @"battery.100percent.bolt";
      break;
    case 61952:
      result = @"xmark";
      break;
    case 61953:
      result = @"arrow.left";
      break;
    case 61954:
      result = @"arrow.right";
      break;
    case 61955:
      result = @"arrow.up";
      break;
    case 61956:
      result = @"arrow.down";
      break;
    case 61957:
      result = @"medical.thermometer.fill";
      break;
    case 61958:
      result = @"calendar.and.person";
      break;
    case 61959:
      result = @"calendar.and.chart.bar";
      break;
    case 61960:
      result = @"person.crop.badge.magnifyingglass.fill";
      break;
    case 61961:
      result = @"apple.journal";
      break;
    case 61968:
      result = @"figure.run.treadmill";
      break;
    case 61969:
      result = @"figure.walk.treadmill";
      break;
    case 61970:
    case 62103:
      result = @"figure.ice.skating";
      break;
    case 61971:
      result = @"degreesign.celsius";
      break;
    case 61972:
      result = @"degreesign.farenheit";
      break;
    case 61973:
      result = @"fire.extinguisher.fill";
      break;
    case 61974:
      result = @"wallet.bifold.fill";
      break;
    case 61975:
      result = @"house.badge.wifi.fill";
      break;
    case 61976:
      result = @"key.2.on.ring.fill";
      break;
    case 61977:
      result = @"wheelchair";
      break;
    case 61984:
      result = @"helmet.fill";
      break;
    case 61985:
      result = @"coat.fill";
      break;
    case 61986:
      result = @"jacket.fill";
      break;
    case 61987:
      result = @"heart.text.clipboard.fill";
      break;
    case 61988:
      result = @"humidity.fill";
      break;
    case 61989:
      result = @"sparkles";
      break;
    case 61990:
      result = @"moon.haze.fill";
      break;
    case 61991:
      result = @"moon.stars.fill";
      break;
    case 61992:
      result = @"cloud.hail.fill";
      break;
    case 61993:
      result = @"cloud.sleet.fill";
      break;
    case 62000:
      result = @"cloud.bolt.fill";
      break;
    case 62001:
      result = @"cloud.bolt.rain.fill";
      break;
    case 62002:
      result = @"cloud.sun.fill";
      break;
    case 62003:
      result = @"cloud.sun.rain.fill";
      break;
    case 62004:
      result = @"cloud.sun.bolt.fill";
      break;
    case 62005:
      result = @"cloud.moon.fill";
      break;
    case 62006:
      result = @"cloud.moon.rain.fill";
      break;
    case 62007:
      result = @"cloud.moon.bolt.fill";
      break;
    case 62008:
      result = @"wind";
      break;
    case 62009:
      result = @"wind.snow";
      break;
    case 62016:
      result = @"tornado";
      break;
    case 62017:
      result = @"thermometer.sun.fill";
      break;
    case 62018:
      result = @"thermometer.snowflake";
      break;
    case 62019:
      result = @"sunset.fill";
      break;
    case 62020:
      result = @"sunrise.fill";
      break;
    case 62021:
      result = @"airplane.departure";
      break;
    case 62022:
      result = @"airplane.arrival";
      break;
    case 62023:
      result = @"cablecar.fill";
      break;
    case 62024:
      result = @"lightrail.fill";
      break;
    case 62025:
      result = @"ferry.fill";
      break;
    case 62033:
      result = @"truck.box.fill";
      break;
    case 62034:
      result = @"ev.charger.fill";
      break;
    case 62035:
      result = @"road.lanes";
      break;
    case 62036:
      result = @"flag.pattern.checkered";
      break;
    case 62037:
      result = @"arcade.stick.console.fill";
      break;
    case 62038:
      result = @"gearshift.layout.sixspeed";
      break;
    case 62039:
      result = @"formfitting.gamecontroller.fill";
      break;
    case 62040:
      result = @"joystickcontroller.fill";
      break;
    case 62041:
      result = @"personalhotspot";
      break;
    case 62048:
      result = @"bolt.horizontal.fill";
      break;
    case 62049:
      result = @"satellite.fill";
      break;
    case 62050:
      result = @"usb";
      break;
    case 62051:
      result = @"bonjour";
      break;
    case 62052:
      result = @"port.hdmi";
      break;
    case 62053:
      result = @"port.thunderbolt";
      break;
    case 62054:
      result = @"port.usb.c";
      break;
    case 62055:
      result = @"port.usb.a";
      break;
    case 62056:
      result = @"port.usb.b";
      break;
    case 62057:
      result = @"port.ethernet";
      break;
    case 62064:
      result = @"port.vga";
      break;
    case 62065:
      result = @"thunderbolt";
      break;
    case 62066:
      result = @"firewire";
      break;
    case 62067:
      result = @"ethernet";
      break;
    case 62068:
      result = @"antenna.radiowaves.left.and.right";
      break;
    case 62069:
      result = @"oven.fill";
      break;
    case 62070:
      result = @"microwave.fill";
      break;
    case 62071:
      result = @"refrigerator.fill";
      break;
    case 62072:
      result = @"toilet.fill";
      break;
    case 62073:
      result = @"lightbulb.led.fill";
      break;
    case 62080:
      result = @"lightbulb.led.wide.fill";
      break;
    case 62081:
      result = @"figure.archery";
      break;
    case 62082:
      result = @"figure.basketball";
      break;
    case 62083:
      result = @"figure.climbing";
      break;
    case 62084:
      result = @"figure.cooldown";
      break;
    case 62085:
      result = @"figure.core.training";
      break;
    case 62086:
      result = @"figure.curling";
      break;
    case 62087:
      result = @"figure.elliptical";
      break;
    case 62088:
      result = @"figure.fencing";
      break;
    case 62089:
      result = @"figure.gymnastics";
      break;
    case 62096:
      result = @"figure.highintensity.intervaltraining";
      break;
    case 62097:
      result = @"figure.hockey";
      break;
    case 62098:
      result = @"figure.ice.hockey";
      break;
    case 62099:
      result = @"figure.indoor.cycle";
      break;
    case 62100:
      result = @"figure.outdoor.cycle";
      break;
    case 62101:
      result = @"figure.outdoor.rowing";
      break;
    case 62102:
      result = @"figure.skateboarding";
      break;
    case 62104:
      result = @"figure.stair.stepper";
      break;
    case 62105:
      result = @"medal.fill";
      break;
    case 62208:
      result = @"fossil.shell.fill";
      break;
    case 62209:
      result = @"move.3d";
      break;
    case 62210:
      result = @"hat.cap.fill";
      break;
    case 62211:
      result = @"book.and.wrench.fill";
      break;
    case 62212:
      result = @"key.radiowaves.forward.fill";
      break;
    default:
      switch(v1)
      {
        case 59392:
          result = @"ellipsis";
          break;
        case 59395:
          result = @"dollarsign";
          break;
        case 59402:
          result = @"video.fill";
          break;
        case 59403:
          result = @"message.and.message.fill";
          break;
        case 59405:
          result = @"square.grid.4x3.fill";
          break;
        case 59412:
          result = @"globe";
          break;
        case 59414:
          result = @"message.fill";
          break;
        case 59436:
          result = @"laptopcomputer";
          break;
        case 59437:
          result = @"figure";
          break;
        case 59445:
          result = @"list.bullet";
          break;
        case 59446:
          result = @"keyboard.fill";
          break;
        case 59448:
          result = @"sterlingsign";
          break;
        case 59452:
          result = @"car.fill";
          break;
        case 59456:
          result = @"emoji.american.football.inverse";
          break;
        case 59459:
          result = @"icloud.fill";
          break;
        case 59465:
          result = @"book.fill";
          break;
        case 59478:
          result = @"tree.fill";
          break;
        case 59489:
          result = @"battery.100";
          break;
        case 59497:
          result = @"dot.radiowaves.up.forward";
          break;
        case 59508:
          result = @"play.fill";
          break;
        case 59511:
          result = @"wand.and.stars.inverse";
          break;
        case 59512:
          result = @"eurosign";
          break;
        case 59514:
          result = @"yensign";
          break;
        case 59515:
          result = @"bitcoinsign";
          break;
        case 59516:
          result = @"circle.dotted";
          break;
        case 59519:
          result = @"cylinder.split.1x2.fill";
          break;
        case 59648:
          result = @"airplane";
          break;
        case 59649:
          result = @"alarm.fill";
          break;
        case 59650:
          result = @"exclamationmark.triangle.fill";
          break;
        case 59651:
          result = @"emoji.alien.inverse";
          break;
        case 59652:
          result = @"cross.fill";
          break;
        case 59653:
          result = @"archivebox.fill";
          break;
        case 59654:
          result = @"arrowshape.turn.up.backward.fill";
          break;
        case 59655:
          result = @"arrowshape.turn.up.forward.fill";
          break;
        case 59656:
          result = @"staroflife.fill";
          break;
        case 59657:
          result = @"atom";
          break;
        case 59660:
          result = @"bandage.fill";
          break;
        case 59661:
          result = @"barcode";
          break;
        case 59662:
          result = @"chart.bar.fill";
          break;
        case 59663:
          result = @"emoji.baseball.inverse";
          break;
        case 59664:
          result = @"emoji.basketball.inverse";
          break;
        case 59665:
          result = @"bathtub.fill";
          break;
        case 59666:
          result = @"bed.double.fill";
          break;
        case 59667:
          result = @"bell.fill";
          break;
        case 59668:
          result = @"bicycle";
          break;
        case 59669:
          result = @"binoculars.fill";
          break;
        case 59670:
          result = @"bookmark.fill";
          break;
        case 59671:
          result = @"books.vertical.fill";
          break;
        case 59673:
          result = @"square.fill";
          break;
        case 59674:
          result = @"square";
          break;
        case 59675:
          result = @"hand.point.up.braille.fill";
          break;
        case 59676:
          result = @"briefcase.fill";
          break;
        case 59677:
          result = @"building.2.fill";
          break;
        case 59678:
          result = @"bus.fill";
          break;
        case 59679:
          result = @"birthday.cake.fill";
          break;
        case 59680:
          result = @"calculator.fill";
          break;
        case 59681:
          result = @"calendar";
          break;
        case 59682:
          result = @"camera.fill";
          break;
        case 59683:
          result = @"carrot.fill";
          break;
        case 59684:
          result = @"emoji.cat.face.inverse";
          break;
        case 59685:
          result = @"link";
          break;
        case 59690:
          result = @"checkmark";
          break;
        case 59692:
          result = @"chevron.down";
          break;
        case 59693:
          result = @"square.and.arrow.down.fill";
          break;
        case 59695:
          result = @"forward.fill";
          break;
        case 59696:
          result = @"chevron.backward";
          break;
        case 59697:
          result = @"info";
          break;
        case 59699:
          result = @"play.circle.fill";
          break;
        case 59700:
          result = @"plus";
          break;
        case 59702:
          result = @"power";
          break;
        case 59703:
          result = @"questionmark";
          break;
        case 59704:
          result = @"backward.fill";
          break;
        case 59705:
          result = @"chevron.forward";
          break;
        case 59706:
          result = @"stop.fill";
          break;
        case 59707:
          result = @"chevron.up";
          break;
        case 59708:
          result = @"square.and.arrow.up";
          break;
        case 59709:
          result = @"xmark.circle.fill";
          break;
        case 59711:
          result = @"doc.on.clipboard.fill";
          break;
        case 59712:
          result = @"clock.fill";
          break;
        case 59713:
          result = @"hanger";
          break;
        case 59714:
          result = @"cloud.fill";
          break;
        case 59715:
          result = @"cloud.rain.fill";
          break;
        case 59716:
          result = @"eyedropper.halffull";
          break;
        case 59717:
          result = @"safari.fill";
          break;
        case 59718:
          result = @"point.3.filled.connected.trianglepath.dotted";
          break;
        case 59719:
          result = @"creditcard.fill";
          break;
        case 59720:
          result = @"crop";
          break;
        case 59721:
          result = @"cube.fill";
          break;
        case 59722:
          result = @"server.rack";
          break;
        case 59723:
          result = @"dice.fill";
          break;
        case 59724:
          result = @"signpost.right.and.left.fill";
          break;
        case 59725:
          result = @"document.fill";
          break;
        case 59726:
          result = @"doc.text.fill";
          break;
        case 59727:
          result = @"doc.text";
          break;
        case 59728:
          result = @"emoji.dog.face.inverse";
          break;
        case 59729:
          result = @"quote.bubble.fill";
          break;
        case 59730:
          result = @"theatermasks.fill";
          break;
        case 59732:
          result = @"dot.radiowaves.forward";
          break;
        case 59733:
          result = @"film.fill";
          break;
        case 59734:
          result = @"flame.fill";
          break;
        case 59735:
          result = @"fish.fill";
          break;
        case 59736:
          result = @"flag.fill";
          break;
        case 59737:
          result = @"folder.fill";
          break;
        case 59738:
          result = @"shoeprints.fill";
          break;
        case 59739:
          result = @"square.grid.2x2.fill";
          break;
        case 59740:
          result = @"apple.slice.fill";
          break;
        case 59741:
          result = @"fuelpump.fill";
          break;
        case 59742:
          result = @"gamecontroller.fill";
          break;
        case 59743:
          result = @"gear";
          break;
        case 59744:
          result = @"gift.fill";
          break;
        case 59745:
          result = @"eyeglasses";
          break;
        case 59746:
          result = @"graduationcap.fill";
          break;
        case 59747:
          result = @"storefront.fill";
          break;
        case 59748:
          result = @"hammer.fill";
          break;
        case 59750:
          result = @"bag.fill";
          break;
        case 59751:
          result = @"hand.raised.fill";
          break;
        case 59752:
          result = @"internaldrive.fill";
          break;
        case 59753:
          result = @"headphones";
          break;
        case 59754:
          result = @"heart.fill";
          break;
        case 59755:
          result = @"house.fill";
          break;
        case 59756:
          result = @"emoji.horse.face.inverse";
          break;
        case 59757:
          result = @"hourglass";
          break;
        case 59758:
          result = @"infinity";
          break;
        case 59759:
          result = @"inhaler.fill";
          break;
        case 59760:
          result = @"key.fill";
          break;
        case 59761:
          result = @"washer.fill";
          break;
        case 59762:
          result = @"lifepreserver.fill";
          break;
        case 59763:
          result = @"lightbulb.fill";
          break;
        case 59764:
          result = @"bolt.fill";
          break;
        case 59767:
          result = @"rays";
          break;
        case 59768:
          result = @"location.fill";
          break;
        case 59769:
          result = @"mappin.and.ellipse";
          break;
        case 59770:
          result = @"lock.fill";
          break;
        case 59771:
          result = @"wand.and.rays.inverse";
          break;
        case 59772:
          result = @"magnifyingglass";
          break;
        case 59773:
          result = @"envelope.fill";
          break;
        case 59774:
          result = @"envelope.open.fill";
          break;
        case 59775:
          result = @"figure.stand";
          break;
        case 59776:
          result = @"wineglass.fill";
          break;
        case 59778:
          result = @"cross.vial.fill";
          break;
        case 59779:
          result = @"text.bubble.fill";
          break;
        case 59780:
          result = @"mic.fill";
          break;
        case 59782:
          result = @"moon.fill";
          break;
        case 59783:
          result = @"motorcycle.fill";
          break;
        case 59784:
          result = @"photo.fill";
          break;
        case 59785:
          result = @"mountain.2.fill";
          break;
        case 59786:
          result = @"arrow.up.and.down.and.arrow.left.and.right";
          break;
        case 59788:
          result = @"ticket.fill";
          break;
        case 59789:
          result = @"cup.and.saucer.fill";
          break;
        case 59790:
          result = @"music";
          break;
        case 59791:
          result = @"doc.richtext";
          break;
        case 59792:
          result = @"stove.fill";
          break;
        case 59793:
          result = @"paintbrush.fill";
          break;
        case 59794:
          result = @"paperclip";
          break;
        case 59795:
          result = @"p.square.fill";
          break;
        case 59796:
          result = @"pawprint.fill";
          break;
        case 59797:
          result = @"peacesign";
          break;
        case 59798:
          result = @"pencil";
          break;
        case 59799:
          result = @"person.3.fill";
          break;
        case 59800:
          result = @"person.2.fill";
          break;
        case 59801:
          result = @"person.fill";
          break;
        case 59803:
          result = @"figure.dance";
          break;
        case 59804:
          result = @"person.raised.hand";
          break;
        case 59805:
          result = @"figure.hiking";
          break;
        case 59806:
          result = @"figure.roll";
          break;
        case 59807:
          result = @"figure.strengthtraining.traditional";
          break;
        case 59808:
          result = @"figure.run";
          break;
        case 59809:
          result = @"figure.skiing.crosscountry";
          break;
        case 59810:
          result = @"figure.snowboarding";
          break;
        case 59811:
          result = @"figure.pool.swim";
          break;
        case 59812:
          result = @"figure.walk";
          break;
        case 59814:
          result = @"phone.fill";
          break;
        case 59815:
          result = @"pills.fill";
          break;
        case 59816:
          result = @"podcasts";
          break;
        case 59817:
          result = @"printer.fill";
          break;
        case 59818:
          result = @"puzzlepiece.fill";
          break;
        case 59819:
          result = @"qrcode";
          break;
        case 59820:
          result = @"arrow.3.trianglepath";
          break;
        case 59821:
          result = @"arrow.2.squarepath";
          break;
        case 59822:
          result = @"rocket.fill";
          break;
        case 59823:
          result = @"sailboat.fill";
          break;
        case 59824:
          result = @"scissors";
          break;
        case 59825:
          result = @"screwdriver.fill";
          break;
        case 59826:
          result = @"externaldrive.connected.to.line.below.fill";
          break;
        case 59827:
          result = @"tshirt.fill";
          break;
        case 59828:
          result = @"cart.fill";
          break;
        case 59829:
          result = @"shower.fill";
          break;
        case 59830:
          result = @"arrow.down.right.and.arrow.up.left";
          break;
        case 59832:
          result = @"shuffle";
          break;
        case 59833:
          result = @"slider.horizontal.3";
          break;
        case 59834:
          result = @"face.smiling.inverse";
          break;
        case 59835:
          result = @"snowflake";
          break;
        case 59836:
          result = @"paperplane.fill";
          break;
        case 59837:
          result = @"emoji.soccer.ball.inverse";
          break;
        case 59839:
          result = @"speaker.wave.1.fill";
          break;
        case 59840:
          result = @"stairs";
          break;
        case 59841:
          result = @"star.fill";
          break;
        case 59843:
          result = @"stethoscope";
          break;
        case 59844:
          result = @"stopwatch.fill";
          break;
        case 59845:
          result = @"sun.max.fill";
          break;
        case 59846:
          result = @"arrow.triangle.2.circlepath";
          break;
        case 59847:
          result = @"syringe.fill";
          break;
        case 59848:
          result = @"tag.fill";
          break;
        case 59849:
          result = @"circle.circle";
          break;
        case 59851:
          result = @"tv.fill";
          break;
        case 59852:
          result = @"tennisball.fill";
          break;
        case 59853:
          result = @"t.square.fill";
          break;
        case 59854:
          result = @"thermometer.medium";
          break;
        case 59856:
          result = @"camera.filters";
          break;
        case 59857:
          result = @"hand.thumbsup.fill";
          break;
        case 59859:
          result = @"trash.fill";
          break;
        case 59860:
          result = @"trophy.fill";
          break;
        case 59861:
          result = @"umbrella.fill";
          break;
        case 59862:
          result = @"lock.open.fill";
          break;
        case 59863:
          result = @"fork.knife";
          break;
        case 59864:
          result = @"play.rectangle.fill";
          break;
        case 59865:
          result = @"applewatch";
          break;
        case 59866:
          result = @"drop.fill";
          break;
        case 59867:
          result = @"wifi";
          break;
        case 59870:
          result = @"wrench.fill";
          break;
        default:
          return result;
      }
      break;
  }
  return result;
}

uint64_t WFReplacementGlyphCharacterForCharacter(uint64_t a1)
{
  if ((int)a1 <= 59854)
  {
    int v2 = a1 - 59393;
    uint64_t result = 59848;
    switch(v2)
    {
      case 0:
        return 59654;
      case 1:
        return 59788;
      case 2:
      case 9:
      case 10:
      case 12:
      case 15:
      case 19:
      case 21:
      case 28:
      case 40:
      case 43:
      case 44:
      case 46:
      case 52:
      case 53:
      case 55:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 66:
      case 72:
      case 75:
      case 87:
      case 96:
      case 103:
      case 104:
      case 110:
      case 111:
      case 112:
      case 113:
      case 115:
      case 118:
      case 119:
      case 121:
      case 122:
      case 123:
      case 126:
      case 127:
      case 149:
      case 190:
      case 191:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 197:
      case 198:
      case 199:
      case 200:
      case 201:
      case 202:
      case 203:
      case 204:
      case 205:
      case 206:
      case 207:
      case 208:
      case 209:
      case 210:
      case 211:
      case 212:
      case 213:
      case 214:
      case 215:
      case 216:
      case 217:
      case 218:
      case 219:
      case 220:
      case 221:
      case 222:
      case 223:
      case 224:
      case 225:
      case 226:
      case 227:
      case 228:
      case 229:
      case 230:
      case 231:
      case 232:
      case 233:
      case 234:
      case 235:
      case 236:
      case 237:
      case 238:
      case 239:
      case 240:
      case 241:
      case 242:
      case 243:
      case 244:
      case 245:
      case 246:
      case 247:
      case 248:
      case 249:
      case 250:
      case 251:
      case 252:
      case 253:
      case 254:
      case 255:
      case 256:
      case 257:
      case 258:
      case 259:
      case 260:
      case 261:
      case 262:
      case 263:
      case 264:
      case 265:
      case 266:
      case 267:
      case 268:
      case 269:
      case 270:
      case 271:
      case 272:
      case 273:
      case 274:
      case 275:
      case 276:
      case 277:
      case 278:
      case 279:
      case 280:
      case 282:
      case 283:
      case 284:
      case 285:
      case 286:
      case 287:
      case 288:
      case 289:
      case 290:
      case 291:
      case 292:
      case 293:
      case 294:
      case 295:
      case 297:
      case 298:
      case 299:
      case 300:
      case 302:
      case 303:
      case 304:
      case 305:
      case 307:
      case 309:
      case 310:
      case 311:
      case 312:
      case 313:
      case 314:
      case 315:
      case 318:
      case 319:
      case 320:
      case 321:
      case 322:
      case 323:
      case 324:
      case 325:
      case 326:
      case 327:
      case 328:
      case 329:
      case 330:
      case 331:
      case 332:
      case 333:
      case 335:
      case 336:
      case 337:
      case 338:
      case 339:
      case 340:
      case 341:
      case 342:
      case 343:
      case 344:
      case 345:
      case 346:
      case 347:
      case 348:
      case 349:
      case 350:
      case 351:
      case 352:
      case 353:
      case 354:
      case 355:
      case 356:
      case 357:
      case 358:
      case 359:
      case 360:
      case 361:
      case 362:
      case 363:
      case 364:
      case 365:
      case 366:
      case 367:
      case 368:
      case 369:
      case 370:
      case 371:
      case 374:
      case 375:
      case 376:
      case 377:
      case 378:
      case 379:
      case 380:
      case 381:
      case 382:
      case 383:
      case 384:
      case 385:
      case 386:
      case 387:
      case 388:
      case 389:
      case 390:
      case 391:
      case 392:
      case 393:
      case 395:
      case 396:
      case 397:
        return a1;
      case 3:
        return 59762;
      case 4:
        return 59846;
      case 5:
        return 59857;
      case 6:
        return 59755;
      case 7:
        return 59776;
      case 8:
        return 59682;
      case 11:
        return 59718;
      case 13:
        return 59648;
      case 14:
        return 59744;
      case 16:
        return 59773;
      case 17:
        return 59764;
      case 18:
        return 59850;
      case 20:
        return 59799;
      case 22:
        return 59712;
      case 23:
        return 59768;
      case 24:
        return 59841;
      case 25:
        return 59782;
      case 26:
        return 59671;
      case 27:
        return 59752;
      case 29:
        return 59709;
      case 30:
        return result;
      case 31:
        return 59824;
      case 32:
        return 59652;
      case 33:
        return 59667;
      case 34:
        return 59655;
      case 35:
        return 59738;
      case 36:
        return 59796;
      case 37:
        return 59821;
      case 38:
        return 59802;
      case 39:
        return 59677;
      case 41:
      case 156:
      case 157:
        return 59676;
      case 42:
        return 59688;
      case 45:
        return 59733;
      case 47:
        return 59650;
      case 48:
        goto LABEL_52;
      case 49:
        return 59859;
      case 50:
        return 59734;
      case 51:
      case 150:
        return 59772;
      case 54:
      case 317:
        return 59514;
      case 56:
      case 301:
        return 59512;
      case 57:
        return 59749;
      case 64:
        return 59757;
      case 65:
        return 59736;
      case 67:
        return 59745;
      case 68:
        return 59815;
      case 69:
      case 188:
        return 59719;
      case 70:
        return 59758;
      case 71:
      case 296:
        return 59515;
      case 73:
        return 59860;
      case 74:
        return 59845;
      case 76:
      case 143:
        return 59769;
      case 77:
      case 138:
      case 334:
      case 372:
      case 373:
        return 59726;
      case 78:
        return 59751;
      case 79:
        return 59753;
      case 80:
        return 59748;
      case 81:
        return 59737;
      case 82:
      case 139:
      case 182:
        return 59798;
      case 83:
        return 59789;
      case 84:
        return 59863;
      case 85:
        return 59731;
      case 86:
      case 166:
      case 167:
      case 186:
        return 59790;
      case 88:
        return 59754;
      case 89:
        return 59861;
      case 90:
        return 59811;
      case 91:
        return 59869;
      case 92:
        return 59760;
      case 93:
        return 59781;
      case 94:
        return 59727;
      case 95:
        return 59866;
      case 97:
        return 59763;
      case 98:
        return 59835;
      case 99:
        return 59770;
      case 100:
        return 59862;
      case 101:
        return 59446;
      case 102:
      case 169:
      case 170:
        return 59742;
      case 105:
        return 59814;
      case 106:
        return 59743;
      case 107:
        return 59828;
      case 108:
        return 59780;
      case 109:
        return 61473;
      case 114:
        return 59832;
      case 116:
      case 281:
        return 59673;
      case 117:
        return 59674;
      case 120:
        return 59395;
      case 124:
        return 59746;
      case 125:
        return 59820;
      case 128:
      case 129:
      case 135:
      case 137:
        return 59793;
      case 130:
      case 131:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 168:
        return 59436;
      case 132:
        return 59721;
      case 133:
      case 154:
        return 59412;
      case 134:
        return 59670;
      case 136:
      case 153:
      case 162:
      case 163:
      case 171:
      case 172:
      case 187:
        return 59685;
      case 140:
      case 141:
      case 151:
      case 152:
      case 174:
      case 175:
      case 181:
        return 59800;
      case 142:
      case 155:
      case 160:
      case 161:
        return 59784;
      case 158:
      case 159:
        return 59459;
      case 164:
      case 165:
      case 180:
        return 59403;
      case 173:
        return 59690;
      case 176:
      case 177:
        return 59414;
      case 178:
      case 179:
      case 183:
      case 184:
      case 185:
      case 394:
        return 59864;
      case 189:
        return 59791;
      case 306:
        return 59508;
      case 308:
        return 59448;
      case 316:
        goto LABEL_48;
      case 398:
        return 61697;
      default:
        if (a1 != 59831) {
          return a1;
        }
LABEL_52:
        uint64_t result = 59830;
        break;
    }
    return result;
  }
  if ((int)a1 <= 61569)
  {
    if ((int)a1 > 61512)
    {
      if ((int)a1 > 61529)
      {
        if (a1 == 61530 || a1 == 61531) {
          return 61529;
        }
      }
      else
      {
        if (a1 == 61513) {
          return 61512;
        }
        if (a1 == 61517) {
          return 59782;
        }
      }
    }
    else if ((int)a1 > 61478)
    {
      if (a1 == 61479) {
        return 59753;
      }
      if (a1 == 61493) {
        return 59808;
      }
    }
    else
    {
      if (a1 == 59855) {
        return 59414;
      }
      if (a1 == 61462) {
        return 59836;
      }
    }
    return a1;
  }
  if ((int)a1 <= 61581)
  {
    switch(a1)
    {
      case 0xF082:
        return 59737;
      case 0xF085:
        return 61572;
      case 0xF088:
        return 61575;
    }
    return a1;
  }
  switch((int)a1)
  {
    case 61582:
      uint64_t result = 61467;
      break;
    case 61583:
      uint64_t result = 59729;
      break;
    case 61585:
      uint64_t result = 61584;
      break;
    case 61589:
LABEL_48:
      uint64_t result = 61952;
      break;
    default:
      return a1;
  }
  return result;
}

id getWFGeneralLogObject()
{
  if (getWFGeneralLogObject_onceToken != -1) {
    dispatch_once(&getWFGeneralLogObject_onceToken, &__block_literal_global_1940);
  }
  v0 = (void *)getWFGeneralLogObject_log;
  return v0;
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_1(uint64_t result)
{
  *(void *)(v6 - 88) = v1;
  *(void *)(v6 - 120) = result;
  *(void *)(v6 - 112) = v3;
  *int v2 = v4;
  v2[1] = v5;
  *(void *)(v6 - 104) = v2 + 2;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_2(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1B3C801F4(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_7_3(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_7_4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return sub_1B3D72278();
}

void sub_1B3C6329C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3C635A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3C6509C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3C65310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3C65720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UIImageFunction()
{
  return (id)classUIImage;
}

void sub_1B3C66198(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id UIColorFunction()
{
  return (id)classUIColor;
}

Class initUIImage()
{
  if (UIKitLibrary_sOnce != -1) {
    dispatch_once(&UIKitLibrary_sOnce, &__block_literal_global_4247);
  }
  Class result = objc_getClass("UIImage");
  classUIImage = (uint64_t)result;
  getUIImageClass = (uint64_t (*)())UIImageFunction;
  return result;
}

Class initUIColor()
{
  if (UIKitLibrary_sOnce_11702 != -1) {
    dispatch_once(&UIKitLibrary_sOnce_11702, &__block_literal_global_11703);
  }
  Class result = objc_getClass("UIColor");
  classUIColor = (uint64_t)result;
  getUIColorClass = (uint64_t (*)())UIColorFunction;
  return result;
}

id WFSystemStaccatoActionIdentifiersBySection()
{
  v25[9] = *MEMORY[0x1E4F143B8];
  v23 = @"com.apple.ShortcutsActions.SetSilentModeAction";
  v24[0] = @"SilentMode";
  v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v23 count:1];
  v25[0] = v14;
  v24[1] = @"Focus";
  v22 = @"com.apple.springboard.Focus";
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v22 count:1];
  v25[1] = v0;
  v24[2] = @"Camera";
  v21 = @"com.apple.springboard.OpenCamera";
  uint64_t v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v21 count:1];
  v25[2] = v1;
  v24[3] = @"VoiceMemos";
  v20 = @"com.apple.VoiceMemos.ToggleRecording";
  uint64_t v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v20 count:1];
  v25[3] = v2;
  v24[4] = @"MusicRecognition";
  v19 = @"com.apple.musicrecognition.RecognizeMusicIntent";
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v19 count:1];
  v25[4] = v3;
  v24[5] = @"Flashlight";
  v18 = @"com.apple.springboard.ToggleFlashlight";
  char v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v18 count:1];
  v25[5] = v4;
  v24[6] = @"Accessibility";
  v17 = @"com.apple.AccessibilityUIServer.ToggleAccessibilityFeatureIntent";
  char v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v17 count:1];
  v25[6] = v5;
  v24[7] = @"Translate";
  v16 = @"com.apple.Translate.ToggleSpeechTranslationIntent";
  uint64_t v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v16 count:1];
  v25[7] = v6;
  v24[8] = @"Magnifier";
  v15 = @"com.apple.Magnifier.MagnifierIntent";
  v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v15 count:1];
  v25[8] = v7;
  v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v25 forKeys:v24 count:9];
  v9 = (void *)[v8 mutableCopy];

  if (VCIsInternalBuild_onceToken != -1) {
    dispatch_once(&VCIsInternalBuild_onceToken, &__block_literal_global_17849);
  }
  if (VCIsInternalBuild_isInternal)
  {
    v10 = (void *)[objc_alloc(MEMORY[0x1E4F1CB18]) initWithSuiteName:@"com.apple.siri.shortcuts"];
    v11 = [v10 dictionaryForKey:@"WFStaccatoActionTemplates"];

    [v9 addEntriesFromDictionary:v11];
  }
  v12 = (void *)[v9 copy];

  return v12;
}

uint64_t __WFImageGetCoreServicesBundlePath_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  char v5 = [a2 pathComponents];
  if ((unint64_t)[v5 count] < 2) {
    goto LABEL_6;
  }
  uint64_t v6 = [v5 objectAtIndexedSubscript:0];
  if (([v6 isEqualToString:@"System"] & 1) == 0)
  {

LABEL_6:
    goto LABEL_7;
  }
  uint64_t v7 = 1;
  v8 = [v5 objectAtIndexedSubscript:1];
  char v9 = [v8 isEqualToString:@"Cryptexes"];

  if (v9) {
    goto LABEL_12;
  }
LABEL_7:
  v10 = [v4 pathComponents];
  if ((unint64_t)[v10 count] <= 1)
  {
LABEL_11:

    uint64_t v7 = 0;
    goto LABEL_12;
  }
  v11 = [v10 objectAtIndexedSubscript:0];
  if (([v11 isEqualToString:@"System"] & 1) == 0)
  {

    goto LABEL_11;
  }
  v12 = [v10 objectAtIndexedSubscript:1];
  uint64_t v13 = [v12 isEqualToString:@"Cryptexes"];

  uint64_t v7 = v13 << 63 >> 63;
LABEL_12:

  return v7;
}

id WFLocalizedPhrasesGroupedByParameterIdentifier(void *a1, void *a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  v24 = objc_opt_new();
  id v4 = objc_opt_new();
  char v5 = objc_opt_new();
  v25 = objc_opt_new();
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  v23 = v3;
  uint64_t v6 = [v3 orderedPhrases];
  uint64_t v7 = [v6 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    char v9 = 0;
    uint64_t v10 = *(void *)v27;
    do
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v27 != v10) {
          objc_enumerationMutation(v6);
        }
        v12 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        uint64_t v13 = [v12 parameterIdentifier];
        if (v13)
        {
          v14 = [v4 objectForKeyedSubscript:v13];
          if (!v14)
          {
            v15 = [LNAutoShortcutParameterPhraseGroup alloc];
            v14 = [(LNAutoShortcutParameterPhraseGroup *)v15 initWithParameterID:v13 phrases:MEMORY[0x1E4F1CBF0]];
            [v4 setObject:v14 forKeyedSubscript:v13];
            [v24 addObject:v14];
            [v5 addObject:v12];
          }
          [(LNAutoShortcutParameterPhraseGroup *)v14 addPhrase:v12];
        }
        else
        {
          [v25 addObject:v12];
          if ((v9 & 1) == 0) {
            [v5 addObject:v12];
          }
          char v9 = 1;
        }
      }
      uint64_t v8 = [v6 countByEnumeratingWithState:&v26 objects:v30 count:16];
    }
    while (v8);
  }

  uint64_t v16 = [v25 count];
  if (a2 && v16) {
    *a2 = (id)[v25 copy];
  }
  uint64_t v17 = [v5 count];
  if (a3 && v17) {
    *a3 = v5;
  }
  if ([v24 count]) {
    v18 = v24;
  }
  else {
    v18 = 0;
  }
  id v19 = v18;

  return v19;
}

WFGradient *WFWorkflowGradientFromRGBA(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = +[WFColor colorWithP3RGBAValue:a1];
  uint64_t v8 = +[WFColor colorWithP3RGBAValue:a2];
  char v9 = +[WFColor colorWithP3RGBAValue:a3];
  uint64_t v10 = +[WFColor colorWithP3RGBAValue:a4];
  v11 = +[WFColor colorWithDisplayP3Red:1.0 green:1.0 blue:1.0 alpha:0.14];
  v12 = +[WFColor colorWithDisplayP3Red:1.0 green:1.0 blue:1.0 alpha:0.0];
  uint64_t v13 = [[WFGradient alloc] initWithBaseColor:v7 darkBaseColor:v8 accessibilityBaseColor:v9 darkAccessibilityBaseColor:v10 startColor:v11 endColor:v12];

  return v13;
}

id colorDefaults()
{
  v59[15] = *MEMORY[0x1E4F143B8];
  v58[0] = @"com.apple.MobileSMS";
  v42 = +[WFColor colorWithSystemColor:1];
  v57 = v42;
  v41 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v57 count:1];
  v59[0] = v41;
  v58[1] = @"com.apple.mobilenotes";
  v40 = +[WFColor colorWithRGBAValue:4292346111];
  v56[0] = v40;
  v39 = +[WFColor colorWithRGBAValue:4206559487];
  v56[1] = v39;
  v38 = [MEMORY[0x1E4F1C978] arrayWithObjects:v56 count:2];
  v59[1] = v38;
  v58[2] = @"com.apple.Music";
  v37 = +[WFColor colorWithRGBAValue:3915806463];
  v55[0] = v37;
  v36 = +[WFColor colorWithRGBAValue:3862840575];
  v55[1] = v36;
  v35 = [MEMORY[0x1E4F1C978] arrayWithObjects:v55 count:2];
  v59[2] = v35;
  v58[3] = @"com.apple.podcasts";
  v34 = +[WFColor colorWithRGBAValue:3363108095];
  v54[0] = v34;
  v33 = +[WFColor colorWithRGBAValue:2033302271];
  v54[1] = v33;
  v32 = [MEMORY[0x1E4F1C978] arrayWithObjects:v54 count:2];
  v59[3] = v32;
  v58[4] = @"com.apple.AppStore";
  uint64_t v31 = +[WFColor colorWithRGBAValue:1573123839];
  v53[0] = v31;
  v30 = +[WFColor colorWithRGBAValue:946924287];
  v53[1] = v30;
  long long v29 = [MEMORY[0x1E4F1C978] arrayWithObjects:v53 count:2];
  v59[4] = v29;
  v58[5] = @"com.apple.iBooks";
  long long v28 = +[WFColor colorWithRGBAValue:4054531327];
  v52[0] = v28;
  long long v27 = +[WFColor colorWithRGBAValue:3899668223];
  v52[1] = v27;
  long long v26 = [MEMORY[0x1E4F1C978] arrayWithObjects:v52 count:2];
  v59[5] = v26;
  v58[6] = @"com.apple.VoiceMemos";
  v25 = +[WFColor colorWithRGBAValue:437918719];
  v51 = v25;
  v24 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v51 count:1];
  v59[6] = v24;
  v58[7] = @"com.apple.stocks";
  v23 = +[WFColor colorWithRGBAValue:185273343];
  v50 = v23;
  v22 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v50 count:1];
  v59[7] = v22;
  v58[8] = @"com.apple.mobiletimer";
  v21 = +[WFColor colorWithRGBAValue:471604991];
  v49 = v21;
  v20 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v49 count:1];
  v59[8] = v20;
  v58[9] = @"com.apple.Pages";
  id v19 = +[WFColor colorWithRGBAValue:4105784831];
  v48[0] = v19;
  v18 = +[WFColor colorWithRGBAValue:3968547327];
  v48[1] = v18;
  uint64_t v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v48 count:2];
  v59[9] = v17;
  v58[10] = @"com.apple.Keynote";
  uint64_t v16 = +[WFColor colorWithRGBAValue:1657403647];
  v47[0] = v16;
  v15 = +[WFColor colorWithRGBAValue:845473791];
  v47[1] = v15;
  v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v47 count:2];
  v59[10] = v14;
  v58[11] = @"com.apple.Numbers";
  uint64_t v13 = +[WFColor colorWithRGBAValue:2582804991];
  v46[0] = v13;
  v12 = +[WFColor colorWithRGBAValue:1657816319];
  v46[1] = v12;
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v46 count:2];
  v59[11] = v0;
  v58[12] = @"com.apple.camera";
  uint64_t v1 = +[WFColor colorWithRGBAValue:3840207359];
  v45[0] = v1;
  uint64_t v2 = +[WFColor colorWithRGBAValue:2391708671];
  v45[1] = v2;
  id v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v45 count:2];
  v59[12] = v3;
  v58[13] = @"com.apple.tv";
  id v4 = +[WFColor colorWithRGBAValue:858993663];
  v44[0] = v4;
  char v5 = +[WFColor colorWithRGBAValue:404232703];
  v44[1] = v5;
  uint64_t v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v44 count:2];
  v59[13] = v6;
  v58[14] = @"com.apple.freeform";
  uint64_t v7 = +[WFColor colorWithRGBAValue:372857343];
  v43[0] = v7;
  uint64_t v8 = +[WFColor colorWithRGBAValue:372857343];
  v43[1] = v8;
  char v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v43 count:2];
  v59[14] = v9;
  id v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v59 forKeys:v58 count:15];

  return v11;
}

id getWFActionsLogObject()
{
  if (getWFActionsLogObject_onceToken != -1) {
    dispatch_once(&getWFActionsLogObject_onceToken, &__block_literal_global_8);
  }
  uint64_t v0 = (void *)getWFActionsLogObject_log;
  return v0;
}

id WFLocalizedAllShortcutsString()
{
  return WFLocalizedString(@"All Shortcuts");
}

void __VCDescriptionOfEntitlements_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = a2;
  uint64_t v7 = [v6 integerValue] & v5;
  uint64_t v8 = [v6 integerValue];

  if (v7 == v8) {
    [*(id *)(a1 + 32) addObject:v9];
  }
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

id getWFWorkflowExecutionLogObject()
{
  if (getWFWorkflowExecutionLogObject_onceToken != -1) {
    dispatch_once(&getWFWorkflowExecutionLogObject_onceToken, &__block_literal_global_29);
  }
  uint64_t v0 = (void *)getWFWorkflowExecutionLogObject_log;
  return v0;
}

id getWFWalrusLogObject()
{
  if (getWFWalrusLogObject_onceToken[0] != -1) {
    dispatch_once(getWFWalrusLogObject_onceToken, &__block_literal_global_176);
  }
  uint64_t v0 = (void *)getWFWalrusLogObject_log;
  return v0;
}

id getWFCloudKitSyncLogObject()
{
  if (getWFCloudKitSyncLogObject_onceToken != -1) {
    dispatch_once(&getWFCloudKitSyncLogObject_onceToken, &__block_literal_global_38);
  }
  uint64_t v0 = (void *)getWFCloudKitSyncLogObject_log;
  return v0;
}

uint64_t VCIsInternalBuild()
{
  if (VCIsInternalBuild_onceToken != -1) {
    dispatch_once(&VCIsInternalBuild_onceToken, &__block_literal_global_17849);
  }
  return VCIsInternalBuild_isInternal;
}

id getWFFilesLogObject()
{
  if (getWFFilesLogObject_onceToken != -1) {
    dispatch_once(&getWFFilesLogObject_onceToken, &__block_literal_global_98);
  }
  uint64_t v0 = (void *)getWFFilesLogObject_log;
  return v0;
}

uint64_t WFWorkflowPaletteColorForLNShortcutTileColor(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 0xE) {
    return 0;
  }
  return result;
}

id getWFAppIntentsLogObject()
{
  if (getWFAppIntentsLogObject_onceToken != -1) {
    dispatch_once(&getWFAppIntentsLogObject_onceToken, &__block_literal_global_107);
  }
  uint64_t v0 = (void *)getWFAppIntentsLogObject_log;
  return v0;
}

id WFLocalizedString(void *a1)
{
  id v1 = a1;
  uint64_t v2 = WFCurrentBundle();
  id v3 = [v2 localizedStringForKey:v1 value:v1 table:0];

  return v3;
}

id WFCurrentBundle()
{
  if (WFCurrentBundle_onceToken != -1) {
    dispatch_once(&WFCurrentBundle_onceToken, &__block_literal_global_8602);
  }
  uint64_t v0 = (void *)WFCurrentBundle_bundle;
  return v0;
}

id getWFStaccatoLogObject()
{
  if (getWFStaccatoLogObject_onceToken != -1) {
    dispatch_once(&getWFStaccatoLogObject_onceToken, &__block_literal_global_179);
  }
  uint64_t v0 = (void *)getWFStaccatoLogObject_log;
  return v0;
}

id getWFSecurityLogObject()
{
  if (getWFSecurityLogObject_onceToken != -1) {
    dispatch_once(&getWFSecurityLogObject_onceToken, &__block_literal_global_89);
  }
  uint64_t v0 = (void *)getWFSecurityLogObject_log;
  return v0;
}

id WFSystemImageNameForOutlineGlyphCharacter(uint64_t a1)
{
  int v1 = a1;
  uint64_t v2 = WFSystemImageNameForGlyphCharacter(a1);
  if (v2)
  {
    if (WFNonFillGlyphAvailable(v1) && [v2 hasSuffix:@".fill"])
    {
      id v3 = [v2 stringByReplacingOccurrencesOfString:@".fill", &stru_1F0C7EBE0, 4, objc_msgSend(v2, "length") - objc_msgSend(@".fill", "length"), objc_msgSend(@".fill", "length") withString options range];
    }
    else
    {
      id v3 = v2;
    }
    id v4 = v3;
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

uint64_t WFNonFillGlyphAvailable(int a1)
{
  uint64_t result = 0;
  if (a1 <= 61458)
  {
    if (a1 != 59405 && a1 != 59738)
    {
      int v3 = 61450;
LABEL_8:
      if (a1 != v3) {
        return 1;
      }
    }
  }
  else if ((a1 - 61459) > 0x38 || ((1 << (a1 - 19)) & 0x100003000008001) == 0)
  {
    int v3 = 61731;
    goto LABEL_8;
  }
  return result;
}

void sub_1B3C6C290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3C6C54C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id VCVoiceShortcutManagerXPCInterface()
{
  uint64_t v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F0CD96D8];
  VCVoiceShortcutManagerConfigureXPCInterface(v0);
  return v0;
}

void VCVoiceShortcutManagerConfigureXPCInterface(void *a1)
{
  v172[2] = *MEMORY[0x1E4F143B8];
  int v1 = (void *)MEMORY[0x1E4F1CAD0];
  id v2 = a1;
  uint64_t v3 = objc_opt_class();
  id v4 = objc_msgSend(v1, "setWithObjects:", v3, objc_opt_class(), 0);
  [v2 setClasses:v4 forSelector:sel_requestSandboxExtensionForToolKitIndexingWithCompletion_ argumentIndex:0 ofReply:1];

  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v5 forSelector:sel_requestSandboxExtensionForToolKitIndexingWithCompletion_ argumentIndex:1 ofReply:1];

  id v6 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v6 forSelector:sel_requestSandboxExtensionForToolKitIndexingWithCompletion_ argumentIndex:2 ofReply:1];

  uint64_t v7 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v8 = objc_opt_class();
  id v9 = objc_msgSend(v7, "setWithObjects:", v8, objc_opt_class(), 0);
  [v2 setClasses:v9 forSelector:sel_getVoiceShortcutsWithCompletion_ argumentIndex:0 ofReply:1];

  uint64_t v10 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v11 = objc_opt_class();
  v12 = objc_msgSend(v10, "setWithObjects:", v11, objc_opt_class(), 0);
  [v2 setClasses:v12 forSelector:sel_getVoiceShortcutsForAppWithBundleIdentifier_completion_ argumentIndex:0 ofReply:1];

  uint64_t v13 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v13 forSelector:sel_addVoiceShortcut_phrase_completion_ argumentIndex:0 ofReply:1];

  v14 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v14 forSelector:sel_updateVoiceShortcutWithIdentifier_phrase_shortcut_completion_ argumentIndex:0 ofReply:1];

  v15 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v15 forSelector:sel_getSiriPodcastsDatabaseURLWithCompletion_ argumentIndex:0 ofReply:1];

  uint64_t v16 = (void *)MEMORY[0x1E4F1CAD0];
  v172[0] = objc_opt_class();
  v172[1] = objc_opt_class();
  uint64_t v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v172 count:2];
  v18 = [v16 setWithArray:v17];
  [v2 setClasses:v18 forSelector:sel_setShortcutSuggestions_forAppWithBundleIdentifier_ argumentIndex:0 ofReply:0];

  id v19 = (void *)MEMORY[0x1E4F1CAD0];
  v171[0] = objc_opt_class();
  v171[1] = objc_opt_class();
  v20 = [MEMORY[0x1E4F1C978] arrayWithObjects:v171 count:2];
  v21 = [v19 setWithArray:v20];
  [v2 setClasses:v21 forSelector:sel_getShortcutSuggestionsForAppWithBundleIdentifier_completion_ argumentIndex:0 ofReply:1];

  v22 = (void *)MEMORY[0x1E4F1CAD0];
  v170[0] = objc_opt_class();
  v170[1] = objc_opt_class();
  v170[2] = objc_opt_class();
  v170[3] = objc_opt_class();
  v23 = [MEMORY[0x1E4F1C978] arrayWithObjects:v170 count:4];
  v24 = [v22 setWithArray:v23];
  [v2 setClasses:v24 forSelector:sel_getShortcutSuggestionsForAllAppsWithLimit_completion_ argumentIndex:0 ofReply:1];

  v25 = (void *)MEMORY[0x1E4F1CAD0];
  v169[0] = objc_opt_class();
  v169[1] = objc_opt_class();
  long long v26 = [MEMORY[0x1E4F1C978] arrayWithObjects:v169 count:2];
  long long v27 = [v25 setWithArray:v26];
  [v2 setClasses:v27 forSelector:sel_getShareSheetWorkflowsForExtensionMatchingDictionaries_hostBundleIdentifier_completion_ argumentIndex:0 ofReply:1];

  long long v28 = (void *)MEMORY[0x1E4F1CAD0];
  v168[0] = objc_opt_class();
  v168[1] = objc_opt_class();
  long long v29 = [MEMORY[0x1E4F1C978] arrayWithObjects:v168 count:2];
  v30 = [v28 setWithArray:v29];
  [v2 setClasses:v30 forSelector:sel_getStingWorkflowsWithCompletion_ argumentIndex:0 ofReply:1];

  uint64_t v31 = (void *)MEMORY[0x1E4F1CAD0];
  v167[0] = objc_opt_class();
  v167[1] = objc_opt_class();
  v32 = [MEMORY[0x1E4F1C978] arrayWithObjects:v167 count:2];
  v33 = [v31 setWithArray:v32];
  [v2 setClasses:v33 forSelector:sel_getResultsForQuery_resultClassName_completion_ argumentIndex:0 ofReply:1];

  v34 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v166 = objc_opt_class();
  v35 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v166 count:1];
  v36 = [v34 setWithArray:v35];
  [v2 setClasses:v36 forSelector:sel_getValueForDescriptor_resultClassName_completion_ argumentIndex:0 ofReply:1];

  v37 = (void *)MEMORY[0x1E4F1CAD0];
  v165[0] = objc_opt_class();
  v165[1] = objc_opt_class();
  v38 = [MEMORY[0x1E4F1C978] arrayWithObjects:v165 count:2];
  v39 = [v37 setWithArray:v38];
  [v2 setClasses:v39 forSelector:sel_getFirstUnsortedWorkflowWithCompletion_ argumentIndex:0 ofReply:1];

  v40 = (void *)MEMORY[0x1E4F1CAD0];
  v164[0] = objc_opt_class();
  v164[1] = objc_opt_class();
  v41 = [MEMORY[0x1E4F1C978] arrayWithObjects:v164 count:2];
  v42 = [v40 setWithArray:v41];
  [v2 setClasses:v42 forSelector:sel_getVaultItemsAccessForBackgroundRunner_ argumentIndex:0 ofReply:1];

  v43 = (void *)MEMORY[0x1E4F1CAD0];
  v163[0] = objc_opt_class();
  v163[1] = objc_opt_class();
  v44 = [MEMORY[0x1E4F1C978] arrayWithObjects:v163 count:2];
  v45 = [v43 setWithArray:v44];
  [v2 setClasses:v45 forSelector:sel_getOnScreenContentWithOptions_completion_ argumentIndex:0 ofReply:0];

  v46 = (void *)MEMORY[0x1E4F1CAD0];
  v162[0] = objc_opt_class();
  v162[1] = objc_opt_class();
  v47 = [MEMORY[0x1E4F1C978] arrayWithObjects:v162 count:2];
  v48 = [v46 setWithArray:v47];
  [v2 setClasses:v48 forSelector:sel_getOnScreenContentWithOptions_completionHandler_ argumentIndex:0 ofReply:0];

  v49 = (void *)MEMORY[0x1E4F1CAD0];
  v161[0] = objc_opt_class();
  v161[1] = objc_opt_class();
  v50 = [MEMORY[0x1E4F1C978] arrayWithObjects:v161 count:2];
  v51 = [v49 setWithArray:v50];
  [v2 setClasses:v51 forSelector:sel_getOnScreenContentWithOptions_completionHandler_ argumentIndex:0 ofReply:1];

  v52 = (void *)MEMORY[0x1E4F1CAD0];
  v160[0] = objc_opt_class();
  v160[1] = objc_opt_class();
  v53 = [MEMORY[0x1E4F1C978] arrayWithObjects:v160 count:2];
  v54 = [v52 setWithArray:v53];
  [v2 setClasses:v54 forSelector:sel_getSuggestedShortcutsWithLimit_completion_ argumentIndex:0 ofReply:1];

  v55 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v159 = objc_opt_class();
  v56 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v159 count:1];
  v57 = [v55 setWithArray:v56];
  [v2 setClasses:v57 forSelector:sel_getSuggestedShortcutsWithLimit_completion_ argumentIndex:1 ofReply:1];

  v58 = (void *)MEMORY[0x1E4F1CAD0];
  v158[0] = objc_opt_class();
  v158[1] = objc_opt_class();
  v59 = [MEMORY[0x1E4F1C978] arrayWithObjects:v158 count:2];
  v60 = [v58 setWithArray:v59];
  [v2 setClasses:v60 forSelector:sel_getRecentsCallWithTelephony_limit_completion_ argumentIndex:0 ofReply:1];

  v61 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v157 = objc_opt_class();
  v62 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v157 count:1];
  v63 = [v61 setWithArray:v62];
  [v2 setClasses:v63 forSelector:sel_getRecentsCallWithTelephony_limit_completion_ argumentIndex:1 ofReply:1];

  v64 = (void *)MEMORY[0x1E4F1CAD0];
  v156[0] = objc_opt_class();
  v156[1] = objc_opt_class();
  v65 = [MEMORY[0x1E4F1C978] arrayWithObjects:v156 count:2];
  v66 = [v64 setWithArray:v65];
  [v2 setClasses:v66 forSelector:sel_getFavoriteContactsWithLimit_completion_ argumentIndex:0 ofReply:1];

  v67 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v155 = objc_opt_class();
  v68 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v155 count:1];
  v69 = [v67 setWithArray:v68];
  [v2 setClasses:v69 forSelector:sel_getFavoriteContactsWithLimit_completion_ argumentIndex:1 ofReply:1];

  v70 = (void *)MEMORY[0x1E4F1CAD0];
  v154[0] = objc_opt_class();
  v154[1] = objc_opt_class();
  v71 = [MEMORY[0x1E4F1C978] arrayWithObjects:v154 count:2];
  v72 = [v70 setWithArray:v71];
  [v2 setClasses:v72 forSelector:sel_getUpcomingMediaForBundleIdentifier_limit_completion_ argumentIndex:0 ofReply:1];

  v73 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v153 = objc_opt_class();
  v74 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v153 count:1];
  v75 = [v73 setWithArray:v74];
  [v2 setClasses:v75 forSelector:sel_getUpcomingMediaForBundleIdentifier_limit_completion_ argumentIndex:1 ofReply:1];

  v76 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v152 = objc_opt_class();
  v77 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v152 count:1];
  v78 = [v76 setWithArray:v77];
  [v2 setClasses:v78 forSelector:sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_expandingParameterName_limit_completion_ argumentIndex:0 ofReply:1];

  v79 = (void *)MEMORY[0x1E4F1CAD0];
  v151[0] = objc_opt_class();
  v151[1] = objc_opt_class();
  v80 = [MEMORY[0x1E4F1C978] arrayWithObjects:v151 count:2];
  v81 = [v79 setWithArray:v80];
  [v2 setClasses:v81 forSelector:sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_expandingParameterName_limit_completion_ argumentIndex:1 ofReply:1];

  v82 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v150 = objc_opt_class();
  v83 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v150 count:1];
  v84 = [v82 setWithArray:v83];
  [v2 setClasses:v84 forSelector:sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_expandingParameterName_limit_completion_ argumentIndex:2 ofReply:1];

  v85 = (void *)MEMORY[0x1E4F1CAD0];
  v149[0] = objc_opt_class();
  v149[1] = objc_opt_class();
  v86 = [MEMORY[0x1E4F1C978] arrayWithObjects:v149 count:2];
  v87 = [v85 setWithArray:v86];
  [v2 setClasses:v87 forSelector:sel_computeFinderResizedSizesForImages_inSizes_completion_ argumentIndex:0 ofReply:0];

  v88 = (void *)MEMORY[0x1E4F1CAD0];
  v148[0] = objc_opt_class();
  v148[1] = objc_opt_class();
  v89 = [MEMORY[0x1E4F1C978] arrayWithObjects:v148 count:2];
  v90 = [v88 setWithArray:v89];
  [v2 setClasses:v90 forSelector:sel_computeFinderResizedSizesForImages_inSizes_completion_ argumentIndex:1 ofReply:0];

  v91 = (void *)MEMORY[0x1E4F1CAD0];
  v147[0] = objc_opt_class();
  v147[1] = objc_opt_class();
  v147[2] = objc_opt_class();
  v147[3] = objc_opt_class();
  v92 = [MEMORY[0x1E4F1C978] arrayWithObjects:v147 count:4];
  v93 = [v91 setWithArray:v92];
  [v2 setClasses:v93 forSelector:sel_computeFinderResizedSizesForImages_inSizes_completion_ argumentIndex:0 ofReply:1];

  v94 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v95 = objc_opt_class();
  v96 = objc_msgSend(v94, "setWithObjects:", v95, objc_opt_class(), 0);
  [v2 setClasses:v96 forSelector:sel_resolveFilePath_workflowID_completion_ argumentIndex:0 ofReply:1];

  v97 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v98 = objc_opt_class();
  v99 = objc_msgSend(v97, "setWithObjects:", v98, objc_opt_class(), 0);
  [v2 setClasses:v99 forSelector:sel_resolveBookmarkData_completion_ argumentIndex:0 ofReply:1];

  v100 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v100 forSelector:sel_createBookmarkWithURL_workflowID_completion_ argumentIndex:0 ofReply:1];

  v101 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v101 forSelector:sel_createBookmarkWithBookmarkableString_path_workflowID_completion_ argumentIndex:0 ofReply:1];

  v102 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v102 forSelector:sel_resolveCrossDeviceItemID_completion_ argumentIndex:0 ofReply:1];

  v103 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", objc_opt_class(), 0);
  [v2 setClasses:v103 forSelector:sel_fetchURLForFPItem_completion_ argumentIndex:0 ofReply:1];

  v104 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v104 forSelector:sel_archiveAction_withActionMetadata_completion_ argumentIndex:0 ofReply:1];

  v105 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v105 forSelector:sel_archiveAction_withActionMetadata_completion_ argumentIndex:1 ofReply:1];

  v106 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v106 forSelector:sel_unarchiveActionFromData_withActionMetadata_completion_ argumentIndex:0 ofReply:1];

  v107 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v107 forSelector:sel_unarchiveActionFromData_withActionMetadata_completion_ argumentIndex:1 ofReply:1];

  v108 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v109 = objc_opt_class();
  uint64_t v110 = objc_opt_class();
  uint64_t v111 = objc_opt_class();
  uint64_t v112 = objc_opt_class();
  uint64_t v113 = objc_opt_class();
  v114 = objc_msgSend(v108, "setWithObjects:", v109, v110, v111, v112, v113, objc_opt_class(), 0);
  [v2 setClasses:v114 forSelector:sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_serializedParameterStates_completion_ argumentIndex:2 ofReply:0];

  v115 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v115 forSelector:sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_serializedParameterStates_completion_ argumentIndex:0 ofReply:1];

  v116 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v116 forSelector:sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_serializedParameterStates_completion_ argumentIndex:1 ofReply:1];

  v117 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v117 forSelector:sel_getMigratedAppIntentWithINIntent_completion_ argumentIndex:0 ofReply:1];

  v118 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v118 forSelector:sel_getMigratedAppIntentWithINIntent_completion_ argumentIndex:1 ofReply:1];

  v119 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v120 = objc_opt_class();
  uint64_t v121 = objc_opt_class();
  uint64_t v122 = objc_opt_class();
  uint64_t v123 = objc_opt_class();
  uint64_t v124 = objc_opt_class();
  v125 = objc_msgSend(v119, "setWithObjects:", v120, v121, v122, v123, v124, objc_opt_class(), 0);
  [v2 setClasses:v125 forSelector:sel_getSerializedParametersForLinkAction_actionMetadata_completion_ argumentIndex:0 ofReply:1];

  v126 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v2 setClasses:v126 forSelector:sel_getSerializedParametersForLinkAction_actionMetadata_completion_ argumentIndex:1 ofReply:1];

  [v2 setClass:objc_opt_class() forSelector:sel_loadFileURLWithItemProviderRequestMetadata_type_openInPlace_completion_ argumentIndex:0 ofReply:1];
  [v2 setClass:objc_opt_class() forSelector:sel_loadFileURLWithItemProviderRequestMetadata_type_openInPlace_completion_ argumentIndex:1 ofReply:1];
  [v2 setClass:objc_opt_class() forSelector:sel_loadDataWithItemProviderRequestMetadata_type_completion_ argumentIndex:0 ofReply:1];
  [v2 setClass:objc_opt_class() forSelector:sel_loadDataWithItemProviderRequestMetadata_type_completion_ argumentIndex:1 ofReply:1];
  v127 = (void *)MEMORY[0x1E4F1CAD0];
  v146[0] = objc_opt_class();
  v146[1] = objc_opt_class();
  v146[2] = objc_opt_class();
  v146[3] = objc_opt_class();
  v128 = [MEMORY[0x1E4F1C978] arrayWithObjects:v146 count:4];
  v129 = [v127 setWithArray:v128];
  [v2 setClasses:v129 forSelector:sel_fetchAvailableStaccatoActions_ argumentIndex:0 ofReply:1];

  [v2 setClass:objc_opt_class() forSelector:sel_fetchAvailableStaccatoActions_ argumentIndex:1 ofReply:1];
  v130 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v145 = objc_opt_class();
  v131 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v145 count:1];
  v132 = [v130 setWithArray:v131];
  v133 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v134 = objc_opt_class();
  uint64_t v135 = objc_opt_class();
  uint64_t v136 = objc_opt_class();
  uint64_t v137 = objc_opt_class();
  uint64_t v138 = objc_opt_class();
  v139 = objc_msgSend(v133, "setWithObjects:", v134, v135, v136, v137, v138, objc_opt_class(), 0);
  v140 = [v132 setByAddingObjectsFromSet:v139];
  [v2 setClasses:v140 forSelector:sel_fetchAllValueSectionsForStaccatoParameter_completion_ argumentIndex:0 ofReply:1];

  [v2 setClass:objc_opt_class() forSelector:sel_fetchAllValueSectionsForStaccatoParameter_completion_ argumentIndex:1 ofReply:1];
  [v2 setClass:objc_opt_class() forSelector:sel_configuredStaccatoActionFromTemplate_valuesByParameterKey_completion_ argumentIndex:0 ofReply:0];
  v141 = (void *)MEMORY[0x1E4F1CAD0];
  v144[0] = objc_opt_class();
  v144[1] = objc_opt_class();
  v144[2] = objc_opt_class();
  v142 = [MEMORY[0x1E4F1C978] arrayWithObjects:v144 count:3];
  v143 = [v141 setWithArray:v142];
  [v2 setClasses:v143 forSelector:sel_configuredStaccatoActionFromTemplate_valuesByParameterKey_completion_ argumentIndex:1 ofReply:0];

  [v2 setClass:objc_opt_class() forSelector:sel_configuredStaccatoActionFromTemplate_valuesByParameterKey_completion_ argumentIndex:0 ofReply:1];
  [v2 setClass:objc_opt_class() forSelector:sel_configuredStaccatoActionFromTemplate_valuesByParameterKey_completion_ argumentIndex:1 ofReply:1];
  [v2 setClass:objc_opt_class() forSelector:sel_defaultStaccatoActionWithCompletion_ argumentIndex:0 ofReply:1];
  [v2 setClass:objc_opt_class() forSelector:sel_defaultStaccatoActionWithCompletion_ argumentIndex:1 ofReply:1];
}

void WFWorkflowIconDrawerGloballyCacheDrawerContext()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_lock((os_unfair_lock_t)&contextLock);
  if (!context)
  {
    id v0 = WFImageBeginUsingCoreGlyphsCatalogs();
    int v1 = getWFVoiceShortcutClientLogObject();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136315138;
      uint64_t v5 = "WFWorkflowIconDrawerGloballyCacheDrawerContext";
      _os_log_impl(&dword_1B3C5C000, v1, OS_LOG_TYPE_DEFAULT, "%s Loading icon drawer context into cache", (uint8_t *)&v4, 0xCu);
    }

    id v2 = objc_alloc_init(WFWorkflowIconDrawerContext);
    uint64_t v3 = (void *)context;
    context = (uint64_t)v2;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&contextLock);
}

id getWFVoiceShortcutClientLogObject()
{
  if (getWFVoiceShortcutClientLogObject_onceToken != -1) {
    dispatch_once(&getWFVoiceShortcutClientLogObject_onceToken, &__block_literal_global_5);
  }
  id v0 = (void *)getWFVoiceShortcutClientLogObject_log;
  return v0;
}

BOOL WFShouldReverseLayoutDirection()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)getNSParagraphStyleClass_softClass;
  uint64_t v7 = getNSParagraphStyleClass_softClass;
  if (!getNSParagraphStyleClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getNSParagraphStyleClass_block_invoke;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getNSParagraphStyleClass_block_invoke((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return [v1 defaultWritingDirectionForLanguage:0] == 1;
}

void sub_1B3C6EAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getNSParagraphStyleClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!UIFoundationLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __UIFoundationLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    v6[5] = v6;
    long long v7 = xmmword_1E6078258;
    uint64_t v8 = 0;
    UIFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!UIFoundationLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *UIFoundationLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFLayoutDirection.m", 17, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("NSParagraphStyle");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"Class getNSParagraphStyleClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFLayoutDirection.m", 18, @"Unable to find class %s", "NSParagraphStyle");

LABEL_10:
    __break(1u);
  }
  getNSParagraphStyleClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id WFImageBeginUsingCoreGlyphsCatalogs()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_lock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  uint64_t v0 = WFImageLockedResidentCoreGlyphsCatalogRefCount;
  if (!WFImageLockedResidentCoreGlyphsCatalogRefCount)
  {
    id v1 = getWFVoiceShortcutClientLogObject();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      int v8 = 136315138;
      uint64_t v9 = "WFImageBeginUsingCoreGlyphsCatalogs";
      _os_log_impl(&dword_1B3C5C000, v1, OS_LOG_TYPE_INFO, "%s Loading core glyph catalogs into memory", (uint8_t *)&v8, 0xCu);
    }

    id v2 = objc_opt_new();
    uint64_t v3 = WFImageGetCoreGlyphsCatalogNamed(@"CoreGlyphs.bundle");
    uint64_t v4 = WFImageGetCoreGlyphsCatalogNamed(@"CoreGlyphsPrivate.bundle");
    if (v3) {
      [v2 addObject:v3];
    }
    if (v4) {
      [v2 addObject:v4];
    }

    uint64_t v5 = (void *)WFImageLockedResidentCoreGlyphsCatalogs;
    WFImageLockedResidentCoreGlyphsCatalogs = (uint64_t)v2;

    uint64_t v0 = WFImageLockedResidentCoreGlyphsCatalogRefCount;
  }
  WFImageLockedResidentCoreGlyphsCatalogRefCount = v0 + 1;
  id v6 = (id)WFImageLockedResidentCoreGlyphsCatalogs;
  os_unfair_lock_unlock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  return v6;
}

void sub_1B3C6F08C(_Unwind_Exception *exception_object)
{
}

id WFImageGetCoreGlyphsCatalogNamed(void *a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = NSSearchPathForDirectoriesInDomains(NSCoreServiceDirectory, 8uLL, 0);
  uint64_t v3 = [v2 sortedArrayUsingComparator:&__block_literal_global_50_17446];
  uint64_t v4 = [MEMORY[0x1E4F28CB8] defaultManager];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v5 = v3;
  uint64_t v6 = [v5 countByEnumeratingWithState:&v18 objects:buf count:16];
  if (!v6)
  {
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v7 = *(void *)v19;
LABEL_3:
  uint64_t v8 = 0;
  while (1)
  {
    if (*(void *)v19 != v7) {
      objc_enumerationMutation(v5);
    }
    uint64_t v9 = [*(id *)(*((void *)&v18 + 1) + 8 * v8) stringByAppendingPathComponent:v1];
    if ([v4 fileExistsAtPath:v9]) {
      break;
    }

    if (v6 == ++v8)
    {
      uint64_t v6 = [v5 countByEnumeratingWithState:&v18 objects:buf count:16];
      if (!v6) {
        goto LABEL_9;
      }
      goto LABEL_3;
    }
  }

  if (!v9) {
LABEL_10:
  }
    __assert_rtn("WFImageGetCoreServicesBundlePath", "WFImage+Glyphs.m", 72, "foundBundle != nil");

  uint64_t v10 = [MEMORY[0x1E4F28B50] bundleWithPath:v9];
  if (v10)
  {
    *(void *)&long long v18 = 0;
    *((void *)&v18 + 1) = &v18;
    *(void *)&long long v19 = 0x2050000000;
    uint64_t v11 = (void *)getCUICatalogClass_softClass;
    *((void *)&v19 + 1) = getCUICatalogClass_softClass;
    if (!getCUICatalogClass_softClass)
    {
      *(void *)buf = MEMORY[0x1E4F143A8];
      *(void *)&buf[8] = 3221225472;
      *(void *)&buf[16] = __getCUICatalogClass_block_invoke;
      v23 = &unk_1E6079C28;
      v24 = &v18;
      __getCUICatalogClass_block_invoke((uint64_t)buf);
      uint64_t v11 = *(void **)(*((void *)&v18 + 1) + 24);
    }
    v12 = v11;
    _Block_object_dispose(&v18, 8);
    id v17 = 0;
    uint64_t v13 = (void *)[[v12 alloc] initWithName:@"Assets" fromBundle:v10 error:&v17];
    id v14 = v17;
    if (v14)
    {
      v15 = getWFVoiceShortcutClientLogObject();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315650;
        *(void *)&buf[4] = "WFImageGetCoreGlyphsCatalogNamed";
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v1;
        *(_WORD *)&buf[22] = 2112;
        v23 = v14;
        _os_log_impl(&dword_1B3C5C000, v15, OS_LOG_TYPE_ERROR, "%s Can't load asset catalog named 'Assets' in requested bundle with name %@: %@", buf, 0x20u);
      }
    }
  }
  else
  {
    uint64_t v13 = 0;
  }

  return v13;
}

void sub_1B3C6F3C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCUICatalogClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!CoreUILibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __CoreUILibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    v6[5] = v6;
    long long v7 = xmmword_1E6079308;
    uint64_t v8 = 0;
    CoreUILibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!CoreUILibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *CoreUILibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFImage+Glyphs.m", 22, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("CUICatalog");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getCUICatalogClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFImage+Glyphs.m", 23, @"Unable to find class %s", "CUICatalog");

LABEL_10:
    __break(1u);
  }
  getCUICatalogClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void WFImageEndUsingCoreGlyphsCatalogs()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_lock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  uint64_t v0 = WFImageLockedResidentCoreGlyphsCatalogRefCount;
  if (!WFImageLockedResidentCoreGlyphsCatalogRefCount)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void WFImageEndUsingCoreGlyphsCatalogs(void)"];

    uint64_t v0 = WFImageLockedResidentCoreGlyphsCatalogRefCount;
  }
  WFImageLockedResidentCoreGlyphsCatalogRefCount = v0 - 1;
  if (v0 == 1)
  {
    id v1 = getWFVoiceShortcutClientLogObject();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      int v5 = 136315138;
      uint64_t v6 = "WFImageEndUsingCoreGlyphsCatalogs";
      _os_log_impl(&dword_1B3C5C000, v1, OS_LOG_TYPE_INFO, "%s Evicting core glyph catalogs from memory, refcount = 0", (uint8_t *)&v5, 0xCu);
    }

    id v2 = (void *)WFImageLockedResidentCoreGlyphsCatalogs;
    WFImageLockedResidentCoreGlyphsCatalogs = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
}

void sub_1B3C6F724(_Unwind_Exception *a1)
{
}

uint64_t __getWFVoiceShortcutClientLogObject_block_invoke()
{
  getWFVoiceShortcutClientLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "VoiceShortcutClient");
  return MEMORY[0x1F41817F8]();
}

uint64_t OUTLINED_FUNCTION_1()
{
  return sub_1B3D723F8();
}

uint64_t OUTLINED_FUNCTION_4()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_0_1(uint64_t a1)
{
  return a1 - 8;
}

void OUTLINED_FUNCTION_1_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, char a15, int a16, char a17, int a18, char a19, int a20,char a21,int a22,char a23,int a24,char a25,int a26,char a27,int a28,char a29,int a30,char a31,int a32,char a33)
{
  *(unsigned char *)(v36 - 112) = v34;
  *(unsigned char *)(v36 - 111) = a13;
  *(unsigned char *)(v36 - 110) = a15;
  *(unsigned char *)(v36 - 109) = a17;
  *(unsigned char *)(v36 - 108) = v35;
  *(unsigned char *)(v36 - 107) = a19;
  *(unsigned char *)(v36 - 106) = a21;
  *(unsigned char *)(v36 - 105) = a23;
  *(unsigned char *)(v36 - 104) = v33;
  *(unsigned char *)(v36 - 103) = a25;
  *(unsigned char *)(v36 - 102) = a27;
  *(unsigned char *)(v36 - 101) = a29;
  *(unsigned char *)(v36 - 100) = a31;
  *(unsigned char *)(v36 - 99) = a33;
}

uint64_t OUTLINED_FUNCTION_1_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_10()
{
  return v0;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  __swift_destroy_boxed_opaque_existential_1(v0);
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_0_3()
{
  return objc_allocWithZone(v0);
}

uint64_t OUTLINED_FUNCTION_0_4(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186498](a1, a2, 7);
}

uint64_t OUTLINED_FUNCTION_0_6(uint64_t a1, unsigned char *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return 0x6163696669746F4ELL;
}

uint64_t OUTLINED_FUNCTION_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  uint64_t v4 = *(void *)(*v1 + 24);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  char v5 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = 5;
  return sub_1B3C801F4(v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return sub_1B3C7D8EC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return sub_1B3D72AE8();
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return sub_1B3D72278();
}

int64_t OUTLINED_FUNCTION_17_0()
{
  uint64_t v2 = *(void **)v0;
  size_t v3 = *(void *)(v0 + 16);
  return xpc_array_get_int64(v2, v3);
}

void OUTLINED_FUNCTION_17_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, int a15, char a16, int a17, char a18)
{
  *(unsigned char *)(v19 - 120) = v18;
  *(unsigned char *)(v19 - 119) = a14;
  *(unsigned char *)(v19 - 118) = a16;
  *(unsigned char *)(v19 - 117) = a18;
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  return v0;
}

void OUTLINED_FUNCTION_23(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return type metadata accessor for LaunchServicesSnapshot(0);
}

uint64_t OUTLINED_FUNCTION_45()
{
  return sub_1B3D73178();
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_20_3(uint64_t a1)
{
  return *(void *)(v2 + *(int *)(a1 + 20)) == *(void *)(v1 + *(int *)(a1 + 20));
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  return sub_1B3D72AE8();
}

uint64_t OUTLINED_FUNCTION_9_0(uint64_t a1)
{
  return sub_1B3C7F748(a1, 0, 4);
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_9_2(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  return sub_1B3C7532C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_24()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  return sub_1B3D72BA8();
}

void OUTLINED_FUNCTION_9_6(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *OUTLINED_FUNCTION_9_7()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_10_0(uint64_t a1)
{
  return sub_1B3C7F748(a1, 0, 5);
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return sub_1B3C7D8EC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1B3C966FC(a1, a2, v9, v8, v10, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return *(void *)(v0 - 344);
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return sub_1B3D72AE8();
}

uint64_t OUTLINED_FUNCTION_13_3(uint64_t a1)
{
  return MEMORY[0x1F4188298](a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_13_4()
{
  return sub_1B3D726B8();
}

unint64_t OUTLINED_FUNCTION_13_5()
{
  return 0xD00000000000001ELL;
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  return sub_1B3D723F8();
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t OUTLINED_FUNCTION_52()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_52_0@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_16_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  return sub_1B3D72358();
}

uint64_t OUTLINED_FUNCTION_4_0(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return sub_1B3D72BA8();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t OUTLINED_FUNCTION_4_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  uint64_t v4 = *(void *)(*v1 + 24);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  char v5 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = 4;
  return sub_1B3C801F4(v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return *(void *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return sub_1B3D71D48();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return sub_1B3D72AA8();
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_6()
{
  return v0;
}

void OUTLINED_FUNCTION_4_7()
{
  void *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_22_3(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_22_6()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return sub_1B3CD1D94();
}

uint64_t OUTLINED_FUNCTION_50()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return sub_1B3D73178();
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return sub_1B3D73118();
}

uint64_t OUTLINED_FUNCTION_47()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_47_1()
{
  return sub_1B3D72AE8();
}

void *OUTLINED_FUNCTION_35(void *result, int a2)
{
  __CFString *result = (a2 - 1);
  return result;
}

uint64_t OUTLINED_FUNCTION_35_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return sub_1B3D72C18();
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  return sub_1B3D72C18();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return sub_1B3D72978();
}

uint64_t OUTLINED_FUNCTION_8_1(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return sub_1B3D72868();
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return sub_1B3D73188();
}

uint64_t OUTLINED_FUNCTION_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_8_4()
{
  return *(void *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  return sub_1B3C7532C(v1, v0);
}

void OUTLINED_FUNCTION_8_7(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 - 40) = a2;
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3)
{
  return sub_1B3C834BC((uint64_t)&a3, v3, v6, v5, a1, v4, a2);
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return sub_1B3D72978();
}

uint64_t OUTLINED_FUNCTION_12_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return v0;
}

uint64_t __VCIsInternalBuild_block_invoke()
{
  uint64_t result = os_variant_has_internal_diagnostics();
  VCIsInternalBuild_isInternal = result;
  return result;
}

void *__UIKitLibrary_block_invoke()
{
  uint64_t result = dlopen("/System/Library/Frameworks/UIKit.framework/UIKit", 2);
  UIKitLibrary_sLib = (uint64_t)result;
  return result;
}

uint64_t __getWFWalrusLogObject_block_invoke()
{
  getWFWalrusLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Walrus");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFTipsLogObject_block_invoke()
{
  getWFTipsLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Tips");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFStaccatoLogObject_block_invoke()
{
  getWFStaccatoLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Staccato");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFHomescreenLogObject_block_invoke()
{
  getWFHomescreenLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Homescreen");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFGeneralLogObject_block_invoke()
{
  getWFGeneralLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "General");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFGalleryLogObject_block_invoke()
{
  getWFGalleryLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Gallery");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFFilesLogObject_block_invoke()
{
  getWFFilesLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Files");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFDatabaseLogObject_block_invoke()
{
  getWFDatabaseLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Database");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFCoherenceLogObject_block_invoke()
{
  getWFCoherenceLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Coherence");
  return MEMORY[0x1F41817F8]();
}

id getWFTipsLogObject()
{
  if (getWFTipsLogObject_onceToken != -1) {
    dispatch_once(&getWFTipsLogObject_onceToken, &__block_literal_global_95);
  }
  uint64_t v0 = (void *)getWFTipsLogObject_log;
  return v0;
}

id getWFHomescreenLogObject()
{
  if (getWFHomescreenLogObject_onceToken != -1) {
    dispatch_once(&getWFHomescreenLogObject_onceToken, &__block_literal_global_92);
  }
  uint64_t v0 = (void *)getWFHomescreenLogObject_log;
  return v0;
}

id getWFGalleryLogObject()
{
  if (getWFGalleryLogObject_onceToken != -1) {
    dispatch_once(&getWFGalleryLogObject_onceToken, &__block_literal_global_65);
  }
  uint64_t v0 = (void *)getWFGalleryLogObject_log;
  return v0;
}

id getWFCoherenceLogObject()
{
  if (getWFCoherenceLogObject_onceToken != -1) {
    dispatch_once(&getWFCoherenceLogObject_onceToken, &__block_literal_global_125);
  }
  uint64_t v0 = (void *)getWFCoherenceLogObject_log;
  return v0;
}

void __WFCurrentBundle_block_invoke()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  memset(&v4, 0, sizeof(v4));
  if (dladdr(WFCurrentBundle, &v4) && v4.dli_fname)
  {
    uint64_t v0 = [objc_alloc(MEMORY[0x1E4F1CB10]) initFileURLWithFileSystemRepresentation:v4.dli_fname isDirectory:0 relativeToURL:0];
    uint64_t v1 = (void *)_CFBundleCopyBundleURLForExecutableURL();
    uint64_t v2 = [MEMORY[0x1E4F28B50] bundleWithURL:v1];
    uint64_t v3 = (void *)WFCurrentBundle_bundle;
    WFCurrentBundle_bundle = v2;
  }
  else
  {
    uint64_t v0 = getWFGeneralLogObject();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v6 = "WFCurrentBundle_block_invoke";
      _os_log_impl(&dword_1B3C5C000, v0, OS_LOG_TYPE_ERROR, "%s WFLocalizedString failed to locate current bundle", buf, 0xCu);
    }
  }
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void sub_1B3C721CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getMCProfileConnectionClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    v6[2] = (void *)3221225472;
    v6[3] = __ManagedConfigurationLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    v6[5] = v6;
    long long v7 = xmmword_1E6078DE8;
    uint64_t v8 = 0;
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    Dl_info v4 = [NSString stringWithUTF8String:"void *ManagedConfigurationLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFDevice.m", 46, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("MCProfileConnection");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"Class getMCProfileConnectionClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFDevice.m", 47, @"Unable to find class %s", "MCProfileConnection");

LABEL_10:
    __break(1u);
  }
  getMCProfileConnectionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id WFUUIDv4FromInteger(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  __int16 v3 = a1;
  char v4 = BYTE2(a1);
  char v5 = BYTE3(a1);
  char v6 = BYTE4(a1);
  char v7 = BYTE5(a1);
  char v9 = HIBYTE(a1);
  char v11 = BYTE1(a1);
  char v12 = BYTE2(a1);
  char v13 = BYTE3(a1);
  char v14 = BYTE4(a1);
  char v15 = BYTE5(a1);
  char v16 = BYTE6(a1);
  char v17 = HIBYTE(a1);
  char v8 = BYTE6(a1) & 0xF | 0x40;
  char v10 = a1 & 0x3F | 0x80;
  uint64_t v1 = (void *)[objc_alloc(MEMORY[0x1E4F29128]) initWithUUIDBytes:&v3];
  return v1;
}

uint64_t static XPCAppProtectionEventStream.name.getter()
{
  return sub_1B3D723A8();
}

VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional __swiftcall XPCAppProtectionEventStream.Event.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1B3D72AC8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional __swiftcall XPCAppProtectionEventStream.Event.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v2 = v1;
  result.value = XPCAppProtectionEventStream.Event.CodingKeys.init(rawValue:)(stringValue).value;
  *uint64_t v2 = v4;
  return result;
}

VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional __swiftcall XPCAppProtectionEventStream.Event.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  *uint64_t v1 = 3;
  return (VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional)intValue;
}

uint64_t XPCAppProtectionEventStream.Event.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t XPCAppProtectionEventStream.Event.CodingKeys.rawValue.getter()
{
  return *(void *)&aXpceventhidden[8 * *v0];
}

uint64_t XPCAppProtectionEventStream.Event.CodingKeys.stringValue.getter()
{
  return *(void *)&aXpceventhidden[8 * *v0];
}

uint64_t sub_1B3C72BA4(char *a1, char *a2)
{
  return sub_1B3C72E5C(*a1, *a2);
}

uint64_t sub_1B3C72BB0()
{
  uint64_t v0 = sub_1B3D71DF8();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B3D71DF8();
  unint64_t v5 = v4;
  char v6 = MEMORY[0x1B3EC3910](v0, v2, v3, v4);
  sub_1B3C7532C(v3, v5);
  sub_1B3C7532C(v0, v2);
  return v6 & 1;
}

uint64_t sub_1B3C72C30()
{
  uint64_t v0 = sub_1B3D723A8();
  uint64_t v2 = v1;
  if (v0 == sub_1B3D723A8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1B3D72E58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1B3C72CB8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6F666E4972657355;
  }
  else {
    uint64_t v3 = 1701667150;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6F666E4972657355;
  }
  else {
    uint64_t v5 = 1701667150;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = OUTLINED_FUNCTION_3_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t OUTLINED_FUNCTION_67()
{
  return 1;
}

uint64_t sub_1B3C72D4C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x656C67676F74;
  }
  else {
    uint64_t v3 = 1852994932;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x656C67676F74;
  }
  else {
    uint64_t v5 = 1852994932;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = OUTLINED_FUNCTION_3_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B3C72DD4(char a1, char a2)
{
  if (*(void *)&aIsonetimregion[8 * a1] == *(void *)&aIsonetimregion[8 * a2]
    && *(void *)&aTimerange_2[8 * a1 + 8] == *(void *)&aTimerange_2[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = OUTLINED_FUNCTION_3_0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

BOOL sub_1B3C72E50(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1B3C72E5C(char a1, char a2)
{
  if (*(void *)&aXpceventhidden[8 * a1] == *(void *)&aXpceventhidden[8 * a2]
    && *(void *)&aXpceventhidden[8 * a1 + 24] == *(void *)&aXpceventhidden[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_1B3D72E58();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B3C72EE4()
{
  return sub_1B3CD1938();
}

uint64_t sub_1B3C72EEC()
{
  return sub_1B3CD1ADC();
}

uint64_t sub_1B3C72EF4()
{
  return sub_1B3CD1D10();
}

VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional sub_1B3C72EFC(Swift::String *a1)
{
  return XPCAppProtectionEventStream.Event.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1B3C72F08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = XPCAppProtectionEventStream.Event.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B3C72F38()
{
  return 0;
}

uint64_t sub_1B3C72F48(uint64_t a1)
{
  unint64_t v2 = sub_1B3C753E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C72F84(uint64_t a1)
{
  unint64_t v2 = sub_1B3C753E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t XPCAppProtectionEventStream.Event.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1B3C733B8(a1, (uint64_t)v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4FA4D8);
  if (swift_dynamicCast())
  {
    uint64_t v5 = sub_1B3C73708(v21);
    if (v2)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      char v7 = v5;
      char v8 = (void *)sub_1B3C79254(0x746E657645435058, 0xEC000000656D614ELL, v5);
      uint64_t v19 = sub_1B3C73BDC(v8, v9, 0);
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t v20 = v12;
      sub_1B3D72278();
      id v13 = xpc_dictionary_get_value(v7, "hiddenPayload");
      xpc_object_t v23 = v7;
      char v14 = (void *)sub_1B3C73A18((uint64_t)v13, 1);
      swift_unknownObjectRelease();
      size_t v15 = sub_1B3C73468(v14);
      swift_unknownObjectRelease();
      sub_1B3D72278();
      xpc_object_t v16 = xpc_dictionary_get_value(v23, "unhiddenPayload");
      uint64_t v18 = (void *)sub_1B3C73A18((uint64_t)v16, 2);
      swift_unknownObjectRelease();
      size_t v17 = sub_1B3C73468(v18);
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1B3D72278();
      sub_1B3D72278();
      swift_bridgeObjectRelease();
      *a2 = v19;
      a2[1] = v20;
      a2[2] = v15;
      a2[3] = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B3C7341C();
    OUTLINED_FUNCTION_4();
    *unint64_t v6 = 0;
    v6[1] = 0;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
}

uint64_t sub_1B3C733B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1B3C7341C()
{
  unint64_t result = qword_1E9CE20D0;
  if (!qword_1E9CE20D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE20D0);
  }
  return result;
}

size_t sub_1B3C73468(void *a1)
{
  uint64_t v2 = MEMORY[0x1B3EC6600]();
  if (v2 == sub_1B3D72098())
  {
    size_t result = xpc_array_get_count(a1);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      int64_t v8 = result;
      swift_unknownObjectRetain();
      return sub_1B3C73534(0, v8, a1);
    }
  }
  else
  {
    sub_1B3D72098();
    uint64_t v3 = sub_1B3D723B8();
    uint64_t v5 = v4;
    sub_1B3C7341C();
    swift_allocError();
    *unint64_t v6 = v3;
    v6[1] = v5;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1B3C73534(uint64_t result, int64_t a2, void *a3)
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result)) {
    goto LABEL_19;
  }
  if (v3)
  {
    int64_t v6 = result;
    uint64_t v19 = MEMORY[0x1E4FBC860];
    size_t result = (uint64_t)sub_1B3C93AE4(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    uint64_t v7 = v19;
    int64_t v8 = v6;
    while (a2 != v8)
    {
      if (!xpc_array_get_string(a3, v8))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2390);
        uint64_t v15 = sub_1B3D723B8();
        uint64_t v17 = v16;
        sub_1B3C7341C();
        swift_allocError();
        uint64_t *v18 = v15;
        v18[1] = v17;
        swift_willThrow();
        swift_unknownObjectRelease();
        swift_release();
        return v7;
      }
      size_t result = sub_1B3D72408();
      uint64_t v9 = result;
      uint64_t v11 = v10;
      unint64_t v13 = *(void *)(v19 + 16);
      unint64_t v12 = *(void *)(v19 + 24);
      if (v13 >= v12 >> 1) {
        size_t result = (uint64_t)sub_1B3C93AE4((char *)(v12 > 1), v13 + 1, 1);
      }
      *(void *)(v19 + 16) = v13 + 1;
      uint64_t v14 = v19 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      if (a2 < v6) {
        goto LABEL_17;
      }
      if (v8 >= a2) {
        goto LABEL_18;
      }
      if (a2 == ++v8)
      {
        swift_unknownObjectRelease();
        return v7;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_unknownObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void *sub_1B3C736F0(void *a1)
{
  return sub_1B3C73708(a1);
}

void *sub_1B3C73708(void *a1)
{
  uint64_t v2 = (const _xpc_type_s *)MEMORY[0x1B3EC6600]();
  if (v2 == (const _xpc_type_s *)sub_1B3D720E8())
  {
    swift_unknownObjectRetain();
    sub_1B3D72278();
  }
  else
  {
    uint64_t v3 = sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v5 = v4;
    *uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2320);
    v7[0] = 0;
    v7[1] = 0xE000000000000000;
    sub_1B3D72278();
    sub_1B3D72938();
    sub_1B3D723F8();
    xpc_type_get_name(v2);
    sub_1B3D72408();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    a1 = v7;
    sub_1B3D723F8();
    sub_1B3D72978();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v3 - 8) + 104))(v5, *MEMORY[0x1E4FBBA70], v3);
    swift_willThrow();
  }
  return a1;
}

uint64_t XPCAppProtectionEventStream.Event.notification.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B3D72378();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE20D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B3D7FC60;
  sub_1B3D723A8();
  sub_1B3D728E8();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE20E0);
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 72) = v2;
  sub_1B3D723A8();
  sub_1B3D72278();
  sub_1B3D728E8();
  *(void *)(inited + 168) = v4;
  *(void *)(inited + 144) = v1;
  sub_1B3D72278();
  sub_1B3D72248();
  return sub_1B3D71BF8();
}

uint64_t sub_1B3C739FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return XPCAppProtectionEventStream.Event.init(from:)(a1, a2);
}

uint64_t sub_1B3C73A18(uint64_t a1, char a2)
{
  if (a1) {
    return swift_unknownObjectRetain();
  }
  uint64_t v4 = sub_1B3D72988();
  swift_allocError();
  int64_t v6 = (unsigned char *)v5;
  *(void *)(v5 + 24) = &type metadata for XPCAppProtectionEventStream.Event.CodingKeys;
  *(void *)(v5 + 32) = sub_1B3C753E4();
  *int64_t v6 = a2;
  sub_1B3D72278();
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  sub_1B3C73E5C();
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2318);
  sub_1B3D723F8();
  sub_1B3D72978();
  (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v4 - 8) + 104))(v6, *MEMORY[0x1E4FBBA68], v4);
  return swift_willThrow();
}

void *sub_1B3C73BDC(void *a1, uint64_t a2, char a3)
{
  if (a2)
  {
    sub_1B3D72278();
  }
  else
  {
    uint64_t v5 = sub_1B3D72988();
    swift_allocError();
    uint64_t v7 = (unsigned char *)v6;
    *(void *)(v6 + 24) = &type metadata for XPCAppProtectionEventStream.Event.CodingKeys;
    *(void *)(v6 + 32) = sub_1B3C753E4();
    unsigned char *v7 = a3;
    sub_1B3D72278();
    sub_1B3D72938();
    swift_bridgeObjectRelease();
    v9[0] = 0xD00000000000001DLL;
    v9[1] = 0x80000001B3D88D50;
    char v10 = a3;
    sub_1B3C73E5C();
    sub_1B3D72C58();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    sub_1B3D723F8();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2318);
    a1 = v9;
    sub_1B3D723F8();
    sub_1B3D72978();
    (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v5 - 8) + 104))(v7, *MEMORY[0x1E4FBBA68], v5);
    swift_willThrow();
  }
  return a1;
}

unint64_t sub_1B3C73DBC()
{
  unint64_t result = qword_1E9CE20E8;
  if (!qword_1E9CE20E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE20E8);
  }
  return result;
}

unint64_t sub_1B3C73E0C()
{
  unint64_t result = qword_1E9CE20F0;
  if (!qword_1E9CE20F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE20F0);
  }
  return result;
}

unint64_t sub_1B3C73E5C()
{
  unint64_t result = qword_1E9CE20F8;
  if (!qword_1E9CE20F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE20F8);
  }
  return result;
}

unint64_t sub_1B3C73EA8(uint64_t a1)
{
  unint64_t result = sub_1B3C73ED0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B3C73ED0()
{
  unint64_t result = qword_1E9CE2100;
  if (!qword_1E9CE2100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2100);
  }
  return result;
}

unint64_t sub_1B3C73F20()
{
  unint64_t result = qword_1E9CE2108;
  if (!qword_1E9CE2108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2108);
  }
  return result;
}

void type metadata accessor for XPCAppProtectionEventStream()
{
}

uint64_t initializeBufferWithCopyOfBuffer for XPCAppProtectionEventStream.Event(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for XPCAppProtectionEventStream.Event()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for XPCAppProtectionEventStream.Event(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1B3D72278();
  sub_1B3D72278();
  sub_1B3D72278();
  return a1;
}

void *assignWithCopy for XPCAppProtectionEventStream.Event(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for XPCAppProtectionEventStream.Event(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCAppProtectionEventStream.Event(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCAppProtectionEventStream.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for XPCAppProtectionEventStream.Event()
{
}

uint64_t getEnumTagSinglePayload for XPCAppProtectionEventStream.Event.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for XPCAppProtectionEventStream.Event.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3C74304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1B3C7432C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1B3C74338(unsigned char *result, char a2)
{
  void *result = a2;
  return result;
}

void type metadata accessor for XPCAppProtectionEventStream.Event.CodingKeys()
{
}

uint64_t sub_1B3C7434C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1B3C7436C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

void type metadata accessor for ProgressUserInfoKey(uint64_t a1)
{
}

void type metadata accessor for LSPersistentIdentifier(uint64_t a1)
{
}

void *initializeBufferWithCopyOfBuffer for XPCAppProtectionEventStream.Event.XPCEventDecodingError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1B3D72278();
  return a1;
}

uint64_t destroy for XPCAppProtectionEventStream.Event.XPCEventDecodingError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for XPCAppProtectionEventStream.Event.XPCEventDecodingError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for XPCAppProtectionEventStream.Event.XPCEventDecodingError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCAppProtectionEventStream.Event.XPCEventDecodingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for XPCAppProtectionEventStream.Event.XPCEventDecodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1B3C74524(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1B3C7453C(void *result, int a2)
{
  if (a2 < 0)
  {
    void *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCAppProtectionEventStream.Event.XPCEventDecodingError()
{
  return &type metadata for XPCAppProtectionEventStream.Event.XPCEventDecodingError;
}

uint64_t sub_1B3C7456C(uint64_t a1, char a2)
{
  if (a1) {
    return swift_unknownObjectRetain();
  }
  sub_1B3D72988();
  OUTLINED_FUNCTION_4();
  uint64_t v5 = (unsigned char *)v4;
  *(void *)(v4 + 24) = &unk_1F0C7B270;
  *(void *)(v4 + 32) = sub_1B3C75430();
  *uint64_t v5 = a2 & 1;
  sub_1B3D72278();
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_0();
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_1();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2318);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_8_0();
  uint64_t v6 = OUTLINED_FUNCTION_5();
  v7(v6);
  return swift_willThrow();
}

uint64_t sub_1B3C746E8(uint64_t a1, uint64_t a2, char a3)
{
  if (a2)
  {
    sub_1B3D72278();
  }
  else
  {
    a1 = sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v6 = (unsigned char *)v5;
    *(void *)(v5 + 24) = &unk_1F0C7B270;
    *(void *)(v5 + 32) = sub_1B3C75430();
    *uint64_t v6 = a3 & 1;
    sub_1B3D72278();
    sub_1B3D72938();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_2_0();
    sub_1B3D72C58();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_1();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2318);
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_8_0();
    uint64_t v7 = OUTLINED_FUNCTION_5();
    v8(v7);
    swift_willThrow();
  }
  return a1;
}

uint64_t sub_1B3C7487C(uint64_t a1, id *a2)
{
  uint64_t result = sub_1B3D71DC8();
  *a2 = 0;
  return result;
}

uint64_t sub_1B3C7490C(uint64_t a1, id *a2)
{
  char v3 = sub_1B3D71DE8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1B3C749AC()
{
  uint64_t v0 = sub_1B3D71DF8();
  unint64_t v2 = v1;
  uint64_t v3 = sub_1B3D71DB8();
  sub_1B3C7532C(v0, v2);
  return v3;
}

uint64_t sub_1B3C749F4()
{
  return sub_1B3C74A8C(*v0);
}

uint64_t sub_1B3C749FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = sub_1B3D71DF8();
  unint64_t v5 = v4;
  uint64_t v6 = a2();
  sub_1B3C7532C(v3, v5);
  return v6;
}

uint64_t sub_1B3C74A4C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_1B3D723A8();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B3C74A8C(uint64_t a1)
{
  return MEMORY[0x1F4183828](a1, MEMORY[0x1E4FBC098]);
}

uint64_t sub_1B3C74A98()
{
  return sub_1B3CAD030();
}

uint64_t sub_1B3C74AA0(uint64_t a1)
{
  return sub_1B3C74B94(a1, *v1);
}

uint64_t sub_1B3C74AA8()
{
  uint64_t v0 = sub_1B3D71DF8();
  unint64_t v2 = v1;
  sub_1B3D73108();
  sub_1B3D71E08();
  uint64_t v3 = sub_1B3D73138();
  sub_1B3C7532C(v0, v2);
  return v3;
}

uint64_t sub_1B3C74B20()
{
  sub_1B3D723A8();
  sub_1B3D73108();
  sub_1B3D723E8();
  uint64_t v0 = sub_1B3D73138();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B3C74B98()
{
  return sub_1B3C74A4C(*v0, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1B3C74BC8(uint64_t a1, id *a2)
{
  return sub_1B3C75848(a1, a2);
}

uint64_t sub_1B3C74BE0(uint64_t a1, id *a2)
{
  return sub_1B3C757C8(a1, a2) & 1;
}

uint64_t sub_1B3C74BFC()
{
  return sub_1B3C74A4C(*v0, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1B3C74C2C()
{
  return sub_1B3C75774();
}

uint64_t sub_1B3C74C34()
{
  return sub_1B3C74B20();
}

uint64_t sub_1B3C74C3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3C758C0();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C74C64()
{
  return sub_1B3C749FC(*v0, MEMORY[0x1E4F27770]);
}

uint64_t sub_1B3C74C9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3C749AC();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C74CC4()
{
  return sub_1B3C749FC(*v0, MEMORY[0x1E4F27798]);
}

uint64_t sub_1B3C74CF4()
{
  return sub_1B3CACFE4();
}

uint64_t sub_1B3C74CFC()
{
  return sub_1B3C74AA8();
}

uint64_t sub_1B3C74D04@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = sub_1B3D71DB8();
  uint64_t result = sub_1B3C7532C(v3, v4);
  *a2 = v5;
  return result;
}

uint64_t sub_1B3C74D50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3CACC10(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL sub_1B3C74D7C(uint64_t *a1, uint64_t *a2)
{
  return sub_1B3C72E50(*a1, *a2);
}

uint64_t sub_1B3C74D88()
{
  return sub_1B3C72C30();
}

uint64_t sub_1B3C74D94()
{
  return sub_1B3C72BB0();
}

void *sub_1B3C74DA0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1B3C74DAC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1B3C74DB8()
{
  return sub_1B3D72AB8();
}

uint64_t sub_1B3C74E84()
{
  sub_1B3C751C4(&qword_1E9CE22D8, type metadata accessor for ProgressUserInfoKey);
  sub_1B3C751C4(&qword_1E9CE22E0, type metadata accessor for ProgressUserInfoKey);
  return sub_1B3D72AB8();
}

uint64_t sub_1B3C74F40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B3D72378();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1B3C74F88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3C74FB4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B3C74FB8()
{
  sub_1B3C751C4((unint64_t *)&qword_1E9CE1F30, type metadata accessor for NSKeyValueChangeKey);
  sub_1B3C751C4(&qword_1E9CE23E8, type metadata accessor for NSKeyValueChangeKey);
  return sub_1B3D72AB8();
}

uint64_t sub_1B3C75074()
{
  sub_1B3C751C4(&qword_1E9CE22E8, type metadata accessor for LSPersistentIdentifier);
  sub_1B3C751C4(&qword_1E9CE22F0, type metadata accessor for LSPersistentIdentifier);
  sub_1B3C75398();
  return sub_1B3D72AB8();
}

uint64_t sub_1B3C75134()
{
  return sub_1B3C751C4(&qword_1E9CE22A8, type metadata accessor for LSPersistentIdentifier);
}

uint64_t sub_1B3C7517C()
{
  return sub_1B3C751C4(&qword_1E9CE22B0, type metadata accessor for LSPersistentIdentifier);
}

uint64_t sub_1B3C751C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B3C7520C()
{
  return sub_1B3C751C4(&qword_1E9CE22B8, type metadata accessor for LSPersistentIdentifier);
}

uint64_t sub_1B3C75254()
{
  return sub_1B3C751C4(&qword_1E9CE22C0, type metadata accessor for ProgressUserInfoKey);
}

uint64_t sub_1B3C7529C()
{
  return sub_1B3C751C4(&qword_1E9CE22C8, type metadata accessor for ProgressUserInfoKey);
}

uint64_t sub_1B3C752E4()
{
  return sub_1B3C751C4(&qword_1E9CE22D0, type metadata accessor for ProgressUserInfoKey);
}

uint64_t sub_1B3C7532C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B3C75384(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1B3C7532C(a1, a2);
  }
  return a1;
}

unint64_t sub_1B3C75398()
{
  unint64_t result = qword_1E9CE22F8;
  if (!qword_1E9CE22F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE22F8);
  }
  return result;
}

unint64_t sub_1B3C753E4()
{
  unint64_t result = qword_1E9CE2300;
  if (!qword_1E9CE2300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2300);
  }
  return result;
}

unint64_t sub_1B3C75430()
{
  unint64_t result = qword_1E9CE2308;
  if (!qword_1E9CE2308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2308);
  }
  return result;
}

unint64_t sub_1B3C7547C()
{
  unint64_t result = qword_1E9CE2310;
  if (!qword_1E9CE2310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2310);
  }
  return result;
}

uint64_t sub_1B3C754C8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 == 1 || !*(unsigned char *)(a1 + 8))
    {
      if (*(void *)a1) {
        int v2 = -1;
      }
      else {
        int v2 = 0;
      }
    }
    else
    {
      int v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1B3C75504(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)unint64_t result = a2 - 2;
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = 0;
    }
  }
  return result;
}

void type metadata accessor for WFLogCategoryName(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void sub_1B3C7557C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1B3C755C4()
{
  return sub_1B3C751C4(&qword_1E9CE23A0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1B3C7560C()
{
  return sub_1B3C751C4(&qword_1E9CE23A8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1B3C75654()
{
  return sub_1B3C751C4(&qword_1E9CE23B0, type metadata accessor for WFLogCategoryName);
}

uint64_t sub_1B3C7569C()
{
  return sub_1B3C751C4((unint64_t *)&unk_1E9CE23B8, type metadata accessor for WFLogCategoryName);
}

uint64_t sub_1B3C756E4()
{
  return sub_1B3C751C4(&qword_1EB4FA6D0, type metadata accessor for WFLogCategoryName);
}

uint64_t sub_1B3C7572C()
{
  return sub_1B3C751C4(&qword_1E9CE1F38, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1B3C75774()
{
  sub_1B3D723A8();
  sub_1B3D723E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C757C8(uint64_t a1, id *a2)
{
  char v3 = sub_1B3D72398();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1B3C75848(uint64_t a1, id *a2)
{
  uint64_t result = sub_1B3D72388();
  *a2 = 0;
  return result;
}

uint64_t sub_1B3C758C0()
{
  sub_1B3D723A8();
  uint64_t v0 = sub_1B3D72378();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1B3C758F8()
{
  unint64_t result = qword_1E9CE23D0;
  if (!qword_1E9CE23D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E9CE23D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE23D0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t OUTLINED_FUNCTION_2_0()
{
  return sub_1B3C7547C();
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return sub_1B3D72E58();
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return sub_1B3D723F8();
}

BOOL RunnerProcess.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t sub_1B3C75A28()
{
  return sub_1B3CD1944();
}

uint64_t sub_1B3C75A30()
{
  return sub_1B3CD1C00();
}

BOOL sub_1B3C75A38@<W0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  BOOL result = RunnerProcess.init(rawValue:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t static RunnerConnection.ServiceSpec.SystemRunner.machName.getter()
{
  return OUTLINED_FUNCTION_6_2();
}

unint64_t static RunnerConnection.ServiceSpec.SystemRunner.domain.getter()
{
  return OUTLINED_FUNCTION_6_2();
}

unint64_t static RunnerConnection.ServiceSpec.SystemRunner.serviceIdentifier.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static RunnerConnection.ServiceSpec.XPCRunner.serviceName.getter()
{
  return 0xD00000000000002ELL;
}

void sub_1B3C75ABC(void *a1@<X0>, char *a2@<X8>)
{
  char v4 = (void *)sub_1B3D72378();
  id v5 = objc_msgSend(a1, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_1B3D72888();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1B3C78E98((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {

    sub_1B3C78F00((uint64_t)v9);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  if (objc_msgSend(a1, sel_isInvalid))
  {
    swift_bridgeObjectRelease();
LABEL_8:

    goto LABEL_11;
  }
  uint64_t v6 = sub_1B3D72AC8();

  swift_bridgeObjectRelease();
  if (!v6)
  {
    char v7 = 0;
    goto LABEL_12;
  }
LABEL_11:
  char v7 = 1;
LABEL_12:
  *a2 = v7;
}

void RunnerConnection.Policy.Client.init(client:)(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_1B3C75ABC(objc_msgSend(a1, sel_remoteToken), &v4);

  *a2 = v4;
}

uint64_t RunnerConnection.Policy.Client.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1B3D72AC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t RunnerConnection.Policy.Client.rawValue.getter()
{
  return 0x74756374726F6853;
}

uint64_t sub_1B3C75CE0@<X0>(BOOL *a1@<X8>)
{
  return RunnerConnection.Policy.Client.init(rawValue:)(a1);
}

uint64_t sub_1B3C75CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RunnerConnection.Policy.Client.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B3C75D14@<X0>(void *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_1B3D72058();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  int64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v45 - v9;
  *((void *)&v54 + 1) = &type metadata for ShortcutsFeatureFlags;
  unint64_t v55 = sub_1B3C78E10();
  LOBYTE(v53) = 6;
  char v11 = sub_1B3D71ED8();
  uint64_t v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  if (v11)
  {
    uint64_t v50 = v4;
    v51 = a2;
    self;
    id v49 = a1;
    uint64_t v13 = swift_dynamicCastObjCClass();
    BOOL v14 = v13 != 0;
    unint64_t v15 = 0xD00000000000001FLL;
    if (!v13) {
      unint64_t v15 = 0xD000000000000023;
    }
    unint64_t v46 = v15;
    if (v13) {
      unint64_t v16 = 0x80000001B3D89090;
    }
    else {
      unint64_t v16 = 0x80000001B3D89060;
    }
    id v17 = objc_msgSend(self, sel_processInfo);
    objc_msgSend(v17, sel_if_auditToken);
    long long v47 = v54;
    long long v48 = v53;

    id v18 = objc_allocWithZone(MEMORY[0x1E4F4F6A8]);
    long long v53 = v48;
    long long v54 = v47;
    sub_1B3C75ABC(objc_msgSend(v18, sel_initWithAuditToken_, &v53), (char *)&v53);
    LODWORD(v48) = v53;
    *(void *)&long long v47 = v14;
    if ((_BYTE)v53) {
      BOOL v20 = 0;
    }
    else {
      BOOL v20 = v14;
    }
    if (qword_1EB4FA690 != -1) {
      uint64_t v19 = swift_once();
    }
    long long v21 = (os_unfair_lock_s *)qword_1EB4FA6B8;
    uint64_t v22 = MEMORY[0x1F4188790](v19);
    *(&v45 - 2) = (uint64_t)"XPCRunner";
    MEMORY[0x1F4188790](v22);
    *(&v45 - 2) = (uint64_t)sub_1B3C78F60;
    *(&v45 - 1) = v23;
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    sub_1B3C78FB4(v24);
    os_unfair_lock_unlock(v21 + 4);
    swift_release();
    sub_1B3D72278();
    uint64_t v25 = sub_1B3D72038();
    os_log_type_t v26 = sub_1B3D72748();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(void *)&long long v53 = v45;
      *(_DWORD *)uint64_t v27 = 136315906;
      uint64_t v52 = v47;
      uint64_t v28 = sub_1B3D723B8();
      uint64_t v52 = sub_1B3C8C9B0(v28, v29, (uint64_t *)&v53);
      sub_1B3D72868();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      sub_1B3D72278();
      uint64_t v52 = sub_1B3C8C9B0(v46, v16, (uint64_t *)&v53);
      sub_1B3D72868();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 22) = 2080;
      uint64_t v52 = v20;
      uint64_t v30 = sub_1B3D723B8();
      uint64_t v32 = sub_1B3C8C9B0(v30, v31, (uint64_t *)&v53);
      OUTLINED_FUNCTION_8_1(v32);
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 32) = 2080;
      LOBYTE(v52) = v48;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2520);
      uint64_t v33 = sub_1B3D723B8();
      uint64_t v35 = sub_1B3C8C9B0(v33, v34, (uint64_t *)&v53);
      OUTLINED_FUNCTION_8_1(v35);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B3C5C000, v25, v26, "run request ideally goes to %s because '%s', decided on %s for %s", (uint8_t *)v27, 0x2Au);
      uint64_t v36 = v45;
      swift_arrayDestroy();
      MEMORY[0x1B3EC61A0](v36, -1, -1);
      MEMORY[0x1B3EC61A0](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v50);
    a2 = v51;
  }
  else
  {
    if (qword_1EB4FA690 != -1) {
      uint64_t v12 = swift_once();
    }
    v37 = (os_unfair_lock_s *)qword_1EB4FA6B8;
    uint64_t v38 = MEMORY[0x1F4188790](v12);
    *(&v45 - 2) = (uint64_t)"XPCRunner";
    MEMORY[0x1F4188790](v38);
    *(&v45 - 2) = (uint64_t)sub_1B3C78F60;
    *(&v45 - 1) = v39;
    swift_retain();
    os_unfair_lock_lock(v37 + 4);
    sub_1B3C78FB4(v40);
    os_unfair_lock_unlock(v37 + 4);
    swift_release();
    v41 = sub_1B3D72038();
    os_log_type_t v42 = sub_1B3D72748();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1B3C5C000, v41, v42, "Shortcuts/system_runner=off, dispatching run to isolated process", v43, 2u);
      MEMORY[0x1B3EC61A0](v43, -1, -1);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    BOOL v20 = 0;
  }
  *a2 = v20;
  return result;
}

uint64_t sub_1B3C7636C()
{
  uint64_t result = sub_1B3C7638C();
  qword_1E9CE2450 = result;
  return result;
}

uint64_t sub_1B3C7638C()
{
  sub_1B3C78E5C(0, &qword_1E9CE2528);
  id v0 = sub_1B3C764B4();
  id v1 = (id)WFOutOfProcessWorkflowControllerVendorBSProtocol();
  objc_msgSend(v0, sel_setServer_, v1);

  id v2 = (id)WFOutOfProcessWorkflowControllerHostBSProtocol();
  objc_msgSend(v0, sel_setClient_, v2);

  objc_msgSend(v0, sel_setClientMessagingExpectation_, 0);
  objc_msgSend(v0, sel_copy);
  sub_1B3D72888();

  swift_unknownObjectRelease();
  sub_1B3C78E5C(0, &qword_1E9CE2530);
  swift_dynamicCast();
  return v4;
}

id sub_1B3C764B4()
{
  id v0 = (void *)sub_1B3D72378();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_interfaceWithIdentifier_, v0);

  return v1;
}

id static RunnerConnection.bsServiceInterface.getter()
{
  if (qword_1E9CE2090 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  id v0 = (void *)qword_1E9CE2450;
  return v0;
}

void static RunnerConnection.bsServiceInterface.setter(uint64_t a1)
{
  if (qword_1E9CE2090 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_7_0();
  id v2 = (void *)qword_1E9CE2450;
  qword_1E9CE2450 = a1;
}

uint64_t (*static RunnerConnection.bsServiceInterface.modify())()
{
  if (qword_1E9CE2090 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_1_0();
  return j_j__swift_endAccess;
}

uint64_t sub_1B3C766A4()
{
  return *(void *)(v0 + OBJC_IVAR___WFRunnerConnection_policy);
}

uint64_t RunnerConnection.onInterruption.getter()
{
  return sub_1B3C76A84(&OBJC_IVAR___WFRunnerConnection_onInterruption);
}

uint64_t sub_1B3C766E0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B3C766F0(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t RunnerConnection.onInterruption.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B3C76B84(a1, a2, &OBJC_IVAR___WFRunnerConnection_onInterruption);
}

uint64_t sub_1B3C767E8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1B3C767F8@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR___WFRunnerConnection_onInterruption);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1B3C78FE8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1B3C766E0(v4);
}

uint64_t sub_1B3C76898(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1B3C78F78;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR___WFRunnerConnection_onInterruption);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1B3C766E0(v3);
  return sub_1B3C767E8(v8);
}

uint64_t (*RunnerConnection.onInterruption.modify())()
{
  return j__swift_endAccess;
}

id sub_1B3C769D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5 = a3();
  if (v5)
  {
    v9[4] = v5;
    v9[5] = v6;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    void v9[2] = sub_1B3C766F0;
    v9[3] = a4;
    uint64_t v7 = _Block_copy(v9);
    swift_release();
  }
  else
  {
    uint64_t v7 = 0;
  }
  return v7;
}

uint64_t RunnerConnection.onInvalidation.getter()
{
  return sub_1B3C76A84(&OBJC_IVAR___WFRunnerConnection_onInvalidation);
}

uint64_t sub_1B3C76A84(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  OUTLINED_FUNCTION_2_1();
  uint64_t v3 = *v2;
  sub_1B3C766E0(*v2);
  return v3;
}

uint64_t RunnerConnection.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  return sub_1B3C76B84(a1, a2, &OBJC_IVAR___WFRunnerConnection_onInvalidation);
}

uint64_t sub_1B3C76B84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (uint64_t *)(v3 + *a3);
  OUTLINED_FUNCTION_7_0();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  v6[1] = a2;
  return sub_1B3C767E8(v7);
}

uint64_t sub_1B3C76BD8@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR___WFRunnerConnection_onInvalidation);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1B3C78C6C;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1B3C766E0(v4);
}

uint64_t sub_1B3C76C78(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1B3C78C64;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR___WFRunnerConnection_onInvalidation);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1B3C766E0(v3);
  return sub_1B3C767E8(v8);
}

uint64_t (*RunnerConnection.onInvalidation.modify())()
{
  return j_j__swift_endAccess;
}

id RunnerConnection.__allocating_init(runDescriptor:host:onInterruption:onInvalidation:)()
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v0 = (void *)OUTLINED_FUNCTION_3_1();
  return RunnerConnection.init(runDescriptor:host:onInterruption:onInvalidation:)(v0, v1, v2, v3, v4, v5);
}

id RunnerConnection.init(runDescriptor:host:onInterruption:onInvalidation:)(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  char v11 = &v7[OBJC_IVAR___WFRunnerConnection_connection];
  *(void *)char v11 = 0;
  v11[8] = -1;
  uint64_t v12 = (uint64_t *)&v7[OBJC_IVAR___WFRunnerConnection_onInterruption];
  uint64_t *v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (uint64_t *)&v7[OBJC_IVAR___WFRunnerConnection_onInvalidation];
  *uint64_t v13 = 0;
  v13[1] = 0;
  swift_unknownObjectWeakAssign();
  BOOL v14 = *(void **)v11;
  *(void *)char v11 = 0;
  char v15 = v11[8];
  v11[8] = -1;
  unint64_t v16 = v7;
  sub_1B3C76F7C(v14, v15);
  OUTLINED_FUNCTION_7_0();
  uint64_t v17 = *v12;
  uint64_t *v12 = a3;
  v12[1] = a4;
  swift_retain();
  sub_1B3C767E8(v17);
  OUTLINED_FUNCTION_7_0();
  uint64_t v18 = *v13;
  *uint64_t v13 = a5;
  v13[1] = a6;
  swift_retain();
  sub_1B3C767E8(v18);
  if (a1)
  {
    a1 = a1;
    sub_1B3C75D14(a1, &v24);
    *(void *)&v16[OBJC_IVAR___WFRunnerConnection_policy] = v24;
  }
  else
  {
    *(void *)&v16[OBJC_IVAR___WFRunnerConnection_policy] = 0;
  }

  v25.receiver = v16;
  v25.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v25, sel_init);

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v19;
}

void sub_1B3C76F7C(id a1, char a2)
{
  if (a2 != -1) {
}
  }

id RunnerConnection.__allocating_init(policy:host:onInterruption:onInvalidation:)()
{
  OUTLINED_FUNCTION_0_3();
  uint64_t v0 = (uint64_t *)OUTLINED_FUNCTION_3_1();
  return RunnerConnection.init(policy:host:onInterruption:onInvalidation:)(v0, v1, v2, v3, v4, v5);
}

id RunnerConnection.init(policy:host:onInterruption:onInvalidation:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v24 = *a1;
  objc_super v25 = (objc_class *)ObjectType;
  swift_unknownObjectWeakInit();
  uint64_t v13 = &v7[OBJC_IVAR___WFRunnerConnection_connection];
  *(void *)uint64_t v13 = 0;
  v13[8] = -1;
  BOOL v14 = (uint64_t *)&v7[OBJC_IVAR___WFRunnerConnection_onInterruption];
  uint64_t *v14 = 0;
  v14[1] = 0;
  char v15 = (uint64_t *)&v7[OBJC_IVAR___WFRunnerConnection_onInvalidation];
  uint64_t *v15 = 0;
  v15[1] = 0;
  swift_unknownObjectWeakAssign();
  unint64_t v16 = *(void **)v13;
  *(void *)uint64_t v13 = 0;
  char v17 = v13[8];
  v13[8] = -1;
  uint64_t v18 = v7;
  sub_1B3C76F7C(v16, v17);
  OUTLINED_FUNCTION_7_0();
  uint64_t v19 = *v14;
  uint64_t *v14 = a3;
  v14[1] = a4;
  swift_retain();
  sub_1B3C767E8(v19);
  OUTLINED_FUNCTION_7_0();
  uint64_t v20 = *v15;
  uint64_t *v15 = a5;
  v15[1] = a6;
  swift_retain();
  sub_1B3C767E8(v20);
  *(void *)&v18[OBJC_IVAR___WFRunnerConnection_policy] = v24;

  v26.receiver = v18;
  v26.super_class = v25;
  id v21 = objc_msgSendSuper2(&v26, sel_init);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v21;
}

void RunnerConnection.asyncRunner(reason:)()
{
}

void sub_1B3C77254(char a1)
{
  uint64_t v4 = (void *)sub_1B3C77588();
  if (!v1)
  {
    if (v3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2498);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1B3D80540;
      sub_1B3C78E5C(0, &qword_1E9CE24A0);
      id v6 = v4;
      *(void *)(v5 + 32) = sub_1B3C77F9C();
      *(void *)(v5 + 40) = sub_1B3C77F9C();
      *(void *)&long long v10 = v5;
      sub_1B3D72478();
      sub_1B3C78E5C(0, &qword_1E9CE24A8);
      uint64_t v7 = (void *)sub_1B3D72448();
      swift_bridgeObjectRelease();
      id v8 = objc_msgSend(v6, sel_remoteTargetWithLaunchingAssertionAttributes_, v7);

      if (v8)
      {
        sub_1B3D72888();

        swift_unknownObjectRelease();
        sub_1B3C78C74(&v9, &v10);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2070);
        swift_dynamicCast();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      objc_msgSend(objc_allocWithZone((Class)WFOutOfProcessWorkflowControllerXPCProxy), sel_initWithConnection_isSynchronous_, v4, (a1 & 1) == 0);
    }
  }
}

void RunnerConnection.syncRunner(reason:)()
{
}

id sub_1B3C774B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = sub_1B3D723A8();
  uint64_t v9 = v8;
  id v10 = a1;
  char v11 = (void *)a5(v7, v9);
  swift_bridgeObjectRelease();

  return v11;
}

uint64_t sub_1B3C77588()
{
  uint64_t v2 = v0;
  uint64_t v83 = *MEMORY[0x1E4F143B8];
  uint64_t ObjectType = swift_getObjectType();
  char v3 = (void *)sub_1B3D71EA8();
  unint64_t v74 = *(v3 - 1);
  id v75 = v3;
  MEMORY[0x1F4188790](v3);
  v73 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1B3D72058();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB4FA690 != -1) {
    uint64_t v7 = swift_once();
  }
  id v10 = (os_unfair_lock_s *)qword_1EB4FA6B8;
  uint64_t v11 = MEMORY[0x1F4188790](v7);
  *(&v59 - 2) = (uint64_t)"XPCRunner";
  MEMORY[0x1F4188790](v11);
  *(&v59 - 2) = (uint64_t)sub_1B3C78C84;
  *(&v59 - 1) = v12;
  uint64_t v13 = v10 + 4;
  swift_retain();
  os_unfair_lock_lock(v10 + 4);
  sub_1B3C78CA0(v14);
  if (v1) {
    goto LABEL_24;
  }
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  char v15 = sub_1B3D72038();
  os_log_type_t v16 = sub_1B3D72748();
  if (os_log_type_enabled(v15, v16))
  {
    char v17 = (_DWORD *)swift_slowAlloc();
    v71 = (void *)v5;
    uint64_t v18 = (uint8_t *)v17;
    _DWORD *v17 = 134217984;
    uint64_t v13 = (os_unfair_lock_s *)(v17 + 3);
    CFTimeInterval aBlock = CACurrentMediaTime();
    sub_1B3D72868();
    _os_log_impl(&dword_1B3C5C000, v15, v16, "[Performance] Opening connection to runner: %f", v18, 0xCu);
    uint64_t v5 = (uint64_t)v71;
    MEMORY[0x1B3EC61A0](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v19 = v2 + OBJC_IVAR___WFRunnerConnection_connection;
  uint64_t v20 = *(void **)(v2 + OBJC_IVAR___WFRunnerConnection_connection);
  int v21 = *(unsigned __int8 *)(v2 + OBJC_IVAR___WFRunnerConnection_connection + 8);
  if (v21 != 255)
  {
    uint64_t v22 = 0;
    id v23 = *(id *)(v2 + OBJC_IVAR___WFRunnerConnection_connection);
LABEL_18:
    sub_1B3C78D3C(v20, v21);
    sub_1B3C767E8((uint64_t)v22);
    return (uint64_t)v23;
  }
  double v24 = *(double *)(v2 + OBJC_IVAR___WFRunnerConnection_policy);
  v71 = *(void **)(v2 + OBJC_IVAR___WFRunnerConnection_connection);
  int v70 = 255;
  if (v24 == 0.0)
  {
    uint64_t ObjectType = 0;
    dlopen("/System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit", 0);
    uint64_t v25 = MEMORY[0x1B3EC62B0](v2 + OBJC_IVAR___WFRunnerConnection_host);
    if (v25)
    {
      uint64_t v26 = v25;
      sub_1B3C78E5C(0, &qword_1E9CE2078);
      id v23 = sub_1B3C784A8();
      id v27 = WFOutOfProcessWorkflowControllerVendorXPCInterface();
      objc_msgSend(v23, sel_setRemoteObjectInterface_, v27);

      id v28 = WFOutOfProcessWorkflowControllerHostXPCInterface();
      objc_msgSend(v23, sel_setExportedInterface_, v28);

      objc_msgSend(v23, sel_setExportedObject_, v26);
      uint64_t v29 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v80 = sub_1B3C78CF4;
      uint64_t v81 = v29;
      CFTimeInterval aBlock = MEMORY[0x1E4F143A8];
      uint64_t v77 = 1107296256;
      v78 = sub_1B3C766F0;
      v79 = &block_descriptor_48;
      uint64_t v30 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v23, sel_setInterruptionHandler_, v30);
      _Block_release(v30);
      uint64_t v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v80 = sub_1B3C78D18;
      uint64_t v81 = v31;
      CFTimeInterval aBlock = MEMORY[0x1E4F143A8];
      uint64_t v77 = 1107296256;
      v78 = sub_1B3C766F0;
      v79 = &block_descriptor_52;
      uint64_t v32 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v23, sel_setInvalidationHandler_, v32);
      _Block_release(v32);
      uint64_t v69 = v26;
      uint64_t v33 = v73;
      sub_1B3D71E98();
      unint64_t v34 = sub_1B3D71E88();
      LOBYTE(v32) = v34;
      LOBYTE(v30) = v35;
      unint64_t v36 = v34 >> 8;
      unint64_t v37 = v34 >> 16;
      unint64_t v38 = v34 >> 24;
      unint64_t v39 = HIDWORD(v34);
      unint64_t v60 = v34 >> 40;
      unint64_t v61 = HIWORD(v34);
      unint64_t v62 = HIBYTE(v34);
      unint64_t v63 = v35 >> 8;
      unint64_t v64 = v35 >> 16;
      unint64_t v65 = v35 >> 24;
      unint64_t v66 = HIDWORD(v35);
      unint64_t v67 = v35 >> 40;
      unint64_t v68 = HIWORD(v35);
      uint64_t v40 = *(void (**)(char *, id))(v74 + 8);
      unint64_t v74 = HIBYTE(v35);
      v40(v33, v75);
      LOBYTE(aBlock) = (_BYTE)v32;
      BYTE1(aBlock) = v36;
      BYTE2(aBlock) = v37;
      BYTE3(aBlock) = v38;
      BYTE4(aBlock) = v39;
      BYTE5(aBlock) = v60;
      BYTE6(aBlock) = v61;
      HIBYTE(aBlock) = v62;
      LOBYTE(v77) = (_BYTE)v30;
      BYTE1(v77) = v63;
      BYTE2(v77) = v64;
      BYTE3(v77) = v65;
      BYTE4(v77) = v66;
      BYTE5(v77) = v67;
      BYTE6(v77) = v68;
      HIBYTE(v77) = v74;
      id v41 = objc_msgSend(v23, sel__xpcConnection);
      xpc_connection_set_oneshot_instance();
      swift_unknownObjectRelease();
      id v42 = objc_msgSend(v23, sel__xpcConnection);
      xpc_connection_set_qos_class_floor();
      swift_unknownObjectRelease();
      objc_msgSend(v23, sel_resume);
      swift_unknownObjectRelease();
      v43 = *(void **)v19;
      *(void *)uint64_t v19 = v23;
      LOBYTE(v30) = *(unsigned char *)(v19 + 8);
      *(unsigned char *)(v19 + 8) = 0;
      id v44 = v23;
      sub_1B3C76F7C(v43, (char)v30);
      uint64_t v22 = 0;
LABEL_17:
      uint64_t v20 = v71;
      LOBYTE(v21) = v70;
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (*(void *)&v24 == 1)
  {
    sub_1B3C78E5C(0, &qword_1E9CE24B0);
    id v75 = sub_1B3C78030(0xD000000000000017, 0x80000001B3D88DA0, 0xD00000000000001ALL, 0x80000001B3D88DC0, 0, 0);
    if (v75)
    {
      id v45 = objc_msgSend(self, sel_connectionWithEndpoint_, v75);
      if (v45)
      {
        unint64_t v46 = v45;
        v82 = &unk_1F0CD94F8;
        uint64_t v47 = swift_dynamicCastObjCProtocolConditional();
        if (v47)
        {
          id v23 = (id)v47;
          uint64_t v48 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v49 = swift_allocObject();
          uint64_t v50 = ObjectType;
          *(void *)(v49 + 16) = v48;
          *(void *)(v49 + 24) = v50;
          uint64_t v51 = swift_allocObject();
          *(void *)(v51 + 16) = sub_1B3C78D88;
          *(void *)(v51 + 24) = v49;
          v80 = sub_1B3C78DA0;
          uint64_t v81 = v51;
          CFTimeInterval aBlock = MEMORY[0x1E4F143A8];
          uint64_t v77 = 1107296256;
          v78 = sub_1B3C78454;
          v79 = &block_descriptor_62;
          uint64_t v52 = _Block_copy(&aBlock);
          id v53 = v46;
          swift_retain();
          swift_release();
          objc_msgSend(v23, sel_configureConnection_, v52);

          _Block_release(v52);
          LOBYTE(v52) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if (v52) {
            __break(1u);
          }
          id v54 = v53;
          objc_msgSend(v23, sel_activate);

          unint64_t v55 = *(void **)v19;
          *(void *)uint64_t v19 = v23;
          char v56 = *(unsigned char *)(v19 + 8);
          *(unsigned char *)(v19 + 8) = 1;
          id v57 = v54;
          sub_1B3C76F7C(v55, v56);
          uint64_t v22 = sub_1B3C78D88;
          goto LABEL_17;
        }
        goto LABEL_23;
      }
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      os_unfair_lock_unlock(v13);
      __break(1u);
      goto LABEL_25;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_25:
  CFTimeInterval aBlock = v24;
  uint64_t result = sub_1B3D73048();
  __break(1u);
  return result;
}

id sub_1B3C77F9C()
{
  uint64_t v0 = (void *)sub_1B3D72378();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_1B3D72378();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributeWithDomain_name_, v0, v1);

  return v2;
}

id sub_1B3C78030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = (void *)sub_1B3D72378();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1B3D72378();
  swift_bridgeObjectRelease();
  if (a6)
  {
    uint64_t v9 = (void *)sub_1B3D72378();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_endpointForMachName_service_instance_, v7, v8, v9);

  return v10;
}

void sub_1B3C78104(void *a1, uint64_t a2)
{
  uint64_t v4 = a2 + 16;
  id v5 = objc_msgSend(self, sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v5);

  if (qword_1E9CE2090 != -1) {
    swift_once();
  }
  swift_beginAccess();
  objc_msgSend(a1, sel_setInterface_, qword_1E9CE2450);
  char v15 = sub_1B3C78DC8;
  uint64_t v16 = a2;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1B3C78368;
  uint64_t v14 = &block_descriptor_65;
  uint64_t v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v6);
  _Block_release(v6);
  char v15 = sub_1B3C78DEC;
  uint64_t v16 = a2;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1B3C78368;
  uint64_t v14 = &block_descriptor_68;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v7);
  _Block_release(v7);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1B3EC62B0](v4);
  if (v8
    && (uint64_t v9 = (void *)v8, v10 = MEMORY[0x1B3EC62B0](v8 + OBJC_IVAR___WFRunnerConnection_host), v9, v10))
  {
    objc_msgSend(a1, sel_setInterfaceTarget_, v10);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1B3C78368(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1B3C783D0(uint64_t a1, uint64_t a2, void (**a3)(void))
{
  id v4 = (void *)(a2 + 16);
  OUTLINED_FUNCTION_2_1();
  if (MEMORY[0x1B3EC62B0](v4))
  {
    OUTLINED_FUNCTION_5_0();
    id v5 = *a3;
    if (*a3)
    {
      sub_1B3C766E0((uint64_t)v5);

      v5();
      sub_1B3C767E8((uint64_t)v5);
    }
    else
    {
    }
  }
}

uint64_t sub_1B3C78454(uint64_t a1, uint64_t a2)
{
  char v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

id sub_1B3C784A8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1B3D72378();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithServiceName_, v1);

  return v2;
}

void sub_1B3C7851C(uint64_t a1, void (**a2)(void))
{
  char v3 = (void *)(a1 + 16);
  OUTLINED_FUNCTION_2_1();
  if (MEMORY[0x1B3EC62B0](v3))
  {
    OUTLINED_FUNCTION_5_0();
    id v4 = *a2;
    if (*a2)
    {
      sub_1B3C766E0((uint64_t)v4);

      v4();
      sub_1B3C767E8((uint64_t)v4);
    }
    else
    {
    }
  }
}

Swift::Void __swiftcall RunnerConnection.invalidate()()
{
  if (*(unsigned __int8 *)(v0 + OBJC_IVAR___WFRunnerConnection_connection + 8) != 255) {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR___WFRunnerConnection_connection), sel_invalidate);
  }
}

id RunnerConnection.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void RunnerConnection.init()()
{
}

id RunnerConnection.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RunnerProcess.debugDescription.getter(uint64_t a1)
{
  uint64_t result = 0xD000000000000016;
  if (!a1) {
    return 0xD000000000000023;
  }
  if (a1 != 1)
  {
    uint64_t result = sub_1B3D73048();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B3C787B0()
{
  unint64_t result = qword_1E9CE2480;
  if (!qword_1E9CE2480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2480);
  }
  return result;
}

unint64_t sub_1B3C78800()
{
  unint64_t result = qword_1E9CE2488;
  if (!qword_1E9CE2488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2488);
  }
  return result;
}

uint64_t sub_1B3C7884C()
{
  return RunnerProcess.debugDescription.getter(*v0);
}

void type metadata accessor for RunnerProcess()
{
}

uint64_t type metadata accessor for RunnerConnection()
{
  return self;
}

uint64_t method lookup function for RunnerConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RunnerConnection);
}

uint64_t dispatch thunk of RunnerConnection.__allocating_init(runDescriptor:host:onInterruption:onInvalidation:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RunnerConnection.__allocating_init(policy:host:onInterruption:onInvalidation:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

void type metadata accessor for RunnerConnection.ServiceSpec()
{
}

void type metadata accessor for RunnerConnection.ServiceSpec.SystemRunner()
{
}

void type metadata accessor for RunnerConnection.ServiceSpec.XPCRunner()
{
}

void type metadata accessor for RunnerConnection.Policy()
{
}

uint64_t getEnumTagSinglePayload for RunnerConnection.Policy.Client(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for RunnerConnection.Policy.Client(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3C789F0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B3C78A18()
{
  return 0;
}

void type metadata accessor for RunnerConnection.Policy.Client()
{
}

uint64_t initializeBufferWithCopyOfBuffer for RunnerConnection.XPCConnection(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

void destroy for RunnerConnection.XPCConnection(id *a1)
{
}

uint64_t assignWithCopy for RunnerConnection.XPCConnection(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for RunnerConnection.XPCConnection(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for RunnerConnection.XPCConnection(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RunnerConnection.XPCConnection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B3C78B80(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1B3C78B88(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RunnerConnection.XPCConnection()
{
  return &type metadata for RunnerConnection.XPCConnection;
}

uint64_t sub_1B3C78BA4()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1B3C78BDC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1B3C78C04(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B3C78C2C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B3C78C64()
{
  return sub_1B3CC8EB4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1B3C78C6C()
{
  return sub_1B3CC8E8C(*(uint64_t (**)(void))(v0 + 16));
}

_OWORD *sub_1B3C78C74(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1B3C78C84@<X0>(uint64_t a1@<X8>)
{
  return sub_1B3C7AEB4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1B3C78CA0(uint64_t a1)
{
  return sub_1B3C7C808(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1B3C78CBC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1B3C78CF4()
{
  sub_1B3C7851C(v0, (void (**)(void))&OBJC_IVAR___WFRunnerConnection_onInterruption);
}

void sub_1B3C78D18()
{
  sub_1B3C7851C(v0, (void (**)(void))&OBJC_IVAR___WFRunnerConnection_onInvalidation);
}

id sub_1B3C78D3C(id result, char a2)
{
  if (a2 != -1) {
    return result;
  }
  return result;
}

uint64_t sub_1B3C78D50()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B3C78D88(void *a1)
{
  sub_1B3C78104(a1, *(void *)(v1 + 16));
}

uint64_t sub_1B3C78D90()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B3C78DA0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1B3C78DC8(uint64_t a1)
{
  sub_1B3C783D0(a1, v1, (void (**)(void))&OBJC_IVAR___WFRunnerConnection_onInterruption);
}

void sub_1B3C78DEC(uint64_t a1)
{
  sub_1B3C783D0(a1, v1, (void (**)(void))&OBJC_IVAR___WFRunnerConnection_onInvalidation);
}

unint64_t sub_1B3C78E10()
{
  unint64_t result = qword_1EB4FA678;
  if (!qword_1EB4FA678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA678);
  }
  return result;
}

uint64_t sub_1B3C78E5C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1B3C78E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1F48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B3C78F00(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1F48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B3C78F60@<X0>(uint64_t a1@<X8>)
{
  return sub_1B3C78C84(a1);
}

uint64_t sub_1B3C78FB4(uint64_t a1)
{
  return sub_1B3C78CA0(a1);
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_6_2()
{
  return 0xD000000000000017;
}

uint64_t sub_1B3C7903C(void *a1)
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v8;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1B3C792B8;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1B3C792CC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B3C791FC;
  aBlock[3] = &block_descriptor_0;
  uint64_t v4 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_dictionary_apply(a1, v4);
  _Block_release(v4);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1B3C7919C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = sub_1B3D72408();
  uint64_t v6 = v5;
  sub_1B3C867C0();
  uint64_t v7 = *(void **)(*a3 + 16);
  sub_1B3C868F8(v7);
  uint64_t v8 = *a3;
  *(void *)(v8 + 16) = (char *)v7 + 1;
  uint64_t v9 = v8 + 16 * (void)v7;
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v6;
  return 1;
}

uint64_t sub_1B3C791FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  char v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

uint64_t sub_1B3C79254(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1B3D723C8();
  string = xpc_dictionary_get_string(a3, (const char *)(v4 + 32));
  swift_release();
  if (string) {
    return sub_1B3D72408();
  }
  else {
    return 0;
  }
}

uint64_t sub_1B3C792AC()
{
  return OUTLINED_FUNCTION_0_4(v0, 24);
}

uint64_t sub_1B3C792B8(uint64_t a1, uint64_t a2)
{
  return sub_1B3C7919C(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_1B3C792C0()
{
  return OUTLINED_FUNCTION_0_4(v0, 32);
}

uint64_t sub_1B3C792CC()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for XPCDictionary()
{
  return &type metadata for XPCDictionary;
}

id sub_1B3C79320()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RunnerPrewarmManager()), sel_init);
  qword_1EB4FA660 = (uint64_t)result;
  return result;
}

id RunnerPrewarmManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static RunnerPrewarmManager.shared.getter()
{
  if (qword_1EB4FA668 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EB4FA660;
  return v0;
}

void *RunnerPrewarmManager.connection.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void RunnerPrewarmManager.connection.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
  OUTLINED_FUNCTION_7_0();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*RunnerPrewarmManager.connection.modify())()
{
  return j__swift_endAccess;
}

void sub_1B3C79590(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1B3D72058();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)v40 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v40 - v12;
  uint64_t v14 = (void **)(v2 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
  uint64_t v15 = OUTLINED_FUNCTION_7_0();
  if (*v14)
  {
    if (qword_1EB4FA690 != -1) {
      uint64_t v15 = swift_once();
    }
    uint64_t v16 = (os_unfair_lock_s *)qword_1EB4FA6B8;
    MEMORY[0x1F4188790](v15);
    OUTLINED_FUNCTION_0_5();
    MEMORY[0x1F4188790](v17);
    OUTLINED_FUNCTION_1_1();
    *(void *)(v18 - 16) = sub_1B3C78C84;
    *(void *)(v18 - 8) = v19;
    swift_retain();
    os_unfair_lock_lock(v16 + 4);
    sub_1B3C78CA0(v20);
    os_unfair_lock_unlock(v16 + 4);
    swift_release();
    int v21 = sub_1B3D72038();
    os_log_type_t v22 = sub_1B3D72768();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      _os_log_impl(&dword_1B3C5C000, v21, v22, "Warm runner already waiting", v23, 2u);
      OUTLINED_FUNCTION_3_2();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    v40[1] = v11;
    uint64_t v41 = a1;
    uint64_t v42 = v4;
    if (qword_1EB4FA690 != -1) {
      uint64_t v15 = swift_once();
    }
    double v24 = (os_unfair_lock_s *)qword_1EB4FA6B8;
    MEMORY[0x1F4188790](v15);
    OUTLINED_FUNCTION_0_5();
    MEMORY[0x1F4188790](v25);
    OUTLINED_FUNCTION_1_1();
    *(void *)(v26 - 16) = sub_1B3C78F60;
    *(void *)(v26 - 8) = v27;
    swift_retain();
    os_unfair_lock_lock(v24 + 4);
    sub_1B3C78FB4(v28);
    os_unfair_lock_unlock(v24 + 4);
    swift_release();
    uint64_t v29 = sub_1B3D72038();
    os_log_type_t v30 = sub_1B3D72768();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_1B3C5C000, v29, v30, "Prewarming runner", v31, 2u);
      OUTLINED_FUNCTION_3_2();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v42);
    aBlock[0] = 0;
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v33 = swift_allocObject();
    swift_unknownObjectWeakInit();
    objc_allocWithZone((Class)type metadata accessor for RunnerConnection());
    uint64_t v34 = v41;
    swift_unknownObjectRetain();
    id v35 = RunnerConnection.init(policy:host:onInterruption:onInvalidation:)(aBlock, v34, (uint64_t)sub_1B3C79F68, v32, (uint64_t)sub_1B3C79F68, v33);
    sub_1B3C77254(0);
    unint64_t v37 = v36;
    aBlock[4] = (uint64_t)nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1B3C79CF8;
    aBlock[3] = (uint64_t)&block_descriptor_1;
    unint64_t v38 = _Block_copy(aBlock);
    objc_msgSend(v37, sel_prewarmRunnerWithCompletion_, v38);
    _Block_release(v38);
    swift_unknownObjectRelease();
    unint64_t v39 = *v14;
    void *v14 = v35;
  }
}

void sub_1B3C79C7C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1B3EC62B0](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = (void **)(v2 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
    OUTLINED_FUNCTION_7_0();
    uint64_t v5 = *v4;
    *uint64_t v4 = 0;
  }
}

void sub_1B3C79CF8(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_1B3C79DCC()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
  OUTLINED_FUNCTION_7_0();
  uint64_t v2 = *v1;
  *uint64_t v1 = 0;
}

id RunnerPrewarmManager.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR___WFRunnerPrewarmManager_connection] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id RunnerPrewarmManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RunnerPrewarmManager()
{
  return self;
}

uint64_t sub_1B3C79F30()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1B3C79F68()
{
  sub_1B3C79C7C(v0);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_3_2()
{
  JUMPOUT(0x1B3EC61A0);
}

unint64_t static XPCDistributedNotificationEventStream.name.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t XPCDistributedNotificationEventStream.Event.name.getter()
{
  uint64_t v1 = *v0;
  sub_1B3D72278();
  return v1;
}

uint64_t XPCDistributedNotificationEventStream.Event.userInfo.getter()
{
  return sub_1B3D72278();
}

uint64_t XPCDistributedNotificationEventStream.Event.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B3C733B8(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4FA4D8);
  if (swift_dynamicCast())
  {
    uint64_t v5 = sub_1B3C736F0(v15);
    if (v2)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v6 = v5;
      uint64_t v7 = sub_1B3C79254(1701667150, 0xE400000000000000, v5);
      uint64_t v9 = sub_1B3C746E8(v7, v8, 0);
      uint64_t v14 = v11;
      uint64_t v17 = v9;
      swift_bridgeObjectRelease();
      id v12 = xpc_dictionary_get_value(v6, "UserInfo");
      sub_1B3C7456C((uint64_t)v12, 1);
      swift_unknownObjectRelease();
      uint64_t result = _CFXPCCreateCFObjectFromXPCObject();
      if (result)
      {
        swift_unknownObjectRetain_n();
        __swift_destroy_boxed_opaque_existential_1(a1);
        swift_unknownObjectRelease_n();
        self;
        if (swift_dynamicCastObjCClass())
        {
          v16[0] = 0;
          sub_1B3D72218();
          swift_unknownObjectRelease();
          uint64_t v13 = v16[0];
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          uint64_t result = swift_unknownObjectRelease();
          uint64_t v13 = 0;
        }
        *a2 = v17;
        a2[1] = v14;
        a2[2] = v13;
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_1B3C7A49C();
    swift_allocError();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return result;
}

uint64_t sub_1B3C7A320()
{
  uint64_t v0 = sub_1B3D72AC8();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B3C7A378(char a1)
{
  if (a1) {
    return 0x6F666E4972657355;
  }
  else {
    return 1701667150;
  }
}

uint64_t sub_1B3C7A3A8()
{
  return sub_1B3D73118();
}

uint64_t sub_1B3C7A3D0()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3C7A414(char *a1, char *a2)
{
  return sub_1B3C72CB8(*a1, *a2);
}

uint64_t sub_1B3C7A420()
{
  return sub_1B3CD1998();
}

uint64_t sub_1B3C7A428()
{
  return sub_1B3CD1A5C();
}

uint64_t sub_1B3C7A430()
{
  return sub_1B3CD1DE0();
}

uint64_t sub_1B3C7A438@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3C7A320();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C7A468@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3C7A378(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B3C7A494()
{
  return sub_1B3C7A378(*v0);
}

unint64_t sub_1B3C7A49C()
{
  unint64_t result = qword_1E9CE2548;
  if (!qword_1E9CE2548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2548);
  }
  return result;
}

uint64_t sub_1B3C7A4E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3C7A374();
  *a1 = result;
  return result;
}

void sub_1B3C7A510(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1B3C7A51C(uint64_t a1)
{
  unint64_t v2 = sub_1B3C75430();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C7A558(uint64_t a1)
{
  unint64_t v2 = sub_1B3C75430();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C7A59C()
{
  return sub_1B3D73138();
}

uint64_t XPCDistributedNotificationEventStream.Event.notification.getter()
{
  return sub_1B3D71BF8();
}

unint64_t XPCDistributedNotificationEventStream.Event.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  sub_1B3D72278();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  if (v1) {
    sub_1B3D72238();
  }
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  return 0xD00000000000001BLL;
}

uint64_t sub_1B3C7A758@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return XPCDistributedNotificationEventStream.Event.init(from:)(a1, a2);
}

unint64_t sub_1B3C7A770()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1B3C7A790(uint64_t a1)
{
  unint64_t result = sub_1B3C7A7B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B3C7A7B8()
{
  unint64_t result = qword_1EB4FA4C0;
  if (!qword_1EB4FA4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA4C0);
  }
  return result;
}

unint64_t sub_1B3C7A808()
{
  unint64_t result = qword_1EB4FA4C8;
  if (!qword_1EB4FA4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA4C8);
  }
  return result;
}

void type metadata accessor for XPCDistributedNotificationEventStream()
{
}

uint64_t destroy for XPCDistributedNotificationEventStream.Event()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s19VoiceShortcutClient37XPCDistributedNotificationEventStreamV5EventVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1B3D72278();
  sub_1B3D72278();
  return a1;
}

void *assignWithCopy for XPCDistributedNotificationEventStream.Event(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for XPCDistributedNotificationEventStream.Event(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCDistributedNotificationEventStream.Event(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCDistributedNotificationEventStream.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for XPCDistributedNotificationEventStream.Event()
{
}

unsigned char *storeEnumTagSinglePayload for XPCDistributedNotificationEventStream.Event.XPCEventDecodingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3C7AAB8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCDistributedNotificationEventStream.Event.XPCEventDecodingError()
{
  return &type metadata for XPCDistributedNotificationEventStream.Event.XPCEventDecodingError;
}

unint64_t sub_1B3C7AAF4()
{
  unint64_t result = qword_1E9CE2550;
  if (!qword_1E9CE2550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2550);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LinkSnapshot.State.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1B3C7ABC8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3C7AC94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1B3C7ACBC(unsigned char *result, char a2)
{
  void *result = a2 & 1;
  return result;
}

void type metadata accessor for XPCDistributedNotificationEventStream.Event.CodingKeys()
{
}

unint64_t sub_1B3C7ACD8()
{
  unint64_t result = qword_1E9CE2558;
  if (!qword_1E9CE2558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2558);
  }
  return result;
}

unint64_t sub_1B3C7AD28()
{
  unint64_t result = qword_1E9CE2560;
  if (!qword_1E9CE2560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2560);
  }
  return result;
}

uint64_t static WFLog.subscript.getter(uint64_t a1)
{
  if (qword_1EB4FA690 != -1) {
    a1 = swift_once();
  }
  uint64_t v1 = (os_unfair_lock_s *)qword_1EB4FA6B8;
  MEMORY[0x1F4188790](a1);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_1_1();
  *(void *)(v3 - 16) = sub_1B3C78C84;
  *(void *)(v3 - 8) = v4;
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_1B3C7CF9C();
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

uint64_t sub_1B3C7AE5C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4FA6B0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_1EB4FA6B8 = result;
  return result;
}

uint64_t sub_1B3C7AE94(uint64_t a1)
{
  return sub_1B3C7B338(a1, MEMORY[0x1E4FBD360], (uint64_t *)&off_1EB4FA698);
}

uint64_t sub_1B3C7AEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA6C0);
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_17();
  uint64_t v5 = sub_1B3D72058();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_5_1();
  uint64_t v10 = v9 - v8;
  if (qword_1EB4FA6A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*((void *)off_1EB4FA698 + 2) && (sub_1B3C93F7C(a1), (v11 & 1) != 0))
  {
    OUTLINED_FUNCTION_20();
    v12();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a2, v10, v5);
  }
  else
  {
    swift_endAccess();
    sub_1B3D72408();
    sub_1B3D72408();
    sub_1B3D72048();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a2, v5);
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v5);
    swift_beginAccess();
    sub_1B3C7B100();
  }
  return swift_endAccess();
}

void sub_1B3C7B100()
{
  OUTLINED_FUNCTION_10();
  uint64_t v3 = v2;
  double v24 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = v0;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(v7);
  MEMORY[0x1F4188790]();
  OUTLINED_FUNCTION_16();
  uint64_t v14 = v6(0);
  OUTLINED_FUNCTION_0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790]();
  uint64_t v18 = (char *)&v24 - v17;
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    sub_1B3C7CF30(v13, v8);
    unint64_t v19 = sub_1B3C93F7C(v11);
    if (v20)
    {
      unint64_t v21 = v19;
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v25 = *v0;
      void *v0 = 0x8000000000000000;
      __swift_instantiateConcreteTypeFromMangledName(v3);
      sub_1B3D72A28();
      uint64_t v22 = v25;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 32))(v1, *(void *)(v25 + 56) + *(void *)(v16 + 72) * v21, v14);
      type metadata accessor for WFLogCategoryName(0);
      sub_1B3C7CEE0();
      sub_1B3D72A38();
      void *v9 = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v23 = 1;
    }
    __swift_storeEnumTagSinglePayload(v1, v23, 1, v14);
    sub_1B3C7CF30(v1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v18, v13, v14);
    v24(v18, v11);
  }
  OUTLINED_FUNCTION_9();
}

const char *static WFLogSignpost.enableTelemetry.getter()
{
  return "enableTelemetry=YES";
}

uint64_t sub_1B3C7B318(uint64_t a1)
{
  return sub_1B3C7B338(a1, MEMORY[0x1E4FBD330], (uint64_t *)&off_1E9CE1ED0);
}

uint64_t sub_1B3C7B338(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  type metadata accessor for WFLogCategoryName(0);
  a2(0);
  sub_1B3C7CEE0();
  uint64_t result = sub_1B3D72248();
  *a3 = result;
  return result;
}

uint64_t sub_1B3C7B3A0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4FA6B0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_1E9CE1EE8 = result;
  return result;
}

uint64_t WFLogSignpost.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1B3D71FD8();
  OUTLINED_FUNCTION_13();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t WFLogSignpost.name.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for WFLogSignpost() + 20));
}

uint64_t WFLogSignpost.state.getter()
{
  type metadata accessor for WFLogSignpost();
  return swift_retain();
}

uint64_t WFLogSignpost.init(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1B3D71FD8();
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(a6, a1);
  uint64_t result = type metadata accessor for WFLogSignpost();
  uint64_t v14 = a6 + *(int *)(result + 20);
  *(void *)uint64_t v14 = a2;
  *(void *)(v14 + 8) = a3;
  *(unsigned char *)(v14 + 16) = a4;
  *(void *)(a6 + *(int *)(result + 24)) = a5;
  return result;
}

void static WFLogSignpost.begin(_:_:_:)()
{
  OUTLINED_FUNCTION_10();
  uint64_t v44 = v3;
  unint64_t v45 = v2;
  uint64_t v40 = v4;
  uint64_t v41 = v5;
  int v42 = v6;
  uint64_t v43 = sub_1B3D71F98();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_11_1();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  unint64_t v38 = (char *)&v37 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v39 = OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_0();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_17();
  if (qword_1E9CE1EF8 != -1) {
    uint64_t v16 = swift_once();
  }
  uint64_t v17 = (os_unfair_lock_s *)qword_1E9CE1EE8;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_1_1();
  *(void *)(v19 - 16) = sub_1B3C7C878;
  *(void *)(v19 - 8) = v20;
  swift_retain();
  os_unfair_lock_lock(v17 + 4);
  sub_1B3C7C894();
  os_unfair_lock_unlock(v17 + 4);
  swift_release();
  sub_1B3D71FC8();
  sub_1B3D71F68();
  unint64_t v21 = (void *)sub_1B3D71FC8();
  sub_1B3D727D8();
  uint64_t v22 = v44;
  unint64_t v23 = sub_1B3D71F58();
  if ((sub_1B3D72838() & 1) == 0)
  {

    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_20();
    v24();
    sub_1B3D72018();
    swift_allocObject();
    sub_1B3D72008();
    uint64_t v25 = OUTLINED_FUNCTION_12();
    v26(v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v41, v0, v39);
    uint64_t v27 = type metadata accessor for WFLogSignpost();
    uint64_t v28 = OUTLINED_FUNCTION_18(v27);
    OUTLINED_FUNCTION_24_0(v28, v29);
    OUTLINED_FUNCTION_9();
    return;
  }
  if ((v42 & 1) == 0)
  {
    if (v45) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (HIDWORD(v45))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v45 >> 11 == 27)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (WORD1(v45) > 0x10u) {
    goto LABEL_29;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v38, v1, v43);
  if ((v23 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(v23))
    {
      OUTLINED_FUNCTION_2_2();
      OUTLINED_FUNCTION_15_0();
      goto LABEL_35;
    }
    uint64_t v30 = *(void *)(v22 + 16);
    OUTLINED_FUNCTION_22_0();
    if (v21)
    {
      OUTLINED_FUNCTION_21_0();
      if (!v32) {
        goto LABEL_30;
      }
      uint64_t v31 = swift_slowAlloc();
    }
    else
    {
      uint64_t v31 = 0;
    }
    if (v0)
    {
      OUTLINED_FUNCTION_8_2();
      if (!v32) {
        goto LABEL_31;
      }
      uint64_t v33 = swift_slowAlloc();
    }
    else
    {
      uint64_t v33 = 0;
    }
    OUTLINED_FUNCTION_7_1(v33);
    if (v31)
    {
      sub_1B3D72278();
      uint64_t v34 = v30 + 40;
      do
      {
        id v35 = *(void (**)(uint64_t))(v34 - 8);
        swift_retain();
        uint64_t v36 = OUTLINED_FUNCTION_6_3();
        v35(v36);
        swift_release();
        v34 += 16;
        --v31;
      }
      while (v31);
      sub_1B3C7C8BC((uint64_t)&v46);
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_33:
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_14();
LABEL_35:
  sub_1B3D72A48();
  __break(1u);
}

uint64_t static WFLogSignpost.signposter(for:)(uint64_t a1)
{
  if (qword_1E9CE1EF8 != -1) {
    a1 = swift_once();
  }
  uint64_t v1 = (os_unfair_lock_s *)qword_1E9CE1EE8;
  MEMORY[0x1F4188790](a1);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_1_1();
  *(void *)(v3 - 16) = sub_1B3C7CF84;
  *(void *)(v3 - 8) = v4;
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_1B3C7CF9C();
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

void static WFLogSignpost.begin(_:_:_:_:)()
{
  OUTLINED_FUNCTION_10();
  uint64_t v47 = v3;
  unint64_t v48 = v2;
  uint64_t v42 = v5;
  uint64_t v43 = v4;
  int v46 = v6;
  int v44 = v7;
  uint64_t v45 = sub_1B3D71F98();
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_11_1();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v40 = (char *)&v40 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v41 = OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_0();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_16();
  if (qword_1E9CE1EF8 != -1) {
    uint64_t v17 = swift_once();
  }
  uint64_t v18 = (os_unfair_lock_s *)qword_1E9CE1EE8;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_1_1();
  *(void *)(v20 - 16) = sub_1B3C7CF84;
  *(void *)(v20 - 8) = v21;
  swift_retain();
  os_unfair_lock_lock(v18 + 4);
  sub_1B3C7CF9C();
  os_unfair_lock_unlock(v18 + 4);
  swift_release();
  sub_1B3D71FA8();
  uint64_t v22 = (void *)sub_1B3D71FC8();
  sub_1B3D727D8();
  uint64_t v23 = v47;
  unint64_t v24 = sub_1B3D71F58();
  if ((sub_1B3D72838() & 1) == 0)
  {

    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_20();
    v25();
    sub_1B3D72018();
    swift_allocObject();
    sub_1B3D72008();
    uint64_t v26 = OUTLINED_FUNCTION_12();
    v27(v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v42, v0, v41);
    uint64_t v28 = type metadata accessor for WFLogSignpost();
    uint64_t v29 = OUTLINED_FUNCTION_18(v28);
    OUTLINED_FUNCTION_24_0(v29, v30);
    OUTLINED_FUNCTION_9();
    return;
  }
  if ((v44 & 1) == 0)
  {
    if (v48) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (HIDWORD(v48))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v48 >> 11 == 27)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (WORD1(v48) > 0x10u) {
    goto LABEL_27;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v40, v1, v45);
  if ((v24 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(v24))
    {
      OUTLINED_FUNCTION_2_2();
      OUTLINED_FUNCTION_15_0();
      goto LABEL_33;
    }
    uint64_t v31 = v23;
    uint64_t v32 = *(void *)(v23 + 16);
    uint64_t v34 = *(void *)(v31 + 40);
    uint64_t v33 = *(void *)(v31 + 48);
    swift_slowAlloc();
    if (v33)
    {
      if ((unint64_t)(v33 - 0x1000000000000000) >> 61 != 7)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      uint64_t v33 = swift_slowAlloc();
    }
    if (v34)
    {
      OUTLINED_FUNCTION_8_2();
      if (!v36) {
        goto LABEL_29;
      }
      uint64_t v35 = swift_slowAlloc();
    }
    else
    {
      uint64_t v35 = 0;
    }
    OUTLINED_FUNCTION_7_1(v35);
    if (v33)
    {
      sub_1B3D72278();
      uint64_t v37 = v32 + 40;
      do
      {
        unint64_t v38 = *(void (**)(uint64_t))(v37 - 8);
        swift_retain();
        uint64_t v39 = OUTLINED_FUNCTION_6_3();
        v38(v39);
        swift_release();
        v37 += 16;
        --v33;
      }
      while (v33);
      sub_1B3C7C8BC((uint64_t)&v49);
    }
    __break(1u);
    goto LABEL_26;
  }
LABEL_31:
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_14();
LABEL_33:
  sub_1B3D72A48();
  __break(1u);
}

Swift::Void __swiftcall WFLogSignpost.end()()
{
  OUTLINED_FUNCTION_10();
  sub_1B3D71FE8();
  OUTLINED_FUNCTION_0();
  uint64_t v31 = v2;
  uint64_t v32 = v1;
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_5_1();
  uint64_t v33 = v4 - v3;
  uint64_t v5 = sub_1B3D71F98();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1B3D71FD8();
  OUTLINED_FUNCTION_0();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_5_1();
  uint64_t v18 = v17 - v16;
  OUTLINED_FUNCTION_20();
  v19();
  uint64_t v20 = v0 + *(int *)(type metadata accessor for WFLogSignpost() + 20);
  uint64_t v34 = *(const char **)v20;
  char v21 = *(unsigned char *)(v20 + 16);
  swift_retain();
  uint64_t v22 = sub_1B3D71FC8();
  sub_1B3D71FF8();
  os_signpost_type_t v30 = sub_1B3D727C8();
  if ((sub_1B3D72838() & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
    OUTLINED_FUNCTION_9();
    return;
  }
  uint64_t v29 = v7;
  if ((v21 & 1) == 0)
  {
    uint64_t v23 = v33;
    if (v34)
    {
      uint64_t v25 = v31;
      uint64_t v24 = v32;
LABEL_9:
      swift_retain();
      sub_1B3D72028();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v25 + 88))(v23, v24) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v26 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
        uint64_t v26 = "";
      }
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      os_signpost_id_t v28 = sub_1B3D71F78();
      _os_signpost_emit_with_name_impl(&dword_1B3C5C000, v22, v30, v28, v34, v26, v27, 2u);
      MEMORY[0x1B3EC61A0](v27, -1, -1);
      uint64_t v7 = v29;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v23 = v33;
  if ((unint64_t)v34 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v34 >> 11 != 27)
  {
    uint64_t v25 = v31;
    uint64_t v24 = v32;
    if (v34 >> 16 <= 0x10)
    {
      uint64_t v34 = (const char *)&v35;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

void static WFLogSignpost.event(_:_:_:)()
{
  OUTLINED_FUNCTION_10();
  uint64_t v40 = v0;
  int v36 = v1;
  unint64_t v38 = v2;
  uint64_t v39 = sub_1B3D71F98();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v37 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v35[-v8];
  uint64_t v10 = sub_1B3D71FD8();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_5_1();
  uint64_t v17 = v16 - v15;
  if (qword_1E9CE1EF8 != -1) {
    uint64_t v14 = swift_once();
  }
  uint64_t v18 = (os_unfair_lock_s *)qword_1E9CE1EE8;
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_1_2();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_1_1();
  *(void *)(v20 - 16) = sub_1B3C7CF84;
  *(void *)(v20 - 8) = v21;
  swift_retain();
  os_unfair_lock_lock(v18 + 4);
  sub_1B3C7CF9C();
  os_unfair_lock_unlock(v18 + 4);
  swift_release();
  sub_1B3D71F88();
  uint64_t v22 = (void *)sub_1B3D71FC8();
  sub_1B3D727E8();
  uint64_t v23 = v40;
  unint64_t v24 = sub_1B3D71F58();
  if ((sub_1B3D72838() & 1) == 0)
  {

    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v39);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v10);
    OUTLINED_FUNCTION_9();
    return;
  }
  if ((v36 & 1) == 0)
  {
    if (v38) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (HIDWORD(v38))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v38 >> 11 == 27)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (WORD1(v38) > 0x10u) {
    goto LABEL_29;
  }
LABEL_11:
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v37, v9, v39);
  if ((v24 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(v24))
    {
      OUTLINED_FUNCTION_2_2();
      OUTLINED_FUNCTION_15_0();
      goto LABEL_35;
    }
    uint64_t v25 = *(void *)(v23 + 16);
    char v26 = *(unsigned char *)(v23 + 24);
    uint64_t v27 = (unsigned char *)OUTLINED_FUNCTION_22_0();
    if (v12)
    {
      OUTLINED_FUNCTION_21_0();
      if (!v29) {
        goto LABEL_30;
      }
      uint64_t v28 = swift_slowAlloc();
    }
    else
    {
      uint64_t v28 = 0;
    }
    if (v9)
    {
      OUTLINED_FUNCTION_8_2();
      if (!v29) {
        goto LABEL_31;
      }
      uint64_t v30 = swift_slowAlloc();
    }
    else
    {
      uint64_t v30 = 0;
    }
    uint64_t v44 = v25;
    uint64_t v41 = v30;
    uint64_t v42 = v28;
    *uint64_t v27 = v26;
    v27[1] = (_BYTE)v22;
    uint64_t v43 = v27 + 2;
    uint64_t v31 = *(void *)(v25 + 16);
    if (v31)
    {
      sub_1B3D72278();
      uint64_t v32 = v25 + 40;
      do
      {
        uint64_t v33 = *(void (**)(uint64_t))(v32 - 8);
        swift_retain();
        uint64_t v34 = OUTLINED_FUNCTION_6_3();
        v33(v34);
        swift_release();
        v32 += 16;
        --v31;
      }
      while (v31);
      sub_1B3C7C8BC((uint64_t)&v44);
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_33:
  OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_14();
LABEL_35:
  sub_1B3D72A48();
  __break(1u);
}

void sub_1B3C7C470(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1F28);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B3D72058();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1B3D71FD8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E9CE1EE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = off_1E9CE1ED0;
  if (*((void *)off_1E9CE1ED0 + 2))
  {
    unint64_t v14 = sub_1B3C93F7C(a1);
    if (v15)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, v13[7] + *(void *)(v10 + 72) * v14, v9);
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v12, v9);
LABEL_10:
      swift_endAccess();
      return;
    }
  }
  uint64_t v22 = a2;
  uint64_t v16 = swift_endAccess();
  if (qword_1EB4FA690 != -1) {
    uint64_t v16 = swift_once();
  }
  uint64_t v17 = (os_unfair_lock_s *)qword_1EB4FA6B8;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  *(&v21 - 2) = a1;
  MEMORY[0x1F4188790](v18);
  *(&v21 - 2) = (uint64_t)sub_1B3C78F60;
  *(&v21 - 1) = v19;
  uint64_t v21 = a1;
  swift_retain();
  os_unfair_lock_lock(v17 + 4);
  sub_1B3C7CF9C();
  if (!v2)
  {
    os_unfair_lock_unlock(v17 + 4);
    swift_release();
    uint64_t v20 = v22;
    sub_1B3D71FB8();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, v20, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    swift_beginAccess();
    sub_1B3C7B100();
    goto LABEL_10;
  }
  os_unfair_lock_unlock(v17 + 4);
  __break(1u);
}

uint64_t sub_1B3C7C808(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t type metadata accessor for WFLogSignpost()
{
  uint64_t result = qword_1E9CE1F00;
  if (!qword_1E9CE1F00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1B3C7C878(uint64_t a1@<X8>)
{
  sub_1B3C7C470(*(void *)(v1 + 16), a1);
}

uint64_t sub_1B3C7C894()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B3C7C8BC(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for WFLog()
{
  return &type metadata for WFLog;
}

uint64_t *initializeBufferWithCopyOfBuffer for WFLogSignpost(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1B3D71FD8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for WFLogSignpost(uint64_t a1)
{
  uint64_t v2 = sub_1B3D71FD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71FD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71FD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71FD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71FD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B3C7CCDC);
}

uint64_t sub_1B3C7CCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B3D71FD8();
  OUTLINED_FUNCTION_3_3();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B3C7CD7C);
}

void sub_1B3C7CD7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1B3D71FD8();
  OUTLINED_FUNCTION_3_3();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

uint64_t sub_1B3C7CE04()
{
  uint64_t result = sub_1B3D71FD8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1B3C7CEA8(uint64_t a1, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t result = a2(&v4);
  if (!v2) {
    return (void *)v4;
  }
  return result;
}

unint64_t sub_1B3C7CEE0()
{
  unint64_t result = qword_1E9CE2080;
  if (!qword_1E9CE2080)
  {
    type metadata accessor for WFLogCategoryName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2080);
  }
  return result;
}

uint64_t sub_1B3C7CF30(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_1B3C7CF84(uint64_t a1@<X8>)
{
}

uint64_t sub_1B3C7CF9C()
{
  return sub_1B3C7C894();
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return v0 - 104;
}

uint64_t OUTLINED_FUNCTION_18(uint64_t result)
{
  uint64_t v3 = (void *)(v1 + *(int *)(result + 20));
  uint64_t v4 = *(void *)(v2 - 168);
  *uint64_t v3 = *(void *)(v2 - 128);
  v3[1] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return sub_1B3D71FD8();
}

uint64_t OUTLINED_FUNCTION_24_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 16) = v2;
  *(void *)(v4 + *(int *)(result + 24)) = v3;
  return result;
}

uint64_t sub_1B3C7D0A4(void *a1)
{
  int64_t length = xpc_data_get_length(a1);
  if (length >= 1 && (int64_t v3 = length, (bytes_ptr = xpc_data_get_bytes_ptr(a1)) != 0))
  {
    uint64_t v5 = MEMORY[0x1B3EC3950](bytes_ptr, v3);
    swift_unknownObjectRelease();
  }
  else
  {
    MEMORY[0x1B3EC6600](a1);
    sub_1B3D72078();
    swift_unknownObjectRelease();
    return 0;
  }
  return v5;
}

id SecureCodable.wrappedValue.getter()
{
  return *v0;
}

uint64_t SecureCodable.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t SecureCodable.init(bytes:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1B3C78E5C(0, (unint64_t *)&unk_1E9CE2570);
  uint64_t v7 = sub_1B3D72778();
  if (v3) {
    return sub_1B3C7532C(a1, a2);
  }
  uint64_t v9 = v7;
  if (v7)
  {
    uint64_t result = sub_1B3C7532C(a1, a2);
    *a3 = v9;
  }
  else
  {
    type metadata accessor for SecureCodable.DecodingError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t *v10 = a1;
    v10[1] = a2;
    return swift_willThrow();
  }
  return result;
}

uint64_t type metadata accessor for SecureCodable.DecodingError()
{
  return __swift_instantiateGenericMetadata();
}

void *SecureCodable.bytes.getter()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *v0;
  v6[0] = 0;
  id v2 = objc_msgSend(self, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v1, 1, v6);
  id v3 = v6[0];
  if (v2)
  {
    uint64_t v4 = (void *)sub_1B3D71DF8();
  }
  else
  {
    uint64_t v4 = v3;
    sub_1B3D71D38();

    swift_willThrow();
  }
  return v4;
}

uint64_t SecureCodable.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3D73148();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1B3C7D440();
    sub_1B3D72E68();
    SecureCodable.init(bytes:)(v7[0], v7[1], v7);
    uint64_t v6 = v7[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1B3C7D440()
{
  unint64_t result = qword_1E9CE1938;
  if (!qword_1E9CE1938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1938);
  }
  return result;
}

uint64_t SecureCodable.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3D73168();
  uint64_t v2 = SecureCodable.bytes.getter();
  if (!v1)
  {
    uint64_t v4 = (uint64_t)v2;
    unint64_t v5 = v3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_1B3C7D5B0();
    sub_1B3D72E98();
    sub_1B3C7532C(v4, v5);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1B3C7D5B0()
{
  unint64_t result = qword_1E9CE2580;
  if (!qword_1E9CE2580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2580);
  }
  return result;
}

uint64_t sub_1B3C7D5FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SecureCodable.init(from:)(a1, a2);
}

uint64_t sub_1B3C7D618(void *a1)
{
  return SecureCodable.encode(to:)(a1);
}

void SecureCodable.hash(into:)()
{
  id v1 = *v0;
  sub_1B3D72828();
}

uint64_t SecureCodable.hashValue.getter()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3C7D6DC()
{
  return sub_1B3D73138();
}

uint64_t static SecureCodable.== infix(_:_:)()
{
  return sub_1B3D72818() & 1;
}

uint64_t SecureCodable.debugDescription.getter()
{
  return 0;
}

uint64_t sub_1B3C7D864()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3C7D884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for SecureCodable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B3C7D8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t *sub_1B3C7D8AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1B3C7D8EC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t sub_1B3C7D8EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1B3C7D944(uint64_t a1)
{
  return sub_1B3C7532C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *sub_1B3C7D950(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1B3C7D8EC(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1B3C7532C(v5, v6);
  return a1;
}

uint64_t *sub_1B3C7D998(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1B3C7532C(v3, v4);
  return a1;
}

uint64_t sub_1B3C7D9D4(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xD && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1B3C7DA20(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

uint64_t ShortcutsFeatureFlags.isFeatureEnabled.getter()
{
  char v1 = *v0;
  uint64_t v5 = &type metadata for ShortcutsFeatureFlags;
  unint64_t v6 = sub_1B3C78E10();
  v4[0] = v1;
  char v2 = sub_1B3D71ED8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

const char *ShortcutsFeatureFlags.domain.getter()
{
  return "Shortcuts";
}

const char *ShortcutsFeatureFlags.feature.getter()
{
  uint64_t result = "universal_previews";
  switch(*v0)
  {
    case 1:
      uint64_t result = "rich_choose_from_menu";
      break;
    case 2:
      uint64_t result = "intermediate_outputs";
      break;
    case 3:
      uint64_t result = "wallet_transaction_trigger";
      break;
    case 4:
      uint64_t result = "watch_automation";
      break;
    case 5:
      uint64_t result = "remote_widget_configuration";
      break;
    case 6:
      uint64_t result = "system_runner";
      break;
    case 7:
      uint64_t result = "zoom_transition";
      break;
    case 8:
      uint64_t result = "NewIconPicker";
      break;
    case 9:
      uint64_t result = "toolkit_cascade_sync";
      break;
    default:
      return result;
  }
  return result;
}

BOOL static ShortcutsFeatureFlags.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ShortcutsFeatureFlags.hash(into:)()
{
  return sub_1B3D73118();
}

uint64_t ShortcutsFeatureFlags.hashValue.getter()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3C7DC54()
{
  return sub_1B3D73138();
}

unint64_t sub_1B3C7DC9C()
{
  unint64_t result = qword_1E9CE2750[0];
  if (!qword_1E9CE2750[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9CE2750);
  }
  return result;
}

const char *sub_1B3C7DCE8()
{
  return "Shortcuts";
}

const char *sub_1B3C7DCFC()
{
  return ShortcutsFeatureFlags.feature.getter();
}

uint64_t getEnumTagSinglePayload for ShortcutsFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 9) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v5 = v6 - 10;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ShortcutsFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    const char *result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3C7DE6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          const char *result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortcutsFeatureFlags()
{
  return &type metadata for ShortcutsFeatureFlags;
}

uint64_t sub_1B3C7DEA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WeakReference();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v6 = MEMORY[0x1B3EC62B0](v8);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v6;
  return result;
}

void WeakReference.wrappedValue.getter()
{
}

uint64_t WeakReference.wrappedValue.setter()
{
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*WeakReference.wrappedValue.modify(void *a1))()
{
  a1[1] = v1;
  *a1 = MEMORY[0x1B3EC62B0](v1);
  return sub_1B3C7DFF4;
}

uint64_t sub_1B3C7DFF4()
{
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t WeakReference.init(_:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t WeakReference.init(nilLiteral:)()
{
  return WeakReference.init(_:)();
}

uint64_t sub_1B3C7E08C()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1B3C7E09C()
{
  return 8;
}

void *sub_1B3C7E0A8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingRequest.TestingConfig.Failure(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingRequest.TestingConfig.Failure(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for WeakReference()
{
  return __swift_instantiateGenericMetadata();
}

id NSProgress.observe(_:options:changeHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone((Class)type metadata accessor for ProgressKeyValueObservation());
  id v10 = v4;
  id v11 = a1;
  swift_retain();
  return sub_1B3C7E1C8(v10, v11, a2, a3, a4);
}

uint64_t type metadata accessor for ProgressKeyValueObservation()
{
  return self;
}

id sub_1B3C7E1C8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_observing] = 1;
  *(void *)&v5[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_progress] = a1;
  *(void *)&v5[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_key] = a2;
  uint64_t v20 = 0x6F666E4972657375;
  unint64_t v21 = 0xE90000000000002ELL;
  sub_1B3D723A8();
  id v11 = v5;
  id v12 = a1;
  id v13 = a2;
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  unint64_t v14 = &v11[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_keyPath];
  *(void *)unint64_t v14 = 0x6F666E4972657375;
  *((void *)v14 + 1) = 0xE90000000000002ELL;
  char v15 = &v11[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_changeHandler];
  *(void *)char v15 = a4;
  *((void *)v15 + 1) = a5;
  swift_retain();

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for ProgressKeyValueObservation();
  id v16 = objc_msgSendSuper2(&v19, sel_init);
  sub_1B3D72278();
  uint64_t v17 = (void *)sub_1B3D72378();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_addObserver_forKeyPath_options_context_, v16, v17, a3, 0);

  swift_release();
  return v16;
}

id ProgressKeyValueObservation.__deallocating_deinit()
{
  sub_1B3C7E430();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressKeyValueObservation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1B3C7E430()
{
  uint64_t v1 = OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_observing;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_observing) == 1)
  {
    objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_progress);
    char v3 = (void *)sub_1B3D72378();
    objc_msgSend(v2, sel_removeObserver_forKeyPath_, v0, v3);

    *(unsigned char *)(v0 + v1) = 0;
  }
}

uint64_t sub_1B3C7E4AC()
{
  return (*(uint64_t (**)(void))(v0
                                           + OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_changeHandler))(*(void *)(v0 + OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_progress));
}

id ProgressKeyValueObservation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ProgressKeyValueObservation.init()()
{
}

uint64_t method lookup function for ProgressKeyValueObservation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProgressKeyValueObservation);
}

uint64_t dispatch thunk of ProgressKeyValueObservation.invalidate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

unint64_t sub_1B3C7E69C()
{
  unint64_t result = qword_1E9CE1F30;
  if (!qword_1E9CE1F30)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1F30);
  }
  return result;
}

uint64_t sub_1B3C7E6EC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1B3C93B04(0, v1, 0);
    uint64_t v2 = v19;
    uint64_t v4 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v6 = *v4++;
      unint64_t v5 = v6;
      switch(v6 >> 62)
      {
        case 1uLL:
          uint64_t v11 = swift_retain();
          uint64_t v8 = sub_1B3C7FA84(v11);
          swift_release();
          uint64_t v9 = 0;
          char v10 = 1;
          break;
        case 2uLL:
          uint64_t v8 = *(void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v9 = *(void *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          char v10 = *(unsigned char *)((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
          sub_1B3C80180(v8, v9, v10);
          break;
        case 3uLL:
          uint64_t v12 = swift_retain();
          uint64_t v8 = sub_1B3C7FB48(v12);
          uint64_t v9 = v13;
          char v10 = v14;
          swift_release();
          break;
        default:
          uint64_t v7 = swift_retain();
          uint64_t v8 = sub_1B3C7F6BC(v7);
          swift_release();
          uint64_t v9 = 0;
          char v10 = 0;
          break;
      }
      unint64_t v16 = *(void *)(v19 + 16);
      unint64_t v15 = *(void *)(v19 + 24);
      if (v16 >= v15 >> 1) {
        sub_1B3C93B04((char *)(v15 > 1), v16 + 1, 1);
      }
      *(void *)(v19 + 16) = v16 + 1;
      uint64_t v17 = v19 + 24 * v16;
      *(void *)(v17 + 32) = v8;
      *(void *)(v17 + 40) = v9;
      *(unsigned char *)(v17 + 48) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_1B3C7E890(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  char v3 = (const _xpc_type_s *)MEMORY[0x1B3EC6600](a2);
  if (v3 == (const _xpc_type_s *)sub_1B3D720E8())
  {
    swift_unknownObjectRetain();
    sub_1B3D72278();
  }
  else
  {
    sub_1B3D72988();
    swift_allocError();
    unint64_t v5 = v4;
    *uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2320);
    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    sub_1B3D72278();
    sub_1B3D72938();
    sub_1B3D723F8();
    xpc_type_get_name(v3);
    sub_1B3D72408();
    uint64_t v2 = v8;
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    OUTLINED_FUNCTION_11_2();
    sub_1B3D72978();
    OUTLINED_FUNCTION_6();
    (*(void (**)(uint64_t *))(v6 + 104))(v5);
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1B3C7EA08(uint64_t a1, void *a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_8_3();
  uint64_t v6 = sub_1B3C79254(v4, v5, a2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_0(MEMORY[0x1E4FBB1A0], (uint64_t)&v8, v6);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return v8;
  }
  return result;
}

unint64_t sub_1B3C7EAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0xF000000000000007;
  }
  unint64_t v4 = sub_1B3C93F04(a1, a2);
  if ((v5 & 1) == 0) {
    return 0xF000000000000007;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 8 * v4);
  swift_retain();
  return v6;
}

uint64_t sub_1B3C7EAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_1B3C93F04(a1, a2), (v5 & 1) != 0)) {
    return *(unsigned __int8 *)(*(void *)(a3 + 56) + v4);
  }
  else {
    return 2;
  }
}

uint64_t sub_1B3C7EB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_1B3C93F04(a1, a2), (v3 & 1) != 0)) {
    return sub_1B3D72278();
  }
  else {
    return 0;
  }
}

uint64_t sub_1B3C7EB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_1B3C93F04(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 16 * v4);
  swift_retain();
  return v6;
}

uint64_t sub_1B3C7EBE0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for XPCEncoder();
  uint64_t v4 = OUTLINED_FUNCTION_37();
  sub_1B3C805E8();
  v14[3] = v3;
  v14[4] = sub_1B3C86640();
  v14[0] = v4;
  swift_retain();
  uint64_t v5 = a1;
  sub_1B3D72308();
  if (v1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v6 = sub_1B3C7FB48();
    sub_1B3C7ECCC(v6, v7, v8);
    uint64_t v5 = v9;
    uint64_t v10 = OUTLINED_FUNCTION_15_1();
    sub_1B3C801F4(v10, v11, v12);
    swift_release();
  }
  return v5;
}

void sub_1B3C7ECCC(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_1B3D72278();
      xpc_object_t empty = xpc_array_create_empty();
      uint64_t v24 = *(void *)(a1 + 16);
      if (v24)
      {
        uint64_t v25 = a1 + 48;
        do
        {
          v25 += 24;
          uint64_t v26 = OUTLINED_FUNCTION_25();
          sub_1B3C80180(v26, v27, v28);
          uint64_t v29 = OUTLINED_FUNCTION_25();
          uint64_t v30 = (void *)sub_1B3C7ECCC(v29);
          xpc_array_append_value(empty, v30);
          swift_unknownObjectRelease();
          uint64_t v31 = OUTLINED_FUNCTION_25();
          sub_1B3C801F4(v31, v32, v33);
          --v24;
        }
        while (v24);
      }
      sub_1B3C801F4(a1, a2, 1);
      goto LABEL_44;
    case 2:
      OUTLINED_FUNCTION_3_4();
      xpc_BOOL_create(v34);
      return;
    case 3:
      uint64_t v36 = sub_1B3D723C8();
      xpc_string_create((const char *)(v36 + 32));
      swift_release();
      goto LABEL_44;
    case 4:
      OUTLINED_FUNCTION_3_4();
      xpc_int64_create(v37);
      return;
    case 5:
      OUTLINED_FUNCTION_3_4();
      xpc_uint64_create(v39);
      return;
    case 6:
      OUTLINED_FUNCTION_3_4();
      xpc_double_create(v41);
      return;
    case 7:
      swift_unknownObjectRetain();
      goto LABEL_44;
    case 8:
      OUTLINED_FUNCTION_3_4();
      xpc_null_create();
      return;
    default:
      sub_1B3D72278();
      xpc_object_t v5 = xpc_dictionary_create_empty();
      int64_t v6 = 0;
      uint64_t v7 = *(void *)(a1 + 64);
      uint64_t v44 = a1 + 64;
      uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
      uint64_t v9 = -1;
      if (v8 < 64) {
        uint64_t v9 = ~(-1 << v8);
      }
      uint64_t i = v9 & v7;
      int64_t v45 = (unint64_t)(v8 + 63) >> 6;
      if ((v9 & v7) != 0) {
        goto LABEL_5;
      }
      break;
  }
  while (1)
  {
    int64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v11 >= v45) {
      goto LABEL_43;
    }
    uint64_t v12 = *(void *)(v44 + 8 * v11);
    ++v6;
    if (!v12)
    {
      int64_t v6 = v11 + 1;
      if (v11 + 1 >= v45) {
        goto LABEL_43;
      }
      uint64_t v12 = *(void *)(v44 + 8 * v6);
      if (!v12)
      {
        int64_t v6 = v11 + 2;
        if (v11 + 2 >= v45) {
          goto LABEL_43;
        }
        uint64_t v12 = *(void *)(v44 + 8 * v6);
        if (!v12) {
          break;
        }
      }
    }
LABEL_19:
    for (uint64_t i = (v12 - 1) & v12; ; i &= i - 1)
    {
      sub_1B3D72278();
      uint64_t v14 = OUTLINED_FUNCTION_15_1();
      sub_1B3C80180(v14, v15, v16);
      uint64_t v17 = OUTLINED_FUNCTION_15_1();
      uint64_t v18 = (void *)sub_1B3C7ECCC(v17);
      uint64_t v19 = sub_1B3D723C8();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_value(v5, (const char *)(v19 + 32), v18);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v20 = OUTLINED_FUNCTION_15_1();
      sub_1B3C801F4(v20, v21, v22);
      if (!i) {
        break;
      }
LABEL_5:
      ;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 < v45)
  {
    uint64_t v12 = *(void *)(v44 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v6 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v6 >= v45) {
          goto LABEL_43;
        }
        uint64_t v12 = *(void *)(v44 + 8 * v6);
        ++v13;
        if (v12) {
          goto LABEL_19;
        }
      }
LABEL_46:
      __break(1u);
      JUMPOUT(0x1B3C7F054);
    }
    int64_t v6 = v13;
    goto LABEL_19;
  }
LABEL_43:
  swift_release();
LABEL_44:
  OUTLINED_FUNCTION_3_4();
}

uint64_t sub_1B3C7F078()
{
  return sub_1B3D72648();
}

uint64_t sub_1B3C7F13C()
{
  sub_1B3C801F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return MEMORY[0x1F4186488](v0, 33, 7);
}

uint64_t type metadata accessor for XPCEncoderStorage.XPCEncoderValue()
{
  return self;
}

uint64_t sub_1B3C7F19C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for XPCEncoderStorage.XPCEncoderValue();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(unsigned char *)(v10 + 32) = a3;
  unint64_t v11 = v10 | 0x8000000000000000;
  swift_beginAccess();
  sub_1B3D72278();
  sub_1B3C80180(a1, a2, a3);
  sub_1B3CCE87C(v11, a4, a5);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C7F25C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16))
  {
    sub_1B3D72278();
    sub_1B3D72278();
    unint64_t v6 = sub_1B3C93F04(a1, a2);
    if (v7)
    {
      unint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
      uint64_t v9 = v8 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      switch(v8 >> 62)
      {
        case 1uLL:
          return v9;
        case 2uLL:
          swift_release();
          __break(1u);
          goto LABEL_9;
        case 3uLL:
LABEL_9:
          swift_release();
          __break(1u);
          JUMPOUT(0x1B3C7F3CCLL);
        default:
          swift_release();
          __break(1u);
          break;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for XPCEncoderStorage.XPCEncoderArray();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  sub_1B3D72278();
  swift_retain();
  sub_1B3CCE87C(v9 | 0x4000000000000000, a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_1B3C7F3DC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_6;
  }
  sub_1B3D72278();
  sub_1B3D72278();
  unint64_t v6 = sub_1B3C93F04(a1, a2);
  if ((v7 & 1) == 0)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    type metadata accessor for XPCEncoderStorage.XPCEncoderDict();
    unint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1B3D72248();
    swift_beginAccess();
    sub_1B3D72278();
    uint64_t v9 = swift_retain();
    sub_1B3CCE87C(v9, a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return v8;
  }
  unint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v8 >> 62)
  {
    case 1uLL:
      swift_release();
      __break(1u);
      goto LABEL_5;
    case 2uLL:
      swift_release();
      __break(1u);
      goto LABEL_9;
    case 3uLL:
LABEL_9:
      swift_release();
      __break(1u);
      JUMPOUT(0x1B3C7F560);
    default:
      return v8;
  }
  return v8;
}

uint64_t sub_1B3C7F570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  sub_1B3D72278();
  sub_1B3D72278();
  unint64_t v8 = sub_1B3C7EAB0(a2, a3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~v8 & 0xF000000000000007) != 0)
  {
    switch(v8 >> 62)
    {
      case 1uLL:
        goto LABEL_7;
      case 2uLL:
        goto LABEL_5;
      case 3uLL:
        goto LABEL_6;
      default:
        sub_1B3C876C8(v8);
        __break(1u);
LABEL_5:
        sub_1B3C876C8(v8);
        __break(1u);
LABEL_6:
        sub_1B3C876C8(v8);
        __break(1u);
LABEL_7:
        sub_1B3C876C8(v8);
        __break(1u);
        JUMPOUT(0x1B3C7F6ACLL);
    }
  }
  swift_beginAccess();
  sub_1B3D72278();
  swift_retain();
  sub_1B3CCE87C(a1 | 0xC000000000000000, a2, a3);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void *sub_1B3C7F6BC()
{
  swift_beginAccess();
  uint64_t v0 = sub_1B3D72278();
  uint64_t v1 = sub_1B3C877AC(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for XPCEncoderStorage.XPCEncoderDict()
{
  return self;
}

uint64_t sub_1B3C7F748(uint64_t a1, uint64_t a2, char a3)
{
  type metadata accessor for XPCEncoderStorage.XPCEncoderValue();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(unsigned char *)(v7 + 32) = a3;
  unint64_t v8 = v7 | 0x8000000000000000;
  swift_beginAccess();
  sub_1B3C80180(a1, a2, a3);
  sub_1B3C867F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B3C869F4);
  uint64_t v9 = *(void *)(*(void *)(v3 + 16) + 16);
  sub_1B3C8692C(v9, (uint64_t (*)(BOOL))sub_1B3C869F4);
  uint64_t v10 = *(void *)(v3 + 16);
  *(void *)(v10 + 16) = v9 + 1;
  *(void *)(v10 + 8 * v9 + 32) = v8;
  return swift_endAccess();
}

uint64_t sub_1B3C7F820()
{
  type metadata accessor for XPCEncoderStorage.XPCEncoderArray();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  swift_retain();
  sub_1B3C867F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B3C869F4);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 16);
  sub_1B3C8692C(v2, (uint64_t (*)(BOOL))sub_1B3C869F4);
  uint64_t v3 = *(void *)(v0 + 16);
  *(void *)(v3 + 16) = v2 + 1;
  *(void *)(v3 + 8 * v2 + 32) = v1 | 0x4000000000000000;
  swift_endAccess();
  return v1;
}

uint64_t sub_1B3C7F8F0()
{
  type metadata accessor for XPCEncoderStorage.XPCEncoderDict();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_1B3D72248();
  swift_beginAccess();
  swift_retain();
  sub_1B3C867F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B3C869F4);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 16);
  sub_1B3C8692C(v2, (uint64_t (*)(BOOL))sub_1B3C869F4);
  uint64_t v3 = *(void *)(v0 + 16);
  *(void *)(v3 + 16) = v2 + 1;
  *(void *)(v3 + 8 * v2 + 32) = v1;
  swift_endAccess();
  return v1;
}

uint64_t sub_1B3C7F9D8(uint64_t a1)
{
  unint64_t v2 = a1 | 0xC000000000000000;
  swift_beginAccess();
  swift_retain();
  sub_1B3C867F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B3C869F4);
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 16);
  sub_1B3C8692C(v3, (uint64_t (*)(BOOL))sub_1B3C869F4);
  uint64_t v4 = *(void *)(v1 + 16);
  *(void *)(v4 + 16) = v3 + 1;
  *(void *)(v4 + 8 * v3 + 32) = v2;
  return swift_endAccess();
}

uint64_t sub_1B3C7FA84()
{
  swift_beginAccess();
  uint64_t v0 = sub_1B3D72278();
  uint64_t v1 = sub_1B3C7E6EC(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B3C7FAEC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t type metadata accessor for XPCEncoderStorage.XPCEncoderArray()
{
  return self;
}

uint64_t sub_1B3C7FB48()
{
  unint64_t v1 = *(void *)(v0 + 32);
  if ((~v1 & 0xF000000000000007) == 0) {
    return 0;
  }
  switch(v1 >> 62)
  {
    case 1uLL:
      swift_retain();
      uint64_t v2 = sub_1B3C7FA84();
      sub_1B3C876C8(v1);
      break;
    case 2uLL:
      uint64_t v2 = *(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1B3C80180(v2, *(void *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x18), *(unsigned char *)((v1 & 0x3FFFFFFFFFFFFFFFLL) + 0x20));
      break;
    case 3uLL:
      uint64_t v3 = swift_retain();
      uint64_t v2 = sub_1B3C7FB48(v3);
      sub_1B3C876C8(v1);
      break;
    default:
      swift_retain();
      uint64_t v2 = (uint64_t)sub_1B3C7F6BC();
      sub_1B3C876C8(v1);
      break;
  }
  return v2;
}

void sub_1B3C7FC60()
{
  OUTLINED_FUNCTION_22_1();
  if (v2)
  {
    type metadata accessor for XPCEncoderStorage.XPCEncoderDict();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_1B3D72248();
    uint64_t v4 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = v3;
    swift_retain();
    sub_1B3C876C8(v4);
LABEL_5:
    OUTLINED_FUNCTION_14_0();
    sub_1B3C8772C(v0);
    sub_1B3D72278();
    return;
  }
  if (!(v0 >> 62)) {
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_1B3C7FD24()
{
  return sub_1B3D72C38();
}

void sub_1B3C7FDAC(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22_1();
  if (v4)
  {
    type metadata accessor for XPCEncoderStorage.XPCEncoderArray();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = MEMORY[0x1E4FBC860];
    *(void *)(v2 + 32) = v5 | 0x4000000000000000;
    swift_retain();
    sub_1B3C876C8(v1);
LABEL_6:
    OUTLINED_FUNCTION_14_0();
    uint64_t v6 = *(void *)(v2 + 16);
    a1[3] = (uint64_t)&unk_1F0C79B68;
    a1[4] = sub_1B3C87744();
    *a1 = v5;
    a1[1] = v6;
    sub_1B3C8772C(v1);
    sub_1B3D72278();
    return;
  }
  if (v1 >> 62 == 1)
  {
    uint64_t v5 = v1 & 0x3FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  __break(1u);
}

void sub_1B3C7FE68(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_22_1();
  if (v4)
  {
    uint64_t v5 = sub_1B3D72248();
    type metadata accessor for XPCEncoderStorage.XPCEncoderValue();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = 0;
    *(unsigned char *)(v6 + 32) = 0;
    uint64_t v7 = *(void *)(v2 + 32);
    *(void *)(v2 + 32) = v6 | 0x8000000000000000;
    swift_retain();
    sub_1B3C876C8(v7);
LABEL_6:
    OUTLINED_FUNCTION_14_0();
    uint64_t v8 = *(void *)(v2 + 16);
    a1[3] = (uint64_t)&unk_1F0C7ACF8;
    a1[4] = sub_1B3C876E0();
    *a1 = v6;
    a1[1] = v8;
    sub_1B3C8772C(v1);
    sub_1B3D72278();
    return;
  }
  if (v1 >> 62 == 2)
  {
    uint64_t v6 = v1 & 0x3FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1B3C7FF54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B3C876C8(*(void *)(v0 + 32));
  return v0;
}

uint64_t sub_1B3C7FF84()
{
  sub_1B3C7FF54();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t type metadata accessor for XPCEncoder()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for XPCEncoderStorage(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for XPCEncoderStorage()
{
  return swift_release();
}

void *assignWithCopy for XPCEncoderStorage(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for XPCEncoderStorage(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCEncoderStorage(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7D && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7C) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for XPCEncoderStorage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1B3C8013C(void *a1)
{
  return *a1 >> 62;
}

void *sub_1B3C80148(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1B3C80158(uint64_t *result, uint64_t a2)
{
  const char *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for XPCEncoderStorage()
{
  return &type metadata for XPCEncoderStorage;
}

uint64_t sub_1B3C80180(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 3:
      uint64_t result = sub_1B3D72278();
      break;
    case 7:
      uint64_t result = swift_unknownObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for XPCValue(uint64_t a1)
{
  return sub_1B3C801F4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1B3C801F4(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 7:
      uint64_t result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s19VoiceShortcutClient8XPCValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B3C80180(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for XPCValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1B3C80180(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1B3C801F4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for XPCValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1B3C801F4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCValue(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xF8 && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 247;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 8) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 248;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B3C803DC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 7u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 8);
  }
}

uint64_t sub_1B3C803F4(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(void *)__n128 result = a2 - 8;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 8;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for XPCValue()
{
  return &type metadata for XPCValue;
}

void *sub_1B3C80424(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_1B3C87C2C(a1, a2, a3, MEMORY[0x1E4FBC8D0]);
}

void type metadata accessor for XPCSingleValueEncoding()
{
}

void *sub_1B3C80458(void *a1, _OWORD *a2, uint64_t a3)
{
  return sub_1B3C87C2C(a1, a2, a3, MEMORY[0x1E4FBC8F8]);
}

void type metadata accessor for XPCSingleValueDecoding()
{
}

uint64_t sub_1B3C80480()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C804C4(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_16_0(a1, a2);
  *(void *)(v2 + 16) = *(void *)(v3 + 16);
  swift_unknownObjectRetain();
  sub_1B3D72278();
  sub_1B3D72278();
  return v2;
}

void *sub_1B3C8050C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B3C80584(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for XPCDecoder()
{
}

void *sub_1B3C805E8()
{
  v0[2] = MEMORY[0x1E4FBC860];
  sub_1B3D72A18();
  v0[3] = sub_1B3D72248();
  v0[4] = 0xF000000000000007;
  return v0;
}

uint64_t sub_1B3C80644()
{
  return sub_1B3D72278();
}

uint64_t sub_1B3C80688()
{
  return sub_1B3D72278();
}

uint64_t sub_1B3C80694()
{
  return sub_1B3C7FD24();
}

void sub_1B3C806B8(uint64_t *a1@<X8>)
{
}

void sub_1B3C806DC(uint64_t *a1@<X8>)
{
}

uint64_t sub_1B3C80700()
{
  uint64_t v0 = sub_1B3D73188();
  sub_1B3C7F19C(0, 0, 8, v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C80768()
{
  sub_1B3D73188();
  uint64_t v1 = OUTLINED_FUNCTION_30();
  sub_1B3C7F19C(v1, v2, 2, v3, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C807D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B3D73188();
  sub_1B3C7F19C(a1, a2, 3, v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C80844()
{
  sub_1B3D73188();
  uint64_t v1 = OUTLINED_FUNCTION_30();
  sub_1B3C7F19C(v1, v2, 6, v3, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C808AC()
{
  return sub_1B3C80844();
}

uint64_t sub_1B3C808C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80960(a1, a2, a3, 4);
}

uint64_t sub_1B3C808E4(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80960(a1, a2, a3, 4);
}

uint64_t sub_1B3C80904(__int16 a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80960(a1, a2, a3, 4);
}

uint64_t sub_1B3C80924(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80960(a1, a2, a3, 4);
}

uint64_t sub_1B3C80944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80960(a1, a2, a3, 5);
}

uint64_t sub_1B3C80960(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = sub_1B3D73188();
  sub_1B3C7F19C(a1, 0, a4, v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C809D8(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80960(a1, a2, a3, 5);
}

uint64_t sub_1B3C809F8(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80960(a1, a2, a3, 5);
}

uint64_t sub_1B3C80A18(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80960(a1, a2, a3, 5);
}

void sub_1B3C80A38()
{
  OUTLINED_FUNCTION_21();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 16);
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v11 = v10 - v9;
  xpc_object_t v14 = sub_1B3C80CAC(v12, v13);
  if (v14)
  {
    uint64_t v15 = (uint64_t)v14;
    swift_unknownObjectRetain();
    uint64_t v16 = sub_1B3D73188();
    sub_1B3C7F19C(v15, 0, 7, v16, v17);
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = type metadata accessor for XPCEncoder();
    uint64_t v18 = OUTLINED_FUNCTION_37();
    sub_1B3C805E8();
    swift_beginAccess();
    sub_1B3C867F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B3C86AE4);
    uint64_t v19 = *(void *)(*(void *)(v18 + 16) + 16);
    sub_1B3C8692C(v19, (uint64_t (*)(BOOL))sub_1B3C86AE4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, v4, v5);
    sub_1B3C88010(v19, v11, (uint64_t *)(v18 + 16), v5, *(void *)(v2 + 24));
    swift_endAccess();
    v28[3] = v27;
    v28[4] = sub_1B3C86640();
    v28[0] = v18;
    swift_retain();
    sub_1B3D72308();
    if (v0)
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      uint64_t v20 = sub_1B3C7FB48();
      uint64_t v22 = v21;
      char v24 = v23;
      uint64_t v25 = sub_1B3D73188();
      sub_1B3C7F19C(v20, v22, v24, v25, v26);
      swift_bridgeObjectRelease();
      sub_1B3C801F4(v20, v22, v24);
      swift_release();
    }
  }
  OUTLINED_FUNCTION_26();
}

xpc_object_t sub_1B3C80CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2800);
  MEMORY[0x1F4188790](v4 - 8);
  int v46 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1B3D71DA8();
  uint64_t v43 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2808);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  int64_t v45 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v41 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v19 = sub_1B3D71E58();
  uint64_t v44 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v22(v18, a1, a2);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v19);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v19) != 1)
    {
      uint64_t v23 = v44;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v21, v10, v19);
      unint64_t v24 = (unint64_t)v21;
      sub_1B3D71E38();
      double v26 = v25 * 1000000000.0;
      if ((~*(void *)&v26 & 0x7FF0000000000000) != 0)
      {
        if (v26 > -9.22337204e18)
        {
          if (v26 < 9.22337204e18)
          {
            xpc_object_t v27 = xpc_date_create((uint64_t)v26);
            (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v19);
            return v27;
          }
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          sub_1B3C7532C(v23, v24);
          swift_release();
          swift_release();
          __break(1u);
          JUMPOUT(0x1B3C812F8);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_25;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v19);
  }
  sub_1B3C8668C((uint64_t)v10, (uint64_t *)&unk_1E9CE2808);
  v22(v16, a1, a2);
  if (!swift_dynamicCast())
  {
    v22(v45, a1, a2);
    uint64_t v32 = (uint64_t)v46;
    uint64_t v31 = v47;
    if (swift_dynamicCast())
    {
      __swift_storeEnumTagSinglePayload(v32, 0, 1, v31);
      if (__swift_getEnumTagSinglePayload(v32, 1, v31) != 1)
      {
        BOOL v34 = v42;
        uint64_t v33 = v43;
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v42, v32, v31);
        uint64_t v35 = sub_1B3D71D88();
        sub_1B3C7ECCC(v35, v36, 3);
        xpc_object_t v27 = v37;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v31);
        return v27;
      }
    }
    else
    {
      __swift_storeEnumTagSinglePayload(v32, 1, 1, v31);
    }
    sub_1B3C8668C(v32, &qword_1E9CE2800);
    return 0;
  }
  uint64_t v23 = v48;
  unint64_t v24 = v49;
  switch(v49 >> 62)
  {
    case 1uLL:
      if (v48 >> 32 < (int)v48) {
        goto LABEL_26;
      }
      sub_1B3C7D8EC(v48, v49);
      sub_1B3C7D8EC(v23, v24);
      xpc_object_t v27 = sub_1B3C87300((int)v23, v23 >> 32, v24 & 0x3FFFFFFFFFFFFFFFLL, v23, v24);
LABEL_21:
      sub_1B3C7532C(v23, v24);
      sub_1B3C7532C(v23, v24);
      break;
    case 2uLL:
      uint64_t v38 = *(void *)(v48 + 16);
      uint64_t v39 = *(void *)(v48 + 24);
      sub_1B3C7D8EC(v48, v49);
      sub_1B3C7D8EC(v23, v24);
      swift_retain();
      swift_retain();
      xpc_object_t v27 = sub_1B3C87300(v38, v39, v24 & 0x3FFFFFFFFFFFFFFFLL, v23, v24);
      swift_release();
      swift_release();
      goto LABEL_21;
    case 3uLL:
      uint64_t v30 = 0;
      unint64_t v29 = 0;
      uint64_t v28 = 0;
      goto LABEL_18;
    default:
      uint64_t v28 = BYTE6(v49);
      unint64_t v29 = v49 & 0xFFFFFFFFFFFFLL;
      uint64_t v30 = v48;
LABEL_18:
      xpc_object_t v27 = sub_1B3C874A8(v30, v29, v28, v48, v49);
      sub_1B3C7532C(v23, v24);
      sub_1B3C7532C(v23, v24);
      break;
  }
  return v27;
}

uint64_t sub_1B3C81308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(a3 + 16);
  unint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = sub_1B3D73188();
  sub_1B3C7F3DC(v5, v6);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v8 = OUTLINED_FUNCTION_34(inited, (__n128)xmmword_1B3D80E20);
  inited[3].n128_u64[1] = v3;
  inited[4].n128_u64[0] = v4;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)v8);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_33();
  v9();
  sub_1B3D72278();
  sub_1B3C866E0((uint64_t)inited);
  type metadata accessor for XPCKeyedEncoding();
  swift_getWitnessTable();
  return sub_1B3D72C38();
}

unint64_t sub_1B3C81450@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = sub_1B3D73188();
  uint64_t v8 = sub_1B3C7F25C(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v2 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v11 = OUTLINED_FUNCTION_34(inited, (__n128)xmmword_1B3D80E20);
  inited[3].n128_u64[1] = v4;
  inited[4].n128_u64[0] = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)v11);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_33();
  v12();
  sub_1B3D72278();
  sub_1B3C866E0((uint64_t)inited);
  a2[3] = (uint64_t)&unk_1F0C79B68;
  unint64_t result = sub_1B3C87744();
  a2[4] = result;
  *a2 = v8;
  a2[1] = v9;
  return result;
}

uint64_t sub_1B3C81554@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  sub_1B3D72848();
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v10 - v6;
  OUTLINED_FUNCTION_40();
  sub_1B3D73198();
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1B3C81644(a1, a2);
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_32();
    return v9();
  }
  return result;
}

unint64_t sub_1B3C81644@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for XPCEncoder();
  uint64_t v6 = swift_allocObject();
  sub_1B3C805E8();
  uint64_t v7 = *(void *)(v2 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v9 = OUTLINED_FUNCTION_34(inited, (__n128)xmmword_1B3D80E20);
  inited[3].n128_u64[1] = *(void *)(a1 + 16);
  inited[4].n128_u64[0] = *(void *)(a1 + 24);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)v9);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_33();
  v10();
  sub_1B3D72278();
  sub_1B3C866E0((uint64_t)inited);
  swift_beginAccess();
  *(void *)(v6 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1B3D73188();
  sub_1B3C7F570(v6, v11, v12);
  swift_bridgeObjectRelease();
  a2[3] = v5;
  unint64_t result = sub_1B3C86640();
  a2[4] = result;
  *a2 = v6;
  return result;
}

uint64_t sub_1B3C817A0()
{
  return sub_1B3C80700();
}

uint64_t sub_1B3C817B8()
{
  return sub_1B3C80768();
}

uint64_t sub_1B3C817D0(uint64_t a1, uint64_t a2)
{
  return sub_1B3C807D0(a1, a2);
}

uint64_t sub_1B3C817E8()
{
  return sub_1B3C80844();
}

uint64_t sub_1B3C81800()
{
  return sub_1B3C808AC();
}

uint64_t sub_1B3C81818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C808C8(a1, a2, a3);
}

uint64_t sub_1B3C81830(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C808E4(a1, a2, a3);
}

uint64_t sub_1B3C81848(__int16 a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80904(a1, a2, a3);
}

uint64_t sub_1B3C81860(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80924(a1, a2, a3);
}

uint64_t sub_1B3C81878()
{
  return sub_1B3D73018();
}

uint64_t sub_1B3C81890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80944(a1, a2, a3);
}

uint64_t sub_1B3C818A8(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C809D8(a1, a2, a3);
}

uint64_t sub_1B3C818C0(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C809F8(a1, a2, a3);
}

uint64_t sub_1B3C818D8(unsigned int a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C80A18(a1, a2, a3);
}

uint64_t sub_1B3C818F0()
{
  return sub_1B3D73028();
}

void sub_1B3C81908()
{
}

uint64_t sub_1B3C81930()
{
  return sub_1B3D73008();
}

uint64_t sub_1B3C8195C()
{
  return sub_1B3D72F78();
}

uint64_t sub_1B3C81974()
{
  return sub_1B3D72F68();
}

uint64_t sub_1B3C8198C()
{
  return sub_1B3D72F88();
}

uint64_t sub_1B3C819A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B3C81B9C(a1, a2, a3, a4, MEMORY[0x1E4FBBFF0]);
}

uint64_t sub_1B3C819D4()
{
  return sub_1B3D72F98();
}

uint64_t sub_1B3C819F0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B3C81AF4(a1, a2, a3, a4, MEMORY[0x1E4FBC008]);
}

uint64_t sub_1B3C81A1C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B3C81B48(a1, a2, a3, a4, MEMORY[0x1E4FBC010]);
}

uint64_t sub_1B3C81A48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B3C81B9C(a1, a2, a3, a4, MEMORY[0x1E4FBC018]);
}

uint64_t sub_1B3C81A74()
{
  return sub_1B3D72FC8();
}

uint64_t sub_1B3C81A90()
{
  return sub_1B3D72FD8();
}

uint64_t sub_1B3C81AAC()
{
  return sub_1B3D72FA8();
}

uint64_t sub_1B3C81AC8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B3C81AF4(a1, a2, a3, a4, MEMORY[0x1E4FBC028]);
}

uint64_t sub_1B3C81AF4(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_1B3C81B1C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B3C81B48(a1, a2, a3, a4, MEMORY[0x1E4FBC038]);
}

uint64_t sub_1B3C81B48(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_1B3C81B70(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B3C81B9C(a1, a2, a3, a4, MEMORY[0x1E4FBC040]);
}

uint64_t sub_1B3C81B9C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_1B3C81BCC()
{
  return sub_1B3D72FE8();
}

uint64_t sub_1B3C81BE8()
{
  return sub_1B3D72FF8();
}

uint64_t sub_1B3C81C04()
{
  return sub_1B3D72FB8();
}

uint64_t sub_1B3C81C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B3C81308(a1, a2, a5);
}

uint64_t sub_1B3C81C50(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 16) + 16);
}

uint64_t sub_1B3C81C88()
{
  return sub_1B3C7F748(0, 0, 8);
}

uint64_t sub_1B3C81CC0(char a1)
{
  return sub_1B3C7F748(a1 & 1, 0, 2);
}

uint64_t sub_1B3C81CF8(uint64_t a1, uint64_t a2)
{
  return sub_1B3C7F748(a1, a2, 3);
}

uint64_t sub_1B3C81D28(double a1)
{
  return OUTLINED_FUNCTION_36(a1);
}

uint64_t sub_1B3C81D50(float a1)
{
  return OUTLINED_FUNCTION_36(a1);
}

uint64_t sub_1B3C81D7C(uint64_t a1)
{
  return OUTLINED_FUNCTION_9_0(a1);
}

uint64_t sub_1B3C81DA4(char a1)
{
  return OUTLINED_FUNCTION_9_0(a1);
}

uint64_t sub_1B3C81DD0(__int16 a1)
{
  return OUTLINED_FUNCTION_9_0(a1);
}

uint64_t sub_1B3C81DFC(int a1)
{
  return OUTLINED_FUNCTION_9_0(a1);
}

uint64_t sub_1B3C81E28(uint64_t a1)
{
  return OUTLINED_FUNCTION_10_0(a1);
}

uint64_t sub_1B3C81E50(unsigned __int8 a1)
{
  return OUTLINED_FUNCTION_10_0(a1);
}

uint64_t sub_1B3C81E7C(unsigned __int16 a1)
{
  return OUTLINED_FUNCTION_10_0(a1);
}

uint64_t sub_1B3C81EA8(unsigned int a1)
{
  return OUTLINED_FUNCTION_10_0(a1);
}

uint64_t sub_1B3C81ED4(uint64_t a1, uint64_t a2)
{
  xpc_object_t v4 = sub_1B3C80CAC(a1, a2);
  if (v4)
  {
    sub_1B3C7F748((uint64_t)v4, 0, 7);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v23 = type metadata accessor for XPCEncoder();
    uint64_t v6 = OUTLINED_FUNCTION_37();
    sub_1B3C805E8();
    uint64_t v21 = *(void *)(v2 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B3D80E20;
    swift_beginAccess();
    uint64_t v8 = sub_1B3C820E4();
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    char v14 = v13;
    *(void *)(inited + 56) = &type metadata for XPCKey;
    *(void *)(inited + 64) = sub_1B3C87E5C();
    uint64_t v15 = swift_allocObject();
    *(void *)(inited + 32) = v15;
    *(void *)(v15 + 16) = v8;
    *(void *)(v15 + 24) = v10;
    *(void *)(v15 + 32) = v12;
    *(unsigned char *)(v15 + 40) = v14 & 1;
    sub_1B3D72278();
    sub_1B3C866E0(inited);
    swift_beginAccess();
    *(void *)(v6 + 16) = v21;
    swift_bridgeObjectRelease();
    v22[3] = v23;
    v22[4] = sub_1B3C86640();
    v22[0] = v6;
    swift_retain();
    sub_1B3D72308();
    if (v3)
    {
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      uint64_t v16 = sub_1B3C7FB48();
      uint64_t v18 = v17;
      char v20 = v19;
      sub_1B3C7F748(v16, v17, v19);
      sub_1B3C801F4(v16, v18, v20);
      return swift_release();
    }
  }
}

uint64_t sub_1B3C820E4()
{
  return 0x207865646E49;
}

uint64_t sub_1B3C82164()
{
  sub_1B3C7F8F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_23_1(inited, (__n128)xmmword_1B3D80E20);
  uint64_t v1 = sub_1B3C820E4();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  char v7 = v6;
  inited[3].n128_u64[1] = (unint64_t)&type metadata for XPCKey;
  inited[4].n128_u64[0] = sub_1B3C87E5C();
  uint64_t v8 = swift_allocObject();
  inited[2].n128_u64[0] = v8;
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v3;
  *(void *)(v8 + 32) = v5;
  *(unsigned char *)(v8 + 40) = v7 & 1;
  sub_1B3D72278();
  sub_1B3C866E0((uint64_t)inited);
  type metadata accessor for XPCKeyedEncoding();
  swift_getWitnessTable();
  return sub_1B3D72C38();
}

unint64_t sub_1B3C822AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1B3C7F820();
  uint64_t v4 = *(void *)(v1 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_23_1(inited, (__n128)xmmword_1B3D80E20);
  uint64_t v6 = sub_1B3C820E4();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  char v12 = v11;
  inited[3].n128_u64[1] = (unint64_t)&type metadata for XPCKey;
  inited[4].n128_u64[0] = sub_1B3C87E5C();
  uint64_t v13 = swift_allocObject();
  inited[2].n128_u64[0] = v13;
  *(void *)(v13 + 16) = v6;
  *(void *)(v13 + 24) = v8;
  *(void *)(v13 + 32) = v10;
  *(unsigned char *)(v13 + 40) = v12 & 1;
  sub_1B3D72278();
  sub_1B3C866E0((uint64_t)inited);
  a1[3] = (uint64_t)&unk_1F0C79B68;
  unint64_t result = sub_1B3C87744();
  a1[4] = result;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

unint64_t sub_1B3C823B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v12 = type metadata accessor for XPCEncoder();
  uint64_t v2 = swift_allocObject();
  sub_1B3C805E8();
  swift_beginAccess();
  uint64_t v3 = sub_1B3C820E4();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  swift_beginAccess();
  sub_1B3C867F4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B3C86AE4);
  uint64_t v10 = *(void *)(*(void *)(v2 + 16) + 16);
  sub_1B3C8692C(v10, (uint64_t (*)(BOOL))sub_1B3C86AE4);
  sub_1B3C87F50(v10, v3, v5, v7, v9, (uint64_t *)(v2 + 16));
  swift_endAccess();
  sub_1B3C7F9D8(v2);
  a1[3] = v12;
  unint64_t result = sub_1B3C86640();
  a1[4] = result;
  *a1 = v2;
  return result;
}

uint64_t sub_1B3C824DC()
{
  return sub_1B3C81C50(*v0);
}

uint64_t sub_1B3C824E4()
{
  return sub_1B3C81C88();
}

uint64_t sub_1B3C824FC(char a1)
{
  return sub_1B3C81CC0(a1);
}

uint64_t sub_1B3C82514(uint64_t a1, uint64_t a2)
{
  return sub_1B3C81CF8(a1, a2);
}

uint64_t sub_1B3C8252C(double a1)
{
  return sub_1B3C81D28(a1);
}

uint64_t sub_1B3C82544(float a1)
{
  return sub_1B3C81D50(a1);
}

uint64_t sub_1B3C8255C(uint64_t a1)
{
  return sub_1B3C81D7C(a1);
}

uint64_t sub_1B3C82574(char a1)
{
  return sub_1B3C81DA4(a1);
}

uint64_t sub_1B3C8258C(__int16 a1)
{
  return sub_1B3C81DD0(a1);
}

uint64_t sub_1B3C825A4(int a1)
{
  return sub_1B3C81DFC(a1);
}

uint64_t sub_1B3C825BC()
{
  return sub_1B3D72E28();
}

uint64_t sub_1B3C825D4(uint64_t a1)
{
  return sub_1B3C81E28(a1);
}

uint64_t sub_1B3C825EC(unsigned __int8 a1)
{
  return sub_1B3C81E50(a1);
}

uint64_t sub_1B3C82604(unsigned __int16 a1)
{
  return sub_1B3C81E7C(a1);
}

uint64_t sub_1B3C8261C(unsigned int a1)
{
  return sub_1B3C81EA8(a1);
}

uint64_t sub_1B3C82634()
{
  return sub_1B3D72E38();
}

uint64_t sub_1B3C8264C(uint64_t a1, uint64_t a2)
{
  return sub_1B3C81ED4(a1, a2);
}

uint64_t sub_1B3C82664()
{
  return sub_1B3D72D08();
}

uint64_t sub_1B3C82690()
{
  return sub_1B3D72D38();
}

uint64_t sub_1B3C826BC()
{
  return sub_1B3D72D28();
}

uint64_t sub_1B3C826E8()
{
  return sub_1B3D72D48();
}

uint64_t sub_1B3C82714()
{
  return sub_1B3D72D58();
}

uint64_t sub_1B3C82740()
{
  return sub_1B3D72D68();
}

uint64_t sub_1B3C8276C()
{
  return sub_1B3D72D88();
}

uint64_t sub_1B3C82798()
{
  return sub_1B3D72D98();
}

uint64_t sub_1B3C827C4()
{
  return sub_1B3D72DA8();
}

uint64_t sub_1B3C827F0()
{
  return sub_1B3D72DB8();
}

uint64_t sub_1B3C8281C()
{
  return sub_1B3D72DD8();
}

uint64_t sub_1B3C82848()
{
  return sub_1B3D72D78();
}

uint64_t sub_1B3C82874()
{
  return sub_1B3D72DC8();
}

uint64_t sub_1B3C828A0()
{
  return sub_1B3D72DE8();
}

uint64_t sub_1B3C828CC()
{
  return sub_1B3D72DF8();
}

uint64_t sub_1B3C828F8()
{
  return sub_1B3D72E08();
}

uint64_t sub_1B3C82924()
{
  return sub_1B3D72E18();
}

uint64_t sub_1B3C82950()
{
  return sub_1B3D72D18();
}

uint64_t sub_1B3C82990()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t v3 = *(void *)(*v0 + 24);
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  char v4 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v1 + 32) = 8;
  return OUTLINED_FUNCTION_7_2(v2, v3, v4);
}

uint64_t sub_1B3C829CC(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = a1 & 1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = *(void *)(*v1 + 24);
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = 0;
  char v6 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = 2;
  return OUTLINED_FUNCTION_7_2(v4, v5, v6);
}

uint64_t sub_1B3C82A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  uint64_t v4 = *(void *)(*v2 + 24);
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  char v6 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(v3 + 32) = 3;
  sub_1B3D72278();
  return OUTLINED_FUNCTION_7_2(v5, v4, v6);
}

uint64_t sub_1B3C82A64(double a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  uint64_t v4 = *(void *)(*v1 + 24);
  *(double *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  char v5 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = 6;
  return OUTLINED_FUNCTION_7_2(v3, v4, v5);
}

uint64_t sub_1B3C82AA4(float a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  uint64_t v4 = *(void *)(*v1 + 24);
  *(double *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = 0;
  char v5 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = 6;
  return OUTLINED_FUNCTION_7_2(v3, v4, v5);
}

uint64_t sub_1B3C82AE8(char a1)
{
  return OUTLINED_FUNCTION_4_1(a1);
}

uint64_t sub_1B3C82B10(__int16 a1)
{
  return OUTLINED_FUNCTION_4_1(a1);
}

uint64_t sub_1B3C82B38(int a1)
{
  return OUTLINED_FUNCTION_4_1(a1);
}

uint64_t sub_1B3C82B60(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 16);
  uint64_t v5 = *(void *)(*v2 + 24);
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = 0;
  char v6 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(v3 + 32) = a2;
  return OUTLINED_FUNCTION_7_2(v4, v5, v6);
}

uint64_t sub_1B3C82BA0(unsigned __int8 a1)
{
  return OUTLINED_FUNCTION_5_2(a1);
}

uint64_t sub_1B3C82BC8(unsigned __int16 a1)
{
  return OUTLINED_FUNCTION_5_2(a1);
}

uint64_t sub_1B3C82BF0(unsigned int a1)
{
  return OUTLINED_FUNCTION_5_2(a1);
}

uint64_t sub_1B3C82C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  xpc_object_t v5 = sub_1B3C80CAC(a1, a2);
  if (v5)
  {
    uint64_t v6 = *v2;
    uint64_t v8 = *(void *)(*v2 + 16);
    uint64_t v7 = *(void *)(*v2 + 24);
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = 0;
    char v9 = *(unsigned char *)(v6 + 32);
    *(unsigned char *)(v6 + 32) = 7;
    uint64_t v10 = v8;
    return sub_1B3C801F4(v10, v7, v9);
  }
  uint64_t v12 = type metadata accessor for XPCEncoder();
  uint64_t v13 = OUTLINED_FUNCTION_37();
  sub_1B3C805E8();
  uint64_t v14 = v2[1];
  swift_beginAccess();
  *(void *)(v13 + 16) = v14;
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  v21[3] = v12;
  v21[4] = sub_1B3C86640();
  v21[0] = v13;
  swift_retain();
  sub_1B3D72308();
  if (!v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t v15 = *v4;
    uint64_t v16 = sub_1B3C7FB48();
    uint64_t v18 = v17;
    char v20 = v19;
    swift_release();
    uint64_t v10 = *(void *)(v15 + 16);
    uint64_t v7 = *(void *)(v15 + 24);
    *(void *)(v15 + 16) = v16;
    *(void *)(v15 + 24) = v18;
    char v9 = *(unsigned char *)(v15 + 32);
    *(unsigned char *)(v15 + 32) = v20;
    return sub_1B3C801F4(v10, v7, v9);
  }
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t sub_1B3C82D64()
{
  return sub_1B3C82990();
}

uint64_t sub_1B3C82D7C(char a1)
{
  return sub_1B3C829CC(a1);
}

uint64_t sub_1B3C82D94(uint64_t a1, uint64_t a2)
{
  return sub_1B3C82A0C(a1, a2);
}

uint64_t sub_1B3C82DAC(double a1)
{
  return sub_1B3C82A64(a1);
}

uint64_t sub_1B3C82DC4(float a1)
{
  return sub_1B3C82AA4(a1);
}

uint64_t sub_1B3C82DDC(uint64_t a1)
{
  return sub_1B3C82B60(a1, 4);
}

uint64_t sub_1B3C82DF8(char a1)
{
  return sub_1B3C82AE8(a1);
}

uint64_t sub_1B3C82E10(__int16 a1)
{
  return sub_1B3C82B10(a1);
}

uint64_t sub_1B3C82E28(int a1)
{
  return sub_1B3C82B38(a1);
}

uint64_t sub_1B3C82E40()
{
  return sub_1B3D72EA8();
}

uint64_t sub_1B3C82E58(uint64_t a1)
{
  return sub_1B3C82B60(a1, 5);
}

uint64_t sub_1B3C82E74(unsigned __int8 a1)
{
  return sub_1B3C82BA0(a1);
}

uint64_t sub_1B3C82E8C(unsigned __int16 a1)
{
  return sub_1B3C82BC8(a1);
}

uint64_t sub_1B3C82EA4(unsigned int a1)
{
  return sub_1B3C82BF0(a1);
}

uint64_t sub_1B3C82EBC()
{
  return sub_1B3D72EB8();
}

uint64_t sub_1B3C82ED4(uint64_t a1, uint64_t a2)
{
  return sub_1B3C82C18(a1, a2);
}

uint64_t sub_1B3C82EF8()
{
  return sub_1B3D72C58();
}

uint64_t sub_1B3C82F44()
{
  uint64_t v1 = *v0;
  sub_1B3D72278();
  return v1;
}

void sub_1B3C82F74(uint64_t a1@<X8>)
{
  sub_1B3C82EEC();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
}

uint64_t sub_1B3C82FA4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1B3C82FB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B3C82EF8();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1B3C82FE0(uint64_t a1)
{
  unint64_t v2 = sub_1B3C87E5C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C8301C(uint64_t a1)
{
  unint64_t v2 = sub_1B3C87E5C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1B3C83058(uint64_t a1, void *a2)
{
  uint64_t result = sub_1B3C7E890(a1, a2);
  if (!v2)
  {
    type metadata accessor for XPCKeyedDecoding();
    swift_getWitnessTable();
    return (void *)sub_1B3D72B98();
  }
  return result;
}

uint64_t sub_1B3C830EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (const _xpc_type_s *)MEMORY[0x1B3EC6600]();
  if (v6 == (const _xpc_type_s *)sub_1B3D72098())
  {
    a3[3] = &unk_1F0C79AE0;
    a3[4] = sub_1B3C87664();
    *a3 = a1;
    a3[1] = a2;
    a3[2] = 0;
    swift_unknownObjectRetain();
    return sub_1B3D72278();
  }
  else
  {
    sub_1B3D72988();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t *v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2838);
    sub_1B3D72278();
    sub_1B3D72938();
    swift_bridgeObjectRelease();
    xpc_type_get_name(v6);
    sub_1B3D72408();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    OUTLINED_FUNCTION_11_2();
    sub_1B3D72978();
    OUTLINED_FUNCTION_6();
    (*(void (**)(uint64_t *))(v9 + 104))(v8);
    return swift_willThrow();
  }
}

uint64_t sub_1B3C83278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[3] = &unk_1F0C7AC78;
  a3[4] = sub_1B3C87618();
  *a3 = a1;
  a3[1] = a2;
  swift_unknownObjectRetain();
  return sub_1B3D72278();
}

uint64_t sub_1B3C832D8()
{
  return sub_1B3D72278();
}

uint64_t sub_1B3C832E0()
{
  return sub_1B3D72278();
}

void *sub_1B3C832E8(uint64_t a1)
{
  return sub_1B3C83058(a1, *v1);
}

uint64_t sub_1B3C8330C@<X0>(void *a1@<X8>)
{
  return sub_1B3C830EC(*v1, v1[1], a1);
}

uint64_t sub_1B3C83328@<X0>(void *a1@<X8>)
{
  return sub_1B3C83278(*v1, v1[1], a1);
}

uint64_t sub_1B3C83344(void *a1)
{
  sub_1B3C7903C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE20E0);
  sub_1B3C87EFC();
  uint64_t v1 = sub_1B3D72428();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1B3C833D8()
{
  return sub_1B3D73198();
}

BOOL sub_1B3C8343C(uint64_t a1, void *a2)
{
  sub_1B3D73188();
  uint64_t v3 = sub_1B3D723C8();
  xpc_object_t v4 = xpc_dictionary_get_value(a2, (const char *)(v3 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  if (v4) {
    swift_unknownObjectRelease();
  }
  return v4 != 0;
}

uint64_t sub_1B3C834BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v23 = a6;
  uint64_t v26 = a3;
  uint64_t v12 = sub_1B3D72848();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v22 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v22 - v14, a1, v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, a5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(a5 - 8) + 32))(a7, v15, a5);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v16 = sub_1B3D72988();
  swift_allocError();
  uint64_t v18 = v17;
  uint64_t v19 = v23;
  v17[3] = a4;
  v17[4] = v19;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a2, a4);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1B3D72278();
  sub_1B3D72938();
  sub_1B3D723F8();
  sub_1B3D72E48();
  sub_1B3D723F8();
  sub_1B3D73188();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2318);
  sub_1B3D723F8();
  sub_1B3D72978();
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBA68], v16);
  return swift_willThrow();
}

BOOL sub_1B3C83794(uint64_t a1, void *a2)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = sub_1B3D723C8();
  xpc_object_t v4 = xpc_dictionary_get_value(a2, (const char *)(v3 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  if (!v4) {
    return 0;
  }
  uint64_t v5 = MEMORY[0x1B3EC6600](v4);
  uint64_t v6 = sub_1B3D72088();
  swift_unknownObjectRelease();
  return v5 == v6;
}

BOOL sub_1B3C83834(uint64_t a1, void *a2)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = sub_1B3D723C8();
  BOOL v4 = xpc_dictionary_get_BOOL(a2, (const char *)(v3 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

uint64_t sub_1B3C83898(uint64_t a1, void *a2)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = sub_1B3D723C8();
  uint64_t v4 = xpc_dictionary_get_double(a2, (const char *)(v3 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  return OUTLINED_FUNCTION_12_0(MEMORY[0x1E4FBB3D0], (uint64_t)&v6, v4);
}

float sub_1B3C83944(uint64_t a1, void *a2)
{
  sub_1B3C83898(a1, a2);
  return v2;
}

uint64_t sub_1B3C83960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B3C83AC0(a1, a2, a3, a4, a5, MEMORY[0x1E4F14B60], MEMORY[0x1E4FBC1C8]);
}

uint64_t sub_1B3C83994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1B3C83AC0(a1, a2, a3, a4, a5, MEMORY[0x1E4F14B60], MEMORY[0x1E4FBC1C8]);
  if (!v5)
  {
    if (result < -128)
    {
      __break(1u);
    }
    else if (result <= 127)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B3C839E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1B3C83AC0(a1, a2, a3, a4, a5, MEMORY[0x1E4F14B60], MEMORY[0x1E4FBC1C8]);
  if (!v5)
  {
    if (result < -32768)
    {
      __break(1u);
    }
    else if (result < 0x8000)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B3C83A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_1B3C83AC0(a1, a2, a3, a4, a5, MEMORY[0x1E4F14B60], MEMORY[0x1E4FBC1C8]);
  if (!v5)
  {
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (result <= 0x7FFFFFFF)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B3C83A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B3C83AC0(a1, a2, a3, a4, a5, MEMORY[0x1E4F14B68], MEMORY[0x1E4FBC538]);
}

uint64_t sub_1B3C83AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v14 = sub_1B3D723C8();
  uint64_t v15 = a6(a2, v14 + 32);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v18 = v15;
  char v19 = 0;
  uint64_t result = sub_1B3C834BC((uint64_t)&v18, v7, a3, a4, a7, a5, (uint64_t)&v20);
  if (!v8) {
    return v20;
  }
  return result;
}

unint64_t sub_1B3C83B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result = sub_1B3C83AC0(a1, a2, a3, a4, a5, MEMORY[0x1E4F14B68], MEMORY[0x1E4FBC538]);
  if (!v5 && result >= 0x100)
  {
    OUTLINED_FUNCTION_1_3();
    unint64_t result = OUTLINED_FUNCTION_2_3();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B3C83BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result = sub_1B3C83AC0(a1, a2, a3, a4, a5, MEMORY[0x1E4F14B68], MEMORY[0x1E4FBC538]);
  if (!v5 && result >= 0x10000)
  {
    OUTLINED_FUNCTION_1_3();
    unint64_t result = OUTLINED_FUNCTION_2_3();
    __break(1u);
  }
  return result;
}

unint64_t sub_1B3C83C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result = sub_1B3C83AC0(a1, a2, a3, a4, a5, MEMORY[0x1E4F14B68], MEMORY[0x1E4FBC538]);
  if (!v5)
  {
    if (HIDWORD(result))
    {
      OUTLINED_FUNCTION_1_3();
      unint64_t result = OUTLINED_FUNCTION_2_3();
      __break(1u);
    }
  }
  return result;
}

void *sub_1B3C83CD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B3D73188();
  uint64_t v11 = sub_1B3D723C8();
  xpc_object_t v12 = xpc_dictionary_get_value(a2, (const char *)(v11 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  xpc_object_t v17 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2910);
  sub_1B3C834BC((uint64_t)&v17, a1, a3, a4, v13, a5, (uint64_t)&v18);
  swift_unknownObjectRelease();
  if (!v5)
  {
    a2 = v18;
    sub_1B3D72A18();
    swift_unknownObjectRetain();
    sub_1B3D72248();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B3D80E20;
    *(void *)(inited + 56) = a4;
    *(void *)(inited + 64) = a5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
    uint64_t v18 = (void *)a3;
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3C866E0(inited);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return a2;
}

void sub_1B3C83E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, xpc_object_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_21();
  a19 = v21;
  a20 = v22;
  v71 = v23;
  uint64_t v72 = v20;
  uint64_t v68 = v24;
  uint64_t v69 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_1B3D72848();
  OUTLINED_FUNCTION_0_0();
  uint64_t v66 = v36;
  uint64_t v67 = v37;
  OUTLINED_FUNCTION_28();
  uint64_t v39 = MEMORY[0x1F4188790](v38);
  uint64_t v41 = (char *)&v64 - v40;
  uint64_t v70 = v29;
  uint64_t v65 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v39);
  OUTLINED_FUNCTION_5_1();
  uint64_t v44 = (char *)(v43 - v42);
  sub_1B3D73188();
  uint64_t v45 = sub_1B3D723C8();
  xpc_object_t v46 = xpc_dictionary_get_value(v33, (const char *)(v45 + 32));
  uint64_t v47 = v35;
  uint64_t v48 = v31;
  swift_bridgeObjectRelease();
  unint64_t v49 = v71;
  swift_release();
  a10 = v46;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2910);
  uint64_t v51 = v72;
  sub_1B3C834BC((uint64_t)&a10, v47, (uint64_t)v49, v31, v50, v27, (uint64_t)v73);
  swift_unknownObjectRelease();
  if (!v51)
  {
    uint64_t v72 = 0;
    uint64_t v52 = v67;
    uint64_t v64 = v27;
    uint64_t v53 = v70;
    id v54 = v73[0];
    sub_1B3C84218(v70, v73[0], v70, (uint64_t)v41);
    if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v53) == 1)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v66);
      sub_1B3D72A18();
      swift_unknownObjectRetain();
      unint64_t v55 = (void *)sub_1B3D72248();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
      uint64_t inited = (__n128 *)swift_initStackObject();
      id v57 = OUTLINED_FUNCTION_34(inited, (__n128)xmmword_1B3D80E20);
      unint64_t v58 = v64;
      inited[3].n128_u64[1] = v48;
      inited[4].n128_u64[0] = v58;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)v57);
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_33();
      v59();
      v73[0] = v49;
      swift_unknownObjectRetain();
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3C866E0((uint64_t)inited);
      unint64_t v60 = v73[0];
      v73[3] = &unk_1F0C78AB8;
      unint64_t v61 = (void *)sub_1B3C875CC();
      v73[0] = v54;
      v73[1] = v60;
      v73[4] = v61;
      v73[2] = v55;
      sub_1B3D72278();
      sub_1B3D72648();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
    }
    else
    {
      swift_unknownObjectRelease();
      unint64_t v62 = *(void (**)(uint64_t, char *, uint64_t))(v65 + 32);
      uint64_t v63 = v70;
      v62((uint64_t)v44, v41, v70);
      v62(v69, v44, v63);
    }
  }
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3C84218@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2800);
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = sub_1B3D71E58();
  if (MEMORY[0x1F4188790](v9) == a1)
  {
    xpc_date_get_value(a2);
    sub_1B3D71E28();
    goto LABEL_11;
  }
  if (a1 == MEMORY[0x1E4F277C0])
  {
    uint64_t v11 = (void *)swift_unknownObjectRetain();
    sub_1B3C7D0A4(v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2818);
    uint64_t v12 = swift_dynamicCast() ^ 1;
    uint64_t v13 = a4;
    return __swift_storeEnumTagSinglePayload(v13, v12, 1, a3);
  }
  if (sub_1B3D71DA8() == a1 && xpc_string_get_string_ptr(a2))
  {
    sub_1B3D72408();
    sub_1B3D71D98();
    swift_bridgeObjectRelease();
LABEL_11:
    if (swift_dynamicCast())
    {
      uint64_t v13 = a4;
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v13 = a4;
      uint64_t v12 = 1;
    }
    return __swift_storeEnumTagSinglePayload(v13, v12, 1, a3);
  }
  return __swift_storeEnumTagSinglePayload(a4, 1, 1, a3);
}

void *sub_1B3C84430(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t result = sub_1B3C83CD4(a2, a3, a4, a5, a7);
  if (!v7)
  {
    sub_1B3C83058((uint64_t)result, result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1B3C844D8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  unint64_t result = sub_1B3C83CD4(a1, a2, a3, a4, a5);
  if (!v6)
  {
    sub_1B3C830EC((uint64_t)result, v9, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B3C8454C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_1B3D72848();
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - v12;
  OUTLINED_FUNCTION_40();
  sub_1B3D73198();
  uint64_t result = OUTLINED_FUNCTION_39((uint64_t)v13);
  if (v15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = sub_1B3C83CD4((uint64_t)v13, a1, a2, a3, a4);
    if (v5)
    {
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_32();
      return v19();
    }
    else
    {
      uint64_t v20 = v16;
      uint64_t v21 = v17;
      uint64_t v22 = v18;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_32();
      v23();
      a5[3] = &unk_1F0C78AB8;
      uint64_t result = sub_1B3C875CC();
      a5[4] = result;
      *a5 = v20;
      a5[1] = v21;
      a5[2] = v22;
    }
  }
  return result;
}

unint64_t sub_1B3C846A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  unint64_t result = (unint64_t)sub_1B3C83CD4(a1, a2, a3, a4, a5);
  if (!v6)
  {
    unint64_t v11 = result;
    unint64_t v12 = v9;
    unint64_t v13 = v10;
    a6[3] = (unint64_t)&unk_1F0C78AB8;
    unint64_t result = sub_1B3C875CC();
    a6[4] = result;
    *a6 = v11;
    a6[1] = v12;
    a6[2] = v13;
  }
  return result;
}

uint64_t sub_1B3C8470C()
{
  return sub_1B3C83344(*v0);
}

BOOL sub_1B3C8471C(uint64_t a1)
{
  return sub_1B3C8343C(a1, *v1);
}

BOOL sub_1B3C8472C(uint64_t a1)
{
  return sub_1B3C83794(a1, *v1);
}

BOOL sub_1B3C84754(uint64_t a1)
{
  return sub_1B3C83834(a1, *v1);
}

uint64_t sub_1B3C8477C(uint64_t a1)
{
  return sub_1B3C7EA08(a1, *v1);
}

uint64_t sub_1B3C847A0(uint64_t a1)
{
  return sub_1B3C83898(a1, *v1);
}

float sub_1B3C847C4(uint64_t a1)
{
  return sub_1B3C83944(a1, *v1);
}

uint64_t sub_1B3C847E8(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83960(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1B3C8480C(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83994(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1B3C84830(uint64_t a1, uint64_t a2)
{
  return sub_1B3C839E4(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1B3C84854(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83A34(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1B3C84878(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83AC0(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24), MEMORY[0x1E4F14B60], MEMORY[0x1E4FBC1C8]);
}

uint64_t sub_1B3C848B8()
{
  return sub_1B3D72F48();
}

uint64_t sub_1B3C848D0(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83A8C(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

unint64_t sub_1B3C848F4(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83B90(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

unint64_t sub_1B3C84918(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83BFC(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

unint64_t sub_1B3C8493C(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83C68(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1B3C84960(uint64_t a1, uint64_t a2)
{
  return sub_1B3C83AC0(a1, *v2, v2[1], *(void *)(a2 + 16), *(void *)(a2 + 24), MEMORY[0x1E4F14B68], MEMORY[0x1E4FBC538]);
}

uint64_t sub_1B3C849A0()
{
  return sub_1B3D72F58();
}

#error "1B3C849D8: call analysis failed (funcsize=11)"

uint64_t sub_1B3C849E4()
{
  return sub_1B3D72ED8();
}

uint64_t sub_1B3C849FC()
{
  return sub_1B3D72EC8();
}

uint64_t sub_1B3C84A14()
{
  uint64_t result = sub_1B3D72EE8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C84A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84C5C(a1, a2, a3, MEMORY[0x1E4FBBF60]);
}

uint64_t sub_1B3C84A64()
{
  uint64_t result = sub_1B3D72EF8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C84A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84BAC(a1, a2, a3, MEMORY[0x1E4FBBF78]);
}

uint64_t sub_1B3C84AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84C04(a1, a2, a3, MEMORY[0x1E4FBBF80]);
}

uint64_t sub_1B3C84AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84C5C(a1, a2, a3, MEMORY[0x1E4FBBF88]);
}

uint64_t sub_1B3C84B0C()
{
  uint64_t result = sub_1B3D72F28();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C84B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84CD4(a1, a2, a3, MEMORY[0x1E4FBBFA0]);
}

uint64_t sub_1B3C84B5C()
{
  uint64_t result = sub_1B3D72F08();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C84B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84BAC(a1, a2, a3, MEMORY[0x1E4FBBF98]);
}

uint64_t sub_1B3C84BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  __int16 v4 = a4();
  return OUTLINED_FUNCTION_31(v4 & 0x1FF);
}

uint64_t sub_1B3C84BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84C04(a1, a2, a3, MEMORY[0x1E4FBBFA8]);
}

uint64_t sub_1B3C84C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a4();
  return OUTLINED_FUNCTION_31(v4 & 0x1FFFF);
}

uint64_t sub_1B3C84C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84C5C(a1, a2, a3, MEMORY[0x1E4FBBFB0]);
}

uint64_t sub_1B3C84C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4 = a4();
  return OUTLINED_FUNCTION_24_1(v4);
}

uint64_t sub_1B3C84C84()
{
  uint64_t result = sub_1B3D72F38();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C84CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C84CD4(a1, a2, a3, MEMORY[0x1E4FBBFC0]);
}

uint64_t sub_1B3C84CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_1B3C84D00()
{
  return sub_1B3D72F18();
}

void *sub_1B3C84D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B3C84430(a1, a2, *(void **)v5, *(void *)(v5 + 8), *(void *)(a5 + 16), a3, *(void *)(a5 + 24));
}

void *sub_1B3C84D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1B3C844D8(a1, *(void **)v3, *(void *)(v3 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1B3C84D7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B3C8454C(*(void **)v2, *(void *)(v2 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

unint64_t sub_1B3C84DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  return sub_1B3C846A4(a1, *(void **)v3, *(void *)(v3 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

size_t sub_1B3C84DC4(void *a1)
{
  return xpc_array_get_count(a1);
}

BOOL sub_1B3C84DE0(void *a1, uint64_t a2, uint64_t a3)
{
  return (uint64_t)xpc_array_get_count(a1) <= a3;
}

void *sub_1B3C84E0C(void *a1, uint64_t a2)
{
  if (a2)
  {
    sub_1B3D72278();
  }
  else
  {
    uint64_t v3 = sub_1B3D72988();
    swift_allocError();
    uint64_t v5 = v4;
    *uint64_t v4 = MEMORY[0x1E4FBB1A0];
    v7[0] = 0;
    v7[1] = 0xE000000000000000;
    sub_1B3D72278();
    sub_1B3D72938();
    sub_1B3D723F8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    sub_1B3D723F8();
    a1 = v7;
    sub_1B3D723F8();
    sub_1B3D72978();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v3 - 8) + 104))(v5, *MEMORY[0x1E4FBBA70], v3);
    swift_willThrow();
  }
  return a1;
}

xpc_object_t sub_1B3C84F94()
{
  size_t v1 = *(void *)(v0 + 16);
  xpc_object_t result = xpc_array_get_value(*(xpc_object_t *)v0, v1);
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 16) = v1 + 1;
    uint64_t v3 = MEMORY[0x1B3EC6600]();
    uint64_t v4 = sub_1B3D72088();
    swift_unknownObjectRelease();
    return (xpc_object_t)(v3 == v4);
  }
  return result;
}

void sub_1B3C8500C()
{
  size_t v1 = *(void *)(v0 + 16);
  xpc_array_get_BOOL(*(xpc_object_t *)v0, v1);
  if (__OFADD__(v1, 1)) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_29(v1 + 1);
  }
}

uint64_t sub_1B3C8504C()
{
  size_t v2 = *(void *)(v0 + 16);
  string = xpc_array_get_string(*(xpc_object_t *)v0, v2);
  if (string)
  {
    string = (void *)sub_1B3D72408();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1B3C84E0C(string, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (v1) {
    return (uint64_t)v6;
  }
  if (!__OFADD__(v2, 1))
  {
    *(void *)(v0 + 16) = v2 + 1;
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

void sub_1B3C850F0()
{
  OUTLINED_FUNCTION_38();
  if (__OFADD__(v0, 1)) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_29(v0 + 1);
  }
}

void sub_1B3C85120()
{
  OUTLINED_FUNCTION_38();
  if (__OFADD__(v1, 1)) {
    __break(1u);
  }
  else {
    *(void *)(v0 + 16) = v1 + 1;
  }
}

int64_t sub_1B3C85158()
{
  int64_t result = OUTLINED_FUNCTION_17_0();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(v0 + 16) = v1 + 1;
  if (result < -128)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (result > 127) {
LABEL_7:
  }
    __break(1u);
  return result;
}

int64_t sub_1B3C851A4()
{
  int64_t result = OUTLINED_FUNCTION_17_0();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(v0 + 16) = v1 + 1;
  if (result < -32768)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (result >= 0x8000) {
LABEL_7:
  }
    __break(1u);
  return result;
}

int64_t sub_1B3C851F0()
{
  int64_t result = OUTLINED_FUNCTION_17_0();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  *(void *)(v0 + 16) = v1 + 1;
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (result > 0x7FFFFFFF) {
LABEL_7:
  }
    __break(1u);
  return result;
}

void sub_1B3C85244()
{
  uint64_t v1 = OUTLINED_FUNCTION_20_0();
  v2(v1);
  if (__OFADD__(v0, 1)) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_29(v0 + 1);
  }
}

uint64_t sub_1B3C85278()
{
  uint64_t result = OUTLINED_FUNCTION_18_0();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_5;
  }
  *(void *)(v0 + 16) = v1 + 1;
  if (result >= 0x100)
  {
LABEL_5:
    OUTLINED_FUNCTION_1_3();
    uint64_t result = OUTLINED_FUNCTION_2_3();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B3C852E0()
{
  uint64_t result = OUTLINED_FUNCTION_18_0();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_5;
  }
  *(void *)(v0 + 16) = v1 + 1;
  if (result >= 0x10000)
  {
LABEL_5:
    OUTLINED_FUNCTION_1_3();
    uint64_t result = OUTLINED_FUNCTION_2_3();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B3C85348()
{
  uint64_t result = OUTLINED_FUNCTION_18_0();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_5;
  }
  *(void *)(v0 + 16) = v1 + 1;
  if (HIDWORD(result))
  {
LABEL_5:
    OUTLINED_FUNCTION_1_3();
    uint64_t result = OUTLINED_FUNCTION_2_3();
    __break(1u);
  }
  return result;
}

void sub_1B3C853B0()
{
  OUTLINED_FUNCTION_21();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v30 = v7;
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_5_1();
  v29[0] = v12 - v11;
  uint64_t v13 = sub_1B3D72848();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v29 - v17;
  size_t v19 = *(void *)(v2 + 16);
  xpc_object_t v20 = xpc_array_get_value(*(xpc_object_t *)v2, v19);
  v29[1] = v4;
  sub_1B3C84218(v6, v20, v6, (uint64_t)v18);
  OUTLINED_FUNCTION_39((uint64_t)v18);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
    sub_1B3D72A18();
    swift_unknownObjectRetain();
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t v23 = sub_1B3D72248();
    uint64_t v34 = &unk_1F0C78AB8;
    unint64_t v24 = sub_1B3C875CC();
    xpc_object_t v31 = v20;
    uint64_t v32 = v22;
    unint64_t v35 = v24;
    uint64_t v33 = v23;
    sub_1B3D72278();
    uint64_t v25 = v29[0];
    sub_1B3D72648();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if (!v1)
    {
      uint64_t v26 = *(void *)(v2 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27) {
        goto LABEL_10;
      }
      *(void *)(v2 + 16) = v28;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v30, v25, v6);
    }
LABEL_8:
    OUTLINED_FUNCTION_26();
    return;
  }
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v30, v18, v6);
  if (!__OFADD__(v19, 1))
  {
    *(void *)(v2 + 16) = v19 + 1;
    goto LABEL_8;
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

uint64_t sub_1B3C855EC()
{
  uint64_t v0 = (void *)sub_1B3C8567C();
  sub_1B3C83058((uint64_t)v0, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1B3C8567C()
{
  size_t v1 = *(void *)(v0 + 16);
  xpc_object_t v2 = xpc_array_get_value(*(xpc_object_t *)v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B3D80E20;
  uint64_t v4 = sub_1B3C820E4();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9;
  *(void *)(inited + 56) = &type metadata for XPCKey;
  *(void *)(inited + 64) = sub_1B3C87E5C();
  uint64_t v11 = swift_allocObject();
  *(void *)(inited + 32) = v11;
  *(void *)(v11 + 16) = v4;
  *(void *)(v11 + 24) = v6;
  *(void *)(v11 + 32) = v8;
  *(unsigned char *)(v11 + 40) = v10 & 1;
  sub_1B3D72278();
  uint64_t result = sub_1B3C866E0(inited);
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 16) = v1 + 1;
    sub_1B3D72A18();
    sub_1B3D72248();
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_1B3C857C0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1B3C8567C();
  sub_1B3C830EC(v2, v3, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

unint64_t sub_1B3C85830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1B3C8567C();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  a1[3] = (uint64_t)&unk_1F0C78AB8;
  unint64_t result = sub_1B3C875CC();
  a1[4] = result;
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v6;
  return result;
}

size_t sub_1B3C85894()
{
  return sub_1B3C84DC4(*v0);
}

BOOL sub_1B3C858B4(uint64_t a1, uint64_t a2)
{
  return sub_1B3C84DE0(*(void **)v2, a2, *(void *)(v2 + 16));
}

uint64_t sub_1B3C858C0()
{
  return *(void *)(v0 + 16);
}

unint64_t sub_1B3C858C8()
{
  return (unint64_t)sub_1B3C84F94() & 1;
}

uint64_t sub_1B3C858E4()
{
  sub_1B3C8500C();
  return v0 & 1;
}

uint64_t sub_1B3C85900()
{
  return sub_1B3C8504C();
}

void sub_1B3C85918()
{
}

void sub_1B3C85930()
{
}

void sub_1B3C85948()
{
}

int64_t sub_1B3C85974()
{
  return sub_1B3C85158();
}

int64_t sub_1B3C8598C()
{
  return sub_1B3C851A4();
}

int64_t sub_1B3C859A4()
{
  return sub_1B3C851F0();
}

uint64_t sub_1B3C859BC()
{
  return sub_1B3D72CE8();
}

void sub_1B3C859D4()
{
}

uint64_t sub_1B3C85A00()
{
  return sub_1B3C85278();
}

uint64_t sub_1B3C85A18()
{
  return sub_1B3C852E0();
}

uint64_t sub_1B3C85A30()
{
  return sub_1B3C85348();
}

uint64_t sub_1B3C85A48()
{
  return sub_1B3D72CF8();
}

void sub_1B3C85A60()
{
}

uint64_t sub_1B3C85A78()
{
  return sub_1B3D72C78();
}

uint64_t sub_1B3C85A90()
{
  return sub_1B3D72C68();
}

uint64_t sub_1B3C85AA8()
{
  uint64_t result = sub_1B3D72C88();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C85ACC(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85CF0(a1, a2, MEMORY[0x1E4FBBE18]);
}

uint64_t sub_1B3C85AF8()
{
  uint64_t result = sub_1B3D72C98();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C85B1C(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85C40(a1, a2, MEMORY[0x1E4FBBE20]);
}

uint64_t sub_1B3C85B48(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85C98(a1, a2, MEMORY[0x1E4FBBE28]);
}

uint64_t sub_1B3C85B74(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85CF0(a1, a2, MEMORY[0x1E4FBBE30]);
}

uint64_t sub_1B3C85BA0()
{
  uint64_t result = sub_1B3D72CC8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C85BC4(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85D68(a1, a2, MEMORY[0x1E4FBBE40]);
}

uint64_t sub_1B3C85BF0()
{
  uint64_t result = sub_1B3D72CA8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C85C14(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85C40(a1, a2, MEMORY[0x1E4FBBE38]);
}

uint64_t sub_1B3C85C40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  __int16 v3 = a3();
  return OUTLINED_FUNCTION_31(v3 & 0x1FF);
}

uint64_t sub_1B3C85C6C(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85C98(a1, a2, MEMORY[0x1E4FBBE48]);
}

uint64_t sub_1B3C85C98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = a3();
  return OUTLINED_FUNCTION_31(v3 & 0x1FFFF);
}

uint64_t sub_1B3C85CC4(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85CF0(a1, a2, MEMORY[0x1E4FBBE50]);
}

uint64_t sub_1B3C85CF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return OUTLINED_FUNCTION_24_1(v3);
}

uint64_t sub_1B3C85D18()
{
  uint64_t result = sub_1B3D72CD8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_1B3C85D3C(uint64_t a1, uint64_t a2)
{
  return sub_1B3C85D68(a1, a2, MEMORY[0x1E4FBBE58]);
}

uint64_t sub_1B3C85D68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_1B3C85D94()
{
  return sub_1B3D72CB8();
}

uint64_t sub_1B3C85DC0()
{
  return sub_1B3C855EC();
}

uint64_t sub_1B3C85DD8@<X0>(void *a1@<X8>)
{
  return sub_1B3C857C0(a1);
}

unint64_t sub_1B3C85DF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B3C85830(a1);
}

BOOL sub_1B3C85E08()
{
  uint64_t v0 = MEMORY[0x1B3EC6600]();
  return v0 == sub_1B3D72088();
}

uint64_t sub_1B3C85E38(uint64_t result)
{
  if (!result)
  {
    uint64_t v1 = sub_1B3D72988();
    swift_allocError();
    uint64_t v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    *uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE23D8);
    sub_1B3D72278();
    sub_1B3D72938();
    sub_1B3D723F8();
    sub_1B3D723F8();
    sub_1B3D723F8();
    sub_1B3D72978();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v1 - 8) + 104))(v3, *MEMORY[0x1E4FBBA70], v1);
    return swift_willThrow();
  }
  return result;
}

BOOL sub_1B3C85FB0(uint64_t a1)
{
  uint64_t v2 = sub_1B3D72068();
  swift_unknownObjectRelease();
  return v2 == a1;
}

uint64_t sub_1B3C85FF4(void *a1)
{
  string_ptr = xpc_string_get_string_ptr(a1);
  uint64_t result = sub_1B3C85E38((uint64_t)string_ptr);
  if (!v1) {
    return sub_1B3D72408();
  }
  return result;
}

double sub_1B3C86048(void *a1)
{
  return xpc_double_get_value(a1);
}

float sub_1B3C86070(void *a1)
{
  return xpc_double_get_value(a1);
}

int64_t sub_1B3C8609C(void *a1)
{
  return xpc_int64_get_value(a1);
}

int64_t sub_1B3C860C4(void *a1)
{
  int64_t result = xpc_int64_get_value(a1);
  if (result < -128)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result > 127) {
LABEL_5:
  }
    __break(1u);
  return result;
}

int64_t sub_1B3C86104(void *a1)
{
  int64_t result = xpc_int64_get_value(a1);
  if (result < -32768)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result >= 0x8000) {
LABEL_5:
  }
    __break(1u);
  return result;
}

int64_t sub_1B3C86144(void *a1)
{
  int64_t result = xpc_int64_get_value(a1);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result > 0x7FFFFFFF) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1B3C8618C(void *a1)
{
  return xpc_uint64_get_value(a1);
}

uint64_t sub_1B3C861B4(void *a1)
{
  uint64_t result = xpc_uint64_get_value(a1);
  if (result >= 0x100)
  {
    OUTLINED_FUNCTION_1_3();
    uint64_t result = OUTLINED_FUNCTION_2_3();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B3C86210(void *a1)
{
  uint64_t result = xpc_uint64_get_value(a1);
  if (result >= 0x10000)
  {
    OUTLINED_FUNCTION_1_3();
    uint64_t result = OUTLINED_FUNCTION_2_3();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B3C8626C(void *a1)
{
  uint64_t result = xpc_uint64_get_value(a1);
  if (HIDWORD(result))
  {
    OUTLINED_FUNCTION_1_3();
    uint64_t result = OUTLINED_FUNCTION_2_3();
    __break(1u);
  }
  return result;
}

void sub_1B3C862C8()
{
  OUTLINED_FUNCTION_21();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v23 = v4;
  uint64_t v5 = sub_1B3D72848();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)v22 - v9;
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_5_1();
  uint64_t v16 = (char *)(v15 - v14);
  sub_1B3C84218(v1, v3, v1, (uint64_t)v10);
  OUTLINED_FUNCTION_39((uint64_t)v10);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    sub_1B3D72A18();
    swift_unknownObjectRetain();
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t v19 = sub_1B3D72248();
    v22[4] = &unk_1F0C78AB8;
    unint64_t v20 = sub_1B3C875CC();
    v22[1] = v3;
    v22[2] = v18;
    void v22[5] = v20;
    v22[3] = v19;
    sub_1B3D72648();
  }
  else
  {
    char v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v21(v16, v10, v1);
    v21(v23, v16, v1);
  }
  OUTLINED_FUNCTION_26();
}

BOOL sub_1B3C86490()
{
  return sub_1B3C85E08();
}

BOOL sub_1B3C86498()
{
  return sub_1B3C85FB0(*v0);
}

uint64_t sub_1B3C864B8()
{
  return sub_1B3C85FF4(*v0);
}

double sub_1B3C864D4()
{
  return sub_1B3C86048(*v0);
}

float sub_1B3C864F0()
{
  return sub_1B3C86070(*v0);
}

int64_t sub_1B3C8650C()
{
  return sub_1B3C8609C(*v0);
}

int64_t sub_1B3C86528()
{
  return sub_1B3C860C4(*v0);
}

int64_t sub_1B3C86544()
{
  return sub_1B3C86104(*v0);
}

int64_t sub_1B3C86560()
{
  return sub_1B3C86144(*v0);
}

uint64_t sub_1B3C8657C()
{
  return sub_1B3D72E78();
}

uint64_t sub_1B3C86594()
{
  return sub_1B3C8618C(*v0);
}

uint64_t sub_1B3C865B0()
{
  return sub_1B3C861B4(*v0);
}

uint64_t sub_1B3C865CC()
{
  return sub_1B3C86210(*v0);
}

uint64_t sub_1B3C865E8()
{
  return sub_1B3C8626C(*v0);
}

uint64_t sub_1B3C86604()
{
  return sub_1B3D72E88();
}

void sub_1B3C8661C()
{
}

unint64_t sub_1B3C86640()
{
  unint64_t result = qword_1E9CE3AC0;
  if (!qword_1E9CE3AC0)
  {
    type metadata accessor for XPCEncoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3AC0);
  }
  return result;
}

uint64_t sub_1B3C8668C(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_32();
  v3();
  return a1;
}

uint64_t sub_1B3C866E0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  unint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v5 > *(void *)(v3 + 24) >> 1)
  {
    if (v4 <= v5) {
      int64_t v7 = v4 + v2;
    }
    else {
      int64_t v7 = v4;
    }
    unint64_t result = (uint64_t)sub_1B3C86AE4((char *)result, v7, 1, v3);
    uint64_t v3 = result;
  }
  if (!*(void *)(v6 + 16))
  {
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t result = sub_1B3C93814(v6 + 32, v2, v3 + 40 * v8 + 32);
  if (!v2)
  {
LABEL_14:
    unint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v9 = *(void *)(v3 + 16);
  BOOL v10 = __OFADD__(v9, v2);
  uint64_t v11 = v9 + v2;
  if (!v10)
  {
    *(void *)(v3 + 16) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_1B3C867C0()
{
  return sub_1B3C86884(&qword_1E9CE2920, (void (*)(void, uint64_t, void *, uint64_t))sub_1B3C86DD8, (void (*)(uint64_t, uint64_t, void *))sub_1B3C93320);
}

uint64_t sub_1B3C867F4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

void *sub_1B3C86850()
{
  return sub_1B3C86884((uint64_t *)&unk_1E9CE1EB8, (void (*)(void, uint64_t, void *, uint64_t))sub_1B3C870E8, (void (*)(uint64_t, uint64_t, void *))sub_1B3C93320);
}

void *sub_1B3C86884(uint64_t *a1, void (*a2)(void, uint64_t, void *, uint64_t), void (*a3)(uint64_t, uint64_t, void *))
{
  uint64_t v7 = *v3;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v7;
  if (!result)
  {
    uint64_t result = sub_1B3C86BDC(result, *(void *)(v7 + 16) + 1, 1, v7, a1, a2, a3);
    *uint64_t v3 = (uint64_t)result;
  }
  return result;
}

void *sub_1B3C868F8(void *a1)
{
  return sub_1B3C869A8(a1, &qword_1E9CE2920, (void (*)(void, uint64_t, void *, uint64_t))sub_1B3C86DD8, (void (*)(uint64_t, uint64_t, void *))sub_1B3C93320);
}

uint64_t sub_1B3C8692C(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

void *sub_1B3C86974(void *a1)
{
  return sub_1B3C869A8(a1, (uint64_t *)&unk_1E9CE1EB8, (void (*)(void, uint64_t, void *, uint64_t))sub_1B3C870E8, (void (*)(uint64_t, uint64_t, void *))sub_1B3C93320);
}

void *sub_1B3C869A8(void *result, uint64_t *a2, void (*a3)(void, uint64_t, void *, uint64_t), void (*a4)(uint64_t, uint64_t, void *))
{
  unint64_t v5 = *(void *)(*v4 + 24);
  if ((uint64_t)result + 1 > (uint64_t)(v5 >> 1))
  {
    uint64_t result = sub_1B3C86BDC((void *)(v5 > 1), (int64_t)result + 1, 1, *v4, a2, a3, a4);
    *int64_t v4 = (uint64_t)result;
  }
  return result;
}

char *sub_1B3C869F4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2860);
    BOOL v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    BOOL v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_1B3C93414((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B3C86ED0(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

char *sub_1B3C86AE4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE28F8);
    BOOL v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    BOOL v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_1B3C93470((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B3C86FC8(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

void *sub_1B3C86BDC(void *result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void, uint64_t, void *, uint64_t), void (*a7)(uint64_t, uint64_t, void *))
{
  char v10 = (char)result;
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v12 = a2;
      }
    }
  }
  else
  {
    int64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (v14)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v15 = (void *)swift_allocObject();
    size_t v16 = _swift_stdlib_malloc_size(v15);
    v15[2] = v13;
    v15[3] = 2 * ((uint64_t)(v16 - 32) / 16);
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  char v17 = v15 + 4;
  if (v10)
  {
    a7(a4 + 32, v13, v17);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    a6(0, v13, v17, a4);
  }
  return v15;
}

char *sub_1B3C86CE0(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1EB0);
    char v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    char v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  if (v5)
  {
    sub_1B3C93604((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1B3C87200(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_1B3C86DD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B3D72AA8();
  __break(1u);
  return result;
}

uint64_t sub_1B3C86ED0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B3D72AA8();
  __break(1u);
  return result;
}

uint64_t sub_1B3C86FC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2908);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B3D72AA8();
  __break(1u);
  return result;
}

uint64_t sub_1B3C870E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4FA4E0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B3D72AA8();
  __break(1u);
  return result;
}

uint64_t sub_1B3C87200(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_1B3D72AA8();
  __break(1u);
  return result;
}

xpc_object_t sub_1B3C87300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8 = sub_1B3D71C38();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1B3D71C58();
    if (__OFSUB__(a1, v10))
    {
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      __break(1u);
      JUMPOUT(0x1B3C873E4);
    }
    size_t v11 = (const void *)(v9 + a1 - v10);
  }
  else
  {
    size_t v11 = 0;
  }
  sub_1B3D71C48();
  size_t v12 = 0;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a4), a4)) {
        goto LABEL_12;
      }
      size_t v12 = HIDWORD(a4) - (int)a4;
LABEL_10:
      xpc_object_t v15 = xpc_data_create(v11, v12);
      sub_1B3C7532C(a4, a5);
      return v15;
    case 2uLL:
      uint64_t v14 = *(void *)(a4 + 16);
      uint64_t v13 = *(void *)(a4 + 24);
      size_t v12 = v13 - v14;
      if (!__OFSUB__(v13, v14)) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_10;
    default:
      size_t v12 = BYTE6(a5);
      goto LABEL_10;
  }
}

xpc_object_t sub_1B3C873F4(const void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  size_t v7 = 0;
  switch(a5 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a4), a4))
      {
        __break(1u);
LABEL_8:
        __break(1u);
        JUMPOUT(0x1B3C87498);
      }
      size_t v7 = HIDWORD(a4) - (int)a4;
LABEL_6:
      xpc_object_t v10 = xpc_data_create(a1, v7);
      sub_1B3C7532C(a4, a5);
      return v10;
    case 2uLL:
      uint64_t v9 = *(void *)(a4 + 16);
      uint64_t v8 = *(void *)(a4 + 24);
      size_t v7 = v8 - v9;
      if (!__OFSUB__(v8, v9)) {
        goto LABEL_6;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_6;
    default:
      size_t v7 = BYTE6(a5);
      goto LABEL_6;
  }
}

xpc_object_t sub_1B3C874A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = a1;
  __int16 v11 = a2;
  char v12 = BYTE2(a2);
  char v13 = BYTE3(a2);
  char v14 = BYTE4(a2);
  char v15 = BYTE5(a2);
  sub_1B3C7D8EC(a4, a5);
  xpc_object_t v8 = sub_1B3C873F4(&v10, (uint64_t)&v16, a3, a4, a5);
  sub_1B3C7532C(a4, a5);
  return v8;
}

unint64_t sub_1B3C875CC()
{
  unint64_t result = qword_1EB4FA3F0[0];
  if (!qword_1EB4FA3F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB4FA3F0);
  }
  return result;
}

unint64_t sub_1B3C87618()
{
  unint64_t result = qword_1E9CE2830;
  if (!qword_1E9CE2830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2830);
  }
  return result;
}

unint64_t sub_1B3C87664()
{
  unint64_t result = qword_1E9CE2840;
  if (!qword_1E9CE2840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2840);
  }
  return result;
}

uint64_t type metadata accessor for XPCKeyedDecoding()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B3C876C8(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1B3C876E0()
{
  unint64_t result = qword_1E9CE2850;
  if (!qword_1E9CE2850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2850);
  }
  return result;
}

uint64_t sub_1B3C8772C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1B3C87744()
{
  unint64_t result = qword_1E9CE2858;
  if (!qword_1E9CE2858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2858);
  }
  return result;
}

uint64_t type metadata accessor for XPCKeyedEncoding()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_1B3C877AC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1E9CE2868);
  uint64_t v2 = sub_1B3D72A78();
  unint64_t v3 = (void *)v2;
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v32 = a1;
  uint64_t v33 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v34 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v35 = v2 + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    char v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    unint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    int64_t v36 = v4;
    switch(v17 >> 62)
    {
      case 1uLL:
        sub_1B3D72278();
        swift_retain();
        uint64_t v19 = sub_1B3C7FA84();
        swift_release();
        uint64_t v20 = 0;
        char v21 = 1;
        break;
      case 2uLL:
        uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v19 = *(void *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v20 = *(void *)(v22 + 24);
        char v21 = *(unsigned char *)(v22 + 32);
        sub_1B3D72278();
        sub_1B3C80180(v19, v20, v21);
        break;
      case 3uLL:
        sub_1B3D72278();
        uint64_t v23 = swift_retain();
        uint64_t v19 = sub_1B3C7FB48(v23);
        uint64_t v20 = v24;
        char v21 = v25;
        a1 = v32;
        swift_release();
        break;
      default:
        swift_retain();
        uint64_t v18 = sub_1B3D72278();
        uint64_t v19 = sub_1B3C7F6BC(v18);
        swift_release();
        uint64_t v20 = 0;
        char v21 = 0;
        break;
    }
    *(void *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v26 = (void *)(v3[6] + 16 * i);
    *uint64_t v26 = v16;
    v26[1] = v15;
    uint64_t v27 = v3[7] + 24 * i;
    *(void *)uint64_t v27 = v19;
    *(void *)(v27 + 8) = v20;
    *(unsigned char *)(v27 + 16) = v21;
    uint64_t v28 = v3[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v30;
    int64_t v4 = v36;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_29;
    }
    if (v11 >= v34) {
      break;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v34) {
        return v3;
      }
      unint64_t v12 = *(void *)(v33 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v34) {
          return v3;
        }
        unint64_t v12 = *(void *)(v33 + 8 * v4);
        if (!v12)
        {
          int64_t v13 = v11 + 3;
          if (v13 >= v34) {
            return v3;
          }
          unint64_t v12 = *(void *)(v33 + 8 * v13);
          if (v12)
          {
            int64_t v4 = v13;
            goto LABEL_18;
          }
          while (1)
          {
            int64_t v4 = v13 + 1;
            if (__OFADD__(v13, 1)) {
              break;
            }
            if (v4 >= v34) {
              return v3;
            }
            unint64_t v12 = *(void *)(v33 + 8 * v4);
            ++v13;
            if (v12) {
              goto LABEL_18;
            }
          }
LABEL_30:
          __break(1u);
          JUMPOUT(0x1B3C87A90);
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v12 - 1) & v12;
  }
  return v3;
}

uint64_t sub_1B3C87AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1B3C87AA8()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C87AE4(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_16_0(a1, a2);
  swift_retain();
  sub_1B3D72278();
  return v2;
}

uint64_t sub_1B3C87B14(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  swift_retain();
  swift_release();
  *(void *)(v3 + 8) = *(void *)(v2 + 8);
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return v3;
}

void type metadata accessor for XPCUnkeyedEncoding()
{
}

uint64_t sub_1B3C87B70()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C87BAC(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_16_0(a1, a2);
  swift_unknownObjectRetain();
  sub_1B3D72278();
  return v2;
}

uint64_t sub_1B3C87BDC(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_27(a1, a2);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v3 + 8) = *(void *)(v2 + 8);
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1B3C87C2C(void *a1, _OWORD *a2, uint64_t a3, void (*a4)(void))
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19VoiceShortcutClient17XPCMessageHandlerVwet_0(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void *sub_1B3C87CB0(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    void *result = a2 ^ 0x80000000;
    result[1] = 0;
    if (a3 < 0) {
      *((unsigned char *)result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return OUTLINED_FUNCTION_35(result, a2);
    }
    *((unsigned char *)result + 16) = 0;
    if (a2) {
      return OUTLINED_FUNCTION_35(result, a2);
    }
  }
  return result;
}

uint64_t sub_1B3C87CE8(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_16_0(a1, a2);
  *(void *)(v2 + 16) = *(void *)(v3 + 16);
  swift_unknownObjectRetain();
  sub_1B3D72278();
  return v2;
}

void *sub_1B3C87D20(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_1B3C87D88(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t sub_1B3C87DD0(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void *sub_1B3C87E10(void *result, int a2, int a3)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    void *result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *((unsigned char *)result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
      return OUTLINED_FUNCTION_35(result, a2);
    }
    *((unsigned char *)result + 24) = 0;
    if (a2) {
      return OUTLINED_FUNCTION_35(result, a2);
    }
  }
  return result;
}

void type metadata accessor for XPCUnkeyedDecoding()
{
}

uint64_t sub_1B3C87E54(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

unint64_t sub_1B3C87E5C()
{
  unint64_t result = qword_1E9CE2900;
  if (!qword_1E9CE2900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2900);
  }
  return result;
}

uint64_t sub_1B3C87EA8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1B3C87EE0()
{
  return sub_1B3C833D8();
}

unint64_t sub_1B3C87EFC()
{
  unint64_t result = qword_1E9CE2918;
  if (!qword_1E9CE2918)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE20E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2918);
  }
  return result;
}

uint64_t sub_1B3C87F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6)
{
  uint64_t v16 = &type metadata for XPCKey;
  unint64_t v17 = sub_1B3C87E5C();
  uint64_t v12 = swift_allocObject();
  *(void *)&long long v15 = v12;
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  *(void *)(v12 + 32) = a4;
  *(unsigned char *)(v12 + 40) = a5 & 1;
  uint64_t v13 = *a6;
  *(void *)(v13 + 16) = a1 + 1;
  return sub_1B3C87FF8(&v15, v13 + 40 * a1 + 32);
}

uint64_t sub_1B3C87FF8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1B3C88010(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1B3C87FF8(&v12, v10 + 40 * a1 + 32);
}

uint64_t initializeWithCopy for XPCKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  sub_1B3D72278();
  return a1;
}

uint64_t assignWithCopy for XPCKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for XPCKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCKey(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCKey()
{
  return &type metadata for XPCKey;
}

unint64_t sub_1B3C8823C()
{
  unint64_t result = qword_1E9CE2928;
  if (!qword_1E9CE2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2928);
  }
  return result;
}

unint64_t sub_1B3C8828C()
{
  unint64_t result = qword_1E9CE2930;
  if (!qword_1E9CE2930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2930);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return sub_1B3D72A48();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return sub_1B3D723F8();
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  unint64_t v2 = *(void **)v0;
  size_t v3 = *(void *)(v0 + 16);
  return xpc_array_get_uint64(v2, v3);
}

uint64_t OUTLINED_FUNCTION_23_1(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_24_1(unint64_t a1)
{
  return a1 | ((HIDWORD(a1) & 1) << 32);
}

uint64_t OUTLINED_FUNCTION_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27(uint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a2;
  *a1 = *a2;
  return result;
}

void OUTLINED_FUNCTION_29(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t OUTLINED_FUNCTION_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31@<X0>(unsigned int a1@<W8>)
{
  return a1;
}

__n128 *OUTLINED_FUNCTION_34(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return a1 + 2;
}

uint64_t OUTLINED_FUNCTION_36(double a1)
{
  return sub_1B3C7F748(*(uint64_t *)&a1, 0, 6);
}

uint64_t OUTLINED_FUNCTION_37()
{
  return swift_allocObject();
}

double OUTLINED_FUNCTION_38()
{
  uint64_t v2 = *(void **)v0;
  size_t v3 = *(void *)(v0 + 16);
  return xpc_array_get_double(v2, v3);
}

uint64_t OUTLINED_FUNCTION_39(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_40()
{
  return 0x7265707573;
}

ValueMetadata *type metadata accessor for XPCArray()
{
  return &type metadata for XPCArray;
}

uint64_t VCVoiceShortcutClient.scheduleTrigger(_:with:)()
{
  OUTLINED_FUNCTION_3();
  v1[4] = v2;
  v1[5] = v0;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2948);
  v1[6] = v5;
  OUTLINED_FUNCTION_7_3(v5);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for VoiceShortcutClientRequest(0);
  v1[9] = v6;
  OUTLINED_FUNCTION_7_3(v6);
  v1[10] = OUTLINED_FUNCTION_2();
  uint64_t v7 = sub_1B3D72198();
  v1[11] = v7;
  OUTLINED_FUNCTION_0_1(v7);
  v1[12] = v8;
  v1[13] = OUTLINED_FUNCTION_2();
  uint64_t v9 = type metadata accessor for TriggerType(0);
  OUTLINED_FUNCTION_7_3(v9);
  v1[14] = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1B3C8861C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[10];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  uint64_t v6 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
  sub_1B3C89A80(v1, v2, type metadata accessor for TriggerType);
  sub_1B3CD1E58(v6);
  type metadata accessor for VoiceShortcutClientRequest.Automations(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[15] = v7;
  void *v7 = v0;
  v7[1] = sub_1B3C88774;
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[10];
  return sub_1B3C89B00(v8, v9);
}

uint64_t sub_1B3C88774()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v4 + 80);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_11();
  void *v7 = v6;
  *(void *)(v8 + 128) = v0;
  swift_task_dealloc();
  sub_1B3C88C2C(v5, type metadata accessor for VoiceShortcutClientRequest);
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B3C888A8()
{
  uint64_t v1 = v0[16];
  sub_1B3C89818(&qword_1E9CE2958, &qword_1E9CE2948);
  sub_1B3D72188();
  if (v1)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
LABEL_5:
    sub_1B3C88C2C(v0[14], type metadata accessor for TriggerType);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_9_1();
    goto LABEL_7;
  }
  sub_1B3C88C8C(v0[8], v0[7]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = v0[12];
    uint64_t v2 = v0[13];
    uint64_t v4 = v0[11];
    uint64_t v5 = (long long *)v0[7];
    uint64_t v6 = v0[8];
    long long v22 = v5[1];
    long long v23 = *v5;
    long long v21 = v5[2];
    uint64_t v7 = *((void *)v5 + 6);
    sub_1B3C88CF4();
    uint64_t v8 = OUTLINED_FUNCTION_4();
    *(_OWORD *)uint64_t v9 = v23;
    *(_OWORD *)(v9 + 16) = v22;
    *(_OWORD *)(v9 + 32) = v21;
    *(void *)(v9 + 48) = v7;
    sub_1B3C88D40();
    OUTLINED_FUNCTION_4();
    uint64_t *v10 = v8;
    swift_willThrow();
    sub_1B3C88D8C(v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    goto LABEL_5;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[14];
  uint64_t v14 = v0[11];
  uint64_t v15 = v0[12];
  uint64_t v17 = v0[7];
  uint64_t v16 = v0[8];
  uint64_t v18 = (uint64_t *)v0[2];
  v18[3] = type metadata accessor for ScheduledTrigger(0);
  v18[4] = sub_1B3C88DEC(&qword_1E9CE2970);
  v18[5] = sub_1B3C88DEC(&qword_1E9CE2978);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  sub_1B3C88E30(v17, (uint64_t)boxed_opaque_existential_1);
  sub_1B3C88D8C(v16);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  sub_1B3C88C2C(v13, type metadata accessor for TriggerType);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v11();
}

uint64_t sub_1B3C88B74()
{
  sub_1B3C88C2C(*(void *)(v0 + 112), type metadata accessor for TriggerType);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_1();
  return v1();
}

uint64_t sub_1B3C88C2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1B3C88C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B3C88CF4()
{
  unint64_t result = qword_1E9CE2960;
  if (!qword_1E9CE2960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2960);
  }
  return result;
}

unint64_t sub_1B3C88D40()
{
  unint64_t result = qword_1E9CE2968;
  if (!qword_1E9CE2968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2968);
  }
  return result;
}

uint64_t sub_1B3C88D8C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2948);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B3C88DEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ScheduledTrigger(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B3C88E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScheduledTrigger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t VCVoiceShortcutClient.deleteScheduledTrigger(with:)()
{
  OUTLINED_FUNCTION_3();
  v1[9] = v2;
  v1[10] = v0;
  uint64_t v3 = type metadata accessor for VoiceShortcutClientRequest(0);
  v1[11] = v3;
  OUTLINED_FUNCTION_7_3(v3);
  v1[12] = OUTLINED_FUNCTION_2();
  uint64_t v4 = sub_1B3D72198();
  v1[13] = v4;
  OUTLINED_FUNCTION_0_1(v4);
  v1[14] = v5;
  v1[15] = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1B3C88F44()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[9];
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  *uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v1[1] = v5;
  type metadata accessor for VoiceShortcutClientRequest.Automations(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[16] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1B3C89044;
  uint64_t v7 = OUTLINED_FUNCTION_8_4();
  return sub_1B3C89B00(v7, v8);
}

uint64_t sub_1B3C89044()
{
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_11();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  sub_1B3C88C2C(*(void *)(v1 + 96), type metadata accessor for VoiceShortcutClientRequest);
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B3C89160()
{
  uint64_t v1 = v0[17];
  sub_1B3C89348();
  sub_1B3D72188();
  if (v1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_4_2();
    v3(v2);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    goto LABEL_6;
  }
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[14];
  if (v4)
  {
    uint64_t v6 = v0[2];
    uint64_t v7 = v0[3];
    uint64_t v8 = v0[5];
    uint64_t v9 = v0[6];
    uint64_t v17 = v0[13];
    uint64_t v18 = v0[15];
    uint64_t v10 = v0[7];
    uint64_t v11 = v0[8];
    sub_1B3C88CF4();
    uint64_t v12 = OUTLINED_FUNCTION_4();
    *uint64_t v13 = v6;
    v13[1] = v7;
    v13[2] = v4;
    v13[3] = v8;
    v13[4] = v9;
    v13[5] = v10;
    v13[6] = v11;
    sub_1B3C88D40();
    OUTLINED_FUNCTION_4();
    uint64_t *v14 = v12;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v17);
    goto LABEL_5;
  }
  (*(void (**)(void, void))(v5 + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
LABEL_6:
  return v15();
}

uint64_t sub_1B3C892E0()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_1();
  return v0();
}

unint64_t sub_1B3C89348()
{
  unint64_t result = qword_1E9CE2988;
  if (!qword_1E9CE2988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2988);
  }
  return result;
}

uint64_t VCVoiceShortcutClient.fetchAllScheduledTriggers()()
{
  OUTLINED_FUNCTION_3();
  v1[10] = v0;
  uint64_t v2 = type metadata accessor for VoiceShortcutClientRequest(0);
  v1[11] = v2;
  OUTLINED_FUNCTION_7_3(v2);
  v1[12] = OUTLINED_FUNCTION_2();
  uint64_t v3 = sub_1B3D72198();
  v1[13] = v3;
  OUTLINED_FUNCTION_0_1(v3);
  v1[14] = v4;
  v1[15] = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B3C89444()
{
  OUTLINED_FUNCTION_3();
  type metadata accessor for VoiceShortcutClientRequest.Automations(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B3C894FC;
  uint64_t v2 = OUTLINED_FUNCTION_8_4();
  return sub_1B3C89B00(v2, v3);
}

uint64_t sub_1B3C894FC()
{
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_11();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v2;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  sub_1B3C88C2C(*(void *)(v1 + 96), type metadata accessor for VoiceShortcutClientRequest);
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B3C89618()
{
  uint64_t v1 = *(void *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2998);
  sub_1B3C89818(&qword_1E9CE29A0, &qword_1E9CE2998);
  sub_1B3D72188();
  if (v1)
  {
    uint64_t v2 = OUTLINED_FUNCTION_4_2();
    v3(v2);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 64);
  if (*(unsigned char *)(v0 + 72))
  {
    sub_1B3C88CF4();
    uint64_t v20 = OUTLINED_FUNCTION_4();
    uint64_t *v11 = v5;
    v11[1] = v4;
    v11[2] = v7;
    v11[3] = v6;
    v11[4] = v9;
    v11[5] = v8;
    v11[6] = v10;
    sub_1B3C88D40();
    OUTLINED_FUNCTION_4();
    uint64_t *v12 = v20;
    swift_willThrow();
    uint64_t v13 = OUTLINED_FUNCTION_10_1();
    v14(v13);
    goto LABEL_5;
  }
  uint64_t v21 = sub_1B3C89868(v5);
  sub_1B3C89A34(v5, v4, v7, v6, v9, v8, v10, 0);
  uint64_t v17 = OUTLINED_FUNCTION_10_1();
  v18(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v19(v21);
}

uint64_t sub_1B3C89818(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B3C89868(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScheduledTrigger(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1B3C93B24(0, v6, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1B3C89A80(v8, (uint64_t)v5, type metadata accessor for ScheduledTrigger);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29A8);
      swift_dynamicCast();
      uint64_t v7 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B3C93B24(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v15;
      }
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1B3C93B24((char *)(v10 > 1), v11 + 1, 1);
        uint64_t v7 = v15;
      }
      *(void *)(v7 + 16) = v11 + 1;
      sub_1B3C89AE8(v14, (_OWORD *)(v7 + 48 * v11 + 32));
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1B3C89A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = vars8;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3C89A80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_1B3C89AE8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1B3C89B00(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  v2[3] = a2;
  v2[4] = ObjectType;
  v2[2] = a1;
  return MEMORY[0x1F4188298](sub_1B3C89B80, 0, 0);
}

uint64_t sub_1B3C89B80()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  long long v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = sub_1B3D72198();
  *long long v2 = v0;
  v2[1] = sub_1B3C89C74;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188160](v4, 0, 0, 0xD00000000000001FLL, 0x80000001B3D897E0, sub_1B3C8A57C, v1, v3);
}

uint64_t sub_1B3C89C74()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1B3C89DB0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1B3C89DB0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t static VCVoiceShortcutClient.daemonMachService.getter()
{
  return 0xD00000000000001ALL;
}

void *_s24VoiceShortcutClientErrorOwCP(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void _s24VoiceShortcutClientErrorOwxx(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **_s24VoiceShortcutClientErrorOwca(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF) {
      id v7 = v4;
    }
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    id v5 = v4;
    uint64_t v6 = *a1;
    *a1 = v4;
  }
  return a1;
}

void **_s24VoiceShortcutClientErrorOwta(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s24VoiceShortcutClientErrorOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s24VoiceShortcutClientErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1B3C8A02C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1B3C8A044(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  void *result = v2;
  return result;
}

ValueMetadata *_s24VoiceShortcutClientErrorOMa()
{
  return &_s24VoiceShortcutClientErrorON;
}

uint64_t sub_1B3C8A078()
{
  uint64_t v1 = sub_1B3D72138();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1B3D72168();
  sub_1B3D72128();
  uint64_t result = sub_1B3D72118();
  if (v0) {
    return v3;
  }
  return result;
}

uint64_t sub_1B3C8A138(id a1)
{
  if (!a1) {
    return 0xD000000000000024;
  }
  if (a1 == (id)1) {
    return 0x206E776F6E6B6E55;
  }
  id v3 = a1;
  sub_1B3D72938();
  sub_1B3D723F8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72A08();
  sub_1B3C8A33C(a1);
  return 0;
}

uint64_t sub_1B3C8A234(uint64_t a1)
{
  uint64_t v1 = 200;
  if (a1 == 1) {
    uint64_t v1 = 10000;
  }
  if (a1) {
    return v1;
  }
  else {
    return 100;
  }
}

uint64_t sub_1B3C8A254(uint64_t a1)
{
  unint64_t v2 = sub_1B3C8A2F0();
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1B3C8A290(uint64_t a1)
{
  unint64_t v2 = sub_1B3C8A2F0();
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1B3C8A2CC()
{
  return sub_1B3C8A138(*v0);
}

uint64_t sub_1B3C8A2E4()
{
  return sub_1B3C8A234(*v0);
}

unint64_t sub_1B3C8A2F0()
{
  unint64_t result = qword_1E9CE29B0;
  if (!qword_1E9CE29B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1E9CE29B0);
  }
  return result;
}

void sub_1B3C8A33C(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

uint64_t sub_1B3C8A34C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29C0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  if (sub_1B3C8A078())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v9 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    type metadata accessor for VoiceShortcutClientRequest(0);
    sub_1B3C8A9FC(&qword_1E9CE29C8, (void (*)(uint64_t))type metadata accessor for VoiceShortcutClientRequest);
    sub_1B3D72148();
    swift_release();
    sub_1B3D72158();
    return swift_release();
  }
  else
  {
    sub_1B3C88D40();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = 0;
    v10[0] = v5;
    return sub_1B3D724E8();
  }
}

uint64_t sub_1B3C8A57C(uint64_t a1)
{
  return sub_1B3C8A34C(a1);
}

uint64_t sub_1B3C8A584(uint64_t a1, uint64_t a2)
{
  v20[0] = a2;
  uint64_t v3 = sub_1B3D72178();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B3D72198();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v20 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29D0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B3C8A994(a1, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v16, v3);
    sub_1B3C8A9FC(&qword_1E9CE29D8, MEMORY[0x1E4FBCEF0]);
    uint64_t v17 = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v18, v6, v3);
    v20[1] = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29C0);
    sub_1B3D724E8();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v16, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29C0);
    sub_1B3D724F8();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_1B3C8A88C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29C0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1B3C8A920(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29C0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1B3C8A584(a1, v4);
}

uint64_t sub_1B3C8A994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B3C8A9FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B3C8AA48(uint64_t a1, uint64_t a2, os_unfair_lock_s *a3)
{
  uint64_t v3 = a3 + 4;
  os_unfair_lock_lock(a3 + 4);
  sub_1B3C8D2E4(v4, &v5);
  os_unfair_lock_unlock(v3);
}

void *sub_1B3C8AAB4()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1C88);
  uint64_t result = (void *)sub_1B3D72248();
  off_1E9CE18C8 = result;
  return result;
}

uint64_t sub_1B3C8AAFC()
{
  uint64_t result = sub_1B3D72248();
  qword_1E9CE1C58 = result;
  return result;
}

uint64_t sub_1B3C8AB3C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4FA6B0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_1EB4FA478 = result;
  return result;
}

uint64_t sub_1B3C8AB74()
{
  uint64_t v0 = sub_1B3D72798();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1B3D72788();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1B3D721F8();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1B3C8D300();
  sub_1B3D721D8();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1B3C8D340();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CB0);
  sub_1B3C8D390();
  sub_1B3D728B8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1B3D727A8();
  qword_1E9CE1958 = result;
  return result;
}

uint64_t sub_1B3C8AD74()
{
  uint64_t v0 = sub_1B3D72058();
  __swift_allocate_value_buffer(v0, qword_1E9CE1C60);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E9CE1C60);
  return sub_1B3D72048();
}

void static XPCEventStream.activate()(uint64_t a1, uint64_t a2)
{
  if (qword_1E9CE1900 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1B3D72058();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E9CE1C60);
  uint64_t v5 = sub_1B3D72038();
  os_log_type_t v6 = sub_1B3D72768();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v15 = v8;
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    sub_1B3C8C9B0(v9, v10, &v15);
    sub_1B3D72868();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1B3C5C000, v5, v6, "Attempting to activate stream: %s.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3EC61A0](v8, -1, -1);
    MEMORY[0x1B3EC61A0](v7, -1, -1);
  }

  if (qword_1EB4FA480 != -1) {
    swift_once();
  }
  unint64_t v11 = (os_unfair_lock_s *)(qword_1EB4FA478 + 16);
  os_unfair_lock_assert_not_owner((const os_unfair_lock *)(qword_1EB4FA478 + 16));
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  os_unfair_lock_lock(v11);
  sub_1B3C78CA0(v14);
  os_unfair_lock_unlock(v11);
}

void sub_1B3C8B048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1E9CE18F8 != -1) {
    swift_once();
  }
  os_log_type_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  uint64_t v7 = v6(a2, a3);
  uint64_t v9 = v8;
  swift_beginAccess();
  uint64_t v10 = a2;
  int v11 = sub_1B3C7EAFC(v7, v9, qword_1E9CE1C58);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v11 == 2)
  {
    v6(v10, a3);
    uint64_t v12 = v6;
    if (qword_1E9CE1968 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1E9CE1958;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v10;
    long long v14[3] = a3;
    v14[4] = a1;
    aBlock[4] = (uint64_t)sub_1B3C8D254;
    aBlock[5] = (uint64_t)v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1B3CC9134;
    aBlock[3] = (uint64_t)&block_descriptor_2;
    uint64_t v15 = _Block_copy(aBlock);
    swift_release();
    uint64_t v16 = sub_1B3D723C8();
    swift_bridgeObjectRelease();
    xpc_set_event_stream_handler((const char *)(v16 + 32), v13, v15);
    swift_release();
    _Block_release(v15);
    uint64_t v17 = v12(v10, a3);
    uint64_t v19 = v18;
    swift_beginAccess();
    sub_1B3CCE8FC(1, v17, v19);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (qword_1E9CE1900 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1B3D72058();
    __swift_project_value_buffer(v20, (uint64_t)qword_1E9CE1C60);
    uint64_t v21 = sub_1B3D72038();
    os_log_type_t v22 = sub_1B3D72768();
    if (os_log_type_enabled(v21, v22))
    {
      long long v23 = v12;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      aBlock[0] = v31;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v25 = v23(v10, a3);
      uint64_t aBlock[7] = sub_1B3C8C9B0(v25, v26, aBlock);
      sub_1B3D72868();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B3C5C000, v21, v22, "Stream: %s has been successfully activated.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3EC61A0](v31, -1, -1);
      MEMORY[0x1B3EC61A0](v24, -1, -1);
    }
  }
  else
  {
    if (qword_1E9CE1900 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_1B3D72058();
    __swift_project_value_buffer(v27, (uint64_t)qword_1E9CE1C60);
    uint64_t v28 = sub_1B3D72038();
    os_log_type_t v29 = sub_1B3D72758();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_1B3C5C000, v28, v29, "Attempted to activate an already active stream.", v30, 2u);
      MEMORY[0x1B3EC61A0](v30, -1, -1);
    }
  }
}

void sub_1B3C8B4DC()
{
  sub_1B3C8B048(v0[4], v0[2], v0[3]);
}

void sub_1B3C8B4FC(void *a1, uint8_t *a2, uint8_t *a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  int v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v53 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = (const char *)sub_1B3D720C8();
  if (xpc_dictionary_get_string(a1, v17))
  {
    unint64_t v58 = v11;
    uint64_t v59 = v3;
    uint64_t v18 = sub_1B3D72408();
    uint64_t v20 = v19;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1B3C7F078();
    uint64_t v56 = v18;
    uint64_t v57 = v8;
    if (qword_1EB4FA480 != -1) {
      swift_once();
    }
    uint64_t v32 = (os_unfair_lock_s *)qword_1EB4FA478;
    os_unfair_lock_assert_not_owner((const os_unfair_lock *)(qword_1EB4FA478 + 16));
    MEMORY[0x1F4188790](v33);
    *(&v53 - 6) = a2;
    *(&v53 - 5) = a3;
    uint64_t v34 = v56;
    *(&v53 - 4) = (uint8_t *)v59;
    *(&v53 - 3) = (uint8_t *)v34;
    *(&v53 - 2) = v20;
    sub_1B3C8AA48((uint64_t)sub_1B3C8D294, (uint64_t)(&v53 - 8), v32);
    uint64_t v59 = v35;
    swift_bridgeObjectRelease();
    if (qword_1E9CE1900 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1B3D72058();
    __swift_project_value_buffer(v36, (uint64_t)qword_1E9CE1C60);
    uint64_t v37 = v57;
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    v38(v14, v16, AssociatedTypeWitness);
    uint64_t v39 = sub_1B3D72038();
    os_log_type_t v40 = sub_1B3D72768();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      v60[0] = v56;
      id v54 = v41;
      os_log_t v55 = v39;
      *(_DWORD *)uint64_t v41 = 136315138;
      uint64_t v53 = v41 + 4;
      v38(v58, v14, AssociatedTypeWitness);
      uint64_t v42 = sub_1B3D723B8();
      uint64_t v61 = sub_1B3C8C9B0(v42, v43, v60);
      sub_1B3D72868();
      swift_bridgeObjectRelease();
      uint64_t v44 = *(void (**)(char *, uint64_t))(v37 + 8);
      v44(v14, AssociatedTypeWitness);
      os_log_t v45 = v55;
      os_log_type_t v46 = v40;
      uint64_t v47 = v54;
      _os_log_impl(&dword_1B3C5C000, v55, v46, "Dispatching XPC event: %s", v54, 0xCu);
      uint64_t v48 = v56;
      swift_arrayDestroy();
      MEMORY[0x1B3EC61A0](v48, -1, -1);
      MEMORY[0x1B3EC61A0](v47, -1, -1);
    }
    else
    {
      uint64_t v44 = *(void (**)(char *, uint64_t))(v37 + 8);
      v44(v14, AssociatedTypeWitness);
    }
    uint64_t v49 = *(void *)(v59 + 16);
    if (v49)
    {
      uint64_t v50 = v59 + 40;
      do
      {
        uint64_t v51 = *(void (**)(uint64_t *))(v50 - 8);
        v60[3] = AssociatedTypeWitness;
        v60[4] = AssociatedConformanceWitness;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v60);
        v38((char *)boxed_opaque_existential_1, v16, AssociatedTypeWitness);
        swift_retain();
        v51(v60);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
        v50 += 16;
        --v49;
      }
      while (v49);
    }
    swift_bridgeObjectRelease();
    v44(v16, AssociatedTypeWitness);
  }
  else
  {
    if (qword_1E9CE1900 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1B3D72058();
    __swift_project_value_buffer(v22, (uint64_t)qword_1E9CE1C60);
    swift_unknownObjectRetain_n();
    long long v23 = sub_1B3D72038();
    os_log_type_t v24 = sub_1B3D72758();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v60[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v27 = swift_unknownObjectRetain();
      uint64_t v28 = MEMORY[0x1B3EC64A0](v27);
      uint64_t v29 = sub_1B3D72408();
      unint64_t v31 = v30;
      MEMORY[0x1B3EC61A0](v28, -1, -1);
      swift_unknownObjectRelease();
      uint64_t v61 = sub_1B3C8C9B0(v29, v31, v60);
      sub_1B3D72868();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B3C5C000, v23, v24, "Unable to decode XPC event: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3EC61A0](v26, -1, -1);
      MEMORY[0x1B3EC61A0](v25, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

void sub_1B3C8BCC0(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  if (qword_1EB4FA490 != -1) {
    swift_once();
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t v12 = v11;
  swift_beginAccess();
  uint64_t v13 = sub_1B3C7EB3C(v10, v12, off_1E9CE18C8);
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_1B3D72278();
    uint64_t v14 = sub_1B3C7EB3C(a1, a2, v13);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_13;
    }
  }
  else
  {
    swift_endAccess();
  }
  if (qword_1E9CE1900 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1B3D72058();
  __swift_project_value_buffer(v15, (uint64_t)qword_1E9CE1C60);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_1B3D72038();
  os_log_type_t v17 = sub_1B3D72758();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v20[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    sub_1B3D72278();
    v20[4] = sub_1B3C8C9B0(a1, a2, v20);
    sub_1B3D72868();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1B3C5C000, v16, v17, "Received an XPC event that we do not have an registered handler for: %s. This is a serious programming error that might lead to missed messages and stuck streams.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B3EC61A0](v19, -1, -1);
    MEMORY[0x1B3EC61A0](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_13:
  *a5 = v14;
}

void static XPCEventStream.register(matching:_:)()
{
  if (qword_1EB4FA480 != -1) {
    swift_once();
  }
  uint64_t v0 = (os_unfair_lock_s *)(qword_1EB4FA478 + 16);
  os_unfair_lock_assert_not_owner((const os_unfair_lock *)(qword_1EB4FA478 + 16));
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  MEMORY[0x1F4188790](v2);
  os_unfair_lock_lock(v0);
  sub_1B3C78FB4(v3);
  os_unfair_lock_unlock(v0);
}

uint64_t sub_1B3C8C08C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(unint64_t, uint64_t), uint64_t a5, unint64_t a6, uint64_t a7)
{
  if (qword_1E9CE18F8 != -1) {
    swift_once();
  }
  uint64_t v11 = *(uint64_t (**)(unint64_t, uint64_t))(a7 + 24);
  uint64_t v12 = v11(a6, a7);
  uint64_t v14 = v13;
  swift_beginAccess();
  LOBYTE(v12) = sub_1B3C7EAFC(v12, v14, qword_1E9CE1C58);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0) {
    goto LABEL_8;
  }
  if (qword_1E9CE1900 != -1) {
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v15 = sub_1B3D72058();
    __swift_project_value_buffer(v15, (uint64_t)qword_1E9CE1C60);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1B3D72038();
    os_log_type_t v17 = sub_1B3D72758();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v50 = a5;
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      v53[0] = v49;
      *(_DWORD *)uint64_t v18 = 136315138;
      sub_1B3D72278();
      id v54 = (void *)sub_1B3C8C9B0(a2, a3, v53);
      sub_1B3D72868();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1B3C5C000, v16, v17, "Attempting to register for new event (%s) after the stream has already been activated. This is a serious programming error that might lead to missed messages and stuck streams.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3EC61A0](v49, -1, -1);
      uint64_t v19 = v18;
      a5 = v50;
      MEMORY[0x1B3EC61A0](v19, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_8:
    if (qword_1EB4FA490 != -1) {
      swift_once();
    }
    uint64_t v20 = v11(a6, a7);
    uint64_t v11 = v21;
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = a6;
    v22[3] = a7;
    v22[4] = a4;
    void v22[5] = a5;
    a6 = (unint64_t)&off_1E9CE18C8;
    swift_beginAccess();
    sub_1B3D72278();
    swift_retain();
    swift_isUniquelyReferenced_nonNull_native();
    long long v23 = off_1E9CE18C8;
    id v54 = off_1E9CE18C8;
    off_1E9CE18C8 = (_UNKNOWN *)0x8000000000000000;
    unint64_t v24 = sub_1B3C93F04(v20, (uint64_t)v11);
    uint64_t v26 = v23[2];
    BOOL v27 = (v25 & 1) == 0;
    a7 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
      goto LABEL_24;
    }
    a6 = v24;
    a5 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D50);
    if (sub_1B3D72A28())
    {
      unint64_t v28 = sub_1B3C93F04(v20, (uint64_t)v11);
      if ((a5 & 1) != (v29 & 1)) {
        goto LABEL_26;
      }
      a6 = v28;
    }
    a4 = v11;
    uint64_t v11 = (uint64_t (*)(unint64_t, uint64_t))a3;
    off_1E9CE18C8 = v54;
    swift_bridgeObjectRelease();
    unint64_t v30 = off_1E9CE18C8;
    if ((a5 & 1) == 0)
    {
      sub_1B3D72278();
      sub_1B3C8C960((uint64_t *)&v54);
      sub_1B3CCF2F0(a6, v20, a4, v54, v30);
    }
    sub_1B3D72278();
    a3 = v30[7];
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    id v54 = *(void **)(a3 + 8 * a6);
    unint64_t v31 = v54;
    *(void *)(a3 + 8 * a6) = 0x8000000000000000;
    unint64_t v32 = sub_1B3C93F04(a2, (uint64_t)v11);
    uint64_t v34 = v31[2];
    BOOL v35 = (v33 & 1) == 0;
    a7 = v34 + v35;
    if (!__OFADD__(v34, v35)) {
      break;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    swift_once();
  }
  unint64_t v36 = v32;
  char v37 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D58);
  char v38 = sub_1B3D72A28();
  uint64_t v39 = v54;
  if (v38)
  {
    unint64_t v40 = sub_1B3C93F04(a2, (uint64_t)v11);
    if ((v37 & 1) != (v41 & 1))
    {
LABEL_26:
      uint64_t result = sub_1B3D73068();
      __break(1u);
      return result;
    }
    unint64_t v36 = v40;
  }
  *(void *)(a3 + 8 * a6) = v39;
  swift_bridgeObjectRelease();
  uint64_t v42 = *(void *)(a3 + 8 * a6);
  sub_1B3D72278();
  if ((v37 & 1) == 0)
  {
    sub_1B3CCF2F0(v36, a2, v11, MEMORY[0x1E4FBC860], v42);
    sub_1B3D72278();
  }
  uint64_t v43 = *(void *)(v42 + 56);
  swift_bridgeObjectRelease();
  uint64_t v44 = (uint64_t *)(v43 + 8 * v36);
  sub_1B3C86850();
  os_log_t v45 = *(void **)(*v44 + 16);
  sub_1B3C86974(v45);
  uint64_t v46 = *v44;
  *(void *)(v46 + 16) = (char *)v45 + 1;
  uint64_t v47 = v46 + 16 * (void)v45;
  *(void *)(v47 + 32) = sub_1B3C8D1DC;
  *(void *)(v47 + 40) = v22;
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1B3C8C5D8(uint64_t a1, void (*a2)(char *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1B3D72848();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21[-1] - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v21[-1] - v11;
  sub_1B3C733B8(a1, (uint64_t)v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1908);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, AssociatedTypeWitness);
    a2(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (qword_1E9CE1900 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1B3D72058();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E9CE1C60);
    sub_1B3C733B8(a1, (uint64_t)v23);
    uint64_t v14 = sub_1B3D72038();
    os_log_type_t v15 = sub_1B3D72758();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v22 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      sub_1B3C733B8((uint64_t)v23, (uint64_t)v21);
      uint64_t v18 = sub_1B3D723B8();
      v21[0] = sub_1B3C8C9B0(v18, v19, &v22);
      sub_1B3D72868();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      _os_log_impl(&dword_1B3C5C000, v14, v15, "Received unexpected event type: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B3EC61A0](v17, -1, -1);
      MEMORY[0x1B3EC61A0](v16, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
  }
}

uint64_t sub_1B3C8C960@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1CC0);
  uint64_t result = sub_1B3D72248();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C8C9B0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1B3C8CA84(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1B3C8D1E8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1B3C8D1E8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_1B3D72278();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1B3C8CA84(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1B3C8CBDC((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1B3D72878();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_1B3C8CCB4(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_1B3D729B8();
    if (!v8)
    {
      uint64_t result = sub_1B3D72A48();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_1B3C8CBDC(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1B3D72AA8();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_1B3C8CCB4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1B3C8CD4C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_1B3C8CF28(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_1B3C8CF28((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1B3C8CD4C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_1B3D72418();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x1E4FBC860];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_6:
  unint64_t v3 = sub_1B3C8CEC0(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_1B3D72948();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_1B3D72AA8();
  __break(1u);
LABEL_14:
  uint64_t result = sub_1B3D72A48();
  __break(1u);
  return result;
}

void *sub_1B3C8CEC0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29E0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_1B3C8CF28(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1B3C8D0D8(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B3C8D000(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1B3C8D000(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_1B3D72AA8();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_1B3C8D0D8(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1B3D72AA8();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_1B3C8D168()
{
  return sub_1B3C8C08C(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(uint64_t (**)(unint64_t, uint64_t))(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t dispatch thunk of static XPCEventStream.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1B3C8D1A4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1B3C8D1DC(uint64_t a1)
{
  sub_1B3C8C5D8(a1, *(void (**)(char *))(v1 + 32));
}

uint64_t sub_1B3C8D1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1B3C8D244()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1B3C8D254(void *a1)
{
  sub_1B3C8B4FC(a1, *(uint8_t **)(v1 + 16), *(uint8_t **)(v1 + 24));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_1B3C8D294(uint64_t *a1@<X8>)
{
  sub_1B3C8BCC0(*(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void *sub_1B3C8D2B8@<X0>(uint64_t a1@<X0>, void *(*a2)(uint64_t *__return_ptr)@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_1B3C7CEA8(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

void *sub_1B3C8D2E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1B3C8D2B8(a1, *(void *(**)(uint64_t *__return_ptr))(v2 + 16), a2);
}

unint64_t sub_1B3C8D300()
{
  unint64_t result = qword_1E9CE1D10;
  if (!qword_1E9CE1D10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9CE1D10);
  }
  return result;
}

unint64_t sub_1B3C8D340()
{
  unint64_t result = qword_1E9CE1910;
  if (!qword_1E9CE1910)
  {
    sub_1B3D72788();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1910);
  }
  return result;
}

unint64_t sub_1B3C8D390()
{
  unint64_t result = qword_1E9CE1CB8;
  if (!qword_1E9CE1CB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE1CB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1CB8);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t StaticString._asString.getter(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result) {
      return sub_1B3D723D8();
    }
    __break(1u);
  }
  if (HIDWORD(result))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return sub_1B3D723D8();
  }
  if (result >> 11 == 27) {
    goto LABEL_14;
  }
  if (WORD1(result) > 0x10u) {
    goto LABEL_11;
  }
  if ((result & 0xFFFFFF80) != 0 || result <= 0xFF) {
    return sub_1B3D723D8();
  }
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

id static NSBundle._current.getter()
{
  if (qword_1E9CE2098 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E9CE29E8;
  return v0;
}

id sub_1B3C8D5B4()
{
  _s2__CMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1E9CE29E8 = (uint64_t)result;
  return result;
}

uint64_t sub_1B3C8D60C()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t _s2__CMa()
{
  return self;
}

void sub_1B3C8D640()
{
  OUTLINED_FUNCTION_10();
  uint64_t v0 = sub_1B3D72368();
  uint64_t v1 = OUTLINED_FUNCTION_7_3(v0);
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  MEMORY[0x1F4188790](v3);
  sub_1B3D71D48();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1B3D71EC8();
  uint64_t v6 = OUTLINED_FUNCTION_7_3(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_18_1();
  sub_1B3D72358();
  sub_1B3D71EB8();
  uint64_t v7 = OUTLINED_FUNCTION_6_4();
  v8(v7);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_9();
}

BOOL sub_1B3C8D890(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1B3C8D8A0()
{
  return sub_1B3D73118();
}

uint64_t sub_1B3C8D8C8()
{
  return sub_1B3D73138();
}

BOOL sub_1B3C8D910(char *a1, char *a2)
{
  return sub_1B3C8D890(*a1, *a2);
}

uint64_t sub_1B3C8D91C()
{
  return sub_1B3C8D8C8();
}

uint64_t sub_1B3C8D924()
{
  return sub_1B3C8D8A0();
}

void sub_1B3C8D92C()
{
}

uint64_t sub_1B3C8D934()
{
  uint64_t v1 = sub_1B3D72368();
  uint64_t v2 = OUTLINED_FUNCTION_7_3(v1);
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = OUTLINED_FUNCTION_3_5();
  uint64_t v8 = OUTLINED_FUNCTION_7_3(v7);
  MEMORY[0x1F4188790](v8);
  sub_1B3D72358();
  sub_1B3D71EB8();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v0, *MEMORY[0x1E4F275D0], v3);
  return OUTLINED_FUNCTION_2_4();
}

void sub_1B3C8DA90()
{
  OUTLINED_FUNCTION_10();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A40);
  uint64_t v4 = OUTLINED_FUNCTION_7_3(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = OUTLINED_FUNCTION_3_5();
  uint64_t v10 = OUTLINED_FUNCTION_7_3(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_14_1();
  uint64_t v11 = sub_1B3D72368();
  uint64_t v12 = OUTLINED_FUNCTION_7_3(v11);
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_5_1();
  uint64_t v13 = sub_1B3D71D58();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_5_3();
  sub_1B3D72358();
  sub_1B3D71EB8();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v0, *MEMORY[0x1E4F275D0], v5);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_11_3();
  __swift_storeEnumTagSinglePayload(v15, v16, v17, v13);
  sub_1B3D71A38();
  uint64_t v18 = sub_1B3D71A28();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v18);
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1B3C8DC84()
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A68);
  unint64_t v2 = sub_1B3C8FFA4();
  uint64_t v3 = sub_1B3C90040(&qword_1E9CE2A70, &qword_1E9CE2A68);
  return MEMORY[0x1F40D4A18](KeyPath, sub_1B3C8DD90, 0, v1, v2, v3);
}

uint64_t sub_1B3C8DD40()
{
  return sub_1B3D719F8();
}

uint64_t sub_1B3C8DD64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3C8DD40();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C8DD90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A78);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  uint64_t v25 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v22 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  long long v23 = (char *)v19 - v5;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A80);
  uint64_t v27 = *(void *)(v21 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v21);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v20 = (char *)v19 - v9;
  char v28 = 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A88);
  v19[1] = sub_1B3C8FFA4();
  sub_1B3C8F048();
  sub_1B3C90040(&qword_1E9CE2A90, &qword_1E9CE2A88);
  v19[2] = v10;
  sub_1B3D71B48();
  sub_1B3C90040(&qword_1E9CE2A98, &qword_1E9CE2A80);
  uint64_t v11 = v21;
  sub_1B3D71B38();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v27 + 8);
  v27 += 8;
  v12(v8, v11);
  uint64_t v13 = v22;
  sub_1B3D71B68();
  sub_1B3C90040(&qword_1E9CE2AA0, &qword_1E9CE2A78);
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  sub_1B3D71B38();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v25 + 8);
  v16(v13, v15);
  uint64_t v17 = v20;
  sub_1B3D71B28();
  v16(v14, v15);
  return ((uint64_t (*)(char *, uint64_t))v12)(v17, v11);
}

uint64_t sub_1B3C8E144@<X0>(uint64_t a1@<X8>)
{
  v13[1] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AA8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AB0);
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A88);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  sub_1B3C8FFA4();
  sub_1B3D71AA8();
  sub_1B3D71A98();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AB8);
  sub_1B3D71A88();
  swift_release();
  sub_1B3D71A98();
  sub_1B3D71AB8();
  sub_1B3D71A78();
  uint64_t v10 = sub_1B3C90040(&qword_1E9CE2A90, &qword_1E9CE2A88);
  MEMORY[0x1B3EC3620](v7, &unk_1F0C79D18, v3, v10);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  MEMORY[0x1B3EC3610](v9, &unk_1F0C79D18, v3, v10);
  return ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
}

uint64_t sub_1B3C8E418@<X0>(uint64_t a1@<X8>)
{
  v13[1] = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AA8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AB0);
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A88);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v13 - v8;
  sub_1B3C8FFA4();
  sub_1B3D71AA8();
  sub_1B3D71A98();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AB8);
  sub_1B3D71A88();
  swift_release();
  sub_1B3D71A98();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AC0);
  sub_1B3D71A88();
  swift_release();
  sub_1B3D71A98();
  sub_1B3D71AB8();
  sub_1B3D71A78();
  uint64_t v10 = sub_1B3C90040(&qword_1E9CE2A90, &qword_1E9CE2A88);
  MEMORY[0x1B3EC3620](v7, &unk_1F0C79D18, v3, v10);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  MEMORY[0x1B3EC3610](v9, &unk_1F0C79D18, v3, v10);
  return ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
}

uint64_t sub_1B3C8E734()
{
  return sub_1B3D719F8();
}

uint64_t sub_1B3C8E758@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3C8E734();
  *a1 = result;
  return result;
}

void sub_1B3C8E784()
{
  OUTLINED_FUNCTION_10();
  uint64_t v1 = sub_1B3D72368();
  uint64_t v2 = OUTLINED_FUNCTION_7_3(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_18_1();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A40);
  uint64_t v4 = OUTLINED_FUNCTION_7_3(v3);
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = OUTLINED_FUNCTION_4_3();
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = OUTLINED_FUNCTION_3_5();
  uint64_t v10 = OUTLINED_FUNCTION_7_3(v9);
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15_2();
  uint64_t v11 = sub_1B3D71D58();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_16_1();
  sub_1B3D71EB8();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v0, *MEMORY[0x1E4F275D0], v5);
  OUTLINED_FUNCTION_10_2();
  sub_1B3D71D68();
  OUTLINED_FUNCTION_11_3();
  __swift_storeEnumTagSinglePayload(v13, v14, v15, v11);
  sub_1B3D71B18();
  OUTLINED_FUNCTION_9();
}

void sub_1B3C8E92C()
{
  OUTLINED_FUNCTION_10();
  uint64_t v1 = sub_1B3D72368();
  uint64_t v2 = OUTLINED_FUNCTION_7_3(v1);
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_8_5();
  MEMORY[0x1F4188790](v3);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AC8);
  uint64_t v5 = OUTLINED_FUNCTION_7_3(v4);
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A40);
  uint64_t v7 = OUTLINED_FUNCTION_7_3(v6);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_7_4(v8, v28);
  uint64_t v30 = sub_1B3D71D48();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_15_2();
  uint64_t v12 = sub_1B3D71EC8();
  uint64_t v13 = OUTLINED_FUNCTION_7_3(v12);
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_5_1();
  uint64_t v32 = sub_1B3D71D58();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_9_2(v15, v29);
  MEMORY[0x1F4188790](v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AD0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AD8) - 8;
  uint64_t v31 = *(void *)(*(void *)v17 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(*(void *)v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v17 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1B3D7FC60;
  unint64_t v19 = (unsigned char *)(v33 + v18);
  unsigned char *v19 = 0;
  sub_1B3D72358();
  sub_1B3D71EB8();
  uint64_t v20 = *MEMORY[0x1E4F275D0];
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104);
  v21(v0, v20, v30);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_11_3();
  __swift_storeEnumTagSinglePayload(v22, v23, v24, v32);
  sub_1B3D71A48();
  OUTLINED_FUNCTION_23_2();
  sub_1B3D71A58();
  v19[v31] = 1;
  sub_1B3D72358();
  sub_1B3D71EB8();
  v21(v0, v20, v30);
  OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_11_3();
  __swift_storeEnumTagSinglePayload(v25, v26, v27, v32);
  OUTLINED_FUNCTION_23_2();
  sub_1B3D71A58();
  sub_1B3D71A68();
  sub_1B3C8F278();
  sub_1B3D72248();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1B3C8ED0C()
{
  uint64_t v0 = sub_1B3D72AC8();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1B3C8ED60(char a1)
{
  if (a1) {
    return 0x656C67676F74;
  }
  else {
    return 1852994932;
  }
}

uint64_t sub_1B3C8ED8C(char *a1, char *a2)
{
  return sub_1B3C72D4C(*a1, *a2);
}

unint64_t sub_1B3C8ED9C()
{
  unint64_t result = qword_1EB4FA630;
  if (!qword_1EB4FA630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA630);
  }
  return result;
}

uint64_t sub_1B3C8EDE8()
{
  return sub_1B3CD19A4();
}

uint64_t sub_1B3C8EDF0()
{
  return sub_1B3CD1B30();
}

uint64_t sub_1B3C8EDF8()
{
  return sub_1B3CD1C9C();
}

uint64_t sub_1B3C8EE00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3C8ED0C();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C8EE30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3C8ED60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B3C8EE5C()
{
  return sub_1B3C90040(&qword_1E9CE29F0, &qword_1E9CE29F8);
}

void sub_1B3C8EE98(void *a1@<X8>)
{
  *a1 = &unk_1F0C79BD8;
}

unint64_t sub_1B3C8EEAC()
{
  unint64_t result = qword_1EB4FA5F0;
  if (!qword_1EB4FA5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA5F0);
  }
  return result;
}

unint64_t sub_1B3C8EEFC()
{
  unint64_t result = qword_1EB4FA618;
  if (!qword_1EB4FA618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA618);
  }
  return result;
}

unint64_t sub_1B3C8EF4C()
{
  unint64_t result = qword_1EB4FA638;
  if (!qword_1EB4FA638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA638);
  }
  return result;
}

uint64_t sub_1B3C8EF98()
{
  return MEMORY[0x1E4FBB210];
}

unint64_t sub_1B3C8EFA8()
{
  unint64_t result = qword_1EB4FA608;
  if (!qword_1EB4FA608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA608);
  }
  return result;
}

unint64_t sub_1B3C8EFF8()
{
  unint64_t result = qword_1EB4FA610;
  if (!qword_1EB4FA610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA610);
  }
  return result;
}

unint64_t sub_1B3C8F048()
{
  unint64_t result = qword_1EB4FA5F8;
  if (!qword_1EB4FA5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA5F8);
  }
  return result;
}

unint64_t sub_1B3C8F098()
{
  unint64_t result = qword_1EB4FA600;
  if (!qword_1EB4FA600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA600);
  }
  return result;
}

uint64_t sub_1B3C8F0EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1B3C8F13C()
{
  unint64_t result = qword_1E9CE2A00;
  if (!qword_1E9CE2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2A00);
  }
  return result;
}

uint64_t sub_1B3C8F188(uint64_t a1)
{
  unint64_t v2 = sub_1B3C8F13C();
  return MEMORY[0x1F40D3B98](a1, v2);
}

unint64_t sub_1B3C8F1D8()
{
  unint64_t result = qword_1EB4FA620;
  if (!qword_1EB4FA620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA620);
  }
  return result;
}

unint64_t sub_1B3C8F228()
{
  unint64_t result = qword_1EB4FA640;
  if (!qword_1EB4FA640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA640);
  }
  return result;
}

unint64_t sub_1B3C8F278()
{
  unint64_t result = qword_1EB4FA628;
  if (!qword_1EB4FA628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA628);
  }
  return result;
}

uint64_t sub_1B3C8F2C8(uint64_t a1)
{
  unint64_t v2 = sub_1B3C8F098();
  return MEMORY[0x1F40D47F0](a1, v2);
}

unint64_t sub_1B3C8F318()
{
  unint64_t result = qword_1EB4FA4E8[0];
  if (!qword_1EB4FA4E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB4FA4E8);
  }
  return result;
}

unint64_t sub_1B3C8F368()
{
  unint64_t result = qword_1EB4FA648;
  if (!qword_1EB4FA648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA648);
  }
  return result;
}

uint64_t sub_1B3C8F3B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B3C8F3D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B3C8F3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1B3C8F410, 0, 0);
}

uint64_t sub_1B3C8F410()
{
  id v1 = objc_msgSend(self, sel_currentDevice);
  unsigned __int8 v2 = objc_msgSend(v1, sel_hasCapability_, @"HardwareRingerSwitch");

  if ((v2 & 1) == 0)
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)WFAVSystemController), sel_init);
    sub_1B3D719E8();
    if (*(unsigned char *)(v0 + 40) == 1)
    {
      uint64_t v5 = (void *)OUTLINED_FUNCTION_21_1();
      unsigned __int8 v6 = objc_msgSend(v4, sel_toggleSilentModeWithReason_client_, v5, 1);

      if ((v6 & 1) == 0)
      {
        sub_1B3C8FFF0();
        swift_allocError();
        unsigned char *v7 = 1;
LABEL_9:
        swift_willThrow();

        goto LABEL_10;
      }
    }
    else
    {
      sub_1B3D719E8();
      uint64_t v8 = *(unsigned __int8 *)(v0 + 40);
      uint64_t v9 = (void *)OUTLINED_FUNCTION_21_1();
      LOBYTE(v8) = objc_msgSend(v4, sel_setSilentMode_reason_client_, v8, v9, 1);

      if ((v8 & 1) == 0)
      {
        sub_1B3C8FFF0();
        swift_allocError();
        unsigned char *v11 = 2;
        goto LABEL_9;
      }
    }
    sub_1B3D719D8();

    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_11;
  }
  sub_1B3C8FFF0();
  swift_allocError();
  *uint64_t v3 = 0;
  swift_willThrow();
LABEL_10:
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
  return v10();
}

void sub_1B3C8F620()
{
  OUTLINED_FUNCTION_10();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A30);
  uint64_t v1 = OUTLINED_FUNCTION_7_3(v0);
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_7_4(v2, v42);
  uint64_t v3 = sub_1B3D72368();
  uint64_t v4 = OUTLINED_FUNCTION_7_3(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_9_2(v5, v42);
  MEMORY[0x1F4188790](v6);
  sub_1B3D71AC8();
  OUTLINED_FUNCTION_0_0();
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_22();
  uint64_t v54 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A38);
  uint64_t v11 = OUTLINED_FUNCTION_7_3(v10);
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_8_5();
  uint64_t v52 = v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A40);
  uint64_t v17 = OUTLINED_FUNCTION_7_3(v16);
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_5_3();
  uint64_t v51 = sub_1B3D71D48();
  OUTLINED_FUNCTION_0_0();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_5_1();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_1B3D71EC8();
  uint64_t v25 = OUTLINED_FUNCTION_7_3(v24);
  MEMORY[0x1F4188790](v25);
  OUTLINED_FUNCTION_14_1();
  uint64_t v26 = sub_1B3D71D58();
  uint64_t v47 = v26;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_8_5();
  uint64_t v53 = v27;
  MEMORY[0x1F4188790](v28);
  OUTLINED_FUNCTION_16_1();
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A48);
  sub_1B3D71EB8();
  unsigned int v50 = *MEMORY[0x1E4F275D0];
  uint64_t v29 = *(void (**)(void))(v19 + 104);
  uint64_t v48 = v19 + 104;
  uint64_t v49 = (void (*)(uint64_t, void, uint64_t))v29;
  v29(v23);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_11_3();
  __swift_storeEnumTagSinglePayload(v30, v31, v32, v26);
  char v58 = 0;
  sub_1B3D719C8();
  uint64_t v43 = v15;
  OUTLINED_FUNCTION_19_0((uint64_t)v15);
  OUTLINED_FUNCTION_19_0(v52);
  unsigned int v46 = *MEMORY[0x1E4F186F0];
  uint64_t v33 = *(void (**)(void))(v56 + 104);
  v56 += 104;
  os_log_t v45 = (void (*)(uint64_t, void, uint64_t))v33;
  uint64_t v34 = v54;
  v33(v54);
  sub_1B3C8F13C();
  uint64_t v52 = sub_1B3D71A08();
  sub_1B3D72358();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2A50);
  sub_1B3D71EB8();
  v49(v23, v50, v51);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_11_3();
  __swift_storeEnumTagSinglePayload(v35, v36, v37, v47);
  char v57 = 1;
  sub_1B3D724C8();
  OUTLINED_FUNCTION_11_3();
  __swift_storeEnumTagSinglePayload(v38, v39, v40, v41);
  OUTLINED_FUNCTION_19_0((uint64_t)v43);
  v45(v34, v46, v55);
  sub_1B3D71A18();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1B3C8FAC8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1B3C8FB74;
  return sub_1B3C8F3EC(a1, v5, v4);
}

uint64_t sub_1B3C8FB74()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1B3C8FC68(void *a1@<X8>)
{
  sub_1B3C8F620();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1B3C8FC90(uint64_t a1)
{
  unint64_t v2 = sub_1B3C8FFA4();
  return MEMORY[0x1F40D3C90](a1, v2);
}

uint64_t sub_1B3C8FCD0()
{
  swift_release();
  return swift_release();
}

void *sub_1B3C8FD0C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1B3C8FD44(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1B3C8FDA4(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1B3C8FDE4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SetSilentModeAction()
{
}

unsigned char *sub_1B3C8FE2C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3C8FEF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SetSilentModeAction.SetSilentModeOperation()
{
}

uint64_t sub_1B3C8FF2C()
{
  return sub_1B3C90040(&qword_1E9CE2A10, &qword_1E9CE2A18);
}

uint64_t sub_1B3C8FF68()
{
  return sub_1B3C90040(&qword_1E9CE2A20, &qword_1E9CE2A28);
}

unint64_t sub_1B3C8FFA4()
{
  unint64_t result = qword_1EB4FA650;
  if (!qword_1EB4FA650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA650);
  }
  return result;
}

unint64_t sub_1B3C8FFF0()
{
  unint64_t result = qword_1E9CE2A60;
  if (!qword_1E9CE2A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2A60);
  }
  return result;
}

uint64_t sub_1B3C90040(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_1B3C90088(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3C90154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for SilentModeActionError()
{
}

unint64_t sub_1B3C9018C()
{
  unint64_t result = qword_1E9CE2AE0;
  if (!qword_1E9CE2AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2AE0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return sub_1B3D71D68();
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return sub_1B3D71EC8();
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_0(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_21_1()
{
  return sub_1B3D72378();
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t LinkSnapshot.State.containerId.getter()
{
  return OUTLINED_FUNCTION_20_1();
}

uint64_t LinkSnapshot.State.installIdentifier.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_20_1();
  sub_1B3C7D8EC(v0, v1);
  return OUTLINED_FUNCTION_20_1();
}

uint64_t LinkSnapshot.State.init(containerId:installIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

void LinkSnapshot.State.init(bundleMetadata:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_bundleIdentifier);
  uint64_t v5 = sub_1B3D723A8();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(a1, sel_installIdentifier);
  uint64_t v9 = sub_1B3D71DF8();
  uint64_t v11 = v10;

  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
}

uint64_t LinkSnapshot.State.hash(into:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  sub_1B3D72278();
  sub_1B3D723E8();
  swift_bridgeObjectRelease();
  sub_1B3C7D8EC(v2, v1);
  sub_1B3D71E08();
  return sub_1B3C7532C(v2, v1);
}

uint64_t static LinkSnapshot.State.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_1B3D72E58() & 1) != 0)
  {
    OUTLINED_FUNCTION_20_1();
    JUMPOUT(0x1B3EC3910);
  }
  return 0;
}

BOOL sub_1B3C90500(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1B3C90510()
{
  return sub_1B3D73118();
}

uint64_t sub_1B3C90538(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656E6961746E6F63 && a2 == 0xEB00000000644972;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001B3D89CA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3C90630()
{
  return 2;
}

uint64_t sub_1B3C90638()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3C90680(char a1)
{
  if (a1) {
    return 0xD000000000000011;
  }
  else {
    return 0x656E6961746E6F63;
  }
}

BOOL sub_1B3C906C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B3C90500(*a1, *a2);
}

uint64_t sub_1B3C906D0()
{
  return sub_1B3C90638();
}

uint64_t sub_1B3C906D8()
{
  return sub_1B3C90510();
}

uint64_t sub_1B3C906E0()
{
  return sub_1B3C90680(*v0);
}

uint64_t sub_1B3C906E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C90538(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C90710()
{
  return sub_1B3C72F38();
}

uint64_t sub_1B3C90730@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3C90630();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C90758(uint64_t a1)
{
  unint64_t v2 = sub_1B3C90928();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C90794(uint64_t a1)
{
  unint64_t v2 = sub_1B3C90928();
  return MEMORY[0x1F41862B0](a1, v2);
}

void LinkSnapshot.State.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  unint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AE8);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B3C90928();
  sub_1B3D73178();
  sub_1B3D72BD8();
  if (!v0)
  {
    sub_1B3C7D5B0();
    sub_1B3D72C18();
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v3);
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1B3C90928()
{
  unint64_t result = qword_1E9CE2AF0;
  if (!qword_1E9CE2AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2AF0);
  }
  return result;
}

uint64_t LinkSnapshot.State.hashValue.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  sub_1B3D73108();
  sub_1B3D72278();
  sub_1B3D723E8();
  swift_bridgeObjectRelease();
  sub_1B3C7D8EC(v2, v1);
  sub_1B3D71E08();
  sub_1B3C7532C(v2, v1);
  return sub_1B3D73138();
}

void LinkSnapshot.State.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2AF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B3C90928();
  sub_1B3D73158();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    LOBYTE(v11) = 0;
    uint64_t v6 = sub_1B3D72B28();
    uint64_t v8 = v7;
    sub_1B3C7D440();
    sub_1B3D72278();
    sub_1B3D72B68();
    uint64_t v9 = OUTLINED_FUNCTION_25_0();
    v10(v9);
    sub_1B3D72278();
    sub_1B3C7D8EC(v11, v12);
    swift_bridgeObjectRelease();
    *uint64_t v4 = v6;
    v4[1] = v8;
    v4[2] = v11;
    v4[3] = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
    sub_1B3C7532C(v11, v12);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1B3C90BDC()
{
}

void sub_1B3C90BF4()
{
}

uint64_t sub_1B3C90C14()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  sub_1B3D73108();
  sub_1B3D72278();
  sub_1B3D723E8();
  swift_bridgeObjectRelease();
  sub_1B3C7D8EC(v2, v1);
  sub_1B3D71E08();
  sub_1B3C7532C(v2, v1);
  return sub_1B3D73138();
}

uint64_t LinkSnapshot.stateByContainerId.getter()
{
  return sub_1B3D72278();
}

VoiceShortcutClient::LinkSnapshot __swiftcall LinkSnapshot.init(state:)(Swift::OpaquePointer state)
{
  uint64_t v3 = v1;
  uint64_t v4 = *((void *)state._rawValue + 2);
  if (!v4)
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
LABEL_21:
    result.stateByContainerId._rawValue = (void *)swift_bridgeObjectRelease();
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v33 = v1;
  sub_1B3D72278();
  uint64_t v5 = (unint64_t *)((char *)state._rawValue + 56);
  uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v8 = *(v5 - 3);
    uint64_t v7 = *(v5 - 2);
    uint64_t v10 = *(v5 - 1);
    unint64_t v9 = *v5;
    uint64_t v11 = v6[2];
    sub_1B3D72278();
    unint64_t v34 = v9;
    if (v11)
    {
      sub_1B3D72278();
      sub_1B3C7D8EC(v10, v9);
      sub_1B3D72278();
      unint64_t v12 = sub_1B3C93F04(v8, v7);
      if (v13)
      {
        uint64_t v14 = (uint64_t *)(v6[7] + 32 * v12);
        uint64_t v16 = *v14;
        uint64_t v15 = v14[1];
        uint64_t v11 = v14[2];
        unint64_t v17 = v14[3];
        sub_1B3D72278();
        sub_1B3C7D8EC(v11, v17);
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      uint64_t v16 = 0;
      uint64_t v15 = 0;
      uint64_t v11 = 0;
    }
    else
    {
      sub_1B3C7D8EC(v10, v9);
      sub_1B3D72278();
      uint64_t v16 = 0;
      uint64_t v15 = 0;
    }
    unint64_t v17 = 0;
LABEL_9:
    sub_1B3C94140(v16, v15, v11, v17);
    if (v15) {
      break;
    }
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v18 = sub_1B3C93F04(v8, v7);
    if (__OFADD__(v6[2], (v19 & 1) == 0)) {
      goto LABEL_23;
    }
    unint64_t v20 = v18;
    char v21 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2050);
    if (sub_1B3D72A28())
    {
      unint64_t v22 = sub_1B3C93F04(v8, v7);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_25;
      }
      unint64_t v20 = v22;
    }
    if (v21)
    {
      uint64_t v24 = (uint64_t *)(v6[7] + 32 * v20);
      uint64_t v25 = v24[2];
      unint64_t v26 = v24[3];
      swift_bridgeObjectRelease();
      sub_1B3C7532C(v25, v26);
      uint64_t *v24 = v8;
      v24[1] = v7;
      v24[2] = v10;
      v24[3] = v34;
    }
    else
    {
      v6[(v20 >> 6) + 8] |= 1 << v20;
      uint64_t v27 = (uint64_t *)(v6[6] + 16 * v20);
      *uint64_t v27 = v8;
      v27[1] = v7;
      uint64_t v28 = (uint64_t *)(v6[7] + 32 * v20);
      *uint64_t v28 = v8;
      v28[1] = v7;
      v28[2] = v10;
      v28[3] = v34;
      uint64_t v29 = v6[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_24;
      }
      id v6[2] = v31;
      sub_1B3D72278();
    }
    v5 += 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v33;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  result.stateByContainerId._rawValue = (void *)sub_1B3D73068();
  __break(1u);
  return result;
}

VoiceShortcutClient::LinkSnapshot __swiftcall LinkSnapshot.init(stateByContainerId:)(VoiceShortcutClient::LinkSnapshot stateByContainerId)
{
  v1->stateByContainerId._rawValue = stateByContainerId.stateByContainerId._rawValue;
  return stateByContainerId;
}

VoiceShortcutClient::LinkSnapshot __swiftcall LinkSnapshot.setting(stateByContainerId:)(Swift::OpaquePointer stateByContainerId)
{
  v1->_rawValue = stateByContainerId._rawValue;
  return (VoiceShortcutClient::LinkSnapshot)sub_1B3D72278();
}

uint64_t LinkSnapshot.hash(into:)()
{
  sub_1B3D72278();
  OUTLINED_FUNCTION_20_1();
  sub_1B3C947CC();
  return swift_bridgeObjectRelease();
}

uint64_t static LinkSnapshot.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1B3C91A0C(*a1, *a2);
}

uint64_t sub_1B3C90FB4(uint64_t a1, uint64_t a2)
{
  __s1[3] = *MEMORY[0x1E4F143B8];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v165 = a1 + 64;
  OUTLINED_FUNCTION_13_0();
  unint64_t v7 = v6 & v5;
  int64_t v166 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v167 = v3;
  uint64_t v168 = v2;
  while (1)
  {
    if (v7)
    {
      uint64_t v170 = (v7 - 1) & v7;
      int64_t v171 = v4;
      unint64_t v9 = __clz(__rbit64(v7)) | (v4 << 6);
      uint64_t v10 = 24;
    }
    else
    {
      BOOL v11 = __OFADD__(v4, 1);
      int64_t v12 = v4 + 1;
      if (v11)
      {
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
        goto LABEL_122;
      }
      if (v12 >= v166) {
        return 1;
      }
      if (!*(void *)(v165 + 8 * v12))
      {
        int64_t v13 = v12 + 1;
        if (v12 + 1 >= v166) {
          return 1;
        }
        if (!*(void *)(v165 + 8 * v13))
        {
          int64_t v13 = v12 + 2;
          if (v12 + 2 >= v166) {
            return 1;
          }
          if (!*(void *)(v165 + 8 * v13))
          {
            int64_t v13 = v12 + 3;
            if (v12 + 3 >= v166) {
              return 1;
            }
            if (!*(void *)(v165 + 8 * v13))
            {
              while (1)
              {
                int64_t v12 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  break;
                }
                if (v12 >= v166) {
                  return 1;
                }
                ++v13;
                if (*(void *)(v165 + 8 * v12)) {
                  goto LABEL_16;
                }
              }
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
            }
          }
        }
        int64_t v12 = v13;
      }
LABEL_16:
      OUTLINED_FUNCTION_29_0();
      uint64_t v170 = v14;
      int64_t v171 = v12;
      unint64_t v9 = v15 + (v12 << 6);
    }
    uint64_t v16 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v19 = (uint64_t *)(*(void *)(v3 + 56) + v9 * v10);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = (void *)v19[2];
    sub_1B3D72278();
    sub_1B3D72278();
    id v23 = v22;
    unint64_t v24 = sub_1B3C93F04(v17, v18);
    char v26 = v25;
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      break;
    }
    uint64_t v27 = (void *)(*(void *)(v2 + 56) + 24 * v24);
    uint64_t v28 = (void *)v27[2];
    BOOL v29 = *v27 == v20 && v27[1] == v21;
    uint64_t v30 = v21;
    if (!v29 && (sub_1B3D72E58() & 1) == 0) {
      break;
    }
    id v31 = v28;
    id v32 = v23;
    sub_1B3D72278();
    id v169 = v31;
    uint64_t v33 = sub_1B3D71DF8();
    unint64_t v35 = v34;
    uint64_t v36 = sub_1B3D71DF8();
    uint64_t v38 = v36;
    unint64_t v39 = v37;
    uint64_t v40 = 0;
    switch(v35 >> 62)
    {
      case 1uLL:
        LODWORD(v40) = HIDWORD(v33) - v33;
        if (__OFSUB__(HIDWORD(v33), v33)) {
          goto LABEL_116;
        }
        uint64_t v40 = (int)v40;
        break;
      case 2uLL:
        uint64_t v42 = *(void *)(v33 + 16);
        uint64_t v41 = *(void *)(v33 + 24);
        BOOL v11 = __OFSUB__(v41, v42);
        uint64_t v40 = v41 - v42;
        if (!v11) {
          break;
        }
        goto LABEL_117;
      case 3uLL:
        break;
      default:
        uint64_t v40 = BYTE6(v35);
        break;
    }
    unint64_t v43 = v37 >> 62;
    unint64_t v44 = HIDWORD(v36);
    switch(v37 >> 62)
    {
      case 1uLL:
        LODWORD(v45) = HIDWORD(v36) - v36;
        if (__OFSUB__(HIDWORD(v36), v36)) {
          goto LABEL_119;
        }
        uint64_t v45 = (int)v45;
LABEL_35:
        if (v40 != v45)
        {
LABEL_112:
          OUTLINED_FUNCTION_9_3();
          OUTLINED_FUNCTION_19_1();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return 0;
        }
        if (v40 >= 1)
        {
          uint64_t v48 = v36 >> 32;
          switch(v35 >> 62)
          {
            case 1uLL:
              uint64_t v162 = v36 >> 32;
              if (v33 >> 32 < (int)v33) {
                goto LABEL_120;
              }
              uint64_t v121 = HIDWORD(v36);
              OUTLINED_FUNCTION_24_2();
              char v160 = v53;
              uint64_t v127 = v54;
              v164 = v32;
              OUTLINED_FUNCTION_10_3();
              OUTLINED_FUNCTION_10_3();
              OUTLINED_FUNCTION_10_3();
              sub_1B3C7D8EC(v33, v35);
              uint64_t v55 = (char *)sub_1B3D71C38();
              if (!v55) {
                goto LABEL_78;
              }
              uint64_t v56 = sub_1B3D71C58();
              if (__OFSUB__((int)v33, v56)) {
                goto LABEL_124;
              }
              v55 += (int)v33 - v56;
LABEL_78:
              uint64_t v76 = sub_1B3D71C48();
              if (v43)
              {
                if (v43 == 1)
                {
                  if (v162 < (int)v38) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  char v75 = OUTLINED_FUNCTION_15_3(v127, v162, v39 & 0x3FFFFFFFFFFFFFFFLL);
                  OUTLINED_FUNCTION_9_3();
                }
                else
                {
                  uint64_t v115 = *(void *)(v38 + 16);
                  uint64_t v116 = *(void *)(v38 + 24);
                  swift_retain();
                  swift_retain();
                  char v75 = OUTLINED_FUNCTION_15_3(v115, v116, v39 & 0x3FFFFFFFFFFFFFFFLL);
                  swift_release();
                  swift_release();
                }
                OUTLINED_FUNCTION_9_3();
                OUTLINED_FUNCTION_19_1();
                OUTLINED_FUNCTION_9_3();
                unint64_t v7 = v170;
              }
              else
              {
                OUTLINED_FUNCTION_17_1(v76, v77, v78, v79, v80, v81, v82, v83, v118, v121, v30, v127, BYTE6(v39), v135, v138, v139, v142, v143);
                BYTE4(__s1[0]) = v105;
                OUTLINED_FUNCTION_6_5(v106, v107, v108, v109, v110, v111, v112, v113, v120, v123, v126, v130, __nc, v137, v141, v145, v146, v147, v148,
                  v149,
                  v150,
                  v151,
                  v152,
                  v153,
                  v154,
                  v155,
                  v156,
                  v157,
                  v158,
                  v159,
                  v160);
                if (!v55) {
                  goto LABEL_139;
                }
                int v114 = memcmp(v55, __s1, __na);
                OUTLINED_FUNCTION_9_3();
                OUTLINED_FUNCTION_19_1();
                OUTLINED_FUNCTION_9_3();
                char v75 = v114 == 0;
                unint64_t v7 = v170;
              }
LABEL_107:
              OUTLINED_FUNCTION_19_1();

              id v32 = v164;
              OUTLINED_FUNCTION_9_3();
              OUTLINED_FUNCTION_9_3();

              swift_bridgeObjectRelease();
              uint64_t v3 = v167;
              int64_t v4 = v171;
              goto LABEL_108;
            case 2uLL:
              OUTLINED_FUNCTION_24_2();
              char v161 = v57;
              uint64_t v163 = v38 >> 32;
              uint64_t v128 = v58;
              v164 = v32;
              uint64_t v59 = *(void *)(v33 + 24);
              uint64_t v124 = *(void *)(v33 + 16);
              OUTLINED_FUNCTION_10_3();
              OUTLINED_FUNCTION_10_3();
              OUTLINED_FUNCTION_10_3();
              swift_retain();
              swift_retain();
              unint64_t v60 = (char *)sub_1B3D71C38();
              if (v60)
              {
                uint64_t v61 = sub_1B3D71C58();
                uint64_t v62 = v124;
                if (__OFSUB__(v124, v61)) {
                  goto LABEL_123;
                }
                v60 += v124 - v61;
              }
              else
              {
                uint64_t v62 = v124;
              }
              if (__OFSUB__(v59, v62)) {
                goto LABEL_121;
              }
              uint64_t v67 = sub_1B3D71C48();
              if (v43)
              {
                if (v43 == 1)
                {
                  if (v163 < (int)v38) {
                    goto LABEL_129;
                  }
                  swift_retain();
                  char v75 = OUTLINED_FUNCTION_15_3(v128, v163, v39 & 0x3FFFFFFFFFFFFFFFLL);
                  OUTLINED_FUNCTION_9_3();
                }
                else
                {
                  uint64_t v103 = *(void *)(v38 + 16);
                  uint64_t v104 = *(void *)(v38 + 24);
                  swift_retain();
                  swift_retain();
                  char v75 = OUTLINED_FUNCTION_15_3(v103, v104, v39 & 0x3FFFFFFFFFFFFFFFLL);
                  swift_release();
                  swift_release();
                }
                OUTLINED_FUNCTION_9_3();
                swift_release();
                swift_release();
              }
              else
              {
                OUTLINED_FUNCTION_17_1(v67, v68, v69, v70, v71, v72, v73, v74, v118, v33, v35 & 0x3FFFFFFFFFFFFFFFLL, v128, BYTE6(v39), v135, v138, v139, v142, v143);
                BYTE4(__s1[0]) = v44;
                OUTLINED_FUNCTION_6_5(v94, v95, v96, v97, v98, v99, v100, v101, v119, v122, v125, v129, __nb, v136, v140, v144, v146, v147, v148,
                  v149,
                  v150,
                  v151,
                  v152,
                  v153,
                  v154,
                  v155,
                  v156,
                  v157,
                  v158,
                  v159,
                  v161);
                if (!v60) {
                  goto LABEL_138;
                }
                int v102 = memcmp(v60, __s1, __n);
                OUTLINED_FUNCTION_9_3();
                swift_release();
                swift_release();
                char v75 = v102 == 0;
              }
              unint64_t v7 = v170;
              OUTLINED_FUNCTION_9_3();
              goto LABEL_107;
            case 3uLL:
              memset(__s1, 0, 14);
              if (!v43) {
                goto LABEL_70;
              }
              if (v43 == 1)
              {
                if (v48 < (int)v36) {
                  goto LABEL_126;
                }
                uint64_t v49 = (int)v36;
                OUTLINED_FUNCTION_10_3();
                uint64_t v50 = sub_1B3D71C38();
                if (v50)
                {
                  uint64_t v63 = sub_1B3D71C58();
                  if (__OFSUB__((int)v38, v63)) {
                    goto LABEL_134;
                  }
                  v50 += (int)v38 - v63;
                }
                uint64_t v52 = sub_1B3D71C48();
                if (!v50) {
                  goto LABEL_135;
                }
LABEL_62:
                if (v52 >= v48 - v49) {
                  size_t v64 = v48 - v49;
                }
                else {
                  size_t v64 = v52;
                }
                p_s2 = (void *)v50;
LABEL_71:
                int v66 = memcmp(__s1, p_s2, v64);
              }
              else
              {
                uint64_t v90 = *(void *)(v36 + 16);
                uint64_t v91 = *(void *)(v36 + 24);
                OUTLINED_FUNCTION_10_3();
                swift_retain();
                swift_retain();
                v86 = (char *)sub_1B3D71C38();
                if (v86)
                {
                  uint64_t v92 = sub_1B3D71C58();
                  if (__OFSUB__(v90, v92)) {
                    goto LABEL_132;
                  }
                  v86 += v90 - v92;
                }
                BOOL v11 = __OFSUB__(v91, v90);
                int64_t v88 = v91 - v90;
                if (v11) {
                  goto LABEL_128;
                }
                uint64_t v89 = sub_1B3D71C48();
                if (!v86) {
                  goto LABEL_137;
                }
LABEL_93:
                if (v89 >= v88) {
                  size_t v93 = v88;
                }
                else {
                  size_t v93 = v89;
                }
                int v66 = memcmp(__s1, v86, v93);
                swift_release();
                swift_release();
              }
              OUTLINED_FUNCTION_19_1();

              OUTLINED_FUNCTION_9_3();
              OUTLINED_FUNCTION_9_3();

              swift_bridgeObjectRelease();
              char v75 = v66 == 0;
              uint64_t v3 = v167;
              unint64_t v7 = v170;
              int64_t v4 = v171;
LABEL_108:

              swift_bridgeObjectRelease();
              uint64_t v2 = v168;
              if ((v75 & 1) == 0) {
                return 0;
              }
              continue;
            default:
              __s1[0] = v33;
              LOWORD(__s1[1]) = v35;
              BYTE2(__s1[1]) = BYTE2(v35);
              BYTE3(__s1[1]) = BYTE3(v35);
              BYTE4(__s1[1]) = BYTE4(v35);
              BYTE5(__s1[1]) = BYTE5(v35);
              if (!v43)
              {
LABEL_70:
                uint64_t __s2 = v36;
                __int16 v173 = v37;
                char v174 = BYTE2(v37);
                char v175 = BYTE3(v37);
                char v176 = BYTE4(v37);
                char v177 = BYTE5(v37);
                OUTLINED_FUNCTION_10_3();
                p_s2 = &__s2;
                size_t v64 = BYTE6(v39);
                goto LABEL_71;
              }
              if (v43 == 1)
              {
                if (v48 < (int)v36) {
                  goto LABEL_125;
                }
                uint64_t v49 = (int)v36;
                OUTLINED_FUNCTION_10_3();
                uint64_t v50 = sub_1B3D71C38();
                if (v50)
                {
                  uint64_t v51 = sub_1B3D71C58();
                  if (__OFSUB__((int)v38, v51)) {
                    goto LABEL_133;
                  }
                  v50 += (int)v38 - v51;
                }
                uint64_t v52 = sub_1B3D71C48();
                if (!v50)
                {
                  __break(1u);
LABEL_135:
                  __break(1u);
LABEL_136:
                  __break(1u);
LABEL_137:
                  __break(1u);
LABEL_138:
                  __break(1u);
LABEL_139:
                  __break(1u);
                  JUMPOUT(0x1B3C919DCLL);
                }
                goto LABEL_62;
              }
              uint64_t v84 = *(void *)(v36 + 16);
              uint64_t v85 = *(void *)(v36 + 24);
              OUTLINED_FUNCTION_10_3();
              swift_retain();
              swift_retain();
              v86 = (char *)sub_1B3D71C38();
              if (v86)
              {
                uint64_t v87 = sub_1B3D71C58();
                if (__OFSUB__(v84, v87)) {
                  goto LABEL_131;
                }
                v86 += v84 - v87;
              }
              BOOL v11 = __OFSUB__(v85, v84);
              int64_t v88 = v85 - v84;
              if (v11) {
                goto LABEL_127;
              }
              uint64_t v89 = sub_1B3D71C48();
              if (!v86) {
                goto LABEL_136;
              }
              goto LABEL_93;
          }
        }
LABEL_47:
        OUTLINED_FUNCTION_9_3();
        OUTLINED_FUNCTION_19_1();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v3 = v167;
        uint64_t v2 = v168;
        unint64_t v7 = v170;
        int64_t v4 = v171;
        break;
      case 2uLL:
        uint64_t v47 = *(void *)(v36 + 16);
        uint64_t v46 = *(void *)(v36 + 24);
        BOOL v11 = __OFSUB__(v46, v47);
        uint64_t v45 = v46 - v47;
        if (!v11) {
          goto LABEL_35;
        }
        goto LABEL_118;
      case 3uLL:
        if (!v40) {
          goto LABEL_47;
        }
        goto LABEL_112;
      default:
        uint64_t v45 = BYTE6(v37);
        goto LABEL_35;
    }
  }

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1B3C91A0C(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    uint64_t v154 = a1 + 64;
    OUTLINED_FUNCTION_13_0();
    unint64_t v7 = v6 & v5;
    int64_t v155 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v157 = a2;
    uint64_t v156 = v3;
    while (1)
    {
      if (v7)
      {
        unint64_t v9 = __clz(__rbit64(v7)) | (v4 << 6);
      }
      else
      {
        int64_t v10 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
        }
        if (v10 >= v155) {
          return 1;
        }
        if (!*(void *)(v154 + 8 * v10))
        {
          if (v4 + 2 >= v155) {
            return 1;
          }
          if (!*(void *)(v154 + 8 * (v4 + 2)))
          {
            if (v4 + 3 >= v155) {
              return 1;
            }
            if (!*(void *)(v154 + 8 * (v4 + 3)))
            {
              uint64_t v11 = v4 + 4;
              if (v4 + 4 >= v155) {
                return 1;
              }
              if (!*(void *)(v154 + 8 * v11))
              {
                do
                {
                  int64_t v12 = v11 + 1;
                  if (__OFADD__(v11, 1)) {
                    goto LABEL_150;
                  }
                  if (v12 >= v155) {
                    return 1;
                  }
                  ++v11;
                }
                while (!*(void *)(v154 + 8 * v12));
              }
            }
          }
        }
        OUTLINED_FUNCTION_29_0();
        unint64_t v9 = v13 + (v14 << 6);
      }
      uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
      uint64_t v17 = *v15;
      uint64_t v16 = v15[1];
      uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + 32 * v9);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      uint64_t v22 = v18[2];
      unint64_t v21 = v18[3];
      sub_1B3D72278();
      sub_1B3D72278();
      OUTLINED_FUNCTION_5_4();
      unint64_t v23 = sub_1B3C93F04(v17, v16);
      LOBYTE(v17) = v24;
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        break;
      }
      char v25 = (void *)(*(void *)(v157 + 56) + 32 * v23);
      uint64_t v26 = v25[1];
      uint64_t v28 = v25[2];
      unint64_t v27 = v25[3];
      BOOL v29 = *v25 == v19 && v26 == v20;
      if (!v29 && (sub_1B3D72E58() & 1) == 0) {
        break;
      }
      unint64_t v30 = v21 >> 62;
      uint64_t v31 = 0;
      switch(v27 >> 62)
      {
        case 1uLL:
          LODWORD(v31) = HIDWORD(v28) - v28;
          if (__OFSUB__(HIDWORD(v28), v28)) {
            goto LABEL_145;
          }
          uint64_t v31 = (int)v31;
          break;
        case 2uLL:
          uint64_t v33 = *(void *)(v28 + 16);
          uint64_t v32 = *(void *)(v28 + 24);
          BOOL v34 = __OFSUB__(v32, v33);
          uint64_t v31 = v32 - v33;
          if (!v34) {
            break;
          }
          goto LABEL_146;
        case 3uLL:
          break;
        default:
          uint64_t v31 = BYTE6(v27);
          break;
      }
      switch((int)v30)
      {
        case 1:
          LODWORD(v35) = HIDWORD(v22) - v22;
          if (__OFSUB__(HIDWORD(v22), v22)) {
            goto LABEL_147;
          }
          uint64_t v35 = (int)v35;
LABEL_35:
          if (v31 != v35) {
            goto LABEL_142;
          }
          if (v31 < 1)
          {
LABEL_47:
            swift_bridgeObjectRelease();
            uint64_t v44 = OUTLINED_FUNCTION_8_6();
            uint64_t v3 = OUTLINED_FUNCTION_27_0(v44, v45, v46, v47, v48, v49, v50, v51, v132, (uint64_t)v133, v136, __n, v139, v140, v141, v142, v143, v144, v145,
                   v146,
                   v147,
                   v148,
                   v149,
                   v150,
                   v151,
                   v152,
                   v154,
                   v155,
                   v156);
          }
          else
          {
            uint64_t v153 = (int)v22;
            uint64_t v38 = v22 >> 32;
            switch(v27 >> 62)
            {
              case 1uLL:
                if ((int)v28 > v28 >> 32) {
                  goto LABEL_149;
                }
                OUTLINED_FUNCTION_16_2();
                OUTLINED_FUNCTION_5_4();
                OUTLINED_FUNCTION_5_4();
                OUTLINED_FUNCTION_5_4();
                uint64_t v151 = v26;
                sub_1B3D72278();
                OUTLINED_FUNCTION_14_2();
                OUTLINED_FUNCTION_14_2();
                uint64_t v52 = (char *)sub_1B3D71C38();
                if (!v52) {
                  goto LABEL_52;
                }
                uint64_t v53 = sub_1B3D71C58();
                if (__OFSUB__((int)v28, v53)) {
                  goto LABEL_152;
                }
                v52 += (int)v28 - v53;
LABEL_52:
                uint64_t v54 = sub_1B3D71C48();
                if (!v30)
                {
                  OUTLINED_FUNCTION_1_5(v54, v55, v56, v57, v58, v59, v60, v61, v132, (uint64_t)v133, v136, __n, v139, SHIDWORD(v139), v140, SHIDWORD(v140), v141, SHIDWORD(v141), v142,
                    SHIDWORD(v142),
                    v143,
                    SHIDWORD(v143),
                    v144,
                    SHIDWORD(v144),
                    v145,
                    SHIDWORD(v145),
                    v146,
                    SHIDWORD(v146),
                    v147,
                    SHIDWORD(v147),
                    v148,
                    SHIDWORD(v148),
                    v149);
                  if (!v52) {
                    goto LABEL_173;
                  }
                  int v71 = memcmp(v52, __s1, __n);
LABEL_136:
                  OUTLINED_FUNCTION_8_6();
                  OUTLINED_FUNCTION_31_0();
                  goto LABEL_137;
                }
                if (v30 == 1)
                {
                  if (v150 < (int)v22) {
                    goto LABEL_159;
                  }
                  swift_retain();
                  uint64_t v62 = sub_1B3D71C38();
                  if (v62)
                  {
                    uint64_t v63 = v62;
                    uint64_t v64 = sub_1B3D71C58();
                    if (__OFSUB__((int)v22, v64)) {
                      goto LABEL_168;
                    }
                    uint64_t v65 = v63 + (int)v22 - v64;
                  }
                  else
                  {
                    uint64_t v65 = 0;
                  }
                  uint64_t v121 = sub_1B3D71C48();
                  int64_t v122 = v150 - (int)v22;
                  if (v121 < v122) {
                    int64_t v122 = v121;
                  }
                  if (!v52) {
                    goto LABEL_180;
                  }
                  if (!v65) {
                    goto LABEL_181;
                  }
                  int v71 = OUTLINED_FUNCTION_32_0(v122);
                  OUTLINED_FUNCTION_8_6();
                  goto LABEL_136;
                }
                uint64_t v101 = *(void *)(v22 + 16);
                uint64_t v153 = *(void *)(v22 + 24);
                swift_retain();
                swift_retain();
                uint64_t v102 = sub_1B3D71C38();
                if (v102)
                {
                  uint64_t v103 = v102;
                  uint64_t v104 = sub_1B3D71C58();
                  if (__OFSUB__(v101, v104)) {
                    goto LABEL_167;
                  }
                  uint64_t v105 = v103 + v101 - v104;
                }
                else
                {
                  uint64_t v105 = 0;
                }
                if (__OFSUB__(v153, v101)) {
                  goto LABEL_160;
                }
                uint64_t v119 = sub_1B3D71C48();
                if (v119 >= v153 - v101) {
                  size_t v120 = v153 - v101;
                }
                else {
                  size_t v120 = v119;
                }
                if (!v52) {
                  goto LABEL_178;
                }
                if (!v105) {
                  goto LABEL_179;
                }
                int v71 = OUTLINED_FUNCTION_32_0(v120);
                swift_release();
                swift_release();
                OUTLINED_FUNCTION_8_6();
                OUTLINED_FUNCTION_31_0();
LABEL_137:
                swift_bridgeObjectRelease();
LABEL_138:
                OUTLINED_FUNCTION_31_0();
LABEL_139:
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_8_6();
                OUTLINED_FUNCTION_8_6();
                uint64_t v123 = OUTLINED_FUNCTION_8_6();
                uint64_t v3 = OUTLINED_FUNCTION_27_0(v123, v124, v125, v126, v127, v128, v129, v130, v132, (uint64_t)v133, v136, __n, v139, v140, v141, v142, v143, v144, v145,
                       v146,
                       v147,
                       v148,
                       v149,
                       v150,
                       v151,
                       v153,
                       v154,
                       v155,
                       v156);
                if (v71) {
                  return 0;
                }
                break;
              case 2uLL:
                OUTLINED_FUNCTION_16_2();
                uint64_t v134 = *(char **)(v28 + 16);
                OUTLINED_FUNCTION_5_4();
                OUTLINED_FUNCTION_5_4();
                OUTLINED_FUNCTION_5_4();
                sub_1B3D72278();
                OUTLINED_FUNCTION_14_2();
                swift_retain();
                swift_retain();
                uint64_t v66 = sub_1B3D71C38();
                uint64_t v137 = v27 & 0x3FFFFFFFFFFFFFFFLL;
                if (v66)
                {
                  uint64_t v67 = v66;
                  uint64_t v68 = sub_1B3D71C58();
                  if (__OFSUB__(v134, v68)) {
                    goto LABEL_151;
                  }
                  char v135 = &v134[v67 - v68];
                }
                else
                {
                  char v135 = 0;
                }
                uint64_t v72 = sub_1B3D71C48();
                if (!v30)
                {
                  OUTLINED_FUNCTION_1_5(v72, v73, v74, v75, v76, v77, v78, v79, v132, (uint64_t)v135, v137, __n, v139, SHIDWORD(v139), v140, SHIDWORD(v140), v141, SHIDWORD(v141), v142,
                    SHIDWORD(v142),
                    v143,
                    SHIDWORD(v143),
                    v144,
                    SHIDWORD(v144),
                    v145,
                    SHIDWORD(v145),
                    v146,
                    SHIDWORD(v146),
                    v147,
                    SHIDWORD(v147),
                    v148,
                    SHIDWORD(v148),
                    v149);
                  if (!v135) {
                    goto LABEL_172;
                  }
                  int v94 = memcmp(v135, __s1, __n);
                  OUTLINED_FUNCTION_8_6();
LABEL_119:
                  swift_release();
                  swift_release();
                  goto LABEL_120;
                }
                if (v30 == 1)
                {
                  if (v150 < (int)v22) {
                    goto LABEL_155;
                  }
                  swift_retain();
                  uint64_t v80 = sub_1B3D71C38();
                  if (v80)
                  {
                    uint64_t v81 = v80;
                    uint64_t v82 = sub_1B3D71C58();
                    if (__OFSUB__((int)v22, v82)) {
                      goto LABEL_166;
                    }
                    uint64_t v83 = (const void *)(v81 + (int)v22 - v82);
                  }
                  else
                  {
                    uint64_t v83 = 0;
                  }
                  uint64_t v109 = sub_1B3D71C48();
                  int64_t v110 = v150 - (int)v22;
                  if (v109 < v110) {
                    int64_t v110 = v109;
                  }
                  if (!v135) {
                    goto LABEL_176;
                  }
                  if (!v83) {
                    goto LABEL_177;
                  }
                  int v94 = memcmp(v135, v83, v110);
                  OUTLINED_FUNCTION_8_6();
                  OUTLINED_FUNCTION_8_6();
                  goto LABEL_119;
                }
                uint64_t v95 = *(void *)(v22 + 16);
                uint64_t v96 = *(void *)(v22 + 24);
                swift_retain();
                swift_retain();
                uint64_t v97 = sub_1B3D71C38();
                if (v97)
                {
                  uint64_t v98 = v97;
                  uint64_t v99 = sub_1B3D71C58();
                  if (__OFSUB__(v95, v99)) {
                    goto LABEL_165;
                  }
                  uint64_t v100 = (const void *)(v98 + v95 - v99);
                }
                else
                {
                  uint64_t v100 = 0;
                }
                BOOL v34 = __OFSUB__(v96, v95);
                int64_t v106 = v96 - v95;
                if (v34) {
                  goto LABEL_158;
                }
                uint64_t v107 = sub_1B3D71C48();
                if (v107 >= v106) {
                  size_t v108 = v106;
                }
                else {
                  size_t v108 = v107;
                }
                if (!v135) {
                  goto LABEL_174;
                }
                if (!v100) {
                  goto LABEL_175;
                }
                int v94 = memcmp(v135, v100, v108);
                swift_release();
                swift_release();
                OUTLINED_FUNCTION_8_6();
                swift_release();
                swift_release();
LABEL_120:
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_31_0();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_8_6();
                OUTLINED_FUNCTION_8_6();
                uint64_t v111 = OUTLINED_FUNCTION_8_6();
                uint64_t v3 = OUTLINED_FUNCTION_27_0(v111, v112, v113, v114, v115, v116, v117, v118, v132, (uint64_t)v135, v137, __n, v139, v140, v141, v142, v143, v144, v145,
                       v146,
                       v147,
                       v148,
                       v149,
                       v150,
                       v26,
                       (int)v22,
                       v154,
                       v155,
                       v156);
                if (v94) {
                  return 0;
                }
                continue;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v30) {
                  goto LABEL_72;
                }
                if (v30 == 1)
                {
                  if (v38 < (int)v22) {
                    goto LABEL_154;
                  }
                  uint64_t v39 = v22 >> 32;
                  OUTLINED_FUNCTION_5_4();
                  OUTLINED_FUNCTION_5_4();
                  sub_1B3D72278();
                  OUTLINED_FUNCTION_14_2();
                  uint64_t v40 = (char *)sub_1B3D71C38();
                  uint64_t v41 = (int)v22;
                  if (v40)
                  {
                    uint64_t v69 = sub_1B3D71C58();
                    if (__OFSUB__((int)v22, v69)) {
                      goto LABEL_164;
                    }
                    v40 += (int)v22 - v69;
                  }
                  uint64_t v43 = sub_1B3D71C48();
                  if (!v40) {
                    goto LABEL_169;
                  }
LABEL_68:
                  if (v43 >= v39 - v41) {
                    size_t v70 = v39 - v41;
                  }
                  else {
                    size_t v70 = v43;
                  }
                  int v71 = memcmp(__s1, v40, v70);
                  goto LABEL_137;
                }
                uint64_t v90 = *(void *)(v22 + 16);
                uint64_t v91 = *(void *)(v22 + 24);
                OUTLINED_FUNCTION_5_4();
                OUTLINED_FUNCTION_5_4();
                sub_1B3D72278();
                OUTLINED_FUNCTION_14_2();
                swift_retain();
                swift_retain();
                v86 = (char *)sub_1B3D71C38();
                if (v86)
                {
                  uint64_t v92 = sub_1B3D71C58();
                  if (__OFSUB__(v90, v92)) {
                    goto LABEL_162;
                  }
                  v86 += v90 - v92;
                }
                BOOL v34 = __OFSUB__(v91, v90);
                int64_t v88 = v91 - v90;
                if (v34) {
                  goto LABEL_157;
                }
                uint64_t v89 = sub_1B3D71C48();
                if (!v86) {
                  goto LABEL_171;
                }
LABEL_91:
                if (v89 >= v88) {
                  size_t v93 = v88;
                }
                else {
                  size_t v93 = v89;
                }
                int v71 = memcmp(__s1, v86, v93);
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                goto LABEL_138;
              default:
                __s1[0] = v28;
                LOWORD(__s1[1]) = v27;
                BYTE2(__s1[1]) = BYTE2(v27);
                BYTE3(__s1[1]) = BYTE3(v27);
                BYTE4(__s1[1]) = BYTE4(v27);
                BYTE5(__s1[1]) = BYTE5(v27);
                if (!v30)
                {
LABEL_72:
                  uint64_t __s2 = v22;
                  __int16 v159 = v21;
                  char v160 = BYTE2(v21);
                  char v161 = BYTE3(v21);
                  char v162 = BYTE4(v21);
                  char v163 = BYTE5(v21);
                  OUTLINED_FUNCTION_5_4();
                  OUTLINED_FUNCTION_5_4();
                  int v71 = memcmp(__s1, &__s2, BYTE6(v21));
                  goto LABEL_139;
                }
                if (v30 == 1)
                {
                  if (v38 < (int)v22) {
                    goto LABEL_153;
                  }
                  uint64_t v39 = v22 >> 32;
                  OUTLINED_FUNCTION_5_4();
                  OUTLINED_FUNCTION_5_4();
                  sub_1B3D72278();
                  OUTLINED_FUNCTION_14_2();
                  uint64_t v40 = (char *)sub_1B3D71C38();
                  uint64_t v41 = (int)v22;
                  if (v40)
                  {
                    uint64_t v42 = sub_1B3D71C58();
                    if (__OFSUB__((int)v22, v42)) {
                      goto LABEL_163;
                    }
                    v40 += (int)v22 - v42;
                  }
                  uint64_t v43 = sub_1B3D71C48();
                  if (!v40)
                  {
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
LABEL_178:
                    __break(1u);
LABEL_179:
                    __break(1u);
LABEL_180:
                    __break(1u);
LABEL_181:
                    __break(1u);
                    JUMPOUT(0x1B3C92458);
                  }
                  goto LABEL_68;
                }
                uint64_t v84 = *(void *)(v22 + 16);
                uint64_t v85 = *(void *)(v22 + 24);
                OUTLINED_FUNCTION_5_4();
                OUTLINED_FUNCTION_5_4();
                sub_1B3D72278();
                OUTLINED_FUNCTION_14_2();
                swift_retain();
                swift_retain();
                v86 = (char *)sub_1B3D71C38();
                if (v86)
                {
                  uint64_t v87 = sub_1B3D71C58();
                  if (__OFSUB__(v84, v87)) {
                    goto LABEL_161;
                  }
                  v86 += v84 - v87;
                }
                BOOL v34 = __OFSUB__(v85, v84);
                int64_t v88 = v85 - v84;
                if (v34) {
                  goto LABEL_156;
                }
                uint64_t v89 = sub_1B3D71C48();
                if (!v86) {
                  goto LABEL_170;
                }
                goto LABEL_91;
            }
          }
          break;
        case 2:
          uint64_t v37 = *(void *)(v22 + 16);
          uint64_t v36 = *(void *)(v22 + 24);
          BOOL v34 = __OFSUB__(v36, v37);
          uint64_t v35 = v36 - v37;
          if (!v34) {
            goto LABEL_35;
          }
          goto LABEL_148;
        case 3:
          if (!v31) {
            goto LABEL_47;
          }
          goto LABEL_142;
        default:
          uint64_t v35 = BYTE6(v21);
          goto LABEL_35;
      }
    }
LABEL_142:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_6();
  }
  return 0;
}

uint64_t sub_1B3C92488(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001B3D89CC0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1B3C92510()
{
  return 0xD000000000000012;
}

uint64_t sub_1B3C9252C()
{
  return sub_1B3C7A3D0();
}

uint64_t sub_1B3C9254C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C92488(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B3C92578()
{
  return sub_1B3C72F38();
}

uint64_t sub_1B3C92594@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_67();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B3C925C0(uint64_t a1)
{
  unint64_t v2 = sub_1B3C94978();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C925FC(uint64_t a1)
{
  unint64_t v2 = sub_1B3C94978();
  return MEMORY[0x1F41862B0](a1, v2);
}

void LinkSnapshot.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  unint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2B00);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1B3C94978();
  sub_1B3D73178();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2B10);
  sub_1B3C94A10(&qword_1E9CE2B18, (void (*)(void))sub_1B3C949C4);
  sub_1B3D72C18();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  OUTLINED_FUNCTION_26();
}

uint64_t LinkSnapshot.hashValue.getter()
{
  return sub_1B3D73138();
}

void LinkSnapshot.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_21();
  int64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2B28);
  OUTLINED_FUNCTION_0();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_5_1();
  uint64_t v21 = v20 - v19;
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1B3C94978();
  sub_1B3D73158();
  if (!v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2B10);
    sub_1B3C94A10(&qword_1E9CE2B30, (void (*)(void))sub_1B3C94A8C);
    sub_1B3D72B68();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
    void *v14 = a10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  OUTLINED_FUNCTION_26();
}

VoiceShortcutClient::LinkSnapshot sub_1B3C9294C()
{
  return static LinkSnapshot.empty.getter();
}

VoiceShortcutClient::LinkSnapshot static LinkSnapshot.empty.getter()
{
  return LinkSnapshot.init(state:)(MEMORY[0x1E4FBC860]);
}

uint64_t sub_1B3C92980()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1B3C92A30;
  return static LinkSnapshot.partial(_:failIfContainerNotFound:)();
}

uint64_t sub_1B3C92A30()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t static LinkSnapshot.partial(_:failIfContainerNotFound:)()
{
  OUTLINED_FUNCTION_3();
  *(unsigned char *)(v0 + 56) = v1;
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1B3C92B98;
  return static LinkSnapshot.complete()();
}

uint64_t sub_1B3C92B98()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  *(void *)(v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1B3C92D7C;
  }
  else {
    uint64_t v2 = sub_1B3C92C84;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B3C92C84()
{
  int v1 = *(unsigned __int8 *)(v0 + 56);
  sub_1B3D72278();
  uint64_t v2 = OUTLINED_FUNCTION_20_1();
  uint64_t v4 = sub_1B3C9422C(v2, v3);
  swift_bridgeObjectRelease();
  if (v1 == 1 && *(void *)(v4 + 16) < *(void *)(*(void *)(v0 + 32) + 16))
  {
    swift_release();
    sub_1B3C94AD8();
    swift_allocError();
    swift_willThrow();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    **(void **)(v0 + 24) = v4;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_1B3C92D7C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B3C92D94()
{
  OUTLINED_FUNCTION_3();
  int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *int v1 = v0;
  v1[1] = sub_1B3C9533C;
  return static LinkSnapshot.complete()();
}

uint64_t static LinkSnapshot.complete()()
{
  OUTLINED_FUNCTION_3();
  *(void *)(v0 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1B3C92EB4, 0, 0);
}

uint64_t sub_1B3C92EB4()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F72CE0]), sel_init);
  *(void *)(v0 + 16) = 0;
  id v2 = objc_msgSend(v1, sel_bundleRegistrationsWithError_, v0 + 16);
  uint64_t v3 = *(void **)(v0 + 16);
  if (!v2)
  {
    id v25 = v3;
    sub_1B3D71D38();

    swift_willThrow();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_17;
  }
  uint64_t v4 = v2;
  sub_1B3C94B24();
  unint64_t v5 = sub_1B3D72458();
  id v6 = v3;

  if (v5 >> 62)
  {
    sub_1B3D72278();
    uint64_t v7 = sub_1B3D72A68();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7)
    {
LABEL_4:
      uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
      sub_1B3C93B44(0, v7 & ~(v7 >> 63), 0);
      if (v7 < 0) {
        __break(1u);
      }
      id v28 = v1;
      uint64_t v29 = v0;
      uint64_t v8 = 0;
      v9._rawValue = v31;
      unint64_t v30 = v5 & 0xC000000000000001;
      unint64_t v10 = v5;
      uint64_t v11 = v7;
      do
      {
        if (v30) {
          id v12 = (id)MEMORY[0x1B3EC4490](v8, v5);
        }
        else {
          id v12 = *(id *)(v5 + 8 * v8 + 32);
        }
        uint64_t v13 = v12;
        id v14 = objc_msgSend(v12, sel_bundleIdentifier);
        uint64_t v15 = sub_1B3D723A8();
        uint64_t v17 = v16;

        id v18 = objc_msgSend(v13, sel_installIdentifier);
        uint64_t v19 = sub_1B3D71DF8();
        uint64_t v21 = v20;

        unint64_t v23 = v31[2];
        unint64_t v22 = v31[3];
        if (v23 >= v22 >> 1) {
          sub_1B3C93B44((char *)(v22 > 1), v23 + 1, 1);
        }
        ++v8;
        v31[2] = v23 + 1;
        char v24 = &v31[4 * v23];
        v24[4] = v15;
        v24[5] = v17;
        v24[6] = v19;
        v24[7] = v21;
        unint64_t v5 = v10;
      }
      while (v11 != v8);
      swift_bridgeObjectRelease();
      id v1 = v28;
      uint64_t v0 = v29;
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  v9._rawValue = (void *)MEMORY[0x1E4FBC860];
LABEL_16:
  LinkSnapshot.init(state:)(v9);

  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
LABEL_17:
  return v26();
}

Swift::Bool __swiftcall LinkSnapshot.isEqualInProvenance(to:)(VoiceShortcutClient::LinkSnapshot to)
{
  return 1;
}

VoiceShortcutClient::LinkSnapshot sub_1B3C931A4(Swift::OpaquePointer a1)
{
  return LinkSnapshot.setting(stateByContainerId:)(a1);
}

void sub_1B3C931BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LinkSnapshot.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B3C931D4()
{
}

uint64_t sub_1B3C931F4()
{
  return sub_1B3D73138();
}

uint64_t LinkSnapshot.debugDescription.getter()
{
  return 0x616E536B6E694C3CLL;
}

char *sub_1B3C93320(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_2();
    uint64_t result = (char *)OUTLINED_FUNCTION_4_4();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_3_6(a3, result);
  }
  return result;
}

char *sub_1B3C9337C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B3D72AA8();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_1B3C93414(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_2();
    uint64_t result = (char *)OUTLINED_FUNCTION_4_4();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_3_6(a3, result);
  }
  return result;
}

char *sub_1B3C93470(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_2();
    uint64_t result = (char *)OUTLINED_FUNCTION_4_4();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_3_6(a3, result);
  }
  return result;
}

char *sub_1B3C934D4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B3D72AA8();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_1B3C93570(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1B3D72AA8();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

char *sub_1B3C93604(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_2();
    uint64_t result = (char *)OUTLINED_FUNCTION_4_4();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_3_6(a3, result);
  }
  return result;
}

uint64_t sub_1B3C93668(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    OUTLINED_FUNCTION_2_2();
    uint64_t result = sub_1B3D72AA8();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1B3C93730(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (BOOL v3 = a1 + 24 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_1B3D72AA8();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1B3C93814(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (BOOL v3 = a1 + 40 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    OUTLINED_FUNCTION_2_2();
    uint64_t result = sub_1B3D72AA8();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2908);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1B3C93900(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 48 * a2 > a1 ? (BOOL v3 = a1 + 48 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_1B3D72AA8();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE29A8);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1B3C93A04(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_1B3D72AA8();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

char *sub_1B3C93AE4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B3C93B64(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

char *sub_1B3C93B04(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B3C93C48(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

char *sub_1B3C93B24(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B3C93D34(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

char *sub_1B3C93B44(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1B3C93E20(a1, a2, a3, *v3);
  *BOOL v3 = (uint64_t)result;
  return result;
}

char *sub_1B3C93B64(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2920);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1B3C93320(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B3C93668((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_1B3C93C48(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2BB0);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1B3C9337C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B3C93730((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_1B3C93D34(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2BB8);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1B3C934D4(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B3C93900((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_1B3C93E20(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2060);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1B3C93570(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1B3C93A04((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

unint64_t sub_1B3C93F04(uint64_t a1, uint64_t a2)
{
  sub_1B3D73108();
  sub_1B3D723E8();
  uint64_t v4 = sub_1B3D73138();
  return sub_1B3C93FC0(a1, a2, v4);
}

unint64_t sub_1B3C93F7C(uint64_t a1)
{
  uint64_t v2 = sub_1B3D730F8();
  return sub_1B3C940A4(a1, v2);
}

unint64_t sub_1B3C93FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1B3D72E58() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1B3D72E58() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1B3C940A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void sub_1B3C94140(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1B3C7532C(a3, a4);
  }
}

uint64_t sub_1B3C9418C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result = sub_1B3D71C38();
  uint64_t v8 = (char *)result;
  if (result)
  {
    uint64_t result = sub_1B3D71C58();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  int64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t result = sub_1B3D71C48();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = result;
  }
  return memcmp(a4, v8, v11) == 0;
}

uint64_t sub_1B3C9422C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1;
  v13[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    BOOL v9 = (void *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1B3CC3164(0, v7, v9);
    sub_1B3D72278();
    uint64_t v10 = sub_1B3C943F0((uint64_t)v9, v7, v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      uint64_t v4 = v10;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    size_t v11 = (void *)swift_slowAlloc();
    sub_1B3CC3164(0, v7, v11);
    sub_1B3D72278();
    uint64_t v4 = sub_1B3C943F0((uint64_t)v11, v7, v4, a2);
    MEMORY[0x1B3EC61A0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B3C943F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v25 = (unint64_t *)result;
  uint64_t v26 = 0;
  int64_t v5 = 0;
  uint64_t v27 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v28 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v28) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    ++v5;
    if (!v12)
    {
      int64_t v5 = v11 + 1;
      if (v11 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v5);
      if (!v12)
      {
        int64_t v5 = v11 + 2;
        if (v11 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v5);
        if (!v12) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
LABEL_20:
    BOOL v14 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(a3 + 56) + 32 * v10;
    uint64_t v18 = *(void *)(v17 + 16);
    unint64_t v19 = *(void *)(v17 + 24);
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3C7D8EC(v18, v19);
    sub_1B3CC0E8C(v15, v16, a4);
    LOBYTE(v15) = v20;
    swift_bridgeObjectRelease();
    sub_1B3C7532C(v18, v19);
    uint64_t result = swift_bridgeObjectRelease();
    if (v15)
    {
      *(unint64_t *)((char *)v25 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1B3CC37AC(v25, a2, v26, a3);
        uint64_t v23 = v22;
        swift_bridgeObjectRelease();
        return v23;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v28) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12)
  {
    int64_t v5 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1B3C94618()
{
  uint64_t result = OUTLINED_FUNCTION_7_5();
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  if (!v0) {
    goto LABEL_3;
  }
LABEL_2:
  OUTLINED_FUNCTION_22_2();
  while (1)
  {
    uint64_t v7 = *(void **)(*(void *)(v15 + 56) + 24 * v4 + 16);
    OUTLINED_FUNCTION_18_2();
    sub_1B3D72278();
    sub_1B3D72278();
    id v8 = v7;
    sub_1B3D723E8();
    swift_bridgeObjectRelease();
    sub_1B3D72278();
    sub_1B3D723E8();
    swift_bridgeObjectRelease();
    id v9 = v8;
    uint64_t v10 = sub_1B3D71DF8();
    unint64_t v12 = v11;
    sub_1B3D71E08();
    sub_1B3C7532C(v10, v12);
    swift_bridgeObjectRelease();

    uint64_t result = sub_1B3D73138();
    v2 ^= result;
    if (v0) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v5 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v5 >= v13) {
      goto LABEL_17;
    }
    ++v3;
    if (!*(void *)(v14 + 8 * v5))
    {
      uint64_t v3 = v5 + 1;
      if (v5 + 1 >= v13) {
        goto LABEL_17;
      }
      if (!*(void *)(v14 + 8 * v3)) {
        break;
      }
    }
LABEL_14:
    OUTLINED_FUNCTION_21_2();
  }
  uint64_t v6 = v5 + 2;
  if (v6 >= v13)
  {
LABEL_17:
    swift_release();
    return sub_1B3D73118();
  }
  if (*(void *)(v14 + 8 * v6))
  {
    uint64_t v3 = v6;
    goto LABEL_14;
  }
  while (1)
  {
    uint64_t v3 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v3 >= v13) {
      goto LABEL_17;
    }
    ++v6;
    if (*(void *)(v14 + 8 * v3)) {
      goto LABEL_14;
    }
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1B3C947CC()
{
  uint64_t result = OUTLINED_FUNCTION_7_5();
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  if (!v0) {
    goto LABEL_3;
  }
LABEL_2:
  OUTLINED_FUNCTION_22_2();
  while (1)
  {
    uint64_t v7 = *(void *)(v12 + 56) + 32 * v4;
    uint64_t v8 = *(void *)(v7 + 16);
    unint64_t v9 = *(void *)(v7 + 24);
    OUTLINED_FUNCTION_18_2();
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3C7D8EC(v8, v9);
    sub_1B3D723E8();
    swift_bridgeObjectRelease();
    sub_1B3D72278();
    sub_1B3D723E8();
    swift_bridgeObjectRelease();
    sub_1B3C7D8EC(v8, v9);
    sub_1B3D71E08();
    sub_1B3C7532C(v8, v9);
    swift_bridgeObjectRelease();
    sub_1B3C7532C(v8, v9);
    uint64_t result = sub_1B3D73138();
    v2 ^= result;
    if (v0) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v5 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v5 >= v10) {
      goto LABEL_17;
    }
    ++v3;
    if (!*(void *)(v11 + 8 * v5))
    {
      uint64_t v3 = v5 + 1;
      if (v5 + 1 >= v10) {
        goto LABEL_17;
      }
      if (!*(void *)(v11 + 8 * v3)) {
        break;
      }
    }
LABEL_14:
    OUTLINED_FUNCTION_21_2();
  }
  uint64_t v6 = v5 + 2;
  if (v6 >= v10)
  {
LABEL_17:
    swift_release();
    return sub_1B3D73118();
  }
  if (*(void *)(v11 + 8 * v6))
  {
    uint64_t v3 = v6;
    goto LABEL_14;
  }
  while (1)
  {
    uint64_t v3 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v3 >= v10) {
      goto LABEL_17;
    }
    ++v6;
    if (*(void *)(v11 + 8 * v3)) {
      goto LABEL_14;
    }
  }
LABEL_19:
  __break(1u);
  return result;
}

unint64_t sub_1B3C94978()
{
  unint64_t result = qword_1E9CE2B08;
  if (!qword_1E9CE2B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B08);
  }
  return result;
}

unint64_t sub_1B3C949C4()
{
  unint64_t result = qword_1E9CE2B20;
  if (!qword_1E9CE2B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B20);
  }
  return result;
}

uint64_t sub_1B3C94A10(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE2B10);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B3C94A8C()
{
  unint64_t result = qword_1E9CE2B38;
  if (!qword_1E9CE2B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B38);
  }
  return result;
}

unint64_t sub_1B3C94AD8()
{
  unint64_t result = qword_1E9CE2B50;
  if (!qword_1E9CE2B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B50);
  }
  return result;
}

unint64_t sub_1B3C94B24()
{
  unint64_t result = qword_1E9CE2040;
  if (!qword_1E9CE2040)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9CE2040);
  }
  return result;
}

unint64_t sub_1B3C94B68()
{
  unint64_t result = qword_1E9CE2B58;
  if (!qword_1E9CE2B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B58);
  }
  return result;
}

unint64_t sub_1B3C94BC0()
{
  unint64_t result = qword_1E9CE2B60[0];
  if (!qword_1E9CE2B60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9CE2B60);
  }
  return result;
}

unint64_t sub_1B3C94C0C(void *a1)
{
  a1[1] = sub_1B3C94C4C();
  a1[2] = sub_1B3C94C98();
  a1[3] = sub_1B3C94CE4();
  unint64_t result = sub_1B3C94D30();
  a1[4] = result;
  return result;
}

unint64_t sub_1B3C94C4C()
{
  unint64_t result = qword_1E9CE1F78;
  if (!qword_1E9CE1F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1F78);
  }
  return result;
}

unint64_t sub_1B3C94C98()
{
  unint64_t result = qword_1E9CE1F70;
  if (!qword_1E9CE1F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1F70);
  }
  return result;
}

unint64_t sub_1B3C94CE4()
{
  unint64_t result = qword_1E9CE1F50;
  if (!qword_1E9CE1F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1F50);
  }
  return result;
}

unint64_t sub_1B3C94D30()
{
  unint64_t result = qword_1E9CE1F58;
  if (!qword_1E9CE1F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1F58);
  }
  return result;
}

unint64_t sub_1B3C94D80()
{
  unint64_t result = qword_1E9CE1F60;
  if (!qword_1E9CE1F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1F60);
  }
  return result;
}

void type metadata accessor for LinkSnapshot()
{
}

uint64_t destroy for LinkSnapshot.State(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  return sub_1B3C7532C(v2, v3);
}

void *initializeWithCopy for LinkSnapshot.State(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_1B3D72278();
  sub_1B3C7D8EC(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

void *assignWithCopy for LinkSnapshot.State(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_1B3C7D8EC(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1B3C7532C(v6, v7);
  return a1;
}

void *assignWithTake for LinkSnapshot.State(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1B3C7532C(v5, v6);
  return a1;
}

void type metadata accessor for LinkSnapshot.State()
{
}

void type metadata accessor for LinkSnapshot.FetchError()
{
}

unsigned char *_s19VoiceShortcutClient12LinkSnapshotV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        char *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      char *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3C94FD0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkSnapshot.CodingKeys()
{
  return &type metadata for LinkSnapshot.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LinkSnapshot.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3C950D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkSnapshot.State.CodingKeys()
{
  return &type metadata for LinkSnapshot.State.CodingKeys;
}

unint64_t sub_1B3C95110()
{
  unint64_t result = qword_1E9CE2B78;
  if (!qword_1E9CE2B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B78);
  }
  return result;
}

unint64_t sub_1B3C95160()
{
  unint64_t result = qword_1E9CE2B80;
  if (!qword_1E9CE2B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B80);
  }
  return result;
}

unint64_t sub_1B3C951B0()
{
  unint64_t result = qword_1E9CE2B88;
  if (!qword_1E9CE2B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B88);
  }
  return result;
}

unint64_t sub_1B3C95200()
{
  unint64_t result = qword_1E9CE2B90;
  if (!qword_1E9CE2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B90);
  }
  return result;
}

unint64_t sub_1B3C95250()
{
  unint64_t result = qword_1E9CE2B98;
  if (!qword_1E9CE2B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2B98);
  }
  return result;
}

unint64_t sub_1B3C952A0()
{
  unint64_t result = qword_1E9CE2BA0;
  if (!qword_1E9CE2BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2BA0);
  }
  return result;
}

unint64_t sub_1B3C952F0()
{
  unint64_t result = qword_1E9CE2BA8;
  if (!qword_1E9CE2BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2BA8);
  }
  return result;
}

void *OUTLINED_FUNCTION_3_6@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

void OUTLINED_FUNCTION_6_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, int a18, char a19, int a20,char a21,int a22,char a23,int a24,char a25,int a26,char a27,int a28,char a29,int a30,char a31)
{
  *(unsigned char *)(v32 - 115) = a17;
  *(unsigned char *)(v32 - 114) = a19;
  *(unsigned char *)(v32 - 113) = a21;
  *(unsigned char *)(v32 - 112) = v31;
  *(unsigned char *)(v32 - 111) = a23;
  *(unsigned char *)(v32 - 110) = a25;
  *(unsigned char *)(v32 - 109) = a27;
  *(unsigned char *)(v32 - 108) = a29;
  *(unsigned char *)(v32 - 107) = a31;
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  return sub_1B3C7D8EC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_15_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3C9418C(a1, a2, a3, v3);
}

__n128 OUTLINED_FUNCTION_18_2()
{
  return v0[2];
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return sub_1B3C7532C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_25_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return a29;
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return sub_1B3C7532C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_32_0@<X0>(size_t a1@<X8>)
{
  return memcmp(v1, v2, a1);
}

uint64_t AsyncSequence.next()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v6 = sub_1B3D71B88();
  v4[6] = v6;
  OUTLINED_FUNCTION_0_1(v6);
  v4[7] = v7;
  v4[8] = OUTLINED_FUNCTION_2();
  v4[9] = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1B3D72848();
  v4[10] = v8;
  OUTLINED_FUNCTION_0_1(v8);
  v4[11] = v9;
  v4[12] = OUTLINED_FUNCTION_2();
  v4[13] = *(void *)(a2 - 8);
  v4[14] = OUTLINED_FUNCTION_2();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[15] = AssociatedTypeWitness;
  OUTLINED_FUNCTION_0_1(AssociatedTypeWitness);
  v4[16] = v11;
  v4[17] = OUTLINED_FUNCTION_2();
  return MEMORY[0x1F4188298](sub_1B3C95644, 0, 0);
}

uint64_t sub_1B3C95644()
{
  (*(void (**)(void, void, void))(v0[13] + 16))(v0[14], v0[5], v0[3]);
  sub_1B3D725C8();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[18] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1B3C9575C;
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  return MEMORY[0x1F4187C78](v4, v3, AssociatedConformanceWitness);
}

uint64_t sub_1B3C9575C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1B3C95A34;
  }
  else {
    uint64_t v2 = sub_1B3C95870;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1B3C95870()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 72);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 48);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 88) + 8))(v1, *(void *)(v0 + 80));
    *(_DWORD *)(v0 + 160) = 2;
    sub_1B3C95ACC(MEMORY[0x1E4FBC860]);
    sub_1B3C95BF8();
    sub_1B3D71D18();
    sub_1B3D71B78();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_willThrow();
    uint64_t v6 = OUTLINED_FUNCTION_1_6();
    v7(v6);
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 16);
    uint64_t v10 = OUTLINED_FUNCTION_1_6();
    v11(v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32))(v9, v1, v2);
    swift_task_dealloc();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1B3C95A34()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  OUTLINED_FUNCTION_3_7();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_1B3C95ACC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE3B30);
  uint64_t v2 = sub_1B3D72A98();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1B3C95CC0(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1B3C95C48(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1B3C78C74(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1B3C95BF8()
{
  unint64_t result = qword_1E9CE1920;
  if (!qword_1E9CE1920)
  {
    sub_1B3D71B88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1920);
  }
  return result;
}

unint64_t sub_1B3C95C48(uint64_t a1, uint64_t a2)
{
  sub_1B3D73108();
  sub_1B3D723E8();
  uint64_t v4 = sub_1B3D73138();
  return sub_1B3C95D28(a1, a2, v4);
}

uint64_t sub_1B3C95CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2BC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B3C95D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1B3D72E58() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1B3D72E58() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1B3D72E58()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  return swift_task_dealloc();
}

uint64_t sub_1B3C95E90()
{
  qword_1E9CE1F10 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t WFLogActivity.Handle.deinit()
{
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 24));
  swift_endAccess();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WFLogActivity.Handle.__deallocating_deinit()
{
  WFLogActivity.Handle.deinit();
  return MEMORY[0x1F4186488](v0, 40, 7);
}

uint64_t sub_1B3C95F58()
{
  uint64_t v1 = *(NSObject **)(v0 + 16);
  swift_beginAccess();
  os_activity_scope_enter(v1, (os_activity_scope_state_t)(v0 + 24));
  return swift_endAccess();
}

void *static WFLogActivity.begin(name:)(char *a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if ((unint64_t)a1 >> 32)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    unsigned int v7 = a1 >> 11;
    if (a1 >> 11 == 27)
    {
      __break(1u);
    }
    else
    {
      unsigned int v7 = a1 >> 16;
      if (a1 >> 16 > 0x10)
      {
        __break(1u);
      }
      else if ((a1 & 0xFFFFFF80) == 0)
      {
        if (a1 > 0xFF)
        {
          __break(1u);
          goto LABEL_21;
        }
        unsigned int v8 = ((_BYTE)a1 + 1);
LABEL_11:
        *(void *)description = (v8 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v8) & 0x38)) & 0x38));
        if (qword_1E9CE1F20 == -1)
        {
LABEL_12:
          uint64_t v5 = qword_1E9CE1F10;
          uint64_t v6 = description;
          goto LABEL_13;
        }
LABEL_21:
        swift_once();
        goto LABEL_12;
      }
      int v3 = (a1 & 0x3F) << 8;
      if (a1 < 0x800)
      {
        unsigned int v8 = (v3 | (a1 >> 6)) + 33217;
        goto LABEL_11;
      }
    }
    unsigned int v12 = (v3 | (a1 >> 6) & 0x3F) << 8;
    unsigned int v13 = (((v12 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
    unsigned int v14 = (v12 | (a1 >> 12)) + 8487393;
    if (v7) {
      unsigned int v8 = v13;
    }
    else {
      unsigned int v8 = v14;
    }
    goto LABEL_11;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (qword_1E9CE1F20 != -1) {
LABEL_16:
  }
    swift_once();
  uint64_t v5 = qword_1E9CE1F10;
  uint64_t v6 = a1;
LABEL_13:
  os_activity_t v9 = _os_activity_create(&dword_1B3C5C000, v6, v5, OS_ACTIVITY_FLAG_DEFAULT);
  type metadata accessor for WFLogActivity.Handle();
  char v10 = (void *)swift_allocObject();
  v10[3] = 0;
  v10[4] = 0;
  void v10[2] = v9;
  sub_1B3C95F58();
  return v10;
}

uint64_t type metadata accessor for WFLogActivity.Handle()
{
  return self;
}

ValueMetadata *type metadata accessor for WFLogActivity()
{
  return &type metadata for WFLogActivity;
}

uint64_t method lookup function for WFLogActivity.Handle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WFLogActivity.Handle);
}

uint64_t XPCEndpoint.endpoint.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t XPCEndpoint.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t XPCEndpoint.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3D73148();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2BD0);
    if (swift_dynamicCast())
    {
      uint64_t v5 = swift_unknownObjectRetain();
      uint64_t v6 = MEMORY[0x1B3EC6600](v5);
      if (v6 == sub_1B3D720B8())
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        *a2 = v10;
      }
      else
      {
        sub_1B3C96328();
        swift_allocError();
        unsigned char *v7 = 1;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
      }
    }
    else
    {
      sub_1B3C96328();
      swift_allocError();
      unsigned char *v8 = 0;
      swift_willThrow();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1B3C96328()
{
  unint64_t result = qword_1E9CE2BD8;
  if (!qword_1E9CE2BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2BD8);
  }
  return result;
}

uint64_t XPCEndpoint.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3D73168();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2BE0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v8 + 16);
    uint64_t v4 = *(void *)(v8 + 24);
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = 0;
    char v5 = *(unsigned char *)(v8 + 32);
    *(unsigned char *)(v8 + 32) = 7;
    swift_unknownObjectRetain();
    sub_1B3C801F4(v3, v4, v5);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1B3C96328();
    swift_allocError();
    unsigned char *v7 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1B3C96470@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return XPCEndpoint.init(from:)(a1, a2);
}

uint64_t sub_1B3C96488(void *a1)
{
  return XPCEndpoint.encode(to:)(a1);
}

BOOL static XPCEndpoint.== infix(_:_:)(xpc_object_t *a1, xpc_object_t *a2)
{
  return xpc_equal(*a1, *a2);
}

uint64_t XPCEndpoint.description.getter()
{
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  uint64_t v0 = swift_unknownObjectRetain();
  uint64_t v1 = MEMORY[0x1B3EC64A0](v0);
  sub_1B3D72408();
  MEMORY[0x1B3EC61A0](v1, -1, -1);
  swift_unknownObjectRelease();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  return 0x646E65206370783CLL;
}

ValueMetadata *type metadata accessor for XPCEndpoint()
{
  return &type metadata for XPCEndpoint;
}

unsigned char *storeEnumTagSinglePayload for XPCEndpointCodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3C96674);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCEndpointCodingError()
{
  return &type metadata for XPCEndpointCodingError;
}

unint64_t sub_1B3C966B0()
{
  unint64_t result = qword_1E9CE2BE8;
  if (!qword_1E9CE2BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2BE8);
  }
  return result;
}

uint64_t sub_1B3C966FC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a5;
  uint64_t v36 = a8;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v34 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v44 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v38 = (char *)&v30 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v39 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v33 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = sub_1B3D726D8();
  if (!v19) {
    return sub_1B3D72488();
  }
  uint64_t v20 = v19;
  uint64_t v31 = v14;
  uint64_t v48 = sub_1B3D729E8();
  uint64_t v40 = sub_1B3D729F8();
  sub_1B3D729C8();
  uint64_t v32 = v18;
  uint64_t result = sub_1B3D726C8();
  if (v20 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v22 = (void (**)(char *))(v45 + 16);
    uint64_t v41 = (void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v45 = a6;
    uint64_t v23 = v38;
    char v24 = v32;
    while (1)
    {
      id v25 = (void (*)(char *, void))sub_1B3D72728();
      (*v22)(v23);
      v25(v47, 0);
      uint64_t v26 = v46;
      v42(v23, v44);
      if (v26) {
        break;
      }
      uint64_t v46 = 0;
      (*v41)(v23, AssociatedTypeWitness);
      sub_1B3D729D8();
      sub_1B3D726E8();
      if (!--v20)
      {
        uint64_t v27 = v37;
        int64_t v28 = v33;
        uint64_t v29 = v31;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v33, v24, v31);
        sub_1B3D728D8();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
        return v48;
      }
    }
    (*v41)(v23, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v36, v44, v35);
  }
  return result;
}

BOOL static ProtobufUseCase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ProtobufUseCase.hash(into:)()
{
  return sub_1B3D73118();
}

uint64_t ProtobufUseCase.hashValue.getter()
{
  return sub_1B3D73138();
}

uint64_t OnewayProtobufRepresentable.protobuf.getter(uint64_t a1, uint64_t a2)
{
  char v3 = 0;
  return (*(uint64_t (**)(char *, uint64_t))(a2 + 16))(&v3, a1);
}

#error "1B3C96C64: call analysis failed (funcsize=13)"

void OnewayProtobufRepresentable<>.protobufBytes(useCase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_21();
  a22 = v24;
  a23 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  OUTLINED_FUNCTION_12_1();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x1F4188790](v32);
  a13 = *v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(&a13, v29, v27);
  if (!v23)
  {
    sub_1B3D71F48();
    uint64_t v33 = OUTLINED_FUNCTION_14_3();
    v34(v33);
  }
  OUTLINED_FUNCTION_26();
}

#error "1B3C96DE8: call analysis failed (funcsize=76)"

void ProtobufRepresentable.init(protobuf:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v40 = v2;
  uint64_t v41 = v0;
  OUTLINED_FUNCTION_11_4();
  uint64_t v42 = v3;
  uint64_t v43 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B3D72848();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v40 - v8;
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v40 - v14;
  OUTLINED_FUNCTION_20();
  v19(v16, v17, v18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
    OUTLINED_FUNCTION_7_6();
    v20(v21, v22, v23);
    type metadata accessor for ProtobufRepresentableError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t *v24 = AssociatedTypeWitness;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    OUTLINED_FUNCTION_7_6();
    v20(v25, v26, v27);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v9, AssociatedTypeWitness);
    OUTLINED_FUNCTION_20();
    v31(v28, v29, v30);
    OUTLINED_FUNCTION_9_4();
    v35(v32, v33, v34);
    OUTLINED_FUNCTION_7_6();
    v39(v36, v37, v38);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, AssociatedTypeWitness);
  }
  OUTLINED_FUNCTION_26();
}

uint64_t type metadata accessor for ProtobufRepresentableError()
{
  return __swift_instantiateGenericMetadata();
}

void ProtobufRepresentable.init(optionalProtobuf:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v2 = v1;
  uint64_t v38 = v3;
  OUTLINED_FUNCTION_0_0();
  uint64_t v35 = v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v37 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v7;
  OUTLINED_FUNCTION_11_4();
  uint64_t v39 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B3D72848();
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v34 - v13;
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_3_8();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v34 - v19;
  OUTLINED_FUNCTION_20();
  v21();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v22 = *(void (**)(void))(v11 + 8);
    OUTLINED_FUNCTION_1_7();
    v22();
    OUTLINED_FUNCTION_1_7();
    v22();
    uint64_t v23 = 1;
    uint64_t v24 = v38;
    uint64_t v25 = v39;
LABEL_6:
    __swift_storeEnumTagSinglePayload(v24, v23, 1, v25);
    goto LABEL_7;
  }
  v34[1] = v2;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v14, AssociatedTypeWitness);
  OUTLINED_FUNCTION_20();
  v26();
  uint64_t v25 = v39;
  OUTLINED_FUNCTION_9_4();
  v27();
  if (!v0)
  {
    OUTLINED_FUNCTION_1_7();
    v31();
    uint64_t v32 = OUTLINED_FUNCTION_4_5();
    v33(v32);
    uint64_t v24 = v38;
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v38, v37, v25);
    uint64_t v23 = 0;
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_1_7();
  v28();
  uint64_t v29 = OUTLINED_FUNCTION_4_5();
  v30(v29);
LABEL_7:
  OUTLINED_FUNCTION_26();
}

void ProtobufRepresentable<>.init(protobufBytes:compressionAlgorithm:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  uint64_t v40 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  uint64_t v10 = v9;
  unint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v38 = v15;
  v46[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v16 = sub_1B3D71F28();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v41 = v4;
  OUTLINED_FUNCTION_12_1();
  uint64_t v39 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_3_8();
  uint64_t v23 = v21 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v36 - v25;
  if (v8)
  {
    uint64_t v37 = v23;
    sub_1B3C7D8EC(v14, v12);
    uint64_t v42 = v14;
    unint64_t v43 = v12;
  }
  else
  {
    uint64_t v27 = (void *)sub_1B3D71DB8();
    v46[0] = 0;
    id v28 = objc_msgSend(v27, sel_decompressedDataUsingAlgorithm_error_, v10, v46);

    id v29 = v46[0];
    if (!v28)
    {
      uint64_t v35 = v29;
      sub_1B3D71D38();

      swift_willThrow();
      goto LABEL_9;
    }
    uint64_t v37 = v23;
    uint64_t v42 = v14;
    unint64_t v43 = v12;
    id v30 = v28;
    uint64_t v14 = sub_1B3D71DF8();
    unint64_t v12 = v31;
  }
  memset(v46, 0, 40);
  sub_1B3C7D8EC(v14, v12);
  sub_1B3D71F18();
  uint64_t v32 = v45;
  sub_1B3D71F38();
  if (v32)
  {
    sub_1B3C7532C(v42, v43);
LABEL_9:
    sub_1B3C7532C(v14, v12);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_20();
  v33();
  OUTLINED_FUNCTION_9_4();
  v34();
  sub_1B3C7532C(v14, v12);
  sub_1B3C7532C(v42, v43);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v26, AssociatedTypeWitness);
LABEL_10:
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3C976BC(uint64_t a1)
{
  return sub_1B3C97748(a1, MEMORY[0x1E4F26D58], MEMORY[0x1E4F26D50], &qword_1E9CE2BF0);
}

uint64_t static ProtobufRepresentableEscapeHatchCoding.encoder.getter()
{
  return sub_1B3C977C0(&qword_1E9CE20A8);
}

uint64_t sub_1B3C97714(uint64_t a1)
{
  return sub_1B3C97748(a1, MEMORY[0x1E4F26CC8], MEMORY[0x1E4F26CC0], &qword_1E9CE2BF8);
}

uint64_t sub_1B3C97748(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t static ProtobufRepresentableEscapeHatchCoding.decoder.getter()
{
  return sub_1B3C977C0(qword_1E9CE20B0);
}

uint64_t sub_1B3C977C0(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t Array<A>.protobuf(useCase:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_8_7(a1, a2);
  v8[32] = v2;
  sub_1B3D724A8();
  OUTLINED_FUNCTION_13_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  uint64_t WitnessTable = swift_getWitnessTable();
  return OUTLINED_FUNCTION_10_4((void (*)(char *, char *))sub_1B3C97934, (uint64_t)v8, v4, v5, v6, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v9);
}

uint64_t sub_1B3C978D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v8 = a2 & 1;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(&v8, a3, a4);
  if (v5) {
    *a5 = v5;
  }
  return result;
}

uint64_t sub_1B3C97934(uint64_t a1, void *a2)
{
  return sub_1B3C978D4(a1, *(unsigned char *)(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1B3C97958@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Array<A>.protobuf(useCase:)(a1, *v2);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t Array<A>.init(protobuf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a1;
  void v9[2] = a2;
  v9[3] = a3;
  OUTLINED_FUNCTION_11_4();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1B3D724A8();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1B3C966FC((void (*)(char *, char *))sub_1B3C97BB8, (uint64_t)v9, v4, a2, v5, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)v10);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B3C97A90(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 16))(v11, a2, a3);
  if (v4) {
    *a4 = v4;
  }
  return result;
}

uint64_t sub_1B3C97BB8(uint64_t a1, void *a2)
{
  return sub_1B3C97A90(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1B3C97BD8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = Array<A>.init(protobuf:)(*a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t Set<>.protobuf(useCase:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_8_7(a1, a2);
  void v9[4] = v2;
  char v10 = v3;
  sub_1B3D726A8();
  OUTLINED_FUNCTION_13_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  uint64_t WitnessTable = swift_getWitnessTable();
  return OUTLINED_FUNCTION_10_4((void (*)(char *, char *))sub_1B3C97D40, (uint64_t)v9, v5, v6, v7, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v11);
}

uint64_t sub_1B3C97CE0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char v9 = a2 & 1;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(&v9, a3, a5);
  if (v6) {
    *a6 = v6;
  }
  return result;
}

uint64_t sub_1B3C97D40(uint64_t a1, void *a2)
{
  return sub_1B3C97CE0(a1, *(unsigned char *)(v2 + 40), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1B3C97D68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Set<>.protobuf(useCase:)(a1, *v2);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t Set<>.init(protobuf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  OUTLINED_FUNCTION_11_4();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1B3D724A8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1B3C966FC((void (*)(char *, char *))sub_1B3C9801C, (uint64_t)v11, v6, a2, v7, WitnessTable, MEMORY[0x1E4FBC0F0], (uint64_t)&v12);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4)
  {
    uint64_t v13 = v9;
    sub_1B3D724A8();
    swift_getWitnessTable();
    return sub_1B3D726B8();
  }
  return result;
}

uint64_t sub_1B3C97EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)v15 - v11;
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)v15 - v11, a1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v12, a2, a4);
  if (v5) {
    *a5 = v5;
  }
  return result;
}

uint64_t sub_1B3C9801C(uint64_t a1, void *a2)
{
  return sub_1B3C97EF4(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1B3C98040@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = Set<>.init(protobuf:)(*a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a3 - 8));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t String.protobuf(useCase:)()
{
  return sub_1B3D71F08();
}

uint64_t String.init(protobuf:)(uint64_t a1)
{
  uint64_t v2 = sub_1B3D71EE8();
  uint64_t v3 = sub_1B3D71EF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

uint64_t sub_1B3C98140@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = String.init(protobuf:)(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1B3C98170()
{
  return String.protobuf(useCase:)();
}

uint64_t Dictionary<>.protobuf(useCase:)()
{
  return sub_1B3D722C8();
}

uint64_t sub_1B3C98224()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 16))(&v4, v1);
}

uint64_t sub_1B3C9826C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Dictionary<>.protobuf(useCase:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t Dictionary<>.init(protobuf:)()
{
  OUTLINED_FUNCTION_12_1();
  swift_getAssociatedTypeWitness();
  uint64_t v0 = sub_1B3D722C8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1B3C98350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v11 - v7, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 16))(v8, a2, a3);
}

uint64_t sub_1B3C98460(uint64_t a1)
{
  return sub_1B3C98350(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1B3C98480()
{
  unint64_t result = qword_1E9CE2C00[0];
  if (!qword_1E9CE2C00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9CE2C00);
  }
  return result;
}

uint64_t sub_1B3C984CC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B3C98520(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1B3C98574@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Dictionary<>.init(protobuf:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1B3C985AC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ProtobufUseCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3C986CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProtobufUseCase()
{
  return &type metadata for ProtobufUseCase;
}

uint64_t dispatch thunk of OnewayProtobufRepresentable.protobuf(useCase:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ProtobufRepresentable.init(protobuf:)()
{
  OUTLINED_FUNCTION_9_4();
  return v0();
}

uint64_t sub_1B3C98750()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1B3C987EC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *int v3 = *(void *)a2;
    int v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v5) = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_1B3C98964(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  return result;
}

void *sub_1B3C98A60(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1B3C98B98(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

void *sub_1B3C98DA4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1B3C98EDC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1B3C990E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1B3C9921C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B3C993E0);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B3C99408(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1B3C994C0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

ValueMetadata *type metadata accessor for ProtobufRepresentableEscapeHatchCoding()
{
  return &type metadata for ProtobufRepresentableEscapeHatchCoding;
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return v0;
}

uint64_t sub_1B3C995D8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7254657461657263 && a2 == 0xED00007265676769;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x72546574656C6564 && a2 == 0xED00007265676769;
    if (v6 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x80000001B3D89DA0 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x80000001B3D89DC0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = sub_1B3D72E58();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

uint64_t sub_1B3C99798()
{
  return 4;
}

uint64_t sub_1B3C997A0(char a1)
{
  uint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1701602660;
      goto LABEL_5;
    case 2:
      return result;
    case 3:
      uint64_t result = 0xD000000000000015;
      break;
    default:
      unsigned int v3 = 1634038371;
LABEL_5:
      uint64_t result = v3 | 0x7254657400000000;
      break;
  }
  return result;
}

uint64_t sub_1B3C99840(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3C99900(char a1)
{
  if (a1) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_1B3C99918()
{
  return sub_1B3C9AEFC();
}

uint64_t sub_1B3C99938()
{
  return sub_1B3C997A0(*v0);
}

uint64_t sub_1B3C99940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C995D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C99968@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3C99798();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C99990(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A224();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C999CC(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A224();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C99A08()
{
  return sub_1B3C99900(*v0);
}

uint64_t sub_1B3C99A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C99840(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C99A38(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A354();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C99A74(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A354();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C99AB0()
{
  return sub_1B3C9D120();
}

uint64_t sub_1B3C99ACC(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A308();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C99B08(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A308();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C99B48(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A2BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C99B84(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A2BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C99BC0(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A270();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C99BFC(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9A270();
  return MEMORY[0x1F41862B0](a1, v2);
}

void VoiceShortcutClientRequest.Automations.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v38 = v0;
  BOOL v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2C88);
  OUTLINED_FUNCTION_0();
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2C90);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2C98);
  OUTLINED_FUNCTION_0();
  uint64_t v31 = v10;
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2CA0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_22();
  type metadata accessor for TriggerType(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_22();
  uint64_t v33 = v13;
  type metadata accessor for VoiceShortcutClientRequest.Automations(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_5_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2CA8);
  OUTLINED_FUNCTION_0();
  uint64_t v36 = v15;
  uint64_t v37 = v16;
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1B3C9A224();
  sub_1B3D73178();
  sub_1B3C9EF34(v38, v4, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest.Automations);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1B3C9A308();
      uint64_t v24 = v36;
      OUTLINED_FUNCTION_27_1();
      sub_1B3D72BD8();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v3, v32);
      goto LABEL_6;
    case 2u:
      sub_1B3C9A270();
      uint64_t v24 = v36;
      OUTLINED_FUNCTION_27_1();
      sub_1B3D72BD8();
      swift_bridgeObjectRelease();
      uint64_t v25 = OUTLINED_FUNCTION_41();
      v26(v25, v34);
LABEL_6:
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      uint64_t v21 = v2;
      uint64_t v22 = v24;
      goto LABEL_7;
    case 3u:
      sub_1B3C9A2BC();
      OUTLINED_FUNCTION_27_1();
      OUTLINED_FUNCTION_32();
      v27();
      OUTLINED_FUNCTION_32();
      v28();
      goto LABEL_10;
    default:
      uint64_t v17 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      char v18 = *(void **)v17;
      uint64_t v19 = *(void *)(v17 + 8);
      uint64_t v35 = *(void *)(v17 + 16);
      char v39 = *(unsigned char *)(v17 + 24);
      sub_1B3C9EB20(v4, v33, (void (*)(void))type metadata accessor for TriggerType);
      sub_1B3C9A354();
      OUTLINED_FUNCTION_27_1();
      sub_1B3C9EB80(&qword_1E9CE2CD8, (void (*)(uint64_t))type metadata accessor for TriggerType);
      sub_1B3D72C18();
      if (v1)
      {
        sub_1B3C9A3A0(v18, v19, v35, v39);
        OUTLINED_FUNCTION_32();
        v20();
        sub_1B3C9F078(v33, (void (*)(void))type metadata accessor for TriggerType);
        uint64_t v21 = OUTLINED_FUNCTION_54();
LABEL_7:
        v23(v21, v22);
      }
      else
      {
        sub_1B3C9A3E0();
        sub_1B3D72C18();
        OUTLINED_FUNCTION_32();
        v29();
        sub_1B3C9F078(v33, (void (*)(void))type metadata accessor for TriggerType);
        OUTLINED_FUNCTION_54();
        OUTLINED_FUNCTION_32();
        v30();
        sub_1B3C9A3A0(v18, v19, v35, v39);
      }
LABEL_10:
      OUTLINED_FUNCTION_26();
      return;
  }
}

uint64_t type metadata accessor for VoiceShortcutClientRequest.Automations(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, qword_1E9CE2EA0);
}

unint64_t sub_1B3C9A224()
{
  unint64_t result = qword_1E9CE2CB0;
  if (!qword_1E9CE2CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2CB0);
  }
  return result;
}

unint64_t sub_1B3C9A270()
{
  unint64_t result = qword_1E9CE2CB8;
  if (!qword_1E9CE2CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2CB8);
  }
  return result;
}

unint64_t sub_1B3C9A2BC()
{
  unint64_t result = qword_1E9CE2CC0;
  if (!qword_1E9CE2CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2CC0);
  }
  return result;
}

unint64_t sub_1B3C9A308()
{
  unint64_t result = qword_1E9CE2CC8;
  if (!qword_1E9CE2CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2CC8);
  }
  return result;
}

unint64_t sub_1B3C9A354()
{
  unint64_t result = qword_1E9CE2CD0;
  if (!qword_1E9CE2CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2CD0);
  }
  return result;
}

uint64_t sub_1B3C9A3A0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {

    uint64_t v4 = vars8;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1B3C9A3E0()
{
  unint64_t result = qword_1E9CE2CE0;
  if (!qword_1E9CE2CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2CE0);
  }
  return result;
}

void VoiceShortcutClientRequest.Automations.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v89 = v0;
  uint64_t v2 = v1;
  uint64_t v83 = v3;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2CE8);
  OUTLINED_FUNCTION_0();
  uint64_t v85 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22_3(v6, v72);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2CF0);
  OUTLINED_FUNCTION_0();
  uint64_t v76 = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_22();
  uint64_t v84 = v9;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2CF8);
  OUTLINED_FUNCTION_0();
  uint64_t v77 = v10;
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_23(v12, v72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D00);
  OUTLINED_FUNCTION_0();
  uint64_t v80 = v14;
  uint64_t v81 = v13;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_11_5(v15, v72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D08);
  OUTLINED_FUNCTION_0();
  uint64_t v86 = v17;
  uint64_t v87 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = OUTLINED_FUNCTION_24();
  uint64_t v19 = type metadata accessor for VoiceShortcutClientRequest.Automations(v18);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v20);
  OUTLINED_FUNCTION_3_8();
  uint64_t v23 = (uint64_t *)(v21 - v22);
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v27 = (uint64_t *)((char *)&v72 - v26);
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  id v30 = (char *)&v72 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v72 - v31;
  uint64_t v33 = v2[3];
  int64_t v88 = v2;
  __swift_project_boxed_opaque_existential_1(v2, v33);
  sub_1B3C9A224();
  uint64_t v34 = v89;
  sub_1B3D73158();
  if (v34) {
    goto LABEL_10;
  }
  uint64_t v73 = v27;
  uint64_t v74 = v23;
  uint64_t v89 = v30;
  uint64_t v75 = v32;
  uint64_t v35 = sub_1B3D72B78();
  uint64_t v36 = *(void *)(v35 + 16);
  if (!v36
    || (uint64_t v72 = 0,
        uint64_t v37 = *(unsigned __int8 *)(v35 + 32),
        sub_1B3CA40D8(1, v36, v35, v35 + 32, 0, (2 * v36) | 1),
        uint64_t v39 = v38,
        unint64_t v41 = v40,
        swift_bridgeObjectRelease(),
        v39 != v41 >> 1))
  {
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v44 = v43;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    uint64_t *v44 = v19;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v45();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v46 = OUTLINED_FUNCTION_46();
    v52(v46);
LABEL_10:
    uint64_t v53 = (uint64_t)v88;
    goto LABEL_11;
  }
  uint64_t v42 = (uint64_t)v89;
  switch(v37)
  {
    case 1:
      sub_1B3C9A308();
      OUTLINED_FUNCTION_13_2();
      uint64_t v55 = sub_1B3D72B28();
      uint64_t v57 = v56;
      OUTLINED_FUNCTION_32();
      v58();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_32();
      v59();
      uint64_t v60 = v73;
      uint64_t *v73 = v55;
      v60[1] = v57;
      swift_storeEnumTagMultiPayload();
      uint64_t v71 = (uint64_t)v60;
      goto LABEL_12;
    case 2:
      sub_1B3C9A2BC();
      OUTLINED_FUNCTION_13_2();
      OUTLINED_FUNCTION_32();
      v47();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_32();
      v48();
      uint64_t v49 = (uint64_t)v75;
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = (uint64_t)v88;
      uint64_t v51 = v83;
      break;
    case 3:
      sub_1B3C9A270();
      OUTLINED_FUNCTION_13_2();
      uint64_t v54 = sub_1B3D72B28();
      uint64_t v72 = 0;
      uint64_t v61 = v54;
      uint64_t v63 = v62;
      uint64_t v64 = OUTLINED_FUNCTION_30_0();
      v65(v64);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_32();
      v66();
      uint64_t v67 = v74;
      uint64_t *v74 = v61;
      v67[1] = v63;
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = (uint64_t)v67;
      uint64_t v49 = (uint64_t)v75;
      sub_1B3C9EB20(v68, (uint64_t)v75, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest.Automations);
      uint64_t v50 = (uint64_t)v88;
      uint64_t v51 = v83;
      break;
    default:
      sub_1B3C9A354();
      OUTLINED_FUNCTION_13_2();
      type metadata accessor for TriggerType(0);
      sub_1B3C9EB80(&qword_1E9CE2D10, (void (*)(uint64_t))type metadata accessor for TriggerType);
      sub_1B3D72B68();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950);
      sub_1B3C9EBC8();
      sub_1B3D72B68();
      OUTLINED_FUNCTION_32();
      v69();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_18_3();
      v70();
      swift_storeEnumTagMultiPayload();
      uint64_t v71 = v42;
LABEL_12:
      uint64_t v49 = (uint64_t)v75;
      sub_1B3C9EB20(v71, (uint64_t)v75, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest.Automations);
      uint64_t v50 = (uint64_t)v88;
      uint64_t v51 = v83;
      break;
  }
  sub_1B3C9EB20(v49, v51, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest.Automations);
  uint64_t v53 = v50;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1(v53);
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3C9ACBC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1819047280 && a2 == 0xE400000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752397168 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3C9AD8C(char a1)
{
  if (a1) {
    return 1752397168;
  }
  else {
    return 1819047280;
  }
}

uint64_t sub_1B3C9ADAC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x616E6F73726570 && a2 == 0xE700000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6563726F66 && a2 == 0xE500000000000000;
    if (v6 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6B6F6F426D6F7266 && a2 == 0xEC0000006B72616DLL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B3D72E58();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B3C9AEF4()
{
  return 3;
}

uint64_t sub_1B3C9AEFC()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3C9AF3C(char a1)
{
  return *(void *)&aPersona_1[8 * a1];
}

uint64_t sub_1B3C9AF5C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6563726F66 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B3C9AFDC()
{
  return 0x6563726F66;
}

void sub_1B3C9AFF0()
{
}

void sub_1B3C9B008()
{
}

uint64_t sub_1B3C9B020()
{
  return sub_1B3C9AD8C(*v0);
}

uint64_t sub_1B3C9B028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9ACBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C9B050(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EC14();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9B08C(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EC14();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C9B0C8()
{
  return sub_1B3C9AF3C(*v0);
}

uint64_t sub_1B3C9B0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9ADAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C9B0F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3C9AEF4();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C9B120(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9ECAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9B15C(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9ECAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C9B19C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9AF5C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B3C9B1C8(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EC60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9B204(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EC60();
  return MEMORY[0x1F41862B0](a1, v2);
}

void VoiceShortcutClientRequest.ToolKit.SyncingRequest.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  char v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_22_3(v5, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D28);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D30);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_22();
  int v11 = *(__int16 *)(v0 + 16);
  uint64_t v12 = v3[3];
  uint64_t v13 = v3;
  uint64_t v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1B3C9EC14();
  sub_1B3D73178();
  if (v11 < 0)
  {
    sub_1B3C9EC60();
    sub_1B3D72BA8();
    sub_1B3D72BE8();
  }
  else
  {
    sub_1B3C9ECAC();
    sub_1B3D72BA8();
    sub_1B3D72BB8();
    if (!v1)
    {
      sub_1B3D72BE8();
      sub_1B3D72BE8();
    }
  }
  OUTLINED_FUNCTION_32();
  v16();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v7);
  OUTLINED_FUNCTION_26();
}

void VoiceShortcutClientRequest.ToolKit.SyncingRequest.init(from:)()
{
  OUTLINED_FUNCTION_21();
  char v3 = v2;
  uint64_t v32 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D58);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D60);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15();
  uint64_t v34 = (uint64_t)v3;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3C9EC14();
  sub_1B3D73158();
  if (v0) {
    goto LABEL_9;
  }
  uint64_t v11 = v1;
  uint64_t v12 = sub_1B3D72B78();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
LABEL_7:
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    OUTLINED_FUNCTION_44();
    void *v19 = &type metadata for VoiceShortcutClientRequest.ToolKit.SyncingRequest;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v20();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v7);
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1(v34);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_19_2(v12, v13);
  uint64_t v15 = v14;
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v15 != v17 >> 1)
  {
    uint64_t v11 = v1;
    goto LABEL_7;
  }
  if (v1)
  {
    sub_1B3C9EC60();
    OUTLINED_FUNCTION_48();
    char v22 = sub_1B3D72B38();
    OUTLINED_FUNCTION_32();
    v23();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_32();
    v24();
    uint64_t v25 = 0;
    uint64_t v26 = v22 & 1;
    __int16 v27 = 0x8000;
  }
  else
  {
    sub_1B3C9ECAC();
    OUTLINED_FUNCTION_48();
    uint64_t v26 = sub_1B3D72B08();
    uint64_t v25 = v21;
    char v28 = sub_1B3D72B38();
    char v33 = sub_1B3D72B38();
    OUTLINED_FUNCTION_32();
    v29();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_28_0();
    v30();
    if (v33) {
      __int16 v31 = 256;
    }
    else {
      __int16 v31 = 0;
    }
    __int16 v27 = v31 & 0xFFFE | v28 & 1;
  }
  *(void *)uint64_t v32 = v26;
  *(void *)(v32 + 8) = v25;
  *(_WORD *)(v32 + 16) = v27;
  __swift_destroy_boxed_opaque_existential_1(v34);
LABEL_10:
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3C9B990(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x676E697865646E69 && a2 == 0xEF74736575716552;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x52676E69636E7973 && a2 == 0xEE00747365757165)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3C9BAA8(char a1)
{
  if (a1) {
    return 0x52676E69636E7973;
  }
  else {
    return 0x676E697865646E69;
  }
}

void sub_1B3C9BAF8()
{
}

void sub_1B3C9BB10()
{
}

uint64_t sub_1B3C9BB28()
{
  return sub_1B3C9BAA8(*v0);
}

uint64_t sub_1B3C9BB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9B990(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C9BB58(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9ECF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9BB94(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9ECF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C9BBD0(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EDDC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9BC0C(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EDDC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C9BC48(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9ED44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9BC84(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9ED44();
  return MEMORY[0x1F41862B0](a1, v2);
}

void VoiceShortcutClientRequest.ToolKit.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  BOOL v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_36_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D70);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_33_0();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2D78);
  OUTLINED_FUNCTION_0();
  uint64_t v15 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_15();
  uint64_t v8 = *(void **)v0;
  uint64_t v14 = *(void *)(v0 + 8);
  __int16 v9 = *(_WORD *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3C9ECF8();
  sub_1B3D73178();
  if ((v9 & 0x4000) != 0)
  {
    sub_1B3C9ED44();
    OUTLINED_FUNCTION_27_1();
    sub_1B3C9ED90();
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v12();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v13);
  }
  else
  {
    sub_1B3C9EDDC();
    v8;
    sub_1B3D72BA8();
    type metadata accessor for ToolKitIndexingRequest(0);
    sub_1B3C9EB80(&qword_1E9CE1C50, (void (*)(uint64_t))type metadata accessor for ToolKitIndexingRequest);
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v10();
    OUTLINED_FUNCTION_32();
    v11();
    sub_1B3C9EE28(v8, v14, v9);
  }
  OUTLINED_FUNCTION_26();
}

void VoiceShortcutClientRequest.ToolKit.init(from:)()
{
  OUTLINED_FUNCTION_21();
  unint64_t v2 = v1;
  uint64_t v29 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2DA0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2DA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2DB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B3C9ECF8();
  OUTLINED_FUNCTION_38_0();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v8 = sub_1B3D72B78();
  if (!*(void *)(v8 + 16)
    || (OUTLINED_FUNCTION_39_0(), char v28 = v9, sub_1B3CA40D8(1, v10, v8, v11, 0, v12), OUTLINED_FUNCTION_50(), v7))
  {
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    OUTLINED_FUNCTION_44();
    void *v14 = &type metadata for VoiceShortcutClientRequest.ToolKit;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v15();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v16 = OUTLINED_FUNCTION_51();
    v17(v16);
LABEL_8:
    uint64_t v18 = (uint64_t)v2;
    goto LABEL_9;
  }
  if (v28)
  {
    LOBYTE(v30) = 1;
    sub_1B3C9ED44();
    OUTLINED_FUNCTION_14_4();
    sub_1B3C9EE48();
    sub_1B3D72B68();
    uint64_t v19 = OUTLINED_FUNCTION_25_1();
    v20(v19);
    swift_unknownObjectRelease();
    uint64_t v21 = OUTLINED_FUNCTION_17_2();
    v22(v21);
    long long v23 = v30;
    __int16 v24 = v31 | 0x4000;
  }
  else
  {
    LOBYTE(v30) = 0;
    sub_1B3C9EDDC();
    OUTLINED_FUNCTION_14_4();
    type metadata accessor for ToolKitIndexingRequest(0);
    sub_1B3C9EB80(&qword_1E9CE2DC0, (void (*)(uint64_t))type metadata accessor for ToolKitIndexingRequest);
    sub_1B3D72B68();
    OUTLINED_FUNCTION_32();
    v25();
    swift_unknownObjectRelease();
    uint64_t v26 = OUTLINED_FUNCTION_17_2();
    v27(v26);
    __int16 v24 = 0;
    *(void *)&long long v23 = v30;
  }
  *(_OWORD *)uint64_t v29 = v23;
  *(_WORD *)(v29 + 16) = v24;
  uint64_t v18 = (uint64_t)v2;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1(v18);
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3C9C3BC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6974616D6F747561 && a2 == 0xEB00000000736E6FLL;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74694B6C6F6F74 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3C9C4B4(char a1)
{
  if (a1) {
    return 0x74694B6C6F6F74;
  }
  else {
    return 0x6974616D6F747561;
  }
}

void sub_1B3C9C4F4()
{
}

void sub_1B3C9C50C()
{
}

uint64_t sub_1B3C9C524(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9F02C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9C560(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9F02C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C9C59C()
{
  return sub_1B3C9C4B4(*v0);
}

uint64_t sub_1B3C9C5A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9C3BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C9C5CC(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EEE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9C608(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EEE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C9C644(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EF94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9C680(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9EF94();
  return MEMORY[0x1F41862B0](a1, v2);
}

void VoiceShortcutClientRequest.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  v22[0] = v0;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2DC8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_11_5(v6, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2DD0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_23(v8, v21);
  type metadata accessor for VoiceShortcutClientRequest.Automations(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_36_0();
  type metadata accessor for VoiceShortcutClientRequest(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2DD8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_5_3();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1B3C9EEE8();
  sub_1B3D73178();
  sub_1B3C9EF34(v22[0], v1, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v12 = *(void **)v1;
    uint64_t v13 = *(void *)(v1 + 8);
    __int16 v23 = *(_WORD *)(v1 + 16);
    sub_1B3C9EF94();
    sub_1B3D72BA8();
    sub_1B3C9EFE0();
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v14();
    uint64_t v15 = OUTLINED_FUNCTION_52();
    v16(v15);
    sub_1B3C9EE28(v12, v13, v23);
  }
  else
  {
    sub_1B3C9EB20(v1, v2, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest.Automations);
    sub_1B3C9F02C();
    sub_1B3D72BA8();
    sub_1B3C9EB80(&qword_1E9CE2E00, (void (*)(uint64_t))type metadata accessor for VoiceShortcutClientRequest.Automations);
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v17();
    sub_1B3C9F078(v2, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest.Automations);
    uint64_t v18 = OUTLINED_FUNCTION_52();
    v19(v18);
  }
  OUTLINED_FUNCTION_26();
}

void VoiceShortcutClientRequest.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v2 = v1;
  uint64_t v50 = v3;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E08);
  OUTLINED_FUNCTION_0();
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_11_5(v6, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E10);
  OUTLINED_FUNCTION_0();
  uint64_t v52 = v8;
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_22();
  uint64_t v56 = v9;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E18);
  OUTLINED_FUNCTION_0();
  uint64_t v55 = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = OUTLINED_FUNCTION_24();
  uint64_t v13 = type metadata accessor for VoiceShortcutClientRequest(v12);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_3_8();
  unint64_t v17 = (_OWORD *)(v15 - v16);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v45 - v20;
  MEMORY[0x1F4188790](v19);
  __int16 v23 = (char *)&v45 - v22;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B3C9EEE8();
  sub_1B3D73158();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v46 = v17;
  uint64_t v47 = v23;
  uint64_t v48 = v21;
  uint64_t v49 = v13;
  uint64_t v24 = sub_1B3D72B78();
  uint64_t v25 = *(void *)(v24 + 16);
  if (!v25 || (OUTLINED_FUNCTION_19_2(v24, v25), uint64_t v27 = v26, v29 = v28, swift_bridgeObjectRelease(), v27 != v29 >> 1))
  {
    uint64_t v30 = v49;
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    OUTLINED_FUNCTION_44();
    uint64_t *v32 = v30;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v33();
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_18_3();
    v34();
LABEL_8:
    uint64_t v35 = (uint64_t)v2;
    goto LABEL_9;
  }
  if (v17)
  {
    LOBYTE(v58) = 1;
    sub_1B3C9EF94();
    OUTLINED_FUNCTION_37_0();
    sub_1B3C9F0CC();
    sub_1B3D72B68();
    OUTLINED_FUNCTION_32();
    v37();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_18_3();
    v38();
    __int16 v39 = v59;
    unint64_t v40 = v46;
    _OWORD *v46 = v58;
    *((_WORD *)v40 + 8) = v39;
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = (uint64_t)v40;
  }
  else
  {
    LOBYTE(v58) = 0;
    sub_1B3C9F02C();
    OUTLINED_FUNCTION_37_0();
    type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    sub_1B3C9EB80(&qword_1E9CE2E28, (void (*)(uint64_t))type metadata accessor for VoiceShortcutClientRequest.Automations);
    uint64_t v36 = (uint64_t)v48;
    sub_1B3D72B68();
    OUTLINED_FUNCTION_32();
    v42();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_18_3();
    v43();
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = v36;
  }
  uint64_t v44 = (uint64_t)v47;
  sub_1B3C9EB20(v41, (uint64_t)v47, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest);
  sub_1B3C9EB20(v44, v50, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest);
  uint64_t v35 = (uint64_t)v2;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1(v35);
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3C9CF70(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3C9D050()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3C9D090(char a1)
{
  if (a1) {
    return 0x726F727265;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_1B3C9D0C4(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = OUTLINED_FUNCTION_29_1();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B3C9D120()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3C9D15C()
{
  return 12383;
}

uint64_t sub_1B3C9D168()
{
  return 1;
}

uint64_t sub_1B3C9D188()
{
  return 0;
}

void sub_1B3C9D194()
{
}

void sub_1B3C9D1AC()
{
}

uint64_t sub_1B3C9D1C4()
{
  return sub_1B3C9D050();
}

uint64_t sub_1B3C9D1E0()
{
  return sub_1B3C9D090(*v0);
}

uint64_t sub_1B3C9D1E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9CF70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C9D210(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9F118();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9D24C(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9F118();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C9D288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9D0C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B3C9D2B4(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9F164();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9D2F0(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9F164();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3C9D32C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3C9D168();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1B3C9D358(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9F1FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3C9D394(uint64_t a1)
{
  unint64_t v2 = sub_1B3C9F1FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void VoiceShortcutResponse.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  char v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E30);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E38);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_35_0();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E40);
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_8();
  uint64_t v9 = *(void *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3C9F118();
  sub_1B3D73178();
  if (v9)
  {
    sub_1B3C9F164();
    sub_1B3D72BA8();
    sub_1B3C9F1B0();
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v10();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v13);
  }
  else
  {
    sub_1B3C9F1FC();
    sub_1B3D72BA8();
    OUTLINED_FUNCTION_32();
    v11();
    OUTLINED_FUNCTION_28_0();
    v12();
  }
  OUTLINED_FUNCTION_26();
}

void VoiceShortcutResponse.init(from:)()
{
  OUTLINED_FUNCTION_21();
  unint64_t v2 = v1;
  uint64_t v30 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E70);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E78);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B3C9F118();
  OUTLINED_FUNCTION_38_0();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v8 = sub_1B3D72B78();
  if (!*(void *)(v8 + 16)
    || (OUTLINED_FUNCTION_39_0(), char v29 = v9, sub_1B3CA40D8(1, v10, v8, v11, 0, v12), OUTLINED_FUNCTION_50(), v7))
  {
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    OUTLINED_FUNCTION_44();
    void *v14 = &type metadata for VoiceShortcutResponse;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v15();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v16 = OUTLINED_FUNCTION_51();
    v17(v16);
LABEL_7:
    uint64_t v18 = (uint64_t)v2;
    goto LABEL_8;
  }
  if (v29)
  {
    LOBYTE(v31) = 1;
    sub_1B3C9F164();
    OUTLINED_FUNCTION_14_4();
    sub_1B3C9F248();
    sub_1B3D72B68();
    OUTLINED_FUNCTION_32();
    v21();
    swift_unknownObjectRelease();
    uint64_t v22 = OUTLINED_FUNCTION_17_2();
    v23(v22);
    long long v24 = v31;
    uint64_t v25 = v32;
    uint64_t v26 = v33;
    uint64_t v27 = v34;
    long long v28 = v35;
  }
  else
  {
    sub_1B3C9F1FC();
    OUTLINED_FUNCTION_14_4();
    OUTLINED_FUNCTION_32();
    v19();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_32();
    v20();
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    long long v24 = 0uLL;
    long long v28 = 0uLL;
  }
  *(_OWORD *)uint64_t v30 = v24;
  *(void *)(v30 + 16) = v25;
  *(void *)(v30 + 24) = v26;
  *(void *)(v30 + 32) = v27;
  *(_OWORD *)(v30 + 40) = v28;
  uint64_t v18 = (uint64_t)v2;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v18);
  OUTLINED_FUNCTION_26();
}

void sub_1B3C9DA6C()
{
}

void sub_1B3C9DA84()
{
}

BOOL sub_1B3C9DA9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1B3C90500(*a1, *a2);
}

uint64_t sub_1B3C9DAB4()
{
  return sub_1B3C90638();
}

uint64_t sub_1B3C9DAC8()
{
  return sub_1B3C90510();
}

uint64_t sub_1B3C9DADC()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3C9DB28()
{
  return sub_1B3C9D090(*v0);
}

uint64_t sub_1B3C9DB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9CF70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3C9DB70()
{
  return sub_1B3C72F38();
}

uint64_t sub_1B3C9DB9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3C90630();
  *a1 = result;
  return result;
}

uint64_t sub_1B3C9DBD0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B3C9DC24(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B3C9DC78()
{
  return OUTLINED_FUNCTION_67();
}

uint64_t sub_1B3C9DC84()
{
  return sub_1B3C9D120();
}

uint64_t sub_1B3C9DCA8()
{
  return sub_1B3C7A3A8();
}

uint64_t sub_1B3C9DCB8(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1B3C9DDD4(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_1B3C7A3A8);
}

uint64_t sub_1B3C9DCD0()
{
  return sub_1B3C9D15C();
}

uint64_t sub_1B3C9DCE4(void *a1, uint64_t a2)
{
  return sub_1B3C9DE74(a1, a2, (uint64_t (*)(void, void, void))sub_1B3C72F38);
}

uint64_t sub_1B3C9DCFC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1B3C9DEBC(a1, a2, (uint64_t (*)(uint64_t, void, void, void))OUTLINED_FUNCTION_67, a3);
}

uint64_t sub_1B3C9DD14(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B3C9DD68(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1B3C9DDBC(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1B3C9DDD4(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_1B3C7A598);
}

uint64_t sub_1B3C9DDD4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void))
{
  sub_1B3D73108();
  a4(v7, a2[2], a2[3], a2[4]);
  return sub_1B3D73138();
}

uint64_t sub_1B3C9DE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3C9D0C4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B3C9DE5C(void *a1, uint64_t a2)
{
  return sub_1B3C9DE74(a1, a2, (uint64_t (*)(void, void, void))sub_1B3CA4158);
}

uint64_t sub_1B3C9DE74(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  return a3(a1[2], a1[3], a1[4]);
}

uint64_t sub_1B3C9DEA4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1B3C9DEBC(a1, a2, (uint64_t (*)(uint64_t, void, void, void))j__OUTLINED_FUNCTION_67, a3);
}

uint64_t sub_1B3C9DEBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(uint64_t, void, void, void)@<X3>, unsigned char *a4@<X8>)
{
  uint64_t result = a3(a1, a2[2], a2[3], a2[4]);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1B3C9DEFC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1B3C9DF50(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void VoiceShortcutResponseWithValue.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v59 = v1;
  uint64_t v56 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 32);
  OUTLINED_FUNCTION_42();
  uint64_t v9 = type metadata accessor for VoiceShortcutResponseWithValue.ErrorCodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_45_0();
  uint64_t v50 = v10;
  uint64_t v51 = v9;
  sub_1B3D72C28();
  OUTLINED_FUNCTION_0();
  uint64_t v53 = v12;
  uint64_t v54 = v11;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v13);
  uint64_t v57 = (char *)v43 - v14;
  OUTLINED_FUNCTION_42();
  uint64_t v15 = type metadata accessor for VoiceShortcutResponseWithValue.SuccessCodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_45_0();
  uint64_t v46 = v15;
  v43[1] = v16;
  sub_1B3D72C28();
  OUTLINED_FUNCTION_0();
  uint64_t v48 = v18;
  uint64_t v49 = v17;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v19);
  uint64_t v45 = (char *)v43 - v20;
  OUTLINED_FUNCTION_0_0();
  uint64_t v47 = v21;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_22();
  uint64_t v44 = v23;
  OUTLINED_FUNCTION_0_0();
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_35_0();
  uint64_t v55 = v7;
  uint64_t v52 = v8;
  type metadata accessor for VoiceShortcutResponseWithValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v67 = sub_1B3D72C28();
  OUTLINED_FUNCTION_0();
  uint64_t v58 = v27;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)v43 - v29;
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1B3D73178();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 16))(v2, v56, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = *v2;
    uint64_t v56 = v2[1];
    uint64_t v32 = v2[2];
    uint64_t v33 = v2[3];
    uint64_t v35 = v2[4];
    uint64_t v34 = v2[5];
    uint64_t v36 = v2[6];
    LOBYTE(v60) = 1;
    sub_1B3D72BA8();
    uint64_t v60 = v31;
    uint64_t v61 = v56;
    uint64_t v62 = v32;
    uint64_t v63 = v33;
    uint64_t v64 = v35;
    uint64_t v65 = v34;
    uint64_t v66 = v36;
    sub_1B3C9F1B0();
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v37();
    OUTLINED_FUNCTION_32();
    v38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = v47;
    uint64_t v40 = v44;
    uint64_t v41 = v55;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v47 + 32))(v44, v2, v55);
    LOBYTE(v60) = 0;
    sub_1B3D72BA8();
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v42();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v67);
  }
  OUTLINED_FUNCTION_26();
}

void VoiceShortcutResponseWithValue.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v74 = v7;
  uint64_t v8 = type metadata accessor for VoiceShortcutResponseWithValue.ErrorCodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_45_0();
  uint64_t v71 = v9;
  uint64_t v72 = v8;
  uint64_t v63 = sub_1B3D72B88();
  OUTLINED_FUNCTION_0();
  uint64_t v67 = v10;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v11);
  uint64_t v73 = (char *)&v58 - v12;
  OUTLINED_FUNCTION_31_1();
  uint64_t v13 = type metadata accessor for VoiceShortcutResponseWithValue.SuccessCodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_45_0();
  uint64_t v69 = v13;
  uint64_t v68 = v14;
  uint64_t v62 = sub_1B3D72B88();
  OUTLINED_FUNCTION_0();
  uint64_t v66 = v15;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v16);
  size_t v70 = (char *)&v58 - v17;
  OUTLINED_FUNCTION_31_1();
  type metadata accessor for VoiceShortcutResponseWithValue.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1B3D72B88();
  OUTLINED_FUNCTION_0();
  uint64_t v76 = v19;
  uint64_t v77 = v18;
  OUTLINED_FUNCTION_28();
  MEMORY[0x1F4188790](v20);
  uint64_t v64 = v4;
  uint64_t v65 = v2;
  uint64_t v75 = type metadata accessor for VoiceShortcutResponseWithValue();
  OUTLINED_FUNCTION_0();
  uint64_t v61 = v21;
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_3_8();
  uint64_t v25 = (_OWORD *)(v23 - v24);
  uint64_t v27 = MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v58 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v58 - v30;
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1B3D73158();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t WitnessTable = (uint64_t)v29;
  uint64_t v59 = v25;
  uint64_t v60 = v31;
  uint64_t v85 = v6;
  uint64_t v32 = v77;
  *(void *)&long long v79 = sub_1B3D72B78();
  sub_1B3D724A8();
  swift_getWitnessTable();
  *(void *)&long long v83 = sub_1B3D728A8();
  *((void *)&v83 + 1) = v33;
  *(void *)&long long v84 = v34;
  *((void *)&v84 + 1) = v35;
  sub_1B3D72898();
  swift_getWitnessTable();
  sub_1B3D726F8();
  char v36 = v79;
  if (v79 == 2 || (long long v58 = v83, v79 = v83, v80 = v84, (sub_1B3D72708() & 1) == 0))
  {
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v39 = v38;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    uint64_t *v39 = v75;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v40();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v41 = OUTLINED_FUNCTION_41();
    v42(v41, v32);
LABEL_7:
    uint64_t v43 = (uint64_t)v6;
    goto LABEL_8;
  }
  if (v36)
  {
    LOBYTE(v79) = 1;
    sub_1B3D72AE8();
    uint64_t v51 = v74;
    sub_1B3C9F248();
    uint64_t v37 = (char *)v63;
    sub_1B3D72B68();
    uint64_t v45 = v76;
    OUTLINED_FUNCTION_32();
    v52();
    swift_unknownObjectRelease();
    uint64_t v47 = (void (*)(uint64_t))(v45 + 8);
    OUTLINED_FUNCTION_18_3();
    v53();
    uint64_t v54 = v81;
    long long v55 = v80;
    uint64_t v56 = v59;
    _OWORD *v59 = v79;
    v56[1] = v55;
    *((void *)v56 + 4) = v54;
    *(_OWORD *)((char *)v56 + 40) = v82;
    uint64_t v49 = v75;
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = OUTLINED_FUNCTION_10_5();
    v47(v57);
  }
  else
  {
    LOBYTE(v79) = 0;
    uint64_t v37 = v70;
    sub_1B3D72AE8();
    sub_1B3D72B68();
    uint64_t v44 = v76;
    OUTLINED_FUNCTION_32();
    v46();
    swift_unknownObjectRelease();
    uint64_t v47 = (void (*)(uint64_t))(v44 + 8);
    OUTLINED_FUNCTION_18_3();
    v48();
    uint64_t v49 = v75;
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = OUTLINED_FUNCTION_10_5();
    v47(v50);
    uint64_t v51 = v74;
  }
  ((void (*)(uint64_t, char *, uint64_t))v47)(v51, v37, v49);
  uint64_t v43 = (uint64_t)v85;
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1(v43);
  OUTLINED_FUNCTION_26();
}

void sub_1B3C9EAE4()
{
}

void sub_1B3C9EB08()
{
}

uint64_t sub_1B3C9EB20(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1B3C9EB80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B3C9EBC8()
{
  unint64_t result = qword_1E9CE2D18;
  if (!qword_1E9CE2D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2D18);
  }
  return result;
}

unint64_t sub_1B3C9EC14()
{
  unint64_t result = qword_1E9CE2D38;
  if (!qword_1E9CE2D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2D38);
  }
  return result;
}

unint64_t sub_1B3C9EC60()
{
  unint64_t result = qword_1E9CE2D40;
  if (!qword_1E9CE2D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2D40);
  }
  return result;
}

unint64_t sub_1B3C9ECAC()
{
  unint64_t result = qword_1E9CE2D48;
  if (!qword_1E9CE2D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2D48);
  }
  return result;
}

unint64_t sub_1B3C9ECF8()
{
  unint64_t result = qword_1E9CE2D80;
  if (!qword_1E9CE2D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2D80);
  }
  return result;
}

unint64_t sub_1B3C9ED44()
{
  unint64_t result = qword_1E9CE2D88;
  if (!qword_1E9CE2D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2D88);
  }
  return result;
}

unint64_t sub_1B3C9ED90()
{
  unint64_t result = qword_1E9CE2D90;
  if (!qword_1E9CE2D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2D90);
  }
  return result;
}

unint64_t sub_1B3C9EDDC()
{
  unint64_t result = qword_1E9CE2D98;
  if (!qword_1E9CE2D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2D98);
  }
  return result;
}

void sub_1B3C9EE28(id a1, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x4000) != 0) {
    sub_1B3C9EE38((uint64_t)a1, a2, a3 & 0xBFFF);
  }
  else {
}
  }

uint64_t sub_1B3C9EE38(uint64_t a1, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x8000) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B3C9EE48()
{
  unint64_t result = qword_1E9CE2DB8;
  if (!qword_1E9CE2DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2DB8);
  }
  return result;
}

uint64_t type metadata accessor for VoiceShortcutClientRequest(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE2E90);
}

uint64_t sub_1B3C9EEB4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1B3C9EEE8()
{
  unint64_t result = qword_1E9CE2DE0;
  if (!qword_1E9CE2DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2DE0);
  }
  return result;
}

uint64_t sub_1B3C9EF34(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_1B3C9EF94()
{
  unint64_t result = qword_1E9CE2DE8;
  if (!qword_1E9CE2DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2DE8);
  }
  return result;
}

unint64_t sub_1B3C9EFE0()
{
  unint64_t result = qword_1E9CE2DF0;
  if (!qword_1E9CE2DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2DF0);
  }
  return result;
}

unint64_t sub_1B3C9F02C()
{
  unint64_t result = qword_1E9CE2DF8;
  if (!qword_1E9CE2DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2DF8);
  }
  return result;
}

uint64_t sub_1B3C9F078(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_32();
  v3();
  return a1;
}

unint64_t sub_1B3C9F0CC()
{
  unint64_t result = qword_1E9CE2E20;
  if (!qword_1E9CE2E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2E20);
  }
  return result;
}

unint64_t sub_1B3C9F118()
{
  unint64_t result = qword_1E9CE2E48;
  if (!qword_1E9CE2E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2E48);
  }
  return result;
}

unint64_t sub_1B3C9F164()
{
  unint64_t result = qword_1E9CE2E50;
  if (!qword_1E9CE2E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2E50);
  }
  return result;
}

unint64_t sub_1B3C9F1B0()
{
  unint64_t result = qword_1E9CE2E58;
  if (!qword_1E9CE2E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2E58);
  }
  return result;
}

unint64_t sub_1B3C9F1FC()
{
  unint64_t result = qword_1E9CE2E60;
  if (!qword_1E9CE2E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2E60);
  }
  return result;
}

unint64_t sub_1B3C9F248()
{
  unint64_t result = qword_1E9CE2E80;
  if (!qword_1E9CE2E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE2E80);
  }
  return result;
}

uint64_t type metadata accessor for VoiceShortcutResponseWithValue.ErrorCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for VoiceShortcutResponseWithValue.SuccessCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for VoiceShortcutResponseWithValue.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for VoiceShortcutResponseWithValue()
{
  return __swift_instantiateGenericMetadata();
}

char *initializeBufferWithCopyOfBuffer for VoiceShortcutClientRequest(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *(void **)a2;
      uint64_t v7 = *((void *)a2 + 1);
      __int16 v8 = *((_WORD *)a2 + 8);
      sub_1B3C9F694(v6, v7, v8);
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v7;
      *((_WORD *)a1 + 8) = v8;
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v10 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v20;
      sub_1B3D72278();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_18;
      }
      type metadata accessor for TriggerType(0);
      int v12 = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (v12 == 1)
      {
        uint64_t v13 = (void *)*((void *)a2 + 1);
        *((void *)a1 + 1) = v13;
        a1[16] = a2[16];
        uint64_t v14 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        uint64_t v17 = type metadata accessor for LocationTrigger.TimeRange(0);
        id v18 = v13;
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          uint64_t v25 = sub_1B3D71C88();
          uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          v26(v15, v16, v25);
          v26(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v25);
          __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
        }
      }
      else
      {
        uint64_t v21 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        uint64_t v24 = sub_1B3D71C88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = *(void **)v29;
      uint64_t v31 = *((void *)v29 + 1);
      uint64_t v32 = *((void *)v29 + 2);
      char v33 = v29[24];
      sub_1B3C9F654(*(void **)v29, v31, v32, v33);
      *(void *)uint64_t v28 = v30;
      *((void *)v28 + 1) = v31;
      *((void *)v28 + 2) = v32;
      v28[24] = v33;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_18;
  }
  uint64_t v9 = *(char **)a2;
  *(void *)a1 = *(void *)a2;
  a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

uint64_t sub_1B3C9F654(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    id v5 = a1;
    uint64_t v4 = vars8;
  }
  return sub_1B3D72278();
}

id sub_1B3C9F694(id a1, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x4000) != 0) {
    return (id)sub_1B3C9F6A4((uint64_t)a1, a2, a3 & 0xBFFF);
  }
  else {
    return a1;
  }
}

uint64_t sub_1B3C9F6A4(uint64_t a1, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x8000) == 0) {
    return sub_1B3D72278();
  }
  return result;
}

void destroy for VoiceShortcutClientRequest(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = *(void **)a1;
    uint64_t v3 = *(void *)(a1 + 8);
    __int16 v4 = *(_WORD *)(a1 + 16);
    sub_1B3C9EE28(v2, v3, v4);
  }
  else
  {
    type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      type metadata accessor for TriggerType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {

        uint64_t v6 = a1 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        uint64_t v7 = type metadata accessor for LocationTrigger.TimeRange(0);
        if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
        {
          uint64_t v8 = sub_1B3D71C88();
          uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
          v9(v6, v8);
          v9(v6 + *(int *)(v7 + 20), v8);
        }
      }
      else
      {
        uint64_t v10 = a1 + *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        uint64_t v11 = sub_1B3D71C88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      uint64_t v13 = *(void **)v12;
      uint64_t v14 = *(void *)(v12 + 8);
      uint64_t v15 = *(void *)(v12 + 16);
      char v16 = *(unsigned char *)(v12 + 24);
      sub_1B3C9A3A0(v13, v14, v15, v16);
    }
  }
}

void *initializeWithCopy for VoiceShortcutClientRequest(void *a1, __int16 *a2)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v7 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v17;
      sub_1B3D72278();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_16;
      }
      type metadata accessor for TriggerType(0);
      int v9 = swift_getEnumCaseMultiPayload();
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v9 == 1)
      {
        uint64_t v10 = (void *)*((void *)a2 + 1);
        a1[1] = v10;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v11 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = type metadata accessor for LocationTrigger.TimeRange(0);
        id v15 = v10;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
          memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          uint64_t v22 = sub_1B3D71C88();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          v23(v12, v13, v22);
          v23(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
        }
      }
      else
      {
        uint64_t v18 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_1B3D71C88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = *(void **)v26;
      uint64_t v28 = *((void *)v26 + 1);
      uint64_t v29 = *((void *)v26 + 2);
      char v30 = v26[24];
      sub_1B3C9F654(*(void **)v26, v28, v29, v30);
      *(void *)uint64_t v25 = v27;
      *((void *)v25 + 1) = v28;
      *((void *)v25 + 2) = v29;
      v25[24] = v30;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  __int16 v4 = *(void **)a2;
  uint64_t v5 = *((void *)a2 + 1);
  __int16 v6 = a2[8];
  sub_1B3C9F694(v4, v5, v6);
  *a1 = v4;
  a1[1] = v5;
  *((_WORD *)a1 + 8) = v6;
LABEL_16:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for VoiceShortcutClientRequest(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1B3C9F078(a1, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __int16 v4 = *(void **)a2;
      uint64_t v5 = *(void *)(a2 + 8);
      __int16 v6 = *(_WORD *)(a2 + 16);
      sub_1B3C9F694(v4, v5, v6);
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      *(_WORD *)(a1 + 16) = v6;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v7 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      sub_1B3D72278();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_17;
      }
      type metadata accessor for TriggerType(0);
      int v9 = swift_getEnumCaseMultiPayload();
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v9 == 1)
      {
        uint64_t v10 = *(void **)(a2 + 8);
        *(void *)(a1 + 8) = v10;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v11 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        uint64_t v12 = (char *)(a1 + v11);
        uint64_t v13 = (char *)(a2 + v11);
        uint64_t v14 = type metadata accessor for LocationTrigger.TimeRange(0);
        id v15 = v10;
        if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
          memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          uint64_t v21 = sub_1B3D71C88();
          uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
          v22(v12, v13, v21);
          v22(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
        }
      }
      else
      {
        uint64_t v17 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        uint64_t v20 = sub_1B3D71C88();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      uint64_t v24 = a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v26 = *(void **)v25;
      uint64_t v27 = *(void *)(v25 + 8);
      uint64_t v28 = *(void *)(v25 + 16);
      char v29 = *(unsigned char *)(v25 + 24);
      sub_1B3C9F654(*(void **)v25, v27, v28, v29);
      *(void *)uint64_t v24 = v26;
      *(void *)(v24 + 8) = v27;
      *(void *)(v24 + 16) = v28;
      *(unsigned char *)(v24 + 24) = v29;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_17;
  }
  return a1;
}

unsigned char *initializeWithTake for VoiceShortcutClientRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      type metadata accessor for TriggerType(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        uint64_t v8 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        int v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = type metadata accessor for LocationTrigger.TimeRange(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
          memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v17 = sub_1B3D71C88();
          uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
          v18(v9, v10, v17);
          v18(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v17);
          __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
        }
      }
      else
      {
        uint64_t v13 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        uint64_t v14 = &a1[v13];
        id v15 = &a2[v13];
        uint64_t v16 = sub_1B3D71C88();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      _OWORD *v20 = *v21;
      *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v21 + 9);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *assignWithTake for VoiceShortcutClientRequest(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B3C9F078((uint64_t)a1, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        type metadata accessor for TriggerType(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
        {
          *((void *)a1 + 1) = *((void *)a2 + 1);
          a1[16] = a2[16];
          uint64_t v8 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
          int v9 = &a1[v8];
          uint64_t v10 = &a2[v8];
          uint64_t v11 = type metadata accessor for LocationTrigger.TimeRange(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
          {
            uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
            memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
          }
          else
          {
            uint64_t v17 = sub_1B3D71C88();
            uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
            v18(v9, v10, v17);
            v18(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v17);
            __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
          }
        }
        else
        {
          uint64_t v13 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
          uint64_t v14 = &a1[v13];
          id v15 = &a2[v13];
          uint64_t v16 = sub_1B3D71C88();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        _OWORD *v20 = *v21;
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v21 + 9);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B3CA0458()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B3CA0468()
{
  uint64_t result = type metadata accessor for VoiceShortcutClientRequest.Automations(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for VoiceShortcutClientRequest.Automations(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      sub_1B3D72278();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for TriggerType(0);
      int v8 = swift_getEnumCaseMultiPayload();
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v8 == 1)
      {
        int v9 = (void *)a2[1];
        a1[1] = v9;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v10 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = type metadata accessor for LocationTrigger.TimeRange(0);
        id v14 = v9;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
          memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          uint64_t v22 = sub_1B3D71C88();
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          v23(v11, v12, v22);
          v23(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        }
      }
      else
      {
        uint64_t v18 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_1B3D71C88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = *(void **)v26;
      uint64_t v28 = *((void *)v26 + 1);
      uint64_t v29 = *((void *)v26 + 2);
      char v30 = v26[24];
      sub_1B3C9F654(*(void **)v26, v28, v29, v30);
      *(void *)uint64_t v25 = v27;
      *((void *)v25 + 1) = v28;
      *((void *)v25 + 2) = v29;
      v25[24] = v30;
      goto LABEL_15;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for VoiceShortcutClientRequest.Automations(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    type metadata accessor for TriggerType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {

      uint64_t v3 = a1 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v4 = type metadata accessor for LocationTrigger.TimeRange(0);
      if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
      {
        uint64_t v5 = sub_1B3D71C88();
        uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
        v6(v3, v5);
        v6(v3 + *(int *)(v4 + 20), v5);
      }
    }
    else
    {
      uint64_t v7 = a1 + *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      uint64_t v8 = sub_1B3D71C88();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
    uint64_t v9 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
    uint64_t v10 = *(void **)v9;
    uint64_t v11 = *(void *)(v9 + 8);
    uint64_t v12 = *(void *)(v9 + 16);
    char v13 = *(unsigned char *)(v9 + 24);
    return sub_1B3C9A3A0(v10, v11, v12, v13);
  }
  return result;
}

void *initializeWithCopy for VoiceShortcutClientRequest.Automations(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    sub_1B3D72278();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for TriggerType(0);
    int v7 = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (v7 == 1)
    {
      uint64_t v8 = (void *)a2[1];
      a1[1] = v8;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v9 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for LocationTrigger.TimeRange(0);
      id v13 = v8;
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v20 = sub_1B3D71C88();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        v21(v10, v11, v20);
        v21(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      uint64_t v16 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_1B3D71C88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(void **)v24;
    uint64_t v26 = *((void *)v24 + 1);
    uint64_t v27 = *((void *)v24 + 2);
    char v28 = v24[24];
    sub_1B3C9F654(*(void **)v24, v26, v27, v28);
    *(void *)uint64_t v23 = v25;
    *((void *)v23 + 1) = v26;
    *((void *)v23 + 2) = v27;
    v23[24] = v28;
    goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for VoiceShortcutClientRequest.Automations(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B3C9F078((uint64_t)a1, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest.Automations);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1B3D72278();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for TriggerType(0);
      int v7 = swift_getEnumCaseMultiPayload();
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v7 == 1)
      {
        uint64_t v8 = (void *)a2[1];
        a1[1] = v8;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v9 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for LocationTrigger.TimeRange(0);
        id v13 = v8;
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
        {
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v19 = sub_1B3D71C88();
          uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
          v20(v10, v11, v19);
          v20(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v19);
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
        }
      }
      else
      {
        uint64_t v15 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_1B3D71C88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = *(void **)v23;
      uint64_t v25 = *((void *)v23 + 1);
      uint64_t v26 = *((void *)v23 + 2);
      char v27 = v23[24];
      sub_1B3C9F654(*(void **)v23, v25, v26, v27);
      *(void *)uint64_t v22 = v24;
      *((void *)v22 + 1) = v25;
      *((void *)v22 + 2) = v26;
      v22[24] = v27;
      goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *initializeWithTake for VoiceShortcutClientRequest.Automations(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    type metadata accessor for TriggerType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[16] = a2[16];
      uint64_t v7 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for LocationTrigger.TimeRange(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v16 = sub_1B3D71C88();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
        v17(v8, v9, v16);
        v17(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      }
    }
    else
    {
      uint64_t v12 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      id v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_1B3D71C88();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    _OWORD *v19 = *v20;
    *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v20 + 9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *assignWithTake for VoiceShortcutClientRequest.Automations(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B3C9F078((uint64_t)a1, (void (*)(void))type metadata accessor for VoiceShortcutClientRequest.Automations);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      type metadata accessor for TriggerType(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        uint64_t v7 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        uint64_t v10 = type metadata accessor for LocationTrigger.TimeRange(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
        {
          uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
          memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
        }
        else
        {
          uint64_t v16 = sub_1B3D71C88();
          uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
          v17(v8, v9, v16);
          v17(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v16);
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
        }
      }
      else
      {
        uint64_t v12 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        id v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = sub_1B3D71C88();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2950) + 48);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      _OWORD *v19 = *v20;
      *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v20 + 9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B3CA1378()
{
  uint64_t result = type metadata accessor for TriggerType(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v2;
    uint64_t v4 = &unk_1B3D82A30;
    uint64_t v5 = &unk_1B3D82A30;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for VoiceShortcutClientRequest.ToolKit(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B3CA15D0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B3C9F694);
}

void destroy for VoiceShortcutClientRequest.ToolKit(uint64_t a1)
{
}

uint64_t *assignWithCopy for VoiceShortcutClientRequest.ToolKit(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B3CA164C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B3C9F694, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B3C9EE28);
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for VoiceShortcutClientRequest.ToolKit(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CA16D0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B3C9EE28);
}

uint64_t getEnumTagSinglePayload for VoiceShortcutClientRequest.ToolKit(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x1FFF && *(unsigned char *)(a1 + 18))
    {
      unsigned int v2 = *(_DWORD *)a1 + 8190;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int16 *)(a1 + 16) >> 1) & 0x1F00 | *(_WORD *)(a1 + 16) & 0xFE | (*(unsigned __int16 *)(a1 + 16) >> 14) & 1) ^ 0x1FFF;
      if (v2 >> 1 >= 0xFFF) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VoiceShortcutClientRequest.ToolKit(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x1FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x1FFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1FFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2)
    {
      unsigned int v3 = ((-a2 >> 1) & 0xFFF) - (a2 << 12);
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(_WORD *)(result + 16) = (4 * v3) & 0x7E00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_1B3CA1568(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 16) >> 14) & 1;
}

uint64_t sub_1B3CA1574(uint64_t result)
{
  *(_WORD *)(result + 16) &= ~0x4000u;
  return result;
}

uint64_t sub_1B3CA1584(uint64_t result, char a2)
{
  *(_WORD *)(result + 16) = *(_WORD *)(result + 16) & 0x8101 | ((a2 & 1) << 14);
  return result;
}

void type metadata accessor for VoiceShortcutClientRequest.ToolKit()
{
}

uint64_t initializeBufferWithCopyOfBuffer for VoiceShortcutClientRequest.ToolKit.SyncingRequest(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B3CA15D0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B3C9F6A4);
}

uint64_t destroy for VoiceShortcutClientRequest.ToolKit.SyncingRequest(uint64_t a1)
{
  return sub_1B3C9EE38(*(void *)a1, *(void *)(a1 + 8), *(_WORD *)(a1 + 16));
}

uint64_t sub_1B3CA15D0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int16 *)a2 + 8);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for VoiceShortcutClientRequest.ToolKit.SyncingRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1B3CA164C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1B3C9F6A4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B3C9EE38);
}

uint64_t *sub_1B3CA164C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int16 *)a2 + 8);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int16 *)a1 + 8);
  *((_WORD *)a1 + 8) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for VoiceShortcutClientRequest.ToolKit.SyncingRequest(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CA16D0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1B3C9EE38);
}

uint64_t *sub_1B3CA16D0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  __int16 v5 = *(_WORD *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int16 *)a1 + 8);
  *((_WORD *)a1 + 8) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceShortcutClientRequest.ToolKit.SyncingRequest(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 18))
    {
      unsigned int v2 = *(_DWORD *)a1 + 16382;
    }
    else
    {
      unsigned int v2 = (*(_WORD *)(a1 + 16) & 0xFE | (*(unsigned __int16 *)(a1 + 16) >> 15) | (*(unsigned __int16 *)(a1 + 16) >> 1) & 0x3F00) ^ 0x3FFF;
      if (v2 >= 0x3FFE) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VoiceShortcutClientRequest.ToolKit.SyncingRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x3FFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2)
    {
      unsigned int v3 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(_WORD *)(result + 16) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_1B3CA17E8(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 16) >> 15;
}

uint64_t sub_1B3CA17F4(uint64_t result)
{
  *(_WORD *)(result + 16) &= ~0x8000u;
  return result;
}

uint64_t sub_1B3CA1804(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 16) = *(_WORD *)(result + 16) & 0x101 | (a2 << 15);
  return result;
}

void type metadata accessor for VoiceShortcutClientRequest.ToolKit.SyncingRequest()
{
}

unint64_t destroy for VoiceShortcutResponse(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for VoiceShortcutResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  if (v3 < 0xFFFFFFFF)
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v4 = *(void *)(a2 + 24);
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 16) = v3;
    *(void *)(a1 + 24) = v4;
    uint64_t v6 = *(void *)(a2 + 40);
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3D72278();
  }
  return a1;
}

void *assignWithCopy for VoiceShortcutResponse(void *a1, void *a2)
{
  unint64_t v4 = a2[2];
  if (a1[2] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    long long v6 = *((_OWORD *)a2 + 1);
    long long v7 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *((_OWORD *)a1 + 1) = v6;
    *((_OWORD *)a1 + 2) = v7;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VoiceShortcutResponse(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceShortcutResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VoiceShortcutResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t sub_1B3CA1BC0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_1B3CA1BD8(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for VoiceShortcutResponse()
{
}

uint64_t sub_1B3CA1C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1B3CA1C1C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1B3CA1CB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x38uLL) {
    uint64_t v5 = 56;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2) {
      unsigned int v9 = *(_DWORD *)a2 + 2;
    }
    if (v9 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      a1[6] = a2[6];
      *((unsigned char *)a1 + v5) = 1;
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1B3CA1DE4(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x38) {
    unint64_t v2 = 56;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v9 = *(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
    return v9();
  }
}

uint64_t sub_1B3CA1F3C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x38uLL) {
    uint64_t v4 = 56;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v10 = *((void *)a2 + 3);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = v10;
    uint64_t v11 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3D72278();
    char v12 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v12 = 0;
  }
  *(unsigned char *)(a1 + v4) = v12;
  return a1;
}

unsigned __int8 *sub_1B3CA20A8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x38uLL) {
      uint64_t v7 = 56;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      a1[v7] = 1;
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

uint64_t sub_1B3CA2314(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x38uLL) {
    uint64_t v4 = 56;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    long long v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    char v11 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v11 = 0;
  }
  *(unsigned char *)(a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_1B3CA245C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x38uLL) {
      uint64_t v7 = 56;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      long long v18 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v18;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      char v19 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v19 = 0;
    }
    a1[v7] = v19;
  }
  return a1;
}

uint64_t sub_1B3CA2694(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 56;
  if (*(void *)(v3 + 64) > 0x38uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1B3CA27C8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1B3CA298CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1B3CA29B4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 56;
  if (*(void *)(v2 + 64) > 0x38uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1B3CA2A6C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x38uLL) {
    size_t v4 = 56;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

ValueMetadata *type metadata accessor for VoiceShortcutResponse.CodingKeys()
{
  return &type metadata for VoiceShortcutResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutResponse.SuccessCodingKeys()
{
  return &type metadata for VoiceShortcutResponse.SuccessCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutResponse.ErrorCodingKeys()
{
  return &type metadata for VoiceShortcutResponse.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.CodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.AutomationsCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.AutomationsCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKitCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKitCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit.CodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit.CodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit.IndexingRequestCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit.IndexingRequestCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit.SyncingRequestCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit.SyncingRequestCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit.SyncingRequest.CodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit.SyncingRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VoiceShortcutClientRequest.ToolKit.SyncingRequest.PullCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    char *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CA2CBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit.SyncingRequest.PullCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit.SyncingRequest.PullCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit.SyncingRequest.PushCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit.SyncingRequest.PushCodingKeys;
}

uint64_t getEnumTagSinglePayload for VoiceShortcutClientRequest.Automations.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for VoiceShortcutClientRequest.Automations.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CA2E58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.CodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.CodingKeys;
}

unsigned char *_s19VoiceShortcutClient21VoiceShortcutResponseO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CA2F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.CreateTriggerCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.CreateTriggerCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.DeleteTriggerCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.DeleteTriggerCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.FetchAllScheduledTriggersCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.FetchAllScheduledTriggersCodingKeys;
}

unsigned char *_s19VoiceShortcutClient21VoiceShortcutResponseO15ErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        char *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      char *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3CA3050);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.FetchScheduledTriggerCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.FetchScheduledTriggerCodingKeys;
}

unint64_t sub_1B3CA308C()
{
  unint64_t result = qword_1E9CE30B0;
  if (!qword_1E9CE30B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30B0);
  }
  return result;
}

unint64_t sub_1B3CA30DC()
{
  unint64_t result = qword_1E9CE30B8;
  if (!qword_1E9CE30B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30B8);
  }
  return result;
}

unint64_t sub_1B3CA312C()
{
  unint64_t result = qword_1E9CE30C0;
  if (!qword_1E9CE30C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30C0);
  }
  return result;
}

unint64_t sub_1B3CA317C()
{
  unint64_t result = qword_1E9CE30C8;
  if (!qword_1E9CE30C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30C8);
  }
  return result;
}

unint64_t sub_1B3CA31CC()
{
  unint64_t result = qword_1E9CE30D0;
  if (!qword_1E9CE30D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30D0);
  }
  return result;
}

unint64_t sub_1B3CA321C()
{
  unint64_t result = qword_1E9CE30D8;
  if (!qword_1E9CE30D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30D8);
  }
  return result;
}

unint64_t sub_1B3CA326C()
{
  unint64_t result = qword_1E9CE30E0;
  if (!qword_1E9CE30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30E0);
  }
  return result;
}

unint64_t sub_1B3CA32BC()
{
  unint64_t result = qword_1E9CE30E8;
  if (!qword_1E9CE30E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30E8);
  }
  return result;
}

unint64_t sub_1B3CA330C()
{
  unint64_t result = qword_1E9CE30F0;
  if (!qword_1E9CE30F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30F0);
  }
  return result;
}

unint64_t sub_1B3CA335C()
{
  unint64_t result = qword_1E9CE30F8;
  if (!qword_1E9CE30F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE30F8);
  }
  return result;
}

unint64_t sub_1B3CA33AC()
{
  unint64_t result = qword_1E9CE3100;
  if (!qword_1E9CE3100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3100);
  }
  return result;
}

unint64_t sub_1B3CA33FC()
{
  unint64_t result = qword_1E9CE3108;
  if (!qword_1E9CE3108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3108);
  }
  return result;
}

unint64_t sub_1B3CA344C()
{
  unint64_t result = qword_1E9CE3110;
  if (!qword_1E9CE3110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3110);
  }
  return result;
}

unint64_t sub_1B3CA349C()
{
  unint64_t result = qword_1E9CE3118;
  if (!qword_1E9CE3118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3118);
  }
  return result;
}

unint64_t sub_1B3CA34EC()
{
  unint64_t result = qword_1E9CE3120;
  if (!qword_1E9CE3120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3120);
  }
  return result;
}

uint64_t sub_1B3CA3538()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3CA3554()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3CA3570()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3CA358C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3CA35A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3CA35C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3CA35E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3CA35FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1B3CA3618()
{
  return swift_getWitnessTable();
}

unint64_t sub_1B3CA3638()
{
  unint64_t result = qword_1E9CE3128;
  if (!qword_1E9CE3128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3128);
  }
  return result;
}

unint64_t sub_1B3CA3688()
{
  unint64_t result = qword_1E9CE3130;
  if (!qword_1E9CE3130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3130);
  }
  return result;
}

unint64_t sub_1B3CA36D8()
{
  unint64_t result = qword_1E9CE3138;
  if (!qword_1E9CE3138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3138);
  }
  return result;
}

unint64_t sub_1B3CA3728()
{
  unint64_t result = qword_1E9CE3140;
  if (!qword_1E9CE3140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3140);
  }
  return result;
}

unint64_t sub_1B3CA3778()
{
  unint64_t result = qword_1E9CE3148;
  if (!qword_1E9CE3148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3148);
  }
  return result;
}

unint64_t sub_1B3CA37C8()
{
  unint64_t result = qword_1E9CE3150;
  if (!qword_1E9CE3150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3150);
  }
  return result;
}

unint64_t sub_1B3CA3818()
{
  unint64_t result = qword_1E9CE3158;
  if (!qword_1E9CE3158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3158);
  }
  return result;
}

unint64_t sub_1B3CA3868()
{
  unint64_t result = qword_1E9CE3160;
  if (!qword_1E9CE3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3160);
  }
  return result;
}

unint64_t sub_1B3CA38B8()
{
  unint64_t result = qword_1E9CE3168;
  if (!qword_1E9CE3168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3168);
  }
  return result;
}

unint64_t sub_1B3CA3908()
{
  unint64_t result = qword_1E9CE3170;
  if (!qword_1E9CE3170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3170);
  }
  return result;
}

unint64_t sub_1B3CA3958()
{
  unint64_t result = qword_1E9CE3178;
  if (!qword_1E9CE3178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3178);
  }
  return result;
}

unint64_t sub_1B3CA39A8()
{
  unint64_t result = qword_1E9CE3180;
  if (!qword_1E9CE3180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3180);
  }
  return result;
}

unint64_t sub_1B3CA39F8()
{
  unint64_t result = qword_1E9CE3188;
  if (!qword_1E9CE3188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3188);
  }
  return result;
}

unint64_t sub_1B3CA3A48()
{
  unint64_t result = qword_1E9CE3190;
  if (!qword_1E9CE3190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3190);
  }
  return result;
}

unint64_t sub_1B3CA3A98()
{
  unint64_t result = qword_1E9CE3198;
  if (!qword_1E9CE3198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3198);
  }
  return result;
}

unint64_t sub_1B3CA3AE8()
{
  unint64_t result = qword_1E9CE31A0;
  if (!qword_1E9CE31A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31A0);
  }
  return result;
}

unint64_t sub_1B3CA3B38()
{
  unint64_t result = qword_1E9CE31A8;
  if (!qword_1E9CE31A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31A8);
  }
  return result;
}

unint64_t sub_1B3CA3B88()
{
  unint64_t result = qword_1E9CE31B0;
  if (!qword_1E9CE31B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31B0);
  }
  return result;
}

unint64_t sub_1B3CA3BD8()
{
  unint64_t result = qword_1E9CE31B8;
  if (!qword_1E9CE31B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31B8);
  }
  return result;
}

unint64_t sub_1B3CA3C28()
{
  unint64_t result = qword_1E9CE31C0;
  if (!qword_1E9CE31C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31C0);
  }
  return result;
}

unint64_t sub_1B3CA3C78()
{
  unint64_t result = qword_1E9CE31C8;
  if (!qword_1E9CE31C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31C8);
  }
  return result;
}

unint64_t sub_1B3CA3CC8()
{
  unint64_t result = qword_1E9CE31D0;
  if (!qword_1E9CE31D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31D0);
  }
  return result;
}

unint64_t sub_1B3CA3D18()
{
  unint64_t result = qword_1E9CE31D8;
  if (!qword_1E9CE31D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31D8);
  }
  return result;
}

unint64_t sub_1B3CA3D68()
{
  unint64_t result = qword_1E9CE31E0;
  if (!qword_1E9CE31E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31E0);
  }
  return result;
}

unint64_t sub_1B3CA3DB8()
{
  unint64_t result = qword_1E9CE31E8;
  if (!qword_1E9CE31E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31E8);
  }
  return result;
}

unint64_t sub_1B3CA3E08()
{
  unint64_t result = qword_1E9CE31F0;
  if (!qword_1E9CE31F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31F0);
  }
  return result;
}

unint64_t sub_1B3CA3E58()
{
  unint64_t result = qword_1E9CE31F8;
  if (!qword_1E9CE31F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE31F8);
  }
  return result;
}

unint64_t sub_1B3CA3EA8()
{
  unint64_t result = qword_1E9CE3200;
  if (!qword_1E9CE3200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3200);
  }
  return result;
}

unint64_t sub_1B3CA3EF8()
{
  unint64_t result = qword_1E9CE3208;
  if (!qword_1E9CE3208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3208);
  }
  return result;
}

unint64_t sub_1B3CA3F48()
{
  unint64_t result = qword_1E9CE3210;
  if (!qword_1E9CE3210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3210);
  }
  return result;
}

unint64_t sub_1B3CA3F98()
{
  unint64_t result = qword_1E9CE3218;
  if (!qword_1E9CE3218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3218);
  }
  return result;
}

unint64_t sub_1B3CA3FE8()
{
  unint64_t result = qword_1E9CE3220;
  if (!qword_1E9CE3220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3220);
  }
  return result;
}

unint64_t sub_1B3CA4038()
{
  unint64_t result = qword_1E9CE3228;
  if (!qword_1E9CE3228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3228);
  }
  return result;
}

unint64_t sub_1B3CA4088()
{
  unint64_t result = qword_1E9CE3230;
  if (!qword_1E9CE3230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3230);
  }
  return result;
}

uint64_t sub_1B3CA40D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

void OUTLINED_FUNCTION_11_5(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_14_4()
{
  return sub_1B3D72AE8();
}

uint64_t OUTLINED_FUNCTION_19_2(uint64_t a1, uint64_t a2)
{
  return sub_1B3CA40D8(1, a2, v2, v2 + 32, 0, (2 * a2) | 1);
}

uint64_t OUTLINED_FUNCTION_25_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return sub_1B3D72BA8();
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  return sub_1B3D72E58();
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_37_0()
{
  return sub_1B3D72AE8();
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  return sub_1B3D73158();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_42()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_43()
{
  return sub_1B3D73108();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_46()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48()
{
  return sub_1B3D72AE8();
}

uint64_t OUTLINED_FUNCTION_49()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_54()
{
  return v0;
}

uint64_t CodableError.errorCode.getter()
{
  return *(void *)v0;
}

uint64_t CodableError.errorDomain.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1B3D72278();
  return v1;
}

uint64_t CodableError.localizedDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1B3D72278();
  return v1;
}

uint64_t CodableError.localizedFailureReason.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1B3D72278();
  return v1;
}

void CodableError.init(_:)(void *a1@<X0>, void *a2@<X8>)
{
  unsigned int v4 = (void *)sub_1B3D71D28();
  id v18 = objc_msgSend(v4, sel_code);
  id v5 = objc_msgSend(v4, sel_domain);
  uint64_t v6 = sub_1B3D723A8();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(v4, sel_localizedDescription);
  uint64_t v10 = sub_1B3D723A8();
  uint64_t v12 = v11;

  id v13 = objc_msgSend(v4, sel_localizedFailureReason);
  if (v13)
  {
    unsigned int v14 = v13;
    uint64_t v15 = sub_1B3D723A8();
    uint64_t v17 = v16;
  }
  else
  {

    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  *a2 = v18;
  a2[1] = v6;
  a2[2] = v8;
  a2[3] = v10;
  a2[4] = v12;
  a2[5] = v15;
  a2[6] = v17;
}

uint64_t sub_1B3CA45D0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x646F43726F727265 && a2 == 0xE900000000000065;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D6F44726F727265 && a2 == 0xEB000000006E6961;
    if (v6 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001B3D89DE0 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x80000001B3D89E00)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = sub_1B3D72E58();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1B3CA4784(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D6F44726F727265;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      unint64_t result = 0x646F43726F727265;
      break;
  }
  return result;
}

unint64_t sub_1B3CA4828()
{
  return sub_1B3CA4784(*v0);
}

uint64_t sub_1B3CA4830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CA45D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CA4858(uint64_t a1)
{
  unint64_t v2 = sub_1B3CA4A90();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CA4894(uint64_t a1)
{
  unint64_t v2 = sub_1B3CA4A90();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CodableError.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3238);
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1[1];
  v14[4] = v1[2];
  void v14[5] = v10;
  uint64_t v11 = v1[3];
  void v14[2] = v1[4];
  long long v14[3] = v11;
  uint64_t v12 = v1[5];
  v14[0] = v1[6];
  v14[1] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CA4A90();
  sub_1B3D73178();
  char v18 = 0;
  sub_1B3D72BF8();
  if (!v2)
  {
    char v17 = 1;
    sub_1B3D72BD8();
    char v16 = 2;
    sub_1B3D72BD8();
    char v15 = 3;
    sub_1B3D72BB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_1B3CA4A90()
{
  unint64_t result = qword_1E9CE3240;
  if (!qword_1E9CE3240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3240);
  }
  return result;
}

uint64_t CodableError.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3248);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CA4A90();
  sub_1B3D73158();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v6 = sub_1B3D72B48();
  uint64_t v7 = sub_1B3D72B28();
  uint64_t v10 = v9;
  uint64_t v20 = v7;
  sub_1B3D72278();
  uint64_t v18 = sub_1B3D72B28();
  uint64_t v19 = v11;
  sub_1B3D72278();
  uint64_t v12 = sub_1B3D72B08();
  uint64_t v14 = v13;
  uint64_t v17 = v12;
  uint64_t v15 = OUTLINED_FUNCTION_1_8();
  v16(v15);
  sub_1B3D72278();
  *a2 = v6;
  a2[1] = v20;
  a2[2] = v10;
  a2[3] = v18;
  a2[4] = v19;
  a2[5] = v17;
  a2[6] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CA4D58(uint64_t a1)
{
  unint64_t v2 = sub_1B3CA5238();
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1B3CA4D94(uint64_t a1)
{
  unint64_t v2 = sub_1B3CA5238();
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1B3CA4DDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CodableError.init(from:)(a1, a2);
}

uint64_t sub_1B3CA4DF4(void *a1)
{
  return CodableError.encode(to:)(a1);
}

uint64_t destroy for CodableError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CodableError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_1B3D72278();
  sub_1B3D72278();
  sub_1B3D72278();
  return a1;
}

void *assignWithCopy for CodableError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CodableError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableError()
{
  return &type metadata for CodableError;
}

unsigned char *storeEnumTagSinglePayload for CodableError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CA5110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableError.CodingKeys()
{
  return &type metadata for CodableError.CodingKeys;
}

unint64_t sub_1B3CA514C()
{
  unint64_t result = qword_1E9CE3250;
  if (!qword_1E9CE3250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3250);
  }
  return result;
}

unint64_t sub_1B3CA519C()
{
  unint64_t result = qword_1E9CE3258;
  if (!qword_1E9CE3258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3258);
  }
  return result;
}

unint64_t sub_1B3CA51EC()
{
  unint64_t result = qword_1E9CE3260;
  if (!qword_1E9CE3260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3260);
  }
  return result;
}

unint64_t sub_1B3CA5238()
{
  unint64_t result = qword_1E9CE3268[0];
  if (!qword_1E9CE3268[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9CE3268);
  }
  return result;
}

uint64_t sub_1B3CA5284()
{
  return xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
}

uint64_t sub_1B3CA528C()
{
  uint64_t v0 = swift_slowAlloc();
  xpc_connection_get_audit_token();
  return *(void *)v0;
}

double sub_1B3CA52CC@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2 = (_OWORD *)swift_slowAlloc();
  xpc_connection_get_audit_token();
  long long v3 = v2[1];
  *(_OWORD *)v9.val = *v2;
  *(_OWORD *)&v9.val[4] = v3;
  SecTaskRef v4 = SecTaskCreateWithAuditToken(0, &v9);
  if (v4)
  {
    uint64_t v5 = v4;
    unsigned int v6 = (__CFString *)sub_1B3D72378();
    CFTypeRef v7 = SecTaskCopyValueForEntitlement(v5, v6, 0);

    if (v7)
    {
      *(void *)(a1 + 24) = swift_getObjectType();

      *(void *)a1 = v7;
      return result;
    }
  }
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t XPCIncomingConnection.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCIncomingConnection.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

unint64_t XPCIncomingConnection.description.getter()
{
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  uint64_t v1 = swift_unknownObjectRetain();
  uint64_t v2 = MEMORY[0x1B3EC64A0](v1);
  sub_1B3D72408();
  MEMORY[0x1B3EC61A0](v2, -1, -1);
  swift_unknownObjectRelease();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  return 0xD000000000000022;
}

unint64_t sub_1B3CA5500()
{
  return XPCIncomingConnection.description.getter();
}

uint64_t type metadata accessor for XPCIncomingConnection()
{
  return self;
}

uint64_t method lookup function for XPCIncomingConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for XPCIncomingConnection);
}

uint64_t dispatch thunk of XPCIncomingConnection.pid.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of XPCIncomingConnection.auditToken.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of XPCIncomingConnection.value(forEntitlement:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1B3CA55CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  uint64_t v7 = sub_1B3CA799C((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

uint64_t sub_1B3CA56B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[2];
  id v6[2] = *(void *)(*v2 + 80);
  v6[3] = a2;
  v6[4] = a1;
  sub_1B3D71EA8();
  sub_1B3D72598();
  sub_1B3CA7748();
  uint64_t v4 = sub_1B3D722D8();
  swift_retain();
  sub_1B3CA7798((void (*)(uint64_t))sub_1B3CA7920, (uint64_t)v6, v3, v4, MEMORY[0x1E4FBC848] + 8);
  return swift_release();
}

uint64_t sub_1B3CA577C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B3D72598();
  uint64_t v5 = sub_1B3D72848();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = sub_1B3D71EA8();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  sub_1B3CA7748();
  sub_1B3D722D8();
  return sub_1B3D722F8();
}

uint64_t sub_1B3CA5930(uint64_t a1)
{
  uint64_t v2 = v1[2];
  v5[2] = *(void *)(*v1 + 80);
  v5[3] = a1;
  sub_1B3D71EA8();
  sub_1B3D72598();
  sub_1B3CA7748();
  uint64_t v3 = sub_1B3D722D8();
  swift_retain();
  sub_1B3CA7798((void (*)(uint64_t))sub_1B3CA7904, (uint64_t)v5, v2, v3, MEMORY[0x1E4FBC848] + 8);
  return swift_release();
}

uint64_t sub_1B3CA59F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1B3D72598();
  uint64_t v4 = sub_1B3D72848();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v11 - v5;
  uint64_t v7 = sub_1B3D71EA8();
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v3);
  sub_1B3CA7748();
  sub_1B3D722D8();
  return sub_1B3D722F8();
}

uint64_t sub_1B3CA5B60()
{
  uint64_t v1 = v0[2];
  v5[2] = *(void *)(*v0 + 80);
  sub_1B3D71EA8();
  sub_1B3D72598();
  sub_1B3CA7748();
  uint64_t v2 = sub_1B3D722D8();
  uint64_t v3 = sub_1B3D72288();
  swift_retain();
  sub_1B3CA7798((void (*)(uint64_t))sub_1B3CA78E8, (uint64_t)v5, v1, v2, v3);
  swift_release();
  return v5[5];
}

uint64_t sub_1B3CA5C48@<X0>(uint64_t *a1@<X8>)
{
  sub_1B3D71EA8();
  sub_1B3D72598();
  sub_1B3CA7748();
  uint64_t result = sub_1B3D722A8();
  *a1 = result;
  return result;
}

uint64_t sub_1B3CA5CC0()
{
  uint64_t v1 = sub_1B3D72568();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v9[-v2];
  uint64_t v4 = sub_1B3D71EA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B3D71E98();
  uint64_t v10 = v0;
  uint64_t v11 = v7;
  sub_1B3CA6098((uint64_t)v3);
  sub_1B3D725A8();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1B3CA5E2C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v18[1] = a1;
  uint64_t v19 = a3;
  uint64_t v5 = *a2;
  uint64_t v6 = sub_1B3D71EA8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v20 = *(void *)(v5 + 80);
  uint64_t v9 = sub_1B3D72598();
  uint64_t v10 = sub_1B3D72848();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v18 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))((char *)v18 - v12, a1, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
  uint64_t v14 = v19;
  sub_1B3CA56B4((uint64_t)v13, v19);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v6);
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v20;
  *(void *)(v16 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  return sub_1B3D72558();
}

uint64_t sub_1B3CA6098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBD028];
  uint64_t v3 = sub_1B3D72568();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1B3CA6110()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CA61EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1B3D72548();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_1B3D72598();
  sub_1B3D72578();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1B3CA6378()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CA6450()
{
  return sub_1B3D72588();
}

uint64_t sub_1B3CA6484()
{
  swift_release();
  return v0;
}

uint64_t sub_1B3CA64A4()
{
  uint64_t v0 = sub_1B3CA6484();
  return MEMORY[0x1F4186488](v0, 24, 7);
}

uint64_t sub_1B3CA64D4()
{
  return sub_1B3CA6508();
}

uint64_t sub_1B3CA6508()
{
  sub_1B3D71EA8();
  sub_1B3D72598();
  sub_1B3CA7748();
  uint64_t v3 = sub_1B3D72208();
  uint64_t v1 = sub_1B3D722D8();
  *(void *)(v0 + 16) = sub_1B3CA55CC((uint64_t)&v3, v1);
  return v0;
}

uint64_t ToManyStream.init()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B3CA75D8(a1, (void (*)(void, uint64_t))type metadata accessor for ToManyStream.Factory, sub_1B3CA64D4, a2);
}

uint64_t type metadata accessor for ToManyStream.Factory()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ToManyStream.wrappedValue.getter()
{
  return sub_1B3CA5CC0();
}

uint64_t ToManyStream.yield(_:)()
{
  return sub_1B3CA6110();
}

Swift::Void __swiftcall ToManyStream.finish()()
{
}

uint64_t sub_1B3CA6658(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[2];
  id v6[2] = *(void *)(*v2 + 80);
  v6[3] = a2;
  v6[4] = a1;
  sub_1B3D71EA8();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72628();
  sub_1B3CA7748();
  uint64_t v4 = sub_1B3D722D8();
  sub_1B3CA7798((void (*)(uint64_t))sub_1B3CA78C8, (uint64_t)v6, v3, v4, MEMORY[0x1E4FBC848] + 8);
  return swift_release();
}

uint64_t sub_1B3CA6734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  uint64_t v5 = sub_1B3D72628();
  uint64_t v6 = sub_1B3D72848();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = sub_1B3D71EA8();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v8, a3, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v5);
  sub_1B3CA7748();
  sub_1B3D722D8();
  return sub_1B3D722F8();
}

uint64_t sub_1B3CA68F4(uint64_t a1)
{
  uint64_t v2 = v1[2];
  v5[2] = *(void *)(*v1 + 80);
  v5[3] = a1;
  sub_1B3D71EA8();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72628();
  sub_1B3CA7748();
  uint64_t v3 = sub_1B3D722D8();
  sub_1B3CA7798((void (*)(uint64_t))sub_1B3CA78AC, (uint64_t)v5, v2, v3, MEMORY[0x1E4FBC848] + 8);
  return swift_release();
}

uint64_t sub_1B3CA69CC(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  uint64_t v3 = sub_1B3D72628();
  uint64_t v4 = sub_1B3D72848();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v11 - v5;
  uint64_t v7 = sub_1B3D71EA8();
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v3);
  sub_1B3CA7748();
  sub_1B3D722D8();
  return sub_1B3D722F8();
}

uint64_t sub_1B3CA6B54()
{
  uint64_t v1 = v0[2];
  v5[2] = *(void *)(*v0 + 80);
  sub_1B3D71EA8();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72628();
  sub_1B3CA7748();
  uint64_t v2 = sub_1B3D722D8();
  uint64_t v3 = sub_1B3D724A8();
  sub_1B3CA7798((void (*)(uint64_t))sub_1B3CA772C, (uint64_t)v5, v1, v2, v3);
  swift_release();
  return v5[5];
}

uint64_t sub_1B3CA6C3C@<X0>(uint64_t *a1@<X8>)
{
  sub_1B3D71EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72628();
  sub_1B3CA7748();
  sub_1B3D722A8();
  sub_1B3D72288();
  swift_getWitnessTable();
  uint64_t result = sub_1B3D724B8();
  *a1 = result;
  return result;
}

uint64_t sub_1B3CA6D24()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  uint64_t v1 = sub_1B3D725F8();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v9[-v2];
  uint64_t v4 = sub_1B3D71EA8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1B3D71E98();
  uint64_t v10 = v0;
  uint64_t v11 = v7;
  sub_1B3CA7044((uint64_t)v3);
  sub_1B3D72638();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1B3CA6EA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = sub_1B3D71EA8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  sub_1B3CA6658(a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = *(void *)(v6 + 80);
  *(void *)(v11 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72628();
  return sub_1B3D725E8();
}

uint64_t sub_1B3CA7044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBD120];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  uint64_t v3 = sub_1B3D725F8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_1B3CA70E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CA71B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v13[1] = a1;
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  uint64_t v8 = sub_1B3D725D8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_1B3D72628();
  sub_1B3D72608();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1B3CA7370()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CA7448(int a1, id a2)
{
  id v2 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72628();
  return sub_1B3D72618();
}

uint64_t sub_1B3CA74BC()
{
  return sub_1B3CA74F0();
}

uint64_t sub_1B3CA74F0()
{
  sub_1B3D71EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72628();
  sub_1B3CA7748();
  uint64_t v3 = sub_1B3D72208();
  uint64_t v1 = sub_1B3D722D8();
  *(void *)(v0 + 16) = sub_1B3CA55CC((uint64_t)&v3, v1);
  return v0;
}

uint64_t ToManyThrowingStream.init()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B3CA75D8(a1, (void (*)(void, uint64_t))type metadata accessor for ToManyThrowingStream.Factory, sub_1B3CA74BC, a2);
}

uint64_t sub_1B3CA75D8@<X0>(uint64_t a1@<X0>, void (*a2)(void, uint64_t)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  a2(0, a1);
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for ToManyThrowingStream.Factory()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ToManyThrowingStream.wrappedValue.getter()
{
  return sub_1B3CA6D24();
}

uint64_t ToManyThrowingStream.yield(_:)()
{
  return sub_1B3CA70E0();
}

uint64_t ToManyThrowingStream.finish(throwing:)()
{
  return sub_1B3CA7370();
}

uint64_t type metadata accessor for ToManyStream()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ToManyThrowingStream()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1B3CA76E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1B3CA772C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B3CA6C3C(a1);
}

unint64_t sub_1B3CA7748()
{
  unint64_t result = qword_1EB4FA658;
  if (!qword_1EB4FA658)
  {
    sub_1B3D71EA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA658);
  }
  return result;
}

void sub_1B3CA7798(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1B3CA7824(a3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_1B3CA7824(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7) {
    *a7 = v7;
  }
}

uint64_t sub_1B3CA78AC(uint64_t a1)
{
  return sub_1B3CA69CC(a1, *(void *)(v1 + 24));
}

uint64_t sub_1B3CA78C8(uint64_t a1)
{
  return sub_1B3CA6734(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B3CA78E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1B3CA5C48(a1);
}

uint64_t sub_1B3CA7904(uint64_t a1)
{
  return sub_1B3CA59F4(a1, *(void *)(v1 + 24));
}

uint64_t sub_1B3CA7920(uint64_t a1)
{
  return sub_1B3CA577C(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1B3CA7940(int a1)
{
  return sub_1B3CA7448(a1, *(id *)(v1 + 24));
}

uint64_t sub_1B3CA795C(uint64_t a1)
{
  return sub_1B3CA71B8(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_1B3CA7978(uint64_t a1)
{
  return sub_1B3CA6EA8(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B3CA7984(uint64_t a1)
{
  return sub_1B3CA7C24(a1, (uint64_t (*)(unint64_t))sub_1B3CA68F4);
}

uint64_t sub_1B3CA799C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_1B3D729A8();
  uint64_t v4 = sub_1B3D72998();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t sub_1B3CA7A4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v2 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2);
}

uint64_t sub_1B3CA7AE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B3CA7A4C(a1, a2);
}

uint64_t sub_1B3CA7AFC()
{
  return sub_1B3CA6450();
}

uint64_t sub_1B3CA7B18(uint64_t a1)
{
  return sub_1B3CA61EC(a1, *(void *)(v1 + 24), *(void *)(v1 + 16));
}

uint64_t sub_1B3CA7B34(uint64_t a1)
{
  return sub_1B3CA5E2C(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = sub_1B3D71EA8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1B3CA7C0C(uint64_t a1)
{
  return sub_1B3CA7C24(a1, (uint64_t (*)(unint64_t))sub_1B3CA5930);
}

uint64_t sub_1B3CA7C24(uint64_t a1, uint64_t (*a2)(unint64_t))
{
  uint64_t v4 = *(void *)(sub_1B3D71EA8() - 8);
  return a2(v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

char *sub_1B3CA7C94(void *a1)
{
  uint64_t v2 = sub_1B3D71D78();
  uint64_t v20 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  sub_1B3D72738();

  sub_1B3CAD0A4((unint64_t *)&unk_1E9CE1928, MEMORY[0x1E4F27660]);
  uint64_t v21 = v4;
  uint64_t v6 = v2;
  sub_1B3D72858();
  if (v25)
  {
    uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1B3C78C74(&v24, v23);
      sub_1B3C8D1E8((uint64_t)v23, (uint64_t)v22);
      sub_1B3C78E5C(0, &qword_1E9CE1D18);
      swift_dynamicCast();
      id v8 = v26;
      id v9 = objc_msgSend(v26, sel_bundleIdentifier);
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = sub_1B3D723A8();
        uint64_t v13 = v12;

        id v14 = objc_msgSend(v8, sel_persistentIdentifier);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1B3C86CE0(0, *((void *)v7 + 2) + 1, 1, (uint64_t)v7);
        }
        unint64_t v16 = *((void *)v7 + 2);
        unint64_t v15 = *((void *)v7 + 3);
        if (v16 >= v15 >> 1) {
          uint64_t v7 = sub_1B3C86CE0((char *)(v15 > 1), v16 + 1, 1, (uint64_t)v7);
        }
        *((void *)v7 + 2) = v16 + 1;
        uint64_t v17 = &v7[24 * v16];
        *((void *)v17 + 4) = v11;
        *((void *)v17 + 5) = v13;
        *((void *)v17 + 6) = v14;
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      }
      sub_1B3D72858();
    }
    while (v25);
  }
  else
  {
    uint64_t v7 = (char *)MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v6);
  return v7;
}

uint64_t LaunchServicesSnapshot.State.bundleId.getter()
{
  uint64_t v1 = *v0;
  sub_1B3D72278();
  return v1;
}

id LaunchServicesSnapshot.State.persistentIdentifier.getter()
{
  return *(id *)(v0 + 16);
}

VoiceShortcutClient::LaunchServicesSnapshot::State __swiftcall LaunchServicesSnapshot.State.init(bundleId:persistentIdentifier:)(Swift::String bundleId, __C::LSPersistentIdentifier persistentIdentifier)
{
  *(Swift::String *)uint64_t v2 = bundleId;
  *(__C::LSPersistentIdentifier *)(v2 + 16) = persistentIdentifier;
  result.bundleId = bundleId;
  result.persistentIdentifier = persistentIdentifier;
  return result;
}

void LaunchServicesSnapshot.State.hash(into:)()
{
  unint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[2];
  sub_1B3D72278();
  sub_1B3D723E8();
  swift_bridgeObjectRelease();
  id v3 = v2;
  sub_1B3D71DF8();
  OUTLINED_FUNCTION_30_1();
  sub_1B3C7532C((uint64_t)v2, v1);
}

uint64_t static LaunchServicesSnapshot.State.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  id v3 = (void *)a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1B3D72E58() & 1) == 0) {
    return 0;
  }
  id v5 = v2;
  id v6 = v3;
  sub_1B3D71DF8();
  sub_1B3D71DF8();
  uint64_t v7 = OUTLINED_FUNCTION_42_0();
  char v8 = MEMORY[0x1B3EC3910](v7);
  uint64_t v9 = OUTLINED_FUNCTION_16_3();
  sub_1B3C7532C(v9, v10);
  uint64_t v11 = OUTLINED_FUNCTION_42_0();
  sub_1B3C7532C(v11, v12);

  return v8 & 1;
}

uint64_t sub_1B3CA80E8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001B3D89F30)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3CA81D0(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x6449656C646E7562;
  }
}

uint64_t sub_1B3CA820C()
{
  return sub_1B3CA81D0(*v0);
}

uint64_t sub_1B3CA8214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CA80E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CA823C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CAD058();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CA8278(uint64_t a1)
{
  unint64_t v2 = sub_1B3CAD058();
  return MEMORY[0x1F41862B0](a1, v2);
}

void LaunchServicesSnapshot.State.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3370);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_16();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B3CAD058();
  sub_1B3D73178();
  sub_1B3D72BD8();
  if (!v0)
  {
    OUTLINED_FUNCTION_34_0();
    type metadata accessor for LSPersistentIdentifier(0);
    sub_1B3CAD0A4(&qword_1E9CE3378, type metadata accessor for LSPersistentIdentifier);
    sub_1B3D72C18();
  }
  OUTLINED_FUNCTION_32();
  v4();
  OUTLINED_FUNCTION_26();
}

uint64_t LaunchServicesSnapshot.State.hashValue.getter()
{
  unint64_t v1 = *(void **)(v0 + 16);
  OUTLINED_FUNCTION_43();
  sub_1B3D72278();
  sub_1B3D723E8();
  swift_bridgeObjectRelease();
  id v2 = v1;
  uint64_t v3 = sub_1B3D71DF8();
  unint64_t v5 = v4;
  sub_1B3D71E08();
  sub_1B3C7532C(v3, v5);

  return sub_1B3D73138();
}

void LaunchServicesSnapshot.State.init(from:)()
{
  OUTLINED_FUNCTION_21();
  id v2 = v1;
  unint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1DD8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B3CAD058();
  sub_1B3D73158();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_1B3D72B28();
    uint64_t v8 = v7;
    type metadata accessor for LSPersistentIdentifier(0);
    OUTLINED_FUNCTION_34_0();
    sub_1B3CAD0A4((unint64_t *)&unk_1E9CE1D20, type metadata accessor for LSPersistentIdentifier);
    sub_1B3D72278();
    OUTLINED_FUNCTION_23_3();
    sub_1B3D72B68();
    uint64_t v9 = OUTLINED_FUNCTION_25_2();
    v10(v9);
    *unint64_t v4 = v6;
    v4[1] = v8;
    v4[2] = (uint64_t)v12;
    id v11 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);

    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_26();
}

void sub_1B3CA869C()
{
}

void sub_1B3CA86B4()
{
}

uint64_t sub_1B3CA86D4()
{
  unint64_t v1 = *(void **)(v0 + 16);
  sub_1B3D73108();
  sub_1B3D72278();
  sub_1B3D723E8();
  swift_bridgeObjectRelease();
  id v2 = v1;
  uint64_t v3 = sub_1B3D71DF8();
  unint64_t v5 = v4;
  sub_1B3D71E08();
  sub_1B3C7532C(v3, v5);

  return sub_1B3D73138();
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1B3D71EA8();
  OUTLINED_FUNCTION_13();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  return v5(a1, v1, v3);
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.sequenceNumber.getter()
{
  uint64_t v0 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  return OUTLINED_FUNCTION_19_3(v0);
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.init(uuid:sequenceNumber:)()
{
  OUTLINED_FUNCTION_37_1();
  sub_1B3D71EA8();
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v1);
  uint64_t result = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(void *)(v2 + *(int *)(result + 20)) = v0;
  return result;
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.hash(into:)()
{
  sub_1B3D71EA8();
  sub_1B3CAD0A4((unint64_t *)&qword_1EB4FA658, MEMORY[0x1E4F27990]);
  sub_1B3D72318();
  uint64_t v0 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_19_3(v0);
  return sub_1B3D73118();
}

BOOL static LaunchServicesSnapshot.DatabaseVersion.== infix(_:_:)()
{
  if ((sub_1B3D71E68() & 1) == 0) {
    return 0;
  }
  uint64_t v0 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  return OUTLINED_FUNCTION_20_3(v0);
}

uint64_t sub_1B3CA8928(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xEE007265626D754ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3CA8A18(char a1)
{
  if (a1) {
    return 0x65636E6575716573;
  }
  else {
    return 1684632949;
  }
}

uint64_t sub_1B3CA8A54()
{
  return sub_1B3CA8A18(*v0);
}

uint64_t sub_1B3CA8A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CA8928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CA8A84(uint64_t a1)
{
  unint64_t v2 = sub_1B3CAD10C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CA8AC0(uint64_t a1)
{
  unint64_t v2 = sub_1B3CAD10C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3380);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CAD10C();
  OUTLINED_FUNCTION_45();
  sub_1B3D71EA8();
  sub_1B3CAD0A4(&qword_1E9CE1948, MEMORY[0x1E4F27990]);
  OUTLINED_FUNCTION_14_5();
  if (!v1)
  {
    type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    OUTLINED_FUNCTION_34_0();
    sub_1B3D72BF8();
  }
  uint64_t v4 = OUTLINED_FUNCTION_35_1();
  return v5(v4);
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.hashValue.getter()
{
  return sub_1B3D73138();
}

void LaunchServicesSnapshot.DatabaseVersion.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2;
  uint64_t v18 = v4;
  sub_1B3D71EA8();
  OUTLINED_FUNCTION_0();
  uint64_t v19 = v6;
  uint64_t v20 = v5;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = v8 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1DD0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_5_1();
  uint64_t v11 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_15();
  uint64_t v13 = (void *)OUTLINED_FUNCTION_42_0();
  __swift_project_boxed_opaque_existential_1(v13, v14);
  sub_1B3CAD10C();
  sub_1B3D73158();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v3);
  }
  else
  {
    sub_1B3CAD0A4(&qword_1E9CE1950, MEMORY[0x1E4F27990]);
    sub_1B3D72B68();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v1, v9, v20);
    OUTLINED_FUNCTION_34_0();
    uint64_t v15 = sub_1B3D72B48();
    uint64_t v16 = OUTLINED_FUNCTION_26_0();
    v17(v16);
    *(void *)(v1 + *(int *)(v11 + 20)) = v15;
    sub_1B3CAD33C(v1, v18);
    __swift_destroy_boxed_opaque_existential_1(v3);
    sub_1B3CAD38C(v1, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1B3CA8F7C()
{
}

uint64_t sub_1B3CA8F94(void *a1)
{
  return LaunchServicesSnapshot.DatabaseVersion.encode(to:)(a1);
}

uint64_t sub_1B3CA8FB4()
{
  return sub_1B3D73138();
}

uint64_t LaunchServicesSnapshot.version.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1B3CAD33C(v1, a1);
}

uint64_t _s19VoiceShortcutClient22LaunchServicesSnapshotV15stateByBundleIdSDySSAC5StateVGvg_0()
{
  uint64_t v0 = type metadata accessor for LaunchServicesSnapshot(0);
  OUTLINED_FUNCTION_19_3(v0);
  return sub_1B3D72278();
}

uint64_t LaunchServicesSnapshot.init(version:state:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_37_1();
  uint64_t v5 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(v4);
  uint64_t v6 = OUTLINED_FUNCTION_7_3(v5);
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_16();
  sub_1B3CAD33C(v1, v3);
  uint64_t v7 = sub_1B3CA917C(v0);
  sub_1B3CAD38C(v1, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  swift_bridgeObjectRelease();
  sub_1B3CAD178(v3, v2);
  uint64_t result = OUTLINED_FUNCTION_17_3();
  *(void *)(v2 + v9) = v7;
  return result;
}

uint64_t sub_1B3CA917C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v2 = (_OWORD *)(sub_1B3D72278() + 40);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v4 = *((void *)v2 - 1);
    long long v28 = *v2;
    uint64_t v5 = v3[2];
    uint64_t v6 = *(void *)v2;
    sub_1B3D72278();
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      id v7 = *((id *)&v28 + 1);
      unint64_t v8 = sub_1B3C93F04(v4, v6);
      if (v9)
      {
        uint64_t v10 = (uint64_t *)(v3[7] + 24 * v8);
        uint64_t v5 = *v10;
        uint64_t v11 = v10[1];
        uint64_t v12 = (void *)v10[2];
        sub_1B3D72278();
        id v13 = v12;
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      uint64_t v5 = 0;
    }
    else
    {
      id v14 = *((id *)&v28 + 1);
      sub_1B3D72278();
    }
    uint64_t v11 = 0;
    uint64_t v12 = 0;
LABEL_9:
    sub_1B3CAEC88(v5, v11, v12);
    if (v11) {
      break;
    }
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = sub_1B3C93F04(v4, v6);
    if (__OFADD__(v3[2], (v16 & 1) == 0)) {
      goto LABEL_23;
    }
    unint64_t v17 = v15;
    char v18 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D48);
    if (sub_1B3D72A28())
    {
      unint64_t v19 = sub_1B3C93F04(v4, v6);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_25;
      }
      unint64_t v17 = v19;
    }
    if (v18)
    {
      uint64_t v21 = v3[7] + 24 * v17;

      swift_bridgeObjectRelease();
      *(void *)uint64_t v21 = v4;
      *(void *)(v21 + 8) = v6;
      *(void *)(v21 + 16) = *((void *)&v28 + 1);
    }
    else
    {
      v3[(v17 >> 6) + 8] |= 1 << v17;
      uint64_t v22 = (uint64_t *)(v3[6] + 16 * v17);
      uint64_t *v22 = v4;
      v22[1] = v6;
      uint64_t v23 = v3[7] + 24 * v17;
      *(void *)uint64_t v23 = v4;
      *(_OWORD *)(v23 + 8) = v28;
      uint64_t v24 = v3[2];
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_24;
      }
      v3[2] = v26;
      sub_1B3D72278();
    }
    uint64_t v2 = (_OWORD *)((char *)v2 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = sub_1B3D73068();
  __break(1u);
  return result;
}

uint64_t LaunchServicesSnapshot.init(version:stateByBundleId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1B3CAD178(a1, a3);
  uint64_t result = OUTLINED_FUNCTION_17_3();
  *(void *)(a3 + v6) = a2;
  return result;
}

uint64_t LaunchServicesSnapshot.setting(stateByContainerId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1B3CAD33C(v2, a2);
  OUTLINED_FUNCTION_17_3();
  *(void *)(a2 + v5) = a1;
  return sub_1B3D72278();
}

uint64_t LaunchServicesSnapshot.hash(into:)()
{
  sub_1B3D71EA8();
  sub_1B3CAD0A4((unint64_t *)&qword_1EB4FA658, MEMORY[0x1E4F27990]);
  sub_1B3D72318();
  uint64_t v0 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_19_3(v0);
  sub_1B3D73118();
  OUTLINED_FUNCTION_15_4();
  sub_1B3C94618();
  return swift_bridgeObjectRelease();
}

uint64_t static LaunchServicesSnapshot.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1B3D71E68() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  if (*(void *)(a1 + *(int *)(v4 + 20)) != *(void *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for LaunchServicesSnapshot(0);
  uint64_t v6 = OUTLINED_FUNCTION_19_3(v5);
  uint64_t v8 = *(void *)(a2 + v7);
  return sub_1B3C90FB4(v6, v8);
}

uint64_t sub_1B3CA95A8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4279426574617473 && a2 == 0xEF6449656C646E75)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3CA96A8(char a1)
{
  if (a1) {
    return 0x4279426574617473;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_1B3CA96EC()
{
  return sub_1B3CA96A8(*v0);
}

uint64_t sub_1B3CA96F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CA95A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CA971C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CAD1DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CA9758(uint64_t a1)
{
  unint64_t v2 = sub_1B3CAD1DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LaunchServicesSnapshot.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3388);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CAD1DC();
  OUTLINED_FUNCTION_45();
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  sub_1B3CAD0A4(&qword_1E9CE3390, (void (*)(uint64_t))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  OUTLINED_FUNCTION_14_5();
  if (!v1)
  {
    type metadata accessor for LaunchServicesSnapshot(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1C78);
    sub_1B3CAD274(&qword_1E9CE3398, (void (*)(void))sub_1B3CAD228);
    OUTLINED_FUNCTION_14_5();
  }
  uint64_t v4 = OUTLINED_FUNCTION_35_1();
  return v5(v4);
}

uint64_t LaunchServicesSnapshot.hashValue.getter()
{
  return sub_1B3D73138();
}

void LaunchServicesSnapshot.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2;
  uint64_t v13 = v4;
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v14 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1DC8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v9 = type metadata accessor for LaunchServicesSnapshot(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CAD1DC();
  sub_1B3D73158();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    sub_1B3CAD0A4(&qword_1E9CE1BC8, (void (*)(uint64_t))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    sub_1B3D72B68();
    sub_1B3CAD178(v14, v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1C78);
    OUTLINED_FUNCTION_34_0();
    sub_1B3CAD274(&qword_1E9CE1C80, (void (*)(void))sub_1B3CAD2F0);
    OUTLINED_FUNCTION_23_3();
    sub_1B3D72B68();
    uint64_t v11 = OUTLINED_FUNCTION_52();
    v12(v11);
    *(void *)(v1 + *(int *)(v9 + 20)) = v15;
    sub_1B3CAD33C(v1, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    sub_1B3CAD38C(v1, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1B3CA9CB0(uint64_t a1@<X8>)
{
}

void static LaunchServicesSnapshot.empty.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  uint64_t v4 = OUTLINED_FUNCTION_7_3(v3);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  static LaunchServicesSnapshot.DatabaseVersion.current.getter((uint64_t)&v13 - v8);
  if (!v1)
  {
    sub_1B3CAD33C((uint64_t)v9, (uint64_t)v7);
    uint64_t v10 = sub_1B3CA917C(MEMORY[0x1E4FBC860]);
    uint64_t v11 = OUTLINED_FUNCTION_16_3();
    sub_1B3CAD38C(v11, v12);
    sub_1B3CAD178((uint64_t)v7, a1);
    *(void *)(a1 + *(int *)(type metadata accessor for LaunchServicesSnapshot(0) + 20)) = v10;
  }
}

uint64_t sub_1B3CA9DD0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1B3CA9E80;
  return static LaunchServicesSnapshot.partial(_:failIfContainerNotFound:)(a1, a2, a3);
}

uint64_t sub_1B3CA9E80()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_5();
  *unint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_1();
  return v3();
}

uint64_t static LaunchServicesSnapshot.partial(_:failIfContainerNotFound:)(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 56) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return OUTLINED_FUNCTION_13_3((uint64_t)sub_1B3CA9F5C);
}

uint64_t sub_1B3CA9F5C()
{
  OUTLINED_FUNCTION_12_3();
  char v1 = *(unsigned char *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE33B0);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = v1;
  uint64_t v5 = type metadata accessor for LaunchServicesSnapshot(0);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1B3CAA068;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x1F4188080](v7, v3, v5, 0, 0, &unk_1E9CE33C0, v4, v3);
}

uint64_t sub_1B3CAA068()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_6_0();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_9_1();
    return v10();
  }
}

uint64_t sub_1B3CAA168()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_1();
  return v0();
}

uint64_t sub_1B3CAA1C4()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_4_0(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1B3CAECCC;
  return static LaunchServicesSnapshot.complete()(v1);
}

uint64_t static LaunchServicesSnapshot.complete()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_3((uint64_t)sub_1B3CAA268);
}

uint64_t sub_1B3CAA268()
{
  OUTLINED_FUNCTION_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CA8);
  uint64_t v2 = OUTLINED_FUNCTION_40_1();
  uint64_t v3 = type metadata accessor for LaunchServicesSnapshot(v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1B3CAA348;
  uint64_t v5 = *(void *)(v1 + 16);
  return MEMORY[0x1F4188080](v5, v0, v3, 0, 0, &unk_1E9CE33D8, 0, v0);
}

uint64_t sub_1B3CAA348()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v5 = v4;
  *(void *)(v6 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_6_0();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9_1();
    return v10();
  }
}

uint64_t sub_1B3CAA440()
{
  OUTLINED_FUNCTION_9_1();
  return v0();
}

BOOL LaunchServicesSnapshot.isEqualInProvenance(to:)()
{
  if ((sub_1B3D71E68() & 1) == 0) {
    return 0;
  }
  uint64_t v0 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  return OUTLINED_FUNCTION_20_3(v0);
}

void sub_1B3CAA4A8()
{
}

uint64_t sub_1B3CAA4C0(void *a1)
{
  return LaunchServicesSnapshot.encode(to:)(a1);
}

uint64_t sub_1B3CAA4E0()
{
  return sub_1B3D73138();
}

unint64_t LaunchServicesSnapshot.debugDescription.getter()
{
  uint64_t v0 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  MEMORY[0x1F4188790](v0);
  OUTLINED_FUNCTION_16();
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  uint64_t v1 = OUTLINED_FUNCTION_42_0();
  sub_1B3CAD33C(v1, v2);
  sub_1B3D71EA8();
  sub_1B3CAD0A4(&qword_1E9CE18C0, MEMORY[0x1E4F27990]);
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
  v3();
  sub_1B3D723F8();
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  OUTLINED_FUNCTION_15_4();
  sub_1B3D72258();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  return 0xD00000000000001DLL;
}

void static LaunchServicesSnapshot.DatabaseVersion.current.getter(uint64_t a1@<X8>)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  id v2 = objc_msgSend(self, sel_defaultWorkspace);
  if (!v2) {
    __break(1u);
  }
  uint64_t v3 = v2;
  id v11 = 0;
  v12[0] = 0;
  objc_msgSend(v2, sel_getKnowledgeUUID_andSequenceNumber_, v12, &v11);

  id v5 = v11;
  uint64_t v4 = (void *)v12[0];
  if (v12[0] && v11)
  {
    id v6 = v11;
    id v7 = v4;
    id v8 = objc_msgSend(v6, sel_integerValue);
    sub_1B3D71E78();

    *(void *)(a1 + *(int *)(type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0) + 20)) = v8;
  }
  else
  {
    sub_1B3CAD520();
    swift_allocError();
    id v9 = v5;
    id v10 = v4;
    swift_willThrow();
  }
}

uint64_t sub_1B3CAA90C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 208) = a4;
  *(void *)(v4 + 104) = a2;
  *(void *)(v4 + 112) = a3;
  *(void *)(v4 + 96) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CD0);
  *(void *)(v4 + 120) = swift_task_alloc();
  *(void *)(v4 + 128) = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3488);
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = *(void *)(v5 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(void *)(v4 + 160) = swift_task_alloc();
  *(void *)(v4 + 168) = swift_task_alloc();
  *(void *)(v4 + 176) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B3CAAA60, 0, 0);
}

uint64_t sub_1B3CAAA60()
{
  static LaunchServicesSnapshot.DatabaseVersion.current.getter(*(void *)(v0 + 176));
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v32 = v1 + 56;
  char v34 = *(unsigned char *)(v0 + 208);
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & v2;
  int64_t v33 = (unint64_t)(63 - v4) >> 6;
  uint64_t v35 = *(void *)(v0 + 112);
  uint64_t v6 = sub_1B3D72278();
  int64_t v9 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v15 = *(void *)(v0 + 128);
    unint64_t v17 = (uint64_t *)(*(void *)(v35 + 48) + 16 * i);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = sub_1B3D72538();
    __swift_storeEnumTagSinglePayload(v15, 1, 1, v20);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = 0;
    *(void *)(v21 + 24) = 0;
    *(void *)(v21 + 32) = v19;
    *(void *)(v21 + 40) = v18;
    *(unsigned char *)(v21 + 48) = v34;
    sub_1B3CAEADC(v15, v16, &qword_1E9CE1CD0);
    LODWORD(v16) = __swift_getEnumTagSinglePayload(v16, 1, v20);
    sub_1B3D72278();
    if (v16 == 1)
    {
      sub_1B3CAE9AC(*(void *)(v0 + 120), &qword_1E9CE1CD0);
    }
    else
    {
      sub_1B3D72528();
      OUTLINED_FUNCTION_32();
      v22();
    }
    if (*(void *)(v21 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = sub_1B3D724D8();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v26 = **(void **)(v0 + 104);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE33B0);
    uint64_t v27 = v25 | v23;
    if (v25 | v23)
    {
      uint64_t v27 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v23;
      *(void *)(v0 + 40) = v25;
    }
    uint64_t v28 = *(void *)(v0 + 128);
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v27;
    *(void *)(v0 + 64) = v26;
    swift_task_create();
    swift_release();
    uint64_t v6 = sub_1B3CAE9AC(v28, &qword_1E9CE1CD0);
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return MEMORY[0x1F4187C78](v6, v7, v8);
    }
    if (v12 >= v33) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v32 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v33) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v32 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v33) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v32 + 8 * v9);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v5 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 < v33)
  {
    unint64_t v13 = *(void *)(v32 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v9 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_33;
        }
        if (v9 >= v33) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v32 + 8 * v9);
        ++v14;
        if (v13) {
          goto LABEL_18;
        }
      }
    }
    int64_t v9 = v14;
    goto LABEL_18;
  }
LABEL_29:
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE33B0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  sub_1B3D725B8();
  *(void *)(v0 + 184) = MEMORY[0x1E4FBC860];
  uint64_t v29 = sub_1B3CAEC28(&qword_1E9CE34A0, &qword_1E9CE3488);
  char v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v30;
  void *v30 = v0;
  v30[1] = sub_1B3CAAF10;
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v6 = v0 + 72;
  uint64_t v8 = v29;
  return MEMORY[0x1F4187C78](v6, v7, v8);
}

uint64_t sub_1B3CAAF10()
{
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v6 = v5;
  *(void *)(v3 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = OUTLINED_FUNCTION_28_1();
    v8(v7);
  }
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1B3CAB00C()
{
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1 == 1)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 176);
    (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
    sub_1B3CAEC78(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void **)(v0 + 88));
    sub_1B3CAB82C(v4);
    uint64_t v5 = v3;
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    if (v5)
    {
      sub_1B3CAD38C(*(void *)(v0 + 176), (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_9_1();
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 160);
      uint64_t v20 = *(void *)(v0 + 168);
      uint64_t v21 = *(void *)(v0 + 96);
      sub_1B3CAD33C(v6, v20);
      sub_1B3CAD33C(v20, v19);
      uint64_t v22 = sub_1B3CA917C(v7);
      sub_1B3CAD38C(v20, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
      swift_bridgeObjectRelease();
      sub_1B3CAD178(v19, v21);
      OUTLINED_FUNCTION_17_3();
      *(void *)(v21 + v23) = v22;
      sub_1B3CAD38C(v6, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_10_6();
    }
    return v8();
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 88);
    uint64_t v10 = *(char **)(v0 + 184);
    if (v1)
    {
      sub_1B3D72278();
      id v11 = v9;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *(char **)(v0 + 184);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v10 = sub_1B3C86CE0(0, *((void *)v10 + 2) + 1, 1, *(void *)(v0 + 184));
      }
      unint64_t v14 = *((void *)v10 + 2);
      unint64_t v13 = *((void *)v10 + 3);
      if (v14 >= v13 >> 1) {
        uint64_t v10 = sub_1B3C86CE0((char *)(v13 > 1), v14 + 1, 1, (uint64_t)v10);
      }
      *((void *)v10 + 2) = v14 + 1;
      uint64_t v15 = &v10[24 * v14];
      *((void *)v15 + 4) = v2;
      *((void *)v15 + 5) = v1;
      *((void *)v15 + 6) = v11;
    }
    sub_1B3CAEC78(v2, v1, v9);
    *(void *)(v0 + 184) = v10;
    uint64_t v16 = sub_1B3CAEC28(&qword_1E9CE34A0, &qword_1E9CE3488);
    unint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v17;
    void *v17 = v0;
    v17[1] = sub_1B3CAAF10;
    uint64_t v18 = *(void *)(v0 + 136);
    return MEMORY[0x1F4187C78](v0 + 72, v18, v16);
  }
}

uint64_t sub_1B3CAB334()
{
  OUTLINED_FUNCTION_36_1();
  sub_1B3CAD38C(*(void *)(v0 + 176), (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_1();
  return v1();
}

uint64_t sub_1B3CAB3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 40) = a6;
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1B3CAB414, 0, 0);
}

uint64_t sub_1B3CAB414()
{
  OUTLINED_FUNCTION_12_3();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  sub_1B3C78E5C(0, &qword_1E9CE34A8);
  sub_1B3D72278();
  id v3 = sub_1B3CAB4EC(v1, v2, 0);
  sub_1B3CAB5D4(v3, *(uint64_t **)(v0 + 16));
  OUTLINED_FUNCTION_10_6();
  return v4();
}

id sub_1B3CAB4EC(uint64_t a1, uint64_t a2, char a3)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)sub_1B3D72378();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithBundleIdentifier_allowPlaceholder_error_, v4, a3 & 1, v9);

  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1B3D71D38();

    swift_willThrow();
  }
  return v5;
}

void sub_1B3CAB5D4(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v4)
  {
    uint64_t v5 = sub_1B3D723A8();
    uint64_t v7 = v6;

    id v4 = objc_msgSend(a1, sel_persistentIdentifier);
  }
  else
  {

    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = (uint64_t)v4;
}

uint64_t sub_1B3CAB670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CD0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B3CAEADC(a1, (uint64_t)v9, &qword_1E9CE1CD0);
  uint64_t v10 = sub_1B3D72538();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_1B3CAE9AC((uint64_t)v9, &qword_1E9CE1CD0);
  }
  else
  {
    sub_1B3D72528();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v11 = sub_1B3D724D8();
    uint64_t v13 = v12;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  uint64_t v14 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CA8);
  uint64_t v15 = (void *)(v13 | v11);
  if (v13 | v11)
  {
    v18[0] = 0;
    v18[1] = 0;
    uint64_t v15 = v18;
    void v18[2] = v11;
    v18[3] = v13;
  }
  v17[1] = 1;
  v17[2] = v15;
  v17[3] = v14;
  swift_task_create();
  return swift_release();
}

void sub_1B3CAB82C(uint64_t a1)
{
  uint64_t v3 = sub_1B3D72058();
  uint64_t v47 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v37 - v14;
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v37 - v16;
  static LaunchServicesSnapshot.DatabaseVersion.current.getter((uint64_t)&v37 - v16);
  if (!v1)
  {
    uint64_t v44 = v15;
    uint64_t v45 = v9;
    uint64_t v46 = v6;
    uint64_t v18 = sub_1B3D71E68();
    uint64_t v19 = a1;
    if ((v18 & 1) == 0 || *(void *)&v17[*(int *)(v46 + 20)] != *(void *)(a1 + *(int *)(v46 + 20)))
    {
      uint64_t v41 = v12;
      uint64_t v42 = v3;
      if (qword_1EB4FA690 != -1) {
        uint64_t v18 = swift_once();
      }
      uint64_t v43 = &v37;
      uint64_t v20 = (os_unfair_lock_s *)qword_1EB4FA6B8;
      uint64_t v21 = MEMORY[0x1F4188790](v18);
      *(&v37 - 2) = "ToolKit";
      MEMORY[0x1F4188790](v21);
      *(&v37 - 2) = (char *)sub_1B3C78C84;
      *(&v37 - 1) = v22;
      swift_retain();
      os_unfair_lock_lock(v20 + 4);
      sub_1B3C78CA0(v23);
      uint64_t v25 = (uint64_t)v44;
      uint64_t v24 = (uint64_t)v45;
      os_unfair_lock_unlock(v20 + 4);
      swift_release();
      sub_1B3CAD33C(v19, v25);
      uint64_t v26 = (uint64_t)v41;
      sub_1B3CAD33C((uint64_t)v17, (uint64_t)v41);
      uint64_t v27 = sub_1B3D72038();
      os_log_type_t v28 = sub_1B3D72758();
      int v29 = v28;
      uint64_t v43 = v27;
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v49 = v39;
        *(_DWORD *)uint64_t v30 = 136315394;
        int v38 = v29;
        sub_1B3CAD33C(v25, v24);
        uint64_t v31 = sub_1B3D723B8();
        uint64_t v40 = v5;
        uint64_t v37 = v17;
        uint64_t v48 = sub_1B3C8C9B0(v31, v32, &v49);
        sub_1B3D72868();
        swift_bridgeObjectRelease();
        sub_1B3CAD38C(v25, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
        *(_WORD *)(v30 + 12) = 2080;
        sub_1B3CAD33C(v26, v24);
        uint64_t v33 = sub_1B3D723B8();
        uint64_t v48 = sub_1B3C8C9B0(v33, v34, &v49);
        sub_1B3D72868();
        swift_bridgeObjectRelease();
        unint64_t v17 = v37;
        sub_1B3CAD38C(v26, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
        uint64_t v35 = v43;
        _os_log_impl(&dword_1B3C5C000, v43, (os_log_type_t)v38, "LS version changed while we were reading it. This might cause inconsistencies in our view of LS (before=%s, current=%s", (uint8_t *)v30, 0x16u);
        uint64_t v36 = v39;
        swift_arrayDestroy();
        MEMORY[0x1B3EC61A0](v36, -1, -1);
        MEMORY[0x1B3EC61A0](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v42);
      }
      else
      {
        sub_1B3CAD38C(v25, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
        sub_1B3CAD38C(v26, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v5, v42);
      }
      sub_1B3CAEA90();
      swift_allocError();
      swift_willThrow();
    }
    sub_1B3CAD38C((uint64_t)v17, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  }
}

uint64_t sub_1B3CABD60()
{
  OUTLINED_FUNCTION_3();
  v0[3] = v1;
  v0[4] = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CE0);
  v0[5] = v3;
  v0[6] = *(void *)(v3 - 8);
  v0[7] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CD0);
  OUTLINED_FUNCTION_7_3(v4);
  v0[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_7_3(v5);
  v0[9] = swift_task_alloc();
  v0[10] = swift_task_alloc();
  v0[11] = swift_task_alloc();
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1B3CABE8C()
{
  static LaunchServicesSnapshot.DatabaseVersion.current.getter(v0[11]);
  uint64_t v1 = v0[8];
  sub_1B3D72538();
  OUTLINED_FUNCTION_39_1();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  sub_1B3CAB670(v1, (uint64_t)&unk_1E9CE3468, v2);
  sub_1B3CAE9AC(v1, &qword_1E9CE1CD0);
  OUTLINED_FUNCTION_39_1();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  sub_1B3CAB670(v1, (uint64_t)&unk_1E9CE3478, v3);
  sub_1B3CAE9AC(v1, &qword_1E9CE1CD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CA8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  sub_1B3D725B8();
  v0[12] = MEMORY[0x1E4FBC860];
  uint64_t v4 = sub_1B3CAEC28(&qword_1E9CE1CD8, &qword_1E9CE1CE0);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[13] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1B3CAC0D0;
  uint64_t v6 = v0[5];
  return MEMORY[0x1F4187C78](v0 + 2, v6, v4);
}

uint64_t sub_1B3CAC0D0()
{
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = OUTLINED_FUNCTION_28_1();
    v8(v7);
  }
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1B3CAC1CC()
{
  uint64_t v1 = v0[2];
  if (!v1)
  {
    uint64_t v14 = v0[14];
    uint64_t v15 = v0[11];
    (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
    swift_bridgeObjectRelease();
    sub_1B3CAB82C(v15);
    uint64_t v16 = v0[11];
    uint64_t v17 = v0[12];
    if (v14)
    {
      sub_1B3CAD38C(v0[11], (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_33_1();
    }
    else
    {
      uint64_t v23 = v0[9];
      uint64_t v24 = v0[10];
      uint64_t v25 = v0[3];
      sub_1B3CAD33C(v0[11], v24);
      sub_1B3CAD33C(v24, v23);
      uint64_t v26 = sub_1B3CA917C(v17);
      sub_1B3CAD38C(v24, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
      swift_bridgeObjectRelease();
      sub_1B3CAD178(v23, v25);
      OUTLINED_FUNCTION_17_3();
      *(void *)(v25 + v27) = v26;
      sub_1B3CAD38C(v16, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_10_6();
    }
    OUTLINED_FUNCTION_22_4();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v2 = *(void *)(v1 + 16);
  int64_t v3 = *(void *)(v0[12] + 16);
  int64_t v4 = v3 + v2;
  if (__OFADD__(v3, v2))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = (char *)v0[12];
  if (!isUniquelyReferenced_nonNull_native || v4 > *((void *)v6 + 3) >> 1)
  {
    if (v3 <= v4) {
      int64_t v7 = v3 + v2;
    }
    else {
      int64_t v7 = v3;
    }
    uint64_t v6 = sub_1B3C86CE0(isUniquelyReferenced_nonNull_native, v7, 1, v0[12]);
  }
  if (!*(void *)(v1 + 16))
  {
    if (!v2) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
  uint64_t v8 = *((void *)v6 + 2);
  if ((*((void *)v6 + 3) >> 1) - v8 < v2)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v9 = (unint64_t)&v6[24 * v8 + 32];
  if (v1 + 32 < v9 + 24 * v2 && v9 < v1 + 32 + 24 * v2) {
    goto LABEL_33;
  }
  swift_arrayInitWithCopy();
  if (v2)
  {
    uint64_t v11 = *((void *)v6 + 2);
    BOOL v12 = __OFADD__(v11, v2);
    uint64_t v13 = v11 + v2;
    if (!v12)
    {
      *((void *)v6 + 2) = v13;
      goto LABEL_22;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    sub_1B3D72AA8();
    OUTLINED_FUNCTION_22_4();
    return;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  v0[12] = v6;
  sub_1B3CAEC28(&qword_1E9CE1CD8, &qword_1E9CE1CE0);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[13] = v18;
  void *v18 = v0;
  v18[1] = sub_1B3CAC0D0;
  OUTLINED_FUNCTION_22_4();
  MEMORY[0x1F4187C78](v19, v20, v21);
}

uint64_t sub_1B3CAC53C()
{
  OUTLINED_FUNCTION_36_1();
  sub_1B3CAD38C(*(void *)(v0 + 88), (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_1();
  return v1();
}

uint64_t sub_1B3CAC5EC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1B3CAC60C, 0, 0);
}

uint64_t sub_1B3CAC60C()
{
  OUTLINED_FUNCTION_36_1();
  uint64_t v1 = *(char ***)(v0 + 16);
  id v2 = objc_msgSend(self, sel_enumeratorWithOptions_, 0);
  uint64_t v3 = sub_1B3CA7C94(v2);

  *uint64_t v1 = v3;
  OUTLINED_FUNCTION_10_6();
  return v4();
}

uint64_t sub_1B3CAC6AC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1B3CAC6CC, 0, 0);
}

uint64_t sub_1B3CAC6CC()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_1B3CAC728();
  OUTLINED_FUNCTION_10_6();
  return v2();
}

uint64_t sub_1B3CAC728()
{
  sub_1B3C78E5C(0, &qword_1E9CE1D38);
  unint64_t v0 = sub_1B3D727F8();
  unint64_t v1 = v0;
  if (!(v0 >> 62))
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_1B3D72278();
    if (v2) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v5;
  }
  sub_1B3D72278();
  uint64_t result = sub_1B3D72A68();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1B3EC4490](v4, v1);
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      int64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_bundleIdentifier);
      if (v8)
      {
        unint64_t v9 = v8;
        uint64_t v10 = sub_1B3D723A8();
        uint64_t v12 = v11;

        id v13 = objc_msgSend(v7, sel_persistentIdentifier);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1B3C86CE0(0, *((void *)v5 + 2) + 1, 1, (uint64_t)v5);
        }
        unint64_t v15 = *((void *)v5 + 2);
        unint64_t v14 = *((void *)v5 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v5 = sub_1B3C86CE0((char *)(v14 > 1), v15 + 1, 1, (uint64_t)v5);
        }
        *((void *)v5 + 2) = v15 + 1;
        uint64_t v16 = &v5[24 * v15];
        *((void *)v16 + 4) = v10;
        *((void *)v16 + 5) = v12;
        *((void *)v16 + 6) = v13;
      }
      else
      {
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B3CAC8F4()
{
  return sub_1B3D73118();
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.majorVersionEqual(to:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1BE0);
  uint64_t v3 = OUTLINED_FUNCTION_7_3(v2);
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_5_1();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_5_1();
  uint64_t v11 = v10 - v9;
  sub_1B3CAEADC(a1, v6, &qword_1E9CE1BE0);
  if (__swift_getEnumTagSinglePayload(v6, 1, v7) == 1)
  {
    sub_1B3CAE9AC(v6, &qword_1E9CE1BE0);
    char v12 = 0;
  }
  else
  {
    sub_1B3CAD178(v6, v11);
    char v12 = sub_1B3D71E68();
    sub_1B3CAD38C(v11, (void (*)(void))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  }
  return v12 & 1;
}

uint64_t LSPersistentIdentifier.init(from:)(void *a1)
{
  uint64_t v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_16_3();
  sub_1B3D73148();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_1B3C7D440();
    sub_1B3D72E68();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    uint64_t v5 = OUTLINED_FUNCTION_16_3();
    sub_1B3C7D8EC(v5, v6);
    OUTLINED_FUNCTION_16_3();
    uint64_t v3 = sub_1B3D71DB8();
    sub_1B3C7532C(v7, v8);
    sub_1B3C7532C(v7, v8);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t LSPersistentIdentifier.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_16_3();
  sub_1B3D73168();
  uint64_t v1 = sub_1B3D71DF8();
  unint64_t v3 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  sub_1B3C7D5B0();
  sub_1B3D72E98();
  sub_1B3C7532C(v1, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_1B3CACC14@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = LSPersistentIdentifier.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1B3CACC40(void *a1)
{
  return LSPersistentIdentifier.encode(to:)(a1);
}

uint64_t sub_1B3CACC5C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3458);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v13[-v5];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3430);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = v0
      + OBJC_IVAR____TtCV19VoiceShortcutClient22LaunchServicesSnapshotP33_2DE8BE4BDEA9300B3DAFA689E06A50638Observer_continuation;
  swift_beginAccess();
  sub_1B3CAEADC(v11, (uint64_t)v6, &qword_1E9CE3458);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    uint64_t result = sub_1B3CAE9AC((uint64_t)v6, &qword_1E9CE3458);
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_1B3D724F8();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v7);
    swift_beginAccess();
    sub_1B3CAE878((uint64_t)v4, v11);
    return swift_endAccess();
  }
  return result;
}

id sub_1B3CACEA4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = (uint64_t)v0
     + OBJC_IVAR____TtCV19VoiceShortcutClient22LaunchServicesSnapshotP33_2DE8BE4BDEA9300B3DAFA689E06A50638Observer_continuation;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3430);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1B3CACF40()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static LaunchServicesSnapshot.isCompletedSeeding.getter()
{
  return 1;
}

uint64_t static LaunchServicesSnapshot.waitForSeedingComplete(timeout:)()
{
  return sub_1B3CAD56C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1B3CACFE4()
{
  sub_1B3D71DF8();
  OUTLINED_FUNCTION_30_1();
  return sub_1B3C7532C(v0, v1);
}

uint64_t sub_1B3CAD030()
{
  return sub_1B3D73118();
}

unint64_t sub_1B3CAD058()
{
  unint64_t result = qword_1E9CE1BE8;
  if (!qword_1E9CE1BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1BE8);
  }
  return result;
}

uint64_t sub_1B3CAD0A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE1BD0);
}

unint64_t sub_1B3CAD10C()
{
  unint64_t result = qword_1E9CE1BA8;
  if (!qword_1E9CE1BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1BA8);
  }
  return result;
}

uint64_t type metadata accessor for LaunchServicesSnapshot(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, qword_1E9CE1C10);
}

uint64_t sub_1B3CAD178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B3CAD1DC()
{
  unint64_t result = qword_1E9CE1B90;
  if (!qword_1E9CE1B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B90);
  }
  return result;
}

unint64_t sub_1B3CAD228()
{
  unint64_t result = qword_1E9CE33A0;
  if (!qword_1E9CE33A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE33A0);
  }
  return result;
}

uint64_t sub_1B3CAD274(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE1C78);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B3CAD2F0()
{
  unint64_t result = qword_1E9CE1C00;
  if (!qword_1E9CE1C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1C00);
  }
  return result;
}

uint64_t sub_1B3CAD33C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_40_1();
  v4(v3);
  OUTLINED_FUNCTION_13();
  uint64_t v5 = OUTLINED_FUNCTION_43_0();
  v6(v5);
  return a2;
}

uint64_t sub_1B3CAD38C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_32();
  v3();
  return a1;
}

uint64_t sub_1B3CAD3E0()
{
  OUTLINED_FUNCTION_12_3();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v0 + 16);
  char v6 = *(unsigned char *)(v0 + 24);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_4_0(v7);
  void *v8 = v9;
  v8[1] = sub_1B3CAECCC;
  return sub_1B3CAA90C(v4, v2, v5, v6);
}

uint64_t sub_1B3CAD48C()
{
  OUTLINED_FUNCTION_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_4_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B3CAECCC;
  return sub_1B3CABD60();
}

unint64_t sub_1B3CAD520()
{
  unint64_t result = qword_1E9CE33E0;
  if (!qword_1E9CE33E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE33E0);
  }
  return result;
}

uint64_t sub_1B3CAD56C(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1B3CAD57C()
{
  unint64_t result = qword_1E9CE33F0;
  if (!qword_1E9CE33F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE33F0);
  }
  return result;
}

uint64_t sub_1B3CAD5C8()
{
  return sub_1B3CAD0A4(&qword_1E9CE1BC0, (void (*)(uint64_t))type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
}

unint64_t sub_1B3CAD61C()
{
  unint64_t result = qword_1E9CE33F8[0];
  if (!qword_1E9CE33F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9CE33F8);
  }
  return result;
}

uint64_t sub_1B3CAD668(void *a1)
{
  a1[1] = sub_1B3CAD0A4(&qword_1E9CE1FA8, (void (*)(uint64_t))type metadata accessor for LaunchServicesSnapshot);
  a1[2] = sub_1B3CAD0A4(&qword_1E9CE1C08, (void (*)(uint64_t))type metadata accessor for LaunchServicesSnapshot);
  a1[3] = sub_1B3CAD0A4(&qword_1E9CE1F90, (void (*)(uint64_t))type metadata accessor for LaunchServicesSnapshot);
  uint64_t result = sub_1B3CAD0A4(&qword_1E9CE1F98, (void (*)(uint64_t))type metadata accessor for LaunchServicesSnapshot);
  a1[4] = result;
  return result;
}

uint64_t sub_1B3CAD73C()
{
  return sub_1B3CAD0A4(&qword_1E9CE1FA0, (void (*)(uint64_t))type metadata accessor for LaunchServicesSnapshot);
}

uint64_t *initializeBufferWithCopyOfBuffer for LaunchServicesSnapshot(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B3D71EA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    sub_1B3D72278();
  }
  return a1;
}

uint64_t destroy for LaunchServicesSnapshot(uint64_t a1)
{
  uint64_t v2 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  sub_1B3D72278();
  return a1;
}

uint64_t assignWithCopy for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B3CADB4C);
}

uint64_t sub_1B3CADB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_3_3();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B3CADBEC);
}

void sub_1B3CADBEC(uint64_t a1, int a2, int a3, uint64_t a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_40_1();
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(v8);
  OUTLINED_FUNCTION_3_3();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = OUTLINED_FUNCTION_38_1();
    __swift_storeEnumTagSinglePayload(v10, v11, v12, v13);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1B3CADC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CAE1B4(a1, a2, a3, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
}

void destroy for LaunchServicesSnapshot.State(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s19VoiceShortcutClient22LaunchServicesSnapshotV5StateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  sub_1B3D72278();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for LaunchServicesSnapshot.State(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for LaunchServicesSnapshot.State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.State()
{
  return &type metadata for LaunchServicesSnapshot.State;
}

uint64_t *initializeBufferWithCopyOfBuffer for LaunchServicesSnapshot.DatabaseVersion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B3D71EA8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1)
{
  uint64_t v2 = sub_1B3D71EA8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B3CAE0F4);
}

uint64_t sub_1B3CAE0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B3D71EA8();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B3CAE150);
}

uint64_t sub_1B3CAE150()
{
  sub_1B3D71EA8();
  uint64_t v0 = OUTLINED_FUNCTION_38_1();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_1B3CAE190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CAE1B4(a1, a2, a3, MEMORY[0x1E4F27990]);
}

uint64_t sub_1B3CAE1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1B3CAE248()
{
  return type metadata accessor for LaunchServicesSnapshot.Observer(0);
}

uint64_t type metadata accessor for LaunchServicesSnapshot.Observer(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE3418);
}

void sub_1B3CAE270()
{
  sub_1B3CAE300();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1B3CAE300()
{
  if (!qword_1E9CE3428)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE3430);
    unint64_t v0 = sub_1B3D72848();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9CE3428);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LaunchServicesSnapshot.DatabaseVersion.LaunchServicesError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        char *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      char *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3CAE3F8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.DatabaseVersion.LaunchServicesError()
{
  return &type metadata for LaunchServicesSnapshot.DatabaseVersion.LaunchServicesError;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.CodingKeys()
{
  return &type metadata for LaunchServicesSnapshot.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.DatabaseVersion.CodingKeys()
{
  return &type metadata for LaunchServicesSnapshot.DatabaseVersion.CodingKeys;
}

unsigned char *_s19VoiceShortcutClient22LaunchServicesSnapshotV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CAE520);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.State.CodingKeys()
{
  return &type metadata for LaunchServicesSnapshot.State.CodingKeys;
}

unint64_t sub_1B3CAE55C()
{
  unint64_t result = qword_1E9CE3438;
  if (!qword_1E9CE3438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3438);
  }
  return result;
}

unint64_t sub_1B3CAE5AC()
{
  unint64_t result = qword_1E9CE3440;
  if (!qword_1E9CE3440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3440);
  }
  return result;
}

unint64_t sub_1B3CAE5FC()
{
  unint64_t result = qword_1E9CE3448;
  if (!qword_1E9CE3448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3448);
  }
  return result;
}

unint64_t sub_1B3CAE64C()
{
  unint64_t result = qword_1E9CE3450;
  if (!qword_1E9CE3450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3450);
  }
  return result;
}

unint64_t sub_1B3CAE69C()
{
  unint64_t result = qword_1E9CE1BA0;
  if (!qword_1E9CE1BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1BA0);
  }
  return result;
}

unint64_t sub_1B3CAE6EC()
{
  unint64_t result = qword_1E9CE1B98;
  if (!qword_1E9CE1B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B98);
  }
  return result;
}

unint64_t sub_1B3CAE73C()
{
  unint64_t result = qword_1E9CE1BB8;
  if (!qword_1E9CE1BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1BB8);
  }
  return result;
}

unint64_t sub_1B3CAE78C()
{
  unint64_t result = qword_1E9CE1BB0;
  if (!qword_1E9CE1BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1BB0);
  }
  return result;
}

unint64_t sub_1B3CAE7DC()
{
  unint64_t result = qword_1E9CE1BF8;
  if (!qword_1E9CE1BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1BF8);
  }
  return result;
}

unint64_t sub_1B3CAE82C()
{
  unint64_t result = qword_1E9CE1BF0;
  if (!qword_1E9CE1BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1BF0);
  }
  return result;
}

uint64_t sub_1B3CAE878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B3CAE8E0()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B3CAE918()
{
  OUTLINED_FUNCTION_12_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_4_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B3CAECCC;
  uint64_t v3 = OUTLINED_FUNCTION_44_0();
  return sub_1B3CAC5EC(v3);
}

uint64_t sub_1B3CAE9AC(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_32();
  v3();
  return a1;
}

uint64_t sub_1B3CAE9FC()
{
  OUTLINED_FUNCTION_12_3();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_4_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B3CAECCC;
  uint64_t v3 = OUTLINED_FUNCTION_44_0();
  return sub_1B3CAC6AC(v3);
}

unint64_t sub_1B3CAEA90()
{
  unint64_t result = qword_1E9CE3480;
  if (!qword_1E9CE3480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3480);
  }
  return result;
}

uint64_t sub_1B3CAEADC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_13();
  uint64_t v4 = OUTLINED_FUNCTION_43_0();
  v5(v4);
  return a2;
}

uint64_t sub_1B3CAEB2C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1B3CAEB6C()
{
  OUTLINED_FUNCTION_36_1();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  char v7 = *(unsigned char *)(v0 + 48);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_4_0(v8);
  void *v9 = v10;
  v9[1] = sub_1B3CA9E80;
  return sub_1B3CAB3EC(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1B3CAEC28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B3CAEC78(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2 != 1) {
    sub_1B3CAEC88(a1, a2, a3);
  }
}

void sub_1B3CAEC88(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t OUTLINED_FUNCTION_14_5()
{
  return sub_1B3D72C18();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  type metadata accessor for LaunchServicesSnapshot(0);
  return sub_1B3D72278();
}

uint64_t OUTLINED_FUNCTION_19_3(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 20));
}

uint64_t OUTLINED_FUNCTION_23_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return sub_1B3D71E08();
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return v0 + 8;
}

void OUTLINED_FUNCTION_34_0()
{
  *(unsigned char *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_1()
{
  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_40_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_42_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return v0;
}

uint64_t XPCSecureCodedArray.wrappedValue.getter()
{
  return sub_1B3D72278();
}

uint64_t XPCSecureCodedArray.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*XPCSecureCodedArray.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t XPCSecureCodedArray.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t XPCSecureCodedArray.init(from:)(uint64_t a1)
{
  sub_1B3CAEF08();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForCoder);
  sub_1B3CAEF48();
  uint64_t v2 = OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_0_6(v2, v3);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

unint64_t sub_1B3CAEF08()
{
  unint64_t result = qword_1E9CE34B0;
  if (!qword_1E9CE34B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9CE34B0);
  }
  return result;
}

unint64_t sub_1B3CAEF48()
{
  unint64_t result = qword_1E9CE34B8[0];
  if (!qword_1E9CE34B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9CE34B8);
  }
  return result;
}

void XPCSecureCodedArray.encode(to:)()
{
  uint64_t v0 = (void *)sub_1B3D72448();
  sub_1B3CAEF48();
  uint64_t v1 = OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_0_6(v1, v2);
}

uint64_t sub_1B3CAEFE0(uint64_t a1)
{
  return XPCSecureCodedArray.init(from:)(a1);
}

void sub_1B3CAEFF8()
{
}

uint64_t XPCSecureCoded.wrappedValue.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t XPCSecureCoded.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_unknownObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*XPCSecureCoded.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t XPCSecureCoded.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t XPCSecureCoded.init(from:)(uint64_t a1)
{
  sub_1B3CAEF48();
  uint64_t v2 = OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_0_6(v2, v3);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t XPCSecureCoded.encode(to:)()
{
  sub_1B3CAEF48();
  OUTLINED_FUNCTION_4();
  unsigned char *v0 = 0;
  return swift_willThrow();
}

uint64_t sub_1B3CAF0F4(uint64_t a1)
{
  return XPCSecureCoded.init(from:)(a1);
}

uint64_t sub_1B3CAF10C()
{
  return XPCSecureCoded.encode(to:)();
}

uint64_t type metadata accessor for XPCSecureCodedArray()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for XPCSecureCoded()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for XPCSecureCodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CAF220);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCSecureCodingError()
{
  return &type metadata for XPCSecureCodingError;
}

unint64_t sub_1B3CAF25C()
{
  unint64_t result = qword_1E9CE35C0[0];
  if (!qword_1E9CE35C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9CE35C0);
  }
  return result;
}

uint64_t ToolKitIndexingReason.id.getter()
{
  sub_1B3D71EA8();
  OUTLINED_FUNCTION_13();
  uint64_t v0 = OUTLINED_FUNCTION_20_1();
  return v1(v0);
}

uint64_t ToolKitIndexingReason.trigger.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ToolKitIndexingReason(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ToolKitIndexingReason(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE18D0);
}

unint64_t ToolKitIndexingReason.changeset.getter@<X0>(unint64_t *a1@<X8>)
{
  int v3 = (unint64_t *)(v1 + *(int *)(type metadata accessor for ToolKitIndexingReason(0) + 24));
  unint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  unint64_t v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1B3CAF3B0(v4);
}

unint64_t sub_1B3CAF3B0(unint64_t result)
{
  if (result >= 2)
  {
    sub_1B3D72278();
    sub_1B3D72278();
    return sub_1B3D72278();
  }
  return result;
}

unint64_t ToolKitIndexingReason.Trigger.debugDescription.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 2:
      unint64_t result = 0x6E5574737269662ELL;
      break;
    case 3:
      return result;
    case 4:
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xA:
    case 0xB:
      unint64_t result = 0x657272656665642ELL;
      break;
    default:
      OUTLINED_FUNCTION_31_2();
      sub_1B3D72938();
      swift_bridgeObjectRelease();
      sub_1B3D723F8();
      swift_bridgeObjectRelease();
      sub_1B3D723F8();
      unint64_t result = 0x286C61756E616D2ELL;
      break;
  }
  return result;
}

BOOL ToolKitIndexingReason.Trigger.autoScheduled.getter()
{
  return *v0 - 2 < 0xA;
}

uint64_t ToolKitIndexingReason.Trigger.hash(into:)()
{
  switch(*v0)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
      uint64_t result = sub_1B3D73118();
      break;
    default:
      sub_1B3D73118();
      uint64_t result = sub_1B3D73128();
      break;
  }
  return result;
}

uint64_t static ToolKitIndexingReason.Trigger.== infix(_:_:)(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 == 2) {
        goto LABEL_23;
      }
      goto LABEL_24;
    case 3:
      if (v2 != 3) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 4:
      if (v2 != 4) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 5:
      if (v2 != 5) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 6:
      if (v2 != 6) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 7:
      if (v2 != 7) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 8:
      if (v2 != 8) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 9:
      if (v2 != 9) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 0xA:
      if (v2 == 10) {
        goto LABEL_23;
      }
      goto LABEL_24;
    case 0xB:
      if (v2 != 11) {
        goto LABEL_24;
      }
LABEL_23:
      char v3 = 1;
      break;
    default:
      if ((v2 - 2) < 0xA) {
LABEL_24:
      }
        char v3 = 0;
      else {
        char v3 = ((*a1 & 1) == 0) ^ v2;
      }
      break;
  }
  return v3 & 1;
}

uint64_t sub_1B3CAF7E0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C6E557473726966 && a2 == 0xEB000000006B636FLL;
    if (v6 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x656C756465686373 && a2 == 0xEF6465746F6F4272;
      if (v7 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B3D8A1C0 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x80000001B3D8A1E0 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x80000001B3D8A200 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001B3D8A220 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001B3D8A240 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001B3D8A260 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else
      {
        BOOL v8 = a1 == 0x6465727265666564 && a2 == 0xEC0000006C6C7546;
        if (v8 || (sub_1B3D72E58() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else if (a1 == 0x6465727265666564 && a2 == 0xED000061746C6544)
        {
          swift_bridgeObjectRelease();
          return 10;
        }
        else
        {
          char v10 = sub_1B3D72E58();
          swift_bridgeObjectRelease();
          if (v10) {
            return 10;
          }
          else {
            return 11;
          }
        }
      }
    }
  }
}

uint64_t sub_1B3CAFC14()
{
  return 11;
}

unint64_t sub_1B3CAFC1C(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6E557473726966;
      break;
    case 2:
      unint64_t result = 0x656C756465686373;
      break;
    case 3:
    case 8:
      return result;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
    case 10:
      unint64_t result = 0x6465727265666564;
      break;
    default:
      unint64_t result = 0x6C61756E616DLL;
      break;
  }
  return result;
}

uint64_t sub_1B3CAFD68(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0C14();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CAFDA4(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0C14();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CAFDE0(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0C60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CAFE1C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0C60();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B3CAFE58()
{
  return sub_1B3CAFC1C(*v0);
}

uint64_t sub_1B3CAFE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CAF7E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CAFE88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3CAFC14();
  *a1 = result;
  return result;
}

uint64_t sub_1B3CAFEB0(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0A4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CAFEEC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0A4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CAFF28(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0A98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CAFF64(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0A98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CAFFA0(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0AE4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CAFFDC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0AE4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB0018(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0D44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB0054(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0D44();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB0090(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0B7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB00CC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0B7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB0108(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0BC8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB0144(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0BC8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB0180(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0D90();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB01BC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0D90();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB01F8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0CF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB0234(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0CF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB0270(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0CAC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB02AC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0CAC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB02E8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0B30();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB0324(uint64_t a1)
{
  unint64_t v2 = sub_1B3CB0B30();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ToolKitIndexingReason.Trigger.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_21();
  a19 = v23;
  a20 = v24;
  uint64_t v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1E20);
  OUTLINED_FUNCTION_0();
  uint64_t v90 = v28;
  uint64_t v91 = v27;
  MEMORY[0x1F4188790](v27);
  OUTLINED_FUNCTION_11_6(v29, v68);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v30);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_72(v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E50);
  OUTLINED_FUNCTION_0();
  uint64_t v88 = v33;
  uint64_t v89 = v32;
  MEMORY[0x1F4188790](v32);
  OUTLINED_FUNCTION_18_4(v34, v69);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1E38);
  OUTLINED_FUNCTION_0();
  uint64_t v86 = v36;
  uint64_t v87 = v35;
  MEMORY[0x1F4188790](v35);
  OUTLINED_FUNCTION_40_2(v37, v70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E70);
  OUTLINED_FUNCTION_0();
  uint64_t v84 = v39;
  uint64_t v85 = v38;
  MEMORY[0x1F4188790](v38);
  OUTLINED_FUNCTION_22();
  uint64_t v83 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E58);
  OUTLINED_FUNCTION_0();
  uint64_t v81 = v42;
  uint64_t v82 = v41;
  MEMORY[0x1F4188790](v41);
  OUTLINED_FUNCTION_22();
  uint64_t v80 = v43;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1E60);
  OUTLINED_FUNCTION_0();
  uint64_t v78 = v44;
  MEMORY[0x1F4188790](v45);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_72(v46);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E48);
  OUTLINED_FUNCTION_0();
  uint64_t v76 = v47;
  MEMORY[0x1F4188790](v48);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_72(v49);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E30);
  OUTLINED_FUNCTION_0();
  uint64_t v74 = v50;
  MEMORY[0x1F4188790](v51);
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_72(v52);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1E08);
  OUTLINED_FUNCTION_0();
  uint64_t v73 = v54;
  MEMORY[0x1F4188790](v55);
  OUTLINED_FUNCTION_5_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E00);
  OUTLINED_FUNCTION_0();
  uint64_t v72 = v56;
  MEMORY[0x1F4188790](v57);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1DF8);
  OUTLINED_FUNCTION_0();
  uint64_t v93 = v58;
  uint64_t v94 = v59;
  MEMORY[0x1F4188790](v58);
  OUTLINED_FUNCTION_36_0();
  int v60 = *v20;
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  sub_1B3CB0A4C();
  uint64_t v92 = v22;
  sub_1B3D73178();
  switch(v60)
  {
    case 2:
      char v96 = 1;
      sub_1B3CB0D44();
      sub_1B3D72BA8();
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v21, v53);
      goto LABEL_16;
    case 3:
      char v97 = 2;
      sub_1B3CB0CF8();
      OUTLINED_FUNCTION_9_5();
      uint64_t v63 = OUTLINED_FUNCTION_23_4();
      uint64_t v65 = &a13;
      goto LABEL_14;
    case 4:
      sub_1B3CB0CAC();
      OUTLINED_FUNCTION_9_5();
      uint64_t v63 = OUTLINED_FUNCTION_58();
      goto LABEL_14;
    case 5:
      sub_1B3CB0C60();
      OUTLINED_FUNCTION_9_5();
      uint64_t v63 = OUTLINED_FUNCTION_56();
      goto LABEL_15;
    case 6:
      sub_1B3CB0C14();
      OUTLINED_FUNCTION_9_5();
      goto LABEL_12;
    case 7:
      sub_1B3CB0BC8();
      OUTLINED_FUNCTION_9_5();
      goto LABEL_12;
    case 8:
      sub_1B3CB0B7C();
      OUTLINED_FUNCTION_9_5();
      goto LABEL_12;
    case 9:
      sub_1B3CB0B30();
      OUTLINED_FUNCTION_9_5();
      goto LABEL_12;
    case 10:
      sub_1B3CB0AE4();
      OUTLINED_FUNCTION_9_5();
      uint64_t v63 = OUTLINED_FUNCTION_23_4();
      uint64_t v65 = &v98;
LABEL_14:
      uint64_t v66 = *(v65 - 32);
      goto LABEL_15;
    case 11:
      sub_1B3CB0A98();
      OUTLINED_FUNCTION_9_5();
LABEL_12:
      uint64_t v63 = OUTLINED_FUNCTION_23_4();
LABEL_15:
      v64(v63, v66);
LABEL_16:
      OUTLINED_FUNCTION_32();
      v67();
      break;
    default:
      char v95 = 0;
      sub_1B3CB0D90();
      sub_1B3D72BA8();
      sub_1B3D72BE8();
      OUTLINED_FUNCTION_32();
      v61();
      OUTLINED_FUNCTION_32();
      v62();
      break;
  }
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1B3CB0A4C()
{
  unint64_t result = qword_1E9CE1990;
  if (!qword_1E9CE1990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1990);
  }
  return result;
}

unint64_t sub_1B3CB0A98()
{
  unint64_t result = qword_1E9CE19E8;
  if (!qword_1E9CE19E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19E8);
  }
  return result;
}

unint64_t sub_1B3CB0AE4()
{
  unint64_t result = qword_1E9CE35E0;
  if (!qword_1E9CE35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE35E0);
  }
  return result;
}

unint64_t sub_1B3CB0B30()
{
  unint64_t result = qword_1E9CE35E8;
  if (!qword_1E9CE35E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE35E8);
  }
  return result;
}

unint64_t sub_1B3CB0B7C()
{
  unint64_t result = qword_1E9CE35F0;
  if (!qword_1E9CE35F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE35F0);
  }
  return result;
}

unint64_t sub_1B3CB0BC8()
{
  unint64_t result = qword_1E9CE35F8;
  if (!qword_1E9CE35F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE35F8);
  }
  return result;
}

unint64_t sub_1B3CB0C14()
{
  unint64_t result = qword_1E9CE3600;
  if (!qword_1E9CE3600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3600);
  }
  return result;
}

unint64_t sub_1B3CB0C60()
{
  unint64_t result = qword_1E9CE3608;
  if (!qword_1E9CE3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3608);
  }
  return result;
}

unint64_t sub_1B3CB0CAC()
{
  unint64_t result = qword_1E9CE3610;
  if (!qword_1E9CE3610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3610);
  }
  return result;
}

unint64_t sub_1B3CB0CF8()
{
  unint64_t result = qword_1E9CE3618;
  if (!qword_1E9CE3618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3618);
  }
  return result;
}

unint64_t sub_1B3CB0D44()
{
  unint64_t result = qword_1E9CE3620;
  if (!qword_1E9CE3620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3620);
  }
  return result;
}

unint64_t sub_1B3CB0D90()
{
  unint64_t result = qword_1E9CE3628;
  if (!qword_1E9CE3628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3628);
  }
  return result;
}

uint64_t ToolKitIndexingReason.Trigger.hashValue.getter()
{
  return sub_1B3D73138();
}

void ToolKitIndexingReason.Trigger.init(from:)()
{
  OUTLINED_FUNCTION_21();
  BOOL v3 = v2;
  uint64_t v87 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3630);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3638);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_11_6(v7, v80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3640);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_23(v9, v81);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3648);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_43_1(v11, v82);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3650);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_38_2(v13, v83);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3658);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_42_1(v15, v84);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3660);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_18_4(v17, v85);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3668);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3670);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_39_2(v20, v86);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3678);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v21);
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3680);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v22);
  OUTLINED_FUNCTION_17();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE3688);
  OUTLINED_FUNCTION_0();
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v26);
  OUTLINED_FUNCTION_8();
  uint64_t v88 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CB0A4C();
  sub_1B3D73158();
  if (v0)
  {
    uint64_t v27 = v3;
LABEL_10:
    uint64_t v78 = (uint64_t)v27;
    goto LABEL_11;
  }
  uint64_t v89 = v25;
  uint64_t v28 = v1;
  uint64_t v29 = sub_1B3D72B78();
  uint64_t v30 = *(void *)(v29 + 16);
  uint64_t v31 = v23;
  if (!v30)
  {
    uint64_t v27 = v3;
    uint64_t v37 = v89;
LABEL_9:
    uint64_t v38 = v28;
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    void *v40 = &type metadata for ToolKitIndexingReason.Trigger;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v41();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v31);
    goto LABEL_10;
  }
  uint64_t v32 = *(unsigned __int8 *)(v29 + 32);
  sub_1B3CA40D4(1, v30, v29, v29 + 32, 0, (2 * v30) | 1);
  uint64_t v34 = v33;
  unint64_t v36 = v35;
  swift_bridgeObjectRelease();
  if (v34 != v36 >> 1)
  {
    uint64_t v37 = v89;
    uint64_t v31 = v23;
    uint64_t v27 = v88;
    goto LABEL_9;
  }
  switch(v32)
  {
    case 1:
      sub_1B3CB0D44();
      OUTLINED_FUNCTION_5_6();
      uint64_t v42 = (uint64_t)v88;
      OUTLINED_FUNCTION_32();
      v43();
      swift_unknownObjectRelease();
      uint64_t v44 = OUTLINED_FUNCTION_1_9();
      v45(v44);
      char v77 = 2;
      goto LABEL_22;
    case 2:
      sub_1B3CB0CF8();
      OUTLINED_FUNCTION_5_6();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_32();
      v46();
      swift_unknownObjectRelease();
      uint64_t v47 = OUTLINED_FUNCTION_1_9();
      v48(v47);
      char v77 = 3;
      goto LABEL_23;
    case 3:
      sub_1B3CB0CAC();
      OUTLINED_FUNCTION_5_6();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_23_4();
      OUTLINED_FUNCTION_32();
      v49();
      swift_unknownObjectRelease();
      uint64_t v50 = OUTLINED_FUNCTION_1_9();
      v51(v50);
      char v77 = 4;
      goto LABEL_23;
    case 4:
      sub_1B3CB0C60();
      OUTLINED_FUNCTION_5_6();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_23_4();
      OUTLINED_FUNCTION_32();
      v52();
      swift_unknownObjectRelease();
      uint64_t v53 = OUTLINED_FUNCTION_1_9();
      v54(v53);
      char v77 = 5;
      goto LABEL_23;
    case 5:
      sub_1B3CB0C14();
      OUTLINED_FUNCTION_5_6();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_58();
      OUTLINED_FUNCTION_32();
      v55();
      swift_unknownObjectRelease();
      uint64_t v56 = OUTLINED_FUNCTION_1_9();
      v57(v56);
      char v77 = 6;
      goto LABEL_23;
    case 6:
      sub_1B3CB0BC8();
      OUTLINED_FUNCTION_5_6();
      uint64_t v42 = (uint64_t)v88;
      OUTLINED_FUNCTION_23_4();
      OUTLINED_FUNCTION_32();
      v67();
      swift_unknownObjectRelease();
      uint64_t v68 = OUTLINED_FUNCTION_1_9();
      v69(v68);
      char v77 = 7;
LABEL_22:
      uint64_t v79 = v87;
      uint64_t v78 = v42;
      break;
    case 7:
      sub_1B3CB0B7C();
      OUTLINED_FUNCTION_5_6();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_56();
      OUTLINED_FUNCTION_32();
      v58();
      swift_unknownObjectRelease();
      uint64_t v59 = OUTLINED_FUNCTION_1_9();
      v60(v59);
      char v77 = 8;
      goto LABEL_23;
    case 8:
      sub_1B3CB0B30();
      OUTLINED_FUNCTION_5_6();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_32();
      v61();
      swift_unknownObjectRelease();
      uint64_t v62 = OUTLINED_FUNCTION_1_9();
      v63(v62);
      char v77 = 9;
      goto LABEL_23;
    case 9:
      sub_1B3CB0AE4();
      OUTLINED_FUNCTION_5_6();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_32();
      v64();
      swift_unknownObjectRelease();
      uint64_t v65 = OUTLINED_FUNCTION_1_9();
      v66(v65);
      char v77 = 10;
      goto LABEL_23;
    case 10:
      sub_1B3CB0A98();
      OUTLINED_FUNCTION_5_6();
      OUTLINED_FUNCTION_28_2();
      OUTLINED_FUNCTION_32();
      v70();
      swift_unknownObjectRelease();
      uint64_t v71 = OUTLINED_FUNCTION_1_9();
      v72(v71);
      char v77 = 11;
LABEL_23:
      uint64_t v79 = v87;
      uint64_t v78 = v32;
      break;
    default:
      sub_1B3CB0D90();
      OUTLINED_FUNCTION_5_6();
      char v73 = sub_1B3D72B38();
      OUTLINED_FUNCTION_32();
      v74();
      swift_unknownObjectRelease();
      uint64_t v75 = OUTLINED_FUNCTION_49_0();
      v76(v75);
      char v77 = v73 & 1;
      uint64_t v78 = (uint64_t)v88;
      uint64_t v79 = v87;
      break;
  }
  char *v79 = v77;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1(v78);
  OUTLINED_FUNCTION_26();
}

void sub_1B3CB18CC()
{
}

#error "1B3CB18F0: call analysis failed (funcsize=6)"

uint64_t sub_1B3CB1904()
{
  return sub_1B3D73138();
}

uint64_t ToolKitIndexingReason.Changeset.Provenance.hash(into:)()
{
  uint64_t v1 = v0;
  type metadata accessor for LaunchServicesSnapshot(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v2);
  unint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B3CBAA54(v1, (uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1B3D73118();
      sub_1B3D72278();
      sub_1B3C947CC();
      uint64_t result = swift_bridgeObjectRelease_n();
      break;
    case 2u:
    case 3u:
      uint64_t result = sub_1B3D73118();
      break;
    default:
      sub_1B3CBA620((uint64_t)v7, (uint64_t)v4);
      sub_1B3D73118();
      sub_1B3D71EA8();
      sub_1B3CBA5DC((uint64_t)&qword_1EB4FA658);
      sub_1B3D72318();
      type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      sub_1B3D73118();
      sub_1B3D72278();
      OUTLINED_FUNCTION_20_1();
      sub_1B3C94618();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1B3CBA40C((uint64_t)v4, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
      break;
  }
  return result;
}

uint64_t static ToolKitIndexingReason.Changeset.Provenance.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for LaunchServicesSnapshot(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = OUTLINED_FUNCTION_37_2();
  type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(v8);
  OUTLINED_FUNCTION_13();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1F80);
  uint64_t v16 = OUTLINED_FUNCTION_7_3(v15);
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_33_0();
  uint64_t v18 = (uint64_t *)(v2 + *(int *)(v17 + 56));
  sub_1B3CBAA54(a1, v2);
  sub_1B3CBAA54(a2, (uint64_t)v18);
  OUTLINED_FUNCTION_44_1();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1B3CBAA54(v2, (uint64_t)v12);
      uint64_t v21 = *v12;
      if (OUTLINED_FUNCTION_65() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      char v22 = sub_1B3C91A0C(v21, *v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B3CBA40C(v2, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      return v22 & 1;
    case 2u:
      if (OUTLINED_FUNCTION_65() == 2) {
        goto LABEL_9;
      }
      goto LABEL_11;
    case 3u:
      if (OUTLINED_FUNCTION_65() == 3) {
        goto LABEL_9;
      }
      goto LABEL_11;
    default:
      uint64_t v19 = OUTLINED_FUNCTION_42_0();
      sub_1B3CBAA54(v19, v20);
      if (OUTLINED_FUNCTION_65())
      {
        sub_1B3CBA40C((uint64_t)v14, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
LABEL_11:
        sub_1B3CAE9AC(v2, (uint64_t *)&unk_1E9CE1F80);
        goto LABEL_12;
      }
      sub_1B3CBA620((uint64_t)v18, v3);
      if ((sub_1B3D71E68() & 1) == 0
        || (uint64_t v24 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0),
            *(void *)&v14[*(int *)(v24 + 20)] != *(void *)(v3 + *(int *)(v24 + 20)))
        || (sub_1B3C90FB4(*(void *)&v14[*(int *)(v6 + 20)], *(void *)(v3 + *(int *)(v6 + 20))) & 1) == 0)
      {
        sub_1B3CBA40C(v3, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
        sub_1B3CBA40C((uint64_t)v14, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
        sub_1B3CBA40C(v2, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
LABEL_12:
        char v22 = 0;
        return v22 & 1;
      }
      sub_1B3CBA40C(v3, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
      sub_1B3CBA40C((uint64_t)v14, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
LABEL_9:
      sub_1B3CBA40C(v2, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      char v22 = 1;
      return v22 & 1;
  }
}

uint64_t sub_1B3CB1F10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001B3D8A280 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B3D8A2A0 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001B3D8A2C0 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5365646163736163 && a2 == 0xEB00000000636E79)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1B3CB20C0(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x5365646163736163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B3CB2168(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B3CB21D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB2168(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B3CB2204(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA544();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB2240(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA544();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB227C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA4F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB22B8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA4F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB22F4(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA4AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB2330(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA4AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1B3CB236C()
{
  return sub_1B3CB20C0(*v0);
}

uint64_t sub_1B3CB2374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB1F10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CB239C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA460();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB23D8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA460();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB2414(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA590();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB2450(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA590();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ToolKitIndexingReason.Changeset.Provenance.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v29 = v0;
  char v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3698);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_39_2(v6, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE36A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_11_6(v8, v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE36A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_43_1(v10, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE36B0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_40_2(v12, v28);
  type metadata accessor for LaunchServicesSnapshot(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_8();
  type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE36B8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_17();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1B3CBA460();
  sub_1B3D73178();
  sub_1B3CBAA54(v29, v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1B3CBA544();
      OUTLINED_FUNCTION_29_2();
      sub_1B3C94CE4();
      sub_1B3D72C18();
      OUTLINED_FUNCTION_32();
      v22();
      uint64_t v23 = OUTLINED_FUNCTION_22_5();
      v24(v23);
      swift_bridgeObjectRelease();
      break;
    case 2u:
      sub_1B3CBA4F8();
      OUTLINED_FUNCTION_29_2();
      goto LABEL_5;
    case 3u:
      sub_1B3CBA4AC();
      OUTLINED_FUNCTION_29_2();
LABEL_5:
      OUTLINED_FUNCTION_32();
      v19();
      uint64_t v20 = OUTLINED_FUNCTION_22_5();
      v21(v20);
      break;
    default:
      sub_1B3CBA620(v1, v2);
      sub_1B3CBA590();
      OUTLINED_FUNCTION_29_2();
      sub_1B3CBA5DC((uint64_t)&qword_1E9CE1F90);
      sub_1B3D72C18();
      OUTLINED_FUNCTION_32();
      v16();
      sub_1B3CBA40C(v2, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
      uint64_t v17 = OUTLINED_FUNCTION_22_5();
      v18(v17);
      break;
  }
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_26();
}

uint64_t ToolKitIndexingReason.Changeset.Provenance.hashValue.getter()
{
  return sub_1B3CB5CC8((void (*)(unsigned char *))ToolKitIndexingReason.Changeset.Provenance.hash(into:));
}

void ToolKitIndexingReason.Changeset.Provenance.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v80 = (char *)v0;
  uint64_t v2 = v1;
  uint64_t v77 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE36E8);
  OUTLINED_FUNCTION_0();
  uint64_t v75 = v5;
  uint64_t v76 = v4;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_11_6(v6, v65[0]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1D90);
  OUTLINED_FUNCTION_0();
  uint64_t v70 = v8;
  uint64_t v71 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_42_1(v9, v65[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D88);
  OUTLINED_FUNCTION_0();
  uint64_t v72 = v11;
  uint64_t v73 = v10;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_23(v12, v65[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1DA0);
  OUTLINED_FUNCTION_0();
  uint64_t v68 = v14;
  uint64_t v69 = v13;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_18_4(v15, v65[0]);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1D78);
  OUTLINED_FUNCTION_0();
  uint64_t v78 = v17;
  MEMORY[0x1F4188790](v18);
  OUTLINED_FUNCTION_15();
  uint64_t v19 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  OUTLINED_FUNCTION_13();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)v65 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v65 - v27;
  uint64_t v29 = v2[3];
  uint64_t v79 = v2;
  __swift_project_boxed_opaque_existential_1(v2, v29);
  sub_1B3CBA460();
  uint64_t v30 = (uint64_t)v80;
  sub_1B3D73158();
  if (v30) {
    goto LABEL_11;
  }
  uint64_t v66 = v23;
  uint64_t v67 = v26;
  uint64_t v80 = v28;
  uint64_t v31 = sub_1B3D72B78();
  uint64_t v32 = v16;
  if (!*(void *)(v31 + 16))
  {
LABEL_7:
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v48 = v47;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    uint64_t *v48 = v19;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v49();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v50 = OUTLINED_FUNCTION_66();
    v55(v50, v32);
    goto LABEL_11;
  }
  v65[1] = 0;
  uint64_t v33 = *(unsigned __int8 *)(v31 + 32);
  uint64_t v34 = OUTLINED_FUNCTION_47_0();
  sub_1B3CA40D4(v34, v35, v36, v37, v38, v39);
  uint64_t v41 = v40;
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  if (v41 != v43 >> 1)
  {
    uint64_t v32 = v16;
    goto LABEL_7;
  }
  uint64_t v44 = v76;
  uint64_t v45 = v77;
  uint64_t v46 = v75;
  switch(v33)
  {
    case 1:
      sub_1B3CBA544();
      OUTLINED_FUNCTION_20_4();
      sub_1B3C94C98();
      sub_1B3D72B68();
      OUTLINED_FUNCTION_32();
      v61();
      swift_unknownObjectRelease();
      uint64_t v62 = OUTLINED_FUNCTION_26_1();
      v63(v62);
      int v60 = v66;
      void *v66 = v81;
      OUTLINED_FUNCTION_44_1();
      goto LABEL_12;
    case 2:
      sub_1B3CBA4F8();
      OUTLINED_FUNCTION_20_4();
      OUTLINED_FUNCTION_32();
      v51();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_32();
      v52();
      uint64_t v53 = (uint64_t)v80;
      OUTLINED_FUNCTION_44_1();
      swift_storeEnumTagMultiPayload();
      break;
    case 3:
      sub_1B3CBA4AC();
      uint64_t v54 = v74;
      OUTLINED_FUNCTION_20_4();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v54, v44);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_32();
      v56();
      uint64_t v53 = (uint64_t)v80;
      OUTLINED_FUNCTION_44_1();
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = v77;
      break;
    default:
      sub_1B3CBA590();
      OUTLINED_FUNCTION_20_4();
      type metadata accessor for LaunchServicesSnapshot(0);
      sub_1B3CBA5DC((uint64_t)&qword_1E9CE1C08);
      sub_1B3D72B68();
      OUTLINED_FUNCTION_32();
      v57();
      swift_unknownObjectRelease();
      uint64_t v58 = OUTLINED_FUNCTION_26_1();
      v59(v58);
      int v60 = v67;
      OUTLINED_FUNCTION_44_1();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = (uint64_t)v60;
      uint64_t v53 = (uint64_t)v80;
      sub_1B3CBA620(v64, (uint64_t)v80);
      break;
  }
  sub_1B3CBA620(v53, v45);
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_26();
}

void sub_1B3CB2FE4()
{
}

void sub_1B3CB2FFC()
{
}

uint64_t sub_1B3CB301C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CB604C(a1, a2, a3, (void (*)(unsigned char *))ToolKitIndexingReason.Changeset.Provenance.hash(into:));
}

void ToolKitIndexingReason.Changeset.debugDescription.getter()
{
  if (*v0 > 1uLL)
  {
    OUTLINED_FUNCTION_31_2();
    sub_1B3D72938();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_42_0();
    sub_1B3D72658();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    sub_1B3D723F8();
    sub_1B3D72658();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    sub_1B3D723F8();
  }
  OUTLINED_FUNCTION_69();
}

uint64_t ToolKitIndexingReason.Changeset.isEmpty.getter()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 0;
  }
  if (v1 == 1) {
    return OUTLINED_FUNCTION_67();
  }
  return !*(void *)(v1 + 16) && *(void *)(v0[1] + 16) == 0;
}

uint64_t *static ToolKitIndexingReason.Changeset.+ infix(_:_:)@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *result;
  uint64_t v4 = result[1];
  uint64_t v6 = result[2];
  if (!*result)
  {
    *a3 = 0;
    a3[1] = v4;
    a3[2] = v6;
    return result;
  }
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  if (!*a2)
  {
    *a3 = 0;
    a3[1] = v7;
    a3[2] = v9;
    return result;
  }
  if (v8 != 1)
  {
    if (v5 != 1)
    {
      unint64_t v11 = OUTLINED_FUNCTION_60();
      sub_1B3CAF3B0(v11);
      unint64_t v12 = OUTLINED_FUNCTION_57();
      sub_1B3CAF3B0(v12);
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
      uint64_t v13 = sub_1B3CB32FC(v8, v5);
      uint64_t v14 = sub_1B3CB32FC(v7, v4);
      uint64_t v15 = sub_1B3CB3704(v13, v14);
      uint64_t v16 = sub_1B3CB3480(v9, v6);
      unint64_t v17 = OUTLINED_FUNCTION_60();
      sub_1B3CBA67C(v17);
      unint64_t v18 = OUTLINED_FUNCTION_57();
      uint64_t result = (uint64_t *)sub_1B3CBA67C(v18);
      *a3 = v13;
      a3[1] = v15;
      a3[2] = v16;
      return result;
    }
    goto LABEL_9;
  }
  if (v5 == 1)
  {
LABEL_9:
    *a3 = v8;
    a3[1] = v7;
    a3[2] = v9;
    unint64_t v10 = OUTLINED_FUNCTION_57();
    goto LABEL_10;
  }
  *a3 = v5;
  a3[1] = v4;
  a3[2] = v6;
  unint64_t v10 = OUTLINED_FUNCTION_60();
LABEL_10:
  return (uint64_t *)sub_1B3CAF3B0(v10);
}

uint64_t sub_1B3CB32FC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    sub_1B3D72278();
    sub_1B3CC3D2C(&v17, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B3CB3480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8);
  int64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  int64_t v11 = (char *)&v26 - v10;
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v26 - v13;
  int64_t v15 = 0;
  uint64_t v27 = a2;
  uint64_t v16 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(a1 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v21 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v21 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v15 << 6))
  {
    sub_1B3CBAA54(*(void *)(a1 + 48) + *(void *)(v5 + 72) * i, (uint64_t)v14);
    sub_1B3CBA620((uint64_t)v14, (uint64_t)v8);
    sub_1B3CC3EC4((uint64_t)v11, (uint64_t)v8);
    uint64_t result = sub_1B3CBA40C((uint64_t)v11, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v23);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v20) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v16 + 8 * v15);
      if (!v24)
      {
        int64_t v15 = v23 + 2;
        if (v23 + 2 >= v20) {
          goto LABEL_23;
        }
        unint64_t v24 = *(void *)(v16 + 8 * v15);
        if (!v24)
        {
          int64_t v15 = v23 + 3;
          if (v23 + 3 >= v20) {
            goto LABEL_23;
          }
          unint64_t v24 = *(void *)(v16 + 8 * v15);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v19 = (v24 - 1) & v24;
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_23:
    swift_release();
    return v27;
  }
  unint64_t v24 = *(void *)(v16 + 8 * v25);
  if (v24)
  {
    int64_t v15 = v25;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v15);
    ++v25;
    if (v24) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B3CB3704(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) <= *(void *)(a2 + 16) >> 3)
  {
    sub_1B3CB914C(a1);
    return a2;
  }
  else
  {
    return sub_1B3CB92F8(a1, a2);
  }
}

uint64_t ToolKitIndexingReason.Changeset.encoded()()
{
  return OUTLINED_FUNCTION_42_0();
}

double static ToolKitIndexingReason.Changeset.decode(from:)@<D0>(uint64_t a1@<X8>)
{
  sub_1B3D71BB8();
  swift_allocObject();
  sub_1B3D71BA8();
  sub_1B3CBA718();
  sub_1B3D71B98();
  swift_release();
  if (!v1)
  {
    double result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(void *)(a1 + 16) = v5;
  }
  return result;
}

uint64_t ToolKitIndexingReason.Changeset.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  if (!*v1 || v3 == 1) {
    return sub_1B3D73118();
  }
  uint64_t v6 = v1[1];
  uint64_t v5 = v1[2];
  sub_1B3D73118();
  sub_1B3CBA250((uint64_t)a1, v3);
  sub_1B3CBA250((uint64_t)a1, v6);
  return sub_1B3CB9D98(a1, v5);
}

uint64_t static ToolKitIndexingReason.Changeset.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = a1[2];
  unint64_t v4 = *a2;
  uint64_t v5 = a2[2];
  if (!*a1)
  {
    if (!v4)
    {
      unint64_t v2 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v2 != 1)
  {
    if (v4 >= 2)
    {
      sub_1B3CAF3B0(*a2);
      sub_1B3CAF3B0(v2);
      if (sub_1B3CB3A74(v2, v4))
      {
        uint64_t v8 = OUTLINED_FUNCTION_20_1();
        if (sub_1B3CB3A74(v8, v9))
        {
          char v6 = sub_1B3CB3D1C(v3, v5);
          goto LABEL_11;
        }
      }
      goto LABEL_10;
    }
LABEL_9:
    sub_1B3CAF3B0(*a2);
    sub_1B3CAF3B0(v2);
LABEL_10:
    char v6 = 0;
    goto LABEL_11;
  }
  if (v4 != 1) {
    goto LABEL_9;
  }
  unint64_t v2 = 1;
LABEL_7:
  char v6 = 1;
LABEL_11:
  sub_1B3CBA67C(v2);
  sub_1B3CBA67C(v4);
  return v6 & 1;
}

uint64_t sub_1B3CB3A74(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v30 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
  if ((v6 & v4) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  int64_t v32 = v3;
  for (unint64_t i = v9 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    uint64_t v15 = result;
    uint64_t v16 = (uint64_t *)(*(void *)(result + 48) + 16 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_1B3D73108();
    sub_1B3D72278();
    sub_1B3D723E8();
    uint64_t v19 = sub_1B3D73138();
    uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v22 = *(void *)(a2 + 48);
    int64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (sub_1B3D72E58() & 1) == 0)
    {
      uint64_t v25 = ~v20;
      for (unint64_t j = v21 + 1; ; unint64_t j = v27 + 1)
      {
        uint64_t v27 = j & v25;
        if (((*(void *)(v8 + (((j & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v25)) & 1) == 0) {
          break;
        }
        uint64_t v28 = (void *)(v22 + 16 * v27);
        BOOL v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (sub_1B3D72E58() & 1) != 0) {
          goto LABEL_30;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    double result = v15;
    int64_t v3 = v32;
    if (v7) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v11 >= v31) {
      return 1;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v11);
    int64_t v13 = v3 + 1;
    if (!v12)
    {
      int64_t v13 = v3 + 2;
      if (v3 + 2 >= v31) {
        return 1;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v3 + 3;
        if (v3 + 3 >= v31) {
          return 1;
        }
        unint64_t v12 = *(void *)(v30 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v3 + 4;
          if (v3 + 4 >= v31) {
            return 1;
          }
          unint64_t v12 = *(void *)(v30 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v12 - 1) & v12;
    int64_t v32 = v13;
  }
  uint64_t v14 = v3 + 5;
  if (v3 + 5 >= v31) {
    return 1;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v31) {
      return 1;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1B3CB3D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v56 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1F80);
  MEMORY[0x1F4188790](v62);
  unint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v59 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v47 - v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v21 = (char *)&v47 - v18;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v22 = 0;
  uint64_t v23 = *(void *)(a1 + 56);
  uint64_t v52 = a1 + 56;
  uint64_t v24 = 1 << *(unsigned char *)(a1 + 32);
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  else {
    uint64_t v25 = -1;
  }
  unint64_t v26 = v25 & v23;
  int64_t v53 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v57 = v20;
  uint64_t v58 = a2 + 56;
  uint64_t v60 = a2;
  uint64_t v50 = a1;
  uint64_t v51 = v4;
  uint64_t v49 = v19;
  uint64_t v48 = (char *)&v47 - v18;
  if (!v26) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v54 = (v26 - 1) & v26;
  int64_t v55 = v22;
  unint64_t v27 = __clz(__rbit64(v26)) | (v22 << 6);
LABEL_24:
  uint64_t v32 = *(void *)(a1 + 48);
  uint64_t v61 = *(void *)(v19 + 72);
  sub_1B3CBAA54(v32 + v61 * v27, (uint64_t)v21);
  sub_1B3CBA620((uint64_t)v21, (uint64_t)v17);
  sub_1B3D73108();
  ToolKitIndexingReason.Changeset.Provenance.hash(into:)();
  uint64_t v33 = sub_1B3D73138();
  uint64_t v34 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v35 = v33 & ~v34;
  uint64_t v36 = v58;
  if (((*(void *)(v58 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
  {
LABEL_49:
    sub_1B3CBA40C((uint64_t)v17, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    return 0;
  }
  uint64_t v37 = ~v34;
  while (2)
  {
    sub_1B3CBAA54(*(void *)(a2 + 48) + v35 * v61, (uint64_t)v14);
    uint64_t v38 = (uint64_t *)&v7[*(int *)(v62 + 48)];
    sub_1B3CBAA54((uint64_t)v14, (uint64_t)v7);
    sub_1B3CBAA54((uint64_t)v17, (uint64_t)v38);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v41 = v59;
        sub_1B3CBAA54((uint64_t)v7, (uint64_t)v59);
        uint64_t v42 = *v41;
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        char v43 = sub_1B3C91A0C(v42, *v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v43) {
          goto LABEL_46;
        }
        sub_1B3CBA40C((uint64_t)v7, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        goto LABEL_38;
      case 2u:
        if (swift_getEnumCaseMultiPayload() == 2) {
          goto LABEL_46;
        }
        goto LABEL_37;
      case 3u:
        if (swift_getEnumCaseMultiPayload() == 3) {
          goto LABEL_46;
        }
        goto LABEL_37;
      default:
        uint64_t v39 = v17;
        uint64_t v40 = v57;
        sub_1B3CBAA54((uint64_t)v7, v57);
        if (swift_getEnumCaseMultiPayload())
        {
          sub_1B3CBA40C(v40, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
          uint64_t v17 = v39;
          uint64_t v36 = v58;
LABEL_37:
          sub_1B3CAE9AC((uint64_t)v7, (uint64_t *)&unk_1E9CE1F80);
LABEL_38:
          a2 = v60;
          goto LABEL_39;
        }
        uint64_t v44 = v56;
        sub_1B3CBA620((uint64_t)v38, v56);
        if ((sub_1B3D71E68() & 1) == 0
          || (uint64_t v45 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0),
              *(void *)(v40 + *(int *)(v45 + 20)) != *(void *)(v44 + *(int *)(v45 + 20)))
          || (sub_1B3C90FB4(*(void *)(v40 + *(int *)(v51 + 20)), *(void *)(v44 + *(int *)(v51 + 20))) & 1) == 0)
        {
          sub_1B3CBA40C(v40, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
          sub_1B3CBA40C(v44, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
          sub_1B3CBA40C((uint64_t)v7, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
          uint64_t v17 = v39;
          uint64_t v36 = v58;
LABEL_39:
          sub_1B3CBA40C((uint64_t)v14, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
          unint64_t v35 = (v35 + 1) & v37;
          if (((*(void *)(v36 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
            goto LABEL_49;
          }
          continue;
        }
        sub_1B3CBA40C(v40, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
        sub_1B3CBA40C(v44, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
        uint64_t v17 = v39;
LABEL_46:
        sub_1B3CBA40C((uint64_t)v7, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        sub_1B3CBA40C((uint64_t)v14, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        sub_1B3CBA40C((uint64_t)v17, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        a2 = v60;
        a1 = v50;
        uint64_t v19 = v49;
        unint64_t v21 = v48;
        unint64_t v26 = v54;
        int64_t v22 = v55;
        if (v54) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v28 = v22 + 1;
        if (__OFADD__(v22, 1))
        {
          __break(1u);
          goto LABEL_52;
        }
        if (v28 < v53)
        {
          unint64_t v29 = *(void *)(v52 + 8 * v28);
          int64_t v30 = v22 + 1;
          if (v29) {
            goto LABEL_23;
          }
          int64_t v30 = v28 + 1;
          if (v28 + 1 < v53)
          {
            unint64_t v29 = *(void *)(v52 + 8 * v30);
            if (v29) {
              goto LABEL_23;
            }
            int64_t v30 = v28 + 2;
            if (v28 + 2 < v53)
            {
              unint64_t v29 = *(void *)(v52 + 8 * v30);
              if (v29) {
                goto LABEL_23;
              }
              int64_t v30 = v28 + 3;
              if (v28 + 3 < v53)
              {
                unint64_t v29 = *(void *)(v52 + 8 * v30);
                if (v29) {
                  goto LABEL_23;
                }
                int64_t v31 = v28 + 4;
                if (v31 < v53)
                {
                  unint64_t v29 = *(void *)(v52 + 8 * v31);
                  if (v29)
                  {
                    int64_t v30 = v31;
LABEL_23:
                    uint64_t v54 = (v29 - 1) & v29;
                    int64_t v55 = v30;
                    unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
                    goto LABEL_24;
                  }
                  while (1)
                  {
                    int64_t v30 = v31 + 1;
                    if (__OFADD__(v31, 1)) {
                      break;
                    }
                    if (v30 >= v53) {
                      return 1;
                    }
                    unint64_t v29 = *(void *)(v52 + 8 * v30);
                    ++v31;
                    if (v29) {
                      goto LABEL_23;
                    }
                  }
LABEL_52:
                  __break(1u);
                  JUMPOUT(0x1B3CB4480);
                }
              }
            }
          }
        }
        return 1;
    }
  }
}

uint64_t sub_1B3CB4490(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1819047270 && a2 == 0xE400000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C616974726170 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701736302 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B3D72E58();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B3CB45B0(char a1)
{
  return *(void *)&aFull_0[8 * a1];
}

uint64_t sub_1B3CB45D0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x64657461647075 && a2 == 0xE700000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E616E65766F7270 && a2 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B3D72E58();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B3CB4720(char a1)
{
  return *(void *)&aUpdated_4[8 * a1];
}

uint64_t sub_1B3CB4740()
{
  return sub_1B3CB45B0(*v0);
}

uint64_t sub_1B3CB4748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB4490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CB4770(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA764();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB47AC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA764();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB47E8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA848();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB4824(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA848();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB4860(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA7B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB489C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA7B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB48D8()
{
  return sub_1B3CB4720(*v0);
}

uint64_t sub_1B3CB48E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB45D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CB4908(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA7FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB4944(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA7FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ToolKitIndexingReason.Changeset.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E90);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_35_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_22_3(v7, v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1E80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1E78);
  OUTLINED_FUNCTION_0();
  uint64_t v16 = v10;
  uint64_t v17 = v9;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_15();
  uint64_t v11 = *v0;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1B3CBA764();
  sub_1B3D73178();
  if (!v11)
  {
    sub_1B3CBA848();
    OUTLINED_FUNCTION_73();
    goto LABEL_5;
  }
  if (v11 == 1)
  {
    sub_1B3CBA7B0();
    OUTLINED_FUNCTION_73();
LABEL_5:
    OUTLINED_FUNCTION_32();
    v12();
    OUTLINED_FUNCTION_32();
    v13();
    goto LABEL_10;
  }
  sub_1B3CBA7FC();
  sub_1B3D72BA8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1CF8);
  sub_1B3CBA894((uint64_t)&unk_1E9CE3700);
  sub_1B3D72C18();
  if (!v1)
  {
    OUTLINED_FUNCTION_68();
    sub_1B3D72C18();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CE8);
    sub_1B3CBA8F4((uint64_t)&unk_1E9CE3710);
    OUTLINED_FUNCTION_68();
    sub_1B3D72C18();
  }
  OUTLINED_FUNCTION_32();
  v14();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v17);
LABEL_10:
  OUTLINED_FUNCTION_26();
}

uint64_t ToolKitIndexingReason.Changeset.hashValue.getter()
{
  unint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  OUTLINED_FUNCTION_43();
  sub_1B3D73118();
  if (v2 > 1)
  {
    sub_1B3CBA250((uint64_t)v5, v2);
    sub_1B3CBA250((uint64_t)v5, v1);
    sub_1B3CB9D98(v5, v3);
  }
  return sub_1B3D73138();
}

void ToolKitIndexingReason.Changeset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_21();
  uint64_t v12 = v11;
  uint64_t v45 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1DB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_22_3(v15, v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1DC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16);
  OUTLINED_FUNCTION_35_0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1DA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v17);
  OUTLINED_FUNCTION_15();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D70);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v19);
  OUTLINED_FUNCTION_5_3();
  uint64_t v46 = v12;
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1B3CBA764();
  sub_1B3D73158();
  if (!v10)
  {
    uint64_t v20 = sub_1B3D72B78();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      int v22 = *(unsigned __int8 *)(v20 + 32);
      sub_1B3CA40D4(1, v21, v20, v20 + 32, 0, (2 * v21) | 1);
      uint64_t v24 = v23;
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      if (v24 == v26 >> 1)
      {
        if (v22)
        {
          if (v22 != 1)
          {
            sub_1B3CBA7B0();
            OUTLINED_FUNCTION_77();
            OUTLINED_FUNCTION_32();
            v36();
            swift_unknownObjectRelease();
            OUTLINED_FUNCTION_61();
            OUTLINED_FUNCTION_32();
            v37();
            uint64_t v39 = 0;
            uint64_t v43 = 0;
            uint64_t v27 = 1;
            uint64_t v33 = (uint64_t)v46;
            uint64_t v38 = v45;
LABEL_13:
            uint64_t *v38 = v27;
            v38[1] = v39;
            v38[2] = v43;
            goto LABEL_9;
          }
          LOBYTE(a10) = 1;
          sub_1B3CBA7FC();
          OUTLINED_FUNCTION_77();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1CF8);
          LOBYTE(v48) = 0;
          sub_1B3CBA894((uint64_t)&unk_1E9CE1D08);
          sub_1B3D72B68();
          uint64_t v27 = a10;
          LOBYTE(v47) = 1;
          sub_1B3D72B68();
          uint64_t v39 = v48;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CE8);
          sub_1B3CBA8F4((uint64_t)&unk_1E9CE1CF0);
          sub_1B3D72B68();
          OUTLINED_FUNCTION_32();
          v40();
          swift_unknownObjectRelease();
          uint64_t v41 = OUTLINED_FUNCTION_25_3();
          v42(v41);
          uint64_t v43 = v47;
        }
        else
        {
          sub_1B3CBA848();
          sub_1B3D72AE8();
          OUTLINED_FUNCTION_32();
          v34();
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_62();
          OUTLINED_FUNCTION_32();
          v35();
          uint64_t v27 = 0;
          uint64_t v39 = 0;
          uint64_t v43 = 0;
        }
        uint64_t v33 = (uint64_t)v46;
        uint64_t v38 = v45;
        goto LABEL_13;
      }
    }
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    unint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    *unint64_t v29 = &type metadata for ToolKitIndexingReason.Changeset;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v30();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v31 = OUTLINED_FUNCTION_62();
    v32(v31, v18);
  }
  uint64_t v33 = (uint64_t)v46;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1(v33);
  OUTLINED_FUNCTION_26();
}

void sub_1B3CB53B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  ToolKitIndexingReason.Changeset.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1B3CB53D0()
{
}

uint64_t sub_1B3CB53F0()
{
  unint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  sub_1B3D73108();
  sub_1B3D73118();
  if (v2 > 1)
  {
    sub_1B3CBA250((uint64_t)v5, v2);
    sub_1B3CBA250((uint64_t)v5, v1);
    sub_1B3CB9D98(v5, v3);
  }
  return sub_1B3D73138();
}

__n128 ToolKitIndexingReason.init(trigger:changeset:)@<Q0>(char *a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a1;
  __n128 v9 = *a2;
  unint64_t v5 = a2[1].n128_u64[0];
  sub_1B3D71E98();
  uint64_t v6 = type metadata accessor for ToolKitIndexingReason(0);
  *(unsigned char *)(a3 + *(int *)(v6 + 20)) = v4;
  uint64_t v7 = (__n128 *)(a3 + *(int *)(v6 + 24));
  __n128 result = v9;
  __n128 *v7 = v9;
  v7[1].n128_u64[0] = v5;
  return result;
}

__n128 ToolKitIndexingReason.init(id:trigger:changeset:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a2;
  __n128 v12 = *a3;
  unint64_t v7 = a3[1].n128_u64[0];
  sub_1B3D71EA8();
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(a4, a1);
  uint64_t v9 = type metadata accessor for ToolKitIndexingReason(0);
  *(unsigned char *)(a4 + *(int *)(v9 + 20)) = v6;
  uint64_t v10 = (__n128 *)(a4 + *(int *)(v9 + 24));
  __n128 result = v12;
  __n128 *v10 = v12;
  v10[1].n128_u64[0] = v7;
  return result;
}

uint64_t ToolKitIndexingReason.debugDescription.getter()
{
  OUTLINED_FUNCTION_31_2();
  sub_1B3D72938();
  sub_1B3D723F8();
  sub_1B3D71EA8();
  sub_1B3CBA5DC((uint64_t)&qword_1E9CE18C0);
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  uint64_t v0 = type metadata accessor for ToolKitIndexingReason(0);
  OUTLINED_FUNCTION_70();
  sub_1B3D723F8();
  OUTLINED_FUNCTION_52_0(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_70();
  sub_1B3D723F8();
  return v2;
}

void ToolKitIndexingReason.hash(into:)(uint64_t a1)
{
  sub_1B3D71EA8();
  sub_1B3CBA5DC((uint64_t)&qword_1EB4FA658);
  OUTLINED_FUNCTION_42_0();
  sub_1B3D72318();
  uint64_t v3 = type metadata accessor for ToolKitIndexingReason(0);
  ToolKitIndexingReason.Trigger.hash(into:)();
  unint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  if (v4 > 1)
  {
    sub_1B3D73118();
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3CBA250(a1, v4);
    uint64_t v5 = OUTLINED_FUNCTION_44_1();
    sub_1B3CBA250(v5, v6);
    unint64_t v7 = (long long *)OUTLINED_FUNCTION_42_0();
    sub_1B3CB9D98(v7, v8);
    OUTLINED_FUNCTION_69();
    sub_1B3CBA67C(v9);
  }
  else
  {
    sub_1B3D73118();
    OUTLINED_FUNCTION_69();
  }
}

uint64_t static ToolKitIndexingReason.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1B3D71E68() & 1) != 0
    && (uint64_t v4 = type metadata accessor for ToolKitIndexingReason(0),
        uint64_t v5 = *(int *)(v4 + 20),
        LOBYTE(v11) = *(unsigned char *)(a1 + v5),
        LOBYTE(v10[0]) = *(unsigned char *)(a2 + v5),
        (static ToolKitIndexingReason.Trigger.== infix(_:_:)(&v11, (unsigned __int8 *)v10) & 1) != 0))
  {
    uint64_t v6 = *(int *)(v4 + 24);
    uint64_t v7 = *(void *)(a1 + v6 + 16);
    long long v11 = *(_OWORD *)(a1 + v6);
    uint64_t v12 = v7;
    OUTLINED_FUNCTION_52_0(v6);
    char v8 = static ToolKitIndexingReason.Changeset.== infix(_:_:)((unint64_t *)&v11, v10);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1B3CB58F0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x72656767697274 && a2 == 0xE700000000000000;
    if (v6 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x657365676E616863 && a2 == 0xE900000000000074)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_1B3D72E58();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1B3CB5A20(char a1)
{
  return qword_1B3D86FB8[a1];
}

uint64_t sub_1B3CB5A40()
{
  return sub_1B3CB5A20(*v0);
}

uint64_t sub_1B3CB5A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB58F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CB5A70(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA970();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB5AAC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBA970();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ToolKitIndexingReason.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1DE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CBA970();
  OUTLINED_FUNCTION_50_0();
  sub_1B3D71EA8();
  sub_1B3CBA5DC((uint64_t)&qword_1E9CE1948);
  OUTLINED_FUNCTION_35_2();
  if (!v1)
  {
    type metadata accessor for ToolKitIndexingReason(0);
    sub_1B3CBA9BC();
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_79();
    sub_1B3CBA6CC();
    OUTLINED_FUNCTION_35_2();
  }
  OUTLINED_FUNCTION_51_0();
  return v7(v4, v5, v6);
}

uint64_t ToolKitIndexingReason.hashValue.getter()
{
  return sub_1B3CB5CC8((void (*)(unsigned char *))ToolKitIndexingReason.hash(into:));
}

uint64_t sub_1B3CB5CC8(void (*a1)(unsigned char *))
{
  OUTLINED_FUNCTION_43();
  a1(v3);
  return sub_1B3D73138();
}

void ToolKitIndexingReason.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2;
  uint64_t v15 = v4;
  uint64_t v5 = sub_1B3D71EA8();
  OUTLINED_FUNCTION_0();
  uint64_t v16 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_38_2(v8, v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE3728);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_35_0();
  uint64_t v10 = type metadata accessor for ToolKitIndexingReason(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_16();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CBA970();
  sub_1B3D73158();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    LOBYTE(v18) = 0;
    sub_1B3CBA5DC((uint64_t)&qword_1E9CE1950);
    sub_1B3D72B68();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v1, v17, v5);
    sub_1B3CBAA08();
    OUTLINED_FUNCTION_46_0();
    *(unsigned char *)(v1 + *(int *)(v10 + 20)) = 0;
    OUTLINED_FUNCTION_79();
    sub_1B3CBA718();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_32();
    v12();
    uint64_t v13 = v1 + *(int *)(v10 + 24);
    *(_OWORD *)uint64_t v13 = v18;
    *(void *)(v13 + 16) = v19;
    sub_1B3CBAA54(v1, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    sub_1B3CBA40C(v1, (void (*)(void))type metadata accessor for ToolKitIndexingReason);
  }
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_26();
}

void sub_1B3CB5FFC()
{
}

uint64_t sub_1B3CB6014(void *a1)
{
  return ToolKitIndexingReason.encode(to:)(a1);
}

uint64_t sub_1B3CB6034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CB604C(a1, a2, a3, (void (*)(unsigned char *))ToolKitIndexingReason.hash(into:));
}

uint64_t sub_1B3CB604C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1B3D73108();
  a4(v6);
  return sub_1B3D73138();
}

BOOL static ToolKitIndexingRequest.Response.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ToolKitIndexingRequest.Response.hash(into:)()
{
  return sub_1B3D73118();
}

uint64_t sub_1B3CB60E0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001B3D8A2E0 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001B3D8A300)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1B3CB61CC(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000012;
  }
}

unint64_t sub_1B3CB6208()
{
  return sub_1B3CB61CC(*v0);
}

uint64_t sub_1B3CB6210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB60E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CB6238(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAAA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB6274(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAAA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB62B0(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAB40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB62EC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAB40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB6328(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAAF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB6364(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAAF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ToolKitIndexingRequest.Response.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3740);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3748);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_35_0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3750);
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_5_3();
  char v10 = *v0;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CBAAA8();
  sub_1B3D73178();
  uint64_t v11 = (void (**)(uint64_t, uint64_t))(v8 + 8);
  if (v10)
  {
    sub_1B3CBAAF4();
    sub_1B3D72BA8();
    OUTLINED_FUNCTION_23_4();
  }
  else
  {
    sub_1B3CBAB40();
    sub_1B3D72BA8();
  }
  OUTLINED_FUNCTION_32();
  v13(v12);
  (*v11)(v1, v6);
  OUTLINED_FUNCTION_26();
}

uint64_t ToolKitIndexingRequest.Response.hashValue.getter()
{
  return sub_1B3D73138();
}

void ToolKitIndexingRequest.Response.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2;
  int64_t v28 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3770);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3778);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_33_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3780);
  OUTLINED_FUNCTION_0();
  uint64_t v29 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_16();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CBAAA8();
  sub_1B3D73158();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v30 = (uint64_t)v3;
  uint64_t v10 = sub_1B3D72B78();
  if (!*(void *)(v10 + 16)
    || (char v11 = *(unsigned char *)(v10 + 32),
        uint64_t v12 = OUTLINED_FUNCTION_47_0(),
        sub_1B3CA40D4(v12, v13, v14, v15, v16, v17),
        uint64_t v19 = v18,
        unint64_t v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    void *v24 = &type metadata for ToolKitIndexingRequest.Response;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v25();
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_66();
    OUTLINED_FUNCTION_32();
    v26();
    uint64_t v3 = (void *)v30;
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    goto LABEL_9;
  }
  if (v11)
  {
    sub_1B3CBAAF4();
    sub_1B3D72AE8();
    int v22 = v28;
    OUTLINED_FUNCTION_23_4();
  }
  else
  {
    sub_1B3CBAB40();
    sub_1B3D72AE8();
    int v22 = v28;
  }
  OUTLINED_FUNCTION_32();
  v27();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1, v7);
  unsigned char *v22 = v11;
  __swift_destroy_boxed_opaque_existential_1(v30);
LABEL_9:
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3CB69A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x676E697972746572 && a2 == 0xED0000726F727245)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B3CB6A48()
{
  return 0x676E697972746572;
}

uint64_t sub_1B3CB6A6C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73656D6974 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B3CB6AEC()
{
  return 0x73656D6974;
}

void sub_1B3CB6B0C()
{
}

void sub_1B3CB6B24()
{
}

uint64_t sub_1B3CB6B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB69A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B3CB6B6C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAB8C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB6BA8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAB8C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CB6BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB6A6C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B3CB6C14(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBABD8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB6C50(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBABD8();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ToolKitIndexingRequest.TestingConfig.Failure.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  unint64_t v2 = v1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3788);
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3790);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_8();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1B3CBAB8C();
  sub_1B3D73178();
  sub_1B3CBABD8();
  sub_1B3D72BA8();
  sub_1B3D72C08();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v9);
  uint64_t v7 = OUTLINED_FUNCTION_25_3();
  v8(v7);
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_26();
}

void ToolKitIndexingRequest.TestingConfig.Failure.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2;
  unint64_t v26 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE37A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_33_0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE37B0);
  OUTLINED_FUNCTION_0();
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_36_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CBAB8C();
  sub_1B3D73158();
  if (v0) {
    goto LABEL_6;
  }
  if (!*(void *)(sub_1B3D72B78() + 16)
    || (uint64_t v9 = OUTLINED_FUNCTION_47_0(),
        sub_1B3CA40D4(v9, v10, v11, v12, v13, v14),
        uint64_t v16 = v15,
        unint64_t v18 = v17,
        swift_bridgeObjectRelease(),
        v16 != v18 >> 1))
  {
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    unint64_t v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    void *v20 = &type metadata for ToolKitIndexingRequest.TestingConfig.Failure;
    sub_1B3D72AF8();
    OUTLINED_FUNCTION_12_2();
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_20_2();
    v21();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v1, v6);
LABEL_6:
    uint64_t v25 = (uint64_t)v3;
    goto LABEL_7;
  }
  sub_1B3CBABD8();
  sub_1B3D72AE8();
  uint64_t v22 = sub_1B3D72B58();
  OUTLINED_FUNCTION_32();
  v23();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_32();
  v24();
  uint64_t v25 = (uint64_t)v3;
  *unint64_t v26 = v22;
LABEL_7:
  __swift_destroy_boxed_opaque_existential_1(v25);
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_26();
}

void sub_1B3CB70E0()
{
}

void sub_1B3CB70F8()
{
}

void ToolKitIndexingRequest.TestingConfig.failure.getter(uint64_t a1@<X8>)
{
}

void ToolKitIndexingRequest.TestingConfig.init(failure:)(uint64_t a1@<X8>)
{
}

uint64_t sub_1B3CB7128(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B3CB71B0()
{
  return 0x6572756C696166;
}

uint64_t sub_1B3CB71CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB7128(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B3CB71F8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAC24();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB7234(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAC24();
  return MEMORY[0x1F41862B0](a1, v2);
}

void ToolKitIndexingRequest.TestingConfig.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE37B8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v2);
  OUTLINED_FUNCTION_17();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1B3CBAC24();
  OUTLINED_FUNCTION_50_0();
  sub_1B3CBAC70();
  sub_1B3D72BC8();
  OUTLINED_FUNCTION_51_0();
  v5(v3, v4);
  OUTLINED_FUNCTION_71();
  OUTLINED_FUNCTION_26();
}

void ToolKitIndexingRequest.TestingConfig.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE37D0);
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_8();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CBAC24();
  sub_1B3D73158();
  if (!v0)
  {
    sub_1B3CBACBC();
    sub_1B3D72B18();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
    *(void *)uint64_t v5 = v10;
    *(unsigned char *)(v5 + 8) = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  OUTLINED_FUNCTION_75();
  OUTLINED_FUNCTION_26();
}

void sub_1B3CB748C()
{
}

void sub_1B3CB74A4()
{
}

uint64_t ToolKitIndexingRequest.id.getter()
{
  return sub_1B3CB74FC((uint64_t)&OBJC_IVAR___WFToolKitIndexingRequest_id, MEMORY[0x1E4F27990]);
}

uint64_t ToolKitIndexingRequest.timestamp.getter()
{
  return sub_1B3CB74FC((uint64_t)&OBJC_IVAR___WFToolKitIndexingRequest_timestamp, MEMORY[0x1E4F27928]);
}

uint64_t sub_1B3CB74FC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_13();
  uint64_t v2 = OUTLINED_FUNCTION_20_1();
  return v3(v2);
}

uint64_t ToolKitIndexingRequest.reasons.getter()
{
  return sub_1B3D72278();
}

uint64_t ToolKitIndexingRequest.retryCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR___WFToolKitIndexingRequest_retryCount);
}

void ToolKitIndexingRequest.testingConfig.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR___WFToolKitIndexingRequest_testingConfig + 8);
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR___WFToolKitIndexingRequest_testingConfig + 9);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR___WFToolKitIndexingRequest_testingConfig);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
}

id ToolKitIndexingRequest.__allocating_init(reason:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE37E0);
  uint64_t v2 = OUTLINED_FUNCTION_40_1();
  uint64_t v3 = *(void *)(type metadata accessor for ToolKitIndexingReason(v2) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1B3D80E20;
  sub_1B3CBAA54(a1, v5 + v4);
  id v6 = ToolKitIndexingRequest.__allocating_init(reasons:)(v5);
  sub_1B3CBA40C(a1, (void (*)(void))type metadata accessor for ToolKitIndexingReason);
  return v6;
}

id ToolKitIndexingRequest.__allocating_init(reasons:)(uint64_t a1)
{
  uint64_t v3 = sub_1B3D71E58();
  uint64_t v4 = OUTLINED_FUNCTION_7_3(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_37_2();
  uint64_t v5 = sub_1B3D71EA8();
  uint64_t v6 = OUTLINED_FUNCTION_7_3(v5);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B3D71E98();
  sub_1B3D71E48();
  uint64_t v11 = 0;
  __int16 v12 = 256;
  id v9 = objc_allocWithZone((Class)type metadata accessor for ToolKitIndexingRequest(0));
  return sub_1B3CB7864(a1, (uint64_t)v8, v1, 0, &v11);
}

id ToolKitIndexingRequest.__allocating_init(reasons:testingConfig:)()
{
  uint64_t v1 = sub_1B3D71E58();
  uint64_t v2 = OUTLINED_FUNCTION_7_3(v1);
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = OUTLINED_FUNCTION_36_2();
  uint64_t v4 = OUTLINED_FUNCTION_7_3(v3);
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16();
  sub_1B3D71E98();
  sub_1B3D71E48();
  id v5 = objc_allocWithZone((Class)type metadata accessor for ToolKitIndexingRequest(0));
  uint64_t v6 = OUTLINED_FUNCTION_42_0();
  return sub_1B3CB7864(v6, v7, v0, 0, v8);
}

id sub_1B3CB7864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v23 = a4;
  uint64_t v24 = a3;
  uint64_t v25 = a2;
  uint64_t v22 = a1;
  uint64_t v7 = sub_1B3D71E58();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1B3D71EA8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a5;
  char v16 = *((unsigned char *)a5 + 8);
  LOBYTE(a5) = *((unsigned char *)a5 + 9);
  unint64_t v17 = v5;
  sub_1B3D71E98();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[OBJC_IVAR___WFToolKitIndexingRequest_id], v14, v11);
  sub_1B3D71E48();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[OBJC_IVAR___WFToolKitIndexingRequest_timestamp], v10, v7);
  *(void *)&v17[OBJC_IVAR___WFToolKitIndexingRequest_reasons] = v22;
  *(void *)&v17[OBJC_IVAR___WFToolKitIndexingRequest_retryCount] = v23;
  unint64_t v18 = &v17[OBJC_IVAR___WFToolKitIndexingRequest_testingConfig];
  *(void *)unint64_t v18 = v15;
  v18[8] = v16;
  v18[9] = (char)a5;

  uint64_t v19 = (objc_class *)type metadata accessor for ToolKitIndexingRequest(0);
  v26.receiver = v17;
  v26.super_class = v19;
  id v20 = objc_msgSendSuper2(&v26, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v7);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v25, v11);
  return v20;
}

id sub_1B3CB7AAC(uint64_t a1)
{
  uint64_t v5 = sub_1B3D71E58();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v3, v1 + OBJC_IVAR___WFToolKitIndexingRequest_id);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, v1 + OBJC_IVAR___WFToolKitIndexingRequest_timestamp, v5);
  OUTLINED_FUNCTION_34_1((uint64_t *)(v1 + OBJC_IVAR___WFToolKitIndexingRequest_testingConfig));
  id v11 = objc_allocWithZone((Class)type metadata accessor for ToolKitIndexingRequest(0));
  uint64_t v12 = sub_1B3D72278();
  return sub_1B3CB7864(v12, v3, v2, a1, &v14);
}

uint64_t sub_1B3CB7BFC(uint64_t a1)
{
  return sub_1B3C97748(a1, MEMORY[0x1E4F26D58], MEMORY[0x1E4F26D50], &qword_1E9CE1C40);
}

uint64_t sub_1B3CB7C30(uint64_t a1)
{
  return sub_1B3C97748(a1, MEMORY[0x1E4F26CC8], MEMORY[0x1E4F26CC0], &qword_1E9CE35D8);
}

void sub_1B3CB7C64(void *a1)
{
  if (qword_1E9CE1C48 != -1) {
    swift_once();
  }
  type metadata accessor for ToolKitIndexingRequest(0);
  sub_1B3CBA5DC((uint64_t)&qword_1E9CE1C50);
  uint64_t v2 = sub_1B3D71BC8();
  unint64_t v4 = v3;
  uint64_t v5 = (void *)sub_1B3D71DB8();
  uint64_t v6 = (void *)sub_1B3D72378();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  sub_1B3C7532C(v2, v4);
  OUTLINED_FUNCTION_69();
}

id ToolKitIndexingRequest.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ToolKitIndexingRequest.init(coder:)(a1);
}

id ToolKitIndexingRequest.init(coder:)(void *a1)
{
  swift_getObjectType();
  sub_1B3CBAD28();
  id v3 = v1;
  uint64_t v4 = sub_1B3D72808();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    if (qword_1E9CE20C0 != -1) {
      swift_once();
    }
    id v6 = v5;
    uint64_t v7 = sub_1B3D71DF8();
    unint64_t v9 = v8;

    sub_1B3CBA5DC((uint64_t)&qword_1E9CE2DC0);
    sub_1B3D71B98();

    sub_1B3C7532C(v7, v9);
    uint64_t v10 = v18;
    sub_1B3D71EA8();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_59();
    v11();
    sub_1B3D71E58();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_59();
    v12();
    *(void *)&v3[OBJC_IVAR___WFToolKitIndexingRequest_reasons] = *(void *)&v18[OBJC_IVAR___WFToolKitIndexingRequest_reasons];
    *(void *)&v3[OBJC_IVAR___WFToolKitIndexingRequest_retryCount] = *(void *)&v10[OBJC_IVAR___WFToolKitIndexingRequest_retryCount];
    uint64_t v13 = *(void *)&v10[OBJC_IVAR___WFToolKitIndexingRequest_testingConfig];
    LOBYTE(v6) = v10[OBJC_IVAR___WFToolKitIndexingRequest_testingConfig + 8];
    LOBYTE(v7) = v10[OBJC_IVAR___WFToolKitIndexingRequest_testingConfig + 9];
    sub_1B3D72278();

    uint64_t v14 = &v3[OBJC_IVAR___WFToolKitIndexingRequest_testingConfig];
    *(void *)uint64_t v14 = v13;
    v14[8] = (char)v6;
    v14[9] = v7;

    v17.receiver = v3;
    v17.super_class = (Class)type metadata accessor for ToolKitIndexingRequest(0);
    id v15 = objc_msgSendSuper2(&v17, sel_init);
  }
  else
  {

    type metadata accessor for ToolKitIndexingRequest(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v15;
}

unint64_t sub_1B3CB81A0()
{
  OUTLINED_FUNCTION_31_2();
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  sub_1B3D71EA8();
  sub_1B3CBA5DC((uint64_t)&qword_1E9CE18C0);
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  uint64_t v0 = type metadata accessor for ToolKitIndexingReason(0);
  uint64_t v1 = sub_1B3D72278();
  MEMORY[0x1B3EC3FA0](v1, v0);
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  return 0xD00000000000001CLL;
}

id ToolKitIndexingRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ToolKitIndexingRequest.init()()
{
}

uint64_t sub_1B3CB835C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
    if (v6 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x736E6F73616572 && a2 == 0xE700000000000000;
      if (v7 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x756F437972746572 && a2 == 0xEA0000000000746ELL;
        if (v8 || (sub_1B3D72E58() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x43676E6974736574 && a2 == 0xED00006769666E6FLL)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_1B3D72E58();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1B3CB855C()
{
  return 5;
}

uint64_t sub_1B3CB8564(char a1)
{
  return qword_1B3D86FE8[a1];
}

uint64_t sub_1B3CB8584()
{
  return sub_1B3CB8564(*v0);
}

uint64_t sub_1B3CB858C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CB835C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CB85B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3CB855C();
  *a1 = result;
  return result;
}

uint64_t sub_1B3CB85DC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAD68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CB8618(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBAD68();
  return MEMORY[0x1F41862B0](a1, v2);
}

id ToolKitIndexingRequest.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToolKitIndexingRequest(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B3CB8738(void *a1)
{
  uint64_t v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1EA0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CBAD68();
  OUTLINED_FUNCTION_50_0();
  sub_1B3D71EA8();
  sub_1B3CBA5DC((uint64_t)&qword_1E9CE1948);
  OUTLINED_FUNCTION_30_2();
  if (!v2)
  {
    sub_1B3D71E58();
    sub_1B3CBA5DC((uint64_t)&unk_1E9CE1940);
    OUTLINED_FUNCTION_30_2();
    OUTLINED_FUNCTION_79();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1C98);
    sub_1B3CBADB4((uint64_t)&unk_1E9CE1CA0);
    OUTLINED_FUNCTION_35_2();
    sub_1B3D72C08();
    OUTLINED_FUNCTION_34_1((uint64_t *)(v3 + OBJC_IVAR___WFToolKitIndexingRequest_testingConfig));
    sub_1B3CBAE30();
    sub_1B3D72BC8();
  }
  OUTLINED_FUNCTION_51_0();
  return v6();
}

void ToolKitIndexingRequest.__allocating_init(from:)()
{
  id v1 = objc_allocWithZone(v0);
  ToolKitIndexingRequest.init(from:)();
}

void ToolKitIndexingRequest.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v4 = v3;
  uint64_t v5 = sub_1B3D71E58();
  OUTLINED_FUNCTION_0();
  uint64_t v20 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_16();
  sub_1B3D71EA8();
  OUTLINED_FUNCTION_0();
  uint64_t v19 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_23(v10, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE37F8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_15();
  uint64_t v21 = (uint64_t)v4;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1B3CBAD68();
  uint64_t v12 = v0;
  sub_1B3D73158();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v21);

    type metadata accessor for ToolKitIndexingRequest(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v23) = 0;
    sub_1B3CBA5DC((uint64_t)&qword_1E9CE1950);
    sub_1B3D72B68();
    (*(void (**)(void))(v19 + 32))();
    LOBYTE(v23) = 1;
    sub_1B3CBA5DC((uint64_t)&unk_1E9CE3800);
    sub_1B3D72B68();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(&v12[OBJC_IVAR___WFToolKitIndexingRequest_timestamp], v2, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1C98);
    OUTLINED_FUNCTION_79();
    sub_1B3CBADB4((uint64_t)&unk_1E9CE3808);
    sub_1B3D72B68();
    *(void *)&v12[OBJC_IVAR___WFToolKitIndexingRequest_reasons] = v23;
    LOBYTE(v23) = 3;
    *(void *)&v12[OBJC_IVAR___WFToolKitIndexingRequest_retryCount] = sub_1B3D72B58();
    sub_1B3CBAE7C();
    sub_1B3D72B18();
    char v13 = v24;
    char v14 = v25;
    id v15 = &v12[OBJC_IVAR___WFToolKitIndexingRequest_testingConfig];
    *(void *)id v15 = v23;
    v15[8] = v13;
    v15[9] = v14;

    v22.receiver = v12;
    v22.super_class = (Class)type metadata accessor for ToolKitIndexingRequest(0);
    objc_msgSendSuper2(&v22, sel_init);
    uint64_t v16 = OUTLINED_FUNCTION_19_4();
    v17(v16);
    __swift_destroy_boxed_opaque_existential_1(v21);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1B3CB8F08(void *a1@<X8>)
{
  ToolKitIndexingRequest.__allocating_init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1B3CB8F34(void *a1)
{
  return sub_1B3CB8738(a1);
}

uint64_t sub_1B3CB8F58()
{
  return ToolKitIndexingRequest.id.getter();
}

unint64_t ToolKitIndexingRetryMeKey.getter()
{
  return 0xD000000000000016;
}

uint64_t ToolKitTestingRetryingError.errorUserInfo.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3820);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B3D80E20;
  *(void *)(inited + 32) = 0xD000000000000016;
  *(void *)(inited + 40) = 0x80000001B3D8A0C0;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = 1;
  return sub_1B3D72248();
}

uint64_t ToolKitTestingRetryingError.hash(into:)()
{
  return sub_1B3D73118();
}

uint64_t ToolKitTestingRetryingError.hashValue.getter()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CB9088()
{
  return ToolKitTestingRetryingError.hashValue.getter();
}

uint64_t sub_1B3CB90A0()
{
  return ToolKitTestingRetryingError.hash(into:)();
}

uint64_t sub_1B3CB90BC()
{
  return ToolKitTestingRetryingError.errorUserInfo.getter();
}

uint64_t sub_1B3CB90D4(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBE520();
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1B3CB9110(uint64_t a1)
{
  unint64_t v2 = sub_1B3CBE520();
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1B3CB914C(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = sub_1B3D72278();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    char v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    sub_1B3D72278();
    sub_1B3CB9770(v15, v16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_21;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_21;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_1B3CB92F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v39 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v37 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v38 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    sub_1B3D72278();
    int64_t v9 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v9 << 6);
    while (1)
    {
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1B3D73108();
      sub_1B3D72278();
      sub_1B3D723E8();
      uint64_t v19 = sub_1B3D73138();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_37:
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v12 >= v38) {
        goto LABEL_48;
      }
      unint64_t v13 = *(void *)(v39 + 8 * v12);
      int64_t v14 = v9 + 1;
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v38) {
          goto LABEL_48;
        }
        unint64_t v13 = *(void *)(v39 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v38) {
            goto LABEL_48;
          }
          unint64_t v13 = *(void *)(v39 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v38) {
              goto LABEL_48;
            }
            unint64_t v13 = *(void *)(v39 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v9 + 5;
              if (v9 + 5 >= v38)
              {
LABEL_48:
                sub_1B3CBE56C();
                return v2;
              }
              unint64_t v13 = *(void *)(v39 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v14 >= v38) {
                    goto LABEL_48;
                  }
                  unint64_t v13 = *(void *)(v39 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_22;
                  }
                }
LABEL_50:
                __break(1u);
              }
              int64_t v14 = v9 + 5;
            }
          }
        }
      }
LABEL_22:
      unint64_t v7 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      int64_t v9 = v14;
    }
    uint64_t v22 = *(void *)(v2 + 48);
    uint64_t v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1B3D72E58() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v40 = a1;
      uint64_t v41 = v39;
      uint64_t v42 = v37;
      int64_t v43 = v9;
      unint64_t v44 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_37;
        }
        objc_super v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1B3D72E58() & 1) == 0);
      uint64_t v40 = a1;
      uint64_t v41 = v39;
      uint64_t v42 = v37;
      int64_t v43 = v9;
      unint64_t v44 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x1F4188790](isStackAllocationSafe);
      memcpy((char *)&v37 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      sub_1B3CB9900((unint64_t *)((char *)&v37 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v40);
      uint64_t v33 = v32;
      swift_release();
      sub_1B3CBE56C();
    }
    else
    {
      uint64_t v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v31);
      sub_1B3CB9900((unint64_t *)v34, v30, v2, v21, &v40);
      uint64_t v33 = v35;
      swift_release();
      sub_1B3CBE56C();
      MEMORY[0x1B3EC61A0](v34, -1, -1);
    }
    return v33;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_1B3CB9770(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1B3D73108();
  sub_1B3D72278();
  sub_1B3D723E8();
  uint64_t v6 = sub_1B3D73138();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1B3D72E58() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1B3D72E58() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B3CC59A0();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1B3CB9BDC(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1B3CB9900(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v39 = a3 + 56;
  while (2)
  {
    uint64_t v37 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          int64_t v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_46;
          }
          int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
          int64_t v15 = a5[3];
          if (v13 >= v14) {
            goto LABEL_44;
          }
          uint64_t v16 = a5[1];
          unint64_t v17 = *(void *)(v16 + 8 * v13);
          if (!v17)
          {
            int64_t v15 = v9 + 1;
            if (v9 + 2 >= v14) {
              goto LABEL_44;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              int64_t v13 = v9 + 2;
            }
            else
            {
              int64_t v15 = v9 + 2;
              if (v9 + 3 >= v14) {
                goto LABEL_44;
              }
              unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                int64_t v13 = v9 + 3;
              }
              else
              {
                int64_t v13 = v9 + 4;
                int64_t v15 = v9 + 3;
                if (v9 + 4 >= v14) {
                  goto LABEL_44;
                }
                unint64_t v17 = *(void *)(v16 + 8 * v13);
                if (!v17)
                {
                  int64_t v18 = v9 + 5;
                  while (v18 < v14)
                  {
                    unint64_t v17 = *(void *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      int64_t v13 = v18 - 1;
                      goto LABEL_20;
                    }
                  }
                  int64_t v15 = v14 - 1;
LABEL_44:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  sub_1B3CC5060(a1, a2, v37, a3);
                  return;
                }
              }
            }
          }
LABEL_20:
          uint64_t v11 = (v17 - 1) & v17;
          unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
          int64_t v9 = v13;
        }
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1B3D73108();
        sub_1B3D72278();
        sub_1B3D723E8();
        uint64_t v22 = sub_1B3D73138();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v39 + 8 * (v24 >> 6))) != 0) {
          break;
        }
LABEL_38:
        swift_bridgeObjectRelease();
      }
      uint64_t v27 = *(void *)(a3 + 48);
      int64_t v28 = (void *)(v27 + 16 * v24);
      BOOL v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_1B3D72E58() & 1) == 0)
      {
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          uint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1B3D72E58() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_28;
          }
        }
        goto LABEL_38;
      }
      swift_bridgeObjectRelease();
LABEL_28:
      unint64_t v30 = a1[v25];
      a1[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_46:
      __break(1u);
      return;
    }
    if (v37 != 1) {
      continue;
    }
    break;
  }
}

unint64_t sub_1B3CB9BDC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1B3D728C8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1B3D73108();
        sub_1B3D72278();
        sub_1B3D723E8();
        uint64_t v10 = sub_1B3D73138();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            uint64_t v14 = *(void *)(v3 + 48);
            int64_t v15 = (_OWORD *)(v14 + 16 * v2);
            uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
            BOOL v17 = v2 != v6 || v15 >= v16 + 1;
            int64_t v2 = v6;
            if (v17)
            {
              _OWORD *v15 = *v16;
              int64_t v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1B3CB9D98(long long *a1, uint64_t a2)
{
  uint64_t v38 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (uint64_t)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  unint64_t v12 = (char *)v35 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v35 - v13;
  uint64_t v15 = *((void *)a1 + 8);
  long long v16 = a1[1];
  long long v43 = *a1;
  long long v44 = v16;
  long long v17 = a1[2];
  long long v18 = a1[3];
  v35[1] = a1;
  long long v45 = v17;
  long long v46 = v18;
  uint64_t v47 = v15;
  uint64_t v42 = sub_1B3D73138();
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v40 = a2 + 56;
  uint64_t v20 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v39 = (unint64_t)(v20 + 63) >> 6;
  sub_1B3D72278();
  uint64_t v23 = 0;
  int64_t v24 = 0;
  uint64_t v41 = a2;
  uint64_t v36 = v6;
  if (!v22) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  for (unint64_t i = v25 | (v24 << 6); ; unint64_t i = __clz(__rbit64(v28)) + (v24 << 6))
  {
    sub_1B3CBAA54(*(void *)(a2 + 48) + *(void *)(v6 + 72) * i, (uint64_t)v14);
    sub_1B3CBA620((uint64_t)v14, (uint64_t)v12);
    sub_1B3D73108();
    sub_1B3CBAA54((uint64_t)v12, (uint64_t)v9);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1B3D73118();
        sub_1B3D72278();
        sub_1B3C947CC();
        a2 = v41;
        swift_bridgeObjectRelease_n();
        break;
      case 2u:
      case 3u:
        sub_1B3D73118();
        break;
      default:
        uint64_t v30 = v5;
        uint64_t v31 = v37;
        sub_1B3CBA620((uint64_t)v9, v37);
        sub_1B3D73118();
        sub_1B3D71EA8();
        sub_1B3CBA5DC((uint64_t)&qword_1EB4FA658);
        a2 = v41;
        sub_1B3D72318();
        type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
        sub_1B3D73118();
        sub_1B3D72278();
        sub_1B3C94618();
        swift_bridgeObjectRelease();
        uint64_t v32 = v31;
        uint64_t v5 = v30;
        uint64_t v6 = v36;
        sub_1B3CBA40C(v32, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
        break;
    }
    uint64_t v33 = sub_1B3D73138();
    sub_1B3CBA40C((uint64_t)v12, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    v23 ^= v33;
    if (v22) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v24++, 1)) {
      goto LABEL_23;
    }
    if (v24 >= v39) {
      break;
    }
    unint64_t v28 = *(void *)(v40 + 8 * v24);
    if (!v28)
    {
      int64_t v29 = v24 + 1;
      if (v24 + 1 >= v39) {
        break;
      }
      unint64_t v28 = *(void *)(v40 + 8 * v29);
      if (!v28)
      {
        while (1)
        {
          int64_t v24 = v29 + 1;
          if (__OFADD__(v29, 1)) {
            break;
          }
          if (v24 >= v39) {
            goto LABEL_21;
          }
          unint64_t v28 = *(void *)(v40 + 8 * v24);
          ++v29;
          if (v28) {
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CBA240);
      }
      ++v24;
    }
LABEL_14:
    unint64_t v22 = (v28 - 1) & v28;
  }
LABEL_21:
  swift_release();
  return sub_1B3D73118();
}

uint64_t sub_1B3CBA250(uint64_t a1, uint64_t a2)
{
  sub_1B3D73138();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = sub_1B3D72278();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  for (v6 &= v6 - 1; ; uint64_t v6 = (v12 - 1) & v12)
  {
    sub_1B3D73108();
    sub_1B3D72278();
    sub_1B3D723E8();
    uint64_t v14 = sub_1B3D73138();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v14;
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1B3D73118();
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    if (!v12) {
      break;
    }
LABEL_14:
    ;
  }
  int64_t v13 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    ++v10;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE1B10);
}

uint64_t sub_1B3CBA40C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_32();
  v3();
  return a1;
}

unint64_t sub_1B3CBA460()
{
  unint64_t result = qword_1E9CE1AA0;
  if (!qword_1E9CE1AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AA0);
  }
  return result;
}

unint64_t sub_1B3CBA4AC()
{
  unint64_t result = qword_1E9CE36C8;
  if (!qword_1E9CE36C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE36C8);
  }
  return result;
}

unint64_t sub_1B3CBA4F8()
{
  unint64_t result = qword_1E9CE36D0;
  if (!qword_1E9CE36D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE36D0);
  }
  return result;
}

unint64_t sub_1B3CBA544()
{
  unint64_t result = qword_1E9CE36D8;
  if (!qword_1E9CE36D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE36D8);
  }
  return result;
}

unint64_t sub_1B3CBA590()
{
  unint64_t result = qword_1E9CE1AE8;
  if (!qword_1E9CE1AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AE8);
  }
  return result;
}

unint64_t sub_1B3CBA5DC(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_64(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1B3CBA620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_40_1();
  v5(v4);
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a2, v2);
  return a2;
}

unint64_t sub_1B3CBA67C(unint64_t result)
{
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1B3CBA6CC()
{
  unint64_t result = qword_1E9CE1B70;
  if (!qword_1E9CE1B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B70);
  }
  return result;
}

unint64_t sub_1B3CBA718()
{
  unint64_t result = qword_1E9CE1B78;
  if (!qword_1E9CE1B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B78);
  }
  return result;
}

unint64_t sub_1B3CBA764()
{
  unint64_t result = qword_1E9CE1A80;
  if (!qword_1E9CE1A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A80);
  }
  return result;
}

unint64_t sub_1B3CBA7B0()
{
  unint64_t result = qword_1E9CE36F8;
  if (!qword_1E9CE36F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE36F8);
  }
  return result;
}

unint64_t sub_1B3CBA7FC()
{
  unint64_t result = qword_1E9CE1B50;
  if (!qword_1E9CE1B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B50);
  }
  return result;
}

unint64_t sub_1B3CBA848()
{
  unint64_t result = qword_1E9CE1B20;
  if (!qword_1E9CE1B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B20);
  }
  return result;
}

unint64_t sub_1B3CBA894(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_64(a1);
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1E9CE1CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void sub_1B3CBA8F4(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_64(a1))
  {
    uint64_t v3 = v2;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE1CE8);
    sub_1B3CBA5DC(v3);
    atomic_store(OUTLINED_FUNCTION_74(), v1);
  }
  OUTLINED_FUNCTION_69();
}

unint64_t sub_1B3CBA970()
{
  unint64_t result = qword_1E9CE1970;
  if (!qword_1E9CE1970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1970);
  }
  return result;
}

unint64_t sub_1B3CBA9BC()
{
  unint64_t result = qword_1E9CE1A70;
  if (!qword_1E9CE1A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A70);
  }
  return result;
}

unint64_t sub_1B3CBAA08()
{
  unint64_t result = qword_1E9CE3738;
  if (!qword_1E9CE3738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3738);
  }
  return result;
}

uint64_t sub_1B3CBAA54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_40_1();
  v4(v3);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_59();
  v5();
  return a2;
}

unint64_t sub_1B3CBAAA8()
{
  unint64_t result = qword_1E9CE3758;
  if (!qword_1E9CE3758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3758);
  }
  return result;
}

unint64_t sub_1B3CBAAF4()
{
  unint64_t result = qword_1E9CE3760;
  if (!qword_1E9CE3760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3760);
  }
  return result;
}

unint64_t sub_1B3CBAB40()
{
  unint64_t result = qword_1E9CE3768;
  if (!qword_1E9CE3768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3768);
  }
  return result;
}

unint64_t sub_1B3CBAB8C()
{
  unint64_t result = qword_1E9CE3798;
  if (!qword_1E9CE3798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3798);
  }
  return result;
}

unint64_t sub_1B3CBABD8()
{
  unint64_t result = qword_1E9CE37A0;
  if (!qword_1E9CE37A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE37A0);
  }
  return result;
}

unint64_t sub_1B3CBAC24()
{
  unint64_t result = qword_1E9CE37C0;
  if (!qword_1E9CE37C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE37C0);
  }
  return result;
}

unint64_t sub_1B3CBAC70()
{
  unint64_t result = qword_1E9CE37C8;
  if (!qword_1E9CE37C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE37C8);
  }
  return result;
}

unint64_t sub_1B3CBACBC()
{
  unint64_t result = qword_1E9CE37D8;
  if (!qword_1E9CE37D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE37D8);
  }
  return result;
}

uint64_t type metadata accessor for ToolKitIndexingRequest(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, qword_1E9CE18E0);
}

unint64_t sub_1B3CBAD28()
{
  unint64_t result = qword_1E9CE37F0;
  if (!qword_1E9CE37F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E9CE37F0);
  }
  return result;
}

unint64_t sub_1B3CBAD68()
{
  unint64_t result = qword_1E9CE1C28;
  if (!qword_1E9CE1C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1C28);
  }
  return result;
}

void sub_1B3CBADB4(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_64(a1))
  {
    uint64_t v3 = v2;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE1C98);
    sub_1B3CBA5DC(v3);
    atomic_store(OUTLINED_FUNCTION_74(), v1);
  }
  OUTLINED_FUNCTION_69();
}

unint64_t sub_1B3CBAE30()
{
  unint64_t result = qword_1E9CE1FB0[0];
  if (!qword_1E9CE1FB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9CE1FB0);
  }
  return result;
}

unint64_t sub_1B3CBAE7C()
{
  unint64_t result = qword_1E9CE3818;
  if (!qword_1E9CE3818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3818);
  }
  return result;
}

unint64_t sub_1B3CBAECC()
{
  unint64_t result = qword_1E9CE3828;
  if (!qword_1E9CE3828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3828);
  }
  return result;
}

unint64_t sub_1B3CBAF18()
{
  return sub_1B3CBA5DC((uint64_t)&unk_1E9CE1B00);
}

unint64_t sub_1B3CBAF64()
{
  unint64_t result = qword_1E9CE3838;
  if (!qword_1E9CE3838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3838);
  }
  return result;
}

unint64_t sub_1B3CBAFB0()
{
  return sub_1B3CBA5DC((uint64_t)&unk_1E9CE3840);
}

unint64_t sub_1B3CBAFF8()
{
  return sub_1B3CBA5DC((uint64_t)&qword_1EB4FA658);
}

unint64_t sub_1B3CBB044()
{
  unint64_t result = qword_1E9CE3848;
  if (!qword_1E9CE3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3848);
  }
  return result;
}

unint64_t sub_1B3CBB094()
{
  unint64_t result = qword_1E9CE3850;
  if (!qword_1E9CE3850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3850);
  }
  return result;
}

unint64_t sub_1B3CBB0E4()
{
  unint64_t result = qword_1E9CE3858;
  if (!qword_1E9CE3858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3858);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ToolKitIndexingReason(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B3D71EA8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (void *)((char *)a1 + v8);
    int64_t v10 = (void *)((char *)a2 + v8);
    if (*v10 >= 2uLL)
    {
      uint64_t v12 = v10[1];
      uint64_t v13 = v10[2];
      void *v9 = *v10;
      v9[1] = v12;
      id v9[2] = v13;
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
    }
    else
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      id v9[2] = v10[2];
    }
  }
  return a1;
}

unint64_t destroy for ToolKitIndexingReason(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  unint64_t result = *(void *)(a1 + *(int *)(a2 + 24));
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  if (*v9 >= 2uLL)
  {
    uint64_t v10 = v9[1];
    uint64_t v11 = v9[2];
    void *v8 = *v9;
    v8[1] = v10;
    void v8[2] = v11;
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3D72278();
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    void v8[2] = v9[2];
  }
  return a1;
}

uint64_t assignWithCopy for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (unint64_t *)(a1 + v7);
  uint64_t v9 = (long long *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7);
  if (*(void *)(a1 + v7) >= 2uLL)
  {
    if (v10 >= 2)
    {
      unint64_t *v8 = v10;
      sub_1B3D72278();
      swift_bridgeObjectRelease();
      v8[1] = *((void *)v9 + 1);
      sub_1B3D72278();
      swift_bridgeObjectRelease();
      void v8[2] = *((void *)v9 + 2);
      sub_1B3D72278();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B3CAE9AC(a1 + v7, (uint64_t *)&unk_1E9CE3860);
      unint64_t v12 = *((void *)v9 + 2);
      *(_OWORD *)uint64_t v8 = *v9;
      void v8[2] = v12;
    }
  }
  else if (v10 >= 2)
  {
    unint64_t *v8 = v10;
    v8[1] = *((void *)v9 + 1);
    void v8[2] = *((void *)v9 + 2);
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3D72278();
  }
  else
  {
    long long v11 = *v9;
    void v8[2] = *((void *)v9 + 2);
    *(_OWORD *)uint64_t v8 = v11;
  }
  return a1;
}

uint64_t initializeWithTake for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71EA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  if (*(void *)(a1 + v7) >= 2uLL)
  {
    if (*v9 >= 2uLL)
    {
      void *v8 = *v9;
      swift_bridgeObjectRelease();
      v8[1] = v9[1];
      swift_bridgeObjectRelease();
      void v8[2] = v9[2];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1B3CAE9AC(a1 + v7, (uint64_t *)&unk_1E9CE3860);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  void v8[2] = v9[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B3CBB680);
}

uint64_t sub_1B3CBB680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1B3D71EA8();
  OUTLINED_FUNCTION_3_3();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 2;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B3CBB72C);
}

void sub_1B3CBB72C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_40_1();
  sub_1B3D71EA8();
  OUTLINED_FUNCTION_3_3();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 24)) = (a2 + 1);
  }
}

uint64_t sub_1B3CBB7B0()
{
  uint64_t result = sub_1B3D71EA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason.Trigger(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5)
  {
    unsigned int v2 = a2 + 11;
    if (a2 + 11 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 11;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 11;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B3CBB900);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 11;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 9;
  if (v8 <= 9) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ToolKitIndexingReason.Trigger(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 11;
  if (a3 + 11 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v7 = ((a2 - 245) >> 8) + 1;
    char *result = a2 + 11;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1B3CBB9E8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          char *result = a2 + 11;
        break;
    }
  }
  return result;
}

uint64_t sub_1B3CBBA10(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1B3CBBA2C(unsigned char *result, int a2)
{
  if (a2) {
    char *result = a2 + 1;
  }
  return result;
}

void type metadata accessor for ToolKitIndexingReason.Trigger()
{
}

unint64_t destroy for ToolKitIndexingReason.Changeset(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19VoiceShortcutClient21ToolKitIndexingReasonV9ChangesetOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3D72278();
  }
  return a1;
}

unint64_t *assignWithCopy for ToolKitIndexingReason.Changeset(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      a1[2] = a2[2];
      sub_1B3D72278();
      sub_1B3D72278();
      sub_1B3D72278();
      return a1;
    }
LABEL_7:
    long long v6 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ToolKitIndexingReason.Changeset(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason.Changeset(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingReason.Changeset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

void *sub_1B3CBBD58(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  char *result = v2;
  return result;
}

void type metadata accessor for ToolKitIndexingReason.Changeset()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitIndexingReason.Changeset.Provenance(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      sub_1B3D72278();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = sub_1B3D71EA8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 20));
      uint64_t v10 = type metadata accessor for LaunchServicesSnapshot(0);
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
      sub_1B3D72278();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ToolKitIndexingReason.Changeset.Provenance(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_1B3D71EA8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for LaunchServicesSnapshot(0);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ToolKitIndexingReason.Changeset.Provenance(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    sub_1B3D72278();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_1B3D71EA8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
    uint64_t v9 = type metadata accessor for LaunchServicesSnapshot(0);
    *(void *)((char *)a1 + *(int *)(v9 + 20)) = *(void *)((char *)a2 + *(int *)(v9 + 20));
    sub_1B3D72278();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ToolKitIndexingReason.Changeset.Provenance(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B3CBA40C((uint64_t)a1, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      sub_1B3D72278();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_1B3D71EA8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
      uint64_t v9 = type metadata accessor for LaunchServicesSnapshot(0);
      *(void *)((char *)a1 + *(int *)(v9 + 20)) = *(void *)((char *)a2 + *(int *)(v9 + 20));
      sub_1B3D72278();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ToolKitIndexingReason.Changeset.Provenance(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1B3D71EA8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
    uint64_t v8 = type metadata accessor for LaunchServicesSnapshot(0);
    *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for ToolKitIndexingReason.Changeset.Provenance(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B3CBA40C((uint64_t)a1, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1B3D71EA8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
      uint64_t v8 = type metadata accessor for LaunchServicesSnapshot(0);
      *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B3CBC36C()
{
  uint64_t result = type metadata accessor for LaunchServicesSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1B3CBC400()
{
  return type metadata accessor for ToolKitIndexingRequest(0);
}

uint64_t sub_1B3CBC408()
{
  uint64_t result = sub_1B3D71EA8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1B3D71E58();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for ToolKitIndexingRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ToolKitIndexingRequest);
}

uint64_t dispatch thunk of ToolKitIndexingRequest.setting(retryCount:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

void type metadata accessor for ToolKitIndexingRequest.Response()
{
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingRequest.TestingConfig(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingRequest.TestingConfig(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

void type metadata accessor for ToolKitIndexingRequest.TestingConfig()
{
}

void type metadata accessor for ToolKitIndexingRequest.TestingConfig.Failure()
{
}

void type metadata accessor for ToolKitTestingRetryingError()
{
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ToolKitIndexingRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    char *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CBC7D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.CodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.TestingConfig.CodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.TestingConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.TestingConfig.Failure.CodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.TestingConfig.Failure.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.TestingConfig.Failure.RetryingErrorCodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.TestingConfig.Failure.RetryingErrorCodingKeys;
}

unsigned char *_s19VoiceShortcutClient22ToolKitIndexingRequestC8ResponseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    char *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CBC908);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.Response.CodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.Response.ReindexingFinishedCodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.Response.ReindexingFinishedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.Response.ReindexingNotNeededCodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.Response.ReindexingNotNeededCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.CodingKeys()
{
  return &type metadata for ToolKitIndexingReason.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.CodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.FullCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.FullCodingKeys;
}

unsigned char *_s19VoiceShortcutClient21ToolKitIndexingReasonV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    char *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CBCA64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.PartialCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.PartialCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.NoneCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.NoneCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ToolKitIndexingReason.Changeset.Provenance.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CBCB78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.CodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.LaunchServicesSnapshotCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.LaunchServicesSnapshotCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.AppIntentsChangeCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppIntentsChangeCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.AppProtectionChangeCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppProtectionChangeCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.CascadeSyncCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.CascadeSyncCodingKeys;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason.Trigger.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ToolKitIndexingReason.Trigger.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    char *result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CBCD44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.CodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.CodingKeys;
}

unsigned char *_s19VoiceShortcutClient27ToolKitTestingRetryingErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        char *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      char *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3CBCE18);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.ManualCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.ManualCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.FirstUnlockCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.FirstUnlockCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.SchedulerBootedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.SchedulerBootedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.ShortcutsAppLaunchedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.ShortcutsAppLaunchedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.AppProtectionStateChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.AppProtectionStateChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.AppIntentsDatabaseChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.AppIntentsDatabaseChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.LaunchServicesDatabaseChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.LaunchServicesDatabaseChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.LanguagesChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.LanguagesChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.SiriLanguagesChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.SiriLanguagesChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.DeferredFullCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.DeferredFullCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.DeferredDeltaCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.DeferredDeltaCodingKeys;
}

unint64_t sub_1B3CBCEF4()
{
  unint64_t result = qword_1E9CE3870;
  if (!qword_1E9CE3870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3870);
  }
  return result;
}

unint64_t sub_1B3CBCF44()
{
  unint64_t result = qword_1E9CE3878;
  if (!qword_1E9CE3878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3878);
  }
  return result;
}

unint64_t sub_1B3CBCF94()
{
  unint64_t result = qword_1E9CE3880;
  if (!qword_1E9CE3880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3880);
  }
  return result;
}

unint64_t sub_1B3CBCFE4()
{
  unint64_t result = qword_1E9CE3888;
  if (!qword_1E9CE3888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3888);
  }
  return result;
}

unint64_t sub_1B3CBD034()
{
  unint64_t result = qword_1E9CE3890;
  if (!qword_1E9CE3890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3890);
  }
  return result;
}

unint64_t sub_1B3CBD084()
{
  unint64_t result = qword_1E9CE3898;
  if (!qword_1E9CE3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3898);
  }
  return result;
}

unint64_t sub_1B3CBD0D4()
{
  unint64_t result = qword_1E9CE38A0;
  if (!qword_1E9CE38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38A0);
  }
  return result;
}

unint64_t sub_1B3CBD124()
{
  unint64_t result = qword_1E9CE38A8;
  if (!qword_1E9CE38A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38A8);
  }
  return result;
}

unint64_t sub_1B3CBD174()
{
  unint64_t result = qword_1E9CE38B0;
  if (!qword_1E9CE38B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38B0);
  }
  return result;
}

unint64_t sub_1B3CBD1C4()
{
  unint64_t result = qword_1E9CE38B8;
  if (!qword_1E9CE38B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38B8);
  }
  return result;
}

unint64_t sub_1B3CBD214()
{
  unint64_t result = qword_1E9CE38C0;
  if (!qword_1E9CE38C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38C0);
  }
  return result;
}

unint64_t sub_1B3CBD264()
{
  unint64_t result = qword_1E9CE38C8;
  if (!qword_1E9CE38C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38C8);
  }
  return result;
}

unint64_t sub_1B3CBD2B4()
{
  unint64_t result = qword_1E9CE38D0;
  if (!qword_1E9CE38D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38D0);
  }
  return result;
}

unint64_t sub_1B3CBD304()
{
  unint64_t result = qword_1E9CE1C38;
  if (!qword_1E9CE1C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1C38);
  }
  return result;
}

unint64_t sub_1B3CBD354()
{
  unint64_t result = qword_1E9CE1C30;
  if (!qword_1E9CE1C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1C30);
  }
  return result;
}

unint64_t sub_1B3CBD3A4()
{
  unint64_t result = qword_1E9CE38D8;
  if (!qword_1E9CE38D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38D8);
  }
  return result;
}

unint64_t sub_1B3CBD3F4()
{
  unint64_t result = qword_1E9CE38E0;
  if (!qword_1E9CE38E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38E0);
  }
  return result;
}

unint64_t sub_1B3CBD444()
{
  unint64_t result = qword_1E9CE38E8;
  if (!qword_1E9CE38E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38E8);
  }
  return result;
}

unint64_t sub_1B3CBD494()
{
  unint64_t result = qword_1E9CE38F0;
  if (!qword_1E9CE38F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38F0);
  }
  return result;
}

unint64_t sub_1B3CBD4E4()
{
  unint64_t result = qword_1E9CE38F8;
  if (!qword_1E9CE38F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE38F8);
  }
  return result;
}

unint64_t sub_1B3CBD534()
{
  unint64_t result = qword_1E9CE3900;
  if (!qword_1E9CE3900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3900);
  }
  return result;
}

unint64_t sub_1B3CBD584()
{
  unint64_t result = qword_1E9CE3908;
  if (!qword_1E9CE3908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3908);
  }
  return result;
}

unint64_t sub_1B3CBD5D4()
{
  unint64_t result = qword_1E9CE3910;
  if (!qword_1E9CE3910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3910);
  }
  return result;
}

unint64_t sub_1B3CBD624()
{
  unint64_t result = qword_1E9CE3918;
  if (!qword_1E9CE3918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3918);
  }
  return result;
}

unint64_t sub_1B3CBD674()
{
  unint64_t result = qword_1E9CE3920;
  if (!qword_1E9CE3920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3920);
  }
  return result;
}

unint64_t sub_1B3CBD6C4()
{
  unint64_t result = qword_1E9CE3928;
  if (!qword_1E9CE3928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3928);
  }
  return result;
}

unint64_t sub_1B3CBD714()
{
  unint64_t result = qword_1E9CE3930;
  if (!qword_1E9CE3930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3930);
  }
  return result;
}

unint64_t sub_1B3CBD764()
{
  unint64_t result = qword_1E9CE1988;
  if (!qword_1E9CE1988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1988);
  }
  return result;
}

unint64_t sub_1B3CBD7B4()
{
  unint64_t result = qword_1E9CE1980;
  if (!qword_1E9CE1980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1980);
  }
  return result;
}

unint64_t sub_1B3CBD804()
{
  unint64_t result = qword_1E9CE1B38;
  if (!qword_1E9CE1B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B38);
  }
  return result;
}

unint64_t sub_1B3CBD854()
{
  unint64_t result = qword_1E9CE1B30;
  if (!qword_1E9CE1B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B30);
  }
  return result;
}

unint64_t sub_1B3CBD8A4()
{
  unint64_t result = qword_1E9CE1B68;
  if (!qword_1E9CE1B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B68);
  }
  return result;
}

unint64_t sub_1B3CBD8F4()
{
  unint64_t result = qword_1E9CE1B60;
  if (!qword_1E9CE1B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B60);
  }
  return result;
}

unint64_t sub_1B3CBD944()
{
  unint64_t result = qword_1E9CE1B48;
  if (!qword_1E9CE1B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B48);
  }
  return result;
}

unint64_t sub_1B3CBD994()
{
  unint64_t result = qword_1E9CE1B40;
  if (!qword_1E9CE1B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1B40);
  }
  return result;
}

unint64_t sub_1B3CBD9E4()
{
  unint64_t result = qword_1E9CE1A98;
  if (!qword_1E9CE1A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A98);
  }
  return result;
}

unint64_t sub_1B3CBDA34()
{
  unint64_t result = qword_1E9CE1A90;
  if (!qword_1E9CE1A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A90);
  }
  return result;
}

unint64_t sub_1B3CBDA84()
{
  unint64_t result = qword_1E9CE1AF8;
  if (!qword_1E9CE1AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AF8);
  }
  return result;
}

unint64_t sub_1B3CBDAD4()
{
  unint64_t result = qword_1E9CE1AF0;
  if (!qword_1E9CE1AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AF0);
  }
  return result;
}

unint64_t sub_1B3CBDB24()
{
  unint64_t result = qword_1E9CE1AC8;
  if (!qword_1E9CE1AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AC8);
  }
  return result;
}

unint64_t sub_1B3CBDB74()
{
  unint64_t result = qword_1E9CE1AC0;
  if (!qword_1E9CE1AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AC0);
  }
  return result;
}

unint64_t sub_1B3CBDBC4()
{
  unint64_t result = qword_1E9CE1AD8;
  if (!qword_1E9CE1AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AD8);
  }
  return result;
}

unint64_t sub_1B3CBDC14()
{
  unint64_t result = qword_1E9CE1AD0;
  if (!qword_1E9CE1AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AD0);
  }
  return result;
}

unint64_t sub_1B3CBDC64()
{
  unint64_t result = qword_1E9CE3938;
  if (!qword_1E9CE3938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3938);
  }
  return result;
}

unint64_t sub_1B3CBDCB4()
{
  unint64_t result = qword_1E9CE3940;
  if (!qword_1E9CE3940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3940);
  }
  return result;
}

unint64_t sub_1B3CBDD04()
{
  unint64_t result = qword_1E9CE1AB8;
  if (!qword_1E9CE1AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AB8);
  }
  return result;
}

unint64_t sub_1B3CBDD54()
{
  unint64_t result = qword_1E9CE1AB0;
  if (!qword_1E9CE1AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1AB0);
  }
  return result;
}

unint64_t sub_1B3CBDDA4()
{
  unint64_t result = qword_1E9CE19B8;
  if (!qword_1E9CE19B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19B8);
  }
  return result;
}

unint64_t sub_1B3CBDDF4()
{
  unint64_t result = qword_1E9CE19B0;
  if (!qword_1E9CE19B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19B0);
  }
  return result;
}

unint64_t sub_1B3CBDE44()
{
  unint64_t result = qword_1E9CE19C8;
  if (!qword_1E9CE19C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19C8);
  }
  return result;
}

unint64_t sub_1B3CBDE94()
{
  unint64_t result = qword_1E9CE19C0;
  if (!qword_1E9CE19C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19C0);
  }
  return result;
}

unint64_t sub_1B3CBDEE4()
{
  unint64_t result = qword_1E9CE1A08;
  if (!qword_1E9CE1A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A08);
  }
  return result;
}

unint64_t sub_1B3CBDF34()
{
  unint64_t result = qword_1E9CE1A00;
  if (!qword_1E9CE1A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A00);
  }
  return result;
}

unint64_t sub_1B3CBDF84()
{
  unint64_t result = qword_1E9CE1A28;
  if (!qword_1E9CE1A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A28);
  }
  return result;
}

unint64_t sub_1B3CBDFD4()
{
  unint64_t result = qword_1E9CE1A20;
  if (!qword_1E9CE1A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A20);
  }
  return result;
}

unint64_t sub_1B3CBE024()
{
  unint64_t result = qword_1E9CE1A58;
  if (!qword_1E9CE1A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A58);
  }
  return result;
}

unint64_t sub_1B3CBE074()
{
  unint64_t result = qword_1E9CE1A50;
  if (!qword_1E9CE1A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A50);
  }
  return result;
}

unint64_t sub_1B3CBE0C4()
{
  unint64_t result = qword_1E9CE1A48;
  if (!qword_1E9CE1A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A48);
  }
  return result;
}

unint64_t sub_1B3CBE114()
{
  unint64_t result = qword_1E9CE1A40;
  if (!qword_1E9CE1A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A40);
  }
  return result;
}

unint64_t sub_1B3CBE164()
{
  unint64_t result = qword_1E9CE1A68;
  if (!qword_1E9CE1A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A68);
  }
  return result;
}

unint64_t sub_1B3CBE1B4()
{
  unint64_t result = qword_1E9CE1A60;
  if (!qword_1E9CE1A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A60);
  }
  return result;
}

unint64_t sub_1B3CBE204()
{
  unint64_t result = qword_1E9CE1A18;
  if (!qword_1E9CE1A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A18);
  }
  return result;
}

unint64_t sub_1B3CBE254()
{
  unint64_t result = qword_1E9CE1A10;
  if (!qword_1E9CE1A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A10);
  }
  return result;
}

unint64_t sub_1B3CBE2A4()
{
  unint64_t result = qword_1E9CE1A38;
  if (!qword_1E9CE1A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A38);
  }
  return result;
}

unint64_t sub_1B3CBE2F4()
{
  unint64_t result = qword_1E9CE1A30;
  if (!qword_1E9CE1A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE1A30);
  }
  return result;
}

unint64_t sub_1B3CBE344()
{
  unint64_t result = qword_1E9CE19D8;
  if (!qword_1E9CE19D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19D8);
  }
  return result;
}

unint64_t sub_1B3CBE394()
{
  unint64_t result = qword_1E9CE19D0;
  if (!qword_1E9CE19D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19D0);
  }
  return result;
}

unint64_t sub_1B3CBE3E4()
{
  unint64_t result = qword_1E9CE19F8;
  if (!qword_1E9CE19F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19F8);
  }
  return result;
}

unint64_t sub_1B3CBE434()
{
  unint64_t result = qword_1E9CE19F0;
  if (!qword_1E9CE19F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19F0);
  }
  return result;
}

unint64_t sub_1B3CBE484()
{
  unint64_t result = qword_1E9CE19A8;
  if (!qword_1E9CE19A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19A8);
  }
  return result;
}

unint64_t sub_1B3CBE4D4()
{
  unint64_t result = qword_1E9CE19A0;
  if (!qword_1E9CE19A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE19A0);
  }
  return result;
}

unint64_t sub_1B3CBE520()
{
  unint64_t result = qword_1E9CE3948;
  if (!qword_1E9CE3948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3948);
  }
  return result;
}

uint64_t sub_1B3CBE56C()
{
  return swift_release();
}

void OUTLINED_FUNCTION_11_6(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_18_4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  return *(void *)(v0 - 144);
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return sub_1B3D72BA8();
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return sub_1B3D72C18();
}

void OUTLINED_FUNCTION_34_1(uint64_t *a1@<X8>)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  char v4 = *((unsigned char *)a1 + 9);
  *(void *)(v1 - 80) = v2;
  *(unsigned char *)(v1 - 72) = v3;
  *(unsigned char *)(v1 - 71) = v4;
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return sub_1B3D71EA8();
}

uint64_t OUTLINED_FUNCTION_37_2()
{
  return 0;
}

void OUTLINED_FUNCTION_38_2(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_39_2(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_40_2(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_42_1(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_43_1(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return sub_1B3D72B68();
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_60()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_61()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_62()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_64(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_65()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68()
{
  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_70()
{
  return sub_1B3D72A08();
}

void OUTLINED_FUNCTION_72(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_73()
{
  return sub_1B3D72BA8();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return swift_getWitnessTable();
}

void OUTLINED_FUNCTION_76(uint64_t a1@<X8>)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_77()
{
  return sub_1B3D72AE8();
}

void OUTLINED_FUNCTION_79()
{
  *(unsigned char *)(v0 - 65) = 2;
}

uint64_t sub_1B3CBE92C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = OUTLINED_FUNCTION_26_2();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_4_0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1B3CBE9CC;
  return v8(a1, v3);
}

uint64_t sub_1B3CBE9CC()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_5();
  *char v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1B3CBEA90(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = (void *)swift_task_alloc();
  v2[5] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1B3CBEB30;
  return static LinkSnapshot.complete()();
}

uint64_t sub_1B3CBEB30()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_14_6();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v7 = sub_1B3CBEC74;
  }
  else {
    BOOL v7 = sub_1B3CBEC0C;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1B3CBEC0C()
{
  OUTLINED_FUNCTION_3();
  sub_1B3CBF2D4(*(void *)(v0 + 32), *(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_6();
  return v1();
}

uint64_t sub_1B3CBEC74()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B3CBEC8C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for LaunchServicesSnapshot(0);
  v2[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B3CBED20, 0, 0);
}

uint64_t sub_1B3CBED20()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CA8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1B3CBEDF4;
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  return MEMORY[0x1F4188080](v3, v1, v4, 0, 0, &unk_1E9CE33D8, 0, v1);
}

uint64_t sub_1B3CBEDF4()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_14_6();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v5 = v4;
  *(void *)(v6 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v7 = sub_1B3CBEF50;
  }
  else {
    BOOL v7 = sub_1B3CBEED0;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1B3CBEED0()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = v0[5];
  sub_1B3CBF474(v0[3], v0[2]);
  sub_1B3CC6F00(v1, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
  swift_task_dealloc();
  OUTLINED_FUNCTION_10_6();
  return v2();
}

uint64_t sub_1B3CBEF50()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ToolKitSeedSnapshot.diff()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  OUTLINED_FUNCTION_0_0();
  v4[6] = v7;
  uint64_t v8 = swift_task_alloc();
  v4[7] = v8;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 96) + **(int **)(a3 + 96));
  uint64_t v9 = (void *)swift_task_alloc();
  v4[8] = v9;
  void *v9 = v4;
  v9[1] = sub_1B3CBF0EC;
  return v11(v8, a2, a3);
}

uint64_t sub_1B3CBF0EC()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_14_6();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_1B3CBF268;
  }
  else {
    uint64_t v7 = sub_1B3CBF1C8;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1B3CBF1C8()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[3];
  (*(void (**)(void, uint64_t))(v0[4] + 112))(v0[5], v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_10_6();
  return v4();
}

uint64_t sub_1B3CBF268()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B3CBF2C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B3CBF2D4(*a1, *v2, a2);
}

uint64_t sub_1B3CBF2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  sub_1B3D72278();
  uint64_t v5 = sub_1B3CC0FA0(a2);
  uint64_t v6 = sub_1B3D72278();
  uint64_t v7 = sub_1B3CC0FA0(v6);
  sub_1B3D72278();
  uint64_t v8 = sub_1B3CB3704(v7, v5);
  sub_1B3D72278();
  uint64_t v9 = sub_1B3CB3704(v5, v7);
  uint64_t v10 = sub_1B3CC52CC(v7, v5);
  swift_bridgeObjectRelease();
  void v18[2] = &v19;
  v18[3] = &v20;
  uint64_t v11 = sub_1B3CC4CC4((uint64_t)sub_1B3CC6DD8, (uint64_t)v18, v10);
  uint64_t v12 = v19;
  sub_1B3D72278();
  sub_1B3D72278();
  uint64_t v13 = sub_1B3CC3180(v12, v8, (uint64_t (*)(uint64_t))sub_1B3CC3318);
  swift_bridgeObjectRelease();
  sub_1B3D72278();
  swift_retain();
  uint64_t v14 = sub_1B3CC3180(v12, v11, (uint64_t (*)(uint64_t))sub_1B3CC3318);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1B3D72278();
  uint64_t v15 = sub_1B3D72278();
  uint64_t v16 = sub_1B3CC3180(v15, v9, (uint64_t (*)(uint64_t))sub_1B3CC3318);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v12;
  a3[1] = v13;
  a3[2] = v14;
  a3[3] = v16;
  return result;
}

int *sub_1B3CBF474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v44 = a2;
  uint64_t v5 = type metadata accessor for LaunchServicesSnapshot(0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v43 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v42 = (uint64_t)&v37 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v37 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v40 = (uint64_t)&v37 - v14;
  uint64_t v16 = sub_1B3D72278();
  uint64_t v17 = sub_1B3CC0FA0(v16);
  uint64_t v41 = *(int *)(v6 + 28);
  uint64_t v18 = a1;
  uint64_t v38 = a1;
  uint64_t v19 = sub_1B3D72278();
  uint64_t v20 = sub_1B3CC0FA0(v19);
  sub_1B3D72278();
  uint64_t v21 = sub_1B3CB3704(v20, v17);
  sub_1B3D72278();
  uint64_t v39 = sub_1B3CB3704(v17, v20);
  uint64_t v22 = sub_1B3CC52CC(v20, v17);
  swift_bridgeObjectRelease();
  uint64_t v46 = v3;
  uint64_t v47 = v18;
  uint64_t v23 = sub_1B3CC4CC4((uint64_t)sub_1B3CC6D74, (uint64_t)v45, v22);
  sub_1B3CC6E44(v3, (uint64_t)v15);
  sub_1B3D72278();
  uint64_t v24 = sub_1B3D72278();
  uint64_t v25 = sub_1B3CC3180(v24, v21, (uint64_t (*)(uint64_t))sub_1B3CC3578);
  swift_bridgeObjectRelease();
  sub_1B3CC6E44(v3, (uint64_t)v13);
  swift_bridgeObjectRelease();
  *(void *)&v13[*(int *)(v6 + 28)] = v25;
  sub_1B3D72278();
  sub_1B3CC6F00((uint64_t)v13, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
  swift_retain();
  uint64_t v26 = sub_1B3D72278();
  uint64_t v27 = sub_1B3CC3180(v26, v23, (uint64_t (*)(uint64_t))sub_1B3CC3578);
  swift_bridgeObjectRelease();
  uint64_t v28 = v3;
  uint64_t v29 = v42;
  sub_1B3CC6E44(v28, v42);
  swift_release();
  *(void *)(v29 + *(int *)(v6 + 28)) = v27;
  sub_1B3D72278();
  sub_1B3CC6F00(v29, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
  uint64_t v30 = v38;
  uint64_t v31 = v39;
  sub_1B3D72278();
  uint64_t v32 = sub_1B3D72278();
  uint64_t v33 = sub_1B3CC3180(v32, v31, (uint64_t (*)(uint64_t))sub_1B3CC3578);
  swift_bridgeObjectRelease();
  uint64_t v34 = v43;
  sub_1B3CC6E44(v30, v43);
  swift_bridgeObjectRelease();
  *(void *)(v34 + *(int *)(v6 + 28)) = v33;
  sub_1B3D72278();
  sub_1B3CC6F00(v34, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
  uint64_t v35 = v44;
  sub_1B3CC6F58(v40, v44);
  uint64_t result = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2038);
  *(void *)(v35 + result[9]) = v25;
  *(void *)(v35 + result[10]) = v27;
  *(void *)(v35 + result[11]) = v33;
  return result;
}

int *ToolKitSeedSnapshot.subtracting(other:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v50 = a4;
  OUTLINED_FUNCTION_0_0();
  uint64_t v47 = v7;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_9_6(v9, v41);
  MEMORY[0x1F4188790](v10);
  uint64_t v48 = (char *)&v41 - v11;
  OUTLINED_FUNCTION_11_7();
  MEMORY[0x1F4188790](v12);
  uint64_t v46 = (char *)&v41 - v13;
  OUTLINED_FUNCTION_11_7();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  OUTLINED_FUNCTION_24_3(v15, v16, v17, v18, v19, v20, v21, v22, v41);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v23 + 72);
  uint64_t v54 = v23 + 72;
  uint64_t v52 = v24;
  v24(v25, v23);
  OUTLINED_FUNCTION_15_5();
  uint64_t v42 = a3;
  swift_getAssociatedTypeWitness();
  uint64_t v26 = sub_1B3D72278();
  swift_bridgeObjectRelease();
  uint64_t v59 = v26;
  sub_1B3D72268();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_13_4();
  uint64_t v44 = a1;
  v52(a2, a3);
  uint64_t v27 = sub_1B3D72278();
  swift_bridgeObjectRelease();
  uint64_t v59 = v27;
  OUTLINED_FUNCTION_13_4();
  sub_1B3D72278();
  OUTLINED_FUNCTION_23_5();
  sub_1B3D72668();
  sub_1B3D72278();
  uint64_t v45 = sub_1B3D72668();
  uint64_t v28 = OUTLINED_FUNCTION_23_5();
  MEMORY[0x1B3EC41B0](v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = v42;
  uint64_t v55 = a2;
  uint64_t v56 = v42;
  uint64_t v30 = v51;
  uint64_t v57 = v51;
  uint64_t v58 = a1;
  uint64_t v41 = sub_1B3D72698();
  uint64_t v31 = v47;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v53, v30, a2);
  uint64_t v32 = *(void (**)(void))(v29 + 144);
  uint64_t v33 = v46;
  OUTLINED_FUNCTION_8_8();
  v32();
  swift_bridgeObjectRelease();
  uint64_t v34 = v52;
  uint64_t v43 = ((uint64_t (*)(uint64_t, uint64_t))v52)(a2, v29);
  uint64_t v47 = *(void *)(v31 + 8);
  ((void (*)(char *, uint64_t))v47)(v33, a2);
  uint64_t v35 = v48;
  OUTLINED_FUNCTION_8_8();
  v32();
  swift_bridgeObjectRelease();
  uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))v34;
  uint64_t v51 = ((uint64_t (*)(uint64_t, uint64_t))v34)(a2, v29);
  uint64_t v37 = (void (*)(uint64_t, uint64_t))v47;
  ((void (*)(char *, uint64_t))v47)(v35, a2);
  uint64_t v38 = v49;
  OUTLINED_FUNCTION_8_8();
  v32();
  swift_bridgeObjectRelease();
  uint64_t v39 = v36(a2, v29);
  v37(v38, a2);
  return sub_1B3CC14A0(v43, v51, v39, v50);
}

uint64_t sub_1B3CBFBC4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1B3CBFBE4(*a1, *v2, a2);
}

uint64_t sub_1B3CBFBE4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v40 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v41 = (unint64_t)(v5 + 63) >> 6;
  sub_1B3D72278();
  uint64_t v42 = a1;
  sub_1B3D72278();
  int64_t v8 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v43 = (v7 - 1) & v7;
  int64_t v44 = v8;
  for (unint64_t i = __clz(__rbit64(v7)) | (v8 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v42 + 48) + 16 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (uint64_t *)(*(void *)(v42 + 56) + 32 * i);
    uint64_t v18 = v17[1];
    uint64_t v45 = *v17;
    uint64_t v20 = v17[2];
    unint64_t v19 = v17[3];
    uint64_t v21 = a2[2];
    sub_1B3D72278();
    sub_1B3C7D8EC(v20, v19);
    sub_1B3D72278();
    if (v21)
    {
      sub_1B3D72278();
      sub_1B3C93F04(v15, v16);
      char v23 = v22;
      swift_bridgeObjectRelease();
      if (v23) {
        break;
      }
    }
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = sub_1B3C93F04(v15, v16);
    if (__OFADD__(a2[2], (v25 & 1) == 0))
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      break;
    }
    unint64_t v26 = v24;
    char v27 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2050);
    if (sub_1B3D72A28())
    {
      unint64_t v28 = sub_1B3C93F04(v15, v16);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_37;
      }
      unint64_t v26 = v28;
    }
    if (v27)
    {
      uint64_t v30 = (void *)(a2[7] + 32 * v26);
      uint64_t v31 = v30[2];
      unint64_t v32 = v30[3];
      swift_bridgeObjectRelease();
      sub_1B3C7532C(v31, v32);
      void *v30 = v45;
      v30[1] = v18;
      v30[2] = v20;
      v30[3] = v19;
    }
    else
    {
      a2[(v26 >> 6) + 8] |= 1 << v26;
      uint64_t v33 = (uint64_t *)(a2[6] + 16 * v26);
      uint64_t *v33 = v15;
      v33[1] = v16;
      uint64_t v34 = (void *)(a2[7] + 32 * v26);
      void *v34 = v45;
      v34[1] = v18;
      void v34[2] = v20;
      v34[3] = v19;
      uint64_t v35 = a2[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_33;
      }
      a2[2] = v37;
      sub_1B3D72278();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v7 = v43;
    int64_t v8 = v44;
    if (v43) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_34;
    }
    if (v10 >= v41) {
      goto LABEL_31;
    }
    unint64_t v11 = *(void *)(v40 + 8 * v10);
    int64_t v12 = v8 + 1;
    if (!v11)
    {
      int64_t v12 = v8 + 2;
      if (v8 + 2 >= v41) {
        goto LABEL_31;
      }
      unint64_t v11 = *(void *)(v40 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v8 + 3;
        if (v8 + 3 >= v41) {
          goto LABEL_31;
        }
        unint64_t v11 = *(void *)(v40 + 8 * v12);
        if (!v11)
        {
          uint64_t v13 = v8 + 4;
          if (v8 + 4 >= v41)
          {
LABEL_31:
            uint64_t result = swift_release();
            *a3 = a2;
            return result;
          }
          unint64_t v11 = *(void *)(v40 + 8 * v13);
          if (!v11)
          {
            while (1)
            {
              int64_t v12 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_35;
              }
              if (v12 >= v41) {
                goto LABEL_31;
              }
              unint64_t v11 = *(void *)(v40 + 8 * v12);
              ++v13;
              if (v11) {
                goto LABEL_18;
              }
            }
          }
          int64_t v12 = v8 + 4;
        }
      }
    }
LABEL_18:
    uint64_t v43 = (v11 - 1) & v11;
    int64_t v44 = v12;
  }
  sub_1B3D72A58();
  __break(1u);
LABEL_37:
  uint64_t result = sub_1B3D73068();
  __break(1u);
  return result;
}

uint64_t sub_1B3CBFF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  if ((sub_1B3D71E68() & 1) != 0
    && (uint64_t v6 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0),
        *(void *)(a1 + *(int *)(v6 + 20)) == *(void *)(v3 + *(int *)(v6 + 20))))
  {
    uint64_t v42 = a2;
    uint64_t v41 = type metadata accessor for LaunchServicesSnapshot(0);
    uint64_t v7 = *(int *)(v41 + 20);
    int64_t v8 = *(void **)(v3 + v7);
    uint64_t v9 = *(void *)(a1 + v7);
    uint64_t v43 = v3;
    uint64_t v44 = v9 + 64;
    uint64_t v10 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v11 = -1;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    unint64_t v12 = v11 & *(void *)(v9 + 64);
    int64_t v45 = (unint64_t)(v10 + 63) >> 6;
    sub_1B3D72278();
    sub_1B3D72278();
    int64_t v13 = 0;
    if (!v12) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    int64_t v47 = v13;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v18 << 6))
    {
      uint64_t v20 = (uint64_t *)(*(void *)(v9 + 48) + 16 * i);
      uint64_t v21 = *v20;
      uint64_t v22 = v20[1];
      uint64_t v23 = *(void *)(v9 + 56) + 24 * i;
      uint64_t v48 = *(void *)v23;
      long long v49 = *(_OWORD *)(v23 + 8);
      uint64_t v24 = v8[2];
      uint64_t v25 = *(void *)(v23 + 8);
      sub_1B3D72278();
      id v46 = *((id *)&v49 + 1);
      sub_1B3D72278();
      if (v24)
      {
        sub_1B3D72278();
        sub_1B3C93F04(v21, v22);
        char v27 = v26;
        swift_bridgeObjectRelease();
        if (v27) {
          break;
        }
      }
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v28 = sub_1B3C93F04(v21, v22);
      if (__OFADD__(v8[2], (v29 & 1) == 0))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        break;
      }
      unint64_t v30 = v28;
      char v31 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D48);
      if (sub_1B3D72A28())
      {
        unint64_t v32 = sub_1B3C93F04(v21, v22);
        if ((v31 & 1) != (v33 & 1)) {
          goto LABEL_40;
        }
        unint64_t v30 = v32;
      }
      if (v31)
      {
        uint64_t v34 = v8[7] + 24 * v30;

        swift_bridgeObjectRelease();
        *(void *)uint64_t v34 = v48;
        *(void *)(v34 + 8) = v25;
        *(void *)(v34 + 16) = v46;
      }
      else
      {
        v8[(v30 >> 6) + 8] |= 1 << v30;
        uint64_t v35 = (uint64_t *)(v8[6] + 16 * v30);
        uint64_t *v35 = v21;
        v35[1] = v22;
        uint64_t v36 = v8[7] + 24 * v30;
        *(void *)uint64_t v36 = v48;
        *(_OWORD *)(v36 + 8) = v49;
        uint64_t v37 = v8[2];
        BOOL v38 = __OFADD__(v37, 1);
        uint64_t v39 = v37 + 1;
        if (v38) {
          goto LABEL_36;
        }
        void v8[2] = v39;
        sub_1B3D72278();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v13 = v47;
      if (v12) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_37;
      }
      if (v16 >= v45) {
        goto LABEL_34;
      }
      unint64_t v17 = *(void *)(v44 + 8 * v16);
      int64_t v18 = v13 + 1;
      if (!v17)
      {
        int64_t v18 = v13 + 2;
        if (v13 + 2 >= v45) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v44 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v13 + 3;
          if (v13 + 3 >= v45) {
            goto LABEL_34;
          }
          unint64_t v17 = *(void *)(v44 + 8 * v18);
          if (!v17)
          {
            uint64_t v19 = v13 + 4;
            if (v13 + 4 >= v45)
            {
LABEL_34:
              swift_release();
              uint64_t result = sub_1B3CC6E44(v43, v42);
              *(void *)(v42 + *(int *)(v41 + 20)) = v8;
              return result;
            }
            unint64_t v17 = *(void *)(v44 + 8 * v19);
            if (!v17)
            {
              while (1)
              {
                int64_t v18 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_38;
                }
                if (v18 >= v45) {
                  goto LABEL_34;
                }
                unint64_t v17 = *(void *)(v44 + 8 * v18);
                ++v19;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v18 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v12 = (v17 - 1) & v17;
      int64_t v47 = v18;
    }
    sub_1B3D72A58();
    __break(1u);
LABEL_40:
    uint64_t result = sub_1B3D73068();
    __break(1u);
  }
  else
  {
    sub_1B3CAEA90();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t ToolKitSeedSnapshot.adding(other:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v67 = a3;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_40_1();
  uint64_t v78 = sub_1B3D72848();
  OUTLINED_FUNCTION_0_0();
  uint64_t v84 = v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v77 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_11_7();
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_24_3(v10, v11, v12, v13, v14, v15, v16, v17, v63);
  OUTLINED_FUNCTION_0_0();
  uint64_t v19 = v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v68 = (char *)&v63 - v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v79 = sub_1B3D72848();
  OUTLINED_FUNCTION_0_0();
  uint64_t v75 = v22;
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  char v26 = (uint64_t *)((char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  uint64_t v80 = (char *)&v63 - v27;
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 128))(v3, a1, a2) & 1) == 0)
  {
    sub_1B3CAEA90();
    swift_allocError();
    return swift_willThrow();
  }
  unint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 72);
  uint64_t v65 = v3;
  uint64_t v87 = v28(a1, a2);
  uint64_t v66 = a2;
  uint64_t v29 = v28(a1, a2);
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v69 = v29 + 64;
  uint64_t v71 = v29;
  uint64_t v31 = 1 << *(unsigned char *)(v29 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & v30;
  uint64_t v82 = 0;
  uint64_t v83 = (void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v74 = v19 + 32;
  v75 += 32;
  uint64_t v72 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v73 = (void (**)(uint64_t, uint64_t))(v84 + 8);
  int64_t v70 = (unint64_t)(v31 + 63) >> 6;
  uint64_t v63 = v70 - 1;
  uint64_t v34 = a1;
  uint64_t v35 = v68;
  uint64_t v36 = v3;
  uint64_t v64 = v34;
  uint64_t v37 = MEMORY[0x1E4FBB1A0];
  while (1)
  {
    uint64_t v39 = v80;
    uint64_t v38 = TupleTypeMetadata2;
    if (v33)
    {
      uint64_t v84 = (v33 - 1) & v33;
      unint64_t v40 = __clz(__rbit64(v33)) | (v82 << 6);
      goto LABEL_7;
    }
    int64_t v44 = v82 + 1;
    if (__OFADD__(v82, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v44 < v70)
    {
      unint64_t v45 = *(void *)(v69 + 8 * v44);
      if (v45) {
        goto LABEL_11;
      }
      uint64_t v46 = v82 + 2;
      ++v82;
      if (v44 + 1 < v70)
      {
        unint64_t v45 = *(void *)(v69 + 8 * v46);
        if (v45)
        {
          ++v44;
          goto LABEL_11;
        }
        int64_t v47 = v44 + 2;
        uint64_t v82 = v44 + 1;
        if (v44 + 2 < v70) {
          break;
        }
      }
    }
LABEL_23:
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, TupleTypeMetadata2);
    uint64_t v84 = 0;
LABEL_24:
    OUTLINED_FUNCTION_18_5();
    v48();
    if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v38) == 1)
    {
      swift_release();
      uint64_t v60 = v66;
      uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 152);
      uint64_t v62 = sub_1B3D72278();
      v61(v62, v64, v60);
      return OUTLINED_FUNCTION_25_4();
    }
    long long v49 = v26;
    uint64_t v50 = v19;
    uint64_t v51 = v39;
    uint64_t v52 = *v39;
    uint64_t v53 = v51[1];
    OUTLINED_FUNCTION_18_5();
    v54();
    uint64_t v55 = v87;
    uint64_t v85 = v52;
    uint64_t v86 = v53;
    sub_1B3D72278();
    uint64_t v56 = v76;
    MEMORY[0x1B3EC3E20](&v85, v55, v37, v36, MEMORY[0x1E4FBB1B0]);
    swift_bridgeObjectRelease();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v56, 1, v36);
    (*v73)(v56, v78);
    if (EnumTagSinglePayload != 1) {
      goto LABEL_32;
    }
    uint64_t v58 = (uint64_t)v77;
    (*v83)(v77, v35, v36);
    __swift_storeEnumTagSinglePayload(v58, 0, 1, v36);
    uint64_t v85 = v52;
    uint64_t v86 = v53;
    sub_1B3D722D8();
    sub_1B3D722F8();
    (*v72)(v35, v36);
    uint64_t v19 = v50;
    char v26 = v49;
    unint64_t v33 = v84;
  }
  unint64_t v45 = *(void *)(v69 + 8 * v47);
  if (v45)
  {
    v44 += 2;
LABEL_11:
    uint64_t v84 = (v45 - 1) & v45;
    unint64_t v40 = __clz(__rbit64(v45)) + (v44 << 6);
    uint64_t v82 = v44;
LABEL_7:
    uint64_t v41 = *(void *)(v71 + 56);
    uint64_t v42 = (void *)(*(void *)(v71 + 48) + 16 * v40);
    uint64_t v43 = v42[1];
    *char v26 = *v42;
    v26[1] = v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))((char *)v26 + *(int *)(v38 + 48), v41 + *(void *)(v19 + 72) * v40, v36);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v38);
    sub_1B3D72278();
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v44 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v44 >= v70)
    {
      uint64_t v82 = v63;
      goto LABEL_23;
    }
    unint64_t v45 = *(void *)(v69 + 8 * v44);
    ++v47;
    if (v45) {
      goto LABEL_11;
    }
  }
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = sub_1B3D72A58();
  __break(1u);
  return result;
}

double sub_1B3CC0A0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B3CC0A14(a1, a2, *v3, a3);
}

double sub_1B3CC0A14@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!*(void *)(a3 + 16)) {
    goto LABEL_7;
  }
  sub_1B3D72278();
  sub_1B3D72278();
  unint64_t v8 = sub_1B3C93F04(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    double result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  uint64_t v10 = (void *)(*(void *)(a3 + 56) + 32 * v8);
  uint64_t v11 = v10[1];
  uint64_t v12 = v10[2];
  unint64_t v13 = v10[3];
  *(void *)a4 = *v10;
  *(void *)(a4 + 8) = v11;
  *(void *)(a4 + 16) = v12;
  *(void *)(a4 + 24) = v13;
  sub_1B3D72278();
  sub_1B3C7D8EC(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1B3CC0AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = type metadata accessor for LaunchServicesSnapshot(0);
  uint64_t v8 = *(void *)(v3 + *(int *)(result + 20));
  if (!*(void *)(v8 + 16)) {
    goto LABEL_7;
  }
  sub_1B3D72278();
  sub_1B3D72278();
  unint64_t v9 = sub_1B3C93F04(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return result;
  }
  uint64_t v11 = (void *)(*(void *)(v8 + 56) + 24 * v9);
  uint64_t v12 = v11[1];
  unint64_t v13 = (void *)v11[2];
  *a3 = *v11;
  a3[1] = v12;
  a3[2] = v13;
  sub_1B3D72278();
  id v14 = v13;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ToolKitSeedSnapshot.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(a3, a4);
  v9[0] = a1;
  v9[1] = a2;
  OUTLINED_FUNCTION_15_5();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1B3D72278();
  MEMORY[0x1B3EC3E20](v9, v6, MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CC0C78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B3CC0C80(a1, a2);
}

uint64_t sub_1B3CC0C80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1B3D72278();
  uint64_t v4 = sub_1B3D72278();
  uint64_t v5 = sub_1B3CC3180(v4, a1, (uint64_t (*)(uint64_t))sub_1B3CC3318);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_1B3CC0CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for LaunchServicesSnapshot(0);
  sub_1B3D72278();
  uint64_t v6 = sub_1B3D72278();
  uint64_t v7 = sub_1B3CC3180(v6, a1, (uint64_t (*)(uint64_t))sub_1B3CC3578);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1B3CC6E44(v2, a2);
  *(void *)(a2 + *(int *)(v5 + 20)) = v7;
  return result;
}

uint64_t ToolKitSeedSnapshot.filtering(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_bridgeObjectRelease();
}

void sub_1B3CC0E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1B3D73108();
    sub_1B3D723E8();
    uint64_t v6 = sub_1B3D73138();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v8 = v6 & ~v7;
    OUTLINED_FUNCTION_2_5();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_1B3D72E58() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        OUTLINED_FUNCTION_2_5();
        if (v15)
        {
          do
          {
            uint64_t v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (sub_1B3D72E58()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            OUTLINED_FUNCTION_2_5();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_1B3CC0FA0(uint64_t a1)
{
  uint64_t v18 = sub_1B3D72688();
  uint64_t result = sub_1B3CC6CDC(a1, v19);
  uint64_t v3 = v19[0];
  uint64_t v4 = v19[1];
  int64_t v5 = v19[3];
  unint64_t v6 = v20;
  int64_t v7 = (unint64_t)(v19[2] + 64) >> 6;
  if (!v20) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v5 << 6);
  while (1)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    sub_1B3D72278();
    sub_1B3CC3D2C(&v17, v15, v16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v5 + 1;
    if (!v11)
    {
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_21;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_21;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_21;
            }
            unint64_t v11 = *(void *)(v4 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v5 + 6;
              while (v13 < v7)
              {
                unint64_t v11 = *(void *)(v4 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return v18;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v5 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B3CC1120(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_26_2();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_4_0(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1B3CC6FB0;
  return v6(a1);
}

uint64_t sub_1B3CC11BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B3CBFF68(a1, a2);
}

uint64_t sub_1B3CC11DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1B3CC6FB0;
  return ToolKitSeedSnapshot.diff()(a1, a2, a3);
}

uint64_t sub_1B3CC1290@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return ToolKitSeedSnapshot.adding(other:)(a1, a2, a3);
}

uint64_t ToolKitSeedSnapshotDelta.target.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ToolKitSeedSnapshotDelta.added.getter()
{
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ToolKitSeedSnapshotDelta.updated.getter()
{
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ToolKitSeedSnapshotDelta.removed.getter()
{
  return OUTLINED_FUNCTION_5_7();
}

uint64_t ToolKitSeedSnapshotDelta.isEmptySet.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  int64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *(void *)(v2 + *(int *)(v10 + 36));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  LOBYTE(v13) = MEMORY[0x1B3EC3DF0](v13, MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  uint64_t v15 = *(void (**)(void))(v5 + 16);
  OUTLINED_FUNCTION_19_5();
  v15();
  if (v13) {
    char v16 = MEMORY[0x1B3EC3DF0](*(void *)&v12[*(int *)(a1 + 40)], MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  }
  else {
    char v16 = 0;
  }
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v12, a1);
  OUTLINED_FUNCTION_19_5();
  v15();
  if (v16) {
    char v18 = MEMORY[0x1B3EC3DF0](*(void *)&v9[*(int *)(a1 + 44)], MEMORY[0x1E4FBB1A0], AssociatedTypeWitness, MEMORY[0x1E4FBB1B0]);
  }
  else {
    char v18 = 0;
  }
  v17(v9, a1);
  return v18 & 1;
}

int *sub_1B3CC14A0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  OUTLINED_FUNCTION_18_5();
  v8();
  uint64_t result = (int *)type metadata accessor for ToolKitSeedSnapshotDelta();
  *(void *)(a4 + result[9]) = a1;
  *(void *)(a4 + result[10]) = a2;
  *(void *)(a4 + result[11]) = a3;
  return result;
}

uint64_t sub_1B3CC153C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v11 = (uint64_t *)&v16[-v10];
  uint64_t v13 = *a1;
  uint64_t v12 = a1[1];
  uint64_t *v11 = v13;
  v11[1] = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(&v16[*(int *)(v9 + 48) - v10], a2, AssociatedTypeWitness);
  sub_1B3D72278();
  sub_1B3CC0E8C(v13, v12, a3);
  LOBYTE(a3) = v14;
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v11, TupleTypeMetadata2);
  return a3 & 1;
}

uint64_t ToolKitSeedSnapshotError.errorUserInfo.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3820);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B3D80E20;
  *(void *)(inited + 32) = 0xD000000000000016;
  *(void *)(inited + 40) = 0x80000001B3D8A0C0;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = 1;
  return sub_1B3D72248();
}

uint64_t static ToolKitSeedSnapshotError.== infix(_:_:)()
{
  return 1;
}

uint64_t ToolKitSeedSnapshotError.hash(into:)()
{
  return sub_1B3D73118();
}

uint64_t ToolKitSeedSnapshotError.hashValue.getter()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CC17BC()
{
  return ToolKitSeedSnapshotError.hashValue.getter();
}

uint64_t sub_1B3CC17D4()
{
  return ToolKitSeedSnapshotError.hash(into:)();
}

uint64_t sub_1B3CC17EC()
{
  return ToolKitSeedSnapshotError.errorUserInfo.getter();
}

uint64_t sub_1B3CC1804(uint64_t a1)
{
  unint64_t v2 = sub_1B3CC3118();
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1B3CC1840(uint64_t a1)
{
  unint64_t v2 = sub_1B3CC3118();
  return MEMORY[0x1F40E6E10](a1, v2);
}

BOOL sub_1B3CC187C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a3 + 16))
  {
    sub_1B3D72278();
    sub_1B3D72278();
    unint64_t v8 = sub_1B3C93F04(a1, a2);
    if (v9)
    {
      uint64_t v10 = (uint64_t *)(*(void *)(a3 + 56) + 32 * v8);
      uint64_t v11 = v10[1];
      uint64_t v24 = *v10;
      uint64_t v12 = v10[2];
      unint64_t v13 = v10[3];
      sub_1B3D72278();
      sub_1B3C7D8EC(v12, v13);
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      unint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unint64_t v13 = 0;
  }
  if (*(void *)(a4 + 16))
  {
    sub_1B3D72278();
    sub_1B3D72278();
    unint64_t v14 = sub_1B3C93F04(a1, a2);
    if (v15)
    {
      char v16 = (uint64_t *)(*(void *)(a4 + 56) + 32 * v14);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      uint64_t v19 = v16[2];
      unint64_t v20 = v16[3];
      sub_1B3D72278();
      sub_1B3C7D8EC(v19, v20);
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      unint64_t v20 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    unint64_t v20 = 0;
  }
  if (!v11)
  {
    if (!v18)
    {
      char v22 = 1;
      return (v22 & 1) == 0;
    }
LABEL_24:
    sub_1B3C94140(v24, v11, v12, v13);
    sub_1B3C94140(v17, v18, v19, v20);
    char v22 = 0;
    return (v22 & 1) == 0;
  }
  if (!v18)
  {
    sub_1B3D72278();
    sub_1B3C7D8EC(v12, v13);
    swift_bridgeObjectRelease();
    sub_1B3C7532C(v12, v13);
    goto LABEL_24;
  }
  BOOL v21 = v24 == v17 && v11 == v18;
  if (v21 || (sub_1B3D72E58() & 1) != 0)
  {
    sub_1B3CC6DF8(v24, v11, v12, v13);
    sub_1B3CC6DF8(v24, v11, v12, v13);
    sub_1B3CC6DF8(v17, v18, v19, v20);
    char v22 = MEMORY[0x1B3EC3910](v12, v13, v19, v20);
    sub_1B3C94140(v17, v18, v19, v20);
    sub_1B3C94140(v17, v18, v19, v20);
    sub_1B3C94140(v24, v11, v12, v13);
  }
  else
  {
    sub_1B3CC6DF8(v24, v11, v12, v13);
    sub_1B3C94140(v17, v18, v19, v20);
    char v22 = 0;
  }
  swift_bridgeObjectRelease();
  sub_1B3C7532C(v12, v13);
  sub_1B3C94140(v24, v11, v12, v13);
  return (v22 & 1) == 0;
}

BOOL sub_1B3CC1B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for LaunchServicesSnapshot(0);
  uint64_t v9 = *(void *)(a3 + *(int *)(v8 + 20));
  if (*(void *)(v9 + 16))
  {
    sub_1B3D72278();
    sub_1B3D72278();
    unint64_t v10 = sub_1B3C93F04(a1, a2);
    if (v11)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v9 + 56) + 24 * v10);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      char v15 = (void *)v12[2];
      sub_1B3D72278();
      id v16 = v15;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      char v15 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    char v15 = 0;
  }
  uint64_t v17 = *(void *)(a4 + *(int *)(v8 + 20));
  if (!*(void *)(v17 + 16))
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    if (v14) {
      goto LABEL_15;
    }
LABEL_11:
    if (!v22)
    {
      char v25 = 1;
      return (v25 & 1) == 0;
    }
LABEL_22:
    sub_1B3CAEC88(v13, v14, v15);
    sub_1B3CAEC88(v21, v22, v23);
    char v25 = 0;
    return (v25 & 1) == 0;
  }
  sub_1B3D72278();
  sub_1B3D72278();
  unint64_t v18 = sub_1B3C93F04(a1, a2);
  if (v19)
  {
    unint64_t v20 = (uint64_t *)(*(void *)(v17 + 56) + 24 * v18);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = (void *)v20[2];
    sub_1B3D72278();
    id v24 = v23;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_11;
  }
LABEL_15:
  if (!v22) {
    goto LABEL_22;
  }
  BOOL v26 = v13 == v21 && v14 == v22;
  if (v26 || (sub_1B3D72E58() & 1) != 0)
  {
    sub_1B3CC6D94(v13, v14, v15);
    sub_1B3CC6D94(v13, v14, v15);
    sub_1B3CC6D94(v21, v22, v23);
    id v37 = v15;
    id v36 = v23;
    uint64_t v27 = sub_1B3D71DF8();
    unint64_t v29 = v28;
    uint64_t v38 = v15;
    uint64_t v39 = v13;
    uint64_t v30 = sub_1B3D71DF8();
    unint64_t v32 = v31;
    char v25 = MEMORY[0x1B3EC3910](v27, v29, v30, v31);
    uint64_t v33 = v30;
    unint64_t v34 = v32;
    char v15 = v38;
    uint64_t v13 = v39;
    sub_1B3C7532C(v33, v34);
    sub_1B3C7532C(v27, v29);

    sub_1B3CAEC88(v21, v22, v23);
    sub_1B3CAEC88(v21, v22, v23);
    sub_1B3CAEC88(v39, v14, v38);
  }
  else
  {
    sub_1B3CC6D94(v13, v14, v15);
    sub_1B3CAEC88(v21, v22, v23);
    char v25 = 0;
  }

  swift_bridgeObjectRelease();
  sub_1B3CAEC88(v13, v14, v15);
  return (v25 & 1) == 0;
}

uint64_t sub_1B3CC1E68(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v51 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v42 = (char *)&v40 - v8;
  uint64_t v9 = sub_1B3D72848();
  uint64_t v48 = v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v46 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v53 = (char *)&v40 - v11;
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v40 - v15;
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 136);
  ((void (*)(void, uint64_t, uint64_t))v21)(*a1, v20, a4);
  uint64_t v43 = a5;
  uint64_t v44 = a4;
  v21(v19, v20, a4, a5);
  uint64_t v22 = v49;
  uint64_t v23 = AssociatedTypeWitness;
  uint64_t v24 = (uint64_t)v53;
  uint64_t v25 = (uint64_t)&v53[*(int *)(TupleTypeMetadata2 + 48)];
  BOOL v26 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t v27 = v48;
  v26(v53, v18, v48);
  uint64_t v51 = v25;
  v26((char *)v25, v16, v27);
  if (__swift_getEnumTagSinglePayload(v24, 1, v23) != 1)
  {
    unint64_t v40 = v16;
    uint64_t v41 = v18;
    uint64_t v30 = v45;
    uint64_t v31 = v27;
    v26(v45, v53, v27);
    uint64_t v32 = v51;
    if (__swift_getEnumTagSinglePayload(v51, 1, v23) != 1)
    {
      uint64_t v34 = v47;
      uint64_t v35 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v42, v32, v23);
      swift_getAssociatedConformanceWitness();
      char v36 = sub_1B3D72348();
      id v37 = *(void (**)(char *, uint64_t))(v34 + 8);
      v37(v35, v23);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v22 + 8);
      v38(v40, v31);
      v38(v41, v31);
      v37(v30, v23);
      v38(v53, v31);
      char v29 = v36 ^ 1;
      return v29 & 1;
    }
    uint64_t v33 = *(void (**)(char *, uint64_t))(v22 + 8);
    v33(v40, v27);
    v33(v41, v27);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v23);
    goto LABEL_6;
  }
  unint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
  v28(v16, v27);
  v28(v18, v27);
  if (__swift_getEnumTagSinglePayload(v51, 1, v23) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v46 + 8))(v53, TupleTypeMetadata2);
    char v29 = 1;
    return v29 & 1;
  }
  v28(v53, v27);
  char v29 = 0;
  return v29 & 1;
}

uint64_t sub_1B3CC234C(void *a1)
{
  return sub_1B3CC1E68(a1, v1[4], v1[5], v1[2], v1[3]) & 1;
}

uint64_t sub_1B3CC2370(uint64_t *a1, uint64_t a2)
{
  return sub_1B3CC153C(a1, a2, *(void *)(v2 + 32)) & 1;
}

unint64_t sub_1B3CC2398()
{
  unint64_t result = qword_1E9CE3958;
  if (!qword_1E9CE3958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3958);
  }
  return result;
}

uint64_t dispatch thunk of ToolKitSeedSnapshot.stateByContainerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of static ToolKitSeedSnapshot.empty.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of static ToolKitSeedSnapshot.partial(_:failIfContainerNotFound:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 88) + **(int **)(a5 + 88));
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_4_0(v10);
  void *v11 = v12;
  v11[1] = sub_1B3CC6FB0;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of static ToolKitSeedSnapshot.complete()()
{
  OUTLINED_FUNCTION_20_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_4_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B3CC6FB0;
  uint64_t v3 = OUTLINED_FUNCTION_12_4();
  return v4(v3);
}

uint64_t dispatch thunk of ToolKitSeedSnapshot.diff()()
{
  OUTLINED_FUNCTION_20_5();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_4_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1B3CBE9CC;
  uint64_t v3 = OUTLINED_FUNCTION_12_4();
  return v4(v3);
}

uint64_t dispatch thunk of ToolKitSeedSnapshot.subtracting(other:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of ToolKitSeedSnapshot.adding(other:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of ToolKitSeedSnapshot.isEqualInProvenance(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of ToolKitSeedSnapshot.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t dispatch thunk of ToolKitSeedSnapshot.filtering(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of ToolKitSeedSnapshot.setting(stateByContainerId:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t sub_1B3CC2790()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1B3CC2830(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v10 = *v11;
    uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v12 = *v13;
    *(void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3D72278();
  }
  return v4;
}

uint64_t sub_1B3CC296C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CC29F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  sub_1B3D72278();
  sub_1B3D72278();
  sub_1B3D72278();
  return a1;
}

uint64_t sub_1B3CC2AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  void *v7 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  void *v10 = *(void *)v9;
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B3CC2B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  unint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1B3CC2C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1B3CC2CC0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1B3CC2E0CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1B3CC2E20(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1B3CC3004);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = (a2 - 1);
          }
          void *v17 = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ToolKitSeedSnapshotDelta()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for ToolKitSeedSnapshotError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        int *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      int *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3CC30E0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolKitSeedSnapshotError()
{
  return &type metadata for ToolKitSeedSnapshotError;
}

unint64_t sub_1B3CC3118()
{
  unint64_t result = qword_1E9CE3980;
  if (!qword_1E9CE3980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3980);
  }
  return result;
}

uint64_t sub_1B3CC3164(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_1B3CC3180(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = v3;
  v15[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    sub_1B3CC3164(0, v8, (void *)((char *)v15 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0)));
    sub_1B3D72278();
    uint64_t v10 = OUTLINED_FUNCTION_10_7();
    uint64_t v11 = a3(v10);
    if (v3) {
      swift_willThrow();
    }
    else {
      uint64_t v5 = v11;
    }
    OUTLINED_FUNCTION_25_4();
  }
  else
  {
    unsigned int v12 = (void *)swift_slowAlloc();
    sub_1B3CC3164(0, v8, v12);
    sub_1B3D72278();
    uint64_t v13 = OUTLINED_FUNCTION_10_7();
    uint64_t v5 = a3(v13);
    MEMORY[0x1B3EC61A0](v12, -1, -1);
    OUTLINED_FUNCTION_25_4();
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1B3CC3318(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = (unint64_t *)result;
  uint64_t v26 = 0;
  int64_t v5 = 0;
  uint64_t v27 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v28 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v28) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    ++v5;
    if (!v12)
    {
      int64_t v5 = v11 + 1;
      if (v11 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v5);
      if (!v12)
      {
        int64_t v5 = v11 + 2;
        if (v11 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v5);
        if (!v12) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
LABEL_20:
    int v14 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v10);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = *(void *)(a3 + 56) + 32 * v10;
    uint64_t v18 = *(void *)(v17 + 16);
    unint64_t v19 = *(void *)(v17 + 24);
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3C7D8EC(v18, v19);
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3C7D8EC(v18, v19);
    sub_1B3CC0E8C(v16, v15, a4);
    LOBYTE(v16) = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1B3C7532C(v18, v19);
    swift_bridgeObjectRelease();
    sub_1B3C7532C(v18, v19);
    unint64_t result = swift_bridgeObjectRelease();
    if (v16)
    {
      *(unint64_t *)((char *)v25 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1B3CC37AC(v25, a2, v26, a3);
        uint64_t v23 = v22;
        swift_bridgeObjectRelease();
        return v23;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v28) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12)
  {
    int64_t v5 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1B3CC3578(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = (unint64_t *)result;
  uint64_t v25 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v27 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_20;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v27) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v6;
    if (!v13)
    {
      int64_t v6 = v12 + 1;
      if (v12 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v6);
      if (!v13)
      {
        int64_t v6 = v12 + 2;
        if (v12 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v6);
        if (!v13) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_20:
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(void **)(*(void *)(a3 + 56) + 24 * v11 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v19 = v18;
    sub_1B3CC0E8C(v16, v17, a4);
    LOBYTE(v16) = v20;

    swift_bridgeObjectRelease_n();
    unint64_t result = swift_bridgeObjectRelease_n();
    if (v16)
    {
      *(unint64_t *)((char *)v24 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_24:
        uint64_t v22 = sub_1B3CC3A64(v24, a2, v25, a3);
        swift_bridgeObjectRelease();
        return v22;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v27) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
    int64_t v6 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v27) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1B3CC37AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2058);
  uint64_t v7 = sub_1B3D72A98();
  uint64_t v8 = v7;
  uint64_t v35 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = v7 + 64;
  uint64_t v37 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v38 = v10;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_25;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v35) {
      return;
    }
    unint64_t v15 = a1[v14];
    uint64_t v16 = v10 + 1;
    if (!v15)
    {
      uint64_t v16 = v10 + 2;
      if (v10 + 2 >= v35) {
        return;
      }
      unint64_t v15 = a1[v16];
      if (!v15)
      {
        uint64_t v16 = v10 + 3;
        if (v10 + 3 >= v35) {
          return;
        }
        unint64_t v15 = a1[v16];
        if (!v15) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v9 = (v15 - 1) & v15;
    uint64_t v38 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_25:
    uint64_t v18 = *(void *)(v4 + 56);
    id v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = (uint64_t *)(v18 + 32 * v13);
    uint64_t v23 = v22[1];
    uint64_t v39 = *v22;
    uint64_t v24 = v22[2];
    unint64_t v25 = v22[3];
    sub_1B3D73108();
    sub_1B3D72278();
    sub_1B3D72278();
    sub_1B3C7D8EC(v24, v25);
    sub_1B3D723E8();
    unint64_t v26 = sub_1B3D73138() & ~(-1 << *(unsigned char *)(v8 + 32));
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_28_3();
      while (++v29 != v30 || (v28 & 1) == 0)
      {
        BOOL v31 = v29 == v30;
        if (v29 == v30) {
          uint64_t v29 = 0;
        }
        v28 |= v31;
        if (*(void *)(v11 + 8 * v29) != -1)
        {
          OUTLINED_FUNCTION_27_2();
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_17_4();
LABEL_34:
    *(void *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    uint64_t v32 = (void *)(*(void *)(v8 + 48) + 16 * v27);
    void *v32 = v20;
    v32[1] = v21;
    uint64_t v33 = (void *)(*(void *)(v8 + 56) + 32 * v27);
    void *v33 = v39;
    v33[1] = v23;
    v33[2] = v24;
    v33[3] = v25;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    uint64_t v4 = v37;
    uint64_t v10 = v38;
    if (!v5) {
      return;
    }
  }
  uint64_t v17 = v10 + 4;
  if (v10 + 4 >= v35) {
    return;
  }
  unint64_t v15 = a1[v17];
  if (v15)
  {
    uint64_t v16 = v10 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v35) {
      return;
    }
    unint64_t v15 = a1[v16];
    ++v17;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1B3CC3A64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1D60);
  uint64_t result = sub_1B3D72A98();
  uint64_t v9 = result;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v36) {
        return v9;
      }
      unint64_t v16 = v35[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v36) {
          return v9;
        }
        unint64_t v16 = v35[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v36) {
            return v9;
          }
          unint64_t v16 = v35[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v36) {
              return v9;
            }
            unint64_t v16 = v35[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v36) {
                  return v9;
                }
                unint64_t v16 = v35[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(v4 + 56) + 24 * v14;
    uint64_t v22 = *(void *)v21;
    long long v37 = *(_OWORD *)(v21 + 8);
    sub_1B3D73108();
    sub_1B3D72278();
    sub_1B3D72278();
    id v23 = *((id *)&v37 + 1);
    sub_1B3D723E8();
    uint64_t result = sub_1B3D73138();
    uint64_t v24 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) == 0) {
      break;
    }
    unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    uint64_t v32 = (void *)(*(void *)(v9 + 48) + 16 * v27);
    void *v32 = v20;
    v32[1] = v19;
    uint64_t v33 = *(void *)(v9 + 56) + 24 * v27;
    *(void *)uint64_t v33 = v22;
    *(_OWORD *)(v33 + 8) = v37;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_39;
    }
    if (!v5) {
      return v9;
    }
  }
  char v28 = 0;
  unint64_t v29 = (unint64_t)(63 - v24) >> 6;
  while (++v26 != v29 || (v28 & 1) == 0)
  {
    BOOL v30 = v26 == v29;
    if (v26 == v29) {
      unint64_t v26 = 0;
    }
    v28 |= v30;
    uint64_t v31 = *(void *)(v12 + 8 * v26);
    if (v31 != -1)
    {
      unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1B3CC3D2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1B3D73108();
  sub_1B3D72278();
  sub_1B3D723E8();
  uint64_t v8 = sub_1B3D73138();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  OUTLINED_FUNCTION_2_5();
  if (v11)
  {
    uint64_t v12 = *(void *)(v7 + 48);
    unint64_t v13 = (void *)(v12 + 16 * v10);
    BOOL v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (sub_1B3D72E58() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      sub_1B3D72278();
      return 0;
    }
    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      OUTLINED_FUNCTION_2_5();
      if ((v19 & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v12 + 16 * v10);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_1B3D72E58() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1B3D72278();
  sub_1B3CC65A8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1B3CC3EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = type metadata accessor for LaunchServicesSnapshot(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1F80);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_9_6(v14, v38);
  MEMORY[0x1F4188790](v15);
  uint64_t v45 = (uint64_t)&v38 - v16;
  OUTLINED_FUNCTION_11_7();
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v38 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v42 = (uint64_t)&v38 - v21;
  uint64_t v22 = *v3;
  sub_1B3D73108();
  sub_1B3D72278();
  uint64_t v49 = a2;
  ToolKitIndexingReason.Changeset.Provenance.hash(into:)();
  uint64_t v23 = sub_1B3D73138();
  uint64_t v24 = -1 << *(unsigned char *)(v22 + 32);
  unint64_t v25 = v23 & ~v24;
  if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v39 = v3;
  uint64_t v40 = a1;
  uint64_t v46 = ~v24;
  uint64_t v47 = *(void *)(v12 + 72);
  while (2)
  {
    unint64_t v26 = v47 * v25;
    sub_1B3CC6E44(*(void *)(v22 + 48) + v47 * v25, (uint64_t)v20);
    unint64_t v27 = (uint64_t *)&v10[*(int *)(v48 + 48)];
    sub_1B3CC6E44((uint64_t)v20, (uint64_t)v10);
    sub_1B3CC6E44(v49, (uint64_t)v27);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v29 = v44;
        sub_1B3CC6E44((uint64_t)v10, (uint64_t)v44);
        uint64_t v30 = *v29;
        if (OUTLINED_FUNCTION_22_6() != 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
        char v31 = sub_1B3C91A0C(v30, *v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v31 & 1) == 0) {
          goto LABEL_19;
        }
        goto LABEL_25;
      case 2u:
        if (OUTLINED_FUNCTION_22_6() == 2) {
          goto LABEL_25;
        }
        goto LABEL_14;
      case 3u:
        if (OUTLINED_FUNCTION_22_6() == 3) {
          goto LABEL_25;
        }
        goto LABEL_14;
      default:
        uint64_t v28 = v45;
        sub_1B3CC6E44((uint64_t)v10, v45);
        if (OUTLINED_FUNCTION_22_6())
        {
          sub_1B3CC6F00(v28, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
LABEL_14:
          sub_1B3CC6EA0((uint64_t)v10);
          goto LABEL_20;
        }
        uint64_t v32 = v43;
        sub_1B3CC6F58((uint64_t)v27, v43);
        if ((sub_1B3D71E68() & 1) == 0
          || (uint64_t v33 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0),
              *(void *)(v28 + *(int *)(v33 + 20)) != *(void *)(v32 + *(int *)(v33 + 20)))
          || (sub_1B3C90FB4(*(void *)(v28 + *(int *)(v41 + 20)), *(void *)(v32 + *(int *)(v41 + 20))) & 1) == 0)
        {
          sub_1B3CC6F00(v32, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
          sub_1B3CC6F00(v28, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
LABEL_19:
          sub_1B3CC6F00((uint64_t)v10, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
LABEL_20:
          sub_1B3CC6F00((uint64_t)v20, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
          unint64_t v25 = (v25 + 1) & v46;
          if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v39;
            a1 = v40;
LABEL_23:
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v35 = v49;
            uint64_t v36 = v42;
            sub_1B3CC6E44(v49, v42);
            uint64_t v50 = *v3;
            *uint64_t v3 = 0x8000000000000000;
            sub_1B3CC6744(v36, v25, isUniquelyReferenced_nonNull_native);
            *uint64_t v3 = v50;
            swift_bridgeObjectRelease();
            sub_1B3CC6F58(v35, a1);
            return 1;
          }
          continue;
        }
        sub_1B3CC6F00(v32, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
        sub_1B3CC6F00(v28, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
LABEL_25:
        sub_1B3CC6F00((uint64_t)v10, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        sub_1B3CC6F00((uint64_t)v20, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        swift_bridgeObjectRelease();
        sub_1B3CC6F00(v49, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        sub_1B3CC6E44(*(void *)(*v39 + 48) + v26, v40);
        return 0;
    }
  }
}

uint64_t sub_1B3CC4458()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D40);
  uint64_t v3 = sub_1B3D72908();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_1B3D73108();
      sub_1B3D723E8();
      uint64_t result = sub_1B3D73138();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *uint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              unint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1B3CC3164(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                void *v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_1B3CC4734()
{
  unint64_t v1 = v0;
  uint64_t v39 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (uint64_t)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v44 = (uint64_t)v37 - v8;
  uint64_t v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2048);
  uint64_t v10 = sub_1B3D72908();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    v37[0] = v0;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v42 = (void *)(v9 + 56);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v41 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 56;
    swift_retain();
    int64_t v17 = 0;
    uint64_t v43 = v7;
    v37[1] = v3;
    if (!v15) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v17 << 6);
LABEL_21:
      uint64_t v23 = *(void *)(v4 + 72);
      uint64_t v24 = v44;
      sub_1B3CC6F58(*(void *)(v9 + 48) + v23 * v19, v44);
      sub_1B3D73108();
      sub_1B3CC6E44(v24, (uint64_t)v7);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1B3D73118();
          sub_1B3D72278();
          sub_1B3C947CC();
          unint64_t v7 = v43;
          swift_bridgeObjectRelease_n();
          break;
        case 2u:
        case 3u:
          sub_1B3D73118();
          break;
        default:
          uint64_t v40 = type metadata accessor for LaunchServicesSnapshot;
          uint64_t v25 = v38;
          sub_1B3CC6F58((uint64_t)v7, v38);
          sub_1B3D73118();
          sub_1B3D71EA8();
          sub_1B3CA7748();
          unint64_t v7 = v43;
          sub_1B3D72318();
          type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
          sub_1B3D73118();
          sub_1B3D72278();
          sub_1B3C94618();
          swift_bridgeObjectRelease();
          sub_1B3CC6F00(v25, (void (*)(void))v40);
          break;
      }
      uint64_t v26 = sub_1B3D73138();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = v26 & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v16 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v16 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_34;
      }
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v16 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
LABEL_34:
      *(void *)(v16 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      sub_1B3CC6F58(v44, *(void *)(v11 + 48) + v30 * v23);
      ++*(void *)(v11 + 16);
      if (v15) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_42;
    }
    if (v20 < v41)
    {
      unint64_t v21 = v42[v20];
      ++v17;
      if (v21) {
        goto LABEL_20;
      }
      int64_t v17 = v20 + 1;
      if (v20 + 1 < v41)
      {
        unint64_t v21 = v42[v17];
        if (v21) {
          goto LABEL_20;
        }
        int64_t v17 = v20 + 2;
        if (v20 + 2 < v41)
        {
          unint64_t v21 = v42[v17];
          if (v21) {
            goto LABEL_20;
          }
          int64_t v22 = v20 + 3;
          if (v22 < v41)
          {
            unint64_t v21 = v42[v22];
            if (v21)
            {
              int64_t v17 = v22;
LABEL_20:
              unint64_t v15 = (v21 - 1) & v21;
              unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v17 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                break;
              }
              if (v17 >= v41) {
                goto LABEL_36;
              }
              unint64_t v21 = v42[v17];
              ++v22;
              if (v21) {
                goto LABEL_20;
              }
            }
LABEL_43:
            __break(1u);
            JUMPOUT(0x1B3CC4CB4);
          }
        }
      }
    }
LABEL_36:
    swift_release();
    unint64_t v1 = (uint64_t *)v37[0];
    uint64_t v35 = 1 << *(unsigned char *)(v9 + 32);
    if (v35 > 63) {
      sub_1B3CC3164(0, (unint64_t)(v35 + 63) >> 6, v42);
    }
    else {
      void *v42 = -1 << v35;
    }
    *(void *)(v9 + 16) = 0;
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v11;
  return result;
}

uint64_t sub_1B3CC4CC4(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(void *))isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  if ((v6 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v8 = (void *)((char *)v14 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1B3CC3164(0, v7, v8);
    sub_1B3CC4E54(v8, v7, a3, v5);
    uint64_t v10 = v9;
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v11 = (unint64_t *)swift_slowAlloc();
    sub_1B3CC3164(0, v7, v11);
    sub_1B3CC4E54(v11, v7, a3, v5);
    uint64_t v10 = v12;
    swift_release();
    MEMORY[0x1B3EC61A0](v11, -1, -1);
  }
  return v10;
}

void sub_1B3CC4E54(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *))
{
  int64_t v7 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v24 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v12 = v11 | (v7 << 6);
LABEL_17:
    uint64_t v16 = (void *)(*(void *)(a3 + 48) + 16 * v12);
    uint64_t v17 = v16[1];
    v23[0] = *v16;
    v23[1] = v17;
    sub_1B3D72278();
    char v18 = a4(v23);
    swift_bridgeObjectRelease();
    if (v4) {
      return;
    }
    if (v18)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = __OFADD__(v21++, 1);
      if (v13) {
        goto LABEL_30;
      }
    }
  }
  BOOL v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v7);
  if (v14)
  {
LABEL_16:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  int64_t v15 = v7 + 1;
  if (v7 + 1 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v7 + 2;
  if (v7 + 2 >= v24) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_26:
    swift_retain();
    sub_1B3CC5060(a1, a2, v21, a3);
    return;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_15:
    int64_t v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= v24) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v22 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1B3CC5060(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
LABEL_35:
    swift_release();
    return;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D40);
  uint64_t v7 = sub_1B3D72918();
  uint64_t v8 = v7;
  uint64_t v28 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = v7 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v28) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v28) {
        goto LABEL_35;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v28) {
          goto LABEL_35;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1B3D73108();
    sub_1B3D72278();
    sub_1B3D723E8();
    unint64_t v20 = sub_1B3D73138() & ~(-1 << *(unsigned char *)(v8 + 32));
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_28_3();
      while (++v23 != v24 || (v22 & 1) == 0)
      {
        BOOL v25 = v23 == v24;
        if (v23 == v24) {
          uint64_t v23 = 0;
        }
        v22 |= v25;
        if (*(void *)(v11 + 8 * v23) != -1)
        {
          OUTLINED_FUNCTION_27_2();
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_17_4();
LABEL_33:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = (void *)(*(void *)(v8 + 48) + 16 * v21);
    *uint64_t v26 = v18;
    v26[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_35;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v28) {
    goto LABEL_35;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_35;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1B3CC52CC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    char v6 = (void *)((char *)v12 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1B3CC3164(0, v5, v6);
    sub_1B3CC5460(v6, v5, a2, v3);
    uint64_t v8 = v7;
    swift_release();
  }
  else
  {
    unint64_t v9 = (unint64_t *)swift_slowAlloc();
    sub_1B3CC3164(0, v5, v9);
    sub_1B3CC5460(v9, v5, a2, v3);
    uint64_t v8 = v10;
    swift_release();
    MEMORY[0x1B3EC61A0](v9, -1, -1);
  }
  return v8;
}

void sub_1B3CC5460(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16))
  {
    int64_t v34 = 0;
    uint64_t v60 = a3 + 56;
    uint64_t v61 = 0;
    uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v37 = v36 & *(void *)(a3 + 56);
    int64_t v63 = (unint64_t)(v35 + 63) >> 6;
    uint64_t v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          unint64_t v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          unint64_t v40 = v39 | (v34 << 6);
        }
        else
        {
          int64_t v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63) {
            goto LABEL_79;
          }
          unint64_t v42 = *(void *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            int64_t v34 = v41 + 1;
            if (v41 + 1 >= v63) {
              goto LABEL_79;
            }
            unint64_t v42 = *(void *)(v60 + 8 * v34);
            if (!v42)
            {
              int64_t v34 = v41 + 2;
              if (v41 + 2 >= v63) {
                goto LABEL_79;
              }
              unint64_t v42 = *(void *)(v60 + 8 * v34);
              if (!v42)
              {
                int64_t v43 = v41 + 3;
                if (v43 >= v63) {
                  goto LABEL_79;
                }
                unint64_t v42 = *(void *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    int64_t v34 = v43 + 1;
                    if (__OFADD__(v43, 1)) {
                      goto LABEL_85;
                    }
                    if (v34 >= v63) {
                      break;
                    }
                    unint64_t v42 = *(void *)(v60 + 8 * v34);
                    ++v43;
                    if (v42) {
                      goto LABEL_61;
                    }
                  }
LABEL_79:
                  swift_retain();
                  sub_1B3CC5060(a1, a2, v61, v5);
                  return;
                }
                int64_t v34 = v43;
              }
            }
          }
LABEL_61:
          unint64_t v37 = (v42 - 1) & v42;
          unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
        uint64_t v46 = *v44;
        uint64_t v45 = v44[1];
        sub_1B3D73108();
        sub_1B3D72278();
        sub_1B3D723E8();
        uint64_t v47 = sub_1B3D73138();
        uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
        unint64_t v49 = v47 & ~v48;
        if ((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49)) {
          break;
        }
LABEL_78:
        swift_bridgeObjectRelease();
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v50 = *(void *)(a4 + 48);
      uint64_t v51 = (void *)(v50 + 16 * v49);
      BOOL v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (sub_1B3D72E58() & 1) == 0)
      {
        uint64_t v53 = ~v48;
        do
        {
          unint64_t v49 = (v49 + 1) & v53;
          if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
            goto LABEL_78;
          }
          uint64_t v54 = (void *)(v50 + 16 * v49);
          BOOL v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (sub_1B3D72E58() & 1) == 0);
      }
      swift_bridgeObjectRelease();
      *(unint64_t *)((char *)a1 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_83;
      }
    }
  }
  int64_t v6 = 0;
  uint64_t v58 = a4 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  int64_t v59 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v61 = 0;
  uint64_t v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      int64_t v62 = v6;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59) {
      goto LABEL_79;
    }
    unint64_t v14 = *(void *)(v58 + 8 * v13);
    int64_t v15 = v6 + 1;
    if (!v14)
    {
      int64_t v15 = v6 + 2;
      if (v6 + 2 >= v59) {
        goto LABEL_79;
      }
      unint64_t v14 = *(void *)(v58 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v6 + 3;
        if (v6 + 3 >= v59) {
          goto LABEL_79;
        }
        unint64_t v14 = *(void *)(v58 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v9 = (v14 - 1) & v14;
    int64_t v62 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1B3D73108();
    sub_1B3D72278();
    sub_1B3D723E8();
    uint64_t v20 = sub_1B3D73138();
    uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    uint64_t v24 = 1 << v22;
    if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) == 0) {
      goto LABEL_36;
    }
    uint64_t v25 = *(void *)(a3 + 48);
    uint64_t v26 = (void *)(v25 + 16 * v22);
    BOOL v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      a1[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
    else
    {
      uint64_t v28 = ~v21;
      for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
      {
        unint64_t v30 = i & v28;
        if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
          break;
        }
        char v31 = (void *)(v25 + 16 * v30);
        BOOL v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (sub_1B3D72E58() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v23 = v30 >> 6;
          uint64_t v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      swift_bridgeObjectRelease();
      int64_t v6 = v62;
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  uint64_t v16 = v6 + 4;
  if (v6 + 4 >= v59) {
    goto LABEL_79;
  }
  unint64_t v14 = *(void *)(v58 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v59) {
      goto LABEL_79;
    }
    unint64_t v14 = *(void *)(v58 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
}

void *sub_1B3CC59A0()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1B3D728F8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    void *v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)sub_1B3D72278();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1B3CC5B54()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2048);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1B3D728F8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = *(void *)(v6 + 56);
  uint64_t v16 = -1;
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  unint64_t v17 = v16 & v15;
  int64_t v18 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    unint64_t v24 = *(void *)(v3 + 72) * i;
    sub_1B3CC6E44(*(void *)(v6 + 48) + v24, (uint64_t)v5);
    uint64_t result = (void *)sub_1B3CC6F58((uint64_t)v5, *(void *)(v8 + 48) + v24);
    if (v17) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v18) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v18) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1B3CC5DB8()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1D40);
  uint64_t v3 = sub_1B3D72908();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1B3D73108();
    sub_1B3D72278();
    sub_1B3D723E8();
    uint64_t result = sub_1B3D73138();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1B3CC6064()
{
  unint64_t v1 = v0;
  uint64_t v38 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (uint64_t)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  uint64_t v3 = *(void *)(v42 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v42);
  int64_t v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = (uint64_t)&v35 - v6;
  uint64_t v7 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2048);
  uint64_t v8 = sub_1B3D72908();
  uint64_t v43 = v7;
  if (*(void *)(v7 + 16))
  {
    uint64_t v35 = v0;
    uint64_t v9 = 1 << *(unsigned char *)(v43 + 32);
    uint64_t v10 = *(void *)(v43 + 56);
    uint64_t v39 = v43 + 56;
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    int64_t v40 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v8 + 56;
    swift_retain();
    int64_t v14 = 0;
    uint64_t v15 = (uint64_t)v41;
    uint64_t v36 = v3;
    if (!v12) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v14 << 6);
LABEL_21:
      uint64_t v21 = v44;
      uint64_t v22 = *(void *)(v3 + 72);
      sub_1B3CC6E44(*(void *)(v43 + 48) + v22 * v17, v44);
      sub_1B3D73108();
      sub_1B3CC6E44(v21, v15);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1B3D73118();
          sub_1B3D72278();
          sub_1B3C947CC();
          uint64_t v15 = (uint64_t)v41;
          swift_bridgeObjectRelease_n();
          break;
        case 2u:
        case 3u:
          sub_1B3D73118();
          break;
        default:
          uint64_t v23 = v37;
          sub_1B3CC6F58(v15, v37);
          sub_1B3D73118();
          sub_1B3D71EA8();
          sub_1B3CA7748();
          uint64_t v15 = (uint64_t)v41;
          sub_1B3D72318();
          type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
          sub_1B3D73118();
          sub_1B3D72278();
          sub_1B3C94618();
          swift_bridgeObjectRelease();
          uint64_t v24 = v23;
          uint64_t v3 = v36;
          sub_1B3CC6F00(v24, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
          break;
      }
      uint64_t v25 = sub_1B3D73138();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = v25 & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_34;
      }
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v13 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
LABEL_34:
      *(void *)(v13 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      sub_1B3CC6F58(v44, *(void *)(v8 + 48) + v29 * v22);
      ++*(void *)(v8 + 16);
      if (v12) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_40;
    }
    if (v18 < v40)
    {
      unint64_t v19 = *(void *)(v39 + 8 * v18);
      ++v14;
      if (v19) {
        goto LABEL_20;
      }
      int64_t v14 = v18 + 1;
      if (v18 + 1 < v40)
      {
        unint64_t v19 = *(void *)(v39 + 8 * v14);
        if (v19) {
          goto LABEL_20;
        }
        int64_t v14 = v18 + 2;
        if (v18 + 2 < v40)
        {
          unint64_t v19 = *(void *)(v39 + 8 * v14);
          if (v19) {
            goto LABEL_20;
          }
          int64_t v20 = v18 + 3;
          if (v20 < v40)
          {
            unint64_t v19 = *(void *)(v39 + 8 * v20);
            if (v19)
            {
              int64_t v14 = v20;
LABEL_20:
              unint64_t v12 = (v19 - 1) & v19;
              unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v14 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                break;
              }
              if (v14 >= v40) {
                goto LABEL_36;
              }
              unint64_t v19 = *(void *)(v39 + 8 * v14);
              ++v20;
              if (v19) {
                goto LABEL_20;
              }
            }
LABEL_41:
            __break(1u);
            JUMPOUT(0x1B3CC6598);
          }
        }
      }
    }
LABEL_36:
    uint64_t result = swift_release_n();
    unint64_t v1 = v35;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *unint64_t v1 = v8;
  return result;
}

uint64_t sub_1B3CC65A8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1B3CC4458();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1B3CC59A0();
      goto LABEL_22;
    }
    sub_1B3CC5DB8();
  }
  uint64_t v11 = *v4;
  sub_1B3D73108();
  sub_1B3D723E8();
  uint64_t result = sub_1B3D73138();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1B3D72E58(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1B3D73058();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1B3D72E58();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1B3CC6744(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v42 = a1;
  uint64_t v6 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v35 = (uint64_t (*)(uint64_t))((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1F80);
  MEMORY[0x1F4188790](v41);
  unint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v39 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v34 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v34 - v16;
  unint64_t v18 = *(void *)(*(void *)v3 + 16);
  unint64_t v19 = *(void *)(*(void *)v3 + 24);
  uint64_t v36 = v3;
  if (v19 <= v18 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1B3CC4734();
    }
    else
    {
      if (v19 > v18)
      {
        sub_1B3CC5B54();
        goto LABEL_28;
      }
      sub_1B3CC6064();
    }
    uint64_t v20 = *(void *)v3;
    sub_1B3D73108();
    ToolKitIndexingReason.Changeset.Provenance.hash(into:)();
    uint64_t v3 = (uint64_t (*)(uint64_t))&v43;
    uint64_t v21 = sub_1B3D73138();
    uint64_t v22 = -1 << *(unsigned char *)(v20 + 32);
    a2 = v21 & ~v22;
    uint64_t v40 = v20 + 56;
    if ((*(void *)(v20 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v37 = v15;
      uint64_t v34 = v6;
      uint64_t v23 = ~v22;
      uint64_t v24 = *(void *)(v38 + 72);
      while (1)
      {
        sub_1B3CC6E44(*(void *)(v20 + 48) + v24 * a2, (uint64_t)v17);
        uint64_t v3 = (uint64_t (*)(uint64_t))&v9[*(int *)(v41 + 48)];
        sub_1B3CC6E44((uint64_t)v17, (uint64_t)v9);
        sub_1B3CC6E44(v42, (uint64_t)v3);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v6 = v39;
            sub_1B3CC6E44((uint64_t)v9, v39);
            uint64_t v25 = *(void *)v6;
            if (swift_getEnumCaseMultiPayload() != 1)
            {
              swift_bridgeObjectRelease();
              goto LABEL_21;
            }
            uint64_t v3 = *(uint64_t (**)(uint64_t))v3;
            uint64_t v6 = sub_1B3C91A0C(v25, (uint64_t)v3);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v6) {
              goto LABEL_32;
            }
            goto LABEL_26;
          case 2u:
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_32;
            }
            goto LABEL_21;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_32;
            }
            goto LABEL_21;
          default:
            uint64_t v6 = (uint64_t)v37;
            sub_1B3CC6E44((uint64_t)v9, (uint64_t)v37);
            if (swift_getEnumCaseMultiPayload())
            {
              sub_1B3CC6F00(v6, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
LABEL_21:
              sub_1B3CC6EA0((uint64_t)v9);
            }
            else
            {
              uint64_t v26 = (uint64_t)v3;
              uint64_t v3 = v35;
              sub_1B3CC6F58(v26, (uint64_t)v35);
              if (sub_1B3D71E68())
              {
                uint64_t v27 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
                if (*(void *)(v6 + *(int *)(v27 + 20)) == *(void *)((char *)v3 + *(int *)(v27 + 20))
                  && (sub_1B3C90FB4(*(void *)(v6 + *(int *)(v34 + 20)), *(void *)((char *)v3 + *(int *)(v34 + 20))) & 1) != 0)
                {
                  goto LABEL_31;
                }
              }
              uint64_t v28 = (uint64_t)v3;
              uint64_t v3 = type metadata accessor for LaunchServicesSnapshot;
              sub_1B3CC6F00(v28, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
              sub_1B3CC6F00(v6, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
LABEL_26:
              sub_1B3CC6F00((uint64_t)v9, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
            }
            sub_1B3CC6F00((uint64_t)v17, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
            a2 = (a2 + 1) & v23;
            if (((*(void *)(v40 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_28;
            }
            break;
        }
      }
    }
  }
LABEL_28:
  uint64_t v29 = *(void *)v36;
  *(void *)(*(void *)v36 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1B3CC6F58(v42, *(void *)(v29 + 48) + *(void *)(v38 + 72) * a2);
  uint64_t v31 = *(void *)(v29 + 16);
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32)
  {
    __break(1u);
LABEL_31:
    sub_1B3CC6F00((uint64_t)v3, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
    sub_1B3CC6F00(v6, (void (*)(void))type metadata accessor for LaunchServicesSnapshot);
LABEL_32:
    sub_1B3CC6F00((uint64_t)v9, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1B3CC6F00((uint64_t)v17, (void (*)(void))type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1B3D73058();
    __break(1u);
    JUMPOUT(0x1B3CC6CC8);
  }
  *(void *)(v29 + 16) = v33;
  return result;
}

uint64_t sub_1B3CC6CDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

BOOL sub_1B3CC6D14(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  return sub_1B3CC187C(*a1, a1[1], *a2, *a3);
}

BOOL sub_1B3CC6D48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CC1B6C(*a1, a1[1], a2, a3);
}

BOOL sub_1B3CC6D74(uint64_t *a1)
{
  return sub_1B3CC6D48(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1B3CC6D94(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    sub_1B3D72278();
    id v3 = a3;
  }
}

BOOL sub_1B3CC6DD8(uint64_t *a1)
{
  return sub_1B3CC6D14(a1, *(uint64_t **)(v1 + 16), *(uint64_t **)(v1 + 24));
}

void sub_1B3CC6DF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    sub_1B3D72278();
    sub_1B3C7D8EC(a3, a4);
  }
}

uint64_t sub_1B3CC6E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_40_1();
  v5(v4);
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

uint64_t sub_1B3CC6EA0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE1F80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B3CC6F00(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1B3CC6F58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_40_1();
  v4(v3);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_18_5();
  v5();
  return a2;
}

uint64_t OUTLINED_FUNCTION_15_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return v0;
}

void OUTLINED_FUNCTION_24_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 176) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return swift_bridgeObjectRelease_n();
}

void *static XPCListener.anonymous(handler:)(uint64_t a1, uint64_t a2)
{
  return sub_1B3CC75EC(0, 0, a1, a2);
}

uint64_t type metadata accessor for XPCListener()
{
  return self;
}

void *static XPCListener.machService(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B3CC75EC(a1, a2, a3, a4);
}

uint64_t sub_1B3CC7178(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v3 = sub_1B3D72798();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1B3D72788();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE39C8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = sub_1B3D721F8();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  MEMORY[0x1F4188790](v15);
  if (a2)
  {
    uint64_t v23 = v3;
    unint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_1B3D72938();
    swift_bridgeObjectRelease();
    unint64_t v25 = 0xD00000000000001DLL;
    unint64_t v26 = 0x80000001B3D8A410;
    sub_1B3D723F8();
    unint64_t v22 = v26;
    qos_class_main();
    sub_1B3D721A8();
    uint64_t v16 = sub_1B3D721B8();
    uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v16);
    if (result != 1)
    {
      sub_1B3C8D300();
      sub_1B3D721E8();
      unint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1B3C8D340();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CB0);
      sub_1B3C8D390();
      sub_1B3D728B8();
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v23);
      unint64_t v18 = (void *)sub_1B3D727A8();
      *(&v22 - 2) = MEMORY[0x1F4188790](v18);
      unint64_t v19 = sub_1B3CC8FF4((void *(*)(uint64_t *__return_ptr, void *))sub_1B3CC7D18, (uint64_t)(&v22 - 4), v24, a2);

      return (uint64_t)v19;
    }
    __break(1u);
  }
  else
  {
    qos_class_main();
    sub_1B3D721A8();
    uint64_t v20 = sub_1B3D721B8();
    uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v20);
    if (result != 1)
    {
      sub_1B3C8D300();
      sub_1B3D721E8();
      unint64_t v25 = MEMORY[0x1E4FBC860];
      sub_1B3C8D340();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CB0);
      sub_1B3C8D390();
      sub_1B3D728B8();
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v3);
      uint64_t v21 = sub_1B3D727A8();
      unint64_t v19 = xpc_connection_create(0, v21);

      return (uint64_t)v19;
    }
  }
  __break(1u);
  return result;
}

void *sub_1B3CC75EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v5[2] = a1;
  v5[3] = a2;
  long long v5[4] = a3;
  v5[5] = a4;
  sub_1B3D72278();
  swift_retain();
  uint64_t v8 = (_xpc_connection_s *)sub_1B3CC7178(a1, a2);
  swift_bridgeObjectRelease();
  void v5[6] = v8;
  v12[4] = sub_1B3CC7CF8;
  v12[5] = v5;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  void v12[2] = sub_1B3CC9134;
  void v12[3] = &block_descriptor_3;
  uint64_t v9 = _Block_copy(v12);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v8, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();
  uint64_t v10 = (_xpc_connection_s *)swift_unknownObjectRetain();
  xpc_connection_resume(v10);
  swift_unknownObjectRelease();
  swift_release();
  return v5;
}

void sub_1B3CC7750(_xpc_connection_s *a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x1B3EC6600]();
  if (sub_1B3D720D8() == v4)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t))(a2 + 32);
    type metadata accessor for XPCIncomingConnection();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    swift_unknownObjectRetain();
    uint64_t v10 = v8(v9);
    swift_release();
    if (v10)
    {
      swift_release();
      xpc_connection_resume(a1);
    }
    else
    {
      xpc_connection_cancel(a1);
    }
  }
  else if (sub_1B3D720A8() != v4)
  {
    uint64_t v5 = swift_unknownObjectRetain();
    uint64_t v6 = MEMORY[0x1B3EC64A0](v5);
    sub_1B3D72408();
    MEMORY[0x1B3EC61A0](v6, -1, -1);
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE39C0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1B3D80E20;
    sub_1B3D72938();
    sub_1B3D723F8();
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 32) = 0;
    *(void *)(v7 + 40) = 0xE000000000000000;
    sub_1B3D730E8();
    swift_bridgeObjectRelease();
  }
}

void sub_1B3CC7944()
{
  xpc_connection_cancel(*(xpc_connection_t *)(v0 + 48));
}

xpc_endpoint_t sub_1B3CC794C@<X0>(xpc_endpoint_t *a1@<X8>)
{
  xpc_endpoint_t result = xpc_endpoint_create(*(xpc_connection_t *)(v1 + 48));
  *a1 = result;
  return result;
}

uint64_t XPCListener.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCListener.__deallocating_deinit()
{
  XPCListener.deinit();
  return MEMORY[0x1F4186488](v0, 56, 7);
}

void static XPCListener.serviceListener(handler:)(void *a1, uint64_t a2)
{
  uint64_t v2 = off_1E9CE39B0;
  off_1E9CE39B0 = a1;
  qword_1E9CE39B8 = a2;
  sub_1B3C767E8((uint64_t)v2);
  swift_retain();
  xpc_main((xpc_connection_handler_t)sub_1B3CC7AEC);
}

uint64_t sub_1B3CC7A24(uint64_t result)
{
  uint64_t v1 = (uint64_t (*)(uint64_t))off_1E9CE39B0;
  if (off_1E9CE39B0)
  {
    uint64_t v2 = (_xpc_connection_s *)result;
    type metadata accessor for XPCIncomingConnection();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    swift_unknownObjectRetain();
    sub_1B3C766E0((uint64_t)v1);
    uint64_t v4 = v1(v3);
    swift_release();
    if (v4)
    {
      swift_release();
      xpc_connection_resume(v2);
    }
    else
    {
      xpc_connection_cancel(v2);
    }
    return sub_1B3C767E8((uint64_t)v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1B3CC7AEC()
{
  uint64_t v0 = swift_unknownObjectRetain();
  sub_1B3CC7A24(v0);
  return swift_unknownObjectRelease();
}

uint64_t XPCListener.description.getter()
{
  if (*(void *)(v0 + 24))
  {
    sub_1B3D72938();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "<xpc listener ");
    HIBYTE(v4[1]) = -18;
    sub_1B3D723F8();
    sub_1B3D723F8();
  }
  else
  {
    sub_1B3D72938();
    swift_bridgeObjectRelease();
    v4[0] = 0xD000000000000019;
    v4[1] = 0x80000001B3D8A360;
  }
  uint64_t v1 = swift_unknownObjectRetain();
  uint64_t v2 = MEMORY[0x1B3EC64A0](v1);
  sub_1B3D72408();
  MEMORY[0x1B3EC61A0](v2, -1, -1);
  swift_unknownObjectRelease();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  return v4[0];
}

uint64_t sub_1B3CC7C64()
{
  return XPCListener.description.getter();
}

uint64_t method lookup function for XPCListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for XPCListener);
}

uint64_t dispatch thunk of XPCListener.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of XPCListener.endpoint.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

ValueMetadata *type metadata accessor for XPCListener.ListenerType()
{
  return &type metadata for XPCListener.ListenerType;
}

void sub_1B3CC7CF8(_xpc_connection_s *a1)
{
  sub_1B3CC7750(a1, v1);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

xpc_connection_t sub_1B3CC7D18@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  xpc_connection_t result = xpc_connection_create_mach_service(a1, *(dispatch_queue_t *)(v2 + 16), 1uLL);
  *a2 = result;
  return result;
}

uint64_t VCVoiceShortcutClient.reindexToolKitDatabase(request:)()
{
  OUTLINED_FUNCTION_3();
  v1[9] = v2;
  v1[10] = v0;
  v1[11] = type metadata accessor for VoiceShortcutClientRequest(0);
  v1[12] = OUTLINED_FUNCTION_2();
  uint64_t v3 = sub_1B3D72198();
  v1[13] = v3;
  OUTLINED_FUNCTION_0_1(v3);
  v1[14] = v4;
  v1[15] = OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B3CC7E04()
{
  OUTLINED_FUNCTION_3();
  uint64_t v1 = v0[12];
  uint64_t v2 = (void *)v0[9];
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = 0;
  *(_WORD *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[16] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1B3CC7EBC;
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[12];
  return sub_1B3C89B00(v5, v6);
}

uint64_t sub_1B3CC7EBC()
{
  OUTLINED_FUNCTION_1_4();
  *(void *)(v2 + 136) = v0;
  swift_task_dealloc();
  sub_1B3CC8198(*(void *)(v1 + 96));
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1B3CC7FC8()
{
  uint64_t v1 = v0[17];
  sub_1B3C89348();
  sub_1B3D72188();
  if (v1)
  {
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    goto LABEL_6;
  }
  uint64_t v2 = v0[14];
  if (v0[4])
  {
    OUTLINED_FUNCTION_6_6();
    uint64_t v3 = OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_2_6(v3, v4);
    OUTLINED_FUNCTION_4();
    *uint64_t v5 = 0;
    swift_willThrow();
    (*(void (**)())(v2 + 8))();
    goto LABEL_5;
  }
  uint64_t v8 = OUTLINED_FUNCTION_4_6();
  v9(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
LABEL_6:
  return v6();
}

uint64_t sub_1B3CC812C()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B3CC8198(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VoiceShortcutClientRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t VCVoiceShortcutClient.performToolDatabaseSync(request:)()
{
  OUTLINED_FUNCTION_3();
  uint64_t v3 = v2;
  *(void *)(v1 + 72) = v0;
  *(void *)(v1 + 80) = type metadata accessor for VoiceShortcutClientRequest(0);
  *(void *)(v1 + 88) = OUTLINED_FUNCTION_2();
  uint64_t v4 = sub_1B3D72198();
  *(void *)(v1 + 96) = v4;
  OUTLINED_FUNCTION_0_1(v4);
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 112) = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v1 + 120) = *(_OWORD *)v3;
  *(_WORD *)(v1 + 152) = *(_WORD *)(v3 + 16);
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1B3CC82BC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 88);
  __int16 v4 = *(_WORD *)(v0 + 152);
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = v2;
  *(_WORD *)(v3 + 16) = v4 | 0x4000;
  swift_storeEnumTagMultiPayload();
  sub_1B3C9F6A4(v1, v2, v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1B3CC8390;
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 88);
  return sub_1B3C89B00(v6, v7);
}

uint64_t sub_1B3CC8390()
{
  OUTLINED_FUNCTION_1_4();
  *(void *)(v2 + 144) = v0;
  swift_task_dealloc();
  sub_1B3CC8198(*(void *)(v1 + 88));
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1B3CC849C()
{
  uint64_t v1 = v0[18];
  sub_1B3C89348();
  sub_1B3D72188();
  if (v1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    goto LABEL_6;
  }
  uint64_t v2 = v0[13];
  if (v0[4])
  {
    OUTLINED_FUNCTION_6_6();
    uint64_t v3 = OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_2_6(v3, v4);
    OUTLINED_FUNCTION_4();
    *uint64_t v5 = 0;
    swift_willThrow();
    (*(void (**)())(v2 + 8))();
    goto LABEL_5;
  }
  uint64_t v8 = OUTLINED_FUNCTION_4_6();
  v9(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
LABEL_6:
  return v6();
}

uint64_t sub_1B3CC8600()
{
  OUTLINED_FUNCTION_3();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t OUTLINED_FUNCTION_2_6(uint64_t a1, void *a2)
{
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v4;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v2;
  a2[6] = v3;
  return sub_1B3C88D40();
}

unint64_t OUTLINED_FUNCTION_6_6()
{
  return sub_1B3C88CF4();
}

uint64_t Collection<>.take(upTo:)(uint64_t a1, char a2)
{
  uint64_t result = sub_1B3D726D8();
  if (a2)
  {
    if ((result & 0x8000000000000000) == 0) {
      return sub_1B3D72718();
    }
  }
  else
  {
    if (result >= a1) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = result;
    }
    if ((v5 & 0x8000000000000000) == 0) {
      return sub_1B3D72718();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t static XPCDarwinNotificationEventStream.name.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t XPCDarwinNotificationEventStream.Event.name.getter()
{
  uint64_t v1 = *v0;
  sub_1B3D72278();
  return v1;
}

BOOL sub_1B3CC878C()
{
  uint64_t v0 = sub_1B3D72AC8();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_1B3CC87E8@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1B3CC878C();
  *a1 = result;
  return result;
}

uint64_t sub_1B3CC8820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j__OUTLINED_FUNCTION_0_7();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B3CC884C@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = sub_1B3CC87D4();
  *a1 = result != 0;
  return result;
}

void sub_1B3CC887C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1B3CC8888(uint64_t a1)
{
  unint64_t v2 = sub_1B3CC8AEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CC88C4(uint64_t a1)
{
  unint64_t v2 = sub_1B3CC8AEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t XPCDarwinNotificationEventStream.Event.description.getter()
{
  return 0xD000000000000016;
}

uint64_t XPCDarwinNotificationEventStream.Event.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB4FA488);
  MEMORY[0x1F4188790](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CC8AEC();
  sub_1B3D73158();
  if (!v2)
  {
    uint64_t v6 = sub_1B3D72B28();
    uint64_t v8 = v7;
    uint64_t v9 = OUTLINED_FUNCTION_1_10();
    v10(v9);
    *a2 = v6;
    a2[1] = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1B3CC8AEC()
{
  unint64_t result = qword_1EB4FA498;
  if (!qword_1EB4FA498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA498);
  }
  return result;
}

unint64_t sub_1B3CC8B38(uint64_t a1)
{
  unint64_t result = sub_1B3CC8B60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B3CC8B60()
{
  unint64_t result = qword_1EB4FA4B0;
  if (!qword_1EB4FA4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA4B0);
  }
  return result;
}

uint64_t sub_1B3CC8BB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return XPCDarwinNotificationEventStream.Event.init(from:)(a1, a2);
}

unint64_t sub_1B3CC8BCC()
{
  unint64_t result = qword_1EB4FA4B8;
  if (!qword_1EB4FA4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA4B8);
  }
  return result;
}

unint64_t sub_1B3CC8C18()
{
  return 0xD00000000000001ALL;
}

void type metadata accessor for XPCDarwinNotificationEventStream()
{
}

uint64_t getEnumTagSinglePayload for XPCDarwinNotificationEventStream.Event(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCDarwinNotificationEventStream.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for XPCDarwinNotificationEventStream.Event()
{
}

unsigned char *sub_1B3CC8CCC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3CC8D68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for XPCDarwinNotificationEventStream.Event.CodingKeys()
{
}

unint64_t sub_1B3CC8DA0()
{
  unint64_t result = qword_1E9CE39E0;
  if (!qword_1E9CE39E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE39E0);
  }
  return result;
}

unint64_t sub_1B3CC8DF0()
{
  unint64_t result = qword_1EB4FA4A8;
  if (!qword_1EB4FA4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA4A8);
  }
  return result;
}

unint64_t sub_1B3CC8E40()
{
  unint64_t result = qword_1EB4FA4A0;
  if (!qword_1EB4FA4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB4FA4A0);
  }
  return result;
}

uint64_t sub_1B3CC8E8C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B3CC8EB4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1B3CC8EDC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for XPCEncoder();
  swift_allocObject();
  unsigned int v4 = sub_1B3C805E8();
  v13[3] = v3;
  v13[4] = sub_1B3CD1068((unint64_t *)&qword_1E9CE3AC0, (void (*)(uint64_t))type metadata accessor for XPCEncoder);
  v13[0] = v4;
  swift_retain();
  uint64_t v5 = a1;
  sub_1B3CCD9E0(v13);
  if (v1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    uint64_t v6 = sub_1B3C7FB48();
    uint64_t v8 = v7;
    char v10 = v9;
    sub_1B3C7ECCC(v6, v7, v9);
    uint64_t v5 = v11;
    sub_1B3C801F4(v6, v8, v10);
    swift_release();
  }
  return v5;
}

void *sub_1B3CC8FF4(void *(*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2910);
    OUTLINED_FUNCTION_16_3();
    unint64_t result = (void *)sub_1B3D72928();
    if (!v4) {
      return (void *)v12[3];
    }
  }
  else
  {
    MEMORY[0x1F4188790](a1);
    if ((a4 & 0x2000000000000000) != 0)
    {
      v12[0] = a3;
      v12[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      unint64_t result = a1(&v11, v12);
      if (!v4) {
        return (void *)v11;
      }
    }
    else
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = a3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v8 = sub_1B3D729B8();
      }
      return (void *)sub_1B3CCF378(v8, v9, (uint64_t (*)(void))sub_1B3CD0D30);
    }
  }
  return result;
}

uint64_t sub_1B3CC9134(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

unint64_t XPCConnectionError.errorDescription.getter()
{
  unint64_t v1 = 0xD000000000000016;
  switch(*(void *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
      return v1;
    case 3:
      unint64_t v1 = 0x206E776F6E6B6E55;
      break;
    default:
      sub_1B3D72938();
      swift_bridgeObjectRelease();
      sub_1B3D723F8();
      unint64_t v1 = 0xD000000000000018;
      break;
  }
  return v1;
}

uint64_t sub_1B3CC92B0@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t result = sub_1B3CC93B0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1B3CD1820;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1B3CC9320(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1B3CD17F4;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_1B3C766E0(v1);
  return sub_1B3CC9400((uint64_t)v4, v3);
}

uint64_t sub_1B3CC93B0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 112);
  sub_1B3C766E0(v1);
  return v1;
}

uint64_t sub_1B3CC9400(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 112);
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return sub_1B3C767E8(v5);
}

uint64_t (*sub_1B3CC9454())()
{
  return j__swift_endAccess;
}

uint64_t sub_1B3CC9498@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t result = sub_1B3CC9598();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1B3CCFC64;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1B3CC9508(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1B3CCFC3C;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_1B3C766E0(v1);
  return sub_1B3CC95E8((uint64_t)v4, v3);
}

uint64_t sub_1B3CC9598()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 128);
  sub_1B3C766E0(v1);
  return v1;
}

uint64_t sub_1B3CC95E8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 128);
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return sub_1B3C767E8(v5);
}

uint64_t (*sub_1B3CC963C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1B3CC9680(_xpc_connection_s *a1, void *a2)
{
  *(void *)(v2 + 32) = sub_1B3D72248();
  *(void *)(v2 + 40) = sub_1B3D72248();
  *(void *)(v2 + 48) = 0xD000000000000010;
  *(void *)(v2 + 56) = 0x80000001B3D8A6D0;
  *(void *)(v2 + 64) = 0xD000000000000010;
  *(void *)(v2 + 72) = 0x80000001B3D8A6F0;
  *(void *)(v2 + 80) = 0xD000000000000017;
  *(void *)(v2 + 88) = 0x80000001B3D8A710;
  *(void *)(v2 + 96) = 0xD000000000000021;
  *(void *)(v2 + 104) = 0x80000001B3D8A730;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = a1;
  void v9[4] = sub_1B3CD0DB4;
  void v9[5] = v5;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1B3CC9134;
  v9[3] = &block_descriptor_48_0;
  uint64_t v6 = _Block_copy(v9);
  swift_unknownObjectRetain_n();
  id v7 = a2;
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(a1, v6);
  swift_unknownObjectRelease();

  _Block_release(v6);
  return v2;
}

void sub_1B3CC9840(void *a1, void *a2, _xpc_connection_s *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CD0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1B3EC6600](a1);
  if (v9 == sub_1B3D720A8())
  {
    uint64_t v12 = sub_1B3D720F8();
    swift_unknownObjectRelease();
    if ((void *)v12 == a1)
    {
      swift_beginAccess();
      uint64_t v14 = (void (*)(uint64_t))a2[16];
      if (!v14) {
        return;
      }
    }
    else
    {
      uint64_t v13 = sub_1B3D72108();
      swift_unknownObjectRelease();
      if ((void *)v13 != a1) {
        return;
      }
      swift_beginAccess();
      uint64_t v14 = (void (*)(uint64_t))a2[14];
      if (!v14) {
        return;
      }
    }
    uint64_t v29 = swift_retain();
    v14(v29);
    sub_1B3C767E8((uint64_t)v14);
    return;
  }
  if (v9 != sub_1B3D720E8()) {
    goto LABEL_3;
  }
  uint64_t v15 = a2[6];
  uint64_t v16 = a2[7];
  swift_unknownObjectRetain();
  uint64_t v17 = sub_1B3C79254(v15, v16, a1);
  if (!v18)
  {
    swift_unknownObjectRelease();
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE39C0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1B3D80E20;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 32) = 0xD00000000000003ELL;
    *(void *)(v10 + 40) = 0x80000001B3D8A760;
    sub_1B3D730E8();
    swift_bridgeObjectRelease();
    uint64_t v11 = (_xpc_connection_s *)a2[2];
    xpc_connection_cancel(v11);
    return;
  }
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  uint64_t v21 = sub_1B3D723C8();
  xpc_object_t v22 = xpc_dictionary_get_value(a1, (const char *)(v21 + 32));
  swift_release();
  if (!v22)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_beginAccess();
  uint64_t v23 = a2[4];
  sub_1B3D72278();
  sub_1B3D72278();
  uint64_t v24 = sub_1B3C7EB84(v19, v20, v23);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_1B3D72538();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v27);
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = v24;
    void v28[5] = v26;
    v28[6] = v22;
    v28[7] = a1;
    v28[8] = a2;
    v28[9] = a3;
    swift_retain();
    swift_unknownObjectRetain();
    sub_1B3CCA5BC((uint64_t)v8, (uint64_t)&unk_1E9CE3AB8, (uint64_t)v28);
LABEL_20:
    swift_release();
    return;
  }
  swift_beginAccess();
  uint64_t v30 = a2[5];
  sub_1B3D72278();
  sub_1B3D72278();
  uint64_t v31 = sub_1B3C7EB84(v19, v20, v30);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31)
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_1B3D72538();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v34);
    uint64_t v35 = (void *)swift_allocObject();
    void v35[2] = 0;
    v35[3] = 0;
    unsigned char v35[4] = v31;
    v35[5] = v33;
    v35[6] = v22;
    sub_1B3C766E0(v31);
    swift_unknownObjectRetain();
    sub_1B3CCA5BC((uint64_t)v8, (uint64_t)&unk_1E9CE3AA8, (uint64_t)v35);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1B3C767E8(v31);
    goto LABEL_20;
  }
  xpc_object_t reply = xpc_dictionary_create_reply(a1);
  if (reply)
  {
    uint64_t v37 = reply;
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_1B3D723C8();
    xpc_dictionary_set_BOOL(v37, (const char *)(v38 + 32), 1);
    swift_release();
    swift_unknownObjectRetain();
    xpc_connection_send_message(a3, v37);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE39C0);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1B3D80E20;
    unint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    sub_1B3D72938();
    swift_bridgeObjectRelease();
    unint64_t v42 = 0xD000000000000029;
    unint64_t v43 = 0x80000001B3D8A7A0;
    sub_1B3D723F8();
    swift_bridgeObjectRelease();
    unint64_t v40 = v42;
    unint64_t v41 = v43;
    *(void *)(v39 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v39 + 32) = v40;
    *(void *)(v39 + 40) = v41;
    sub_1B3D730E8();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
}

uint64_t sub_1B3CC9D94(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a8;
  v8[21] = v14;
  v8[19] = a7;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v8[22] = v10;
  void *v10 = v8;
  v10[1] = sub_1B3CC9E80;
  return v12(a6);
}

uint64_t sub_1B3CC9E80()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 184) = v4;
  *(void *)(v2 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1B3CC9F64()
{
  OUTLINED_FUNCTION_12_3();
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 152));
  uint64_t v2 = *(void **)(v0 + 184);
  if (reply)
  {
    uint64_t v3 = reply;
    uint64_t v4 = *(_xpc_connection_s **)(v0 + 168);
    uint64_t v5 = sub_1B3D723C8();
    xpc_dictionary_set_value(v3, (const char *)(v5 + 32), v2);
    swift_release();
    xpc_connection_send_message(v4, v3);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE39C0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1B3D80E20;
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 32) = 0xD000000000000039;
    *(void *)(v6 + 40) = 0x80000001B3D8A800;
    OUTLINED_FUNCTION_14_7();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_9_1();
  return v7();
}

uint64_t sub_1B3CCA07C()
{
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 152));
  if (reply)
  {
    uint64_t v2 = reply;
    uint64_t v3 = *(void **)(v0 + 192);
    sub_1B3D72278();
    id v4 = v3;
    sub_1B3CCA260(v3, (uint64_t *)(v0 + 16));
    uint64_t v5 = (void *)sub_1B3CC8EDC(v0 + 16);
    uint64_t v6 = *(_xpc_connection_s **)(v0 + 168);
    sub_1B3CD0FDC(v0 + 16);
    uint64_t v7 = sub_1B3D723C8();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v2, (const char *)(v7 + 32), v5);
    swift_unknownObjectRelease();
    swift_release();
    xpc_connection_send_message(v6, v2);
    swift_unknownObjectRelease();
  }
  uint64_t v8 = *(void **)(v0 + 192);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE39C0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1B3D80E20;
  sub_1B3D72938();
  *(void *)(v0 + 128) = 0;
  *(void *)(v0 + 136) = 0xE000000000000000;
  OUTLINED_FUNCTION_26_3();
  *(void *)(v0 + 144) = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72A08();
  uint64_t v10 = *(void *)(v0 + 128);
  uint64_t v11 = *(void *)(v0 + 136);
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  OUTLINED_FUNCTION_14_7();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_9_1();
  return v12();
}

void sub_1B3CCA260(void *a1@<X0>, uint64_t *a2@<X8>)
{
  swift_getErrorValue();
  uint64_t v4 = sub_1B3D73098();
  uint64_t v33 = v5;
  uint64_t v34 = v4;
  id v6 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3AD8);
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
    uint64_t v7 = sub_1B3D71CB8();
    uint64_t v31 = v8;
    uint64_t v32 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  else
  {
    uint64_t v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
    sub_1B3C7CF30((uint64_t)&v35, &qword_1E9CE3AE0);
    uint64_t v31 = 0;
    uint64_t v32 = 0;
  }
  id v9 = a1;
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
    uint64_t v10 = sub_1B3D71CA8();
    uint64_t v29 = v11;
    uint64_t v30 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  else
  {
    uint64_t v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
    sub_1B3C7CF30((uint64_t)&v35, &qword_1E9CE3AE0);
    uint64_t v29 = 0;
    uint64_t v30 = 0;
  }
  id v12 = a1;
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
    uint64_t v13 = sub_1B3D71CC8();
    uint64_t v27 = v14;
    uint64_t v28 = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  else
  {
    uint64_t v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
    sub_1B3C7CF30((uint64_t)&v35, &qword_1E9CE3AE0);
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  id v15 = a1;
  if (swift_dynamicCast())
  {
    __swift_project_boxed_opaque_existential_1(&v35, *((uint64_t *)&v36 + 1));
    uint64_t v16 = sub_1B3D71C98();
    uint64_t v18 = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
  }
  else
  {
    uint64_t v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
    sub_1B3C7CF30((uint64_t)&v35, &qword_1E9CE3AE0);
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v19 = (void *)sub_1B3D71D28();
  id v20 = objc_msgSend(v19, sel_domain);
  uint64_t v21 = sub_1B3D723A8();
  uint64_t v23 = v22;

  id v24 = objc_msgSend(v19, sel_code);
  id v25 = objc_msgSend(v19, sel_userInfo);
  sub_1B3D72228();

  uint64_t v26 = sub_1B3CCD234();
  swift_bridgeObjectRelease();

  *a2 = v34;
  a2[1] = v33;
  a2[2] = v32;
  a2[3] = v31;
  a2[4] = v30;
  a2[5] = v29;
  a2[6] = v28;
  a2[7] = v27;
  a2[8] = v16;
  a2[9] = v18;
  a2[10] = v21;
  a2[11] = v23;
  a2[12] = (uint64_t)v24;
  a2[13] = v26;
}

uint64_t sub_1B3CCA5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D72538();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_1B3C7CF30(a1, &qword_1E9CE1CD0);
  }
  else
  {
    sub_1B3D72528();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1B3D724D8();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1B3CCA72C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 40) = v8;
  void *v8 = v6;
  v8[1] = sub_1B3CCA808;
  return v10(a6);
}

uint64_t sub_1B3CCA808()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_6_0();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_9_1();
    return v10();
  }
}

uint64_t sub_1B3CCA900()
{
  OUTLINED_FUNCTION_36_1();
  uint64_t v1 = (void *)v0[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE39C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1B3D80E20;
  sub_1B3D72938();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  OUTLINED_FUNCTION_26_3();
  v0[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72A08();
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  OUTLINED_FUNCTION_14_7();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_9_1();
  return v5();
}

void XPCConnection.__allocating_init(incomingConnection:)()
{
  OUTLINED_FUNCTION_10();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1B3D72798();
  OUTLINED_FUNCTION_0();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_8_9();
  sub_1B3D72788();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_24();
  uint64_t v8 = sub_1B3D721F8();
  MEMORY[0x1F4188790](v8 - 8);
  OUTLINED_FUNCTION_8();
  uint64_t v9 = *(_xpc_connection_s **)(v2 + 16);
  sub_1B3C8D300();
  swift_unknownObjectRetain();
  sub_1B3D721C8();
  sub_1B3CD1068((unint64_t *)&qword_1E9CE1910, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CB0);
  sub_1B3C90040((unint64_t *)&qword_1E9CE1CB8, &qword_1E9CE1CB0);
  sub_1B3D728B8();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v0, *MEMORY[0x1E4FBCC58], v3);
  OUTLINED_FUNCTION_13_5();
  uint64_t v10 = (void *)sub_1B3D727A8();
  type metadata accessor for XPCConnection();
  swift_allocObject();
  sub_1B3CC9680(v9, v10);
  swift_release();
  OUTLINED_FUNCTION_9();
}

uint64_t type metadata accessor for XPCConnection()
{
  return self;
}

void static XPCConnection.endpoint(_:)()
{
  OUTLINED_FUNCTION_10();
  uint64_t v2 = v1;
  uint64_t v19 = sub_1B3D72798();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B3D72788();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_8_9();
  uint64_t v9 = sub_1B3D721F8();
  MEMORY[0x1F4188790](v9 - 8);
  OUTLINED_FUNCTION_24();
  uint64_t v10 = sub_1B3D721B8();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_8();
  xpc_endpoint_t v18 = *v2;
  sub_1B3C8D300();
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v0, *MEMORY[0x1E4FBCB48], v10);
  uint64_t v17 = sub_1B3D727B8();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v10);
  sub_1B3D721C8();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  sub_1B3CD1068((unint64_t *)&qword_1E9CE1910, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CB0);
  sub_1B3C90040((unint64_t *)&qword_1E9CE1CB8, &qword_1E9CE1CB0);
  sub_1B3D728B8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4FBCC58], v19);
  OUTLINED_FUNCTION_13_5();
  uint64_t v14 = (void *)sub_1B3D727A8();
  id v15 = xpc_connection_create_from_endpoint(v18);
  type metadata accessor for XPCConnection();
  swift_allocObject();
  swift_unknownObjectRetain();
  id v16 = v14;
  sub_1B3CC9680(v15, v16);
  xpc_connection_activate(v15);

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9();
}

void static XPCConnection.machService(_:)()
{
}

xpc_connection_t sub_1B3CCAF40@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  xpc_connection_t result = xpc_connection_create_mach_service(a1, *(dispatch_queue_t *)(v2 + 16), 0);
  *a2 = result;
  return result;
}

void static XPCConnection.service(_:)()
{
}

void sub_1B3CCAF90()
{
  void *(*v3)(uint64_t *__return_ptr, void *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _xpc_connection_s *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *(*v19)(uint64_t *__return_ptr, void *);
  uint64_t v20;
  void v21[6];

  OUTLINED_FUNCTION_10();
  uint64_t v19 = v3;
  uint64_t v20 = v2;
  xpc_endpoint_t v18 = v4;
  uint64_t v17 = sub_1B3D72798();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_24();
  sub_1B3D72788();
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_8();
  uint64_t v9 = sub_1B3D721F8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = sub_1B3D721B8();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13);
  OUTLINED_FUNCTION_8_9();
  sub_1B3C8D300();
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v0, *MEMORY[0x1E4FBCB48], v10);
  sub_1B3D727B8();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v10);
  sub_1B3D721C8();
  uint64_t v21[5] = MEMORY[0x1E4FBC860];
  sub_1B3CD1068((unint64_t *)&qword_1E9CE1910, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1CB0);
  sub_1B3C90040((unint64_t *)&qword_1E9CE1CB8, &qword_1E9CE1CB0);
  sub_1B3D728B8();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v1, *MEMORY[0x1E4FBCC58], v17);
  OUTLINED_FUNCTION_13_5();
  uint64_t v14 = (void *)sub_1B3D727A8();
  v21[2] = v14;
  id v15 = (_xpc_connection_s *)sub_1B3CC8FF4(v19, (uint64_t)v21, v18, v20);
  type metadata accessor for XPCConnection();
  swift_allocObject();
  swift_unknownObjectRetain();
  id v16 = v14;
  sub_1B3CC9680(v15, v16);
  xpc_connection_activate(v15);

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9();
}

xpc_connection_t sub_1B3CCB270@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  xpc_connection_t result = xpc_connection_create(a1, *(dispatch_queue_t *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_1B3CCB2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  void v5[6] = a3;
  long long v5[4] = a1;
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1B3CCB2D0()
{
  uint64_t v1 = sub_1B3C7EBE0(v0[5]);
  v0[9] = v1;
  uint64_t v2 = (void *)v1;
  uint64_t v3 = v0[8];
  uint64_t v17 = v0[7];
  uint64_t v4 = v0[6];
  xpc_object_t empty = xpc_dictionary_create_empty();
  v0[2] = empty;
  v0[3] = v4;
  swift_getMetatypeMetadata();
  sub_1B3D72278();
  sub_1B3D723B8();
  uint64_t v6 = sub_1B3D723C8();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1B3D723C8();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_string(empty, (const char *)(v6 + 32), (const char *)(v7 + 32));
  swift_release();
  swift_release();
  uint64_t v8 = sub_1B3D723C8();
  xpc_dictionary_set_value(empty, (const char *)(v8 + 32), v2);
  swift_release();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  void v9[2] = v4;
  v9[3] = v17;
  void v9[4] = v3;
  void v9[5] = v0 + 2;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  swift_getAssociatedTypeWitness();
  void *v10 = v0;
  v10[1] = sub_1B3CCB51C;
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188160](v11, v12, v13, 0x293A5F28646E6573, 0xE800000000000000, v14, v9, v15);
}

uint64_t sub_1B3CCB51C()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_11();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1B3CCB600()
{
  OUTLINED_FUNCTION_3();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_10_6();
  return v0();
}

uint64_t sub_1B3CCB660()
{
  OUTLINED_FUNCTION_3();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_9_1();
  return v0();
}

uint64_t sub_1B3CCB6CC(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  uint64_t v10 = sub_1B3D72508();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *a3;
  uint64_t v15 = *(NSObject **)(a2 + 24);
  xpc_connection_t v20 = *(xpc_connection_t *)(a2 + 16);
  dispatch_queue_t v21 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a4;
  *((void *)v17 + 3) = a5;
  *((void *)v17 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[v16], v13, v10);
  aBlock[4] = sub_1B3CD0C48;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1B3CC9134;
  aBlock[3] = &block_descriptor_4;
  uint64_t v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_connection_send_message_with_reply(v20, v14, v21, v18);
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

uint64_t sub_1B3CCB8F4(uint64_t a1)
{
  return sub_1B3CCB6CC(a1, *(void *)(v1 + 32), *(void ***)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1B3CCB900(void *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v10 - v7;
  swift_getAssociatedConformanceWitness();
  sub_1B3CCBF94(a1);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, AssociatedTypeWitness);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72508();
  sub_1B3D724F8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_1B3CCBAF0(uint64_t a1)
{
  uint64_t result = sub_1B3C7EBE0(a1);
  if (!v2)
  {
    xpc_object_t value = (xpc_object_t)result;
    xpc_object_t empty = xpc_dictionary_create_empty();
    swift_getMetatypeMetadata();
    sub_1B3D72278();
    sub_1B3D723B8();
    uint64_t v5 = sub_1B3D723C8();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1B3D723C8();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v5 + 32), (const char *)(v6 + 32));
    swift_release();
    swift_release();
    uint64_t v7 = sub_1B3D723C8();
    xpc_dictionary_set_value(empty, (const char *)(v7 + 32), value);
    swift_release();
    xpc_object_t v8 = xpc_connection_send_message_with_reply_sync(*(xpc_connection_t *)(v1 + 16), empty);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1B3CCBF94(v8);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B3CCBC90(uint64_t a1)
{
  uint64_t result = sub_1B3C7EBE0(a1);
  if (!v2)
  {
    uint64_t v4 = (void *)result;
    xpc_object_t empty = xpc_dictionary_create_empty();
    swift_getMetatypeMetadata();
    sub_1B3D72278();
    sub_1B3D723B8();
    uint64_t v6 = sub_1B3D723C8();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1B3D723C8();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v6 + 32), (const char *)(v7 + 32));
    swift_release();
    swift_release();
    uint64_t v8 = sub_1B3D723C8();
    xpc_dictionary_set_value(empty, (const char *)(v8 + 32), v4);
    swift_release();
    xpc_connection_send_message(*(xpc_connection_t *)(v1 + 16), empty);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B3CCBDAC()
{
  OUTLINED_FUNCTION_15_6();
  sub_1B3D723B8();
  uint64_t v0 = OUTLINED_FUNCTION_12_5();
  sub_1B3CCBE34(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_33_2();
  swift_retain();
  OUTLINED_FUNCTION_28_4();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void *sub_1B3CCBE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a4;
  v9[3] = a5;
  void v9[4] = a2;
  void v9[5] = a3;
  return &unk_1E9CE3A68;
}

uint64_t sub_1B3CCBE9C()
{
  OUTLINED_FUNCTION_15_6();
  sub_1B3D723B8();
  uint64_t v0 = OUTLINED_FUNCTION_12_5();
  sub_1B3CCBF24(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_33_2();
  swift_retain();
  OUTLINED_FUNCTION_28_4();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void *sub_1B3CCBF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a4;
  v9[3] = a5;
  void v9[4] = a2;
  void v9[5] = a3;
  return &unk_1E9CE3A50;
}

void sub_1B3CCBF8C()
{
  xpc_connection_cancel(*(xpc_connection_t *)(v0 + 16));
}

uint64_t sub_1B3CCBF94(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = MEMORY[0x1B3EC6600]();
  if (v4 == sub_1B3D720A8())
  {
    uint64_t v6 = sub_1B3D720F8();
    swift_unknownObjectRelease();
    if ((void *)v6 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        uint64_t v13 = sub_1B3D72408();
        uint64_t v15 = v14;
      }
      else
      {
        uint64_t v13 = 0;
        uint64_t v15 = 0;
      }
      sub_1B3CCF50C();
      OUTLINED_FUNCTION_4();
      uint64_t *v20 = v13;
      v20[1] = v15;
    }
    else
    {
      uint64_t v7 = sub_1B3D72108();
      swift_unknownObjectRelease();
      sub_1B3CCF50C();
      OUTLINED_FUNCTION_4();
      void *v8 = 0;
      if ((void *)v7 == a1) {
        uint64_t v9 = 1;
      }
      else {
        uint64_t v9 = 3;
      }
      v8[1] = v9;
    }
    return swift_willThrow();
  }
  if (v4 != sub_1B3D720E8())
  {
    sub_1B3CCF50C();
    OUTLINED_FUNCTION_4();
    *uint64_t v5 = xmmword_1B3D87460;
    return swift_willThrow();
  }
  uint64_t v10 = (const char *)(sub_1B3D723C8() + 32);
  uint64_t v11 = (void *)swift_unknownObjectRetain();
  xpc_object_t v12 = xpc_dictionary_get_value(v11, v10);
  swift_release();
  if (v12)
  {
    sub_1B3C7F078();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v16 = sub_1B3D723C8();
    BOOL v17 = xpc_dictionary_get_BOOL(a1, (const char *)(v16 + 32));
    swift_release();
    if (v17)
    {
      sub_1B3CCF50C();
      OUTLINED_FUNCTION_4();
      long long v19 = xmmword_1B3D87470;
    }
    else
    {
      uint64_t v22 = sub_1B3D723C8();
      xpc_object_t v23 = xpc_dictionary_get_value(a1, (const char *)(v22 + 32));
      swift_release();
      if (v23)
      {
        sub_1B3D72A18();
        swift_unknownObjectRetain();
        uint64_t v24 = MEMORY[0x1E4FBC860];
        uint64_t v25 = sub_1B3D72248();
        v27[3] = &unk_1F0C78AB8;
        v27[0] = v23;
        v27[1] = v24;
        v27[4] = sub_1B3C875CC();
        v27[2] = v25;
        sub_1B3CCDC78(v27, __src);
        if (!v2)
        {
          sub_1B3CD0AD0();
          OUTLINED_FUNCTION_4();
          memcpy(v26, __src, 0x70uLL);
          swift_willThrow();
        }
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
      sub_1B3CCF50C();
      OUTLINED_FUNCTION_4();
      long long v19 = xmmword_1B3D87460;
    }
    long long *v18 = v19;
    swift_willThrow();
  }
  return swift_unknownObjectRelease();
}

uint64_t XPCConnection.deinit()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B3C767E8(*(void *)(v0 + 112));
  sub_1B3C767E8(*(void *)(v0 + 128));
  return v0;
}

uint64_t XPCConnection.__deallocating_deinit()
{
  XPCConnection.deinit();
  return MEMORY[0x1F4186488](v0, 144, 7);
}

unint64_t XPCConnection.description.getter()
{
  xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  uint64_t v1 = swift_unknownObjectRetain();
  uint64_t v2 = MEMORY[0x1B3EC64A0](v1);
  sub_1B3D72408();
  MEMORY[0x1B3EC61A0](v2, -1, -1);
  swift_unknownObjectRelease();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  return 0xD000000000000013;
}

unint64_t sub_1B3CCC458()
{
  return XPCConnection.description.getter();
}

char *XPCConnection.debugDescription.getter()
{
  xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = (char *)sub_1B3CCF3B8(v1);
  swift_bridgeObjectRelease();
  uint64_t v6 = v2;
  sub_1B3CCF49C(&v6);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE20E0);
  sub_1B3C90040(&qword_1E9CE3A00, &qword_1E9CE20E0);
  sub_1B3D72328();
  swift_release();
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_1B3D72938();
  swift_bridgeObjectRelease();
  uint64_t v6 = (char *)0xD000000000000013;
  unint64_t v7 = 0x80000001B3D8A540;
  sub_1B3D72C58();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = MEMORY[0x1B3EC64A0](v3);
  sub_1B3D72408();
  MEMORY[0x1B3EC61A0](v4, -1, -1);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_16_3();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  sub_1B3D723F8();
  swift_bridgeObjectRelease();
  sub_1B3D723F8();
  return v6;
}

char *sub_1B3CCC698()
{
  return XPCConnection.debugDescription.getter();
}

uint64_t sub_1B3CCC6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  void v5[6] = a5;
  v5[3] = a2;
  long long v5[4] = a3;
  v5[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v5[10] = *(void *)(a4 - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B3CCC7F4, 0, 0);
}

uint64_t sub_1B3CCC7F4()
{
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_21_3();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_33_1();
    return v2();
  }
  else
  {
    unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(v1[3] + *(int *)v1[3]);
    uint64_t v4 = (void *)swift_task_alloc();
    v1[12] = v4;
    *uint64_t v4 = v1;
    v4[1] = sub_1B3CCC920;
    uint64_t v5 = v1[11];
    uint64_t v6 = v1[9];
    return v7(v6, v5);
  }
}

uint64_t sub_1B3CCC920()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_11();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v5 = v4;
  *(void *)(v6 + 104) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1B3CCC9FC()
{
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[5];
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = OUTLINED_FUNCTION_16_3();
  uint64_t v6 = sub_1B3C7EBE0(v5);
  uint64_t v7 = OUTLINED_FUNCTION_16_3();
  v8(v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  uint64_t v9 = swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  if (!v1) {
    uint64_t v9 = v6;
  }
  return v10(v9);
}

uint64_t sub_1B3CCCB08()
{
  OUTLINED_FUNCTION_3();
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_1();
  return v1();
}

uint64_t sub_1B3CCCB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  void v5[6] = a5;
  v5[3] = a2;
  long long v5[4] = a3;
  v5[2] = a1;
  v5[7] = *(void *)(a4 - 8);
  v5[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1B3CCCC44, 0, 0);
}

uint64_t sub_1B3CCCC44()
{
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_21_3();
  if (v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_33_1();
    return v2();
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))(v1[3] + *(int *)v1[3]);
    uint64_t v4 = (void *)swift_task_alloc();
    v1[9] = v4;
    *uint64_t v4 = v1;
    v4[1] = sub_1B3CCCD60;
    uint64_t v5 = v1[8];
    return v6(v5);
  }
}

uint64_t sub_1B3CCCD60()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_6_0();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1B3CCCE28()
{
  OUTLINED_FUNCTION_3();
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[5]);
  swift_task_dealloc();
  OUTLINED_FUNCTION_10_6();
  return v1();
}

unint64_t sub_1B3CCCE9C()
{
  return sub_1B3CCCEA4(*(void *)(v0 + 104));
}

unint64_t sub_1B3CCCEA4(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE3B30);
    uint64_t v2 = (void *)sub_1B3D72A98();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = sub_1B3D72278();
  int64_t v9 = 0;
  uint64_t v10 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        uint64_t v34 = (v5 - 1) & v5;
        unint64_t v12 = __clz(__rbit64(v5)) | (v9 << 6);
      }
      else
      {
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_34;
        }
        if (v13 >= v31)
        {
LABEL_31:
          sub_1B3CBE56C();
          return (unint64_t)v2;
        }
        unint64_t v14 = *(void *)(v32 + 8 * v13);
        int64_t v15 = v9 + 1;
        if (!v14)
        {
          int64_t v15 = v9 + 2;
          if (v9 + 2 >= v31) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v32 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v9 + 3;
            if (v9 + 3 >= v31) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v32 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v9 + 4;
              if (v9 + 4 >= v31) {
                goto LABEL_31;
              }
              unint64_t v14 = *(void *)(v32 + 8 * v15);
              if (!v14)
              {
                int64_t v16 = v9 + 5;
                if (v9 + 5 >= v31) {
                  goto LABEL_31;
                }
                unint64_t v14 = *(void *)(v32 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_35;
                    }
                    if (v15 >= v31) {
                      goto LABEL_31;
                    }
                    unint64_t v14 = *(void *)(v32 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v15 = v9 + 5;
              }
            }
          }
        }
LABEL_25:
        uint64_t v34 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        int64_t v9 = v15;
      }
      BOOL v17 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
      uint64_t v35 = *v17;
      uint64_t v36 = v17[1];
      sub_1B3D72278();
      sub_1B3D72278();
      swift_dynamicCast();
      sub_1B3C78C74(v6, v7);
      sub_1B3C78C74(v7, v40);
      sub_1B3C78C74(v40, &v38);
      unint64_t result = sub_1B3C93F04(v35, v36);
      unint64_t v18 = result;
      if ((v19 & 1) == 0) {
        break;
      }
      int64_t v33 = v9;
      xpc_connection_t v20 = v7;
      dispatch_queue_t v21 = v6;
      uint64_t v22 = v1;
      uint64_t v23 = v11;
      uint64_t v24 = v10;
      uint64_t v25 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v25 = v35;
      v25[1] = v36;
      uint64_t v10 = v24;
      uint64_t v11 = v23;
      uint64_t v1 = v22;
      uint64_t v6 = v21;
      uint64_t v7 = v20;
      int64_t v9 = v33;
      uint64_t v26 = (_OWORD *)(v2[7] + 32 * v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      unint64_t result = (unint64_t)sub_1B3C78C74(&v38, v26);
      unint64_t v5 = v34;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_1B3C78C74(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_33;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1B3CCD204()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_1B3D72278();
  return v1;
}

uint64_t sub_1B3CCD234()
{
  uint64_t v0 = MEMORY[0x1E4FBC868];
  uint64_t v38 = MEMORY[0x1E4FBC868];
  sub_1B3CC6CD8(v39);
  uint64_t v1 = v39[0];
  uint64_t v2 = v39[1];
  int64_t v40 = v39[3];
  unint64_t v3 = v39[4];
  int64_t v4 = (unint64_t)(v39[2] + 64) >> 6;
  uint64_t result = sub_1B3D72278();
  int64_t v29 = v4;
  for (i = v2; ; uint64_t v2 = i)
  {
    while (1)
    {
      if (v3)
      {
        unint64_t v6 = __clz(__rbit64(v3));
        v3 &= v3 - 1;
        unint64_t v7 = v6 | (v40 << 6);
      }
      else
      {
        int64_t v8 = v40 + 1;
        if (__OFADD__(v40, 1)) {
          goto LABEL_38;
        }
        if (v8 >= v4) {
          goto LABEL_36;
        }
        unint64_t v9 = *(void *)(v2 + 8 * v8);
        int64_t v10 = v40 + 1;
        if (!v9)
        {
          int64_t v10 = v40 + 2;
          if (v40 + 2 >= v4) {
            goto LABEL_36;
          }
          unint64_t v9 = *(void *)(v2 + 8 * v10);
          if (!v9)
          {
            int64_t v10 = v40 + 3;
            if (v40 + 3 >= v4) {
              goto LABEL_36;
            }
            unint64_t v9 = *(void *)(v2 + 8 * v10);
            if (!v9)
            {
              int64_t v10 = v40 + 4;
              if (v40 + 4 >= v4) {
                goto LABEL_36;
              }
              unint64_t v9 = *(void *)(v2 + 8 * v10);
              if (!v9)
              {
                int64_t v10 = v40 + 5;
                if (v40 + 5 >= v4) {
                  goto LABEL_36;
                }
                unint64_t v9 = *(void *)(v2 + 8 * v10);
                if (!v9)
                {
                  int64_t v11 = v40 + 6;
                  while (v11 < v4)
                  {
                    unint64_t v9 = *(void *)(v2 + 8 * v11++);
                    if (v9)
                    {
                      int64_t v10 = v11 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_36:
                  sub_1B3CBE56C();
                  return v0;
                }
              }
            }
          }
        }
LABEL_19:
        unint64_t v3 = (v9 - 1) & v9;
        unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
        int64_t v40 = v10;
      }
      unint64_t v12 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v7);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      sub_1B3C8D1E8(*(void *)(v1 + 56) + 32 * v7, (uint64_t)v37);
      *(void *)&long long v36 = v14;
      *((void *)&v36 + 1) = v13;
      long long v34 = v36;
      v35[0] = v37[0];
      v35[1] = v37[1];
      sub_1B3C8D1E8((uint64_t)v35, (uint64_t)v31);
      sub_1B3D72278();
      if (swift_dynamicCast()) {
        break;
      }
      long long v32 = 0uLL;
LABEL_27:
      sub_1B3C7CF30((uint64_t)&v34, &qword_1E9CE3AE8);
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v15 = *((void *)&v32 + 1);
    if (!*((void *)&v32 + 1)) {
      goto LABEL_27;
    }
    uint64_t v16 = v32;
    long long v17 = v34;
    long long v32 = v34;
    sub_1B3C78C74(v35, v33);
    unint64_t v18 = *(void *)(v0 + 16);
    if (*(void *)(v0 + 24) <= v18)
    {
      sub_1B3CCEA14(v18 + 1, 1);
      uint64_t v0 = v38;
    }
    sub_1B3D73108();
    sub_1B3D723E8();
    uint64_t result = sub_1B3D73138();
    uint64_t v19 = v0 + 64;
    uint64_t v20 = -1 << *(unsigned char *)(v0 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v0 + 64 + 8 * (v21 >> 6))) == 0) {
      break;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v0 + 64 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_35:
    *(void *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_OWORD *)(*(void *)(v0 + 48) + 16 * v23) = v17;
    uint64_t v28 = (void *)(*(void *)(v0 + 56) + 16 * v23);
    *uint64_t v28 = v16;
    v28[1] = v15;
    ++*(void *)(v0 + 16);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    int64_t v4 = v29;
  }
  char v24 = 0;
  unint64_t v25 = (unint64_t)(63 - v20) >> 6;
  while (++v22 != v25 || (v24 & 1) == 0)
  {
    BOOL v26 = v22 == v25;
    if (v22 == v25) {
      unint64_t v22 = 0;
    }
    v24 |= v26;
    uint64_t v27 = *(void *)(v19 + 8 * v22);
    if (v27 != -1)
    {
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1B3CCD598(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x80000001B3D89DE0 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B3D8A840 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x526572756C696166 && a2 == 0xED00006E6F736165;
    if (v5 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001B3D8A860 || (sub_1B3D72E58() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v6 = a1 == 0x68636E41706C6568 && a2 == 0xEA0000000000726FLL;
      if (v6 || (sub_1B3D72E58() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v7 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
        if (v7 || (sub_1B3D72E58() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v8 = a1 == 0x646F43726F727265 && a2 == 0xE900000000000065;
          if (v8 || (sub_1B3D72E58() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v10 = sub_1B3D72E58();
            swift_bridgeObjectRelease();
            if (v10) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1B3CCD8B8()
{
  return 8;
}

unint64_t sub_1B3CCD8C0(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x526572756C696166;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x68636E41706C6568;
      break;
    case 5:
      unint64_t result = 0x6E69616D6F64;
      break;
    case 6:
      unint64_t result = 0x646F43726F727265;
      break;
    case 7:
      unint64_t result = 0x6F666E4972657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B3CCD9E0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3AC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CD0B1C();
  sub_1B3D73178();
  LOBYTE(v11) = 0;
  sub_1B3D72BD8();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1B3D72BB8();
    LOBYTE(v11) = 2;
    sub_1B3D72BB8();
    LOBYTE(v11) = 3;
    sub_1B3D72BB8();
    LOBYTE(v11) = 4;
    sub_1B3D72BB8();
    LOBYTE(v11) = 5;
    sub_1B3D72BD8();
    LOBYTE(v11) = 6;
    sub_1B3D72BF8();
    uint64_t v11 = *(void *)(v3 + 104);
    v10[7] = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3A90);
    sub_1B3CD10B0(&qword_1E9CE3AD0);
    sub_1B3D72C18();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1B3CCDC78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3A80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B3CD0B1C();
  sub_1B3D73158();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v43) = 0;
  uint64_t v9 = sub_1B3D72B28();
  uint64_t v11 = v10;
  LOBYTE(v43) = 1;
  sub_1B3D72278();
  uint64_t v35 = sub_1B3D72B08();
  uint64_t v36 = v9;
  LOBYTE(v43) = 2;
  uint64_t v13 = v12;
  sub_1B3D72278();
  uint64_t v14 = sub_1B3D72B08();
  uint64_t v41 = v13;
  uint64_t v34 = v14;
  LOBYTE(v43) = 3;
  uint64_t v16 = v15;
  sub_1B3D72278();
  uint64_t v17 = sub_1B3D72B08();
  uint64_t v40 = v16;
  uint64_t v33 = v17;
  LOBYTE(v43) = 4;
  uint64_t v39 = v18;
  sub_1B3D72278();
  uint64_t v19 = sub_1B3D72B08();
  uint64_t v38 = v20;
  uint64_t v32 = v19;
  LOBYTE(v43) = 5;
  sub_1B3D72278();
  uint64_t v31 = sub_1B3D72B28();
  LOBYTE(v43) = 6;
  uint64_t v37 = v21;
  sub_1B3D72278();
  uint64_t v30 = sub_1B3D72B48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3A90);
  char v42 = 7;
  sub_1B3CD10B0(&qword_1E9CE3A98);
  sub_1B3D72B68();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v22 = v43;
  sub_1B3D72278();
  uint64_t v23 = v41;
  sub_1B3D72278();
  uint64_t v24 = v40;
  sub_1B3D72278();
  uint64_t v25 = v39;
  sub_1B3D72278();
  uint64_t v26 = v38;
  sub_1B3D72278();
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v27 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v36;
  a2[1] = v11;
  a2[2] = v35;
  a2[3] = v23;
  a2[4] = v34;
  a2[5] = v24;
  a2[6] = v33;
  a2[7] = v25;
  a2[8] = v32;
  a2[9] = v26;
  a2[10] = v31;
  a2[11] = v27;
  a2[12] = v30;
  a2[13] = v22;
  return result;
}

unint64_t sub_1B3CCE28C()
{
  return sub_1B3CCD8C0(*v0);
}

uint64_t sub_1B3CCE294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CCD598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CCE2BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3CCD8B8();
  *a1 = result;
  return result;
}

uint64_t sub_1B3CCE2E4(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD0B1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CCE320(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD0B1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CCE35C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1B3D72278();
  return v1;
}

uint64_t sub_1B3CCE38C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1B3D72278();
  return v1;
}

uint64_t sub_1B3CCE3BC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1B3D72278();
  return v1;
}

uint64_t sub_1B3CCE3EC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1B3D72278();
  return v1;
}

uint64_t sub_1B3CCE41C()
{
  return *(void *)(v0 + 96);
}

unint64_t sub_1B3CCE424()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1B3CCCE9C();
}

void *sub_1B3CCE460@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1B3CCDC78(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x70uLL);
  }
  return result;
}

uint64_t sub_1B3CCE4AC(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_1B3CCD9E0(a1);
}

uint64_t sub_1B3CCE500()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1B3CCD204();
}

uint64_t sub_1B3CCE53C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD17A8();
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1B3CCE578(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1B3D72A48();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1B3D72498();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1B3CCE614(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  int64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *int64_t v4 = v2;
  v4[1] = sub_1B3CCE6F0;
  return v6(a1);
}

uint64_t sub_1B3CCE6F0()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_11_0();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_10_6();
  return v3();
}

uint64_t sub_1B3CCE7B0(uint64_t a1, uint64_t a2)
{
  return sub_1B3CCE7F0(a1, a2, (uint64_t)&unk_1E9CE2088, MEMORY[0x1E4FBD360]);
}

uint64_t sub_1B3CCE7D0(uint64_t a1, uint64_t a2)
{
  return sub_1B3CCE7F0(a1, a2, (uint64_t)&unk_1E9CE1F40, MEMORY[0x1E4FBD330]);
}

uint64_t sub_1B3CCE7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_4_7();
  sub_1B3CCED24(a1, a2, v9, a3, a4, a4, v10, v11, v13, v14, v16, v17);
  *int64_t v4 = v15;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CCE87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_4_7();
  sub_1B3CCEE5C(a1, a2, a3);
  *uint64_t v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CCE8FC(char a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_4_7();
  sub_1B3CCEF88(a1, a2, a3);
  *uint64_t v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CCE97C()
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_4_7();
  sub_1B3CCF0AC();
  void *v0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CCEA14(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3AF0);
  char v40 = a2;
  uint64_t v6 = sub_1B3D72A88();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = (uint64_t *)(*(void *)(v5 + 56) + 16 * i);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    if ((v40 & 1) == 0)
    {
      sub_1B3D72278();
      sub_1B3D72278();
    }
    sub_1B3D73108();
    sub_1B3D723E8();
    uint64_t result = sub_1B3D73138();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v28);
        if (v33 != -1)
        {
          unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    uint64_t v34 = (void *)(*(void *)(v7 + 48) + 16 * v29);
    void *v34 = v22;
    v34[1] = v21;
    uint64_t v35 = (void *)(*(void *)(v7 + 56) + 16 * v29);
    void *v35 = v24;
    v35[1] = v25;
    ++*(void *)(v7 + 16);
    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_41;
    }
    if (v16 >= v38)
    {
      swift_release();
      uint64_t v3 = v37;
      uint64_t v17 = (void *)(v5 + 64);
      goto LABEL_34;
    }
    uint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v39 + 8 * v16);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v16 + 1;
      if (v16 + 1 >= v38) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v39 + 8 * v13);
      if (!v18) {
        break;
      }
    }
LABEL_18:
    unint64_t v10 = (v18 - 1) & v18;
  }
  int64_t v19 = v16 + 2;
  if (v19 < v38)
  {
    unint64_t v18 = *(void *)(v39 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v13 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_42;
        }
        if (v13 >= v38) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v39 + 8 * v13);
        ++v19;
        if (v18) {
          goto LABEL_18;
        }
      }
    }
    int64_t v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  uint64_t v3 = v37;
LABEL_34:
  if (v40)
  {
    uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
    if (v36 >= 64) {
      sub_1B3CC3164(0, (unint64_t)(v36 + 63) >> 6, v17);
    }
    else {
      void *v17 = -1 << v36;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1B3CCED24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_10();
  unint64_t v14 = v13;
  int64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_1B3C93F7C(v17);
  OUTLINED_FUNCTION_27_3();
  if (v23)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v24 = v21;
  char v25 = v22;
  __swift_instantiateConcreteTypeFromMangledName(v16);
  if ((sub_1B3D72A28() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v26 = sub_1B3C93F7C(v18);
  if ((v25 & 1) != (v27 & 1))
  {
LABEL_11:
    type metadata accessor for WFLogCategoryName(0);
    sub_1B3D73068();
    __break(1u);
    return;
  }
  unint64_t v24 = v26;
LABEL_5:
  if (v25)
  {
    v14(0);
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_9();
    v31(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12);
  }
  else
  {
    sub_1B3CCF1C8(v24, v18, v20, *v12);
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_1B3CCEE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B3C93F04(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE3A28);
  if ((sub_1B3D72A28() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_1B3C93F04(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    uint64_t result = sub_1B3D73068();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t result = swift_release();
    *(void *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_1B3CCF260(v11, a2, a3, a1, v15);
    return sub_1B3D72278();
  }
  return result;
}

uint64_t sub_1B3CCEF88(char a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1B3C93F04(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE1918);
  uint64_t result = sub_1B3D72A28();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = sub_1B3C93F04(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    uint64_t result = sub_1B3D73068();
    __break(1u);
    return result;
  }
  unint64_t v11 = result;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    *(unsigned char *)(v15[7] + v11) = a1 & 1;
  }
  else
  {
    sub_1B3CCF2A8(v11, a2, a3, a1 & 1, v15);
    return sub_1B3D72278();
  }
  return result;
}

void sub_1B3CCF0AC()
{
  OUTLINED_FUNCTION_10();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  sub_1B3C93F04(v5, v3);
  OUTLINED_FUNCTION_27_3();
  if (v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v11;
  char v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  if ((sub_1B3D72A28() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_1B3C93F04(v6, v4);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    sub_1B3D73068();
    __break(1u);
    return;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v0;
  if (v15)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v18 + 56) + 16 * v14);
    swift_release();
    uint64_t *v19 = v10;
    v19[1] = v8;
    OUTLINED_FUNCTION_9();
  }
  else
  {
    sub_1B3CCF334(v14, v6, v4, v10, v8, v18);
    OUTLINED_FUNCTION_9();
    sub_1B3D72278();
  }
}

uint64_t sub_1B3CCF1C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = OUTLINED_FUNCTION_25_5(a1, a4 + 8 * (a1 >> 6));
  *(void *)(*(void *)(v8 + 48) + 8 * v7) = v9;
  uint64_t v10 = *(void *)(v8 + 56);
  v11(0);
  OUTLINED_FUNCTION_13();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v12 + 32))(v10 + *(void *)(v12 + 72) * a1, a3);
  uint64_t v14 = *(void *)(a4 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(a4 + 16) = v16;
  }
  return result;
}

unint64_t sub_1B3CCF260(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1B3CCF2A8(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(unsigned char *)(a5[7] + result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1B3CCF2F4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = OUTLINED_FUNCTION_25_5(a1, a5 + 8 * (a1 >> 6));
  BOOL v7 = (void *)(v6[6] + 16 * result);
  void *v7 = v8;
  v7[1] = v9;
  *(void *)(v6[7] + 8 * result) = v10;
  uint64_t v11 = v6[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    id v6[2] = v13;
  }
  return result;
}

uint64_t sub_1B3CCF334(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = OUTLINED_FUNCTION_25_5(a1, a6 + 8 * (a1 >> 6));
  uint64_t v8 = (void *)(v7[6] + 16 * result);
  void *v8 = v9;
  v8[1] = v10;
  uint64_t v11 = (void *)(v7[7] + 16 * result);
  void *v11 = v12;
  v11[1] = v13;
  uint64_t v14 = v7[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    void v7[2] = v16;
  }
  return result;
}

uint64_t sub_1B3CCF378(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (!v3) {
    return v5;
  }
  return result;
}

void *sub_1B3CCF3B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2920);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  uint64_t v5 = sub_1B3CD0670((uint64_t)&v7, v3 + 4, v1, a1);
  sub_1B3D72278();
  sub_1B3CBE56C();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1B3CCF49C(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1B3CD0870((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_1B3CCFC8C(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1B3CCF50C()
{
  unint64_t result = qword_1E9CE3A08;
  if (!qword_1E9CE3A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3A08);
  }
  return result;
}

unint64_t destroy for XPCConnectionError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s19VoiceShortcutClient18XPCConnectionErrorOwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    sub_1B3D72278();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for XPCConnectionError(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1B3D72278();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B3D72278();
  return a1;
}

void *assignWithTake for XPCConnectionError(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCConnectionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for XPCConnectionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_1B3CCF7B8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_1B3CCF7DC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    void *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCConnectionError()
{
  return &type metadata for XPCConnectionError;
}

uint64_t method lookup function for XPCConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for XPCConnection);
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of XPCConnection.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 264)
                                                                   + **(int **)(*(void *)v4 + 264));
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_4_0(v9);
  void *v10 = v11;
  v10[1] = sub_1B3CA9E80;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of XPCConnection.send<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of XPCConnection.handle<A>(_:handler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of XPCConnection.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

ValueMetadata *type metadata accessor for XPCMessageHandlerNoReply()
{
  return &type metadata for XPCMessageHandlerNoReply;
}

void *initializeBufferWithCopyOfBuffer for XPCMessageHandler(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for XPCMessageHandler()
{
  return swift_release();
}

void *_s19VoiceShortcutClient17XPCMessageHandlerVwca_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for XPCMessageHandler(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for XPCMessageHandler()
{
  return &type metadata for XPCMessageHandler;
}

uint64_t sub_1B3CCFC04()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1B3CCFC3C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B3CCFC64()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1B3CCFC8C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1B3D72C48();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1B3CD02F4(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = sub_1B3CCE578(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  char v97 = v6;
  uint64_t v93 = a1;
  if (v3 <= 0)
  {
    uint64_t v98 = MEMORY[0x1E4FBC860];
    unint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)(v98 + 32 + 16 * v86);
      uint64_t v89 = *(void *)(v98 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = sub_1B3CD03BC((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)(v98 + 32 + 16 * (v31 - 1))), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1B3CD065C(v98);
        uint64_t v87 = result;
      }
      if (v86 >= *(void *)(v87 + 16)) {
        goto LABEL_140;
      }
      uint64_t v90 = (void *)(v87 + 32 + 16 * v86);
      void *v90 = v88;
      v90[1] = v89;
      unint64_t v91 = *(void *)(v87 + 16);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove((void *)(v87 + 32 + 16 * (v31 - 1)), (const void *)(v87 + 32 + 16 * v31), 16 * (v91 - v31));
      uint64_t v98 = v87;
      *(void *)(v87 + 16) = v91 - 1;
      unint64_t v31 = v91 - 1;
      uint64_t v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  uint64_t v98 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        char v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_1B3D72E58();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        uint64_t v19 = v15 + 1;
        uint64_t v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_1B3D72E58();
    int v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    uint64_t v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    uint64_t v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      uint64_t v27 = v3;
    }
    else {
      uint64_t v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      uint64_t v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      uint64_t v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        uint64_t v82 = v9;
        uint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = sub_1B3D72E58();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)uint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      uint64_t v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1B3CD0564(0, *(void *)(v28 + 16) + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    unint64_t v30 = *(void *)(v28 + 16);
    unint64_t v29 = *(void *)(v28 + 24);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_1B3CD0564((char *)(v29 > 1), v30 + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    *(void *)(v28 + 16) = v31;
    uint64_t v32 = v28 + 32;
    uint64_t v33 = (uint64_t *)(v28 + 32 + 16 * v30);
    uint64_t *v33 = v9;
    v33[1] = v7;
    uint64_t v98 = v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    uint64_t v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        uint64_t v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v28 + 32);
        uint64_t v64 = *(void *)(v28 + 40);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *(void *)(v28 + 32);
      uint64_t v35 = *(void *)(v28 + 40);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    BOOL v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    uint64_t v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v74 = (uint64_t *)(v32 + 16 * v73);
    uint64_t v75 = *v74;
    uint64_t v76 = (void *)(v32 + 16 * v34);
    uint64_t v77 = v76[1];
    uint64_t result = sub_1B3CD03BC((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *(void *)(v98 + 16)) {
      goto LABEL_125;
    }
    uint64_t *v74 = v75;
    *(void *)(v32 + 16 * v73 + 8) = v77;
    unint64_t v78 = *(void *)(v98 + 16);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    uint64_t v28 = v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v76 + 2, 16 * (v78 - 1 - v34));
    *(void *)(v98 + 16) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CD02F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = sub_1B3D72E58();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1B3CD03BC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_1B3C93320(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 16;
      uint64_t v20 = (char *)(v12 - 16);
      BOOL v21 = *(void *)(v12 - 16) == *((void *)v6 - 2) && *(void *)(v12 - 8) == *((void *)v6 - 1);
      if (v21 || (sub_1B3D72E58() & 1) == 0)
      {
        BOOL v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_47;
      }
    }
  }
  sub_1B3C93320(a1, (a2 - a1) / 16, a4);
  unint64_t v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_1B3D72E58() & 1) != 0) {
        break;
      }
      uint64_t v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    uint64_t v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_1B3C93320(v4, (uint64_t)(v12 - (void)v4) / 16, v6);
  return 1;
}

char *sub_1B3CD0564(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3A38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1B3CD065C(uint64_t a1)
{
  return sub_1B3CD0564(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1B3CD0670(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  char v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *char v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    long long v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  size_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_1B3D72278();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_1B3D72278();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

char *sub_1B3CD0870(uint64_t a1)
{
  return sub_1B3C93B64(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1B3CD0884()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1B3CD08BC()
{
  OUTLINED_FUNCTION_36_1();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B3CAECCC;
  uint64_t v2 = OUTLINED_FUNCTION_19_6();
  return sub_1B3CCCB88(v2, v3, v4, v5, v6);
}

uint64_t sub_1B3CD0960()
{
  OUTLINED_FUNCTION_36_1();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1B3CD0A04;
  uint64_t v2 = OUTLINED_FUNCTION_19_6();
  return sub_1B3CCC6BC(v2, v3, v4, v5, v6);
}

uint64_t sub_1B3CD0A04()
{
  OUTLINED_FUNCTION_3();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_11_0();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_5_5();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

unint64_t sub_1B3CD0AD0()
{
  unint64_t result = qword_1E9CE3A78;
  if (!qword_1E9CE3A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3A78);
  }
  return result;
}

unint64_t sub_1B3CD0B1C()
{
  unint64_t result = qword_1E9CE3A88;
  if (!qword_1E9CE3A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3A88);
  }
  return result;
}

uint64_t sub_1B3CD0B68()
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  uint64_t v1 = sub_1B3D72508();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x1F4186498](v0, v8, v9);
}

uint64_t sub_1B3CD0C48(void *a1)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB4FA680);
  sub_1B3D72508();
  return sub_1B3CCB900(a1);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void *sub_1B3CD0D30@<X0>(void *a1@<X8>)
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1B3CD0D74()
{
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1B3CD0DB4(void *a1)
{
  sub_1B3CC9840(a1, *(void **)(v1 + 16), *(_xpc_connection_s **)(v1 + 24));
}

uint64_t sub_1B3CD0DBC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1B3CD0E04()
{
  OUTLINED_FUNCTION_36_1();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_4_0(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1B3CA9E80;
  uint64_t v5 = OUTLINED_FUNCTION_18_6();
  return sub_1B3CCA72C(v5, v6, v7, v8, v9, v1);
}

uint64_t sub_1B3CD0EAC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1B3CD0F0C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_4_0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1B3CAECCC;
  uint64_t v7 = OUTLINED_FUNCTION_18_6();
  return sub_1B3CC9D94(v7, v8, v9, v10, v11, v1, v2, v3);
}

uint64_t sub_1B3CD0FDC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1B3CD1068(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B3CD10B0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE3A90);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B3CD1114()
{
  OUTLINED_FUNCTION_12_3();
  uint64_t v2 = v1;
  uint64_t v3 = *(int **)(v0 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_4_0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1B3CAECCC;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E9CE3AF8 + dword_1E9CE3AF8);
  return v7(v2, v3);
}

uint64_t getEnumTagSinglePayload for XPCRemoteError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for XPCRemoteError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    void *result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CD1314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCRemoteError.CodingKeys()
{
  return &type metadata for XPCRemoteError.CodingKeys;
}

uint64_t destroy for XPCRemoteError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for XPCRemoteError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  sub_1B3D72278();
  sub_1B3D72278();
  sub_1B3D72278();
  sub_1B3D72278();
  sub_1B3D72278();
  sub_1B3D72278();
  sub_1B3D72278();
  return a1;
}

void *assignWithCopy for XPCRemoteError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

void *assignWithTake for XPCRemoteError(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCRemoteError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCRemoteError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCRemoteError()
{
  return &type metadata for XPCRemoteError;
}

unint64_t sub_1B3CD16BC()
{
  unint64_t result = qword_1E9CE3B10;
  if (!qword_1E9CE3B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3B10);
  }
  return result;
}

unint64_t sub_1B3CD170C()
{
  unint64_t result = qword_1E9CE3B18;
  if (!qword_1E9CE3B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3B18);
  }
  return result;
}

unint64_t sub_1B3CD175C()
{
  unint64_t result = qword_1E9CE3B20;
  if (!qword_1E9CE3B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3B20);
  }
  return result;
}

unint64_t sub_1B3CD17A8()
{
  unint64_t result = qword_1E9CE3B28;
  if (!qword_1E9CE3B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3B28);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  return sub_1B3D730E8();
}

uint64_t OUTLINED_FUNCTION_15_6()
{
  return swift_getMetatypeMetadata();
}

uint64_t OUTLINED_FUNCTION_18_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return sub_1B3C7F078();
}

uint64_t OUTLINED_FUNCTION_25_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 64) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return sub_1B3CCE97C();
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return swift_beginAccess();
}

uint64_t sub_1B3CD1938()
{
  return sub_1B3CD1D10();
}

uint64_t sub_1B3CD1944()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD197C()
{
  return OUTLINED_FUNCTION_24_4();
}

uint64_t sub_1B3CD1998()
{
  return sub_1B3CD1DE0();
}

uint64_t sub_1B3CD19A4()
{
  return sub_1B3CD1C9C();
}

uint64_t sub_1B3CD19B0()
{
  return OUTLINED_FUNCTION_24_4();
}

uint64_t sub_1B3CD19CC()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD1A14()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD1A5C()
{
  sub_1B3D723E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CD1AC0()
{
  return OUTLINED_FUNCTION_21_4();
}

uint64_t sub_1B3CD1ADC()
{
  sub_1B3D723E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CD1B30()
{
  sub_1B3D723E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CD1B90()
{
  return OUTLINED_FUNCTION_21_4();
}

uint64_t sub_1B3CD1BAC()
{
  sub_1B3D723E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B3CD1C00()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD1C3C()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD1C80()
{
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_1B3CD1C9C()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD1D10()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD1D78()
{
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_1B3CD1D94()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD1DE0()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD1E58@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1B3CDABBC(v1, (uint64_t)v10);
  char v4 = v13;
  if (v13)
  {
    uint64_t v5 = 0;
    uint64_t v7 = *((void *)&v10[0] + 1);
    uint64_t v6 = *(void *)&v10[0];
  }
  else
  {
    uint64_t v7 = v11;
    uint64_t v5 = v12;
    sub_1B3C87FF8(v10, (uint64_t)v9);
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_1B3D719B8();
    sub_1B3C78E5C(0, &qword_1E9CE3C98);
    swift_dynamicCast();
    uint64_t v6 = v8;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v4;
  return result;
}

BOOL static Recurrence.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v4 = *a2;
  int v5 = *((unsigned __int8 *)a2 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    uint64_t v7 = *(void **)a1;
    if (!*((unsigned char *)a2 + 8))
    {
      BOOL v9 = sub_1B3CD209C(v7, (void *)*a2);
      sub_1B3CD207C(v4, 0);
      sub_1B3CD207C(v2, 0);
      sub_1B3CD208C(v2, 0);
      sub_1B3CD208C(v4, 0);
      return v9;
    }
    sub_1B3D72278();
    goto LABEL_19;
  }
  if (v3 != 1)
  {
    if (v2)
    {
      if (v5 == 2 && v4 == 1)
      {
        uint64_t v6 = 1;
        sub_1B3CD208C(1, 2);
        sub_1B3CD208C(1, 2);
        return v6;
      }
    }
    else if (v5 == 2 && v4 == 0)
    {
      sub_1B3CD208C(0, 2);
      sub_1B3CD208C(0, 2);
      return 1;
    }
LABEL_19:
    sub_1B3CD207C(v4, v5);
    sub_1B3CD208C(v2, v3);
    sub_1B3CD208C(v4, v5);
    return 0;
  }
  if (v5 != 1) {
    goto LABEL_19;
  }
  sub_1B3CD208C(*(void *)a1, 1);
  sub_1B3CD208C(v4, 1);
  return v2 == v4;
}

uint64_t sub_1B3CD207C(uint64_t a1, char a2)
{
  if (!a2) {
    return sub_1B3D72278();
  }
  return result;
}

uint64_t sub_1B3CD208C(uint64_t a1, char a2)
{
  if (!a2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1B3CD209C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  int v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t TimeOfDayTrigger.isOneTime.getter()
{
  return *v0;
}

uint64_t TimeOfDayTrigger.components.getter()
{
  return sub_1B3CD33F4();
}

uint64_t type metadata accessor for TimeOfDayTrigger(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE3CD8);
}

uint64_t TimeOfDayTrigger.init(recurrence:components:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TimeOfDayTrigger(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_16();
  uint64_t v7 = *(void *)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1)
    {
      char v8 = 1;
    }
    else
    {
      if (!v7)
      {
        sub_1B3CD208C(0, 2);
        char v9 = 1;
        goto LABEL_8;
      }
      uint64_t v7 = 1;
      char v8 = 2;
    }
  }
  else
  {
    char v8 = 0;
  }
  sub_1B3CD208C(v7, v8);
  char v9 = 0;
LABEL_8:
  sub_1B3CD208C(0, 2);
  *uint64_t v2 = v9;
  sub_1B3D71C68();
  if (v10 & 1) != 0 || (sub_1B3D71C78(), (v11))
  {
    sub_1B3D71C88();
    OUTLINED_FUNCTION_13();
    OUTLINED_FUNCTION_32();
    v15();
    uint64_t v16 = OUTLINED_FUNCTION_44_2();
    return __swift_storeEnumTagSinglePayload(v16, v17, v18, v19);
  }
  else
  {
    BOOL v12 = &v2[*(int *)(v5 + 20)];
    sub_1B3D71C88();
    OUTLINED_FUNCTION_13();
    (*(void (**)(char *, uint64_t))(v13 + 32))(v12, a2);
    sub_1B3CD62DC();
    OUTLINED_FUNCTION_43_2();
    return sub_1B3CD6330((uint64_t)v2, (void (*)(void))type metadata accessor for TimeOfDayTrigger);
  }
}

uint64_t TimeOfDayTrigger.asTriggerType()()
{
  return sub_1B3CD3CF8();
}

uint64_t type metadata accessor for TriggerType(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE3D10);
}

uint64_t sub_1B3CD233C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6D6954656E4F7369 && a2 == 0xE900000000000065;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3CD2434(char a1)
{
  if (a1) {
    return 0x6E656E6F706D6F63;
  }
  else {
    return 0x6D6954656E4F7369;
  }
}

uint64_t sub_1B3CD2478()
{
  return sub_1B3CD2434(*v0);
}

uint64_t sub_1B3CD2480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CD233C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CD24A8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD2654();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD24E4(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD2654();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t TimeOfDayTrigger.encode(to:)()
{
  OUTLINED_FUNCTION_28_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3B40);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_9_7();
  sub_1B3CD2654();
  OUTLINED_FUNCTION_45();
  sub_1B3D72BE8();
  if (!v0)
  {
    type metadata accessor for TimeOfDayTrigger(0);
    OUTLINED_FUNCTION_36_3();
    sub_1B3D71C88();
    sub_1B3CD2918(&qword_1E9CE3B50, MEMORY[0x1E4F26F90]);
    OUTLINED_FUNCTION_19_7();
  }
  OUTLINED_FUNCTION_51_0();
  return v2();
}

unint64_t sub_1B3CD2654()
{
  unint64_t result = qword_1E9CE3B48;
  if (!qword_1E9CE3B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3B48);
  }
  return result;
}

void TimeOfDayTrigger.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v5 = v4;
  uint64_t v14 = sub_1B3D71C88();
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v6;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_35_0();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3B58);
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_5_3();
  uint64_t v10 = type metadata accessor for TimeOfDayTrigger(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v11);
  OUTLINED_FUNCTION_8();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1B3CD2654();
  sub_1B3D73158();
  if (!v0)
  {
    *uint64_t v1 = sub_1B3D72B38() & 1;
    sub_1B3CD2918(&qword_1E9CE3B60, MEMORY[0x1E4F26F90]);
    sub_1B3D72B68();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v15);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 32))(&v1[*(int *)(v10 + 20)], v3, v14);
    sub_1B3CD623C();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3CD2918(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1B3CD2968()
{
}

uint64_t sub_1B3CD2980()
{
  return TimeOfDayTrigger.encode(to:)();
}

BOOL static LocationTrigger.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LocationTrigger.State.hash(into:)()
{
  return sub_1B3D73118();
}

uint64_t sub_1B3CD29DC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1952867692 && a2 == 0xE400000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657265746E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3CD2AB4(char a1)
{
  if (a1) {
    return 0x64657265746E65;
  }
  else {
    return 1952867692;
  }
}

uint64_t sub_1B3CD2AE4()
{
  return sub_1B3CD2AB4(*v0);
}

uint64_t sub_1B3CD2AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CD29DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CD2B14(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD2E48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD2B50(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD2E48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CD2B8C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD2E94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD2BC8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD2E94();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CD2C04(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD2EE0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD2C40(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD2EE0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void LocationTrigger.State.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  BOOL v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3B68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_23_6(v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3B70);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_35_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3B78);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_5_3();
  char v11 = *v0;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CD2E48();
  sub_1B3D73178();
  uint64_t v12 = (void (**)(uint64_t, uint64_t))(v9 + 8);
  if (v11) {
    sub_1B3CD2E94();
  }
  else {
    sub_1B3CD2EE0();
  }
  OUTLINED_FUNCTION_16_4();
  OUTLINED_FUNCTION_32();
  v14(v13);
  (*v12)(v1, v7);
  OUTLINED_FUNCTION_26();
}

unint64_t sub_1B3CD2E48()
{
  unint64_t result = qword_1E9CE3B80;
  if (!qword_1E9CE3B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3B80);
  }
  return result;
}

unint64_t sub_1B3CD2E94()
{
  unint64_t result = qword_1E9CE3B88;
  if (!qword_1E9CE3B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3B88);
  }
  return result;
}

unint64_t sub_1B3CD2EE0()
{
  unint64_t result = qword_1E9CE3B90;
  if (!qword_1E9CE3B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3B90);
  }
  return result;
}

uint64_t LocationTrigger.State.hashValue.getter()
{
  return sub_1B3D73138();
}

void LocationTrigger.State.init(from:)()
{
  OUTLINED_FUNCTION_21();
  BOOL v3 = v2;
  BOOL v23 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3B98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3BA0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_33_0();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3BA8);
  OUTLINED_FUNCTION_0();
  uint64_t v24 = v8;
  MEMORY[0x1F4188790](v9);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_49_1(v3);
  sub_1B3CD2E48();
  OUTLINED_FUNCTION_42_2();
  if (v0) {
    goto LABEL_6;
  }
  uint64_t v25 = (uint64_t)v3;
  uint64_t v10 = sub_1B3D72B78();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11
    || (char v12 = *(unsigned char *)(v10 + 32),
        sub_1B3CA40D4(1, v11, v10, v10 + 32, 0, (2 * v11) | 1),
        uint64_t v14 = v13,
        unint64_t v16 = v15,
        swift_bridgeObjectRelease(),
        v14 != v16 >> 1))
  {
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    void *v18 = &type metadata for LocationTrigger.State;
    sub_1B3D72AF8();
    sub_1B3D72978();
    uint64_t v19 = OUTLINED_FUNCTION_46_1();
    v20(v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_32();
    v21();
    BOOL v3 = (void *)v25;
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    goto LABEL_7;
  }
  sub_1B3CD2E94();
  sub_1B3D72AE8();
  OUTLINED_FUNCTION_32();
  v22();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v1, v7);
  unsigned char *v23 = v12;
  __swift_destroy_boxed_opaque_existential_1(v25);
LABEL_7:
  OUTLINED_FUNCTION_26();
}

void sub_1B3CD3350()
{
}

void sub_1B3CD3368()
{
}

uint64_t LocationTrigger.TimeRange.start.getter()
{
  OUTLINED_FUNCTION_41_0();
  sub_1B3D71C88();
  OUTLINED_FUNCTION_13();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  return v4(v0, v1, v2);
}

uint64_t LocationTrigger.TimeRange.end.getter()
{
  return sub_1B3CD33F4();
}

uint64_t sub_1B3CD33F4()
{
  uint64_t v2 = OUTLINED_FUNCTION_41_0();
  uint64_t v4 = v1 + *(int *)(v3(v2) + 20);
  sub_1B3D71C88();
  OUTLINED_FUNCTION_13();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  return v7(v0, v4, v5);
}

uint64_t LocationTrigger.TimeRange.init(start:end:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LocationTrigger.TimeRange(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v6);
  OUTLINED_FUNCTION_17();
  sub_1B3D71C78();
  if ((v7 & 1) != 0
    || (sub_1B3D71C68(), (v8 & 1) != 0)
    || (sub_1B3D71C78(), (v9 & 1) != 0)
    || (sub_1B3D71C68(), (v10 & 1) != 0))
  {
    uint64_t v15 = sub_1B3D71C88();
    OUTLINED_FUNCTION_13();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v17(a2, v15);
    v17(a1, v15);
    uint64_t v18 = OUTLINED_FUNCTION_44_2();
    return __swift_storeEnumTagSinglePayload(v18, v19, v20, v21);
  }
  else
  {
    uint64_t v11 = sub_1B3D71C88();
    OUTLINED_FUNCTION_13();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
    v13(v2, a1, v11);
    v13(v2 + *(int *)(v5 + 20), a2, v11);
    sub_1B3CD623C();
    return OUTLINED_FUNCTION_43_2();
  }
}

uint64_t sub_1B3CD3600(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581861 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3CD36D0(char a1)
{
  if (a1) {
    return 6581861;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_1B3CD36FC()
{
  return sub_1B3CD36D0(*v0);
}

uint64_t sub_1B3CD3704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CD3600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CD372C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6290();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD3768(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6290();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LocationTrigger.TimeRange.encode(to:)()
{
  OUTLINED_FUNCTION_28_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3BB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_9_7();
  sub_1B3CD6290();
  OUTLINED_FUNCTION_45();
  sub_1B3D71C88();
  sub_1B3CD2918(&qword_1E9CE3B50, MEMORY[0x1E4F26F90]);
  OUTLINED_FUNCTION_34_2();
  if (!v0)
  {
    type metadata accessor for LocationTrigger.TimeRange(0);
    OUTLINED_FUNCTION_34_2();
  }
  OUTLINED_FUNCTION_51_0();
  return v2();
}

void LocationTrigger.TimeRange.init(from:)()
{
  OUTLINED_FUNCTION_21();
  BOOL v3 = v2;
  uint64_t v22 = v4;
  sub_1B3D71C88();
  OUTLINED_FUNCTION_0();
  uint64_t v26 = v6;
  uint64_t v27 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  BOOL v23 = (char *)&v20 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3BC0);
  OUTLINED_FUNCTION_0();
  uint64_t v24 = v11;
  uint64_t v25 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = OUTLINED_FUNCTION_8_10();
  uint64_t v14 = type metadata accessor for LocationTrigger.TimeRange(v13);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v15);
  OUTLINED_FUNCTION_5_3();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CD6290();
  sub_1B3D73158();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    uint64_t v20 = v14;
    uint64_t v21 = v1;
    uint64_t v16 = v26;
    sub_1B3CD2918(&qword_1E9CE3B60, MEMORY[0x1E4F26F90]);
    uint64_t v17 = v23;
    sub_1B3D72B68();
    BOOL v23 = *(char **)(v16 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v23)(v21, v17, v27);
    sub_1B3D72B68();
    OUTLINED_FUNCTION_32();
    v18();
    uint64_t v19 = v21;
    ((void (*)(uint64_t, char *, uint64_t))v23)(v21 + *(int *)(v20 + 20), v9, v27);
    sub_1B3CD62DC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    sub_1B3CD6330(v19, (void (*)(void))type metadata accessor for LocationTrigger.TimeRange);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1B3CD3BF8()
{
}

uint64_t sub_1B3CD3C10()
{
  return LocationTrigger.TimeRange.encode(to:)();
}

uint64_t LocationTrigger.isOneTime.getter()
{
  return *v0;
}

id LocationTrigger.region.getter()
{
  return *(id *)(v0 + 8);
}

void LocationTrigger.state.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t LocationTrigger.timeRange.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_41_0();
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LocationTrigger(v2) + 28);
  return sub_1B3CD63A4(v3, v0);
}

uint64_t LocationTrigger.init(isOneTime:region:state:timeRange:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7 = *a3;
  *(unsigned char *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = v7;
  uint64_t v8 = a5 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
  return sub_1B3CD640C(a4, v8);
}

uint64_t LocationTrigger.asTriggerType()()
{
  return sub_1B3CD3CF8();
}

uint64_t sub_1B3CD3CF8()
{
  sub_1B3CD62DC();
  type metadata accessor for TriggerType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1B3CD3D50()
{
  unint64_t v0 = sub_1B3D72AC8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1B3CD3DA0(char a1)
{
  return *(void *)&aIsonetimregion_0[8 * a1];
}

uint64_t sub_1B3CD3DC0(char *a1, char *a2)
{
  return sub_1B3C72DD4(*a1, *a2);
}

uint64_t sub_1B3CD3DCC()
{
  return sub_1B3CD1A14();
}

uint64_t sub_1B3CD3DD4()
{
  return sub_1B3CD1BAC();
}

uint64_t sub_1B3CD3DDC()
{
  return sub_1B3CD1C3C();
}

uint64_t sub_1B3CD3DE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3CD3D50();
  *a1 = result;
  return result;
}

uint64_t sub_1B3CD3E14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1B3CD3DA0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B3CD3E40()
{
  return sub_1B3CD3DA0(*v0);
}

uint64_t sub_1B3CD3E48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1B3CD3D9C();
  *a1 = result;
  return result;
}

void sub_1B3CD3E70(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1B3CD3E7C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6474();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD3EB8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6474();
  return MEMORY[0x1F41862B0](a1, v2);
}

void LocationTrigger.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
  MEMORY[0x1F4188790](v4 - 8);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3BC8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_8_10();
  uint64_t v7 = type metadata accessor for LocationTrigger(v6);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_22();
  uint64_t v10 = v9;
  uint64_t v18 = (uint64_t)v3;
  OUTLINED_FUNCTION_49_1(v3);
  sub_1B3CD6474();
  sub_1B3D73158();
  if (!v1)
  {
    LOBYTE(v19) = 0;
    *(unsigned char *)uint64_t v10 = sub_1B3D72B38() & 1;
    sub_1B3C7D440();
    OUTLINED_FUNCTION_40_3();
    sub_1B3D72B68();
    sub_1B3C78E5C(0, (unint64_t *)&unk_1E9CE2570);
    sub_1B3C78E5C(0, &qword_1E9CE3BD8);
    uint64_t v13 = sub_1B3D72778();
    uint64_t v14 = (void *)v13;
    if (v13)
    {
      *(void *)(v10 + 8) = v13;
      sub_1B3CD64C0();
      id v17 = v14;
      OUTLINED_FUNCTION_40_3();
      sub_1B3D72B68();
      *(unsigned char *)(v10 + 16) = 0;
      type metadata accessor for LocationTrigger.TimeRange(0);
      sub_1B3CD2918(&qword_1E9CE3BF0, (void (*)(uint64_t))type metadata accessor for LocationTrigger.TimeRange);
      sub_1B3D72B18();
      uint64_t v15 = OUTLINED_FUNCTION_4_8();
      v16(v15);
      sub_1B3C7532C(v19, v20);

      sub_1B3CD640C(v0, v10 + *(int *)(v7 + 28));
      sub_1B3CD62DC();
      __swift_destroy_boxed_opaque_existential_1(v18);
      sub_1B3CD6330(v10, (void (*)(void))type metadata accessor for LocationTrigger);
      goto LABEL_4;
    }
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    sub_1B3CD672C(&qword_1E9CE3BE0, &qword_1E9CE3BC8);
    sub_1B3D72968();
    swift_willThrow();
    sub_1B3C7532C(v19, v20);
    uint64_t v11 = OUTLINED_FUNCTION_4_8();
    v12(v11);
  }
  __swift_destroy_boxed_opaque_existential_1(v18);
LABEL_4:
  OUTLINED_FUNCTION_26();
}

void LocationTrigger.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v2 = v0;
  void v14[2] = *(id *)MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3BF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_9_7();
  sub_1B3CD6474();
  sub_1B3D73178();
  LOBYTE(v14[0]) = 0;
  sub_1B3D72BE8();
  if (v1) {
    goto LABEL_2;
  }
  uint64_t v5 = self;
  uint64_t v6 = *(void *)(v0 + 8);
  v14[0] = 0;
  id v7 = objc_msgSend(v5, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v6, 1, v14);
  id v8 = v14[0];
  if (!v7)
  {
    uint64_t v13 = v8;
    sub_1B3D71D38();

    swift_willThrow();
LABEL_2:
    OUTLINED_FUNCTION_51_0();
    v4();
    goto LABEL_8;
  }
  uint64_t v9 = (void *)sub_1B3D71DF8();
  uint64_t v11 = v10;

  v14[0] = v9;
  v14[1] = v11;
  sub_1B3C7D5B0();
  OUTLINED_FUNCTION_35_3();
  LOBYTE(v14[0]) = *(unsigned char *)(v2 + 16);
  sub_1B3CD650C();
  OUTLINED_FUNCTION_35_3();
  type metadata accessor for LocationTrigger(0);
  LOBYTE(v14[0]) = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
  sub_1B3CD6558();
  sub_1B3D72C18();
  OUTLINED_FUNCTION_51_0();
  v12();
  sub_1B3C7532C((uint64_t)v9, (unint64_t)v11);
LABEL_8:
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1B3CD4594(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3CD466C(char a1)
{
  if (a1) {
    return 0x6E6F697461636F6CLL;
  }
  else {
    return 1701669236;
  }
}

void sub_1B3CD46A4()
{
}

void sub_1B3CD46BC()
{
}

uint64_t sub_1B3CD46D4()
{
  return sub_1B3CD466C(*v0);
}

uint64_t sub_1B3CD46DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CD4594(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CD4704(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD65FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD4740(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD65FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CD477C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6648();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD47B8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6648();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1B3CD47F4(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6694();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD4830(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6694();
  return MEMORY[0x1F41862B0](a1, v2);
}

void TriggerType.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  BOOL v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3C18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_22();
  type metadata accessor for LocationTrigger(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_22();
  uint64_t v18 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3C20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_33_0();
  type metadata accessor for TimeOfDayTrigger(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_35_0();
  type metadata accessor for TriggerType(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v9);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3C28);
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12);
  OUTLINED_FUNCTION_5_3();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CD65FC();
  sub_1B3D73178();
  sub_1B3CD62DC();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1B3CD623C();
    sub_1B3CD6648();
    uint64_t v13 = v19;
    OUTLINED_FUNCTION_16_4();
    sub_1B3CD2918(&qword_1E9CE3C40, (void (*)(uint64_t))type metadata accessor for LocationTrigger);
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v14();
    uint64_t v15 = type metadata accessor for LocationTrigger;
    uint64_t v16 = v18;
  }
  else
  {
    sub_1B3CD623C();
    sub_1B3CD6694();
    uint64_t v13 = v19;
    OUTLINED_FUNCTION_16_4();
    sub_1B3CD2918(&qword_1E9CE3C50, (void (*)(uint64_t))type metadata accessor for TimeOfDayTrigger);
    sub_1B3D72C18();
    OUTLINED_FUNCTION_32();
    v17();
    uint64_t v15 = type metadata accessor for TimeOfDayTrigger;
    uint64_t v16 = v1;
  }
  sub_1B3CD6330(v16, (void (*)(void))v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v13);
  OUTLINED_FUNCTION_26();
}

void TriggerType.init(from:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v50 = v0;
  unint64_t v2 = v1;
  uint64_t v42 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3C58);
  OUTLINED_FUNCTION_0();
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_23_6(v6, v40[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3C60);
  OUTLINED_FUNCTION_0();
  uint64_t v43 = v8;
  uint64_t v44 = v7;
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_22();
  uint64_t v47 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3C68);
  OUTLINED_FUNCTION_0();
  uint64_t v48 = v11;
  uint64_t v49 = v10;
  MEMORY[0x1F4188790](v10);
  OUTLINED_FUNCTION_15();
  uint64_t v12 = type metadata accessor for TriggerType(0);
  OUTLINED_FUNCTION_13();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)v40 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v40 - v20;
  OUTLINED_FUNCTION_49_1(v2);
  sub_1B3CD65FC();
  OUTLINED_FUNCTION_42_2();
  if (v0) {
    goto LABEL_8;
  }
  v40[1] = (uint64_t)v16;
  _OWORD v40[2] = (uint64_t)v19;
  v40[0] = (uint64_t)v21;
  uint64_t v41 = v12;
  uint64_t v50 = v2;
  uint64_t v22 = sub_1B3D72B78();
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23
    || (char v24 = *(unsigned char *)(v22 + 32),
        sub_1B3CA40D4(1, v23, v22, v22 + 32, 0, (2 * v23) | 1),
        uint64_t v26 = v25,
        unint64_t v28 = v27,
        swift_bridgeObjectRelease(),
        v26 != v28 >> 1))
  {
    uint64_t v29 = v41;
    sub_1B3D72988();
    OUTLINED_FUNCTION_4();
    unint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9CE2820);
    *unint64_t v31 = v29;
    sub_1B3D72AF8();
    sub_1B3D72978();
    uint64_t v32 = OUTLINED_FUNCTION_46_1();
    v33(v32);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v34 = OUTLINED_FUNCTION_11_8();
    v35(v34);
    unint64_t v2 = v50;
LABEL_8:
    uint64_t v36 = (uint64_t)v2;
    goto LABEL_9;
  }
  if (v24)
  {
    sub_1B3CD6648();
    OUTLINED_FUNCTION_47_1();
    type metadata accessor for LocationTrigger(0);
    sub_1B3CD2918(&qword_1E9CE3C70, (void (*)(uint64_t))type metadata accessor for LocationTrigger);
    sub_1B3D72B68();
    OUTLINED_FUNCTION_39_3();
  }
  else
  {
    sub_1B3CD6694();
    OUTLINED_FUNCTION_47_1();
    type metadata accessor for TimeOfDayTrigger(0);
    sub_1B3CD2918(&qword_1E9CE3C78, (void (*)(uint64_t))type metadata accessor for TimeOfDayTrigger);
    sub_1B3D72B68();
    OUTLINED_FUNCTION_37_3();
  }
  OUTLINED_FUNCTION_32();
  v37();
  swift_unknownObjectRelease();
  uint64_t v38 = OUTLINED_FUNCTION_11_8();
  v39(v38);
  swift_storeEnumTagMultiPayload();
  sub_1B3CD623C();
  sub_1B3CD623C();
  uint64_t v36 = (uint64_t)v50;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1(v36);
  OUTLINED_FUNCTION_26();
}

void sub_1B3CD5188()
{
}

void sub_1B3CD51A0()
{
}

uint64_t sub_1B3CD51B8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746E65746E69 && a2 == 0xE600000000000000;
  if (v3 || (OUTLINED_FUNCTION_27_4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001B3D8A8F0 || (OUTLINED_FUNCTION_27_4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74756374726F6873 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = OUTLINED_FUNCTION_27_4();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1B3CD52D0(char a1)
{
  if (!a1) {
    return 0x746E65746E69;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x74756374726F6873;
}

uint64_t sub_1B3CD5328()
{
  return sub_1B3C9AEFC();
}

uint64_t sub_1B3CD5330()
{
  return sub_1B3CD52D0(*v0);
}

uint64_t sub_1B3CD5338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CD51B8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1B3CD5360(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1B3CD536C(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD66E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD53A8(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD66E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void CodableTriggerAction.init(from:)()
{
  OUTLINED_FUNCTION_21();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3C80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_49_1(v2);
  sub_1B3CD66E0();
  sub_1B3D73158();
  if (!v0)
  {
    sub_1B3C7D440();
    sub_1B3D72B68();
    sub_1B3C78E5C(0, (unint64_t *)&unk_1E9CE2570);
    sub_1B3C78E5C(0, &qword_1E9CE3C98);
    uint64_t v6 = sub_1B3D72778();
    if (v6)
    {
      uint64_t v9 = v6;
      uint64_t v11 = sub_1B3D72B28();
      uint64_t v14 = v9;
      uint64_t v13 = v12;
      sub_1B3C7532C(v15, v16);
      uint64_t v7 = OUTLINED_FUNCTION_30_3();
      v8(v7);
      *(void *)uint64_t v4 = v14;
      *(void *)(v4 + 8) = v11;
      *(void *)(v4 + 16) = v13;
      *(unsigned char *)(v4 + 24) = 0;
    }
    else
    {
      sub_1B3D72988();
      OUTLINED_FUNCTION_4();
      sub_1B3CD672C(&qword_1E9CE3C90, &qword_1E9CE3C80);
      OUTLINED_FUNCTION_29_3();
      sub_1B3D72968();
      swift_willThrow();
      sub_1B3C7532C(v15, v16);
      OUTLINED_FUNCTION_32();
      v10();
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_26();
}

void CodableTriggerAction.encode(to:)()
{
  OUTLINED_FUNCTION_21();
  uint64_t v4 = v3;
  void v20[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3CA0);
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8);
  OUTLINED_FUNCTION_8();
  uint64_t v19 = *(void **)v0;
  char v9 = *(unsigned char *)(v0 + 24);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1B3CD66E0();
  sub_1B3D73178();
  if (v9)
  {
    LOBYTE(v20[0]) = 2;
    sub_1B3D72BD8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
  }
  else
  {
    uint64_t v18 = v2;
    uint64_t v10 = self;
    v20[0] = 0;
    id v11 = v19;
    id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, v20);
    id v13 = v20[0];
    if (v12)
    {
      uint64_t v14 = (void *)sub_1B3D71DF8();
      unint64_t v16 = v15;

      v20[0] = v14;
      v20[1] = v16;
      sub_1B3C7D5B0();
      sub_1B3D72C18();
      if (!v1)
      {
        LOBYTE(v20[0]) = 1;
        sub_1B3D72BD8();
      }
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v5);

      sub_1B3C7532C((uint64_t)v14, (unint64_t)v16);
    }
    else
    {
      uint64_t v17 = v13;
      sub_1B3D71D38();

      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v5);
    }
  }
  OUTLINED_FUNCTION_26();
}

void sub_1B3CD5A04()
{
}

void sub_1B3CD5A1C()
{
}

uint64_t ScheduledTrigger.identifier.getter()
{
  uint64_t v1 = *v0;
  sub_1B3D72278();
  return v1;
}

uint64_t ScheduledTrigger.triggerType.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_41_0();
  type metadata accessor for ScheduledTrigger(v0);
  return sub_1B3CD62DC();
}

uint64_t ScheduledTrigger.triggerType.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ScheduledTrigger(0) + 20);
  return sub_1B3CD679C(a1, v3);
}

uint64_t (*ScheduledTrigger.triggerType.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledTrigger.init(identifier:trigger:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for ScheduledTrigger(0);
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_17();
  *uint64_t v3 = a1;
  v3[1] = a2;
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
  sub_1B3CD623C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
}

uint64_t sub_1B3CD5C1C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_1B3D72E58() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5472656767697274 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1B3D72E58();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1B3CD5D1C(char a1)
{
  if (a1) {
    return 0x5472656767697274;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1B3CD5D60()
{
  return sub_1B3D73138();
}

uint64_t sub_1B3CD5D9C()
{
  return sub_1B3CD5D1C(*v0);
}

uint64_t sub_1B3CD5DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1B3CD5C1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B3CD5DCC(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6800();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1B3CD5E08(uint64_t a1)
{
  unint64_t v2 = sub_1B3CD6800();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ScheduledTrigger.encode(to:)()
{
  OUTLINED_FUNCTION_28_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3CA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1);
  OUTLINED_FUNCTION_9_7();
  sub_1B3CD6800();
  OUTLINED_FUNCTION_45();
  sub_1B3D72BD8();
  if (!v0)
  {
    type metadata accessor for ScheduledTrigger(0);
    uint64_t v2 = OUTLINED_FUNCTION_36_3();
    type metadata accessor for TriggerType(v2);
    sub_1B3CD2918(&qword_1E9CE2CD8, (void (*)(uint64_t))type metadata accessor for TriggerType);
    OUTLINED_FUNCTION_19_7();
  }
  OUTLINED_FUNCTION_51_0();
  return v3();
}

void ScheduledTrigger.init(from:)()
{
  OUTLINED_FUNCTION_21();
  BOOL v3 = v2;
  type metadata accessor for TriggerType(0);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v4);
  OUTLINED_FUNCTION_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE3CB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = OUTLINED_FUNCTION_8_10();
  type metadata accessor for ScheduledTrigger(v6);
  OUTLINED_FUNCTION_13();
  MEMORY[0x1F4188790](v7);
  OUTLINED_FUNCTION_5_3();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1B3CD6800();
  sub_1B3D73158();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    *uint64_t v1 = sub_1B3D72B28();
    v1[1] = v8;
    sub_1B3CD2918(&qword_1E9CE2D10, (void (*)(uint64_t))type metadata accessor for TriggerType);
    sub_1B3D72B68();
    uint64_t v9 = OUTLINED_FUNCTION_51_1();
    v10(v9);
    sub_1B3CD623C();
    sub_1B3CD62DC();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    sub_1B3CD6330((uint64_t)v1, (void (*)(void))type metadata accessor for ScheduledTrigger);
  }
  OUTLINED_FUNCTION_26();
}

void sub_1B3CD61E4()
{
}

uint64_t sub_1B3CD61FC()
{
  return ScheduledTrigger.encode(to:)();
}

uint64_t type metadata accessor for LocationTrigger.TimeRange(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE3D00);
}

uint64_t sub_1B3CD623C()
{
  uint64_t v2 = OUTLINED_FUNCTION_48_0();
  v3(v2);
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

unint64_t sub_1B3CD6290()
{
  unint64_t result = qword_1E9CE3BB8;
  if (!qword_1E9CE3BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3BB8);
  }
  return result;
}

uint64_t sub_1B3CD62DC()
{
  uint64_t v2 = OUTLINED_FUNCTION_48_0();
  v3(v2);
  OUTLINED_FUNCTION_13();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t sub_1B3CD6330(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_32();
  v3();
  return a1;
}

uint64_t type metadata accessor for LocationTrigger(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE3CE8);
}

uint64_t sub_1B3CD63A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B3CD640C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B3CD6474()
{
  unint64_t result = qword_1E9CE3BD0;
  if (!qword_1E9CE3BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3BD0);
  }
  return result;
}

unint64_t sub_1B3CD64C0()
{
  unint64_t result = qword_1E9CE3BE8;
  if (!qword_1E9CE3BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3BE8);
  }
  return result;
}

unint64_t sub_1B3CD650C()
{
  unint64_t result = qword_1E9CE3C00;
  if (!qword_1E9CE3C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3C00);
  }
  return result;
}

unint64_t sub_1B3CD6558()
{
  unint64_t result = qword_1E9CE3C08;
  if (!qword_1E9CE3C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9CE2E88);
    sub_1B3CD2918(&qword_1E9CE3C10, (void (*)(uint64_t))type metadata accessor for LocationTrigger.TimeRange);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3C08);
  }
  return result;
}

unint64_t sub_1B3CD65FC()
{
  unint64_t result = qword_1E9CE3C30;
  if (!qword_1E9CE3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3C30);
  }
  return result;
}

unint64_t sub_1B3CD6648()
{
  unint64_t result = qword_1E9CE3C38;
  if (!qword_1E9CE3C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3C38);
  }
  return result;
}

unint64_t sub_1B3CD6694()
{
  unint64_t result = qword_1E9CE3C48;
  if (!qword_1E9CE3C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3C48);
  }
  return result;
}

unint64_t sub_1B3CD66E0()
{
  unint64_t result = qword_1E9CE3C88;
  if (!qword_1E9CE3C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3C88);
  }
  return result;
}

uint64_t sub_1B3CD672C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ScheduledTrigger(uint64_t a1)
{
  return sub_1B3C9EEB4(a1, (uint64_t *)&unk_1E9CE3D20);
}

uint64_t sub_1B3CD679C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TriggerType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B3CD6800()
{
  unint64_t result = qword_1E9CE3CB0;
  if (!qword_1E9CE3CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3CB0);
  }
  return result;
}

uint64_t sub_1B3CD684C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B3CD2918(&qword_1E9CE3C78, (void (*)(uint64_t))type metadata accessor for TimeOfDayTrigger);
  uint64_t result = sub_1B3CD2918(&qword_1E9CE3C50, (void (*)(uint64_t))type metadata accessor for TimeOfDayTrigger);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1B3CD68D4()
{
  unint64_t result = qword_1E9CE3CC0;
  if (!qword_1E9CE3CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3CC0);
  }
  return result;
}

uint64_t sub_1B3CD6920(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B3CD2918(&qword_1E9CE3C70, (void (*)(uint64_t))type metadata accessor for LocationTrigger);
  uint64_t result = sub_1B3CD2918(&qword_1E9CE3C40, (void (*)(uint64_t))type metadata accessor for LocationTrigger);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1B3CD69A4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1B3CD2918(&qword_1E9CE3CC8, (void (*)(uint64_t))type metadata accessor for ScheduledTrigger);
  uint64_t result = sub_1B3CD2918(&qword_1E9CE3CD0, (void (*)(uint64_t))type metadata accessor for ScheduledTrigger);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t dispatch thunk of Trigger.isOneTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Trigger.asTriggerType()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t initializeBufferWithCopyOfBuffer for Recurrence(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1B3CD207C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for Recurrence(uint64_t a1)
{
  return sub_1B3CD208C(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for Recurrence(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1B3CD207C(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1B3CD208C(v5, v6);
  return a1;
}

uint64_t assignWithTake for Recurrence(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1B3CD208C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Recurrence(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Recurrence(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B3CD6BC0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1B3CD6BD8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

void type metadata accessor for Recurrence()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TimeOfDayTrigger(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unsigned int v3 = *a2;
    unsigned int v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    char v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1B3D71C88();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for TimeOfDayTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1B3D71C88();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

unsigned char *initializeWithCopy for TimeOfDayTrigger(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = sub_1B3D71C88();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for TimeOfDayTrigger(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = sub_1B3D71C88();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *initializeWithTake for TimeOfDayTrigger(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = sub_1B3D71C88();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for TimeOfDayTrigger(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = sub_1B3D71C88();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeOfDayTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B3CD6F34);
}

uint64_t sub_1B3CD6F34(unsigned __int8 *a1, int a2)
{
  if (a2 == 254)
  {
    unsigned int v2 = *a1;
    BOOL v3 = v2 >= 2;
    int v4 = (v2 + 2147483646) & 0x7FFFFFFF;
    if (v3) {
      return (v4 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1B3D71C88();
    uint64_t v6 = OUTLINED_FUNCTION_38_3();
    return __swift_getEnumTagSinglePayload(v6, v7, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TimeOfDayTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B3CD6FC4);
}

unsigned char *sub_1B3CD6FC4(unsigned char *result, char a2, int a3)
{
  if (a3 == 254)
  {
    void *result = a2 + 1;
  }
  else
  {
    sub_1B3D71C88();
    uint64_t v3 = OUTLINED_FUNCTION_26_4();
    return (unsigned char *)__swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  return result;
}

uint64_t sub_1B3CD7030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CD9D2C(a1, a2, a3, (uint64_t)&unk_1B3D87C28, MEMORY[0x1E4F26F90]);
}

void *initializeBufferWithCopyOfBuffer for LocationTrigger(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = (void *)a2[1];
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for LocationTrigger.TimeRange(0);
    id v10 = v5;
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_1B3D71C88();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(v7, v8, v13);
      v14(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for LocationTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for LocationTrigger.TimeRange(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1B3D71C88();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v7 - 8), v4, v7);
    uint64_t v8 = v4 + *(int *)(v5 + 20);
    return v9(v8, v7);
  }
  return result;
}

uint64_t initializeWithCopy for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  uint64_t v8 = type metadata accessor for LocationTrigger.TimeRange(0);
  id v9 = v4;
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_1B3D71C88();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v6, v7, v11);
    v12(&v6[*(int *)(v8 + 20)], &v7[*(int *)(v8 + 20)], v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for LocationTrigger.TimeRange(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      uint64_t v19 = sub_1B3D71C88();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24);
      v20(v10, v11, v19);
      v20(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v19);
      return a1;
    }
    sub_1B3CD6330((uint64_t)v10, (void (*)(void))type metadata accessor for LocationTrigger.TimeRange);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  uint64_t v15 = sub_1B3D71C88();
  unint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v10, v11, v15);
  v16(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for LocationTrigger.TimeRange(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1B3D71C88();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(v5, v6, v9);
    v10(&v5[*(int *)(v7 + 20)], &v6[*(int *)(v7 + 20)], v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for LocationTrigger.TimeRange(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      uint64_t v17 = sub_1B3D71C88();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40);
      v18(v8, v9, v17);
      v18(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v17);
      return a1;
    }
    sub_1B3CD6330((uint64_t)v8, (void (*)(void))type metadata accessor for LocationTrigger.TimeRange);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  uint64_t v13 = sub_1B3D71C88();
  int v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v8, v9, v13);
  v14(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B3CD7894);
}

uint64_t sub_1B3CD7894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_33_3();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
  uint64_t v8 = a1 + *(int *)(a3 + 28);
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B3CD7924);
}

void sub_1B3CD7924()
{
  OUTLINED_FUNCTION_45_1();
  if (v3)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
    uint64_t v6 = v1 + *(int *)(v4 + 28);
    __swift_storeEnumTagSinglePayload(v6, v0, v0, v5);
  }
}

void sub_1B3CD799C()
{
  sub_1B3CD7A44();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1B3CD7A44()
{
  if (!qword_1E9CE3CF8)
  {
    type metadata accessor for LocationTrigger.TimeRange(255);
    unint64_t v0 = sub_1B3D72848();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E9CE3CF8);
    }
  }
}

void type metadata accessor for LocationTrigger.State()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for LocationTrigger.TimeRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1B3D71C88();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B3D71C88();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71C88();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71C88();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71C88();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1B3D71C88();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B3CD7EA8);
}

uint64_t sub_1B3CD7EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B3D71C88();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B3CD7F04);
}

uint64_t sub_1B3CD7F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1B3D71C88();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1B3CD7F50()
{
  uint64_t result = sub_1B3D71C88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ScheduledTriggerIdentifiable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ScheduledTriggerConfiguration.triggerType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t initializeBufferWithCopyOfBuffer for TriggerType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = (void *)a2[1];
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v8 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v9 = (char *)(a1 + v8);
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for LocationTrigger.TimeRange(0);
      id v12 = v7;
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v19 = sub_1B3D71C88();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        v20(v9, v10, v19);
        v20(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
    }
    else
    {
      uint64_t v15 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      uint64_t v16 = a1 + v15;
      uint64_t v17 = (uint64_t)a2 + v15;
      uint64_t v18 = sub_1B3D71C88();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TriggerType(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    uint64_t v2 = a1 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    uint64_t v3 = type metadata accessor for LocationTrigger.TimeRange(0);
    uint64_t result = __swift_getEnumTagSinglePayload(v2, 1, v3);
    if (result) {
      return result;
    }
    uint64_t v10 = sub_1B3D71C88();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v10 - 8), v2, v10);
    uint64_t v9 = v2 + *(int *)(v3 + 20);
    uint64_t v8 = v10;
    uint64_t v7 = v11;
  }
  else
  {
    uint64_t v5 = a1 + *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    uint64_t v6 = sub_1B3D71C88();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    uint64_t v8 = v6;
    uint64_t v9 = v5;
  }
  return v7(v9, v8);
}

uint64_t initializeWithCopy for TriggerType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(void **)(a2 + 8);
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v6 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    uint64_t v9 = type metadata accessor for LocationTrigger.TimeRange(0);
    id v10 = v5;
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1B3D71C88();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      v17(v7, v8, v16);
      v17(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
  }
  else
  {
    uint64_t v12 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = a2 + v12;
    uint64_t v15 = sub_1B3D71C88();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TriggerType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1B3CD6330(a1, (void (*)(void))type metadata accessor for TriggerType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(void **)(a2 + 8);
      *(void *)(a1 + 8) = v5;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v6 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v7 = (char *)(a1 + v6);
      uint64_t v8 = (char *)(a2 + v6);
      uint64_t v9 = type metadata accessor for LocationTrigger.TimeRange(0);
      id v10 = v5;
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v16 = sub_1B3D71C88();
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        v17(v7, v8, v16);
        v17(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      }
    }
    else
    {
      uint64_t v12 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      uint64_t v13 = a1 + v12;
      uint64_t v14 = a2 + v12;
      uint64_t v15 = sub_1B3D71C88();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TriggerType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(unsigned char *)a1 = *(unsigned char *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v5 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    uint64_t v6 = (char *)(a1 + v5);
    uint64_t v7 = (char *)(a2 + v5);
    uint64_t v8 = type metadata accessor for LocationTrigger.TimeRange(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1B3D71C88();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v15(v6, v7, v14);
      v15(&v6[*(int *)(v8 + 20)], &v7[*(int *)(v8 + 20)], v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
  }
  else
  {
    uint64_t v10 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = sub_1B3D71C88();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TriggerType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1B3CD6330(a1, (void (*)(void))type metadata accessor for TriggerType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v5 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v6 = (char *)(a1 + v5);
      uint64_t v7 = (char *)(a2 + v5);
      uint64_t v8 = type metadata accessor for LocationTrigger.TimeRange(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
        memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v14 = sub_1B3D71C88();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
        v15(v6, v7, v14);
        v15(&v6[*(int *)(v8 + 20)], &v7[*(int *)(v8 + 20)], v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      }
    }
    else
    {
      uint64_t v10 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_1B3D71C88();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B3CD8A60()
{
  uint64_t result = type metadata accessor for TimeOfDayTrigger(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationTrigger(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for TriggerAction(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 != 1) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TriggerAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    char v6 = 1;
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    char v6 = 0;
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
  }
  sub_1B3D72278();
  *(unsigned char *)(a1 + 56) = v6;
  return a1;
}

uint64_t assignWithCopy for TriggerAction(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1) {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    swift_bridgeObjectRelease();
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      char v6 = 1;
    }
    else
    {
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      char v6 = 0;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = v6;
    sub_1B3D72278();
  }
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TriggerAction(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 != 1) {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    swift_bridgeObjectRelease();
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v5) = 0;
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    *(unsigned char *)(a1 + 56) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TriggerAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TriggerAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B3CD8E84(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1B3CD8EA0(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

void type metadata accessor for TriggerAction()
{
}

uint64_t destroy for CodableTriggerAction(uint64_t a1)
{
  return sub_1B3C9A3A0(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for CodableTriggerAction(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B3C9F654(*(void **)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for CodableTriggerAction(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1B3C9F654(*(void **)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_1B3C9A3A0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CodableTriggerAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_1B3C9A3A0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableTriggerAction(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableTriggerAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1B3CD9094(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1B3CD909C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

void type metadata accessor for CodableTriggerAction()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for ScheduledTrigger(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *unsigned int v3 = *a2;
    unsigned int v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    char v8 = (char *)a2 + v6;
    type metadata accessor for TriggerType(0);
    sub_1B3D72278();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    char *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      char v10 = (void *)*((void *)v8 + 1);
      *((void *)v7 + 1) = v10;
      v7[16] = v8[16];
      uint64_t v11 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for LocationTrigger.TimeRange(0);
      id v15 = v10;
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v22 = sub_1B3D71C88();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        v23(v12, v13, v22);
        v23(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      uint64_t v18 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      uint64_t v21 = sub_1B3D71C88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for ScheduledTrigger(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TriggerType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    uint64_t v5 = v4 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    uint64_t v6 = type metadata accessor for LocationTrigger.TimeRange(0);
    uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v6);
    if (result) {
      return result;
    }
    uint64_t v13 = sub_1B3D71C88();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v14)((void *)(v13 - 8), v5, v13);
    uint64_t v12 = v5 + *(int *)(v6 + 20);
    uint64_t v11 = v13;
    char v10 = v14;
  }
  else
  {
    uint64_t v8 = v4 + *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    uint64_t v9 = sub_1B3D71C88();
    char v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    uint64_t v11 = v9;
    uint64_t v12 = v8;
  }
  return v10(v12, v11);
}

void *initializeWithCopy for ScheduledTrigger(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  type metadata accessor for TriggerType(0);
  sub_1B3D72278();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *uint64_t v6 = *v7;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = (void *)*((void *)v7 + 1);
    *((void *)v6 + 1) = v9;
    v6[16] = v7[16];
    uint64_t v10 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    uint64_t v11 = &v6[v10];
    uint64_t v12 = &v7[v10];
    uint64_t v13 = type metadata accessor for LocationTrigger.TimeRange(0);
    id v14 = v9;
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_1B3D71C88();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      v21(v11, v12, v20);
      v21(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
  }
  else
  {
    uint64_t v16 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    uint64_t v17 = &v6[v16];
    uint64_t v18 = &v7[v16];
    uint64_t v19 = sub_1B3D71C88();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ScheduledTrigger(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1B3D72278();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1B3CD6330((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for TriggerType);
    type metadata accessor for TriggerType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    char *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = (void *)*((void *)v8 + 1);
      *((void *)v7 + 1) = v10;
      v7[16] = v8[16];
      uint64_t v11 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v12 = &v7[v11];
      uint64_t v13 = &v8[v11];
      uint64_t v14 = type metadata accessor for LocationTrigger.TimeRange(0);
      id v15 = v10;
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v21 = sub_1B3D71C88();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        v22(v12, v13, v21);
        v22(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      uint64_t v17 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      uint64_t v18 = &v7[v17];
      uint64_t v19 = &v8[v17];
      uint64_t v20 = sub_1B3D71C88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ScheduledTrigger(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  type metadata accessor for TriggerType(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *uint64_t v5 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    *((void *)v5 + 1) = *((void *)v6 + 1);
    v5[16] = v6[16];
    uint64_t v8 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    uint64_t v9 = &v5[v8];
    uint64_t v10 = &v6[v8];
    uint64_t v11 = type metadata accessor for LocationTrigger.TimeRange(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_1B3D71C88();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32);
      v18(v9, v10, v17);
      v18(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    uint64_t v13 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    uint64_t v14 = &v5[v13];
    id v15 = &v6[v13];
    uint64_t v16 = sub_1B3D71C88();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for ScheduledTrigger(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1B3CD6330((uint64_t)a1 + v7, (void (*)(void))type metadata accessor for TriggerType);
    type metadata accessor for TriggerType(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    char *v8 = *v9;
    if (EnumCaseMultiPayload == 1)
    {
      *((void *)v8 + 1) = *((void *)v9 + 1);
      v8[16] = v9[16];
      uint64_t v11 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = type metadata accessor for LocationTrigger.TimeRange(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9CE2E88);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v20 = sub_1B3D71C88();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
        v21(v12, v13, v20);
        v21(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      uint64_t v16 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      uint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      uint64_t v19 = sub_1B3D71C88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1B3CD9C28);
}

uint64_t sub_1B3CD9C28(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_33_3();
  }
  type metadata accessor for TriggerType(0);
  uint64_t v3 = OUTLINED_FUNCTION_38_3();
  return __swift_getEnumTagSinglePayload(v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for ScheduledTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1B3CD9CA8);
}

void sub_1B3CD9CA8()
{
  OUTLINED_FUNCTION_45_1();
  if (v2)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    type metadata accessor for TriggerType(0);
    uint64_t v3 = OUTLINED_FUNCTION_26_4();
    __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
}

uint64_t sub_1B3CD9D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B3CD9D2C(a1, a2, a3, (uint64_t)&unk_1B3D87D18, type metadata accessor for TriggerType);
}

uint64_t sub_1B3CD9D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledTrigger.CodingKeys()
{
  return &type metadata for ScheduledTrigger.CodingKeys;
}

unsigned char *sub_1B3CD9DD0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CD9E9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for CodableTriggerAction.CodingKeys()
{
}

ValueMetadata *type metadata accessor for TriggerType.CodingKeys()
{
  return &type metadata for TriggerType.CodingKeys;
}

ValueMetadata *type metadata accessor for TriggerType.TimeCodingKeys()
{
  return &type metadata for TriggerType.TimeCodingKeys;
}

unsigned char *_s19VoiceShortcutClient11TriggerTypeO14TimeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1B3CD9F90);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerType.LocationCodingKeys()
{
  return &type metadata for TriggerType.LocationCodingKeys;
}

unsigned char *sub_1B3CD9FC8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CDA094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for LocationTrigger.CodingKeys()
{
}

ValueMetadata *type metadata accessor for LocationTrigger.TimeRange.CodingKeys()
{
  return &type metadata for LocationTrigger.TimeRange.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationTrigger.State.CodingKeys()
{
  return &type metadata for LocationTrigger.State.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationTrigger.State.LeftCodingKeys()
{
  return &type metadata for LocationTrigger.State.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for LocationTrigger.State.EnteredCodingKeys()
{
  return &type metadata for LocationTrigger.State.EnteredCodingKeys;
}

unsigned char *_s19VoiceShortcutClient15LocationTriggerV5StateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B3CDA1D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeOfDayTrigger.CodingKeys()
{
  return &type metadata for TimeOfDayTrigger.CodingKeys;
}

unint64_t sub_1B3CDA210()
{
  unint64_t result = qword_1E9CE3D30;
  if (!qword_1E9CE3D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D30);
  }
  return result;
}

unint64_t sub_1B3CDA260()
{
  unint64_t result = qword_1E9CE3D38;
  if (!qword_1E9CE3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D38);
  }
  return result;
}

unint64_t sub_1B3CDA2B0()
{
  unint64_t result = qword_1E9CE3D40;
  if (!qword_1E9CE3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D40);
  }
  return result;
}

unint64_t sub_1B3CDA300()
{
  unint64_t result = qword_1E9CE3D48;
  if (!qword_1E9CE3D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D48);
  }
  return result;
}

unint64_t sub_1B3CDA350()
{
  unint64_t result = qword_1E9CE3D50;
  if (!qword_1E9CE3D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D50);
  }
  return result;
}

unint64_t sub_1B3CDA3A0()
{
  unint64_t result = qword_1E9CE3D58;
  if (!qword_1E9CE3D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D58);
  }
  return result;
}

unint64_t sub_1B3CDA3F0()
{
  unint64_t result = qword_1E9CE3D60;
  if (!qword_1E9CE3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D60);
  }
  return result;
}

unint64_t sub_1B3CDA440()
{
  unint64_t result = qword_1E9CE3D68;
  if (!qword_1E9CE3D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D68);
  }
  return result;
}

unint64_t sub_1B3CDA490()
{
  unint64_t result = qword_1E9CE3D70;
  if (!qword_1E9CE3D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D70);
  }
  return result;
}

unint64_t sub_1B3CDA4E0()
{
  unint64_t result = qword_1E9CE3D78;
  if (!qword_1E9CE3D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D78);
  }
  return result;
}

unint64_t sub_1B3CDA530()
{
  unint64_t result = qword_1E9CE3D80;
  if (!qword_1E9CE3D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D80);
  }
  return result;
}

unint64_t sub_1B3CDA580()
{
  unint64_t result = qword_1E9CE3D88;
  if (!qword_1E9CE3D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D88);
  }
  return result;
}

unint64_t sub_1B3CDA5D0()
{
  unint64_t result = qword_1E9CE3D90;
  if (!qword_1E9CE3D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D90);
  }
  return result;
}

unint64_t sub_1B3CDA620()
{
  unint64_t result = qword_1E9CE3D98;
  if (!qword_1E9CE3D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3D98);
  }
  return result;
}

unint64_t sub_1B3CDA670()
{
  unint64_t result = qword_1E9CE3DA0;
  if (!qword_1E9CE3DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DA0);
  }
  return result;
}

unint64_t sub_1B3CDA6C0()
{
  unint64_t result = qword_1E9CE3DA8;
  if (!qword_1E9CE3DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DA8);
  }
  return result;
}

unint64_t sub_1B3CDA710()
{
  unint64_t result = qword_1E9CE3DB0;
  if (!qword_1E9CE3DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DB0);
  }
  return result;
}

unint64_t sub_1B3CDA760()
{
  unint64_t result = qword_1E9CE3DB8;
  if (!qword_1E9CE3DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DB8);
  }
  return result;
}

unint64_t sub_1B3CDA7B0()
{
  unint64_t result = qword_1E9CE3DC0;
  if (!qword_1E9CE3DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DC0);
  }
  return result;
}

unint64_t sub_1B3CDA800()
{
  unint64_t result = qword_1E9CE3DC8;
  if (!qword_1E9CE3DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DC8);
  }
  return result;
}

unint64_t sub_1B3CDA850()
{
  unint64_t result = qword_1E9CE3DD0;
  if (!qword_1E9CE3DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DD0);
  }
  return result;
}

unint64_t sub_1B3CDA8A0()
{
  unint64_t result = qword_1E9CE3DD8;
  if (!qword_1E9CE3DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DD8);
  }
  return result;
}

unint64_t sub_1B3CDA8F0()
{
  unint64_t result = qword_1E9CE3DE0;
  if (!qword_1E9CE3DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DE0);
  }
  return result;
}

unint64_t sub_1B3CDA940()
{
  unint64_t result = qword_1E9CE3DE8;
  if (!qword_1E9CE3DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DE8);
  }
  return result;
}

unint64_t sub_1B3CDA990()
{
  unint64_t result = qword_1E9CE3DF0;
  if (!qword_1E9CE3DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DF0);
  }
  return result;
}

unint64_t sub_1B3CDA9E0()
{
  unint64_t result = qword_1E9CE3DF8;
  if (!qword_1E9CE3DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3DF8);
  }
  return result;
}

unint64_t sub_1B3CDAA30()
{
  unint64_t result = qword_1E9CE3E00;
  if (!qword_1E9CE3E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3E00);
  }
  return result;
}

unint64_t sub_1B3CDAA80()
{
  unint64_t result = qword_1E9CE3E08;
  if (!qword_1E9CE3E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3E08);
  }
  return result;
}

unint64_t sub_1B3CDAAD0()
{
  unint64_t result = qword_1E9CE3E10;
  if (!qword_1E9CE3E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3E10);
  }
  return result;
}

unint64_t sub_1B3CDAB20()
{
  unint64_t result = qword_1E9CE3E18;
  if (!qword_1E9CE3E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3E18);
  }
  return result;
}

unint64_t sub_1B3CDAB70()
{
  unint64_t result = qword_1E9CE3E20;
  if (!qword_1E9CE3E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9CE3E20);
  }
  return result;
}

uint64_t sub_1B3CDABBC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return sub_1B3D72C18();
}

uint64_t OUTLINED_FUNCTION_21_4()
{
  return sub_1B3D723E8();
}

void OUTLINED_FUNCTION_23_6(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  return sub_1B3CD19CC();
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return sub_1B3D72E58();
}

uint64_t OUTLINED_FUNCTION_29_3()
{
  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  return sub_1B3D72C18();
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  *(unsigned char *)(v0 - 66) = 1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_37_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_3()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_39_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  return sub_1B3D73158();
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return 0;
}

void *OUTLINED_FUNCTION_49_1(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  return v0;
}

void sub_1B3CDD7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(location);
  objc_destroyWeak(a9);
  objc_destroyWeak(&a26);
  objc_destroyWeak((id *)(v28 - 128));
  _Unwind_Resume(a1);
}

id WFNameForGlyphSection(unint64_t a1)
{
  if (a1 <= 2)
  {
    a1 = WFLocalizedString(off_1E6076CB8[a1]);
  }
  return (id)a1;
}

id WFSystemGlyphCharactersInSection(uint64_t a1)
{
  uint64_t v1 = &unk_1F0CB1D30;
  if (a1 == 1) {
    uint64_t v1 = &unk_1F0CB1D48;
  }
  if (a1 == 2) {
    uint64_t v1 = &unk_1F0CB1D60;
  }
  id v2 = v1;
  int v3 = objc_msgSend(v2, "if_objectsPassingTest:", &__block_literal_global_537);

  return v3;
}

BOOL __WFSystemGlyphCharactersInSection_block_invoke(uint64_t a1, void *a2)
{
  id v2 = WFSystemImageNameForGlyphCharacter((unsigned __int16)[a2 intValue]);
  BOOL v3 = v2 != 0;

  return v3;
}

id WFSystemOutlineGlyphCharactersInSection(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v2 = objc_opt_new();
  BOOL v3 = objc_opt_new();
  unsigned int v4 = WFSystemGlyphCharactersInSection(a1);
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 3221225472;
  aBlock[2] = __WFSystemOutlineGlyphCharactersInSection_block_invoke;
  aBlock[3] = &unk_1E6076C48;
  id v5 = v2;
  id v30 = v5;
  id v6 = v3;
  id v31 = v6;
  uint64_t v7 = (void (**)(void *, void *, void *))_Block_copy(aBlock);
  v26[0] = MEMORY[0x1E4F143A8];
  v26[1] = 3221225472;
  v26[2] = __WFSystemOutlineGlyphCharactersInSection_block_invoke_2;
  v26[3] = &unk_1E6076C70;
  id v20 = v5;
  id v27 = v20;
  id v18 = v6;
  id v28 = v18;
  uint64_t v19 = (void (**)(void *, void *, void *, void *))_Block_copy(v26);
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  obunint64_t j = v4;
  uint64_t v8 = [obj countByEnumeratingWithState:&v22 objects:v32 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v9; ++i)
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        uint64_t v13 = WFSystemImageNameForGlyphCharacter((unsigned __int16)[v12 intValue]);
        uint64_t v14 = WFSystemImageNameForOutlineGlyphCharacter((unsigned __int16)[v12 intValue]);
        if ([v13 hasSuffix:@".fill"])
        {
          v7[2](v7, v12, v14);
        }
        else
        {
          uint64_t v15 = [v20 objectForKey:v14];
          if (v15) {
            v19[2](v19, v12, v14, v15);
          }
          else {
            v7[2](v7, v12, v14);
          }
        }
      }
      uint64_t v9 = [obj countByEnumeratingWithState:&v22 objects:v32 count:16];
    }
    while (v9);
  }

  id v16 = v18;
  return v16;
}

void __WFSystemOutlineGlyphCharactersInSection_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = NSNumber;
  id v6 = *(void **)(a1 + 32);
  uint64_t v7 = *(void **)(a1 + 40);
  id v8 = a3;
  id v10 = a2;
  uint64_t v9 = objc_msgSend(v5, "numberWithUnsignedInteger:", objc_msgSend(v7, "count"));
  [v6 setObject:v9 forKey:v8];

  [*(id *)(a1 + 40) addObject:v10];
}

void __WFSystemOutlineGlyphCharactersInSection_block_invoke_2(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void **)(a1 + 32);
  id v8 = a4;
  id v10 = a2;
  [v7 setObject:v8 forKey:a3];
  uint64_t v9 = *(void **)(a1 + 40);
  LODWORD(a2) = [v8 intValue];

  [v9 replaceObjectAtIndex:(int)a2 withObject:v10];
}

id WFWorkflowGlyphCharactersInSection(uint64_t a1)
{
  uint64_t v1 = &unk_1F0CB1D30;
  if (a1 == 1) {
    uint64_t v1 = &unk_1F0CB1D48;
  }
  if (a1 == 2) {
    uint64_t v1 = &unk_1F0CB1D60;
  }
  id v2 = v1;
  BOOL v3 = objc_msgSend(v2, "if_objectsPassingTest:", &__block_literal_global_22);

  return v3;
}

BOOL __WFWorkflowGlyphCharactersInSection_block_invoke(uint64_t a1, void *a2)
{
  id v2 = WFSystemImageNameForGlyphCharacter((unsigned __int16)[a2 intValue]);
  BOOL v3 = v2 == 0;

  return v3;
}

id WFRepresentativeGlyphNameForSection(void *a1)
{
  if ((unint64_t)a1 <= 2)
  {
    a1 = WFSystemImageNameForOutlineGlyphCharacter((unsigned __int16)(0xF000E999E959uLL >> (16 * a1)));
  }
  return a1;
}

uint64_t WFSectionForGlyph(__int16 a1)
{
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  uint64_t v11 = 0;
  id v2 = [&unk_1F0CB1CB8 firstObject];
  uint64_t v3 = [v2 unsignedIntegerValue];

  uint64_t v11 = v3;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  id v6[2] = __WFSectionForGlyph_block_invoke;
  v6[3] = &unk_1E6076C98;
  __int16 v7 = a1;
  v6[4] = &v8;
  [&unk_1F0CB1CB8 enumerateObjectsUsingBlock:v6];
  uint64_t v4 = v9[3];
  _Block_object_dispose(&v8, 8);
  return v4;
}

void sub_1B3CE2864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __WFSectionForGlyph_block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v6 = [a2 unsignedIntegerValue];
  uint64_t v7 = v6;
  uint64_t v8 = &unk_1F0CB1D30;
  if (v6 == 1) {
    uint64_t v8 = &unk_1F0CB1D48;
  }
  if (v6 == 2) {
    uint64_t v8 = &unk_1F0CB1D60;
  }
  id v11 = v8;
  uint64_t v9 = [NSNumber numberWithUnsignedShort:*(unsigned __int16 *)(a1 + 40)];
  int v10 = [v11 containsObject:v9];

  if (v10)
  {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v7;
    *a4 = 1;
  }
}

uint64_t VCIsShortcutsAppBundleIdentifier(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:@"com.apple.shortcuts"] & 1) != 0
    || ([v1 isEqualToString:@"com.apple.shortcuts.watch"] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 isEqualToString:@"com.apple.shortcuts"];
  }

  return v2;
}

uint64_t VCIsShortcutsActionsBundleIdentifier(void *a1, const char *a2)
{
  return [a1 isEqualToString:@"com.apple.ShortcutsActions"];
}

id WFHumanReadableNameForWorkflowType(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"ActionExtension"])
  {
    uint64_t v2 = @"Share Sheet";
LABEL_13:
    uint64_t v3 = WFLocalizedString(v2);
    goto LABEL_14;
  }
  if ([v1 isEqualToString:@"Watch"])
  {
    uint64_t v2 = @"Apple Watch";
    goto LABEL_13;
  }
  if ([v1 isEqualToString:@"Sleep"])
  {
    uint64_t v2 = @"Sleep Focus";
    goto LABEL_13;
  }
  if ([v1 isEqualToString:@"QuickActions"])
  {
    uint64_t v2 = @"Quick Actions";
    goto LABEL_13;
  }
  if ([v1 isEqualToString:@"MenuBar"])
  {
    uint64_t v2 = @"Menu Bar";
    goto LABEL_13;
  }
  if ([v1 isEqualToString:@"ReceivesOnScreenContent"])
  {
    uint64_t v2 = @"Receives What’s On Screen";
    goto LABEL_13;
  }
  uint64_t v3 = 0;
LABEL_14:

  return v3;
}

id WFAppIntentArchiverErrorWithLocalizedErrorDescription(void *a1, void *a2)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = (void *)MEMORY[0x1E4F1CA60];
  uint64_t v10 = *MEMORY[0x1E4F28568];
  v11[0] = v3;
  uint64_t v6 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:&v10 count:1];
  uint64_t v7 = [v5 dictionaryWithDictionary:v6];

  if (v4) {
    [v7 setObject:v4 forKeyedSubscript:*MEMORY[0x1E4F28A50]];
  }
  uint64_t v8 = [MEMORY[0x1E4F28C58] errorWithDomain:@"AppIntentsArchivingError" code:1000 userInfo:v7];

  return v8;
}

void sub_1B3CE5FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAVSystemControllerClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!MediaExperienceLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __MediaExperienceLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E6076F20;
    uint64_t v8 = 0;
    MediaExperienceLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!MediaExperienceLibraryCore_frameworkLibrary)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v4 = [NSString stringWithUTF8String:"void *MediaExperienceLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFAVSystemController.m", 16, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("AVSystemController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getAVSystemControllerClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFAVSystemController.m", 17, @"Unable to find class %s", "AVSystemController");

LABEL_10:
    __break(1u);
  }
  getAVSystemControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __MediaExperienceLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  MediaExperienceLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3CE70D0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __VCUserActivityFromEvent_block_invoke(uint64_t a1, void *a2)
{
  id v12 = a2;
  if ([v12 count])
  {
    id v3 = [v12 firstObject];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v4 = v3;
      id v5 = [v4 firstObject];
      if (v5 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
      {
        uint64_t v6 = [MEMORY[0x1E4F1CB10] fileURLWithPath:v5];
        uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
        uint64_t v8 = *(void **)(v7 + 40);
        *(void *)(v7 + 40) = v6;
      }
      else if ((unint64_t)[v4 count] < 2)
      {
        uint64_t v8 = 0;
      }
      else
      {
        uint64_t v8 = [v4 objectAtIndex:1];
        if (v8)
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint64_t v9 = [MEMORY[0x1E4F1CB10] URLWithString:v8];
            uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
            id v11 = *(void **)(v10 + 40);
            *(void *)(v10 + 40) = v9;
          }
        }
      }
    }
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

__CFString *WFRunSourceForExecutionContext(unint64_t a1)
{
  if (a1 > 0xA) {
    return @"unknown";
  }
  else {
    return off_1E6077128[a1];
  }
}

uint64_t WFRunSourceIsSpotlight(void *a1)
{
  uint64_t v1 = WFRunSourceIsSpotlight_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&WFRunSourceIsSpotlight_onceToken, &__block_literal_global_1715);
  }
  uint64_t v3 = [(id)WFRunSourceIsSpotlight_s_spotlightRunSources containsObject:v2];

  return v3;
}

void __WFRunSourceIsSpotlight_block_invoke()
{
  v2[7] = *MEMORY[0x1E4F143B8];
  v2[0] = @"spotlight-search";
  v2[1] = @"spotlight-search-detail-page";
  v2[2] = @"spotlight_prediction";
  v2[3] = @"contextual-action-spotlight-unknown";
  v2[4] = @"contextual-action-spotlight-search";
  v2[5] = @"contextual-action-spotlight-prediction";
  v2[6] = @"contextual-action-spotlight-top-hit";
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:7];
  uint64_t v1 = (void *)WFRunSourceIsSpotlight_s_spotlightRunSources;
  WFRunSourceIsSpotlight_s_spotlightRunSources = v0;
}

uint64_t WFRunSourceIsSuggestion(void *a1)
{
  uint64_t v1 = WFRunSourceIsSuggestion_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&WFRunSourceIsSuggestion_onceToken, &__block_literal_global_189);
  }
  uint64_t v3 = [(id)WFRunSourceIsSuggestion_s_suggestionRunSources containsObject:v2];

  return v3;
}

void __WFRunSourceIsSuggestion_block_invoke()
{
  void v2[8] = *MEMORY[0x1E4F143B8];
  v2[0] = @"siri";
  v2[1] = @"lock_screen_prediction";
  v2[2] = @"WFWorkflowRunSourceSuggestionsWidgetPrediction";
  v2[3] = @"spotlight_prediction";
  v2[4] = @"spotlight-search";
  v2[5] = @"watch-face";
  v2[6] = @"siri_cloud_relay";
  v2[7] = @"carplay";
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:8];
  uint64_t v1 = (void *)WFRunSourceIsSuggestion_s_suggestionRunSources;
  WFRunSourceIsSuggestion_s_suggestionRunSources = v0;
}

uint64_t WFRunSourceIsExemptFromOutputApproval(void *a1)
{
  uint64_t v1 = WFRunSourceIsExemptFromOutputApproval_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&WFRunSourceIsExemptFromOutputApproval_onceToken, &__block_literal_global_191);
  }
  uint64_t v3 = [(id)WFRunSourceIsExemptFromOutputApproval_s_outputApprovalExemptRunSources containsObject:v2];

  return v3;
}

void __WFRunSourceIsExemptFromOutputApproval_block_invoke()
{
  v2[2] = *MEMORY[0x1E4F143B8];
  v2[0] = @"button";
  v2[1] = @"keyboard";
  uint64_t v0 = [MEMORY[0x1E4F1C978] arrayWithObjects:v2 count:2];
  uint64_t v1 = (void *)WFRunSourceIsExemptFromOutputApproval_s_outputApprovalExemptRunSources;
  WFRunSourceIsExemptFromOutputApproval_s_outputApprovalExemptRunSources = v0;
}

void sub_1B3CE9F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1742(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1743(uint64_t a1)
{
}

void sub_1B3CEA1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B3CEA498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B3CEA928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B3CEAC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __getWFActionsLogObject_block_invoke()
{
  getWFActionsLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Actions");
  return MEMORY[0x1F41817F8]();
}

id getWFContentGraphLogObject()
{
  if (getWFContentGraphLogObject_onceToken != -1) {
    dispatch_once(&getWFContentGraphLogObject_onceToken, &__block_literal_global_11);
  }
  uint64_t v0 = (void *)getWFContentGraphLogObject_log;
  return v0;
}

uint64_t __getWFContentGraphLogObject_block_invoke()
{
  getWFContentGraphLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ContentGraph");
  return MEMORY[0x1F41817F8]();
}

id getWFContentItemLogObject()
{
  if (getWFContentItemLogObject_onceToken != -1) {
    dispatch_once(&getWFContentItemLogObject_onceToken, &__block_literal_global_14);
  }
  uint64_t v0 = (void *)getWFContentItemLogObject_log;
  return v0;
}

uint64_t __getWFContentItemLogObject_block_invoke()
{
  getWFContentItemLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ContentItem");
  return MEMORY[0x1F41817F8]();
}

id getWFInterchangeLogObject()
{
  if (getWFInterchangeLogObject_onceToken != -1) {
    dispatch_once(&getWFInterchangeLogObject_onceToken, &__block_literal_global_17);
  }
  uint64_t v0 = (void *)getWFInterchangeLogObject_log;
  return v0;
}

uint64_t __getWFInterchangeLogObject_block_invoke()
{
  getWFInterchangeLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Interchange");
  return MEMORY[0x1F41817F8]();
}

id getWFEditorLogObject()
{
  if (getWFEditorLogObject_onceToken != -1) {
    dispatch_once(&getWFEditorLogObject_onceToken, &__block_literal_global_23);
  }
  uint64_t v0 = (void *)getWFEditorLogObject_log;
  return v0;
}

uint64_t __getWFEditorLogObject_block_invoke()
{
  getWFEditorLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Editor");
  return MEMORY[0x1F41817F8]();
}

id getWFFoldersLogObject()
{
  if (getWFFoldersLogObject_onceToken != -1) {
    dispatch_once(&getWFFoldersLogObject_onceToken, &__block_literal_global_26);
  }
  uint64_t v0 = (void *)getWFFoldersLogObject_log;
  return v0;
}

uint64_t __getWFFoldersLogObject_block_invoke()
{
  getWFFoldersLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Folders");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFWorkflowExecutionLogObject_block_invoke()
{
  getWFWorkflowExecutionLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "WorkflowExecution");
  return MEMORY[0x1F41817F8]();
}

id getWFRunningLifecycleLogObject()
{
  if (getWFRunningLifecycleLogObject_onceToken != -1) {
    dispatch_once(&getWFRunningLifecycleLogObject_onceToken, &__block_literal_global_32);
  }
  uint64_t v0 = (void *)getWFRunningLifecycleLogObject_log;
  return v0;
}

uint64_t __getWFRunningLifecycleLogObject_block_invoke()
{
  getWFRunningLifecycleLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "RunningLifecycle");
  return MEMORY[0x1F41817F8]();
}

id getWFIntentExecutionLogObject()
{
  if (getWFIntentExecutionLogObject_onceToken != -1) {
    dispatch_once(&getWFIntentExecutionLogObject_onceToken, &__block_literal_global_35);
  }
  uint64_t v0 = (void *)getWFIntentExecutionLogObject_log;
  return v0;
}

uint64_t __getWFIntentExecutionLogObject_block_invoke()
{
  getWFIntentExecutionLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "IntentExecution");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFCloudKitSyncLogObject_block_invoke()
{
  getWFCloudKitSyncLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "CloudKitSync");
  return MEMORY[0x1F41817F8]();
}

id getWFWatchSyncLogObject()
{
  if (getWFWatchSyncLogObject_onceToken[0] != -1) {
    dispatch_once(getWFWatchSyncLogObject_onceToken, &__block_literal_global_41);
  }
  uint64_t v0 = (void *)getWFWatchSyncLogObject_log;
  return v0;
}

uint64_t __getWFWatchSyncLogObject_block_invoke()
{
  getWFWatchSyncLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "WatchSync");
  return MEMORY[0x1F41817F8]();
}

id getWFTriggersLogObject()
{
  if (getWFTriggersLogObject_onceToken != -1) {
    dispatch_once(&getWFTriggersLogObject_onceToken, &__block_literal_global_44);
  }
  uint64_t v0 = (void *)getWFTriggersLogObject_log;
  return v0;
}

uint64_t __getWFTriggersLogObject_block_invoke()
{
  getWFTriggersLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Triggers");
  return MEMORY[0x1F41817F8]();
}

id getWFTriggerNotificationsLogObject()
{
  if (getWFTriggerNotificationsLogObject_onceToken != -1) {
    dispatch_once(&getWFTriggerNotificationsLogObject_onceToken, &__block_literal_global_47);
  }
  uint64_t v0 = (void *)getWFTriggerNotificationsLogObject_log;
  return v0;
}

uint64_t __getWFTriggerNotificationsLogObject_block_invoke()
{
  getWFTriggerNotificationsLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "TriggerNotifications");
  return MEMORY[0x1F41817F8]();
}

id getWFXPCRunnerLogObject()
{
  if (getWFXPCRunnerLogObject_onceToken != -1) {
    dispatch_once(&getWFXPCRunnerLogObject_onceToken, &__block_literal_global_50);
  }
  uint64_t v0 = (void *)getWFXPCRunnerLogObject_log;
  return v0;
}

uint64_t __getWFXPCRunnerLogObject_block_invoke()
{
  getWFXPCRunnerLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "XPCRunner");
  return MEMORY[0x1F41817F8]();
}

id getWFPeaceMigrationLogObject()
{
  if (getWFPeaceMigrationLogObject_onceToken != -1) {
    dispatch_once(&getWFPeaceMigrationLogObject_onceToken, &__block_literal_global_53);
  }
  uint64_t v0 = (void *)getWFPeaceMigrationLogObject_log;
  return v0;
}

uint64_t __getWFPeaceMigrationLogObject_block_invoke()
{
  getWFPeaceMigrationLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "PeaceMigration");
  return MEMORY[0x1F41817F8]();
}

id getWFWorkflowMigrationLogObject()
{
  if (getWFWorkflowMigrationLogObject_onceToken != -1) {
    dispatch_once(&getWFWorkflowMigrationLogObject_onceToken, &__block_literal_global_56);
  }
  uint64_t v0 = (void *)getWFWorkflowMigrationLogObject_log;
  return v0;
}

uint64_t __getWFWorkflowMigrationLogObject_block_invoke()
{
  getWFWorkflowMigrationLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "WorkflowMigration");
  return MEMORY[0x1F41817F8]();
}

id getWFAutomatorMigrationLogObject()
{
  if (getWFAutomatorMigrationLogObject_onceToken != -1) {
    dispatch_once(&getWFAutomatorMigrationLogObject_onceToken, &__block_literal_global_59_1944);
  }
  uint64_t v0 = (void *)getWFAutomatorMigrationLogObject_log;
  return v0;
}

uint64_t __getWFAutomatorMigrationLogObject_block_invoke()
{
  getWFAutomatorMigrationLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "AutomatorMigration");
  return MEMORY[0x1F41817F8]();
}

id getWFSpotlightSyncLogObject()
{
  if (getWFSpotlightSyncLogObject_onceToken != -1) {
    dispatch_once(&getWFSpotlightSyncLogObject_onceToken, &__block_literal_global_62);
  }
  uint64_t v0 = (void *)getWFSpotlightSyncLogObject_log;
  return v0;
}

uint64_t __getWFSpotlightSyncLogObject_block_invoke()
{
  getWFSpotlightSyncLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "SpotlightSync");
  return MEMORY[0x1F41817F8]();
}

id getWFEventTrackerLogObject()
{
  if (getWFEventTrackerLogObject_onceToken != -1) {
    dispatch_once(&getWFEventTrackerLogObject_onceToken, &__block_literal_global_68);
  }
  uint64_t v0 = (void *)getWFEventTrackerLogObject_log;
  return v0;
}

uint64_t __getWFEventTrackerLogObject_block_invoke()
{
  getWFEventTrackerLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "EventTracker");
  return MEMORY[0x1F41817F8]();
}

id getWFHomeLogObject()
{
  if (getWFHomeLogObject_onceToken != -1) {
    dispatch_once(&getWFHomeLogObject_onceToken, &__block_literal_global_71);
  }
  uint64_t v0 = (void *)getWFHomeLogObject_log;
  return v0;
}

uint64_t __getWFHomeLogObject_block_invoke()
{
  getWFHomeLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Home");
  return MEMORY[0x1F41817F8]();
}

id getWFRemoteExecutionLogObject()
{
  if (getWFRemoteExecutionLogObject_onceToken != -1) {
    dispatch_once(&getWFRemoteExecutionLogObject_onceToken, &__block_literal_global_74);
  }
  uint64_t v0 = (void *)getWFRemoteExecutionLogObject_log;
  return v0;
}

uint64_t __getWFRemoteExecutionLogObject_block_invoke()
{
  getWFRemoteExecutionLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "RemoteExecution");
  return MEMORY[0x1F41817F8]();
}

id getWFBundledIntentsLogObject()
{
  if (getWFBundledIntentsLogObject_onceToken != -1) {
    dispatch_once(&getWFBundledIntentsLogObject_onceToken, &__block_literal_global_77);
  }
  uint64_t v0 = (void *)getWFBundledIntentsLogObject_log;
  return v0;
}

uint64_t __getWFBundledIntentsLogObject_block_invoke()
{
  getWFBundledIntentsLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "BundledIntents");
  return MEMORY[0x1F41817F8]();
}

id getWFDialogLogObject()
{
  if (getWFDialogLogObject_onceToken != -1) {
    dispatch_once(&getWFDialogLogObject_onceToken, &__block_literal_global_80);
  }
  uint64_t v0 = (void *)getWFDialogLogObject_log;
  return v0;
}

uint64_t __getWFDialogLogObject_block_invoke()
{
  getWFDialogLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Dialog");
  return MEMORY[0x1F41817F8]();
}

id getWFWidgetLogObject()
{
  if (getWFWidgetLogObject_onceToken[0] != -1) {
    dispatch_once(getWFWidgetLogObject_onceToken, &__block_literal_global_83);
  }
  uint64_t v0 = (void *)getWFWidgetLogObject_log;
  return v0;
}

uint64_t __getWFWidgetLogObject_block_invoke()
{
  getWFWidgetLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Widget");
  return MEMORY[0x1F41817F8]();
}

id getWFSleepLogObject()
{
  if (getWFSleepLogObject_onceToken != -1) {
    dispatch_once(&getWFSleepLogObject_onceToken, &__block_literal_global_86);
  }
  uint64_t v0 = (void *)getWFSleepLogObject_log;
  return v0;
}

uint64_t __getWFSleepLogObject_block_invoke()
{
  getWFSleepLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Sleep");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFSecurityLogObject_block_invoke()
{
  getWFSecurityLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Security");
  return MEMORY[0x1F41817F8]();
}

id getWFContextualActionsLogObject()
{
  if (getWFContextualActionsLogObject_onceToken != -1) {
    dispatch_once(&getWFContextualActionsLogObject_onceToken, &__block_literal_global_101);
  }
  uint64_t v0 = (void *)getWFContextualActionsLogObject_log;
  return v0;
}

uint64_t __getWFContextualActionsLogObject_block_invoke()
{
  getWFContextualActionsLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ContextualActions");
  return MEMORY[0x1F41817F8]();
}

id getWFSandboxLogObject()
{
  if (getWFSandboxLogObject_onceToken != -1) {
    dispatch_once(&getWFSandboxLogObject_onceToken, &__block_literal_global_104);
  }
  uint64_t v0 = (void *)getWFSandboxLogObject_log;
  return v0;
}

uint64_t __getWFSandboxLogObject_block_invoke()
{
  getWFSandboxLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Sandbox");
  return MEMORY[0x1F41817F8]();
}

uint64_t __getWFAppIntentsLogObject_block_invoke()
{
  getWFAppIntentsLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "AppIntents");
  return MEMORY[0x1F41817F8]();
}

id getWFRunningStateLogObject()
{
  if (getWFRunningStateLogObject_onceToken != -1) {
    dispatch_once(&getWFRunningStateLogObject_onceToken, &__block_literal_global_110);
  }
  uint64_t v0 = (void *)getWFRunningStateLogObject_log;
  return v0;
}

uint64_t __getWFRunningStateLogObject_block_invoke()
{
  getWFRunningStateLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "RunningState");
  return MEMORY[0x1F41817F8]();
}

id getWFStateMachineLogObject()
{
  if (getWFStateMachineLogObject_onceToken != -1) {
    dispatch_once(&getWFStateMachineLogObject_onceToken, &__block_literal_global_113);
  }
  uint64_t v0 = (void *)getWFStateMachineLogObject_log;
  return v0;
}

uint64_t __getWFStateMachineLogObject_block_invoke()
{
  getWFStateMachineLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "StateMachine");
  return MEMORY[0x1F41817F8]();
}

id getWFSessionKitLogObject()
{
  if (getWFSessionKitLogObject_onceToken != -1) {
    dispatch_once(&getWFSessionKitLogObject_onceToken, &__block_literal_global_116);
  }
  uint64_t v0 = (void *)getWFSessionKitLogObject_log;
  return v0;
}

uint64_t __getWFSessionKitLogObject_block_invoke()
{
  getWFSessionKitLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "SessionKit");
  return MEMORY[0x1F41817F8]();
}

id getWFTestHarnessLogObject()
{
  if (getWFTestHarnessLogObject_onceToken != -1) {
    dispatch_once(&getWFTestHarnessLogObject_onceToken, &__block_literal_global_119);
  }
  uint64_t v0 = (void *)getWFTestHarnessLogObject_log;
  return v0;
}

uint64_t __getWFTestHarnessLogObject_block_invoke()
{
  getWFTestHarnessLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "TestHarness");
  return MEMORY[0x1F41817F8]();
}

id getWFBiomeWritingLogObject()
{
  if (getWFBiomeWritingLogObject_onceToken != -1) {
    dispatch_once(&getWFBiomeWritingLogObject_onceToken, &__block_literal_global_122);
  }
  uint64_t v0 = (void *)getWFBiomeWritingLogObject_log;
  return v0;
}

uint64_t __getWFBiomeWritingLogObject_block_invoke()
{
  getWFBiomeWritingLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "BiomeWriting");
  return MEMORY[0x1F41817F8]();
}

id getWFDropletLogObject()
{
  if (getWFDropletLogObject_onceToken != -1) {
    dispatch_once(&getWFDropletLogObject_onceToken, &__block_literal_global_128);
  }
  uint64_t v0 = (void *)getWFDropletLogObject_log;
  return v0;
}

uint64_t __getWFDropletLogObject_block_invoke()
{
  getWFDropletLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Droplet");
  return MEMORY[0x1F41817F8]();
}

id getWFWidgetConfigurationLogObject()
{
  if (getWFWidgetConfigurationLogObject_onceToken[0] != -1) {
    dispatch_once(getWFWidgetConfigurationLogObject_onceToken, &__block_literal_global_131);
  }
  uint64_t v0 = (void *)getWFWidgetConfigurationLogObject_log;
  return v0;
}

uint64_t __getWFWidgetConfigurationLogObject_block_invoke()
{
  getWFWidgetConfigurationLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "WidgetConfiguration");
  return MEMORY[0x1F41817F8]();
}

id getWFSmartShortcutPickerLogObject()
{
  if (getWFSmartShortcutPickerLogObject_onceToken != -1) {
    dispatch_once(&getWFSmartShortcutPickerLogObject_onceToken, &__block_literal_global_134);
  }
  uint64_t v0 = (void *)getWFSmartShortcutPickerLogObject_log;
  return v0;
}

uint64_t __getWFSmartShortcutPickerLogObject_block_invoke()
{
  getWFSmartShortcutPickerLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "SmartShortcutPicker");
  return MEMORY[0x1F41817F8]();
}

id getWFTopHitsLogObject()
{
  if (getWFTopHitsLogObject_onceToken != -1) {
    dispatch_once(&getWFTopHitsLogObject_onceToken, &__block_literal_global_137);
  }
  uint64_t v0 = (void *)getWFTopHitsLogObject_log;
  return v0;
}

uint64_t __getWFTopHitsLogObject_block_invoke()
{
  getWFTopHitsLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "TopHits");
  return MEMORY[0x1F41817F8]();
}

id getWFTestingLifecycleLogObject()
{
  if (getWFTestingLifecycleLogObject_onceToken != -1) {
    dispatch_once(&getWFTestingLifecycleLogObject_onceToken, &__block_literal_global_140);
  }
  uint64_t v0 = (void *)getWFTestingLifecycleLogObject_log;
  return v0;
}

uint64_t __getWFTestingLifecycleLogObject_block_invoke()
{
  getWFTestingLifecycleLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "TestingLifecycle");
  return MEMORY[0x1F41817F8]();
}

id getWFToolKitLogObject()
{
  if (getWFToolKitLogObject_onceToken != -1) {
    dispatch_once(&getWFToolKitLogObject_onceToken, &__block_literal_global_143);
  }
  uint64_t v0 = (void *)getWFToolKitLogObject_log;
  return v0;
}

uint64_t __getWFToolKitLogObject_block_invoke()
{
  getWFToolKitLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ToolKit");
  return MEMORY[0x1F41817F8]();
}

id getWFToolKitSyncLogObject()
{
  if (getWFToolKitSyncLogObject_onceToken != -1) {
    dispatch_once(&getWFToolKitSyncLogObject_onceToken, &__block_literal_global_146);
  }
  uint64_t v0 = (void *)getWFToolKitSyncLogObject_log;
  return v0;
}

uint64_t __getWFToolKitSyncLogObject_block_invoke()
{
  getWFToolKitSyncLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ToolKitSync");
  return MEMORY[0x1F41817F8]();
}

id getWFToolKitDatabaseLogObject()
{
  if (getWFToolKitDatabaseLogObject_onceToken != -1) {
    dispatch_once(&getWFToolKitDatabaseLogObject_onceToken, &__block_literal_global_149);
  }
  uint64_t v0 = (void *)getWFToolKitDatabaseLogObject_log;
  return v0;
}

uint64_t __getWFToolKitDatabaseLogObject_block_invoke()
{
  getWFToolKitDatabaseLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ToolKitDatabase");
  return MEMORY[0x1F41817F8]();
}

id getWFToolKitIndexingLogObject()
{
  if (getWFToolKitIndexingLogObject_onceToken != -1) {
    dispatch_once(&getWFToolKitIndexingLogObject_onceToken, &__block_literal_global_152);
  }
  uint64_t v0 = (void *)getWFToolKitIndexingLogObject_log;
  return v0;
}

uint64_t __getWFToolKitIndexingLogObject_block_invoke()
{
  getWFToolKitIndexingLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ToolKitIndexing");
  return MEMORY[0x1F41817F8]();
}

id getWFToolKitRepresentationLogObject()
{
  if (getWFToolKitRepresentationLogObject_onceToken != -1) {
    dispatch_once(&getWFToolKitRepresentationLogObject_onceToken, &__block_literal_global_155);
  }
  uint64_t v0 = (void *)getWFToolKitRepresentationLogObject_log;
  return v0;
}

uint64_t __getWFToolKitRepresentationLogObject_block_invoke()
{
  getWFToolKitRepresentationLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ToolKitRepresentation");
  return MEMORY[0x1F41817F8]();
}

id getWFToolKitSchedulerLogObject()
{
  if (getWFToolKitSchedulerLogObject_onceToken != -1) {
    dispatch_once(&getWFToolKitSchedulerLogObject_onceToken, &__block_literal_global_158);
  }
  uint64_t v0 = (void *)getWFToolKitSchedulerLogObject_log;
  return v0;
}

uint64_t __getWFToolKitSchedulerLogObject_block_invoke()
{
  getWFToolKitSchedulerLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ToolKitScheduler");
  return MEMORY[0x1F41817F8]();
}

id getWFToolKitExecutionLogObject()
{
  if (getWFToolKitExecutionLogObject_onceToken != -1) {
    dispatch_once(&getWFToolKitExecutionLogObject_onceToken, &__block_literal_global_161);
  }
  uint64_t v0 = (void *)getWFToolKitExecutionLogObject_log;
  return v0;
}

uint64_t __getWFToolKitExecutionLogObject_block_invoke()
{
  getWFToolKitExecutionLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ToolKitExecution");
  return MEMORY[0x1F41817F8]();
}

id getWFToolKitSQLLogObject()
{
  if (getWFToolKitSQLLogObject_onceToken != -1) {
    dispatch_once(&getWFToolKitSQLLogObject_onceToken, &__block_literal_global_164);
  }
  uint64_t v0 = (void *)getWFToolKitSQLLogObject_log;
  return v0;
}

uint64_t __getWFToolKitSQLLogObject_block_invoke()
{
  getWFToolKitSQLLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ToolKitSQL");
  return MEMORY[0x1F41817F8]();
}

id getWFAppShortcutInterpolationLogObject()
{
  if (getWFAppShortcutInterpolationLogObject_onceToken != -1) {
    dispatch_once(&getWFAppShortcutInterpolationLogObject_onceToken, &__block_literal_global_167);
  }
  uint64_t v0 = (void *)getWFAppShortcutInterpolationLogObject_log;
  return v0;
}

uint64_t __getWFAppShortcutInterpolationLogObject_block_invoke()
{
  getWFAppShortcutInterpolationLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "AppShortcutInterpolation");
  return MEMORY[0x1F41817F8]();
}

id getWFActionConfirmationAlertLogObject()
{
  if (getWFActionConfirmationAlertLogObject_onceToken != -1) {
    dispatch_once(&getWFActionConfirmationAlertLogObject_onceToken, &__block_literal_global_170);
  }
  uint64_t v0 = (void *)getWFActionConfirmationAlertLogObject_log;
  return v0;
}

uint64_t __getWFActionConfirmationAlertLogObject_block_invoke()
{
  getWFActionConfirmationAlertLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "ActionConfirmationAlert");
  return MEMORY[0x1F41817F8]();
}

id getWFPersonaLogObject()
{
  if (getWFPersonaLogObject_onceToken != -1) {
    dispatch_once(&getWFPersonaLogObject_onceToken, &__block_literal_global_173);
  }
  uint64_t v0 = (void *)getWFPersonaLogObject_log;
  return v0;
}

uint64_t __getWFPersonaLogObject_block_invoke()
{
  getWFPersonaLogObject_log = (uint64_t)os_log_create(WFLogSubsystem, "Persona");
  return MEMORY[0x1F41817F8]();
}

uint64_t WFLogAriadneSignpostBegin(__int16 a1)
{
  return MEMORY[0x1F40CC700]((4 * (a1 & 0x3FFF)) | 0x2B740000u, 0, 0, 0, 0);
}

uint64_t WFLogAriadneSignpostEnd(__int16 a1)
{
  return MEMORY[0x1F40CC700]((4 * a1 + 4) & 0xFFFC | 0x2B740000u, 0, 0, 0, 0);
}

void sub_1B3CEE64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getBiomeLibrarySymbolLoc_block_invoke(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!BiomeLibraryLibraryCore_frameworkLibrary)
  {
    v5[1] = (void *)MEMORY[0x1E4F143A8];
    uint64_t v5[2] = (void *)3221225472;
    v5[3] = __BiomeLibraryLibraryCore_block_invoke;
    long long v5[4] = &__block_descriptor_40_e5_v8__0l;
    v5[5] = v5;
    long long v6 = xmmword_1E6077420;
    uint64_t v7 = 0;
    BiomeLibraryLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  id v2 = (void *)BiomeLibraryLibraryCore_frameworkLibrary;
  if (!BiomeLibraryLibraryCore_frameworkLibrary)
  {
    a1 = [MEMORY[0x1E4F28B00] currentHandler];
    id v2 = [NSString stringWithUTF8String:"void *BiomeLibraryLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFToggleFocusModeContextualAction.m", 19, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "BiomeLibrary");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  getBiomeLibrarySymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

uint64_t __BiomeLibraryLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  BiomeLibraryLibraryCore_frameworkLibrary = result;
  return result;
}

id VCAppBundleIdentifierForBundleRecord(void *a1)
{
  id v1 = a1;
  id v2 = [v1 bundleIdentifier];
  uint64_t v3 = [&unk_1F0CB1DF0 objectForKey:v2];

  if (v3)
  {
    id v4 = [v1 bundleIdentifier];
    id v5 = [&unk_1F0CB1DF0 objectForKey:v4];
  }
  else
  {
    id v6 = v1;
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    id v4 = v7;

    uint64_t v8 = [v4 containingBundleRecord];
    uint64_t v9 = (void *)v8;
    if (v8)
    {
      id v5 = VCAppBundleIdentifierForBundleRecord(v8);
    }
    else
    {
      id v10 = v6;
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        id v11 = v10;
      }
      else {
        id v11 = 0;
      }
      id v12 = v11;

      if (v12 || !v4) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = v4;
      }
      id v5 = [v13 bundleIdentifier];
    }
  }

  return v5;
}

void sub_1B3CF34E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t __Block_byref_object_copy__2786(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2787(uint64_t a1)
{
}

id WFAppOrExtensionRecordFromBundleIdentifier(void *a1)
{
  id v1 = a1;
  id v2 = (void *)[objc_alloc(MEMORY[0x1E4F223C8]) initWithBundleIdentifier:v1 allowPlaceholder:0 error:0];
  uint64_t v3 = v2;
  if (v2)
  {
    id v4 = v2;
  }
  else
  {
    id v5 = (void *)[objc_alloc(MEMORY[0x1E4F223A0]) initWithBundleIdentifier:v1 error:0];
    id v4 = v5;
    if (v5) {
      id v6 = v5;
    }
  }
  return v4;
}

id WFOutOfProcessWorkflowControllerHostXPCInterface()
{
  uint64_t v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F0CB51B8];
  id v1 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v0 setClasses:v1 forSelector:sel_actionWithUUID_didFinishRunningWithError_serializedVariable_executionResultMetadata_ argumentIndex:2 ofReply:0];

  id v2 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v0 setClasses:v2 forSelector:sel_actionWithUUID_didFinishRunningWithError_serializedVariable_executionResultMetadata_ argumentIndex:3 ofReply:0];

  return v0;
}

uint64_t WFOutOfProcessWorkflowControllerHostBSProtocol()
{
  return [MEMORY[0x1E4F4F7B8] protocolForProtocol:&unk_1F0CB51B8];
}

id WFOutOfProcessWorkflowControllerVendorXPCInterface()
{
  uint64_t v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F0CB6D20];
  id v1 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  [v0 setClasses:v3 forSelector:sel_computeFinderResizedSizesForImages_inSizes_completion_ argumentIndex:0 ofReply:0];

  id v4 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v5 = objc_opt_class();
  id v6 = objc_msgSend(v4, "setWithObjects:", v5, objc_opt_class(), 0);
  [v0 setClasses:v6 forSelector:sel_computeFinderResizedSizesForImages_inSizes_completion_ argumentIndex:1 ofReply:0];

  uint64_t v7 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v8 = objc_opt_class();
  uint64_t v9 = objc_opt_class();
  uint64_t v10 = objc_opt_class();
  id v11 = objc_msgSend(v7, "setWithObjects:", v8, v9, v10, objc_opt_class(), 0);
  [v0 setClasses:v11 forSelector:sel_computeFinderResizedSizesForImages_inSizes_completion_ argumentIndex:0 ofReply:1];

  return v0;
}

uint64_t WFOutOfProcessWorkflowControllerVendorBSProtocol()
{
  return [MEMORY[0x1E4F4F7B8] protocolForProtocol:&unk_1F0CB6D20];
}

void WFBiomeLibrary()
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = (void (*)(void))getBiomeLibrarySymbolLoc_ptr_3392;
  uint64_t v9 = getBiomeLibrarySymbolLoc_ptr_3392;
  if (!getBiomeLibrarySymbolLoc_ptr_3392)
  {
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 3221225472;
    uint64_t v5[2] = __getBiomeLibrarySymbolLoc_block_invoke_3393;
    v5[3] = &unk_1E6079C28;
    long long v5[4] = &v6;
    __getBiomeLibrarySymbolLoc_block_invoke_3393(v5);
    uint64_t v0 = (void (*)(void))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v0)
  {
    id v1 = v0();
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v4 = [NSString stringWithUTF8String:"id<BMRootLibrary> WFBiomeLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFToggleSettingContextualAction.m", 20, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3CF7BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getBiomeLibrarySymbolLoc_block_invoke_3393(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_3396)
  {
    v5[1] = (void *)MEMORY[0x1E4F143A8];
    uint64_t v5[2] = (void *)3221225472;
    v5[3] = __BiomeLibraryLibraryCore_block_invoke_3397;
    long long v5[4] = &__block_descriptor_40_e5_v8__0l;
    void v5[5] = v5;
    long long v6 = xmmword_1E60775B8;
    uint64_t v7 = 0;
    BiomeLibraryLibraryCore_frameworkLibrary_3396 = _sl_dlopen();
  }
  id v2 = (void *)BiomeLibraryLibraryCore_frameworkLibrary_3396;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_3396)
  {
    a1 = [MEMORY[0x1E4F28B00] currentHandler];
    id v2 = [NSString stringWithUTF8String:"void *BiomeLibraryLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFToggleSettingContextualAction.m", 19, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "BiomeLibrary");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  getBiomeLibrarySymbolLoc_ptr_3392 = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

uint64_t __BiomeLibraryLibraryCore_block_invoke_3397()
{
  uint64_t result = _sl_dlopen();
  BiomeLibraryLibraryCore_frameworkLibrary_3396 = result;
  return result;
}

id WFToggleSettingContextualActions()
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)[&unk_1F0CB1CE8 mutableCopy];
  id v1 = +[WFDevice currentDevice];
  [v0 addObjectsFromArray:&unk_1F0CB1D00];
  [v0 addObjectsFromArray:&unk_1F0CB1D18];
  if ([v1 hasCapability:@"CellularData"])
  {
    id v2 = +[WFCellularSettings defaultSettings];
    id v14 = 0;
    int v3 = [v2 isCellularDataCapableWithError:&v14];
    id v4 = v14;
    uint64_t v5 = getWFSpotlightSyncLogObject();
    long long v6 = v5;
    if (v4)
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        id v16 = "WFToggleSettingContextualActions";
        __int16 v17 = 2112;
        id v18 = v4;
        uint64_t v7 = "%s Unable to get cellular data capability: %@";
        uint64_t v8 = v6;
        os_log_type_t v9 = OS_LOG_TYPE_ERROR;
        uint32_t v10 = 22;
LABEL_11:
        _os_log_impl(&dword_1B3C5C000, v8, v9, v7, buf, v10);
      }
    }
    else
    {
      BOOL v11 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
      if (v3)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136315138;
          id v16 = "WFToggleSettingContextualActions";
          _os_log_impl(&dword_1B3C5C000, v6, OS_LOG_TYPE_INFO, "%s Device is cellular data capable, indexing toggle", buf, 0xCu);
        }

        [v0 addObject:&unk_1F0CAE010];
        goto LABEL_13;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136315138;
        id v16 = "WFToggleSettingContextualActions";
        uint64_t v7 = "%s Device is not cellular data capable, not indexing toggle";
        uint64_t v8 = v6;
        os_log_type_t v9 = OS_LOG_TYPE_INFO;
        uint32_t v10 = 12;
        goto LABEL_11;
      }
    }

LABEL_13:
  }
  if ([v1 hasCapability:@"AlwaysOnDisplay"]) {
    [v0 addObject:&unk_1F0CAE028];
  }
  if ([v1 hasCapability:@"TrueTone"]) {
    [v0 addObject:&unk_1F0CAE040];
  }
  if ([v1 hasCapability:@"NightShift"]) {
    [v0 addObject:&unk_1F0CAE058];
  }
  if (([v1 hasCapability:@"HardwareRingerSwitch"] & 1) == 0) {
    [v0 addObject:&unk_1F0CAE070];
  }
  id v12 = objc_msgSend(v0, "if_compactMap:", &__block_literal_global_3554);

  return v12;
}

WFToggleSettingContextualAction *__WFToggleSettingContextualActions_block_invoke(uint64_t a1, void *a2)
{
  id v2 = -[WFToggleSettingContextualAction initWithSetting:operation:]([WFToggleSettingContextualAction alloc], "initWithSetting:operation:", [a2 unsignedIntegerValue], 2);
  return v2;
}

void *__getCGImageSourceCreateImageAtIndexSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "CGImageSourceCreateImageAtIndex");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceCreateImageAtIndexSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *ImageIOLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!ImageIOLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __ImageIOLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E6077690;
    uint64_t v6 = 0;
    ImageIOLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)ImageIOLibraryCore_frameworkLibrary;
  if (!ImageIOLibraryCore_frameworkLibrary)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"void *ImageIOLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFImage.m", 39, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __ImageIOLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ImageIOLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getCGImageSourceCreateWithURLSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "CGImageSourceCreateWithURL");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceCreateWithURLSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageSourceCreateWithDataSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "CGImageSourceCreateWithData");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceCreateWithDataSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void soft_CGImageSourceCopyProperties(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  id v2 = (void (*)(uint64_t, void))getCGImageSourceCopyPropertiesSymbolLoc_ptr;
  os_log_type_t v9 = getCGImageSourceCopyPropertiesSymbolLoc_ptr;
  if (!getCGImageSourceCopyPropertiesSymbolLoc_ptr)
  {
    int v3 = ImageIOLibrary();
    v7[3] = (uint64_t)dlsym(v3, "CGImageSourceCopyProperties");
    getCGImageSourceCopyPropertiesSymbolLoc_ptr = (_UNKNOWN *)v7[3];
    id v2 = (void (*)(uint64_t, void))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    v2(a1, 0);
  }
  else
  {
    id v4 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v5 = objc_msgSend(NSString, "stringWithUTF8String:", "CFDictionaryRef  _Nullable soft_CGImageSourceCopyProperties(CGImageSourceRef _Nonnull, CFDictionaryRef _Nullable)");
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFImage.m", 43, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3CFC530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getkCGImagePropertyOrientation()
{
  uint64_t v4 = 0;
  long long v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = getkCGImagePropertyOrientationSymbolLoc_ptr;
  uint64_t v7 = getkCGImagePropertyOrientationSymbolLoc_ptr;
  if (!getkCGImagePropertyOrientationSymbolLoc_ptr)
  {
    id v1 = ImageIOLibrary();
    v5[3] = (uint64_t)dlsym(v1, "kCGImagePropertyOrientation");
    getkCGImagePropertyOrientationSymbolLoc_ptr = v5[3];
    uint64_t v0 = v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"CFStringRef getkCGImagePropertyOrientation(void)"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFImage.m", 47, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3CFC688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCGImageSourceGetCountSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "CGImageSourceGetCount");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceGetCountSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageSourceCopyPropertiesAtIndexSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "CGImageSourceCopyPropertiesAtIndex");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyOrientationSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "kCGImagePropertyOrientation");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyOrientationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageSourceCopyPropertiesSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "CGImageSourceCopyProperties");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceCopyPropertiesSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyPixelWidthSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "kCGImagePropertyPixelWidth");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyPixelWidthSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyPixelHeightSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary();
  uint64_t result = dlsym(v2, "kCGImagePropertyPixelHeight");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyPixelHeightSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *WFGlyphCharactersInSection(uint64_t a1)
{
  id v1 = &unk_1F0CB1D30;
  if (a1 == 1) {
    id v1 = &unk_1F0CB1D48;
  }
  if (a1 == 2) {
    return &unk_1F0CB1D60;
  }
  else {
    return v1;
  }
}

id WFNameForGlyphCharacter(int a1)
{
  id v1 = 0;
  switch(a1)
  {
    case 61440:
      id v2 = @"Shortcuts Icon";
      goto LABEL_569;
    case 61441:
    case 61443:
    case 61445:
    case 61451:
    case 61462:
    case 61463:
    case 61469:
    case 61479:
    case 61485:
    case 61492:
    case 61493:
    case 61513:
    case 61516:
    case 61517:
    case 61526:
    case 61527:
    case 61530:
    case 61531:
    case 61570:
    case 61573:
    case 61576:
    case 61580:
    case 61582:
    case 61583:
    case 61585:
    case 61589:
    case 61594:
    case 61595:
    case 61596:
    case 61597:
    case 61598:
    case 61599:
    case 61600:
    case 61601:
    case 61602:
    case 61603:
    case 61604:
    case 61605:
    case 61606:
    case 61607:
    case 61608:
    case 61609:
    case 61610:
    case 61611:
    case 61612:
    case 61613:
    case 61614:
    case 61615:
    case 61616:
    case 61617:
    case 61618:
    case 61619:
    case 61620:
    case 61621:
    case 61622:
    case 61623:
    case 61624:
    case 61625:
    case 61626:
    case 61627:
    case 61628:
    case 61629:
    case 61630:
    case 61631:
    case 61632:
    case 61633:
    case 61634:
    case 61635:
    case 61636:
    case 61637:
    case 61638:
    case 61639:
    case 61640:
    case 61641:
    case 61642:
    case 61643:
    case 61644:
    case 61645:
    case 61646:
    case 61647:
    case 61648:
    case 61649:
    case 61650:
    case 61651:
    case 61652:
    case 61653:
    case 61654:
    case 61655:
    case 61656:
    case 61657:
    case 61658:
    case 61659:
    case 61660:
    case 61661:
    case 61662:
    case 61663:
    case 61664:
    case 61665:
    case 61666:
    case 61667:
    case 61668:
    case 61669:
    case 61670:
    case 61671:
    case 61672:
    case 61673:
    case 61674:
    case 61675:
    case 61676:
    case 61677:
    case 61678:
    case 61679:
    case 61680:
    case 61681:
    case 61682:
    case 61683:
    case 61684:
    case 61685:
    case 61686:
    case 61687:
    case 61688:
    case 61689:
    case 61690:
    case 61691:
    case 61692:
    case 61693:
    case 61694:
    case 61695:
    case 61706:
    case 61707:
    case 61708:
    case 61709:
    case 61710:
    case 61711:
    case 61722:
    case 61723:
    case 61724:
    case 61725:
    case 61726:
    case 61727:
    case 61738:
    case 61739:
    case 61740:
    case 61741:
    case 61742:
    case 61743:
    case 61754:
    case 61755:
    case 61756:
    case 61757:
    case 61758:
    case 61759:
    case 61770:
    case 61771:
    case 61772:
    case 61773:
    case 61774:
    case 61775:
    case 61786:
    case 61787:
    case 61788:
    case 61789:
    case 61790:
    case 61791:
    case 61802:
    case 61803:
    case 61804:
    case 61805:
    case 61806:
    case 61807:
    case 61818:
    case 61819:
    case 61820:
    case 61821:
    case 61822:
    case 61823:
    case 61834:
    case 61835:
    case 61836:
    case 61837:
    case 61838:
    case 61839:
    case 61850:
    case 61851:
    case 61852:
    case 61853:
    case 61854:
    case 61855:
    case 61856:
    case 61857:
    case 61858:
    case 61859:
    case 61860:
    case 61861:
    case 61862:
    case 61863:
    case 61864:
    case 61865:
    case 61866:
    case 61867:
    case 61868:
    case 61869:
    case 61870:
    case 61871:
    case 61872:
    case 61873:
    case 61874:
    case 61875:
    case 61876:
    case 61877:
    case 61878:
    case 61879:
    case 61880:
    case 61881:
    case 61882:
    case 61883:
    case 61884:
    case 61885:
    case 61886:
    case 61887:
    case 61888:
    case 61889:
    case 61890:
    case 61891:
    case 61892:
    case 61893:
    case 61894:
    case 61895:
    case 61896:
    case 61897:
    case 61898:
    case 61899:
    case 61900:
    case 61901:
    case 61902:
    case 61903:
    case 61904:
    case 61905:
    case 61906:
    case 61907:
    case 61908:
    case 61909:
    case 61910:
    case 61911:
    case 61912:
    case 61913:
    case 61914:
    case 61915:
    case 61916:
    case 61917:
    case 61918:
    case 61919:
    case 61920:
    case 61921:
    case 61922:
    case 61923:
    case 61924:
    case 61925:
    case 61926:
    case 61927:
    case 61928:
    case 61929:
    case 61930:
    case 61931:
    case 61932:
    case 61933:
    case 61934:
    case 61935:
    case 61936:
    case 61937:
    case 61938:
    case 61939:
    case 61940:
    case 61941:
    case 61942:
    case 61943:
    case 61944:
    case 61945:
    case 61946:
    case 61947:
    case 61948:
    case 61949:
    case 61950:
    case 61951:
    case 61962:
    case 61963:
    case 61964:
    case 61965:
    case 61966:
    case 61967:
    case 61978:
    case 61979:
    case 61980:
    case 61981:
    case 61982:
    case 61983:
    case 61994:
    case 61995:
    case 61996:
    case 61997:
    case 61998:
    case 61999:
    case 62010:
    case 62011:
    case 62012:
    case 62013:
    case 62014:
    case 62015:
    case 62026:
    case 62027:
    case 62028:
    case 62029:
    case 62030:
    case 62031:
    case 62032:
    case 62042:
    case 62043:
    case 62044:
    case 62045:
    case 62046:
    case 62047:
    case 62058:
    case 62059:
    case 62060:
    case 62061:
    case 62062:
    case 62063:
    case 62074:
    case 62075:
    case 62076:
    case 62077:
    case 62078:
    case 62079:
    case 62090:
    case 62091:
    case 62092:
    case 62093:
    case 62094:
    case 62095:
    case 62106:
    case 62107:
    case 62108:
    case 62109:
    case 62110:
    case 62111:
    case 62112:
    case 62113:
    case 62114:
    case 62115:
    case 62116:
    case 62117:
    case 62118:
    case 62119:
    case 62120:
    case 62121:
    case 62122:
    case 62123:
    case 62124:
    case 62125:
    case 62126:
    case 62127:
    case 62128:
    case 62129:
    case 62130:
    case 62131:
    case 62132:
    case 62133:
    case 62134:
    case 62135:
    case 62136:
    case 62137:
    case 62138:
    case 62139:
    case 62140:
    case 62141:
    case 62142:
    case 62143:
    case 62144:
    case 62145:
    case 62146:
    case 62147:
    case 62148:
    case 62149:
    case 62150:
    case 62151:
    case 62152:
    case 62153:
    case 62154:
    case 62155:
    case 62156:
    case 62157:
    case 62158:
    case 62159:
    case 62160:
    case 62161:
    case 62162:
    case 62163:
    case 62164:
    case 62165:
    case 62166:
    case 62167:
    case 62168:
    case 62169:
    case 62170:
    case 62171:
    case 62172:
    case 62173:
    case 62174:
    case 62175:
    case 62176:
    case 62177:
    case 62178:
    case 62179:
    case 62180:
    case 62181:
    case 62182:
    case 62183:
    case 62184:
    case 62185:
    case 62186:
    case 62187:
    case 62188:
    case 62189:
    case 62190:
    case 62191:
    case 62192:
    case 62193:
    case 62194:
    case 62195:
    case 62196:
    case 62197:
    case 62198:
    case 62199:
    case 62200:
    case 62201:
    case 62202:
    case 62203:
    case 62204:
    case 62205:
    case 62206:
    case 62207:
      break;
    case 61442:
      id v2 = @"Book Closed";
      goto LABEL_569;
    case 61444:
      id v2 = @"Map";
      goto LABEL_569;
    case 61446:
      id v2 = @"Car Multiple";
      goto LABEL_569;
    case 61447:
      id v2 = @"Bolt Car";
      goto LABEL_569;
    case 61448:
      id v2 = @"Bus Double Decker";
      goto LABEL_569;
    case 61449:
      id v2 = @"Tram";
      goto LABEL_569;
    case 61450:
      id v2 = @"Tram Tunnel";
      goto LABEL_569;
    case 61452:
      id v2 = @"Gauge";
      goto LABEL_569;
    case 61453:
      id v2 = @"Speedometer";
      goto LABEL_569;
    case 61454:
      id v2 = @"Barometer";
      goto LABEL_569;
    case 61455:
      id v2 = @"Network";
      goto LABEL_569;
    case 61456:
      id v2 = @"Rectangle Stack";
      goto LABEL_569;
    case 61457:
      id v2 = @"Square Stack";
      goto LABEL_569;
    case 61458:
      id v2 = @"3D Square Stack";
      goto LABEL_569;
    case 61459:
      id v2 = @"Photo Stack";
      goto LABEL_569;
    case 61460:
      id v2 = @"Photo Stack Angled";
      goto LABEL_569;
    case 61461:
      id v2 = @"Camera Aperture";
      goto LABEL_569;
    case 61464:
      id v2 = @"Note Icon";
      goto LABEL_569;
    case 61465:
      id v2 = @"Note Text";
      goto LABEL_569;
    case 61466:
      id v2 = @"Note Text Badge Plus";
      goto LABEL_569;
    case 61467:
      id v2 = @"Send Message";
      goto LABEL_569;
    case 61468:
      id v2 = @"Add Message";
      goto LABEL_569;
    case 61470:
      id v2 = @"Speaker Wave2";
      goto LABEL_569;
    case 61471:
      id v2 = @"Speaker Wave3";
      goto LABEL_569;
    case 61472:
      id v2 = @"Speaker Slash";
      goto LABEL_569;
    case 61473:
      id v2 = @"Speaker";
      goto LABEL_569;
    case 61474:
      id v2 = @"TV And Hi-Fi Speaker";
      goto LABEL_569;
    case 61475:
      id v2 = @"EarPods";
      goto LABEL_569;
    case 61476:
      id v2 = @"AirPods";
      goto LABEL_569;
    case 61477:
      id v2 = @"AirPods Pro";
      goto LABEL_569;
    case 61478:
      id v2 = @"Hi-Fi Speaker";
      goto LABEL_569;
    case 61480:
      id v2 = @"Radio";
      goto LABEL_569;
    case 61481:
      id v2 = @"Hearing Aid";
      goto LABEL_569;
    case 61482:
      id v2 = @"Apple TV";
      goto LABEL_569;
    case 61483:
      id v2 = @"HomePod";
      goto LABEL_569;
    case 61484:
      id v2 = @"Apple Watch Waves";
      goto LABEL_569;
    case 61486:
      id v2 = @"iPhone Icon";
      goto LABEL_569;
    case 61487:
      id v2 = @"iPhone Radio Waves";
      goto LABEL_569;
    case 61488:
      id v2 = @"iPhone Apps";
      goto LABEL_569;
    case 61489:
      id v2 = @"iPad Icon";
      goto LABEL_569;
    case 61490:
      id v2 = @"iPad Landscape";
      goto LABEL_569;
    case 61491:
      id v2 = @"iPod";
      goto LABEL_569;
    case 61494:
      id v2 = @"Person Run Motion";
      goto LABEL_569;
    case 61495:
      id v2 = @"Noise Cancellation";
      goto LABEL_569;
    case 61496:
      id v2 = @"Transparency";
      goto LABEL_569;
    case 61497:
      id v2 = @"Directions Arrow Diamond";
      goto LABEL_569;
    case 61498:
      id v2 = @"Directions Arrow";
      goto LABEL_569;
    case 61499:
      id v2 = @"AirPlay Audio";
      goto LABEL_569;
    case 61500:
      id v2 = @"AirPlay Video";
      goto LABEL_569;
    case 61501:
      id v2 = @"AirDrop";
      goto LABEL_569;
    case 61502:
      id v2 = @"Music Note List";
      goto LABEL_569;
    case 61503:
      id v2 = @"Music Note";
      goto LABEL_569;
    case 61504:
      id v2 = @"Music Square Stack";
      goto LABEL_569;
    case 61505:
      id v2 = @"Music Waveform Path";
      goto LABEL_569;
    case 61506:
      id v2 = @"Music Live Photo Play";
      goto LABEL_569;
    case 61507:
      id v2 = @"Music Live Photo";
      goto LABEL_569;
    case 61508:
      id v2 = @"Slowmo";
      goto LABEL_569;
    case 61509:
      id v2 = @"Timelapse";
      goto LABEL_569;
    case 61510:
      id v2 = @"Calendar Badge Plus";
      goto LABEL_569;
    case 61511:
      id v2 = @"Calendar Badge Exclamation";
      goto LABEL_569;
    case 61512:
      id v2 = @"Timer";
      goto LABEL_569;
    case 61514:
      id v2 = @"Compose";
      goto LABEL_569;
    case 61515:
      id v2 = @"Duplicate";
      goto LABEL_569;
    case 61518:
      id v2 = @"Night Shift";
      goto LABEL_569;
    case 61519:
      id v2 = @"True Tone";
      goto LABEL_569;
    case 61520:
      id v2 = @"Dial Min";
      goto LABEL_569;
    case 61521:
      id v2 = @"Dial Max";
      goto LABEL_569;
    case 61522:
      id v2 = @"QR Code Viewfinder";
      goto LABEL_569;
    case 61523:
      id v2 = @"Camera Viewfinder";
      goto LABEL_569;
    case 61524:
      id v2 = @"Wallet Pass";
      goto LABEL_569;
    case 61525:
      id v2 = @"Appearance";
      goto LABEL_569;
    case 61528:
      id v2 = @"No Sign";
      goto LABEL_569;
    case 61529:
      id v2 = @"Command";
      goto LABEL_569;
    case 61532:
      id v2 = @"Brain Head Profile";
      goto LABEL_569;
    case 61533:
      id v2 = @"Brain";
      goto LABEL_569;
    case 61534:
      id v2 = @"Grinning Face";
      goto LABEL_569;
    case 61535:
      id v2 = @"Face Smiling With Smiling Eyes";
      goto LABEL_569;
    case 61536:
      id v2 = @"Face Grinning With Squinting Eyes";
      goto LABEL_569;
    case 61537:
      id v2 = @"Face With Tears Of Joy";
      goto LABEL_569;
    case 61538:
      id v2 = @"Face Rolling On The Floor Laughing";
      goto LABEL_569;
    case 61539:
      id v2 = @"Face Winking With Stuck Out Tongue";
      goto LABEL_569;
    case 61540:
      id v2 = @"Face Grimacing";
      goto LABEL_569;
    case 61541:
      id v2 = @"Face Smiling With Heart Eyes";
      goto LABEL_569;
    case 61542:
      id v2 = @"Face Blowing A Kiss";
      goto LABEL_569;
    case 61543:
      id v2 = @"Face Smiling With Hearts";
      goto LABEL_569;
    case 61544:
      id v2 = @"Face Smiling With Sunglasses";
      goto LABEL_569;
    case 61545:
      id v2 = @"Face With Starry Eyes";
      goto LABEL_569;
    case 61546:
      id v2 = @"Memoji";
      goto LABEL_569;
    case 61547:
      id v2 = @"Thumbs Up Emoji";
      goto LABEL_569;
    case 61548:
      id v2 = @"Peace Hand Sign";
      goto LABEL_569;
    case 61549:
      id v2 = @"Love You Gesture";
      goto LABEL_569;
    case 61550:
      id v2 = @"Closed Fist";
      goto LABEL_569;
    case 61551:
      id v2 = @"Face Mask";
      goto LABEL_569;
    case 61552:
      id v2 = @"One Prong Puzzle Piece";
      goto LABEL_569;
    case 61553:
      id v2 = @"Take Out Bag And Cup";
      goto LABEL_569;
    case 61554:
      id v2 = @"Bear";
      goto LABEL_569;
    case 61555:
      id v2 = @"Tiger";
      goto LABEL_569;
    case 61556:
      id v2 = @"Monkey";
      goto LABEL_569;
    case 61557:
      id v2 = @"Ram";
      goto LABEL_569;
    case 61558:
      id v2 = @"Rabbit";
      goto LABEL_569;
    case 61559:
      id v2 = @"Snake";
      goto LABEL_569;
    case 61560:
      id v2 = @"Chicken";
      goto LABEL_569;
    case 61561:
      id v2 = @"Pig";
      goto LABEL_569;
    case 61562:
      id v2 = @"Mouse";
      goto LABEL_569;
    case 61563:
      id v2 = @"Cow";
      goto LABEL_569;
    case 61564:
      id v2 = @"Dragon";
      goto LABEL_569;
    case 61565:
      id v2 = @"Alien Monster";
      goto LABEL_569;
    case 61566:
      id v2 = @"Robot";
      goto LABEL_569;
    case 61567:
      id v2 = @"Ghost";
      goto LABEL_569;
    case 61568:
      id v2 = @"Pile Of Poop";
      goto LABEL_569;
    case 61569:
      id v2 = @"Skull";
      goto LABEL_569;
    case 61571:
      id v2 = @"Folder With Gear";
      goto LABEL_569;
    case 61572:
      id v2 = @"2×2 Rectangle Grid";
      goto LABEL_569;
    case 61574:
      id v2 = @"Rectangle Split In Two";
      goto LABEL_569;
    case 61575:
      id v2 = @"Rectangle Split In Three";
      goto LABEL_569;
    case 61577:
      id v2 = @"Cartoon Heart";
      goto LABEL_569;
    case 61578:
      id v2 = @"Two Cartoon Hearts";
      goto LABEL_569;
    case 61579:
      id v2 = @"Star Half Filled";
      goto LABEL_569;
    case 61581:
      id v2 = @"Sparkles";
      goto LABEL_569;
    case 61584:
      id v2 = @"Hand Raised With Slash";
      goto LABEL_569;
    case 61586:
      id v2 = @"Waveform";
      goto LABEL_569;
    case 61587:
      id v2 = @"Checklist";
      goto LABEL_569;
    case 61588:
      id v2 = @"Text Box";
      goto LABEL_569;
    case 61590:
      id v2 = @"Eraser";
      goto LABEL_569;
    case 61591:
      id v2 = @"Scribble Variable";
      goto LABEL_569;
    case 61592:
      id v2 = @"Pencil And Scribble";
      goto LABEL_569;
    case 61593:
      id v2 = @"Clipboard Alternate";
      goto LABEL_569;
    case 61696:
      id v2 = @"List Bullet Clipboard";
      goto LABEL_569;
    case 61697:
      id v2 = @"Rich Text Page News Article";
      goto LABEL_569;
    case 61698:
      id v2 = @"Text Page";
      goto LABEL_569;
    case 61699:
      id v2 = @"Append Page";
      goto LABEL_569;
    case 61700:
      id v2 = @"Apple Terminal";
      goto LABEL_569;
    case 61701:
      id v2 = @"Calendar Badge Clock";
      goto LABEL_569;
    case 61702:
      id v2 = @"Calendar Badge Minus";
      goto LABEL_569;
    case 61703:
      id v2 = @"Calendar Badge Checkmark";
      goto LABEL_569;
    case 61704:
      id v2 = @"Quicknote";
      goto LABEL_569;
    case 61705:
      id v2 = @"Menucard";
      goto LABEL_569;
    case 61712:
      id v2 = @"Magazine";
      goto LABEL_569;
    case 61713:
      id v2 = @"Photo Art Frame";
      goto LABEL_569;
    case 61714:
      id v2 = @"Figure Wave";
      goto LABEL_569;
    case 61715:
      id v2 = @"Dumbbell";
      goto LABEL_569;
    case 61716:
      id v2 = @"Sports Court";
      goto LABEL_569;
    case 61717:
      id v2 = @"Tennis Racket";
      goto LABEL_569;
    case 61718:
      id v2 = @"Skateboard";
      goto LABEL_569;
    case 61719:
      id v2 = @"Duffle Bag";
      goto LABEL_569;
    case 61720:
      id v2 = @"Apple Classical";
      goto LABEL_569;
    case 61721:
      id v2 = @"Bluetooth";
      goto LABEL_569;
    case 61728:
      id v2 = @"Flag2 Crossed";
      goto LABEL_569;
    case 61729:
      id v2 = @"Flag Checkered2 Crossed";
      goto LABEL_569;
    case 61730:
      id v2 = @"X Square Root";
      goto LABEL_569;
    case 61731:
      id v2 = @"Flashlight On";
      goto LABEL_569;
    case 61732:
      id v2 = @"Flashlight Slash";
      goto LABEL_569;
    case 61733:
      id v2 = @"Paint Palette";
      goto LABEL_569;
    case 61734:
      id v2 = @"Mail Stack";
      goto LABEL_569;
    case 61735:
      id v2 = @"Mail";
      goto LABEL_569;
    case 61736:
      id v2 = @"Gear Shape";
      goto LABEL_569;
    case 61737:
      id v2 = @"Gearshape2";
      goto LABEL_569;
    case 61744:
      id v2 = @"Signature";
      goto LABEL_569;
    case 61745:
      id v2 = @"Wallet";
      goto LABEL_569;
    case 61746:
      id v2 = @"Metronome  ";
      goto LABEL_569;
    case 61747:
      id v2 = @"Numbers";
      goto LABEL_569;
    case 61748:
      id v2 = @"Piano Keys Inverse";
      goto LABEL_569;
    case 61749:
      id v2 = @"Paintbrush Pointed  ";
      goto LABEL_569;
    case 61750:
      id v2 = @"Applescript  ";
      goto LABEL_569;
    case 61751:
      id v2 = @"Scroll";
      goto LABEL_569;
    case 61752:
      id v2 = @"Scanner";
      goto LABEL_569;
    case 61753:
      id v2 = @"Handbag Alternate";
      goto LABEL_569;
    case 61760:
      id v2 = @"Suitcase Rolling";
      goto LABEL_569;
    case 61761:
      id v2 = @"Homekit";
      goto LABEL_569;
    case 61762:
      id v2 = @"Building Columns";
      goto LABEL_569;
    case 61763:
      id v2 = @"Lamp Desk";
      goto LABEL_569;
    case 61764:
      id v2 = @"Lamp Ceiling";
      goto LABEL_569;
    case 61765:
      id v2 = @"Fan Floor";
      goto LABEL_569;
    case 61766:
      id v2 = @"Fan";
      goto LABEL_569;
    case 61767:
      id v2 = @"Fan Ceiling";
      goto LABEL_569;
    case 61768:
      id v2 = @"Lamp Floor";
      goto LABEL_569;
    case 61769:
      id v2 = @"Power Plug";
      goto LABEL_569;
    case 61776:
      id v2 = @"Balloon";
      goto LABEL_569;
    case 61777:
      id v2 = @"Regatta Sailboat";
      goto LABEL_569;
    case 61778:
      id v2 = @"Fireworks";
      goto LABEL_569;
    case 61779:
      id v2 = @"Party Popper";
      goto LABEL_569;
    case 61780:
      id v2 = @"Popcorn";
      goto LABEL_569;
    case 61781:
      id v2 = @"Frying Pan";
      goto LABEL_569;
    case 61782:
      id v2 = @"Sofa";
      goto LABEL_569;
    case 61783:
      id v2 = @"Torus";
      goto LABEL_569;
    case 61784:
      id v2 = @"Macintosh Classic";
      goto LABEL_569;
    case 61785:
      id v2 = @"Finder";
      goto LABEL_569;
    case 61792:
      id v2 = @"Watch Analog";
      goto LABEL_569;
    case 61793:
      id v2 = @"Apple Watch Side Right";
      goto LABEL_569;
    case 61794:
      id v2 = @"Media Stick";
      goto LABEL_569;
    case 61795:
      id v2 = @"Tv";
      goto LABEL_569;
    case 61796:
      id v2 = @"Shazam Logo";
      goto LABEL_569;
    case 61797:
      id v2 = @"Guitars";
      goto LABEL_569;
    case 61798:
      id v2 = @"Moped";
      goto LABEL_569;
    case 61799:
      id v2 = @"Scooter";
      goto LABEL_569;
    case 61800:
      id v2 = @"Stroller";
      goto LABEL_569;
    case 61801:
      id v2 = @"Comb";
      goto LABEL_569;
    case 61808:
      id v2 = @"Horn";
      goto LABEL_569;
    case 61809:
      id v2 = @"Tortoise";
      goto LABEL_569;
    case 61810:
      id v2 = @"Hare";
      goto LABEL_569;
    case 61811:
      id v2 = @"Dog Alternate";
      goto LABEL_569;
    case 61812:
      id v2 = @"Cat Alternate";
      goto LABEL_569;
    case 61813:
      id v2 = @"Lizard";
      goto LABEL_569;
    case 61814:
      id v2 = @"Bird";
      goto LABEL_569;
    case 61815:
      id v2 = @"Ant";
      goto LABEL_569;
    case 61816:
      id v2 = @"Ladybug";
      goto LABEL_569;
    case 61817:
      id v2 = @"Function";
      goto LABEL_569;
    case 61824:
      id v2 = @"Percent";
      goto LABEL_569;
    case 61825:
      id v2 = @"Teddybear";
      goto LABEL_569;
    case 61826:
      id v2 = @"Leaf";
      goto LABEL_569;
    case 61827:
      id v2 = @"Text Format Characters";
      goto LABEL_569;
    case 61828:
      id v2 = @"Crown";
      goto LABEL_569;
    case 61829:
      id v2 = @"Movie Clapper";
      goto LABEL_569;
    case 61830:
      id v2 = @"Text Format";
      goto LABEL_569;
    case 61831:
      id v2 = @"Film Stack";
      goto LABEL_569;
    case 61832:
      id v2 = @"Text Format Size";
      goto LABEL_569;
    case 61833:
      id v2 = @"Text Format Superscript";
      goto LABEL_569;
    case 61840:
      id v2 = @"Text Format Subscript";
      goto LABEL_569;
    case 61841:
      id v2 = @"Sum";
      goto LABEL_569;
    case 61842:
      id v2 = @"Compass Drawing";
      goto LABEL_569;
    case 61843:
      id v2 = @"Angle";
      goto LABEL_569;
    case 61844:
      id v2 = @"Bold Italic Underline";
      goto LABEL_569;
    case 61845:
      id v2 = @"Characters Lowercase";
      goto LABEL_569;
    case 61846:
      id v2 = @"Characters Uppercase";
      goto LABEL_569;
    case 61847:
      id v2 = @"Vision Pro Spatial Computer";
      goto LABEL_569;
    case 61848:
      id v2 = @"Low Battery";
      goto LABEL_569;
    case 61849:
      id v2 = @"Charging Charge Battery";
      goto LABEL_569;
    case 61952:
      id v2 = @"X";
      goto LABEL_569;
    case 61953:
      id v2 = @"Left Arrow";
      goto LABEL_569;
    case 61954:
      id v2 = @"Right Arrow";
      goto LABEL_569;
    case 61955:
      id v2 = @"Up Arrow";
      goto LABEL_569;
    case 61956:
      id v2 = @"Down Arrow";
      goto LABEL_569;
    case 61957:
      id v2 = @"Medical Thermometer Temperature";
      goto LABEL_569;
    case 61958:
      id v2 = @"Calendar Person";
      goto LABEL_569;
    case 61959:
      id v2 = @"Calendar Chart";
      goto LABEL_569;
    case 61960:
      id v2 = @"Person Contact Magnifying Glass";
      goto LABEL_569;
    case 61961:
      id v2 = @"Journal";
      goto LABEL_569;
    case 61968:
      id v2 = @"Figure Run Treadmill";
      goto LABEL_569;
    case 61969:
      id v2 = @"Figure Walk Treadmill";
      goto LABEL_569;
    case 61970:
      id v2 = @"Figure Ice Skating";
      goto LABEL_569;
    case 61971:
      id v2 = @"Degrees Celsius Temperature";
      goto LABEL_569;
    case 61972:
      id v2 = @"Degrees Farenheit Temperature";
      goto LABEL_569;
    case 61973:
      id v2 = @"Fire Extinguisher";
      goto LABEL_569;
    case 61974:
      id v2 = @"Wallet Bifold";
      goto LABEL_569;
    case 61975:
      int v3 = +[WFDevice currentDevice];
      if ([v3 hasCapability:@"WAPI"])
      {
        uint64_t v4 = @"House WLAN (Glyph)";
        long long v5 = @"House WLAN";
      }
      else
      {
        uint64_t v4 = @"House WiFi (Glyph)";
        long long v5 = @"House WiFi";
      }
LABEL_575:
      id v1 = WFLocalizedStringWithKey(v4, v5);

      break;
    case 61976:
      id v2 = @"Keys Ring";
      goto LABEL_569;
    case 61977:
      id v2 = @"Wheelchair";
      goto LABEL_569;
    case 61984:
      id v2 = @"Helmet";
      goto LABEL_569;
    case 61985:
      id v2 = @"Coat";
      goto LABEL_569;
    case 61986:
      id v2 = @"Jacket";
      goto LABEL_569;
    case 61987:
      id v2 = @"Heart Clipboard Doctor";
      goto LABEL_569;
    case 61988:
      id v2 = @"Humidity";
      goto LABEL_569;
    case 61989:
      id v2 = @"Sparkes Stars";
      goto LABEL_569;
    case 61990:
      id v2 = @"Moon Haze";
      goto LABEL_569;
    case 61991:
      id v2 = @"Moon Stars";
      goto LABEL_569;
    case 61992:
      id v2 = @"Cloud Hail";
      goto LABEL_569;
    case 61993:
      id v2 = @"Cloud Sleet";
      goto LABEL_569;
    case 62000:
      id v2 = @"Cloud Bolt";
      goto LABEL_569;
    case 62001:
      id v2 = @"Cloud Bolt Rain";
      goto LABEL_569;
    case 62002:
      id v2 = @"Cloud Sun";
      goto LABEL_569;
    case 62003:
      id v2 = @"Cloud Sun Rain";
      goto LABEL_569;
    case 62004:
      id v2 = @"Cloud Sun Bolt";
      goto LABEL_569;
    case 62005:
      id v2 = @"Cloud Moon";
      goto LABEL_569;
    case 62006:
      id v2 = @"Cloud Moon Rain";
      goto LABEL_569;
    case 62007:
      id v2 = @"Cloud Moon Bolt";
      goto LABEL_569;
    case 62008:
      id v2 = @"Wind";
      goto LABEL_569;
    case 62009:
      id v2 = @"Wind Snow";
      goto LABEL_569;
    case 62016:
      id v2 = @"Tornado Twister";
      goto LABEL_569;
    case 62017:
      id v2 = @"Thermometer Sun";
      goto LABEL_569;
    case 62018:
      id v2 = @"Thermometer Snowflake";
      goto LABEL_569;
    case 62019:
      id v2 = @"Sunset";
      goto LABEL_569;
    case 62020:
      id v2 = @"Sunrise";
      goto LABEL_569;
    case 62021:
      id v2 = @"Airplane Departure";
      goto LABEL_569;
    case 62022:
      id v2 = @"Airplane Arrival";
      goto LABEL_569;
    case 62023:
      id v2 = @"Cablecar";
      goto LABEL_569;
    case 62024:
      id v2 = @"Light Rail";
      goto LABEL_569;
    case 62025:
      id v2 = @"Ferry Boat";
      goto LABEL_569;
    case 62033:
      id v2 = @"Box Truck";
      goto LABEL_569;
    case 62034:
      id v2 = @"Ev Charger";
      goto LABEL_569;
    case 62035:
      id v2 = @"Road Lanes";
      goto LABEL_569;
    case 62036:
      id v2 = @"Checkered Flag";
      goto LABEL_569;
    case 62037:
      id v2 = @"Arcade Stick Console";
      goto LABEL_569;
    case 62038:
      id v2 = @"Gearshift Manual Six Speed Transmission";
      goto LABEL_569;
    case 62039:
      id v2 = @"Phone Game Controller";
      goto LABEL_569;
    case 62040:
      id v2 = @"Arcade Joystick Controller";
      goto LABEL_569;
    case 62041:
      id v2 = @"Personal Hotspot";
      goto LABEL_569;
    case 62048:
      id v2 = @"Bolt";
      goto LABEL_569;
    case 62049:
      id v2 = @"Satellite";
      goto LABEL_569;
    case 62050:
      id v2 = @"Usb";
      goto LABEL_569;
    case 62051:
      id v2 = @"Bonjour Networking";
      goto LABEL_569;
    case 62052:
      id v2 = @"Hdmi Port";
      goto LABEL_569;
    case 62053:
      id v2 = @"Thunderbolt Port";
      goto LABEL_569;
    case 62054:
      id v2 = @"Usb C Port";
      goto LABEL_569;
    case 62055:
      id v2 = @"Usb A Port";
      goto LABEL_569;
    case 62056:
      id v2 = @"Usb B Port";
      goto LABEL_569;
    case 62057:
      id v2 = @"Ethernet Port";
      goto LABEL_569;
    case 62064:
      id v2 = @"Vga Port";
      goto LABEL_569;
    case 62065:
      id v2 = @"Thunderbolt";
      goto LABEL_569;
    case 62066:
      id v2 = @"Firewire";
      goto LABEL_569;
    case 62067:
      id v2 = @"Ethernet";
      goto LABEL_569;
    case 62068:
      id v2 = @"Antenna Radiowaves";
      goto LABEL_569;
    case 62069:
      id v2 = @"Oven";
      goto LABEL_569;
    case 62070:
      id v2 = @"Microwave";
      goto LABEL_569;
    case 62071:
      id v2 = @"Refrigerator";
      goto LABEL_569;
    case 62072:
      id v2 = @"Toilet";
      goto LABEL_569;
    case 62073:
      id v2 = @"Light Bulb Led";
      goto LABEL_569;
    case 62080:
      id v2 = @"Light Bulb Led Alternate";
      goto LABEL_569;
    case 62081:
      id v2 = @"Person Archery";
      goto LABEL_569;
    case 62082:
      id v2 = @"Person Basketball";
      goto LABEL_569;
    case 62083:
      id v2 = @"Person Climbing";
      goto LABEL_569;
    case 62084:
      id v2 = @"Person Stretch Cooldown";
      goto LABEL_569;
    case 62085:
      id v2 = @"Person Core Training";
      goto LABEL_569;
    case 62086:
      id v2 = @"Person Curling";
      goto LABEL_569;
    case 62087:
      id v2 = @"Person Elliptical";
      goto LABEL_569;
    case 62088:
      id v2 = @"Person Fencing";
      goto LABEL_569;
    case 62089:
      id v2 = @"Person Gymnastics";
      goto LABEL_569;
    case 62096:
      id v2 = @"Person Interval Training";
      goto LABEL_569;
    case 62097:
      id v2 = @"Person Hockey";
      goto LABEL_569;
    case 62098:
      id v2 = @"Person Ice Hockey";
      goto LABEL_569;
    case 62099:
      id v2 = @"Person Indoor Cycle";
      goto LABEL_569;
    case 62100:
      id v2 = @"Person Cycle Bike";
      goto LABEL_569;
    case 62101:
      id v2 = @"Person Rowing";
      goto LABEL_569;
    case 62102:
      id v2 = @"Person Skateboarding";
      goto LABEL_569;
    case 62103:
      id v2 = @"Person Ice Skating";
      goto LABEL_569;
    case 62104:
      id v2 = @"Person Stair Stepper";
      goto LABEL_569;
    case 62105:
      id v2 = @"Medal";
      goto LABEL_569;
    case 62208:
      id v2 = @"Fossil Shell";
      goto LABEL_569;
    case 62209:
      id v2 = @"3D Move";
      goto LABEL_569;
    case 62210:
      id v2 = @"Hat Cap";
      goto LABEL_569;
    case 62211:
      id v2 = @"Book Wrench";
      goto LABEL_569;
    case 62212:
      id v2 = @"Key Radiowaves";
LABEL_569:
      id v1 = WFLocalizedString(v2);
      break;
    default:
      switch(a1)
      {
        case 59392:
          id v2 = @"Ellipsis";
          goto LABEL_569;
        case 59395:
          id v2 = @"Dollar Sign With Line";
          goto LABEL_569;
        case 59402:
          id v2 = @"Movie Camera";
          goto LABEL_569;
        case 59403:
          id v2 = @"Message Bubbles";
          goto LABEL_569;
        case 59405:
          id v2 = @"Twelve Squares";
          goto LABEL_569;
        case 59412:
          id v2 = @"Globe";
          goto LABEL_569;
        case 59414:
          id v2 = @"Chat Bubble";
          goto LABEL_569;
        case 59436:
          id v2 = @"Laptop";
          goto LABEL_569;
        case 59437:
          id v2 = @"Person";
          goto LABEL_569;
        case 59445:
          id v2 = @"List";
          goto LABEL_569;
        case 59446:
          id v2 = @"Keyboard";
          goto LABEL_569;
        case 59448:
          id v2 = @"Pound Sign";
          goto LABEL_569;
        case 59452:
          id v2 = @"Car";
          goto LABEL_569;
        case 59454:
          id v2 = @"Target";
          goto LABEL_569;
        case 59456:
          id v2 = @"Football";
          goto LABEL_569;
        case 59459:
          id v2 = @"Cloud Service";
          goto LABEL_569;
        case 59465:
          id v2 = @"Open Book";
          goto LABEL_569;
        case 59468:
          id v2 = @"Flower";
          goto LABEL_569;
        case 59489:
          id v2 = @"Battery";
          goto LABEL_569;
        case 59497:
        case 59732:
          id v2 = @"Feed";
          goto LABEL_569;
        case 59508:
          id v2 = @"Play";
          goto LABEL_569;
        case 59511:
          id v2 = @"Magic Wand With Stars";
          goto LABEL_569;
        case 59512:
          id v2 = @"Euro Sign";
          goto LABEL_569;
        case 59514:
          id v2 = @"Yen Sign";
          goto LABEL_569;
        case 59515:
          id v2 = @"Bitcoin Symbol";
          goto LABEL_569;
        case 59516:
          id v2 = @"Loading Indicator";
          goto LABEL_569;
        case 59519:
          id v2 = @"Database Cylinder Stack";
          goto LABEL_569;
        case 59648:
          id v2 = @"Airplane";
          goto LABEL_569;
        case 59649:
          id v2 = @"Alarm Clock";
          goto LABEL_569;
        case 59650:
          id v2 = @"Alert Triangle";
          goto LABEL_569;
        case 59651:
          id v2 = @"Alien";
          goto LABEL_569;
        case 59652:
          id v2 = @"Ambulance";
          goto LABEL_569;
        case 59653:
          id v2 = @"Archive";
          goto LABEL_569;
        case 59654:
          id v2 = @"Arrow Curved Left";
          goto LABEL_569;
        case 59655:
          id v2 = @"Arrow Curved Right";
          goto LABEL_569;
        case 59656:
          id v2 = @"Asterisk";
          goto LABEL_569;
        case 59657:
          id v2 = @"Atom";
          goto LABEL_569;
        case 59658:
          id v2 = @"Baby";
          goto LABEL_569;
        case 59659:
          id v2 = @"Baby 2";
          goto LABEL_569;
        case 59660:
          id v2 = @"Bandage";
          goto LABEL_569;
        case 59661:
          id v2 = @"Barcode";
          goto LABEL_569;
        case 59662:
          id v2 = @"Bar Graph";
          goto LABEL_569;
        case 59663:
          id v2 = @"Baseball";
          goto LABEL_569;
        case 59664:
          id v2 = @"Basketball";
          goto LABEL_569;
        case 59665:
          id v2 = @"Bathtub";
          goto LABEL_569;
        case 59666:
          id v2 = @"Bed";
          goto LABEL_569;
        case 59667:
          id v2 = @"Bell";
          goto LABEL_569;
        case 59668:
          id v2 = @"Bicycle";
          goto LABEL_569;
        case 59669:
          id v2 = @"Binoculars";
          goto LABEL_569;
        case 59670:
          id v2 = @"Bookmark";
          goto LABEL_569;
        case 59671:
          id v2 = @"Bookshelf";
          goto LABEL_569;
        case 59672:
          id v2 = @"Book With Sash";
          goto LABEL_569;
        case 59673:
          id v2 = @"Box Filled";
          goto LABEL_569;
        case 59675:
          id v2 = @"Braille";
          goto LABEL_569;
        case 59676:
          id v2 = @"Briefcase";
          goto LABEL_569;
        case 59677:
          id v2 = @"Buildings";
          goto LABEL_569;
        case 59678:
          id v2 = @"Bus";
          goto LABEL_569;
        case 59679:
          id v2 = @"Cake";
          goto LABEL_569;
        case 59680:
          id v2 = @"Calculator";
          goto LABEL_569;
        case 59681:
          id v2 = @"Calendar";
          goto LABEL_569;
        case 59682:
          id v2 = @"Camera";
          goto LABEL_569;
        case 59683:
          id v2 = @"Carrot";
          goto LABEL_569;
        case 59684:
          id v2 = @"Cat";
          goto LABEL_569;
        case 59685:
          id v2 = @"Chain Link";
          goto LABEL_569;
        case 59686:
          id v2 = @"Chemical";
          goto LABEL_569;
        case 59687:
          id v2 = @"Child";
          goto LABEL_569;
        case 59688:
          id v2 = @"Church";
          goto LABEL_569;
        case 59690:
          id v2 = @"Checkmark";
          goto LABEL_569;
        case 59692:
          id v2 = @"Down Chevron Arrow";
          goto LABEL_569;
        case 59693:
          id v2 = @"Download Arrow";
          goto LABEL_569;
        case 59695:
          id v2 = @"Fast Forward";
          goto LABEL_569;
        case 59696:
          id v2 = @"Left Chevron Arrow";
          goto LABEL_569;
        case 59697:
          id v2 = @"Info";
          goto LABEL_569;
        case 59698:
          id v2 = @"Circled Pi Symbol";
          goto LABEL_569;
        case 59700:
          id v2 = @"Plus";
          goto LABEL_569;
        case 59702:
          id v2 = @"Power";
          goto LABEL_569;
        case 59703:
          id v2 = @"Question Mark";
          goto LABEL_569;
        case 59704:
          id v2 = @"Rewind";
          goto LABEL_569;
        case 59705:
          id v2 = @"Right Chevron Arrow";
          goto LABEL_569;
        case 59706:
          id v2 = @"Stop";
          goto LABEL_569;
        case 59707:
          id v2 = @"Up Chevron Arrow";
          goto LABEL_569;
        case 59708:
          id v2 = @"Upload Arrow";
          goto LABEL_569;
        case 59711:
          id v2 = @"Clipboard glyph";
          goto LABEL_569;
        case 59712:
          id v2 = @"Clock";
          goto LABEL_569;
        case 59713:
          id v2 = @"Clothes Hanger";
          goto LABEL_569;
        case 59714:
          id v2 = @"Cloud";
          goto LABEL_569;
        case 59715:
          id v2 = @"Cloud Raining";
          goto LABEL_569;
        case 59716:
          id v2 = @"Color Dropper";
          goto LABEL_569;
        case 59717:
          id v2 = @"Web Compass";
          goto LABEL_569;
        case 59718:
          id v2 = @"Connected Share Dots";
          goto LABEL_569;
        case 59719:
          id v2 = @"Credit Card";
          goto LABEL_569;
        case 59720:
          id v2 = @"Crop";
          goto LABEL_569;
        case 59721:
          id v2 = @"Cube";
          goto LABEL_569;
        case 59722:
          id v2 = @"Server";
          goto LABEL_569;
        case 59723:
          id v2 = @"Dice";
          goto LABEL_569;
        case 59724:
          id v2 = @"Directions Signs";
          goto LABEL_569;
        case 59725:
          id v2 = @"Document";
          goto LABEL_569;
        case 59726:
          id v2 = @"Document Filled";
          goto LABEL_569;
        case 59728:
          id v2 = @"Dog";
          goto LABEL_569;
        case 59729:
          id v2 = @"Quote Bubble";
          goto LABEL_569;
        case 59730:
          id v2 = @"Drama Masks";
          goto LABEL_569;
        case 59731:
          id v2 = @"Evergreen Tree";
          goto LABEL_569;
        case 59733:
          id v2 = @"Filmstrip";
          goto LABEL_569;
        case 59734:
          id v2 = @"Fire";
          goto LABEL_569;
        case 59735:
          id v2 = @"Fish";
          goto LABEL_569;
        case 59736:
          id v2 = @"Flag";
          goto LABEL_569;
        case 59737:
          id v2 = @"Folder";
          goto LABEL_569;
        case 59738:
          id v2 = @"Footprints";
          goto LABEL_569;
        case 59739:
          id v2 = @"Four Squares";
          goto LABEL_569;
        case 59740:
          id v2 = @"Fruit";
          goto LABEL_569;
        case 59741:
          id v2 = @"Fuel Station";
          goto LABEL_569;
        case 59742:
          id v2 = @"Game Controller";
          goto LABEL_569;
        case 59743:
          id v2 = @"Gears";
          goto LABEL_569;
        case 59744:
          id v2 = @"Gift";
          goto LABEL_569;
        case 59745:
          id v2 = @"Glasses";
          goto LABEL_569;
        case 59746:
          id v2 = @"Graduate Cap";
          goto LABEL_569;
        case 59747:
          id v2 = @"Grocery Store";
          goto LABEL_569;
        case 59748:
          id v2 = @"Hammer";
          goto LABEL_569;
        case 59749:
          id v2 = @"Hammer And Wrench";
          goto LABEL_569;
        case 59750:
          id v2 = @"Handbag";
          goto LABEL_569;
        case 59751:
          id v2 = @"Hand With Spread Fingers";
          goto LABEL_569;
        case 59752:
          id v2 = @"Hard Drive";
          goto LABEL_569;
        case 59753:
          id v2 = @"Headphones";
          goto LABEL_569;
        case 59754:
          id v2 = @"Heart";
          goto LABEL_569;
        case 59755:
          id v2 = @"Home";
          goto LABEL_569;
        case 59756:
          id v2 = @"Horse";
          goto LABEL_569;
        case 59757:
          id v2 = @"Hourglass";
          goto LABEL_569;
        case 59758:
          id v2 = @"Infinity";
          goto LABEL_569;
        case 59759:
          id v2 = @"Inhaler";
          goto LABEL_569;
        case 59760:
          id v2 = @"Key";
          goto LABEL_569;
        case 59761:
          id v2 = @"Laundry Machine";
          goto LABEL_569;
        case 59762:
          id v2 = @"Life Preserver";
          goto LABEL_569;
        case 59763:
          id v2 = @"Light Bulb";
          goto LABEL_569;
        case 59764:
          id v2 = @"Lightning Bolt";
          goto LABEL_569;
        case 59767:
          id v2 = @"Loading Indicator";
          goto LABEL_569;
        case 59768:
          id v2 = @"Location Arrow";
          goto LABEL_569;
        case 59769:
          id v2 = @"Location Pin";
          goto LABEL_569;
        case 59770:
          id v2 = @"Lock";
          goto LABEL_569;
        case 59771:
          id v2 = @"Magic Wand";
          goto LABEL_569;
        case 59772:
          id v2 = @"Magnifying Glass";
          goto LABEL_569;
        case 59773:
          id v2 = @"Mail Envelope";
          goto LABEL_569;
        case 59774:
          id v2 = @"Mail Envelope Open";
          goto LABEL_569;
        case 59775:
          id v2 = @"Man";
          goto LABEL_569;
        case 59776:
          id v2 = @"Martini Glass";
          goto LABEL_569;
        case 59777:
          id v2 = @"Masquerade Mask";
          goto LABEL_569;
        case 59778:
          id v2 = @"Medicine Bottle";
          goto LABEL_569;
        case 59779:
          id v2 = @"Message Bubble";
          goto LABEL_569;
        case 59780:
          id v2 = @"Microphone";
          goto LABEL_569;
        case 59781:
          id v2 = @"Microscope";
          goto LABEL_569;
        case 59782:
          id v2 = @"Moon";
          goto LABEL_569;
        case 59783:
          id v2 = @"Motorcycle";
          goto LABEL_569;
        case 59784:
          id v2 = @"Mountain Picture";
          goto LABEL_569;
        case 59785:
          id v2 = @"Mountains";
          goto LABEL_569;
        case 59786:
          id v2 = @"Move Arrows";
          goto LABEL_569;
        case 59788:
          id v2 = @"Movie Ticket";
          goto LABEL_569;
        case 59789:
          id v2 = @"Mug";
          goto LABEL_569;
        case 59790:
          id v2 = @"Music Beamed Eighth Notes";
          goto LABEL_569;
        case 59792:
          id v2 = @"Stove";
          goto LABEL_569;
        case 59793:
          id v2 = @"Paintbrush";
          goto LABEL_569;
        case 59794:
          id v2 = @"Paper Clip";
          goto LABEL_569;
        case 59795:
          id v2 = @"Parking Symbol";
          goto LABEL_569;
        case 59796:
          id v2 = @"Pawprint";
          goto LABEL_569;
        case 59797:
          id v2 = @"Peace Sign";
          goto LABEL_569;
        case 59798:
          id v2 = @"Pencil";
          goto LABEL_569;
        case 59799:
          id v2 = @"People Three Overlapping";
          goto LABEL_569;
        case 59800:
          id v2 = @"People Two Overlapping";
          goto LABEL_569;
        case 59801:
          id v2 = @"Person";
          goto LABEL_569;
        case 59802:
          id v2 = @"Person At Podium";
          goto LABEL_569;
        case 59803:
          id v2 = @"Person Dancing";
          goto LABEL_569;
        case 59804:
          id v2 = @"Person Giving Speech";
          goto LABEL_569;
        case 59805:
          id v2 = @"Person Hiking";
          goto LABEL_569;
        case 59806:
          id v2 = @"Person In Wheelchair";
          goto LABEL_569;
        case 59807:
          id v2 = @"Person Lifting Weight";
          goto LABEL_569;
        case 59808:
          id v2 = @"Person Running";
          goto LABEL_569;
        case 59809:
          id v2 = @"Person Skiing";
          goto LABEL_569;
        case 59810:
          id v2 = @"Person Snowboarding";
          goto LABEL_569;
        case 59811:
          id v2 = @"Person Swimming";
          goto LABEL_569;
        case 59812:
          id v2 = @"Person Walking";
          goto LABEL_569;
        case 59813:
          id v2 = @"Person Walking With Cane";
          goto LABEL_569;
        case 59814:
          id v2 = @"Phone";
          goto LABEL_569;
        case 59815:
          id v2 = @"Pills";
          goto LABEL_569;
        case 59816:
          id v2 = @"Podcasts";
          goto LABEL_569;
        case 59817:
          id v2 = @"Printer";
          goto LABEL_569;
        case 59818:
          id v2 = @"Two Prong Puzzle Piece";
          goto LABEL_569;
        case 59819:
          id v2 = @"QR Code";
          goto LABEL_569;
        case 59820:
          id v2 = @"Recycle";
          goto LABEL_569;
        case 59821:
          id v2 = @"Repost Arrows";
          goto LABEL_569;
        case 59822:
          id v2 = @"Rocket";
          goto LABEL_569;
        case 59823:
          id v2 = @"Sailboat";
          goto LABEL_569;
        case 59824:
          id v2 = @"Scissors";
          goto LABEL_569;
        case 59825:
          id v2 = @"Screwdriver";
          goto LABEL_569;
        case 59826:
          id v2 = @"Network Storage";
          goto LABEL_569;
        case 59827:
          id v2 = @"Shirt";
          goto LABEL_569;
        case 59828:
          id v2 = @"Shopping Cart";
          goto LABEL_569;
        case 59829:
          id v2 = @"Shower";
          goto LABEL_569;
        case 59830:
          id v2 = @"Shrink Arrows";
          goto LABEL_569;
        case 59832:
          id v2 = @"Shuffle Arrows";
          goto LABEL_569;
        case 59833:
          id v2 = @"Sliders";
          goto LABEL_569;
        case 59834:
          id v2 = @"Smiley Face";
          goto LABEL_569;
        case 59835:
          id v2 = @"Snowflake";
          goto LABEL_569;
        case 59836:
          id v2 = @"Soaring Paper Airplane";
          goto LABEL_569;
        case 59837:
          id v2 = @"Soccer Ball";
          goto LABEL_569;
        case 59838:
          id v2 = @"Sparkling Bell";
          goto LABEL_569;
        case 59839:
          id v2 = @"Speaker Wave1";
          goto LABEL_569;
        case 59840:
          id v2 = @"Staircase";
          goto LABEL_569;
        case 59841:
          id v2 = @"Star";
          goto LABEL_569;
        case 59842:
          id v2 = @"Steaming Bowl";
          goto LABEL_569;
        case 59843:
          id v2 = @"Stethoscope";
          goto LABEL_569;
        case 59844:
          id v2 = @"Stopwatch";
          goto LABEL_569;
        case 59845:
          id v2 = @"Sun";
          goto LABEL_569;
        case 59846:
          id v2 = @"Sync Arrows";
          goto LABEL_569;
        case 59847:
          id v2 = @"Syringe";
          goto LABEL_569;
        case 59848:
          id v2 = @"Tag";
          goto LABEL_569;
        case 59849:
          id v2 = @"Target";
          goto LABEL_569;
        case 59850:
          id v2 = @"Telescope";
          goto LABEL_569;
        case 59851:
          id v2 = @"Television";
          goto LABEL_569;
        case 59852:
          id v2 = @"Tennis Ball";
          goto LABEL_569;
        case 59853:
          id v2 = @"Text Symbol";
          goto LABEL_569;
        case 59854:
          id v2 = @"Thermometer";
          goto LABEL_569;
        case 59856:
          id v2 = @"Three Overlapping Circles";
          goto LABEL_569;
        case 59857:
          id v2 = @"Thumbs Up";
          goto LABEL_569;
        case 59859:
          id v2 = @"Trash";
          goto LABEL_569;
        case 59860:
          id v2 = @"Trophy";
          goto LABEL_569;
        case 59861:
          id v2 = @"Umbrella";
          goto LABEL_569;
        case 59862:
          id v2 = @"Unlock";
          goto LABEL_569;
        case 59863:
          id v2 = @"Utensils";
          goto LABEL_569;
        case 59864:
          id v2 = @"Video Symbol";
          goto LABEL_569;
        case 59865:
          id v2 = @"Watch";
          goto LABEL_569;
        case 59866:
          id v2 = @"Water Drop";
          goto LABEL_569;
        case 59867:
          int v3 = +[WFDevice currentDevice];
          if ([v3 hasCapability:@"WAPI"])
          {
            uint64_t v4 = @"WLAN (Glyph)";
            long long v5 = @"WLAN";
          }
          else
          {
            uint64_t v4 = @"Wi-Fi (Glyph)";
            long long v5 = @"Wi-Fi";
          }
          goto LABEL_575;
        case 59868:
          id v2 = @"Wine Bottle";
          goto LABEL_569;
        case 59870:
          id v2 = @"Wrench";
          goto LABEL_569;
        default:
          goto LABEL_570;
      }
  }
LABEL_570:
  return v1;
}

void sub_1B3D026CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void __getWFFileTypeClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFFileType");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFFileTypeClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class  _Nonnull getWFFileTypeClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFContextualActionRunRequest.m", 24, @"Unable to find class %s", "WFFileType");

    __break(1u);
  }
}

void __getWFFileRepresentationClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFFileRepresentation");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFFileRepresentationClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class  _Nonnull getWFFileRepresentationClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFContextualActionRunRequest.m", 45, @"Unable to find class %s", "WFFileRepresentation");

    __break(1u);
  }
}

void __getWFContentCollectionClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentCollection");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFContentCollectionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class  _Nonnull getWFContentCollectionClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFContextualActionRunRequest.m", 56, @"Unable to find class %s", "WFContentCollection");

    __break(1u);
  }
}

void __getWFContentLocationClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentLocation");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFContentLocationClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class  _Nonnull getWFContentLocationClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFContextualActionRunRequest.m", 50, @"Unable to find class %s", "WFContentLocation");

    __break(1u);
  }
}

void ContentKitLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContentKitLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __ContentKitLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E6077768;
    uint64_t v5 = 0;
    ContentKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!ContentKitLibraryCore_frameworkLibrary)
  {
    id v1 = [MEMORY[0x1E4F28B00] currentHandler];
    id v2 = [NSString stringWithUTF8String:"void *ContentKitLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFContextualActionRunRequest.m", 16, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __ContentKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ContentKitLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3D038D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getLNAutoShortcutClass_block_invoke(uint64_t a1)
{
  LinkServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("LNAutoShortcut");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getLNAutoShortcutClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getLNAutoShortcutClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFAutoShortcutContextualAction.m", 28, @"Unable to find class %s", "LNAutoShortcut");

    __break(1u);
  }
}

void __getLNAutoShortcutLocalizedPhraseClass_block_invoke(uint64_t a1)
{
  LinkServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("LNAutoShortcutLocalizedPhrase");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getLNAutoShortcutLocalizedPhraseClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getLNAutoShortcutLocalizedPhraseClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFAutoShortcutContextualAction.m", 29, @"Unable to find class %s", "LNAutoShortcutLocalizedPhrase");

    __break(1u);
  }
}

void LinkServicesLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!LinkServicesLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __LinkServicesLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E60778D0;
    uint64_t v5 = 0;
    LinkServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!LinkServicesLibraryCore_frameworkLibrary)
  {
    id v1 = [MEMORY[0x1E4F28B00] currentHandler];
    id v2 = [NSString stringWithUTF8String:"void *LinkServicesLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFAutoShortcutContextualAction.m", 27, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __LinkServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  LinkServicesLibraryCore_frameworkLibrary = result;
  return result;
}

BOOL WFContextualActionIconDisplayStyleForLNImageDisplayStyle(uint64_t a1)
{
  return a1 != 0;
}

void sub_1B3D06BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPDCPreflightManagerClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!PrivacyDisclosureCoreLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __PrivacyDisclosureCoreLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E60778E8;
    uint64_t v8 = 0;
    PrivacyDisclosureCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!PrivacyDisclosureCoreLibraryCore_frameworkLibrary)
  {
    int v3 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v4 = [NSString stringWithUTF8String:"void *PrivacyDisclosureCoreLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFSystemActionRunnerClient.m", 42, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("PDCPreflightManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    int v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"Class getPDCPreflightManagerClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFSystemActionRunnerClient.m", 43, @"Unable to find class %s", "PDCPreflightManager");

LABEL_10:
    __break(1u);
  }
  getPDCPreflightManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void __getFBSOpenApplicationServiceClass_block_invoke(uint64_t a1)
{
  FrontBoardServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("FBSOpenApplicationService");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getFBSOpenApplicationServiceClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getFBSOpenApplicationServiceClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFSystemActionRunnerClient.m", 27, @"Unable to find class %s", "FBSOpenApplicationService");

    __break(1u);
  }
}

void *__getSBSOpenApplicationLaunchOriginActionButtonSymbolLoc_block_invoke(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!SpringBoardServicesLibraryCore_frameworkLibrary)
  {
    v5[1] = (void *)MEMORY[0x1E4F143A8];
    uint64_t v5[2] = (void *)3221225472;
    v5[3] = __SpringBoardServicesLibraryCore_block_invoke;
    long long v5[4] = &__block_descriptor_40_e5_v8__0l;
    void v5[5] = v5;
    long long v6 = xmmword_1E6077918;
    uint64_t v7 = 0;
    SpringBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  id v2 = (void *)SpringBoardServicesLibraryCore_frameworkLibrary;
  if (!SpringBoardServicesLibraryCore_frameworkLibrary)
  {
    a1 = [MEMORY[0x1E4F28B00] currentHandler];
    id v2 = [NSString stringWithUTF8String:"void *SpringBoardServicesLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFSystemActionRunnerClient.m", 31, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  int v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  Class result = dlsym(v2, "SBSOpenApplicationLaunchOriginActionButton");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  getSBSOpenApplicationLaunchOriginActionButtonSymbolLoc_ptr = *(void *)(*(void *)(a1[4] + 8) + 24);
  return result;
}

void *__getFBSOpenApplicationOptionKeyLaunchOriginSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = FrontBoardServicesLibrary();
  Class result = dlsym(v2, "FBSOpenApplicationOptionKeyLaunchOrigin");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getFBSOpenApplicationOptionKeyLaunchOriginSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *FrontBoardServicesLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!FrontBoardServicesLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __FrontBoardServicesLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E6077900;
    uint64_t v6 = 0;
    FrontBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)FrontBoardServicesLibraryCore_frameworkLibrary;
  if (!FrontBoardServicesLibraryCore_frameworkLibrary)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"void *FrontBoardServicesLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFSystemActionRunnerClient.m", 26, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void __getFBSOpenApplicationOptionsClass_block_invoke(uint64_t a1)
{
  FrontBoardServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("FBSOpenApplicationOptions");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getFBSOpenApplicationOptionsClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getFBSOpenApplicationOptionsClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFSystemActionRunnerClient.m", 28, @"Unable to find class %s", "FBSOpenApplicationOptions");

    __break(1u);
  }
}

uint64_t __FrontBoardServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  FrontBoardServicesLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __SpringBoardServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  SpringBoardServicesLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __PrivacyDisclosureCoreLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  PrivacyDisclosureCoreLibraryCore_frameworkLibrary = result;
  return result;
}

Class initUIImageSymbolConfiguration()
{
  if (UIKitLibrary_sOnce_4864 != -1) {
    dispatch_once(&UIKitLibrary_sOnce_4864, &__block_literal_global_76);
  }
  Class result = objc_getClass("UIImageSymbolConfiguration");
  classUIImageSymbolConfiguration = (uint64_t)result;
  getUIImageSymbolConfigurationClass = (uint64_t (*)())UIImageSymbolConfigurationFunction;
  return result;
}

id UIImageSymbolConfigurationFunction()
{
  return (id)classUIImageSymbolConfiguration;
}

void *__UIKitLibrary_block_invoke_4867()
{
  Class result = dlopen("/System/Library/Frameworks/UIKit.framework/UIKit", 2);
  UIKitLibrary_sLib_4869 = (uint64_t)result;
  return result;
}

void sub_1B3D09250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFContentCollectionClass_block_invoke_5200(uint64_t a1)
{
  ContentKitLibrary_5201();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentCollection");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFContentCollectionClass_softClass_5199 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class  _Nonnull getWFContentCollectionClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFConfiguratorRunRequest.m", 27, @"Unable to find class %s", "WFContentCollection");

    __break(1u);
  }
}

void ContentKitLibrary_5201()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContentKitLibraryCore_frameworkLibrary_5212)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __ContentKitLibraryCore_block_invoke_5213;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E60779C8;
    uint64_t v5 = 0;
    ContentKitLibraryCore_frameworkLibrary_5212 = _sl_dlopen();
  }
  if (!ContentKitLibraryCore_frameworkLibrary_5212)
  {
    id v1 = [MEMORY[0x1E4F28B00] currentHandler];
    id v2 = [NSString stringWithUTF8String:"void * _Nonnull ContentKitLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFConfiguratorRunRequest.m", 26, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __ContentKitLibraryCore_block_invoke_5213()
{
  uint64_t result = _sl_dlopen();
  ContentKitLibraryCore_frameworkLibrary_5212 = result;
  return result;
}

void sub_1B3D095E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFContentItemClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary_5201();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFContentItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class  _Nonnull getWFContentItemClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFConfiguratorRunRequest.m", 28, @"Unable to find class %s", "WFContentItem");

    __break(1u);
  }
}

void WFStringFromCGRect(double a1, double a2, double a3, double a4)
{
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2020000000;
  uint64_t v8 = (void (*)(double, double, double, double))getNSStringFromCGRectSymbolLoc_ptr;
  __int16 v17 = getNSStringFromCGRectSymbolLoc_ptr;
  if (!getNSStringFromCGRectSymbolLoc_ptr)
  {
    uint64_t v9 = UIKitCoreLibrary();
    v15[3] = (uint64_t)dlsym(v9, "NSStringFromCGRect");
    getNSStringFromCGRectSymbolLoc_ptr = (_UNKNOWN *)v15[3];
    uint64_t v8 = (void (*)(double, double, double, double))v15[3];
  }
  _Block_object_dispose(&v14, 8);
  if (v8)
  {
    uint32_t v10 = v8(a1, a2, a3, a4);
    id v11 = v10;
  }
  else
  {
    id v12 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v13 = [NSString stringWithUTF8String:"NSString *WFStringFromCGRect(CGRect)"];
    objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, @"WFWorkflowRunViewSource.m", 22, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3D099C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getNSStringFromCGRectSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = UIKitCoreLibrary();
  uint64_t result = dlsym(v2, "NSStringFromCGRect");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getNSStringFromCGRectSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *UIKitCoreLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!UIKitCoreLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __UIKitCoreLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E60779E0;
    uint64_t v6 = 0;
    UIKitCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)UIKitCoreLibraryCore_frameworkLibrary;
  if (!UIKitCoreLibraryCore_frameworkLibrary)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"void *UIKitCoreLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFWorkflowRunViewSource.m", 20, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __UIKitCoreLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  UIKitCoreLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3D0A028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCGRectFromStringSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = UIKitCoreLibrary();
  uint64_t result = dlsym(v2, "CGRectFromString");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGRectFromStringSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1B3D0D15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5463(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5464(uint64_t a1)
{
}

void *__getCGImageDestinationCreateWithDataSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary_5532();
  uint64_t result = dlsym(v2, "CGImageDestinationCreateWithData");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageDestinationCreateWithDataSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *ImageIOLibrary_5532()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!ImageIOLibraryCore_frameworkLibrary_5550)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __ImageIOLibraryCore_block_invoke_5551;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E6077BD0;
    uint64_t v6 = 0;
    ImageIOLibraryCore_frameworkLibrary_5550 = _sl_dlopen();
  }
  uint64_t v0 = (void *)ImageIOLibraryCore_frameworkLibrary_5550;
  if (!ImageIOLibraryCore_frameworkLibrary_5550)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"void *ImageIOLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFImage+Representations.m", 18, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void *__getkCGImagePropertyPNGCompressionFilterSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary_5532();
  uint64_t result = dlsym(v2, "kCGImagePropertyPNGCompressionFilter");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyPNGCompressionFilterSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyPNGDictionarySymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary_5532();
  uint64_t result = dlsym(v2, "kCGImagePropertyPNGDictionary");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyPNGDictionarySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyPNGBandCountSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary_5532();
  uint64_t result = dlsym(v2, "kCGImagePropertyPNGBandCount");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyPNGBandCountSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyDPIWidthSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary_5532();
  uint64_t result = dlsym(v2, "kCGImagePropertyDPIWidth");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyDPIWidthSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyDPIHeightSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary_5532();
  uint64_t result = dlsym(v2, "kCGImagePropertyDPIHeight");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyDPIHeightSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageDestinationAddImageSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary_5532();
  uint64_t result = dlsym(v2, "CGImageDestinationAddImage");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageDestinationAddImageSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageDestinationFinalizeSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = ImageIOLibrary_5532();
  uint64_t result = dlsym(v2, "CGImageDestinationFinalize");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageDestinationFinalizeSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ImageIOLibraryCore_block_invoke_5551()
{
  uint64_t result = _sl_dlopen();
  ImageIOLibraryCore_frameworkLibrary_5550 = result;
  return result;
}

void sub_1B3D0E6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5643(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5644(uint64_t a1)
{
}

void sub_1B3D0EA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D0F918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
}

Class initATXClient()
{
  if (AppPredictionClientLibrary_sOnce != -1) {
    dispatch_once(&AppPredictionClientLibrary_sOnce, &__block_literal_global_120);
  }
  Class result = objc_getClass("ATXClient");
  classATXClient = (uint64_t)result;
  getATXClientClass[0] = (uint64_t (*)())ATXClientFunction;
  return result;
}

id ATXClientFunction()
{
  return (id)classATXClient;
}

void *__AppPredictionClientLibrary_block_invoke()
{
  Class result = dlopen("/System/Library/PrivateFrameworks/AppPredictionClient.framework/AppPredictionClient", 2);
  AppPredictionClientLibrary_sLib = (uint64_t)result;
  return result;
}

void sub_1B3D11D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getISImageClass_block_invoke(uint64_t a1)
{
  IconServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("ISImage");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getISImageClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getISImageClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFImage+Icons.m", 24, @"Unable to find class %s", "ISImage");

    __break(1u);
  }
}

id getISIconClass()
{
  uint64_t v4 = 0;
  long long v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getISIconClass_softClass;
  uint64_t v7 = getISIconClass_softClass;
  if (!getISIconClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getISIconClass_block_invoke;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getISIconClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B3D11F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFImageForIconAndFormat(void *a1, uint64_t a2)
{
  id v3 = a1;
  long long v5 = WFISImageDescriptorNameFromWFImageApplicationIconFormat(a2, v4);
  uint64_t v6 = [getISImageDescriptorClass() imageDescriptorNamed:v5];
  [v6 setAppearance:0];
  uint64_t v7 = WFImageForIconAndDescriptor(v3, v6);

  return v7;
}

void WFISImageDescriptorNameFromWFImageApplicationIconFormat(uint64_t a1, id a2)
{
  switch(a1)
  {
    case 2:
      uint64_t v13 = 0;
      uint64_t v14 = &v13;
      uint64_t v15 = 0x2020000000;
      id v2 = (id *)getkISImageDescriptorHomeScreenSymbolLoc_ptr;
      uint64_t v16 = getkISImageDescriptorHomeScreenSymbolLoc_ptr;
      if (!getkISImageDescriptorHomeScreenSymbolLoc_ptr)
      {
        uint64_t v9 = MEMORY[0x1E4F143A8];
        uint64_t v10 = 3221225472;
        id v11 = __getkISImageDescriptorHomeScreenSymbolLoc_block_invoke;
        id v12 = &unk_1E6079C28;
        uint64_t v6 = IconServicesLibrary();
        id v14[3] = (uint64_t)dlsym(v6, "kISImageDescriptorHomeScreen");
        getkISImageDescriptorHomeScreenSymbolLoc_ptr = v14[3];
        id v2 = (id *)v14[3];
      }
      _Block_object_dispose(&v13, 8);
      if (!v2)
      {
        id v4 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v5 = [NSString stringWithUTF8String:"ISImageDescriptorName getkISImageDescriptorHomeScreen(void)"];
        objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFImage+Icons.m", 28, @"%s", dlerror(), v9, v10, v11, v12);
        goto LABEL_20;
      }
      goto LABEL_15;
    case 1:
      uint64_t v13 = 0;
      uint64_t v14 = &v13;
      uint64_t v15 = 0x2020000000;
      id v2 = (id *)getkISImageDescriptorNotificationSymbolLoc_ptr;
      uint64_t v16 = getkISImageDescriptorNotificationSymbolLoc_ptr;
      if (!getkISImageDescriptorNotificationSymbolLoc_ptr)
      {
        uint64_t v9 = MEMORY[0x1E4F143A8];
        uint64_t v10 = 3221225472;
        id v11 = __getkISImageDescriptorNotificationSymbolLoc_block_invoke;
        id v12 = &unk_1E6079C28;
        uint64_t v7 = IconServicesLibrary();
        id v14[3] = (uint64_t)dlsym(v7, "kISImageDescriptorNotification");
        getkISImageDescriptorNotificationSymbolLoc_ptr = v14[3];
        id v2 = (id *)v14[3];
      }
      _Block_object_dispose(&v13, 8);
      if (!v2)
      {
        id v4 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v5 = [NSString stringWithUTF8String:"ISImageDescriptorName getkISImageDescriptorNotification(void)"];
        objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFImage+Icons.m", 27, @"%s", dlerror(), v9, v10, v11, v12);
        goto LABEL_20;
      }
LABEL_15:
      a2 = *v2;
      break;
    case 0:
      uint64_t v13 = 0;
      uint64_t v14 = &v13;
      uint64_t v15 = 0x2020000000;
      id v2 = (id *)getkISImageDescriptorTableUINameSymbolLoc_ptr;
      uint64_t v16 = getkISImageDescriptorTableUINameSymbolLoc_ptr;
      if (!getkISImageDescriptorTableUINameSymbolLoc_ptr)
      {
        uint64_t v9 = MEMORY[0x1E4F143A8];
        uint64_t v10 = 3221225472;
        id v11 = __getkISImageDescriptorTableUINameSymbolLoc_block_invoke;
        id v12 = &unk_1E6079C28;
        id v3 = IconServicesLibrary();
        id v14[3] = (uint64_t)dlsym(v3, "kISImageDescriptorTableUIName");
        getkISImageDescriptorTableUINameSymbolLoc_ptr = v14[3];
        id v2 = (id *)v14[3];
      }
      _Block_object_dispose(&v13, 8);
      if (!v2)
      {
        id v4 = [MEMORY[0x1E4F28B00] currentHandler];
        long long v5 = [NSString stringWithUTF8String:"ISImageDescriptorName getkISImageDescriptorTableUIName(void)"];
        objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFImage+Icons.m", 26, @"%s", dlerror(), v9, v10, v11, v12);
LABEL_20:

        __break(1u);
        return;
      }
      goto LABEL_15;
  }
  id v8 = a2;
}

void sub_1B3D12374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getISImageDescriptorClass()
{
  uint64_t v4 = 0;
  long long v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getISImageDescriptorClass_softClass;
  uint64_t v7 = getISImageDescriptorClass_softClass;
  if (!getISImageDescriptorClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getISImageDescriptorClass_block_invoke;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getISImageDescriptorClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B3D12460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFImageForIconAndDescriptor(void *a1, void *a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v13 = a2;
  id v3 = (void *)MEMORY[0x1E4F1C978];
  id v4 = a2;
  id v5 = a1;
  uint64_t v6 = [v3 arrayWithObjects:&v13 count:1];
  uint64_t v7 = WFISImagesForIconAndDescriptors(v5, v6);

  id v8 = objc_msgSend(v7, "firstObject", v13, v14);

  uint64_t v9 = [v8 CGImage];
  [v8 scale];
  uint64_t v10 = +[WFImage imageWithCGImage:scale:orientation:](WFImage, "imageWithCGImage:scale:orientation:", v9, 1);

  id v11 = [v10 imageWithRenderingMode:1];

  return v11;
}

id WFISImagesForIconAndDescriptors(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  [v3 prepareImagesForImageDescriptors:v4];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  void v8[2] = __WFISImagesForIconAndDescriptors_block_invoke;
  v8[3] = &unk_1E6077E68;
  id v9 = v3;
  id v5 = v3;
  uint64_t v6 = objc_msgSend(v4, "if_compactMap:", v8);

  return v6;
}

uint64_t __WFISImagesForIconAndDescriptors_block_invoke(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) imageForDescriptor:a2];
}

void __getISImageDescriptorClass_block_invoke(uint64_t a1)
{
  IconServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("ISImageDescriptor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getISImageDescriptorClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getISImageDescriptorClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFImage+Icons.m", 25, @"Unable to find class %s", "ISImageDescriptor");

    __break(1u);
  }
}

void *IconServicesLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!IconServicesLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __IconServicesLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E6077E30;
    uint64_t v6 = 0;
    IconServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)IconServicesLibraryCore_frameworkLibrary;
  if (!IconServicesLibraryCore_frameworkLibrary)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"void *IconServicesLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFImage+Icons.m", 22, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __IconServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  IconServicesLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getkISImageDescriptorTableUINameSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = IconServicesLibrary();
  uint64_t result = dlsym(v2, "kISImageDescriptorTableUIName");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkISImageDescriptorTableUINameSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkISImageDescriptorNotificationSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = IconServicesLibrary();
  uint64_t result = dlsym(v2, "kISImageDescriptorNotification");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkISImageDescriptorNotificationSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkISImageDescriptorHomeScreenSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = IconServicesLibrary();
  uint64_t result = dlsym(v2, "kISImageDescriptorHomeScreen");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkISImageDescriptorHomeScreenSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void __getISIconClass_block_invoke(uint64_t a1)
{
  IconServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("ISIcon");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getISIconClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getISIconClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFImage+Icons.m", 23, @"Unable to find class %s", "ISIcon");

    __break(1u);
  }
}

void sub_1B3D12E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose((const void *)(v10 - 96), 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __CalendarUIKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CalendarUIKitLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __Block_byref_object_copy__5919(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5920(uint64_t a1)
{
}

void sub_1B3D135D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getkISImageDescriptorCustomDocumentSizeSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = IconServicesLibrary();
  uint64_t result = dlsym(v2, "kISImageDescriptorCustomDocumentSize");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkISImageDescriptorCustomDocumentSizeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkISImageDescriptorBadgedDocumentSizeSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = IconServicesLibrary();
  uint64_t result = dlsym(v2, "kISImageDescriptorBadgedDocumentSize");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkISImageDescriptorBadgedDocumentSizeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkISImageDescriptorCustomDocumentScalableSizeSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = IconServicesLibrary();
  uint64_t result = dlsym(v2, "kISImageDescriptorCustomDocumentScalableSize");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkISImageDescriptorCustomDocumentScalableSizeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                           + 24);
  return result;
}

void *__getkISImageDescriptorBadgedDocumentScalableSizeSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = IconServicesLibrary();
  uint64_t result = dlsym(v2, "kISImageDescriptorBadgedDocumentScalableSize");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkISImageDescriptorBadgedDocumentScalableSizeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                           + 24);
  return result;
}

id WFImageApplicationIconCache()
{
  if (WFImageApplicationIconCache_onceToken != -1) {
    dispatch_once(&WFImageApplicationIconCache_onceToken, &__block_literal_global_87);
  }
  uint64_t v0 = (void *)WFImageApplicationIconCache_cache;
  return v0;
}

uint64_t __WFImageApplicationIconCache_block_invoke()
{
  WFImageApplicationIconCache_cache = (uint64_t)objc_alloc_init(MEMORY[0x1E4F1C998]);
  return MEMORY[0x1F41817F8]();
}

id WFStaccatoTintColorForSectionIdentifier(void *a1)
{
  v18[12] = *MEMORY[0x1E4F143B8];
  v17[0] = @"SilentMode";
  id v16 = a1;
  uint64_t v15 = [[WFColor alloc] initWithSystemColor:5];
  v18[0] = v15;
  v17[1] = @"Focus";
  uint64_t v14 = [[WFColor alloc] initWithSystemColor:10];
  v18[1] = v14;
  v17[2] = @"Flashlight";
  uint64_t v13 = +[WFColor colorWithRGBAValue:1937084671];
  void v18[2] = v13;
  v17[3] = @"Camera";
  id v1 = [[WFColor alloc] initWithSystemColor:6];
  v18[3] = v1;
  void v17[4] = @"Translate";
  id v2 = [[WFColor alloc] initWithSystemColor:816760831];
  void v18[4] = v2;
  v17[5] = @"VoiceMemos";
  id v3 = [[WFColor alloc] initWithSystemColor:2];
  v18[5] = v3;
  v17[6] = @"Magnifier";
  id v4 = [[WFColor alloc] initWithSystemColor:14];
  void v18[6] = v4;
  v17[7] = @"MusicRecognition";
  long long v5 = [[WFColor alloc] initWithSystemColor:4];
  v18[7] = v5;
  v17[8] = @"Shortcuts";
  uint64_t v6 = +[WFColor colorWithRGBAValue:994537727];
  v18[8] = v6;
  v17[9] = @"Accessibility";
  uint64_t v7 = [[WFColor alloc] initWithSystemColor:4];
  v18[9] = v7;
  v17[10] = @"Nothing";
  id v8 = [[WFColor alloc] initWithWhite:0.0 alpha:0.0];
  v18[10] = v8;
  v17[11] = @"Controls";
  id v9 = [[WFColor alloc] initWithRed:0.5018 green:0.5292 blue:0.5813 alpha:1.0];
  v18[11] = v9;
  uint64_t v10 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v18 forKeys:v17 count:12];

  id v11 = [v10 objectForKeyedSubscript:v16];

  return v11;
}

id WFAllowedClassesForDecodingNSError()
{
  id v0 = objc_alloc(MEMORY[0x1E4F1CAD0]);
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  id v3 = objc_msgSend(v0, "initWithObjects:", v1, v2, objc_opt_class(), 0);
  return v3;
}

id WFEncodableError(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 userInfo];
    if ([v3 count])
    {
      id v4 = [v2 userInfo];
      long long v5 = WFEncodableErrorDictionary(v4);
      uint64_t v6 = (void *)[v5 mutableCopy];
    }
    else
    {
      uint64_t v6 = (void *)[MEMORY[0x1E4F1CC08] mutableCopy];
    }

    id v8 = [v2 localizedFailureReason];
    [v6 setObject:v8 forKeyedSubscript:*MEMORY[0x1E4F28588]];

    id v9 = [v2 localizedDescription];
    [v6 setObject:v9 forKeyedSubscript:*MEMORY[0x1E4F28568]];

    uint64_t v10 = (void *)MEMORY[0x1E4F28C58];
    id v11 = [v2 domain];
    uint64_t v12 = [v2 code];
    uint64_t v13 = [v6 allKeys];
    if ([v13 count]) {
      uint64_t v14 = v6;
    }
    else {
      uint64_t v14 = 0;
    }
    uint64_t v7 = [v10 errorWithDomain:v11 code:v12 userInfo:v14];
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

id WFEncodableErrorDictionary(void *a1)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  uint64_t v2 = objc_opt_new();
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v3 = objc_msgSend(v1, "allKeys", 0);
  uint64_t v4 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v16;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        id v9 = WFEncodableErrorObject(v8);
        uint64_t v10 = [v1 objectForKeyedSubscript:v8];
        id v11 = WFEncodableErrorObject(v10);

        if (v9) {
          BOOL v12 = v11 == 0;
        }
        else {
          BOOL v12 = 1;
        }
        if (!v12) {
          [v2 setObject:v11 forKeyedSubscript:v9];
        }
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v5);
  }

  uint64_t v13 = (void *)[v2 copy];
  return v13;
}

id WFEncodableErrorObject(void *a1)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (WFEncodableErrorObject_onceToken != -1) {
    dispatch_once(&WFEncodableErrorObject_onceToken, &__block_literal_global_6082);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v2 = WFEncodableError(v1);
LABEL_18:
    id v12 = (id)v2;
    goto LABEL_19;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = v1;
    uint64_t v4 = objc_opt_new();
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v5 = v3;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v23 objects:v28 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v24;
      do
      {
        for (uint64_t i = 0; i != v7; ++i)
        {
          if (*(void *)v24 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = *(void *)(*((void *)&v23 + 1) + 8 * i);
          id v11 = WFEncodableErrorObject(v10);
          if (v11) {
            [v4 addObject:v10];
          }
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v23 objects:v28 count:16];
      }
      while (v7);
    }

    id v12 = (id)[v4 copy];
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v2 = WFEncodableErrorDictionary(v1);
      goto LABEL_18;
    }
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v14 = (id)WFEncodableErrorObject_encodableClasses;
    uint64_t v15 = [v14 countByEnumeratingWithState:&v19 objects:v27 count:16];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)v20;
      while (2)
      {
        for (uint64_t j = 0; j != v16; ++j)
        {
          if (*(void *)v20 != v17) {
            objc_enumerationMutation(v14);
          }
          if (objc_opt_isKindOfClass())
          {
            id v12 = v1;

            goto LABEL_19;
          }
        }
        uint64_t v16 = [v14 countByEnumeratingWithState:&v19 objects:v27 count:16];
        if (v16) {
          continue;
        }
        break;
      }
    }

    id v12 = 0;
  }
LABEL_19:

  return v12;
}

void __WFEncodableErrorObject_block_invoke()
{
  id v0 = objc_alloc(MEMORY[0x1E4F1CAD0]);
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_msgSend(v0, "initWithObjects:", v1, v2, v3, v4, v5, v6, objc_opt_class(), 0);
  uint64_t v8 = WFAllowedClassesForDecodingNSError();
  uint64_t v9 = [v8 setByAddingObjectsFromSet:v7];

  uint64_t v10 = (void *)WFEncodableErrorObject_encodableClasses;
  WFEncodableErrorObject_encodableClasses = v9;
}

id getLPLinkMetadataClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)getLPLinkMetadataClass_softClass;
  uint64_t v7 = getLPLinkMetadataClass_softClass;
  if (!getLPLinkMetadataClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getLPLinkMetadataClass_block_invoke;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getLPLinkMetadataClass_block_invoke((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B3D16020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D16258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getLPImageClass_block_invoke(uint64_t a1)
{
  LinkPresentationLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("LPImage");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getLPImageClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"Class getLPImageClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFItemProviderRequestMetadata.m", 23, @"Unable to find class %s", "LPImage");

    __break(1u);
  }
}

void LinkPresentationLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!LinkPresentationLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __LinkPresentationLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E6077EF8;
    uint64_t v5 = 0;
    LinkPresentationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!LinkPresentationLibraryCore_frameworkLibrary)
  {
    id v1 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v2 = [NSString stringWithUTF8String:"void *LinkPresentationLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFItemProviderRequestMetadata.m", 20, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __LinkPresentationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  LinkPresentationLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getUIImageClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!UIKitLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __UIKitLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E6077F10;
    uint64_t v8 = 0;
    UIKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!UIKitLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v4 = [NSString stringWithUTF8String:"void *UIKitLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFItemProviderRequestMetadata.m", 19, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("UIImage");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"Class getUIImageClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFItemProviderRequestMetadata.m", 21, @"Unable to find class %s", "UIImage");

LABEL_10:
    __break(1u);
  }
  getUIImageClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __UIKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  UIKitLibraryCore_frameworkLibrary = result;
  return result;
}

void __getLPLinkMetadataClass_block_invoke(uint64_t a1)
{
  LinkPresentationLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("LPLinkMetadata");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getLPLinkMetadataClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"Class getLPLinkMetadataClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFItemProviderRequestMetadata.m", 22, @"Unable to find class %s", "LPLinkMetadata");

    __break(1u);
  }
}

void sub_1B3D17FB0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long buf)
{
  if (a2 == 1)
  {
    id v17 = objc_begin_catch(a1);
    long long v18 = getWFVoiceShortcutClientLogObject();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT))
    {
      LODWORD(buf) = 136315394;
      *(void *)((char *)&buf + 4) = "-[WFWorkflowOutputRunResult getOutputWithCompletionHandler:]";
      WORD6(buf) = 2112;
      *(void *)((char *)&buf + 14) = v17;
      _os_log_impl(&dword_1B3C5C000, v18, OS_LOG_TYPE_FAULT, "%s Exception thrown when decoding output: %@", (uint8_t *)&buf, 0x16u);
    }

    long long v19 = [v16 unableToDecodeError];
    (*(void (**)(uint64_t, void, void *))(v15 + 16))(v15, 0, v19);

    objc_end_catch();
    JUMPOUT(0x1B3D17F7CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1B3D19F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getLNFullyQualifiedActionIdentifierClass_block_invoke(uint64_t a1)
{
  LinkServicesLibrary_6777();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("LNFullyQualifiedActionIdentifier");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getLNFullyQualifiedActionIdentifierClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"Class getLNFullyQualifiedActionIdentifierClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFWorkflowRunDescriptors.m", 27, @"Unable to find class %s", "LNFullyQualifiedActionIdentifier");

    __break(1u);
  }
}

void __getLNActionClass_block_invoke(uint64_t a1)
{
  LinkServicesLibrary_6777();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("LNAction");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getLNActionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"Class getLNActionClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFWorkflowRunDescriptors.m", 26, @"Unable to find class %s", "LNAction");

    __break(1u);
  }
}

void __getLNActionMetadataClass_block_invoke(uint64_t a1)
{
  LinkServicesLibrary_6777();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("LNActionMetadata");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getLNActionMetadataClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"Class getLNActionMetadataClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFWorkflowRunDescriptors.m", 28, @"Unable to find class %s", "LNActionMetadata");

    __break(1u);
  }
}

void LinkServicesLibrary_6777()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!LinkServicesLibraryCore_frameworkLibrary_6782)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __LinkServicesLibraryCore_block_invoke_6783;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E6077F80;
    uint64_t v5 = 0;
    LinkServicesLibraryCore_frameworkLibrary_6782 = _sl_dlopen();
  }
  if (!LinkServicesLibraryCore_frameworkLibrary_6782)
  {
    id v1 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v2 = [NSString stringWithUTF8String:"void *LinkServicesLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFWorkflowRunDescriptors.m", 25, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __LinkServicesLibraryCore_block_invoke_6783()
{
  uint64_t result = _sl_dlopen();
  LinkServicesLibraryCore_frameworkLibrary_6782 = result;
  return result;
}

void sub_1B3D1AC28(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void *__getAnalyticsSendEventLazySymbolLoc_block_invoke(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!CoreAnalyticsLibraryCore_frameworkLibrary)
  {
    v5[1] = (void *)MEMORY[0x1E4F143A8];
    uint64_t v5[2] = (void *)3221225472;
    v5[3] = __CoreAnalyticsLibraryCore_block_invoke;
    long long v5[4] = &__block_descriptor_40_e5_v8__0l;
    void v5[5] = v5;
    long long v6 = xmmword_1E6077FE8;
    uint64_t v7 = 0;
    CoreAnalyticsLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v2 = (void *)CoreAnalyticsLibraryCore_frameworkLibrary;
  if (!CoreAnalyticsLibraryCore_frameworkLibrary)
  {
    a1 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v2 = [NSString stringWithUTF8String:"void *CoreAnalyticsLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFLinkActionWorkflowRunnerClient.m", 21, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "AnalyticsSendEventLazy");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  getAnalyticsSendEventLazySymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

uint64_t __CoreAnalyticsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreAnalyticsLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3D1C484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLLocationClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!CoreLocationLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __CoreLocationLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E6078050;
    uint64_t v8 = 0;
    CoreLocationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!CoreLocationLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v4 = [NSString stringWithUTF8String:"void *CoreLocationLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFGetDirectionsContextualAction.m", 17, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("CLLocation");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"Class getCLLocationClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFGetDirectionsContextualAction.m", 18, @"Unable to find class %s", "CLLocation");

LABEL_10:
    __break(1u);
  }
  getCLLocationClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CoreLocationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreLocationLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3D1D63C(_Unwind_Exception *exception_object)
{
}

void sub_1B3D1D7A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D1DBCC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1B3D1F174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  (*(void (**)(void))(a10 + 16))();
  (*(void (**)(uint64_t))(v11 + 16))(v11);
  (*(void (**)(uint64_t))(v10 + 16))(v10);
  _Unwind_Resume(a1);
}

double WFWorkflowIconDrawerScaledSizeWithTargetSize(double result, double a2, double a3, double a4, double a5)
{
  if (result == 0.0)
  {
    uint64_t result = a2 * (a3 / a4);
    if (a5 > 0.0) {
      return round(result * a5) / a5;
    }
  }
  return result;
}

void WFCTFontCopyCharacterSet(uint64_t a1)
{
  uint64_t v6 = 0;
  long long v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v2 = (void (*)(uint64_t))getCTFontCopyCharacterSetSymbolLoc_ptr;
  uint64_t v9 = getCTFontCopyCharacterSetSymbolLoc_ptr;
  if (!getCTFontCopyCharacterSetSymbolLoc_ptr)
  {
    uint64_t v3 = CoreTextLibrary();
    v7[3] = (uint64_t)dlsym(v3, "CTFontCopyCharacterSet");
    getCTFontCopyCharacterSetSymbolLoc_ptr = (_UNKNOWN *)v7[3];
    uint64_t v2 = (void (*)(uint64_t))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    v2(a1);
  }
  else
  {
    long long v4 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"CFCharacterSetRef WFCTFontCopyCharacterSet(CTFontRef)"];
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFWorkflowIconDrawer.m", 30, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3D1F3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __WFWorkflowIconDrawerScaledSizeForIconCharacter_block_invoke(uint64_t a1)
{
}

void getkCTFontAttributeName()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = getkCTFontAttributeNameSymbolLoc_ptr;
  uint64_t v7 = getkCTFontAttributeNameSymbolLoc_ptr;
  if (!getkCTFontAttributeNameSymbolLoc_ptr)
  {
    uint64_t v1 = CoreTextLibrary();
    v5[3] = (uint64_t)dlsym(v1, "kCTFontAttributeName");
    getkCTFontAttributeNameSymbolLoc_ptr = v5[3];
    uint64_t v0 = v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    uint64_t v2 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"CFStringRef getkCTFontAttributeName(void)"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFWorkflowIconDrawer.m", 35, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3D1F510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void WFCTFramesetterCreateWithAttributedString(uint64_t a1)
{
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v2 = (void (*)(uint64_t))getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr;
  uint64_t v9 = getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr;
  if (!getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr)
  {
    uint64_t v3 = CoreTextLibrary();
    v7[3] = (uint64_t)dlsym(v3, "CTFramesetterCreateWithAttributedString");
    getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr = (_UNKNOWN *)v7[3];
    uint64_t v2 = (void (*)(uint64_t))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    v2(a1);
  }
  else
  {
    uint64_t v4 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"CTFramesetterRef WFCTFramesetterCreateWithAttributedString(CFAttributedStringRef)"];
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFWorkflowIconDrawer.m", 33, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3D1F678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __WFWorkflowIconDrawerScaledSizeForIconCharacter_block_invoke_2(uint64_t a1)
{
}

void WFCTFramesetterSuggestFrameSizeWithConstraints(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = 0;
  uint64_t v11 = &v10;
  uint64_t v12 = 0x2020000000;
  uint64_t v6 = getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr;
  uint64_t v13 = getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr;
  if (!getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr)
  {
    uint64_t v7 = CoreTextLibrary();
    v11[3] = (uint64_t)dlsym(v7, "CTFramesetterSuggestFrameSizeWithConstraints");
    getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr = (_UNKNOWN *)v11[3];
    uint64_t v6 = (void *)v11[3];
  }
  _Block_object_dispose(&v10, 8);
  if (v6)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, void, void, double, double))v6)(a1, a2, a3, 0, 0, 1.79769313e308, 1.79769313e308);
  }
  else
  {
    uint64_t v8 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v9 = objc_msgSend(NSString, "stringWithUTF8String:", "CGSize WFCTFramesetterSuggestFrameSizeWithConstraints(CTFramesetterRef, CFRange, CFDictionaryRef, CGSize, CFRange * _Nullable)");
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, @"WFWorkflowIconDrawer.m", 34, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3D1F814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __WFWorkflowIconDrawerScaledSizeForIconCharacter_block_invoke_3(uint64_t a1)
{
}

void __WFWorkflowIconDrawerScaledSizeForIconCharacter_block_invoke_4(uint64_t a1)
{
}

void *__getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = CoreTextLibrary();
  uint64_t result = dlsym(v2, "CTFramesetterSuggestFrameSizeWithConstraints");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                              + 24);
  return result;
}

void *CoreTextLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!CoreTextLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __CoreTextLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E60780A8;
    uint64_t v6 = 0;
    CoreTextLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)CoreTextLibraryCore_frameworkLibrary;
  if (!CoreTextLibraryCore_frameworkLibrary)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v3 = [NSString stringWithUTF8String:"void *CoreTextLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFWorkflowIconDrawer.m", 28, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __CoreTextLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreTextLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getCTFramesetterCreateWithAttributedStringSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = CoreTextLibrary();
  uint64_t result = dlsym(v2, "CTFramesetterCreateWithAttributedString");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCTFontAttributeNameSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = CoreTextLibrary();
  uint64_t result = dlsym(v2, "kCTFontAttributeName");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTFontAttributeNameSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCTFontCopyCharacterSetSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = CoreTextLibrary();
  uint64_t result = dlsym(v2, "CTFontCopyCharacterSet");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCTFontCopyCharacterSetSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1B3D210D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
}

void WFDrawGlyphForVectorIdentifier(void *a1, void *a2, void *a3, void *a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  id v15 = a2;
  id v16 = a3;
  id v17 = a4;
  memset(&v32, 0, sizeof(v32));
  id v18 = v15;
  id v19 = a1;
  CGContextGetCTM(&v32, (CGContextRef)[v18 CGContext]);
  double v20 = floor(sqrt(v32.c * v32.c + v32.a * v32.a));
  long long v21 = [v19 coreGlyphsCatalogs];

  long long v22 = +[WFImage glyphNamed:v16 pointSize:6 symbolWeight:v21 scaleFactor:a8 inCatalogs:v20];

  if (v22)
  {
    long long v23 = [v22 tintedImageWithColor:v17];

    [v23 sizeInPoints];
    double v26 = a7 / v24;
    if (a7 / v24 >= a8 / v25) {
      double v26 = a8 / v25;
    }
    double v27 = v24 * v26;
    double v28 = v25 * v26;
    v38.origin.x = a5;
    v38.origin.y = a6;
    v38.size.width = a7;
    v38.size.height = a8;
    double MidX = CGRectGetMidX(v38);
    v39.origin.x = a5;
    v39.origin.y = a6;
    v39.size.width = a7;
    v39.size.height = a8;
    CGFloat MidY = CGRectGetMidY(v39);
    double v31 = (double)(unint64_t)v20;
    -[NSObject drawInContext:inRect:](v23, "drawInContext:inRect:", v18, round((MidX - v27 * 0.5) * v31) / v31, round((MidY - v28 * 0.5) * v31) / v31, round(v27 * v31) / v31, round(v28 * v31) / v31);
  }
  else
  {
    long long v23 = getWFVoiceShortcutClientLogObject();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v34 = "WFDrawGlyphForVectorIdentifier";
      __int16 v35 = 2114;
      id v36 = v16;
      _os_log_impl(&dword_1B3C5C000, v23, OS_LOG_TYPE_FAULT, "%s vector glyph was unexpectedly nil with identifier: %{public}@", buf, 0x16u);
    }
  }
}

void __WFDrawGlyphForIconCharacter_block_invoke(uint64_t a1)
{
}

void __WFDrawGlyphForIconCharacter_block_invoke_2(uint64_t a1)
{
}

void __WFDrawGlyphForIconCharacter_block_invoke_3(uint64_t a1)
{
}

void *__getkCTForegroundColorAttributeNameSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = CoreTextLibrary();
  uint64_t result = dlsym(v2, "kCTForegroundColorAttributeName");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCTForegroundColorAttributeNameSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void __WFDrawGlyphForIconCharacter_block_invoke_4(uint64_t a1)
{
}

void __WFDrawGlyphForIconCharacter_block_invoke_129(uint64_t a1)
{
}

void WFCTFramesetterCreateFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x2020000000;
  uint64_t v8 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))getCTFramesetterCreateFrameSymbolLoc_ptr;
  id v15 = getCTFramesetterCreateFrameSymbolLoc_ptr;
  if (!getCTFramesetterCreateFrameSymbolLoc_ptr)
  {
    uint64_t v9 = CoreTextLibrary();
    v13[3] = (uint64_t)dlsym(v9, "CTFramesetterCreateFrame");
    getCTFramesetterCreateFrameSymbolLoc_ptr = (_UNKNOWN *)v13[3];
    uint64_t v8 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v13[3];
  }
  _Block_object_dispose(&v12, 8);
  if (v8)
  {
    v8(a1, a2, a3, a4, 0);
  }
  else
  {
    uint64_t v10 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v11 = objc_msgSend(NSString, "stringWithUTF8String:", "CTFrameRef WFCTFramesetterCreateFrame(CTFramesetterRef, CFRange, CGPathRef, CFDictionaryRef)");
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, @"WFWorkflowIconDrawer.m", 32, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3D216B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __WFDrawGlyphForIconCharacter_block_invoke_2_130(uint64_t a1)
{
}

void WFCTFrameDraw(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  uint64_t v4 = (void (*)(uint64_t, uint64_t))getCTFrameDrawSymbolLoc_ptr;
  uint64_t v11 = getCTFrameDrawSymbolLoc_ptr;
  if (!getCTFrameDrawSymbolLoc_ptr)
  {
    long long v5 = CoreTextLibrary();
    v9[3] = (uint64_t)dlsym(v5, "CTFrameDraw");
    getCTFrameDrawSymbolLoc_ptr = (_UNKNOWN *)v9[3];
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v9[3];
  }
  _Block_object_dispose(&v8, 8);
  if (v4)
  {
    v4(a1, a2);
  }
  else
  {
    uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v7 = objc_msgSend(NSString, "stringWithUTF8String:", "void WFCTFrameDraw(CTFrameRef, CGContextRef)");
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, @"WFWorkflowIconDrawer.m", 31, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3D2182C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __WFDrawGlyphForIconCharacter_block_invoke_3_131(uint64_t a1)
{
}

void __WFDrawGlyphForIconCharacter_block_invoke_4_132(uint64_t a1)
{
}

void WFDrawGlyphFreeCallback(int a1, void *a2)
{
}

void *__getCTFrameDrawSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = CoreTextLibrary();
  uint64_t result = dlsym(v2, "CTFrameDraw");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCTFrameDrawSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCTFramesetterCreateFrameSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = CoreTextLibrary();
  uint64_t result = dlsym(v2, "CTFramesetterCreateFrame");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCTFramesetterCreateFrameSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id WFStaticContextualActionDefinitionsForSurface(unint64_t a1)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  if (a1 == 2)
  {
    uint64_t v4 = 0;
    goto LABEL_34;
  }
  if (a1 != 3)
  {
    uint64_t v2 = (WFTakeScreenshotContextualAction *)objc_opt_new();
    if (a1 > 1)
    {
      if (a1 != 9)
      {
LABEL_32:
        uint64_t v3 = [(WFTakeScreenshotContextualAction *)v2 copy];
        goto LABEL_33;
      }
      uint64_t v45 = [[WFToggleSettingContextualAction alloc] initWithSetting:1 operation:0];
      uint64_t v46 = [[WFToggleSettingContextualAction alloc] initWithSetting:2 operation:0];
      uint64_t v44 = (WFContextualAction *)objc_opt_new();
      uint64_t v67 = v45;
      uint64_t v68 = (uint64_t)v46;
      uint64_t v47 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v67 count:2];
      [(WFContextualAction *)v44 addObjectsFromArray:v47];

      uint64_t v48 = +[WFDevice currentDevice];
      if ([v48 hasCapability:@"AlwaysOnDisplay"])
      {
        uint64_t v49 = [[WFToggleSettingContextualAction alloc] initWithSetting:3 operation:0 unconfigured:1];
        [(WFContextualAction *)v44 addObject:v49];
      }
      if (([v48 hasCapability:@"HardwareRingerSwitch"] & 1) == 0)
      {
        uint64_t v50 = [[WFToggleSettingContextualAction alloc] initWithSetting:9 operation:0];
        [(WFContextualAction *)v44 addObject:v50];
      }
      [(WFTakeScreenshotContextualAction *)v2 addObjectsFromArray:v44];
    }
    else
    {
      char v5 = a1 != 1;
      if (a1 == 1) {
        uint64_t v6 = @"is.workflow.actions.image.rotate.left";
      }
      else {
        uint64_t v6 = @"APPEXTENSION-com.apple.finder.RotateQuickAction";
      }
      if (a1 == 1) {
        uint64_t v7 = @"is.workflow.actions.image.rotate.right";
      }
      else {
        uint64_t v7 = @"APPEXTENSION-com.apple.finder.RotateQuickAction";
      }
      uint64_t v8 = WFRotateImageContextualAction(v6, 1, v5);
      v65[0] = v8;
      uint64_t v9 = WFRotateImageContextualAction(v7, 0, v5);
      v65[1] = v9;
      uint64_t v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v65 count:2];
      [(WFTakeScreenshotContextualAction *)v2 addObjectsFromArray:v10];

      if (a1 == 1) {
        uint64_t v11 = @"pdf.doc";
      }
      else {
        uint64_t v11 = @"doc";
      }
      if (a1 == 1) {
        uint64_t v12 = @"is.workflow.actions.makepdf";
      }
      else {
        uint64_t v12 = @"APPEXTENSION-com.apple.finder.CreatePDFQuickAction";
      }
      uint64_t v13 = (void *)*MEMORY[0x1E4F44400];
      uint64_t v60 = (void *)*MEMORY[0x1E4F44450];
      uint64_t v14 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", *MEMORY[0x1E4F44400], 0);
      id v15 = (void *)MEMORY[0x1E4F28F60];
      id v16 = [v60 identifier];
      id v17 = [v13 identifier];
      id v18 = [v15 predicateWithFormat:@"SUBQUERY (SELF, $file, $file.type.identifier UTI-CONFORMS-TO %@).@count > 1 OR SUBQUERY (SELF, $file, $file.type.identifier UTI-CONFORMS-TO %@).@count >= 1", v16, v17];

      id v19 = +[WFContextualActionFilteringBehavior filteringWithMatchingTypes:v14 predicate:v18];
      double v20 = WFLocalizedString(@"Create PDF");
      long long v21 = [WFContextualAction alloc];
      long long v22 = +[WFContextualActionIcon iconWithSystemName:v11];
      LOBYTE(v57) = 0;
      long long v23 = [(WFContextualAction *)v21 initWithIdentifier:v12 wfActionIdentifier:@"is.workflow.actions.makepdf" type:0 correspondingSystemActionType:5 associatedAppBundleIdentifier:@"com.apple.DocumentsApp" resultFileOperation:1 alternate:v57 filteringBehavior:v19 parameters:MEMORY[0x1E4F1CBF0] displayFormatString:v20 title:v20 subtitleFormatString:0 icon:v22];

      [(WFTakeScreenshotContextualAction *)v2 addObject:v23];
      double v24 = objc_alloc_init(WFFinderConvertImageContextualAction);
      [(WFTakeScreenshotContextualAction *)v2 addObject:v24];

      int v25 = _os_feature_enabled_impl();
      uint64_t v61 = 0;
      BOOL v62 = &v61;
      uint64_t v63 = 0x2050000000;
      double v26 = (void *)getVKCRemoveBackgroundRequestHandlerClass_softClass;
      uint64_t v64 = getVKCRemoveBackgroundRequestHandlerClass_softClass;
      if (!getVKCRemoveBackgroundRequestHandlerClass_softClass)
      {
        uint64_t v67 = (WFToggleSettingContextualAction *)MEMORY[0x1E4F143A8];
        uint64_t v68 = 3221225472;
        uint64_t v69 = __getVKCRemoveBackgroundRequestHandlerClass_block_invoke;
        uint64_t v70 = &unk_1E6079C28;
        uint64_t v71 = &v61;
        __getVKCRemoveBackgroundRequestHandlerClass_block_invoke((uint64_t)&v67);
        double v26 = (void *)v62[3];
      }
      id v27 = v26;
      _Block_object_dispose(&v61, 8);
      if ((v25 & [v27 isSupported]) == 1)
      {
        double v28 = WFLocalizedString(@"Remove Background");
        uint64_t v29 = [WFContextualAction alloc];
        id v30 = [MEMORY[0x1E4F1CAD0] setWithObject:v13];
        double v31 = +[WFContextualActionFilteringBehavior filteringWithMatchingTypes:v30 predicate:0];
        CGAffineTransform v32 = +[WFContextualActionIcon iconWithSystemName:@"circle.rectangle.filled.pattern.diagonalline"];
        LOBYTE(v58) = 0;
        uint64_t v33 = [(WFContextualAction *)v29 initWithIdentifier:@"is.workflow.actions.image.removebackground" wfActionIdentifier:@"is.workflow.actions.image.removebackground" type:0 correspondingSystemActionType:9 associatedAppBundleIdentifier:@"com.apple.mobileslideshow" resultFileOperation:1 alternate:v58 filteringBehavior:v31 parameters:0 displayFormatString:v28 title:v28 subtitleFormatString:0 icon:v32];

        [(WFTakeScreenshotContextualAction *)v2 addObject:v33];
      }
      if (a1 == 1)
      {
        uint64_t v51 = [MEMORY[0x1E4F1CAD0] setWithObject:v60];
        BOOL v52 = +[WFContextualActionFilteringBehavior filteringWithMatchingTypes:v51 predicate:0];

        uint64_t v53 = WFLocalizedString(@"Optimize File Size");
        uint64_t v54 = [WFContextualAction alloc];
        BOOL v55 = +[WFContextualActionIcon iconWithSystemName:@"doc.richtext"];
        LOBYTE(v58) = 0;
        uint64_t v44 = [(WFContextualAction *)v54 initWithIdentifier:@"is.workflow.actions.compresspdf" wfActionIdentifier:@"is.workflow.actions.compresspdf" type:0 correspondingSystemActionType:0 associatedAppBundleIdentifier:@"com.apple.DocumentsApp" resultFileOperation:1 alternate:v58 filteringBehavior:v52 parameters:0 displayFormatString:v53 title:v53 subtitleFormatString:0 icon:v55];

        [(WFTakeScreenshotContextualAction *)v2 addObject:v44];
      }
      else
      {
        uint64_t v34 = WFLocalizedString(@"Trim");
        __int16 v35 = WFLocalizedString(@"Markup");
        id v36 = [WFContextualAction alloc];
        uint64_t v37 = +[WFContextualActionFilteringBehavior matchAllFiles];
        CGRect v38 = +[WFContextualActionIcon iconWithSystemName:@"timeline.selection"];
        LOBYTE(v58) = 0;
        CGRect v39 = [(WFContextualAction *)v36 initWithIdentifier:@"APPEXTENSION-com.apple.finder.TrimQuickAction" wfActionIdentifier:0 type:0 correspondingSystemActionType:4 associatedAppBundleIdentifier:@"com.apple.finder" resultFileOperation:0 alternate:v58 filteringBehavior:v37 parameters:0 displayFormatString:v34 title:v34 subtitleFormatString:0 icon:v38];

        uint64_t v40 = [WFContextualAction alloc];
        uint64_t v41 = +[WFContextualActionFilteringBehavior matchAllFiles];
        uint64_t v42 = +[WFContextualActionIcon iconWithSystemName:@"pencil.tip.crop.circle"];
        LOBYTE(v59) = 0;
        uint64_t v43 = [(WFContextualAction *)v40 initWithIdentifier:@"APPEXTENSION-com.apple.finder.MarkupQuickAction" wfActionIdentifier:0 type:0 correspondingSystemActionType:3 associatedAppBundleIdentifier:@"com.apple.finder" resultFileOperation:0 alternate:v59 filteringBehavior:v41 parameters:0 displayFormatString:v35 title:v35 subtitleFormatString:0 icon:v42];

        uint64_t v67 = (WFToggleSettingContextualAction *)v39;
        uint64_t v68 = (uint64_t)v43;
        uint64_t v44 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v67 count:2];

        [(WFTakeScreenshotContextualAction *)v2 addObjectsFromArray:v44];
      }
    }

    goto LABEL_32;
  }
  uint64_t v2 = objc_alloc_init(WFTakeScreenshotContextualAction);
  uint64_t v66 = v2;
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v66 count:1];
LABEL_33:
  uint64_t v4 = (void *)v3;

LABEL_34:
  return v4;
}

void sub_1B3D22B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

WFContextualAction *WFRotateImageContextualAction(void *a1, int a2, char a3)
{
  v38[9] = *MEMORY[0x1E4F143B8];
  id v36 = a1;
  if (!v36)
  {
    double v31 = [MEMORY[0x1E4F28B00] currentHandler];
    CGAffineTransform v32 = objc_msgSend(NSString, "stringWithUTF8String:", "WFContextualAction * _Nonnull WFRotateImageContextualAction(NSString * _Nonnull __strong, BOOL, BOOL)");
    [v31 handleFailureInFunction:v32, @"WFStaticContextualActionDefinitions.m", 48, @"Invalid parameter not satisfying: %@", @"identifier" file lineNumber description];
  }
  char v5 = (void *)MEMORY[0x1E4F1CAD0];
  uint64_t v6 = *MEMORY[0x1E4F44410];
  v38[0] = *MEMORY[0x1E4F44460];
  v38[1] = v6;
  v38[2] = *MEMORY[0x1E4F444E0];
  uint64_t v7 = [MEMORY[0x1E4F442D8] typeWithIdentifier:@"com.adobe.photoshop-image"];
  uint64_t v8 = *MEMORY[0x1E4F443E0];
  v38[3] = v7;
  v38[4] = v8;
  uint64_t v9 = *MEMORY[0x1E4F44438];
  v38[5] = *MEMORY[0x1E4F44490];
  v38[6] = v9;
  uint64_t v10 = [MEMORY[0x1E4F442D8] typeWithIdentifier:@"com.apple.m4v-video"];
  v38[7] = v10;
  uint64_t v11 = [MEMORY[0x1E4F442D8] typeWithIdentifier:@"public.3gpp"];
  v38[8] = v11;
  uint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v38 count:9];
  uint64_t v13 = [v5 setWithArray:v12];
  __int16 v35 = (void *)v13;

  if (a2) {
    uint64_t v14 = @"Left";
  }
  else {
    uint64_t v14 = @"Right";
  }
  uint64_t v15 = 1;
  if (!a2) {
    uint64_t v15 = 2;
  }
  uint64_t v34 = v15;
  if (a2) {
    id v16 = @"rotate.left";
  }
  else {
    id v16 = @"rotate.right";
  }
  if (a2) {
    uint64_t v17 = 270;
  }
  else {
    uint64_t v17 = 90;
  }
  id v18 = WFLocalizedString(v14);
  char v19 = a3 & ~(_BYTE)a2;
  double v20 = WFLocalizedString(@"Rotate %@");
  long long v21 = +[WFContextualActionFilteringBehavior filteringWithMatchingTypes:v13 predicate:0];
  long long v22 = [WFContextualAction alloc];
  long long v23 = [WFContextualActionParameter alloc];
  double v24 = [NSNumber numberWithUnsignedInteger:v17];
  int v25 = [(WFContextualActionParameter *)v23 initWithType:@"WFNumberContentItem" displayString:v18 wfParameterKey:@"WFImageRotateAmount" wfSerializedRepresentation:v24];
  uint64_t v37 = v25;
  double v26 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v37 count:1];
  id v27 = WFLocalizedStringWithKey(@"Rotate Image (Contextual Action)", @"Rotate Image");
  double v28 = +[WFContextualActionIcon iconWithSystemName:v16];
  LOBYTE(v33) = v19;
  uint64_t v29 = [(WFContextualAction *)v22 initWithIdentifier:v36 wfActionIdentifier:@"is.workflow.actions.image.rotate" type:0 correspondingSystemActionType:v34 associatedAppBundleIdentifier:@"com.apple.mobileslideshow" resultFileOperation:0 alternate:v33 filteringBehavior:v21 parameters:v26 displayFormatString:v20 title:v27 subtitleFormatString:v20 icon:v28];

  return v29;
}

Class __getVKCRemoveBackgroundRequestHandlerClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!VisionKitCoreLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __VisionKitCoreLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E60780C0;
    uint64_t v8 = 0;
    VisionKitCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!VisionKitCoreLibraryCore_frameworkLibrary)
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *VisionKitCoreLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFStaticContextualActionDefinitions.m", 24, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("VKCRemoveBackgroundRequestHandler");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    char v5 = [NSString stringWithUTF8String:"Class getVKCRemoveBackgroundRequestHandlerClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFStaticContextualActionDefinitions.m", 25, @"Unable to find class %s", "VKCRemoveBackgroundRequestHandler");

LABEL_10:
    __break(1u);
  }
  getVKCRemoveBackgroundRequestHandlerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __VisionKitCoreLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  VisionKitCoreLibraryCore_frameworkLibrary = result;
  return result;
}

void WFBiomeLibrary_8362()
{
  uint64_t v6 = 0;
  long long v7 = &v6;
  uint64_t v8 = 0x2020000000;
  uint64_t v0 = (void (*)(void))getBiomeLibrarySymbolLoc_ptr_8363;
  uint64_t v9 = getBiomeLibrarySymbolLoc_ptr_8363;
  if (!getBiomeLibrarySymbolLoc_ptr_8363)
  {
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 3221225472;
    uint64_t v5[2] = __getBiomeLibrarySymbolLoc_block_invoke_8364;
    v5[3] = &unk_1E6079C28;
    long long v5[4] = &v6;
    __getBiomeLibrarySymbolLoc_block_invoke_8364(v5);
    uint64_t v0 = (void (*)(void))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v0)
  {
    uint64_t v1 = v0();
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"id<BMRootLibrary> WFBiomeLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFToggleAccessibilityContextualAction.m", 16, @"%s", dlerror());

    __break(1u);
  }
}

void sub_1B3D26444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getBiomeLibrarySymbolLoc_block_invoke_8364(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_8373)
  {
    v5[1] = (void *)MEMORY[0x1E4F143A8];
    uint64_t v5[2] = (void *)3221225472;
    v5[3] = __BiomeLibraryLibraryCore_block_invoke_8374;
    long long v5[4] = &__block_descriptor_40_e5_v8__0l;
    void v5[5] = v5;
    long long v6 = xmmword_1E6078110;
    uint64_t v7 = 0;
    BiomeLibraryLibraryCore_frameworkLibrary_8373 = _sl_dlopen();
  }
  id v2 = (void *)BiomeLibraryLibraryCore_frameworkLibrary_8373;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_8373)
  {
    a1 = [MEMORY[0x1E4F28B00] currentHandler];
    id v2 = [NSString stringWithUTF8String:"void *BiomeLibraryLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFToggleAccessibilityContextualAction.m", 15, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "BiomeLibrary");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  getBiomeLibrarySymbolLoc_ptr_8363 = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

uint64_t __BiomeLibraryLibraryCore_block_invoke_8374()
{
  uint64_t result = _sl_dlopen();
  BiomeLibraryLibraryCore_frameworkLibrary_8373 = result;
  return result;
}

uint64_t WFToggleAccessibilityContextualActions()
{
  return objc_msgSend(&unk_1F0CB1D90, "if_compactMap:", &__block_literal_global_8585);
}

WFToggleAccessibilityContextualAction *__WFToggleAccessibilityContextualActions_block_invoke(uint64_t a1, void *a2)
{
  id v2 = -[WFToggleAccessibilityContextualAction initWithSetting:]([WFToggleAccessibilityContextualAction alloc], "initWithSetting:", [a2 unsignedIntegerValue]);
  return v2;
}

id WFLocalizedStringWithKey(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  char v5 = WFCurrentBundle();
  long long v6 = [v5 localizedStringForKey:v4 value:v3 table:0];

  return v6;
}

void sub_1B3D27638(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1B3D28A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLLocationClass_block_invoke_8851(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!CoreLocationLibraryCore_frameworkLibrary_8852)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __CoreLocationLibraryCore_block_invoke_8853;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E6078240;
    uint64_t v8 = 0;
    CoreLocationLibraryCore_frameworkLibrary_8852 = _sl_dlopen();
  }
  if (!CoreLocationLibraryCore_frameworkLibrary_8852)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v4 = [NSString stringWithUTF8String:"void *CoreLocationLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFRequestRideContextualAction.m", 17, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("CLLocation");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    char v5 = [NSString stringWithUTF8String:"Class getCLLocationClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFRequestRideContextualAction.m", 18, @"Unable to find class %s", "CLLocation");

LABEL_10:
    __break(1u);
  }
  getCLLocationClass_softClass_8850 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CoreLocationLibraryCore_block_invoke_8853()
{
  uint64_t result = _sl_dlopen();
  CoreLocationLibraryCore_frameworkLibrary_8852 = result;
  return result;
}

uint64_t __UIFoundationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  UIFoundationLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3D2AA30(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id getFPSandboxingURLWrapperClass()
{
  uint64_t v4 = 0;
  char v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getFPSandboxingURLWrapperClass_softClass;
  uint64_t v7 = getFPSandboxingURLWrapperClass_softClass;
  if (!getFPSandboxingURLWrapperClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getFPSandboxingURLWrapperClass_block_invoke;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getFPSandboxingURLWrapperClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B3D2AD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getFPSandboxingURLWrapperClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!FileProviderLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __FileProviderLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E60782E0;
    uint64_t v8 = 0;
    FileProviderLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!FileProviderLibraryCore_frameworkLibrary)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *FileProviderLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFContextualActionFile.m", 19, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("FPSandboxingURLWrapper");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    char v5 = [NSString stringWithUTF8String:"Class getFPSandboxingURLWrapperClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFContextualActionFile.m", 20, @"Unable to find class %s", "FPSandboxingURLWrapper");

LABEL_10:
    __break(1u);
  }
  getFPSandboxingURLWrapperClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __FileProviderLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  FileProviderLibraryCore_frameworkLibrary = result;
  return result;
}

id WFUIImageWithAnimatedGIFDataAndOptions(void *a1, double a2)
{
  id v3 = a1;
  if (!v3)
  {
    uint64_t v40 = 0;
    goto LABEL_49;
  }
  uint64_t v46 = [MEMORY[0x1E4F1CA60] dictionary];
  uint64_t v47 = 0;
  uint64_t v48 = &v47;
  uint64_t v49 = 0x2020000000;
  uint64_t v4 = (void *)getkCGImageSourceShouldCacheSymbolLoc_ptr;
  uint64_t v50 = (void *)getkCGImageSourceShouldCacheSymbolLoc_ptr;
  if (!getkCGImageSourceShouldCacheSymbolLoc_ptr)
  {
    char v5 = ImageIOLibrary_9466();
    v48[3] = (uint64_t)dlsym(v5, "kCGImageSourceShouldCache");
    getkCGImageSourceShouldCacheSymbolLoc_ptr = v48[3];
    uint64_t v4 = (void *)v48[3];
  }
  _Block_object_dispose(&v47, 8);
  if (!v4) {
    goto LABEL_58;
  }
  [v46 setObject:MEMORY[0x1E4F1CC38] forKey:*v4];
  uint64_t v6 = [(id)*MEMORY[0x1E4F443D0] identifier];
  uint64_t v47 = 0;
  uint64_t v48 = &v47;
  uint64_t v49 = 0x2020000000;
  long long v7 = (void *)getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr;
  uint64_t v50 = (void *)getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr;
  if (!getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr)
  {
    uint64_t v8 = ImageIOLibrary_9466();
    v48[3] = (uint64_t)dlsym(v8, "kCGImageSourceTypeIdentifierHint");
    getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr = v48[3];
    long long v7 = (void *)v48[3];
  }
  _Block_object_dispose(&v47, 8);
  if (!v7)
  {
    uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v44 = [NSString stringWithUTF8String:"CFStringRef getkCGImageSourceTypeIdentifierHint(void)"];
    objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 38, @"%s", dlerror());
    goto LABEL_57;
  }
  [v46 setObject:v6 forKey:*v7];

  uint64_t v47 = 0;
  uint64_t v48 = &v47;
  uint64_t v49 = 0x2020000000;
  uint64_t v9 = (uint64_t (*)(id, void *))getCGImageSourceCreateWithDataSymbolLoc_ptr_9471;
  uint64_t v50 = getCGImageSourceCreateWithDataSymbolLoc_ptr_9471;
  if (!getCGImageSourceCreateWithDataSymbolLoc_ptr_9471)
  {
    uint64_t v10 = ImageIOLibrary_9466();
    v48[3] = (uint64_t)dlsym(v10, "CGImageSourceCreateWithData");
    getCGImageSourceCreateWithDataSymbolLoc_ptr_9471 = (_UNKNOWN *)v48[3];
    uint64_t v9 = (uint64_t (*)(id, void *))v48[3];
  }
  _Block_object_dispose(&v47, 8);
  if (!v9)
  {
    uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v44 = objc_msgSend(NSString, "stringWithUTF8String:", "CGImageSourceRef  _Nullable soft_CGImageSourceCreateWithData(CFDataRef _Nonnull, CFDictionaryRef _Nullable)");
    objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 27, @"%s", dlerror());
    goto LABEL_57;
  }
  uint64_t v11 = (const void *)v9(v3, v46);
  uint64_t v47 = 0;
  uint64_t v48 = &v47;
  uint64_t v49 = 0x2020000000;
  uint64_t v12 = (uint64_t (*)(const void *))getCGImageSourceGetCountSymbolLoc_ptr_9475;
  uint64_t v50 = getCGImageSourceGetCountSymbolLoc_ptr_9475;
  if (!getCGImageSourceGetCountSymbolLoc_ptr_9475)
  {
    uint64_t v13 = ImageIOLibrary_9466();
    v48[3] = (uint64_t)dlsym(v13, "CGImageSourceGetCount");
    getCGImageSourceGetCountSymbolLoc_ptr_9475 = (_UNKNOWN *)v48[3];
    uint64_t v12 = (uint64_t (*)(const void *))v48[3];
  }
  _Block_object_dispose(&v47, 8);
  if (!v12)
  {
    uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v44 = [NSString stringWithUTF8String:"size_t soft_CGImageSourceGetCount(CGImageSourceRef _Nonnull)"];
    objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 31, @"%s", dlerror());
    while (1)
    {
LABEL_57:

      __break(1u);
LABEL_58:
      uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v44 = [NSString stringWithUTF8String:"CFStringRef getkCGImageSourceShouldCache(void)"];
      objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 37, @"%s", dlerror());
    }
  }
  uint64_t v14 = v12(v11);
  uint64_t v15 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:v14];
  if (!v14)
  {
    CFRelease(v11);
    double v17 = 0.0;
    goto LABEL_47;
  }
  id v45 = v3;
  uint64_t v16 = 0;
  double v17 = 0.0;
  do
  {
    uint64_t v47 = 0;
    uint64_t v48 = &v47;
    uint64_t v49 = 0x2020000000;
    id v18 = (uint64_t (*)(const void *, uint64_t, void *))getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_9479;
    uint64_t v50 = getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_9479;
    if (!getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_9479)
    {
      char v19 = ImageIOLibrary_9466();
      v48[3] = (uint64_t)dlsym(v19, "CGImageSourceCreateImageAtIndex");
      getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_9479 = (_UNKNOWN *)v48[3];
      id v18 = (uint64_t (*)(const void *, uint64_t, void *))v48[3];
    }
    _Block_object_dispose(&v47, 8);
    if (!v18)
    {
      uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v44 = objc_msgSend(NSString, "stringWithUTF8String:", "CGImageRef  _Nullable soft_CGImageSourceCreateImageAtIndex(CGImageSourceRef _Nonnull, size_t, CFDictionaryRef _Nullable)");
      objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 28, @"%s", dlerror());
      goto LABEL_57;
    }
    double v20 = (CGImage *)v18(v11, v16, v46);
    uint64_t v47 = 0;
    uint64_t v48 = &v47;
    uint64_t v49 = 0x2020000000;
    long long v21 = (uint64_t (*)(const void *, uint64_t, void))getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_9483;
    uint64_t v50 = getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_9483;
    if (!getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_9483)
    {
      long long v22 = ImageIOLibrary_9466();
      v48[3] = (uint64_t)dlsym(v22, "CGImageSourceCopyPropertiesAtIndex");
      getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_9483 = (_UNKNOWN *)v48[3];
      long long v21 = (uint64_t (*)(const void *, uint64_t, void))v48[3];
    }
    _Block_object_dispose(&v47, 8);
    if (!v21)
    {
      uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v44 = objc_msgSend(NSString, "stringWithUTF8String:", "CFDictionaryRef  _Nullable soft_CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef _Nonnull, size_t, CFDictionaryRef _Nullable)");
      objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 30, @"%s", dlerror());
      goto LABEL_57;
    }
    long long v23 = (void *)v21(v11, v16, 0);
    uint64_t v47 = 0;
    uint64_t v48 = &v47;
    uint64_t v49 = 0x2020000000;
    double v24 = (void *)getkCGImagePropertyGIFDictionarySymbolLoc_ptr;
    uint64_t v50 = (void *)getkCGImagePropertyGIFDictionarySymbolLoc_ptr;
    if (!getkCGImagePropertyGIFDictionarySymbolLoc_ptr)
    {
      int v25 = ImageIOLibrary_9466();
      v48[3] = (uint64_t)dlsym(v25, "kCGImagePropertyGIFDictionary");
      getkCGImagePropertyGIFDictionarySymbolLoc_ptr = v48[3];
      double v24 = (void *)v48[3];
    }
    _Block_object_dispose(&v47, 8);
    if (!v24)
    {
      uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v44 = [NSString stringWithUTF8String:"CFStringRef getkCGImagePropertyGIFDictionary(void)"];
      objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 36, @"%s", dlerror());
      goto LABEL_57;
    }
    double v26 = [v23 objectForKey:*v24];
    uint64_t v47 = 0;
    uint64_t v48 = &v47;
    uint64_t v49 = 0x2020000000;
    id v27 = (void *)getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr;
    uint64_t v50 = (void *)getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr;
    if (!getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr)
    {
      double v28 = ImageIOLibrary_9466();
      v48[3] = (uint64_t)dlsym(v28, "kCGImagePropertyGIFDelayTime");
      getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr = v48[3];
      id v27 = (void *)v48[3];
    }
    _Block_object_dispose(&v47, 8);
    if (!v27)
    {
      uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v44 = [NSString stringWithUTF8String:"CFStringRef getkCGImagePropertyGIFDelayTime(void)"];
      objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 35, @"%s", dlerror());
      goto LABEL_57;
    }
    uint64_t v29 = [v26 objectForKey:*v27];
    [v29 doubleValue];
    double v31 = v30;

    uint64_t v47 = 0;
    uint64_t v48 = &v47;
    uint64_t v49 = 0x2020000000;
    CGAffineTransform v32 = (void *)getkCGImagePropertyOrientationSymbolLoc_ptr_9489;
    uint64_t v50 = (void *)getkCGImagePropertyOrientationSymbolLoc_ptr_9489;
    if (!getkCGImagePropertyOrientationSymbolLoc_ptr_9489)
    {
      uint64_t v33 = ImageIOLibrary_9466();
      v48[3] = (uint64_t)dlsym(v33, "kCGImagePropertyOrientation");
      getkCGImagePropertyOrientationSymbolLoc_ptr_9489 = v48[3];
      CGAffineTransform v32 = (void *)v48[3];
    }
    _Block_object_dispose(&v47, 8);
    if (!v32)
    {
      uint64_t v43 = [MEMORY[0x1E4F28B00] currentHandler];
      uint64_t v44 = [NSString stringWithUTF8String:"CFStringRef getkCGImagePropertyOrientation(void)"];
      objc_msgSend(v43, "handleFailureInFunction:file:lineNumber:description:", v44, @"WFImageHelpers.m", 32, @"%s", dlerror());
      goto LABEL_57;
    }
    uint64_t v34 = [v23 objectForKeyedSubscript:*v32];
    __int16 v35 = v34;
    if (v34)
    {
      int v36 = [v34 integerValue];
      id v37 = objc_alloc(getUIImageClass_9493());
      uint64_t v38 = 4;
      switch(v36)
      {
        case 2:
          break;
        case 3:
          uint64_t v38 = 1;
          break;
        case 4:
          uint64_t v38 = 5;
          break;
        case 5:
          uint64_t v38 = 6;
          break;
        case 6:
          uint64_t v38 = 3;
          break;
        case 7:
          uint64_t v38 = 7;
          break;
        case 8:
          uint64_t v38 = 2;
          break;
        default:
          goto LABEL_35;
      }
    }
    else
    {
      id v37 = objc_alloc(getUIImageClass_9493());
LABEL_35:
      uint64_t v38 = 0;
    }
    double v17 = v17 + v31;
    CGRect v39 = (void *)[v37 initWithCGImage:v20 scale:v38 orientation:a2];
    [v15 addObject:v39];

    CGImageRelease(v20);
    ++v16;
  }
  while (v14 != v16);
  CFRelease(v11);
  id v3 = v45;
  if (v14 == 1)
  {
    uint64_t v41 = [v15 firstObject];
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v41 = [(objc_class *)getUIImageClass_9493() animatedImageWithImages:v15 duration:v17];
LABEL_48:
  uint64_t v40 = (void *)v41;

LABEL_49:
  return v40;
}

void sub_1B3D2C0DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getkCGImageSourceShouldCacheSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "kCGImageSourceShouldCache");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImageSourceShouldCacheSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *ImageIOLibrary_9466()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!ImageIOLibraryCore_frameworkLibrary_9511)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __ImageIOLibraryCore_block_invoke_9512;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E60782F8;
    uint64_t v6 = 0;
    ImageIOLibraryCore_frameworkLibrary_9511 = _sl_dlopen();
  }
  uint64_t v0 = (void *)ImageIOLibraryCore_frameworkLibrary_9511;
  if (!ImageIOLibraryCore_frameworkLibrary_9511)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"void *ImageIOLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFImageHelpers.m", 24, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void *__getkCGImageSourceTypeIdentifierHintSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "kCGImageSourceTypeIdentifierHint");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageSourceCreateWithDataSymbolLoc_block_invoke_9472(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "CGImageSourceCreateWithData");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceCreateWithDataSymbolLoc_ptr_9471 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageSourceGetCountSymbolLoc_block_invoke_9476(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "CGImageSourceGetCount");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceGetCountSymbolLoc_ptr_9475 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageSourceCreateImageAtIndexSymbolLoc_block_invoke_9480(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "CGImageSourceCreateImageAtIndex");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_9479 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCGImageSourceCopyPropertiesAtIndexSymbolLoc_block_invoke_9484(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "CGImageSourceCopyPropertiesAtIndex");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_9483 = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyGIFDictionarySymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "kCGImagePropertyGIFDictionary");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyGIFDictionarySymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyGIFDelayTimeSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "kCGImagePropertyGIFDelayTime");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getkCGImagePropertyOrientationSymbolLoc_block_invoke_9490(uint64_t a1)
{
  uint64_t v2 = ImageIOLibrary_9466();
  uint64_t result = dlsym(v2, "kCGImagePropertyOrientation");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkCGImagePropertyOrientationSymbolLoc_ptr_9489 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class initUIImage_9495()
{
  if (UIKitLibrary_sOnce_9496 != -1) {
    dispatch_once(&UIKitLibrary_sOnce_9496, &__block_literal_global_9497);
  }
  Class result = objc_getClass("UIImage");
  classUIImage_9499 = (uint64_t)result;
  getUIImageClass_9493 = (uint64_t (*)())UIImageFunction_9501;
  return result;
}

id UIImageFunction_9501()
{
  return (id)classUIImage_9499;
}

void *__UIKitLibrary_block_invoke_9504()
{
  Class result = dlopen("/System/Library/Frameworks/UIKit.framework/UIKit", 2);
  UIKitLibrary_sLib_9506 = (uint64_t)result;
  return result;
}

uint64_t __ImageIOLibraryCore_block_invoke_9512()
{
  uint64_t result = _sl_dlopen();
  ImageIOLibraryCore_frameworkLibrary_9511 = result;
  return result;
}

void sub_1B3D2CA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *CoreTelephonyLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!CoreTelephonyLibraryCore_frameworkLibrary)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __CoreTelephonyLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E6078318;
    uint64_t v6 = 0;
    CoreTelephonyLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = (void *)CoreTelephonyLibraryCore_frameworkLibrary;
  if (!CoreTelephonyLibraryCore_frameworkLibrary)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"void *CoreTelephonyLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFCellularSettings.m", 15, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

id WFNSErrorFromCTError(uint64_t a1)
{
  void v12[2] = *MEMORY[0x1E4F143B8];
  switch(a1)
  {
    case 0:
      uint64_t v4 = 0;
      goto LABEL_9;
    case 2:
      uint64_t v2 = (void *)MEMORY[0x1E4F28C58];
      id v3 = (void *)MEMORY[0x1E4F285A8];
      goto LABEL_7;
    case 1:
      uint64_t v2 = (void *)MEMORY[0x1E4F28C58];
      id v3 = (void *)MEMORY[0x1E4F28798];
LABEL_7:
      uint64_t v4 = [v2 errorWithDomain:*v3 code:a1 >> 32 userInfo:0];
      goto LABEL_9;
  }
  unint64_t v5 = HIDWORD(a1);
  uint64_t v6 = (void *)MEMORY[0x1E4F28C58];
  v11[0] = @"CTErrorDomain";
  uint64_t v7 = [NSNumber numberWithInt:a1];
  v11[1] = @"CTError";
  v12[0] = v7;
  uint64_t v8 = [NSNumber numberWithInt:v5];
  v12[1] = v8;
  uint64_t v9 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v12 forKeys:v11 count:2];
  uint64_t v4 = [v6 errorWithDomain:@"WFCellularSettingsErrorDomain" code:0 userInfo:v9];

LABEL_9:
  return v4;
}

uint64_t __CoreTelephonyLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreTelephonyLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3D2CF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D2D1D0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

double CGFloatCeilWithScale(double result, double a2)
{
  if (a2 > 0.0) {
    return ceil(result * a2) / a2;
  }
  return result;
}

double CGFloatRoundWithScale(double result, double a2)
{
  if (a2 > 0.0) {
    return round(result * a2) / a2;
  }
  return result;
}

double CGFloatFloorWithScale(double result, double a2)
{
  if (a2 > 0.0) {
    return floor(result * a2) / a2;
  }
  return result;
}

void sub_1B3D2E620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFExternalUIPresenterXPCInterface()
{
  uint64_t v0 = [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F0CBB158];
  uint64_t v1 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v0 setClasses:v1 forSelector:sel_performSiriRequest_completionHandler_ argumentIndex:0 ofReply:1];

  uint64_t v2 = [MEMORY[0x1E4F1CAD0] setWithObject:objc_opt_class()];
  [v0 setClasses:v2 forSelector:sel_performDialogRequest_completionHandler_ argumentIndex:0 ofReply:1];

  return v0;
}

uint64_t __WFReleaseConsumedExtensions_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 longLongValue];
  return MEMORY[0x1F40CDE50](v2);
}

id __WFConsumeExtensionTokens_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  [v2 UTF8String];
  uint64_t v3 = sandbox_extension_consume();
  if (v3 < 0)
  {
    unint64_t v5 = getWFVoiceShortcutClientLogObject();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
    {
      int v7 = 136315394;
      uint64_t v8 = "WFConsumeExtensionTokens_block_invoke";
      __int16 v9 = 2112;
      id v10 = v2;
      _os_log_impl(&dword_1B3C5C000, v5, OS_LOG_TYPE_FAULT, "%s Error consuming granted extension token: %@", (uint8_t *)&v7, 0x16u);
    }

    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = [NSNumber numberWithLongLong:v3];
  }

  return v4;
}

void sub_1B3D30B14(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1B3D31624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10312(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10313(uint64_t a1)
{
}

void sub_1B3D31C08(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void *WFSandboxExtensionManagerExtensionsList()
{
  return &unk_1F0CB1E18;
}

__CFString *WFContextualActionDescribeSurface(unint64_t a1)
{
  if (a1 > 0x12) {
    return 0;
  }
  else {
    return off_1E6078518[a1];
  }
}

uint64_t WFContextualActionSurfaceSupportsOutput(unint64_t a1)
{
  return (a1 < 4) & (0xBu >> (a1 & 0xF));
}

BOOL WFCanAccessUserDefaultsDomain(void *a1)
{
  getpid();
  uint64_t v5 = [@"com.apple.siri.shortcuts" UTF8String];
  int v2 = sandbox_check();
  int v3 = v2;
  if (a1 && v2 == -1)
  {
    objc_msgSend(MEMORY[0x1E4F28C58], "errorWithDomain:code:userInfo:", *MEMORY[0x1E4F28798], *__error(), 0, v5);
    *a1 = (id)objc_claimAutoreleasedReturnValue();
  }
  return v3 == 0;
}

void *__UIKitLibrary_block_invoke_11707()
{
  uint64_t result = dlopen("/System/Library/Frameworks/UIKit.framework/UIKit", 2);
  UIKitLibrary_sLib_11709 = (uint64_t)result;
  return result;
}

void sub_1B3D37CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCTFontCreateWithGraphicsFontSymbolLoc_block_invoke(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!CoreTextLibraryCore_frameworkLibrary_11907)
  {
    v5[1] = (void *)MEMORY[0x1E4F143A8];
    uint64_t v5[2] = (void *)3221225472;
    v5[3] = __CoreTextLibraryCore_block_invoke_11908;
    long long v5[4] = &__block_descriptor_40_e5_v8__0l;
    void v5[5] = v5;
    long long v6 = xmmword_1E6078820;
    uint64_t v7 = 0;
    CoreTextLibraryCore_frameworkLibrary_11907 = _sl_dlopen();
  }
  int v2 = (void *)CoreTextLibraryCore_frameworkLibrary_11907;
  if (!CoreTextLibraryCore_frameworkLibrary_11907)
  {
    a1 = [MEMORY[0x1E4F28B00] currentHandler];
    int v2 = [NSString stringWithUTF8String:"void *CoreTextLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFWorkflowIconDrawerContext.m", 18, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  int v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "CTFontCreateWithGraphicsFont");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  getCTFontCreateWithGraphicsFontSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

uint64_t __CoreTextLibraryCore_block_invoke_11908()
{
  uint64_t result = _sl_dlopen();
  CoreTextLibraryCore_frameworkLibrary_11907 = result;
  return result;
}

void sub_1B3D380C4(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1B3D38224(_Unwind_Exception *a1)
{
}

void sub_1B3D393D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void sub_1B3D3D0D0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1B3D3D634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_1B3D3DBA0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1B3D3DE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12788(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12789(uint64_t a1)
{
}

void sub_1B3D3DFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D3E82C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFContentItemClass_block_invoke_12940(uint64_t a1)
{
  ContentKitLibrary_12961();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFContentItemClass_softClass_12939 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getWFContentItemClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentNode.m", 57, @"Unable to find class %s", "WFContentItem");

    __break(1u);
  }
}

Class __getLPLinkMetadataClass_block_invoke_12943(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!LinkPresentationLibraryCore_frameworkLibrary_12946)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __LinkPresentationLibraryCore_block_invoke_12947;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E6078A08;
    uint64_t v8 = 0;
    LinkPresentationLibraryCore_frameworkLibrary_12946 = _sl_dlopen();
  }
  if (!LinkPresentationLibraryCore_frameworkLibrary_12946)
  {
    int v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *LinkPresentationLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFOnScreenContentNode.m", 21, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("LPLinkMetadata");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    int v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v5 = [NSString stringWithUTF8String:"Class getLPLinkMetadataClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFOnScreenContentNode.m", 22, @"Unable to find class %s", "LPLinkMetadata");

LABEL_10:
    __break(1u);
  }
  getLPLinkMetadataClass_softClass_12942 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __LinkPresentationLibraryCore_block_invoke_12947()
{
  uint64_t result = _sl_dlopen();
  LinkPresentationLibraryCore_frameworkLibrary_12946 = result;
  return result;
}

void ContentKitLibrary_12961()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContentKitLibraryCore_frameworkLibrary_12964)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __ContentKitLibraryCore_block_invoke_12965;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E60789F0;
    uint64_t v5 = 0;
    ContentKitLibraryCore_frameworkLibrary_12964 = _sl_dlopen();
  }
  if (!ContentKitLibraryCore_frameworkLibrary_12964)
  {
    uint64_t v1 = [MEMORY[0x1E4F28B00] currentHandler];
    int v2 = [NSString stringWithUTF8String:"void *ContentKitLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFOnScreenContentNode.m", 25, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __ContentKitLibraryCore_block_invoke_12965()
{
  uint64_t result = _sl_dlopen();
  ContentKitLibraryCore_frameworkLibrary_12964 = result;
  return result;
}

void sub_1B3D3F12C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFStringContentItemClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary_12961();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFStringContentItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFStringContentItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getWFStringContentItemClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentNode.m", 58, @"Unable to find class %s", "WFStringContentItem");

    __break(1u);
  }
}

void __getWFURLContentItemClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary_12961();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFURLContentItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFURLContentItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getWFURLContentItemClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentNode.m", 59, @"Unable to find class %s", "WFURLContentItem");

    __break(1u);
  }
}

void __getWFContactContentItemClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary_12961();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFContactContentItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFContactContentItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getWFContactContentItemClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentNode.m", 60, @"Unable to find class %s", "WFContactContentItem");

    __break(1u);
  }
}

void __getWFCNContactClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary_12961();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFCNContact");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFCNContactClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getWFCNContactClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentNode.m", 62, @"Unable to find class %s", "WFCNContact");

    __break(1u);
  }
}

void __getWFPhotoMediaContentItemClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary_12961();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFPhotoMediaContentItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFPhotoMediaContentItemClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getWFPhotoMediaContentItemClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentNode.m", 61, @"Unable to find class %s", "WFPhotoMediaContentItem");

    __break(1u);
  }
}

void sub_1B3D43F64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getRBSAssertionClass_block_invoke(uint64_t a1)
{
  RunningBoardServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RBSAssertion");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRBSAssertionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getRBSAssertionClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFDispatchSourceTimer.m", 15, @"Unable to find class %s", "RBSAssertion");

    __break(1u);
  }
}

void __getRBSTargetClass_block_invoke(uint64_t a1)
{
  RunningBoardServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RBSTarget");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRBSTargetClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getRBSTargetClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFDispatchSourceTimer.m", 17, @"Unable to find class %s", "RBSTarget");

    __break(1u);
  }
}

void __getRBSDomainAttributeClass_block_invoke(uint64_t a1)
{
  RunningBoardServicesLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RBSDomainAttribute");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getRBSDomainAttributeClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    int v3 = [NSString stringWithUTF8String:"Class getRBSDomainAttributeClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFDispatchSourceTimer.m", 16, @"Unable to find class %s", "RBSDomainAttribute");

    __break(1u);
  }
}

void RunningBoardServicesLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!RunningBoardServicesLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __RunningBoardServicesLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E6078CE0;
    uint64_t v5 = 0;
    RunningBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!RunningBoardServicesLibraryCore_frameworkLibrary)
  {
    uint64_t v1 = [MEMORY[0x1E4F28B00] currentHandler];
    int v2 = [NSString stringWithUTF8String:"void *RunningBoardServicesLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFDispatchSourceTimer.m", 14, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __RunningBoardServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  RunningBoardServicesLibraryCore_frameworkLibrary = result;
  return result;
}

id WFSafeApplyFormatString(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    long long v4 = NSString;
    id v5 = a1;
    if ([v3 count])
    {
      uint64_t v6 = [v3 objectAtIndexedSubscript:0];
    }
    else
    {
      uint64_t v6 = 0;
    }
    id v8 = v3;
    if ((unint64_t)[v8 count] < 2)
    {
      int v25 = 0;
    }
    else
    {
      int v25 = [v8 objectAtIndexedSubscript:1];
    }

    id v9 = v8;
    if ((unint64_t)[v9 count] < 3)
    {
      double v24 = 0;
    }
    else
    {
      double v24 = [v9 objectAtIndexedSubscript:2];
    }

    id v10 = v9;
    if ((unint64_t)[v10 count] < 4)
    {
      id v27 = 0;
    }
    else
    {
      id v27 = [v10 objectAtIndexedSubscript:3];
    }

    id v11 = v10;
    if ((unint64_t)[v11 count] < 5)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v12 = [v11 objectAtIndexedSubscript:4];
    }

    id v13 = v11;
    if ((unint64_t)[v13 count] < 6)
    {
      long long v23 = 0;
    }
    else
    {
      long long v23 = [v13 objectAtIndexedSubscript:5];
    }

    id v14 = v13;
    if ((unint64_t)[v14 count] < 7)
    {
      uint64_t v15 = 0;
    }
    else
    {
      uint64_t v15 = [v14 objectAtIndexedSubscript:6];
    }

    id v16 = v14;
    if ((unint64_t)[v16 count] < 8)
    {
      double v17 = 0;
    }
    else
    {
      double v17 = [v16 objectAtIndexedSubscript:7];
    }

    id v18 = v16;
    if ((unint64_t)[v18 count] < 9)
    {
      char v19 = 0;
    }
    else
    {
      char v19 = [v18 objectAtIndexedSubscript:8];
    }

    id v20 = v18;
    if ((unint64_t)[v20 count] < 0xA)
    {
      long long v21 = 0;
    }
    else
    {
      long long v21 = [v20 objectAtIndexedSubscript:9];
    }

    double v26 = (void *)v12;
    long long v7 = objc_msgSend(v4, "stringWithFormat:", v5, v6, v25, v24, v27, v12, v23, v15, v17, v19, v21);
  }
  else
  {
    long long v7 = 0;
  }

  return v7;
}

id WFSanitizeFormatString(void *a1, BOOL *a2)
{
  id v3 = a1;
  if (v3)
  {
    if (WFSanitizeFormatString_onceToken != -1) {
      dispatch_once(&WFSanitizeFormatString_onceToken, &__block_literal_global_262);
    }
    long long v4 = (void *)[v3 mutableCopy];
    uint64_t v5 = objc_msgSend((id)WFSanitizeFormatString_expression, "replaceMatchesInString:options:range:withTemplate:", v4, 0, 0, objc_msgSend(v3, "length"), @" ");
    if (a2) {
      *a2 = v5 != 0;
    }
    uint64_t v6 = (void *)[v4 copy];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

void __WFSanitizeFormatString_block_invoke()
{
  id v5 = 0;
  uint64_t v0 = [objc_alloc(MEMORY[0x1E4F28FD8]) initWithPattern:@"%[^@ ]+" options:16 error:&v5];
  id v1 = v5;
  int v2 = (void *)WFSanitizeFormatString_expression;
  WFSanitizeFormatString_expression = v0;

  if (!WFSanitizeFormatString_expression)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    long long v4 = objc_msgSend(NSString, "stringWithUTF8String:", "NSString * _Nonnull WFSanitizeFormatString(NSString * _Nullable __strong, BOOL * _Nonnull)_block_invoke");
    [v3 handleFailureInFunction:v4, @"WFContextualAction.m", 62, @"Could not compile regex: %@", v1 file lineNumber description];
  }
}

uint64_t WFMatchActionTypesWithFileTypes(void *a1, void *a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if (!v3)
  {
    id v18 = [MEMORY[0x1E4F28B00] currentHandler];
    char v19 = objc_msgSend(NSString, "stringWithUTF8String:", "BOOL WFMatchActionTypesWithFileTypes(NSSet<UTType *> * _Nonnull __strong, NSArray<UTType *> * _Nullable __strong)");
    [v18 handleFailureInFunction:v19, @"WFContextualAction.m", 317, @"Invalid parameter not satisfying: %@", @"actionTypes" file lineNumber description];
  }
  if ([v3 count] && !objc_msgSend(v4, "count"))
  {
    uint64_t v16 = 0;
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v5 = v4;
    uint64_t v6 = [v5 countByEnumeratingWithState:&v25 objects:v30 count:16];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)v26;
      id v20 = v4;
      while (1)
      {
        uint64_t v9 = 0;
LABEL_8:
        if (*(void *)v26 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v25 + 1) + 8 * v9);
        long long v21 = 0u;
        long long v22 = 0u;
        long long v23 = 0u;
        long long v24 = 0u;
        id v11 = v3;
        uint64_t v12 = [v11 countByEnumeratingWithState:&v21 objects:v29 count:16];
        if (!v12) {
          break;
        }
        uint64_t v13 = v12;
        uint64_t v14 = *(void *)v22;
LABEL_12:
        uint64_t v15 = 0;
        while (1)
        {
          if (*(void *)v22 != v14) {
            objc_enumerationMutation(v11);
          }
          if ([v10 conformsToType:*(void *)(*((void *)&v21 + 1) + 8 * v15)]) {
            break;
          }
          if (v13 == ++v15)
          {
            uint64_t v13 = [v11 countByEnumeratingWithState:&v21 objects:v29 count:16];
            if (v13) {
              goto LABEL_12;
            }
            goto LABEL_22;
          }
        }

        if (++v9 != v7) {
          goto LABEL_8;
        }
        uint64_t v7 = [v5 countByEnumeratingWithState:&v25 objects:v30 count:16];
        uint64_t v16 = 1;
        id v4 = v20;
        if (!v7) {
          goto LABEL_24;
        }
      }
LABEL_22:

      uint64_t v16 = 0;
      id v4 = v20;
    }
    else
    {
      uint64_t v16 = 1;
    }
LABEL_24:
  }
  return v16;
}

void sub_1B3D4720C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getNRPairedDeviceRegistryClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!NanoRegistryLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __NanoRegistryLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E6078E30;
    uint64_t v8 = 0;
    NanoRegistryLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!NanoRegistryLibraryCore_frameworkLibrary)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v4 = [NSString stringWithUTF8String:"void *NanoRegistryLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFDevice.m", 25, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("NRPairedDeviceRegistry");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getNRPairedDeviceRegistryClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFDevice.m", 26, @"Unable to find class %s", "NRPairedDeviceRegistry");

LABEL_10:
    __break(1u);
  }
  getNRPairedDeviceRegistryClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __NanoRegistryLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  NanoRegistryLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getVKCRemoveBackgroundRequestHandlerClass_block_invoke_14438(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!VisionKitCoreLibraryCore_frameworkLibrary_14442)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __VisionKitCoreLibraryCore_block_invoke_14443;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E6078E00;
    uint64_t v8 = 0;
    VisionKitCoreLibraryCore_frameworkLibrary_14442 = _sl_dlopen();
  }
  if (!VisionKitCoreLibraryCore_frameworkLibrary_14442)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v4 = [NSString stringWithUTF8String:"void *VisionKitCoreLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFDevice.m", 53, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("VKCRemoveBackgroundRequestHandler");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getVKCRemoveBackgroundRequestHandlerClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFDevice.m", 54, @"Unable to find class %s", "VKCRemoveBackgroundRequestHandler");

LABEL_10:
    __break(1u);
  }
  getVKCRemoveBackgroundRequestHandlerClass_softClass_14437 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id getCBClientClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getCBClientClass_softClass;
  uint64_t v7 = getCBClientClass_softClass;
  if (!getCBClientClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCBClientClass_block_invoke;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getCBClientClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B3D47AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCBClientClass_block_invoke(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  if (!CoreBrightnessLibraryCore_frameworkLibrary)
  {
    v6[1] = (void *)MEMORY[0x1E4F143A8];
    id v6[2] = (void *)3221225472;
    v6[3] = __CoreBrightnessLibraryCore_block_invoke;
    v6[4] = &__block_descriptor_40_e5_v8__0l;
    void v6[5] = v6;
    long long v7 = xmmword_1E6078E18;
    uint64_t v8 = 0;
    CoreBrightnessLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!CoreBrightnessLibraryCore_frameworkLibrary)
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v4 = [NSString stringWithUTF8String:"void *CoreBrightnessLibrary(void)"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"WFDevice.m", 61, @"%s", v6[0]);

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("CBClient");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = [MEMORY[0x1E4F28B00] currentHandler];
    id v5 = [NSString stringWithUTF8String:"Class getCBClientClass(void)_block_invoke"];
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, @"WFDevice.m", 62, @"Unable to find class %s", "CBClient");

LABEL_10:
    __break(1u);
  }
  getCBClientClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CoreBrightnessLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreBrightnessLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __VisionKitCoreLibraryCore_block_invoke_14443()
{
  uint64_t result = _sl_dlopen();
  VisionKitCoreLibraryCore_frameworkLibrary_14442 = result;
  return result;
}

uint64_t __ManagedConfigurationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ManagedConfigurationLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3D49024(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14678(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14679(uint64_t a1)
{
}

id WFEvaluateMathematicalFunction(void *a1, void *a2)
{
  v16[1] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3)
  {
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v12 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v13 = objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber * _Nonnull WFEvaluateMathematicalFunction(NSString * _Nonnull __strong, NSArray<NSNumber *> * _Nonnull __strong)");
    [v12 handleFailureInFunction:v13, @"VCVoiceShortcutClient_ContextualActions.m", 186, @"Invalid parameter not satisfying: %@", @"function" file lineNumber description];

    if (v5) {
      goto LABEL_3;
    }
  }
  uint64_t v14 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v15 = objc_msgSend(NSString, "stringWithUTF8String:", "NSNumber * _Nonnull WFEvaluateMathematicalFunction(NSString * _Nonnull __strong, NSArray<NSNumber *> * _Nonnull __strong)");
  [v14 handleFailureInFunction:v15, @"VCVoiceShortcutClient_ContextualActions.m", 187, @"Invalid parameter not satisfying: %@", @"numbers" file lineNumber description];

LABEL_3:
  uint64_t v6 = (void *)MEMORY[0x1E4F28C68];
  long long v7 = [MEMORY[0x1E4F28C68] expressionForConstantValue:v5];
  v16[0] = v7;
  uint64_t v8 = [MEMORY[0x1E4F1C978] arrayWithObjects:v16 count:1];
  uint64_t v9 = [v6 expressionForFunction:v3 arguments:v8];

  id v10 = [v9 expressionValueWithObject:0 context:0];

  return v10;
}

void sub_1B3D49720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getBMContextualActionParameterClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getBMContextualActionParameterClass_softClass;
  uint64_t v7 = getBMContextualActionParameterClass_softClass;
  if (!getBMContextualActionParameterClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getBMContextualActionParameterClass_block_invoke;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getBMContextualActionParameterClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B3D49810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getBMContextualActionEventClass_block_invoke(uint64_t a1)
{
  BiomeStreamsLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("BMContextualActionEvent");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getBMContextualActionEventClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getBMContextualActionEventClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCVoiceShortcutClient_ContextualActions.m", 26, @"Unable to find class %s", "BMContextualActionEvent");

    __break(1u);
  }
}

void __getBMStreamsClass_block_invoke(uint64_t a1)
{
  BiomeStreamsLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("BMStreams");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getBMStreamsClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getBMStreamsClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCVoiceShortcutClient_ContextualActions.m", 29, @"Unable to find class %s", "BMStreams");

    __break(1u);
  }
}

void BiomeStreamsLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!BiomeStreamsLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __BiomeStreamsLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E6078F28;
    uint64_t v5 = 0;
    BiomeStreamsLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!BiomeStreamsLibraryCore_frameworkLibrary)
  {
    id v1 = [MEMORY[0x1E4F28B00] currentHandler];
    int v2 = [NSString stringWithUTF8String:"void *BiomeStreamsLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"VCVoiceShortcutClient_ContextualActions.m", 24, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __BiomeStreamsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  BiomeStreamsLibraryCore_frameworkLibrary = result;
  return result;
}

void __getBMContextualActionParameterClass_block_invoke(uint64_t a1)
{
  BiomeStreamsLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("BMContextualActionParameter");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getBMContextualActionParameterClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getBMContextualActionParameterClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCVoiceShortcutClient_ContextualActions.m", 28, @"Unable to find class %s", "BMContextualActionParameter");

    __break(1u);
  }
}

void sub_1B3D49D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getBMContextualActionContentClass_block_invoke(uint64_t a1)
{
  BiomeStreamsLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("BMContextualActionContent");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getBMContextualActionContentClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    int v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getBMContextualActionContentClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCVoiceShortcutClient_ContextualActions.m", 27, @"Unable to find class %s", "BMContextualActionContent");

    __break(1u);
  }
}

id WFLocallyFilterActions(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = [v3 files];
  uint64_t v6 = objc_msgSend(v5, "if_map:", &__block_literal_global_102);

  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 3221225472;
  void v14[2] = __WFLocallyFilterActions_block_invoke_2;
  id v14[3] = &unk_1E6078F08;
  id v15 = v6;
  id v7 = v6;
  uint64_t v8 = objc_msgSend(v4, "if_objectsPassingTest:", v14);

  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  void v12[2] = __WFLocallyFilterActions_block_invoke_3;
  void v12[3] = &unk_1E6078F08;
  id v13 = v3;
  id v9 = v3;
  id v10 = objc_msgSend(v8, "if_objectsPassingTest:", v12);

  return v10;
}

uint64_t __WFLocallyFilterActions_block_invoke_2(uint64_t a1, void *a2)
{
  id v3 = [a2 filteringBehavior];
  id v4 = [v3 matchingTypes];

  if (v4)
  {
    uint64_t v5 = [v3 matchingTypes];
    uint64_t v6 = WFMatchActionTypesWithFileTypes(v5, *(void **)(a1 + 32));
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

uint64_t __WFLocallyFilterActions_block_invoke_3(uint64_t a1, void *a2)
{
  id v3 = [a2 filteringBehavior];
  id v4 = [v3 inClientPredicate];

  if (v4)
  {
    [v4 allowEvaluation];
    uint64_t v5 = [*(id *)(a1 + 32) files];
    uint64_t v6 = [v4 evaluateWithObject:v5];
  }
  else
  {
    uint64_t v6 = 1;
  }

  return v6;
}

id __WFLocallyFilterActions_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [v2 type];
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
  }
  else
  {
    uint64_t v6 = [v2 fileURL];
    id v7 = [v6 pathExtension];

    if (!v7
      || ([MEMORY[0x1E4F442D8] typeWithFilenameExtension:v7],
          (id v5 = (id)objc_claimAutoreleasedReturnValue()) == 0))
    {
      id v5 = (id)*MEMORY[0x1E4F44408];
    }
  }
  return v5;
}

id WFArrayFromChanges(void *a1)
{
  id v1 = objc_msgSend(a1, "if_map:", &__block_literal_global_73_15044);
  id v2 = [v1 allObjects];

  return v2;
}

uint64_t __WFArrayFromChanges_block_invoke(uint64_t a1, void *a2)
{
  return [a2 dictionaryRepresentation];
}

id WFChangesFromArray(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F1CAD0];
  id v2 = objc_msgSend(a1, "if_map:", &__block_literal_global_15053);
  id v3 = [v1 setWithArray:v2];

  return v3;
}

WFDatabaseObjectDescriptor *__WFChangesFromArray_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [[WFDatabaseObjectDescriptor alloc] initWithDictionaryRepresentation:v2];

  return v3;
}

WFINShortcutRunDescriptor *WFWorkflowRunDescriptorForINShortcut(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    id v11 = [NSString stringWithUTF8String:"WFWorkflowRunDescriptor * _Nonnull WFWorkflowRunDescriptorForINShortcut(INShortcut * _Nonnull __strong)"];
    [v10 handleFailureInFunction:v11, @"WFSpotlightResultWorkflowRunnerClient.m", 144, @"Invalid parameter not satisfying: %@", @"shortcut" file lineNumber description];
  }
  id v2 = [v1 intent];
  if (v2 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    id v3 = [WFWorkflowDatabaseRunDescriptor alloc];
    id v4 = [v2 workflow];
    id v5 = [v4 vocabularyIdentifier];
    uint64_t v6 = [v2 workflow];
    id v7 = [v6 spokenPhrase];
    uint64_t v8 = [(WFWorkflowDatabaseRunDescriptor *)v3 initWithIdentifier:v5 name:v7];
  }
  else
  {

    uint64_t v8 = [[WFINShortcutRunDescriptor alloc] initWithShortcut:v1];
  }

  return v8;
}

__CFString *WFRunSourceForSpotlightExecutionContext(unint64_t a1)
{
  if (a1 > 0xA) {
    id v1 = @"unknown";
  }
  else {
    id v1 = off_1E6077128[a1];
  }
  id v2 = v1;
  if ([(__CFString *)v2 isEqualToString:@"unknown"]) {
    id v3 = @"contextual-action-spotlight-unknown";
  }
  else {
    id v3 = v2;
  }
  id v4 = v3;

  return v4;
}

id WFSpotlightResultRunnableAttributeKey()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableFromData(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    id v1 = (void *)MEMORY[0x1E4F28DC0];
    id v2 = (void *)MEMORY[0x1E4F1CAD0];
    id v3 = a1;
    id v4 = objc_msgSend(v2, "setWithObjects:", objc_opt_class(), 0);
    id v9 = 0;
    id v5 = [v1 unarchivedObjectOfClasses:v4 fromData:v3 error:&v9];

    id v6 = v9;
    if (!v5)
    {
      id v7 = getWFVoiceShortcutClientLogObject();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        id v11 = "WFSpotlightResultRunnableFromData";
        __int16 v12 = 2112;
        id v13 = v6;
        _os_log_impl(&dword_1B3C5C000, v7, OS_LOG_TYPE_ERROR, "%s Cannot unpack data into runnable: %@", buf, 0x16u);
      }
    }
  }
  else
  {
    id v5 = 0;
  }
  return v5;
}

id WFDataFromSpotlightResultRunnable(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (!v3)
  {
    id v6 = [MEMORY[0x1E4F28B00] currentHandler];
    id v7 = objc_msgSend(NSString, "stringWithUTF8String:", "NSData * _Nullable WFDataFromSpotlightResultRunnable(id<WFSpotlightResultRunnable>  _Nonnull __strong, NSError *__autoreleasing  _Nullable * _Nullable)");
    [v6 handleFailureInFunction:v7, @"WFSpotlightResultWorkflowRunnerClient.m", 48, @"Invalid parameter not satisfying: %@", @"runnable" file lineNumber description];
  }
  id v4 = [MEMORY[0x1E4F28DB0] archivedDataWithRootObject:v3 requiringSecureCoding:1 error:a2];

  return v4;
}

id WFSpotlightResultRunnableDisplayOrderKey()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_display_order" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableAccessorySystemImageNameKey()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_accessory_system_image_name" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableIneligibleForTopHit()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_ineligible_for_top_hit" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableAssociatedSettingsPreferenceKey()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_associated_settings_preference" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableIsAppShortcutTopHit()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_is_app_shortcut_top_hit" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableIsAppTopHitExclusive()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_is_app_top_hit_exclusive" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableTopHitBadge()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_top_hit_badge" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableSubtitle()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_subtitle" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableImageDisplayStyle()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_image_display_style" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnablePrimaryPhrase()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_primary_phrase" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableActionIdentifier()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_action_identifier" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableLNPropertyIdentifier()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_lnproperty_identifier" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableTintColorNameIdentifier()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_tint_color_name" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

id WFSpotlightResultRunnableSettingBiomeStreamIdentifier()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F237C0]) initWithKeyName:@"com_apple_shortcuts_runnable_setting_biome_stream_identifier" searchable:0 searchableByDefault:0 unique:0 multiValued:0];
  return v0;
}

uint64_t WFTopHitContextualActionTypeForBundleIdentifier(void *a1)
{
  id v1 = a1;
  id v2 = (void *)[objc_alloc(MEMORY[0x1E4F223C8]) initWithBundleIdentifier:v1 allowPlaceholder:0 error:0];
  if (v2) {
    uint64_t v3 = [v1 isEqualToString:@"com.apple.shortcuts"];
  }
  else {
    uint64_t v3 = 0;
  }

  return v3;
}

uint64_t WFTopHitLimitForType(unint64_t a1)
{
  if (a1 > 6) {
    return 5;
  }
  else {
    return qword_1B3D88C80[a1];
  }
}

id WFDisambiguableContextualActionClassForType(uint64_t a1)
{
  if (a1 == 1 || a1 == 4 || a1 == 5)
  {
    id v2 = objc_opt_class();
  }
  else
  {
    id v2 = 0;
  }
  return v2;
}

void sub_1B3D519F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  (*(void (**)(uint64_t))(v31 + 16))(v31);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v32 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15836(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__15837(uint64_t a1)
{
}

double WFContentItemListThumbnailCornerRadiusForRoundingStyle(uint64_t a1, double a2, double a3)
{
  double v3 = 0.0;
  if ((unint64_t)(a1 - 1) <= 2) {
    double v3 = dbl_1B3D88CB8[a1 - 1];
  }
  if (a2 >= a3) {
    a2 = a3;
  }
  return a2 * v3;
}

void sub_1B3D53E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getISImageDescriptorClass_block_invoke_16335(uint64_t a1)
{
  IconServicesLibrary_16338();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("ISImageDescriptor");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getISImageDescriptorClass_softClass_16334 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    double v3 = [NSString stringWithUTF8String:"Class getISImageDescriptorClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCConfiguredSleepWorkflow.m", 18, @"Unable to find class %s", "ISImageDescriptor");

    __break(1u);
  }
}

void *__getkISImageDescriptorHomeScreenSymbolLoc_block_invoke_16337(uint64_t a1)
{
  id v2 = IconServicesLibrary_16338();
  uint64_t result = dlsym(v2, "kISImageDescriptorHomeScreen");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getkISImageDescriptorHomeScreenSymbolLoc_ptr_16336 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *IconServicesLibrary_16338()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!IconServicesLibraryCore_frameworkLibrary_16348)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __IconServicesLibraryCore_block_invoke_16349;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E60791D8;
    uint64_t v6 = 0;
    IconServicesLibraryCore_frameworkLibrary_16348 = _sl_dlopen();
  }
  uint64_t v0 = (void *)IconServicesLibraryCore_frameworkLibrary_16348;
  if (!IconServicesLibraryCore_frameworkLibrary_16348)
  {
    uint64_t v0 = [MEMORY[0x1E4F28B00] currentHandler];
    double v3 = [NSString stringWithUTF8String:"void *IconServicesLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCConfiguredSleepWorkflow.m", 17, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __IconServicesLibraryCore_block_invoke_16349()
{
  uint64_t result = _sl_dlopen();
  IconServicesLibraryCore_frameworkLibrary_16348 = result;
  return result;
}

id WFShojiSystemActionsContextualActionFromData(void *a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if (!v1)
  {
    uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v7 = [NSString stringWithUTF8String:"WFContextualAction * _Nullable WFShojiSystemActionsContextualActionFromData(NSData * _Nonnull __strong)"];
    [v6 handleFailureInFunction:v7, @"WFShojiSystemActionsRunnerClient.m", 21, @"Invalid parameter not satisfying: %@", @"data" file lineNumber description];
  }
  id v8 = 0;
  id v2 = [MEMORY[0x1E4F28DC0] unarchivedObjectOfClass:objc_opt_class() fromData:v1 error:&v8];
  id v3 = v8;
  if (!v2)
  {
    id v4 = getWFVoiceShortcutClientLogObject();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      id v10 = "WFShojiSystemActionsContextualActionFromData";
      __int16 v11 = 2112;
      id v12 = v3;
      _os_log_impl(&dword_1B3C5C000, v4, OS_LOG_TYPE_ERROR, "%s Cannot unpack data into contextual action: %@", buf, 0x16u);
    }
  }
  return v2;
}

id WFShojiSystemActionsDataFromContextualAction(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (!v3)
  {
    uint64_t v6 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v7 = objc_msgSend(NSString, "stringWithUTF8String:", "NSData * _Nullable WFShojiSystemActionsDataFromContextualAction(WFContextualAction * _Nonnull __strong, NSError *__autoreleasing  _Nullable * _Nullable)");
    [v6 handleFailureInFunction:v7, @"WFShojiSystemActionsRunnerClient.m", 31, @"Invalid parameter not satisfying: %@", @"action" file lineNumber description];
  }
  id v4 = [MEMORY[0x1E4F28DB0] archivedDataWithRootObject:v3 requiringSecureCoding:1 error:a2];

  return v4;
}

uint64_t WFAutomationDaemonXPCInterface()
{
  return [MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1F0CD97F8];
}

void sub_1B3D55C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id WFAbbreviatedNameFromText(void *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = objc_msgSend(MEMORY[0x1E4F28B88], "newlineCharacterSet", 0);
  id v3 = [v1 componentsSeparatedByCharactersInSet:v2];

  uint64_t v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v13;
LABEL_3:
    uint64_t v7 = 0;
    while (1)
    {
      if (*(void *)v13 != v6) {
        objc_enumerationMutation(v3);
      }
      id v8 = *(void **)(*((void *)&v12 + 1) + 8 * v7);
      id v9 = [MEMORY[0x1E4F28B88] whitespaceCharacterSet];
      id v10 = [v8 stringByTrimmingCharactersInSet:v9];

      if ([v10 length]) {
        break;
      }

      if (v5 == ++v7)
      {
        uint64_t v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v5) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }

    if (v10 && (unint64_t)[v10 length] >= 0x65)
    {
      objc_msgSend(v10, "substringToIndex:", objc_msgSend(v10, "rangeOfComposedCharacterSequenceAtIndex:", 100));
      v10 = id v3 = v10;
      goto LABEL_13;
    }
  }
  else
  {
LABEL_9:
    id v10 = 0;
LABEL_13:
  }
  return v10;
}

void sub_1B3D58590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __CoreUILibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreUILibraryCore_frameworkLibrary = result;
  return result;
}

id WFExclusivelyForTestingGetResidentCoreGlyphsCatalogs()
{
  os_unfair_lock_lock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  id v0 = (id)WFImageLockedResidentCoreGlyphsCatalogs;
  os_unfair_lock_unlock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  return v0;
}

BOOL VCDeviceHasBeenUnlocked()
{
  return MKBDeviceUnlockedSinceBoot() != 0;
}

uint64_t VCPerformOnFirstUnlock(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!v4)
  {
    id v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = objc_msgSend(NSString, "stringWithUTF8String:", "int VCPerformOnFirstUnlock(dispatch_queue_t  _Nonnull __strong, void (^ _Nonnull __strong)(void))");
    [v8 handleFailureInFunction:v9, @"VCUtilities.m", 35, @"Invalid parameter not satisfying: %@", @"block" file lineNumber description];

    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    id v10 = [MEMORY[0x1E4F28B00] currentHandler];
    __int16 v11 = objc_msgSend(NSString, "stringWithUTF8String:", "int VCPerformOnFirstUnlock(dispatch_queue_t  _Nonnull __strong, void (^ _Nonnull __strong)(void))");
    [v10 handleFailureInFunction:v11, @"VCUtilities.m", 36, @"Invalid parameter not satisfying: %@", @"queue" file lineNumber description];

    goto LABEL_3;
  }
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  int out_token = -1;
  handler[0] = MEMORY[0x1E4F143A8];
  handler[1] = 3221225472;
  handler[2] = __VCPerformOnFirstUnlock_block_invoke;
  handler[3] = &unk_1E60793A8;
  id v13 = v4;
  id v5 = v4;
  notify_register_dispatch("com.apple.mobile.keybagd.first_unlock", &out_token, v3, handler);
  uint64_t v6 = out_token;

  return v6;
}

uint64_t __VCPerformOnFirstUnlock_block_invoke(uint64_t a1, int token)
{
  notify_cancel(token);
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);
  return v3();
}

BOOL VCIsDeviceLocked()
{
  return MKBGetDeviceLockState() - 1 < 2;
}

id VCInactiveAppsFromList(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  if ([v1 count])
  {
    id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v3 = v1;
    uint64_t v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = *(void *)v14;
      do
      {
        for (uint64_t i = 0; i != v5; ++i)
        {
          if (*(void *)v14 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = (void *)MEMORY[0x1E4F223E0];
          id v9 = *(id *)(*((void *)&v13 + 1) + 8 * i);
          id v10 = objc_msgSend(v8, "defaultWorkspace", (void)v13);
          char v11 = [v10 applicationIsInstalled:v9];

          if ((v11 & 1) == 0) {
            [v2 addObject:v9];
          }
        }
        uint64_t v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v5);
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

__CFString *WFBannerRequesterIdentifier()
{
  id v0 = @"com.apple.ShortcutsUI";
  return @"com.apple.ShortcutsUI";
}

id WFApertureStatusViewControllerIdentityFromRunningContext(void *a1)
{
  id v1 = [a1 identifier];
  id v2 = [v1 stringByAppendingString:@".WFApertureStatusViewController"];

  return v2;
}

id getWFStringContentItemClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)getWFStringContentItemClass_softClass_18570;
  uint64_t v7 = getWFStringContentItemClass_softClass_18570;
  if (!getWFStringContentItemClass_softClass_18570)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getWFStringContentItemClass_block_invoke_18571;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getWFStringContentItemClass_block_invoke_18571((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B3D5D758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFStringContentItemClass_block_invoke_18571(uint64_t a1)
{
  ContentKitLibrary_18572();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFStringContentItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFStringContentItemClass_softClass_18570 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getWFStringContentItemClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentExtractor.m", 55, @"Unable to find class %s", "WFStringContentItem");

    __break(1u);
  }
}

void ContentKitLibrary_18572()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContentKitLibraryCore_frameworkLibrary_18583)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __ContentKitLibraryCore_block_invoke_18584;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E60794F0;
    uint64_t v5 = 0;
    ContentKitLibraryCore_frameworkLibrary_18583 = _sl_dlopen();
  }
  if (!ContentKitLibraryCore_frameworkLibrary_18583)
  {
    id v1 = [MEMORY[0x1E4F28B00] currentHandler];
    id v2 = [NSString stringWithUTF8String:"void *ContentKitLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFOnScreenContentExtractor.m", 52, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __ContentKitLibraryCore_block_invoke_18584()
{
  uint64_t result = _sl_dlopen();
  ContentKitLibraryCore_frameworkLibrary_18583 = result;
  return result;
}

void sub_1B3D5DDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18591(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18592(uint64_t a1)
{
}

void sub_1B3D5E104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
}

void __getWFContentItemClass_block_invoke_18595(uint64_t a1)
{
  ContentKitLibrary_18572();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentItem");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFContentItemClass_softClass_18594 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getWFContentItemClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentExtractor.m", 53, @"Unable to find class %s", "WFContentItem");

    __break(1u);
  }
}

id getWFCoercionRequestClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  id v0 = (void *)getWFCoercionRequestClass_softClass;
  uint64_t v7 = getWFCoercionRequestClass_softClass;
  if (!getWFCoercionRequestClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getWFCoercionRequestClass_block_invoke;
    v3[3] = &unk_1E6079C28;
    v3[4] = &v4;
    __getWFCoercionRequestClass_block_invoke((uint64_t)v3);
    id v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1B3D5E3D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D5E8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getUIActivityItemsConfigurationMetadataKeyLinkPresentationMetadataSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = UIKitLibrary();
  uint64_t result = dlsym(v2, "UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getUIActivityItemsConfigurationMetadataKeyLinkPresentationMetadataSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                              + 24);
  return result;
}

void *UIKitLibrary()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!UIKitLibraryCore_frameworkLibrary_18608)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __UIKitLibraryCore_block_invoke_18609;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E60794D8;
    uint64_t v6 = 0;
    UIKitLibraryCore_frameworkLibrary_18608 = _sl_dlopen();
  }
  id v0 = (void *)UIKitLibraryCore_frameworkLibrary_18608;
  if (!UIKitLibraryCore_frameworkLibrary_18608)
  {
    id v0 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"void *UIKitLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentExtractor.m", 34, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __UIKitLibraryCore_block_invoke_18609()
{
  uint64_t result = _sl_dlopen();
  UIKitLibraryCore_frameworkLibrary_18608 = result;
  return result;
}

void __getWFCoercionRequestClass_block_invoke(uint64_t a1)
{
  ContentKitLibrary_18572();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFCoercionRequest");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFCoercionRequestClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getWFCoercionRequestClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentExtractor.m", 54, @"Unable to find class %s", "WFCoercionRequest");

    __break(1u);
  }
}

void sub_1B3D5F120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
}

void __getUIApplicationClass_block_invoke(uint64_t a1)
{
  UIKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("UIApplication");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getUIApplicationClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getUIApplicationClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentExtractor.m", 35, @"Unable to find class %s", "UIApplication");

    __break(1u);
  }
}

void __getUIWindowSceneClass_block_invoke(uint64_t a1)
{
  UIKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("UIWindowScene");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getUIWindowSceneClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v2 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"Class getUIWindowSceneClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFOnScreenContentExtractor.m", 36, @"Unable to find class %s", "UIWindowScene");

    __break(1u);
  }
}

void sub_1B3D61CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getUIGraphicsPopContextSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = UIKitLibrary_19083();
  uint64_t result = dlsym(v2, "UIGraphicsPopContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getUIGraphicsPopContextSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *UIKitLibrary_19083()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!UIKitLibraryCore_frameworkLibrary_19093)
  {
    v4[1] = (void *)MEMORY[0x1E4F143A8];
    void v4[2] = (void *)3221225472;
    v4[3] = __UIKitLibraryCore_block_invoke_19094;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E6079548;
    uint64_t v6 = 0;
    UIKitLibraryCore_frameworkLibrary_19093 = _sl_dlopen();
  }
  id v0 = (void *)UIKitLibraryCore_frameworkLibrary_19093;
  if (!UIKitLibraryCore_frameworkLibrary_19093)
  {
    id v0 = [MEMORY[0x1E4F28B00] currentHandler];
    id v3 = [NSString stringWithUTF8String:"void *UIKitLibrary(void)"];
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v3, @"WFBitmapContext.m", 21, @"%s", v4[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v1 = v4[0];
  if (v4[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __UIKitLibraryCore_block_invoke_19094()
{
  uint64_t result = _sl_dlopen();
  UIKitLibraryCore_frameworkLibrary_19093 = result;
  return result;
}

void sub_1B3D62068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getUIGraphicsPushContextSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = UIKitLibrary_19083();
  uint64_t result = dlsym(v2, "UIGraphicsPushContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getUIGraphicsPushContextSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

double WFEffectiveScaleForScale(double result)
{
  if (result <= 0.0)
  {
    id v1 = +[WFDevice currentDevice];
    [v1 screenScale];
    double v3 = v2;

    return v3;
  }
  return result;
}

uint64_t __WFCreateBitmapContext_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 40)) {
    BOOL v4 = (a3 & 0x10000000000) == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    return 1;
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    *(void *)(a4 + 56) = v5;
  }
  unsigned int v6 = *(_DWORD *)(a4 + 44) - 2;
  if (v6 > 2) {
    return 1;
  }
  uint64_t result = 0;
  *(_DWORD *)(a4 + 44) = dword_1B3D88CD0[v6];
  *(unsigned char *)(a4 + 64) = 0;
  return result;
}

void sub_1B3D62788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getUIGraphicsGetCurrentContextSymbolLoc_block_invoke(uint64_t a1)
{
  double v2 = UIKitLibrary_19083();
  uint64_t result = dlsym(v2, "UIGraphicsGetCurrentContext");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getUIGraphicsGetCurrentContextSymbolLoc_ptr = *(_UNKNOWN **)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

__CFString *WFDescriptionForDatabaseObjectType(unint64_t a1)
{
  if (a1 > 0xB) {
    return @"Unknown";
  }
  else {
    return off_1E60795D0[a1];
  }
}

__CFString *WFDescribeWorkflowOutputBehavior(unint64_t a1)
{
  if (a1 > 3) {
    return @"Unknown";
  }
  else {
    return off_1E6079630[a1];
  }
}

void sub_1B3D66184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getBiomeLibrarySymbolLoc_block_invoke_19950(void *a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_19957)
  {
    v5[1] = (void *)MEMORY[0x1E4F143A8];
    uint64_t v5[2] = (void *)3221225472;
    v5[3] = __BiomeLibraryLibraryCore_block_invoke_19958;
    long long v5[4] = &__block_descriptor_40_e5_v8__0l;
    void v5[5] = v5;
    long long v6 = xmmword_1E60796C0;
    uint64_t v7 = 0;
    BiomeLibraryLibraryCore_frameworkLibrary_19957 = _sl_dlopen();
  }
  double v2 = (void *)BiomeLibraryLibraryCore_frameworkLibrary_19957;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_19957)
  {
    a1 = [MEMORY[0x1E4F28B00] currentHandler];
    double v2 = [NSString stringWithUTF8String:"void *BiomeLibraryLibrary(void)"];
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, @"WFToggleAlarmContextualAction.m", 18, @"%s", v5[0]);

    __break(1u);
    goto LABEL_7;
  }
  double v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "BiomeLibrary");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  getBiomeLibrarySymbolLoc_ptr_19949 = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

uint64_t __BiomeLibraryLibraryCore_block_invoke_19958()
{
  uint64_t result = _sl_dlopen();
  BiomeLibraryLibraryCore_frameworkLibrary_19957 = result;
  return result;
}

void sub_1B3D686F8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long buf)
{
  if (a2 == 1)
  {
    id v17 = objc_begin_catch(a1);
    uint64_t v18 = getWFVoiceShortcutClientLogObject();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT))
    {
      LODWORD(buf) = 136315394;
      *(void *)((char *)&buf + 4) = "-[WFAllActionOutputsRunResult getActionOutputsWithCompletionHandler:]";
      WORD6(buf) = 2112;
      *(void *)((char *)&buf + 14) = v17;
      _os_log_impl(&dword_1B3C5C000, v18, OS_LOG_TYPE_FAULT, "%s Exception thrown when decoding action outputs: %@", (uint8_t *)&buf, 0x16u);
    }

    char v19 = [v16 unableToDecodeError];
    (*(void (**)(uint64_t, void, void *))(v15 + 16))(v15, 0, v19);

    objc_end_catch();
    JUMPOUT(0x1B3D686C4);
  }
  _Unwind_Resume(a1);
}

void sub_1B3D6994C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__20495(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__20496(uint64_t a1)
{
}

void sub_1B3D69C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D69EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6A140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6A434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6A710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6ABB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6AF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6B1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6B3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6BA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6BE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6C31C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1B3D6CF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFGallerySessionManagerClass_block_invoke(uint64_t a1)
{
  WorkflowKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFGallerySessionManager");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFGallerySessionManagerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    double v2 = [MEMORY[0x1E4F28B00] currentHandler];
    double v3 = [NSString stringWithUTF8String:"Class getWFGallerySessionManagerClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCVoiceShortcutClient.m", 42, @"Unable to find class %s", "WFGallerySessionManager");

    __break(1u);
  }
}

void sub_1B3D6D5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFSharedShortcutClass_block_invoke(uint64_t a1)
{
  WorkflowKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFSharedShortcut");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFSharedShortcutClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    double v2 = [MEMORY[0x1E4F28B00] currentHandler];
    double v3 = [NSString stringWithUTF8String:"Class getWFSharedShortcutClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCVoiceShortcutClient.m", 44, @"Unable to find class %s", "WFSharedShortcut");

    __break(1u);
  }
}

void __getWFGalleryWorkflowClass_block_invoke(uint64_t a1)
{
  WorkflowKitLibrary();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("WFGalleryWorkflow");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getWFGalleryWorkflowClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    double v2 = [MEMORY[0x1E4F28B00] currentHandler];
    double v3 = [NSString stringWithUTF8String:"Class getWFGalleryWorkflowClass(void)_block_invoke"];
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"VCVoiceShortcutClient.m", 43, @"Unable to find class %s", "WFGalleryWorkflow");

    __break(1u);
  }
}

void WorkflowKitLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!WorkflowKitLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __WorkflowKitLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E6079C48;
    uint64_t v5 = 0;
    WorkflowKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!WorkflowKitLibraryCore_frameworkLibrary)
  {
    id v1 = [MEMORY[0x1E4F28B00] currentHandler];
    double v2 = [NSString stringWithUTF8String:"void *WorkflowKitLibrary(void)"];
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, @"VCVoiceShortcutClient.m", 39, @"%s", v3[0]);

    __break(1u);
    goto LABEL_7;
  }
  id v0 = v3[0];
  if (v3[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __WorkflowKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  WorkflowKitLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_1B3D6DEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void VCVoiceShortcutDataDidUpdateNotificationHandler(uint64_t a1, void *a2, void *a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  char v4 = [a3 isEqualToString:@"com.apple.siri.VoiceShortcuts.DataDidUpdateNotification"];
  uint64_t v5 = getWFVoiceShortcutClientLogObject();
  uint64_t v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      int v9 = 136315394;
      id v10 = "VCVoiceShortcutDataDidUpdateNotificationHandler";
      __int16 v11 = 2112;
      long long v12 = @"com.apple.siri.VoiceShortcuts.DataDidUpdateNotification";
      _os_log_impl(&dword_1B3C5C000, v6, OS_LOG_TYPE_DEBUG, "%s Received notification: (%@)", (uint8_t *)&v9, 0x16u);
    }

    uint64_t v7 = (void *)MEMORY[0x1E4F28EB8];
    id v8 = a2;
    uint64_t v6 = [v7 defaultCenter];
    [v6 postNotificationName:@"VCVoiceShortcutClientDataDidUpdateNotification" object:v8];
  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    int v9 = 136315394;
    id v10 = "VCVoiceShortcutDataDidUpdateNotificationHandler";
    __int16 v11 = 2112;
    long long v12 = @"com.apple.siri.VoiceShortcuts.DataDidUpdateNotification";
    _os_log_impl(&dword_1B3C5C000, v6, OS_LOG_TYPE_ERROR, "%s Cannot handle unrecognized notification: (%@)", (uint8_t *)&v9, 0x16u);
  }
}

void sub_1B3D6FEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

__CFString *WFDescribeFinderImageResizeSize(unint64_t a1)
{
  if (a1 > 2) {
    return @"Small";
  }
  else {
    return off_1E6079CB0[a1];
  }
}

id WFLocalizedDescribeFinderImageResizeSize(unint64_t a1)
{
  if (a1 <= 3)
  {
    a1 = WFLocalizedString(off_1E6079CC8[a1]);
  }
  return (id)a1;
}

uint64_t WFFinderImageResizeSizeFromDescription(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"Small"])
  {
    uint64_t v2 = 3;
  }
  else if ([v1 isEqualToString:@"Medium"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"Large"])
  {
    uint64_t v2 = 1;
  }
  else
  {
    [v1 isEqualToString:@"Original"];
    uint64_t v2 = 0;
  }

  return v2;
}

__CFString *WFDescribeFinderImageResizeFormat(uint64_t a1)
{
  id v1 = @"JPEG";
  if (a1 == 1) {
    id v1 = @"PNG";
  }
  if (a1 == 2) {
    return @"HEIF";
  }
  else {
    return v1;
  }
}

uint64_t WFFinderImageResizeFormatFromDescription(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"JPEG"])
  {
    uint64_t v2 = 0;
  }
  else if ([v1 isEqualToString:@"PNG"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"HEIF"])
  {
    uint64_t v2 = 2;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t sub_1B3D71978()
{
  return MEMORY[0x1F40D3C18]();
}

uint64_t sub_1B3D71988()
{
  return MEMORY[0x1F40D3C48]();
}

uint64_t sub_1B3D71998()
{
  return MEMORY[0x1F40D3C88]();
}

uint64_t sub_1B3D719B8()
{
  return MEMORY[0x1F40D3CB0]();
}

uint64_t sub_1B3D719C8()
{
  return MEMORY[0x1F40D3DA0]();
}

uint64_t sub_1B3D719D8()
{
  return MEMORY[0x1F40D3E98]();
}

uint64_t sub_1B3D719E8()
{
  return MEMORY[0x1F40D4090]();
}

uint64_t sub_1B3D719F8()
{
  return MEMORY[0x1F40D40B8]();
}

uint64_t sub_1B3D71A08()
{
  return MEMORY[0x1F40D40E8]();
}

uint64_t sub_1B3D71A18()
{
  return MEMORY[0x1F40D41D0]();
}

uint64_t sub_1B3D71A28()
{
  return MEMORY[0x1F40D43C8]();
}

uint64_t sub_1B3D71A38()
{
  return MEMORY[0x1F40D43D8]();
}

uint64_t sub_1B3D71A48()
{
  return MEMORY[0x1F40D45E0]();
}

uint64_t sub_1B3D71A58()
{
  return MEMORY[0x1F40D4608]();
}

uint64_t sub_1B3D71A68()
{
  return MEMORY[0x1F40D4620]();
}

uint64_t sub_1B3D71A78()
{
  return MEMORY[0x1F40D46E0]();
}

uint64_t sub_1B3D71A88()
{
  return MEMORY[0x1F40D4708]();
}

uint64_t sub_1B3D71A98()
{
  return MEMORY[0x1F40D4720]();
}

uint64_t sub_1B3D71AA8()
{
  return MEMORY[0x1F40D4730]();
}

uint64_t sub_1B3D71AB8()
{
  return MEMORY[0x1F40D4750]();
}

uint64_t sub_1B3D71AC8()
{
  return MEMORY[0x1F40D4798]();
}

uint64_t sub_1B3D71AD8()
{
  return MEMORY[0x1F40D47A8]();
}

uint64_t sub_1B3D71AE8()
{
  return MEMORY[0x1F40D47C0]();
}

uint64_t sub_1B3D71B08()
{
  return MEMORY[0x1F40D4820]();
}

uint64_t sub_1B3D71B18()
{
  return MEMORY[0x1F40D48B8]();
}

uint64_t sub_1B3D71B28()
{
  return MEMORY[0x1F40D4938]();
}

uint64_t sub_1B3D71B38()
{
  return MEMORY[0x1F40D4958]();
}

uint64_t sub_1B3D71B48()
{
  return MEMORY[0x1F40D49B8]();
}

uint64_t sub_1B3D71B68()
{
  return MEMORY[0x1F40D4A40]();
}

uint64_t sub_1B3D71B78()
{
  return MEMORY[0x1F40E2E28]();
}

uint64_t sub_1B3D71B88()
{
  return MEMORY[0x1F40E2E50]();
}

uint64_t sub_1B3D71B98()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1B3D71BA8()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1B3D71BB8()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1B3D71BC8()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1B3D71BD8()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1B3D71BE8()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1B3D71BF8()
{
  return MEMORY[0x1F40E3560]();
}

uint64_t sub_1B3D71C08()
{
  return MEMORY[0x1F40E3600]();
}

uint64_t sub_1B3D71C18()
{
  return MEMORY[0x1F40E3618]();
}

uint64_t sub_1B3D71C28()
{
  return MEMORY[0x1F40E3620]();
}

uint64_t sub_1B3D71C38()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1B3D71C48()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1B3D71C58()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1B3D71C68()
{
  return MEMORY[0x1F40E3948]();
}

uint64_t sub_1B3D71C78()
{
  return MEMORY[0x1F40E39B0]();
}

uint64_t sub_1B3D71C88()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1B3D71C98()
{
  return MEMORY[0x1F40E3A68]();
}

uint64_t sub_1B3D71CA8()
{
  return MEMORY[0x1F40E3A70]();
}

uint64_t sub_1B3D71CB8()
{
  return MEMORY[0x1F40E3A78]();
}

uint64_t sub_1B3D71CC8()
{
  return MEMORY[0x1F40E3A80]();
}

uint64_t sub_1B3D71CD8()
{
  return MEMORY[0x1F40E3A90]();
}

uint64_t sub_1B3D71CE8()
{
  return MEMORY[0x1F40E3A98]();
}

uint64_t sub_1B3D71CF8()
{
  return MEMORY[0x1F40E3AB0]();
}

uint64_t sub_1B3D71D08()
{
  return MEMORY[0x1F40E3AC0]();
}

uint64_t sub_1B3D71D18()
{
  return MEMORY[0x1F40E44F8]();
}

uint64_t sub_1B3D71D28()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1B3D71D38()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1B3D71D48()
{
  return MEMORY[0x1F40E4588]();
}

uint64_t sub_1B3D71D58()
{
  return MEMORY[0x1F40E45B8]();
}

uint64_t sub_1B3D71D68()
{
  return MEMORY[0x1F40E45C8]();
}

uint64_t sub_1B3D71D78()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_1B3D71D88()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1B3D71D98()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_1B3D71DA8()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1B3D71DB8()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1B3D71DC8()
{
  return MEMORY[0x1F40E4D78]();
}

uint64_t sub_1B3D71DD8()
{
  return MEMORY[0x1F40E4D80]();
}

uint64_t sub_1B3D71DE8()
{
  return MEMORY[0x1F40E4D90]();
}

uint64_t sub_1B3D71DF8()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1B3D71E08()
{
  return MEMORY[0x1F40E4DB8]();
}

uint64_t sub_1B3D71E18()
{
  return MEMORY[0x1F40E4DD0]();
}

uint64_t sub_1B3D71E28()
{
  return MEMORY[0x1F40E52A0]();
}

uint64_t sub_1B3D71E38()
{
  return MEMORY[0x1F40E52B0]();
}

uint64_t sub_1B3D71E48()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1B3D71E58()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1B3D71E68()
{
  return MEMORY[0x1F40E53E8]();
}

uint64_t sub_1B3D71E78()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1B3D71E88()
{
  return MEMORY[0x1F40E5428]();
}

uint64_t sub_1B3D71E98()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1B3D71EA8()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1B3D71EB8()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_1B3D71EC8()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1B3D71ED8()
{
  return MEMORY[0x1F4119150]();
}

uint64_t sub_1B3D71EE8()
{
  return MEMORY[0x1F4126F38]();
}

uint64_t sub_1B3D71EF8()
{
  return MEMORY[0x1F4126F50]();
}

uint64_t sub_1B3D71F08()
{
  return MEMORY[0x1F4126F58]();
}

uint64_t sub_1B3D71F18()
{
  return MEMORY[0x1F4127110]();
}

uint64_t sub_1B3D71F28()
{
  return MEMORY[0x1F4127118]();
}

uint64_t sub_1B3D71F38()
{
  return MEMORY[0x1F4127340]();
}

uint64_t sub_1B3D71F48()
{
  return MEMORY[0x1F4127348]();
}

uint64_t sub_1B3D71F58()
{
  return MEMORY[0x1F4188518]();
}

uint64_t sub_1B3D71F68()
{
  return MEMORY[0x1F4188568]();
}

uint64_t sub_1B3D71F78()
{
  return MEMORY[0x1F4188570]();
}

uint64_t sub_1B3D71F88()
{
  return MEMORY[0x1F4188578]();
}

uint64_t sub_1B3D71F98()
{
  return MEMORY[0x1F4188580]();
}

uint64_t sub_1B3D71FA8()
{
  return MEMORY[0x1F4188588]();
}

uint64_t sub_1B3D71FB8()
{
  return MEMORY[0x1F4188590]();
}

uint64_t sub_1B3D71FC8()
{
  return MEMORY[0x1F41885B0]();
}

uint64_t sub_1B3D71FD8()
{
  return MEMORY[0x1F41885D0]();
}

uint64_t sub_1B3D71FE8()
{
  return MEMORY[0x1F41885E0]();
}

uint64_t sub_1B3D71FF8()
{
  return MEMORY[0x1F4188650]();
}

uint64_t sub_1B3D72008()
{
  return MEMORY[0x1F4188658]();
}

uint64_t sub_1B3D72018()
{
  return MEMORY[0x1F4188660]();
}

uint64_t sub_1B3D72028()
{
  return MEMORY[0x1F4188668]();
}

uint64_t sub_1B3D72038()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1B3D72048()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1B3D72058()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1B3D72068()
{
  return MEMORY[0x1F4187A40]();
}

uint64_t sub_1B3D72078()
{
  return MEMORY[0x1F4187A50]();
}

uint64_t sub_1B3D72088()
{
  return MEMORY[0x1F4187A58]();
}

uint64_t sub_1B3D72098()
{
  return MEMORY[0x1F4187A60]();
}

uint64_t sub_1B3D720A8()
{
  return MEMORY[0x1F4187A68]();
}

uint64_t sub_1B3D720B8()
{
  return MEMORY[0x1F4187A98]();
}

uint64_t sub_1B3D720C8()
{
  return MEMORY[0x1F4187AA0]();
}

uint64_t sub_1B3D720D8()
{
  return MEMORY[0x1F4187AA8]();
}

uint64_t sub_1B3D720E8()
{
  return MEMORY[0x1F4187AB8]();
}

uint64_t sub_1B3D720F8()
{
  return MEMORY[0x1F4187AC0]();
}

uint64_t sub_1B3D72108()
{
  return MEMORY[0x1F4187AC8]();
}

uint64_t sub_1B3D72118()
{
  return MEMORY[0x1F4187AD8]();
}

uint64_t sub_1B3D72128()
{
  return MEMORY[0x1F4187AE0]();
}

uint64_t sub_1B3D72138()
{
  return MEMORY[0x1F4187AF0]();
}

uint64_t sub_1B3D72148()
{
  return MEMORY[0x1F4187B08]();
}

uint64_t sub_1B3D72158()
{
  return MEMORY[0x1F4187B20]();
}

uint64_t sub_1B3D72168()
{
  return MEMORY[0x1F4187B30]();
}

uint64_t sub_1B3D72178()
{
  return MEMORY[0x1F4187B70]();
}

uint64_t sub_1B3D72188()
{
  return MEMORY[0x1F4187BD0]();
}

uint64_t sub_1B3D72198()
{
  return MEMORY[0x1F4187BE0]();
}

uint64_t sub_1B3D721A8()
{
  return MEMORY[0x1F4186CC0]();
}

uint64_t sub_1B3D721B8()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1B3D721C8()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1B3D721D8()
{
  return MEMORY[0x1F4186D28]();
}

uint64_t sub_1B3D721E8()
{
  return MEMORY[0x1F4186D48]();
}

uint64_t sub_1B3D721F8()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1B3D72208()
{
  return MEMORY[0x1F4183270]();
}

uint64_t sub_1B3D72218()
{
  return MEMORY[0x1F40E6018]();
}

uint64_t sub_1B3D72228()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1B3D72238()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1B3D72248()
{
  return MEMORY[0x1F4183358]();
}

uint64_t sub_1B3D72258()
{
  return MEMORY[0x1F4183370]();
}

uint64_t sub_1B3D72268()
{
  return MEMORY[0x1F4183398]();
}

uint64_t sub_1B3D72278()
{
  return MEMORY[0x1F41833A0]();
}

uint64_t sub_1B3D72288()
{
  return MEMORY[0x1F4183408]();
}

uint64_t sub_1B3D72298()
{
  return MEMORY[0x1F4183420]();
}

uint64_t sub_1B3D722A8()
{
  return MEMORY[0x1F4183438]();
}

uint64_t sub_1B3D722B8()
{
  return MEMORY[0x1F4183440]();
}

uint64_t sub_1B3D722C8()
{
  return MEMORY[0x1F4183498]();
}

uint64_t sub_1B3D722D8()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1B3D722E8()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1B3D722F8()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1B3D72308()
{
  return MEMORY[0x1F4183510]();
}

uint64_t sub_1B3D72318()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1B3D72328()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1B3D72348()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1B3D72358()
{
  return MEMORY[0x1F40E60A8]();
}

uint64_t sub_1B3D72368()
{
  return MEMORY[0x1F40E6158]();
}

uint64_t sub_1B3D72378()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1B3D72388()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1B3D72398()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1B3D723A8()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1B3D723B8()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1B3D723C8()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t sub_1B3D723D8()
{
  return MEMORY[0x1F4183950]();
}

uint64_t sub_1B3D723E8()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1B3D723F8()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1B3D72408()
{
  return MEMORY[0x1F4183A60]();
}

uint64_t sub_1B3D72418()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1B3D72428()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1B3D72438()
{
  return MEMORY[0x1F4183C80]();
}

uint64_t sub_1B3D72448()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1B3D72458()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1B3D72468()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1B3D72478()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1B3D72488()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1B3D72498()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1B3D724A8()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1B3D724B8()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t sub_1B3D724C8()
{
  return MEMORY[0x1F40D4A70]();
}

uint64_t sub_1B3D724D8()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1B3D724E8()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1B3D724F8()
{
  return MEMORY[0x1F4187C08]();
}