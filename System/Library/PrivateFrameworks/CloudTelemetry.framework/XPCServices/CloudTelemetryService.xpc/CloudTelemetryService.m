void sub_100004184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000041B8(uint64_t a1, void *a2, void *a3)
{
  id v10 = a3;
  v5 = [a2 objectForKeyedSubscript:*(void *)(a1 + 32)];
  v6 = [v5 objectForKeyedSubscript:@"storeBagAsset"];
  v7 = [v5 objectForKeyedSubscript:@"signature"];
  uint64_t v8 = *(void *)(a1 + 40);
  if (v8)
  {
    v9 = [v6 assetContent];
    (*(void (**)(uint64_t, void *, void *, id))(v8 + 16))(v8, v9, v7, v10);
  }
}

Class sub_1000042B4(uint64_t a1)
{
  sub_10000430C();
  Class result = objc_getClass("CKOperationConfiguration");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_10008B3D4();
  }
  qword_1000B09A0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10000430C()
{
  v2[0] = 0;
  if (!qword_1000B09A8)
  {
    v2[1] = _NSConcreteStackBlock;
    v2[2] = (void *)3221225472;
    v2[3] = sub_100004404;
    v2[4] = &unk_1000A5BC0;
    v2[5] = v2;
    long long v3 = off_1000A5BA8;
    uint64_t v4 = 0;
    qword_1000B09A8 = _sl_dlopen();
  }
  uint64_t v0 = qword_1000B09A8;
  if (!qword_1000B09A8) {
    sub_10008B450(v2);
  }
  if (v2[0]) {
    free(v2[0]);
  }
  return v0;
}

uint64_t sub_100004404()
{
  uint64_t result = _sl_dlopen();
  qword_1000B09A8 = result;
  return result;
}

Class sub_100004478(uint64_t a1)
{
  sub_10000430C();
  Class result = objc_getClass("CKContainer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_10008B4D0();
  }
  qword_1000B09B0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_1000044D0(uint64_t a1)
{
  sub_10000430C();
  Class result = objc_getClass("CKRecordZoneID");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_10008B54C();
  }
  qword_1000B09B8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *sub_100004528(uint64_t a1)
{
  v2 = (void *)sub_10000430C();
  Class result = dlsym(v2, "CKCurrentUserDefaultName");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1000B09C0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_100004578(uint64_t a1)
{
  sub_10000430C();
  Class result = objc_getClass("CKRecordID");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_10008B5C8();
  }
  qword_1000B09C8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_1000045D0(uint64_t a1)
{
  sub_10000430C();
  Class result = objc_getClass("CKFetchRecordsOperation");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    sub_10008B644();
  }
  qword_1000B09D0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_100004628(uint64_t a1, const char *a2)
{
  uint64_t v4 = sub_10008B720();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008BD50();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100048DAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v13 = sub_10008BD30();
  os_log_type_t v14 = sub_10008C300();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v8;
    v16 = (uint8_t *)v15;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v25 = v22;
    v21 = a2;
    *(_DWORD *)v16 = 136446210;
    v20 = v16 + 4;
    sub_10000D12C(&qword_1000AE1B0, (void (*)(uint64_t))&type metadata accessor for CocoaError);
    uint64_t v17 = sub_10008C890();
    uint64_t v24 = sub_100009D00(v17, v18, &v25);
    sub_10008C440();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, v21, v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_100004944()
{
  uint64_t v0 = sub_10008BD50();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  long long v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100048DAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_10008BD30();
  os_log_type_t v6 = sub_10008C300();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)v7 = 136446210;
    v11[1] = v7 + 4;
    swift_getErrorValue();
    uint64_t v8 = sub_10008C890();
    v11[2] = sub_100009D00(v8, v9, &v12);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "unable to access transparency log (UNKNOWN): %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100004B84()
{
  return 1;
}

void sub_100004B90()
{
}

unint64_t sub_100004BBC()
{
  return 0xD000000000000018;
}

uint64_t sub_100004BF4()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6C70);
  sub_10000A358(v0, (uint64_t)qword_1000B6C70);
  return sub_10008BD40();
}

uint64_t sub_100004C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v142 = a1;
  uint64_t v2 = sub_10000A390(&qword_1000AF2A0);
  __chkstk_darwin(v2 - 8);
  v137 = (char *)&v131 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10008B910();
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  v141 = (char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_10008BBB0();
  uint64_t v139 = *(void *)(v138 - 8);
  uint64_t v5 = __chkstk_darwin(v138);
  v134 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v131 - v7;
  uint64_t v9 = sub_10000A390(&qword_1000AE350);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  v146 = (char *)&v131 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v155 = (char *)&v131 - v16;
  __chkstk_darwin(v15);
  v156 = (char *)&v131 - v17;
  uint64_t v18 = sub_10008BA60();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  v143 = (char *)&v131 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v160 = (char *)&v131 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v152 = (char *)&v131 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v153 = (char *)&v131 - v30;
  __chkstk_darwin(v29);
  v32 = (char *)&v131 - v31;
  id v145 = self;
  id v33 = [v145 defaultManager];
  unint64_t v34 = v1 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_rootLogsURL;
  swift_beginAccess();
  v35 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
  v164 = (uint8_t *)(v19 + 16);
  v163 = v35;
  v35(v32, v34, v18);
  sub_10008B9C0(v36);
  v38 = v37;
  uint64_t v157 = v19;
  v39 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v159 = v19 + 8;
  v158 = v39;
  v39(v32, v18);
  type metadata accessor for URLResourceKey();
  uint64_t v140 = v40;
  Class isa = sub_10008C160().super.isa;
  v166 = 0;
  id v42 = [v33 contentsOfDirectoryAtURL:v38 includingPropertiesForKeys:isa options:0 error:&v166];

  v43 = v166;
  if (!v42)
  {
    v60 = v43;
    sub_10008B960();

    return swift_willThrow();
  }
  v132 = v22;
  uint64_t v44 = sub_10008C170();

  v167 = _swiftEmptyArrayStorage;
  v45 = *(void (**)(void, void, void, void))(v44 + 16);
  uint64_t v154 = v18;
  v133 = v8;
  v161 = v12;
  v150 = v45;
  if (v45)
  {
    uint64_t v151 = v44;
    unint64_t v46 = 0;
    uint64_t v47 = v157;
    v148 = (char *)(v157 + 48);
    v48 = (uint64_t *)(v157 + 32);
    *(void *)&long long v149 = v157 + 56;
    unint64_t v131 = (v157 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v147 = 0x8000000100091B50;
    v49 = v160;
    while (v46 < *(void *)(v151 + 16))
    {
      unint64_t v51 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      uint64_t v52 = *(void *)(v47 + 72);
      uint64_t v53 = (uint64_t)v156;
      v163(v156, v151 + v51 + v52 * v46, v18);
      v162 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56);
      v162(v53, 0, 1, v18);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v53, 1, v18) == 1)
      {
        unint64_t v46 = (unint64_t)v162;
        id v62 = v145;
        uint64_t v12 = v161;
        v50 = v155;
        goto LABEL_19;
      }
      uint64_t v44 = *v48;
      v54 = v153;
      ((void (*)(void))*v48)();
      sub_10008B9A0();
      char v55 = sub_1000061CC();
      swift_bridgeObjectRelease();
      if (v55)
      {
        ((void (*)(char *, char *, uint64_t))v44)(v152, v54, v18);
        v56 = v167;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10000C628(0, v56[2] + 1, 1);
          v56 = v167;
        }
        unint64_t v58 = v56[2];
        unint64_t v57 = v56[3];
        if (v58 >= v57 >> 1)
        {
          sub_10000C628(v57 > 1, v58 + 1, 1);
          v56 = v167;
        }
        v56[2] = v58 + 1;
        v59 = (char *)v56 + v51 + v58 * v52;
        uint64_t v18 = v154;
        ((void (*)(char *, char *, uint64_t))v44)(v59, v152, v154);
        v167 = v56;
      }
      else
      {
        v158(v54, v18);
      }
      ++v46;
      uint64_t v12 = v161;
      uint64_t v47 = v157;
      v50 = v155;
      v49 = v160;
      if (v150 == (void (*)(void, void, void, void))v46)
      {
        unint64_t v46 = (unint64_t)v162;
        id v62 = v145;
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v47 = v157;
  unint64_t v46 = *(void *)(v157 + 56);
  v50 = v155;
  v49 = v160;
  id v62 = v145;
LABEL_18:
  uint64_t v53 = (uint64_t)v156;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46)(v156, 1, 1, v18);
LABEL_19:
  swift_bridgeObjectRelease();
  sub_10000CC24(v53, &qword_1000AE350);
  v166 = (char *)v167;
  v63 = v144;
  sub_100006328((unint64_t *)&v166);
  v150 = v63;
  uint64_t v147 = sub_1000063D4(1, (uint64_t)v166);
  v156 = v65;
  v67 = (char *)(v66 >> 1);
  v162 = (void (*)(uint64_t, void, uint64_t, uint64_t))v46;
  if (v64 != v66 >> 1)
  {
    uint64_t v44 = v64;
    v155 = (char *)(v47 + 56);
    v153 = (char *)(v47 + 48);
    uint64_t v151 = v47 + 32;
    swift_bridgeObjectRetain();
    *(void *)&long long v71 = 136446210;
    long long v149 = v71;
    v148 = (char *)&type metadata for Any + 8;
    uint64_t v18 = v154;
    v152 = v67;
    while (v44 < (uint64_t)v67)
    {
      v163(v50, (unint64_t)&v156[*(void *)(v47 + 72) * v44], v18);
      ((void (*)(char *, void, uint64_t, uint64_t))v46)(v50, 0, 1, v18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v18) == 1) {
        goto LABEL_22;
      }
      (*(void (**)(char *, char *, uint64_t))v151)(v49, v50, v18);
      uint64_t v73 = v18;
      id v74 = [v62 defaultManager];
      v75 = v49;
      sub_10008B9C0(v76);
      v78 = v77;
      v167 = 0;
      id v79 = v62;
      unsigned int v80 = [v74 removeItemAtURL:v77 error:&v167];

      if (v80)
      {
        v72 = v167;
        v158(v75, v73);
        uint64_t v18 = v73;
        v49 = v75;
      }
      else
      {
        v81 = v167;
        sub_10008B960();

        swift_willThrow();
        if (qword_1000B09E0 != -1) {
          swift_once();
        }
        v150 = 0;
        uint64_t v82 = sub_10008BD50();
        sub_10000A358(v82, (uint64_t)qword_1000B6C70);
        swift_errorRetain();
        swift_errorRetain();
        v83 = sub_10008BD30();
        os_log_type_t v84 = sub_10008C2F0();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = swift_slowAlloc();
          v167 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v85 = v149;
          swift_getErrorValue();
          uint64_t v86 = sub_10008C890();
          *(void *)(v85 + 4) = sub_100009D00(v86, v87, (uint64_t *)&v167);
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v83, v84, "failed to erase old log: %{public}s", (uint8_t *)v85, 0xCu);
          swift_arrayDestroy();
          uint64_t v47 = v157;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
        }
        swift_errorRelease();
        v49 = v160;
        uint64_t v18 = v154;
        v158(v160, v154);
      }
      unint64_t v46 = (unint64_t)v162;
      id v62 = v79;
      ++v44;
      v67 = v152;
      uint64_t v12 = v161;
      if (v152 == (char *)v44) {
        goto LABEL_21;
      }
    }
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = v154;
LABEL_21:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46)(v50, 1, 1, v18);
LABEL_22:
  swift_unknownObjectRelease();
  uint64_t v68 = *((void *)v166 + 2);
  uint64_t v44 = (uint64_t)v146;
  if (v68)
  {
    uint64_t v69 = v154;
    v163(v146, (unint64_t)&v166[((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * (v68 - 1)], v154);
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v70 = 1;
    uint64_t v69 = v154;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v46)(v44, v70, 1, v69);
  swift_bridgeObjectRelease();
  sub_10000ABE0(v44, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v12, 1, v69) == 1)
  {
    v88 = &qword_1000AE350;
LABEL_39:
    sub_10000CC24((uint64_t)v12, v88);
    return sub_10000AC48(v44, v142);
  }
  uint64_t v89 = v69;
  v90 = v143;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v143, v12, v69);
  sub_10000A390(&qword_1000AE3C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10008DC30;
  *(void *)(inited + 32) = NSURLCreationDateKey;
  v92 = NSURLCreationDateKey;
  sub_10000C9F4(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v93 = v141;
  v94 = v150;
  sub_10008B980();
  if (v94)
  {
    swift_bridgeObjectRelease();
    v158(v90, v89);
    return sub_10000CC24((uint64_t)v146, &qword_1000AE350);
  }
  v150 = 0;
  swift_bridgeObjectRelease();
  uint64_t v12 = v137;
  sub_10008B8C0();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v93, v136);
  uint64_t v95 = v139;
  uint64_t v96 = v138;
  int v97 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v139 + 48))(v12, 1, v138);
  uint64_t v44 = (uint64_t)v146;
  if (v97 == 1)
  {
    v158(v143, v154);
    v88 = &qword_1000AF2A0;
    goto LABEL_39;
  }
  v98 = v133;
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v133, v12, v96);
  v99 = v134;
  sub_10008BB70();
  sub_10008BB90();
  double v101 = v100;
  uint64_t v102 = v139 + 8;
  v103 = *(void (**)(char *, uint64_t))(v139 + 8);
  v103(v99, v96);
  uint64_t v104 = v96;
  uint64_t v18 = v154;
  if (v101 <= 604800.0)
  {
    v103(v98, v104);
    v158(v143, v18);
    return sub_10000AC48(v44, v142);
  }
  v161 = (char *)v103;
  uint64_t v139 = v102;
  if (qword_1000B09E0 != -1) {
LABEL_60:
  }
    swift_once();
  uint64_t v105 = sub_10008BD50();
  uint64_t v106 = sub_10000A358(v105, (uint64_t)qword_1000B6C70);
  v107 = v132;
  v108 = v143;
  v163(v132, (unint64_t)v143, v18);
  v164 = (uint8_t *)v106;
  v109 = sub_10008BD30();
  os_log_type_t v110 = sub_10008C2D0();
  if (os_log_type_enabled(v109, v110))
  {
    v111 = (uint8_t *)swift_slowAlloc();
    v167 = (void *)swift_slowAlloc();
    *(_DWORD *)v111 = 136446210;
    uint64_t v112 = sub_10008B9A0();
    uint64_t v165 = sub_100009D00(v112, v113, (uint64_t *)&v167);
    uint64_t v44 = (uint64_t)v146;
    unint64_t v46 = (unint64_t)v162;
    sub_10008C440();
    swift_bridgeObjectRelease();
    v158(v107, v154);
    _os_log_impl((void *)&_mh_execute_header, v109, v110, "aging out log file: %{public}s", v111, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    v108 = v143;
    swift_slowDealloc();
  }
  else
  {
    v158(v107, v18);
  }

  v114 = v133;
  id v115 = [v145 defaultManager];
  sub_10008B9C0(v116);
  v118 = v117;
  v167 = 0;
  unsigned int v119 = [v115 removeItemAtURL:v117 error:&v167];

  if (v119)
  {
    v120 = v167;
    ((void (*)(char *, uint64_t))v161)(v114, v138);
    uint64_t v121 = v154;
    v158(v108, v154);
    uint64_t v122 = v44;
  }
  else
  {
    v123 = v167;
    sub_10008B960();

    swift_willThrow();
    v150 = 0;
    swift_errorRetain();
    swift_errorRetain();
    v124 = sub_10008BD30();
    os_log_type_t v125 = sub_10008C2F0();
    if (os_log_type_enabled(v124, v125))
    {
      v126 = v108;
      v127 = (uint8_t *)swift_slowAlloc();
      v167 = (void *)swift_slowAlloc();
      *(_DWORD *)v127 = 136446210;
      v164 = v127 + 4;
      swift_getErrorValue();
      uint64_t v128 = sub_10008C890();
      uint64_t v165 = sub_100009D00(v128, v129, (uint64_t *)&v167);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v124, v125, "failed to erase old log: %{public}s", v127, 0xCu);
      swift_arrayDestroy();
      unint64_t v46 = (unint64_t)v162;
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      ((void (*)(char *, uint64_t))v161)(v133, v138);
      v130 = v126;
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      ((void (*)(char *, uint64_t))v161)(v133, v138);
      v130 = v108;
    }
    uint64_t v121 = v154;
    v158(v130, v154);
    uint64_t v122 = (uint64_t)v146;
  }
  sub_10000CC24(v122, &qword_1000AE350);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v46)(v142, 1, 1, v121);
}

uint64_t sub_1000061CC()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_10008C0C0();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_10008C0C0();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_10008C7D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      uint64_t v2 = sub_10008C0C0();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_10008C0C0();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (!v9) {
    return 1;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

Swift::Int sub_100006328(unint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_10008BA60() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_10000C888(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10000ACB0(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1000063D4(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10008BA60();
    return a2;
  }
  return result;
}

uint64_t sub_100006478(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v3 = swift_allocObject();
  v1[3] = v3;
  swift_defaultActor_initialize();
  *(unsigned char *)(v3 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_writeInternalEvents) = 2;
  *(void *)(v3 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_fileDeletionSource) = 0;
  id v4 = [self fileHandleWithNullDevice];
  *(void *)(v3 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_activeFile) = v4;
  uint64_t v5 = v3 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_rootLogsURL;
  uint64_t v6 = sub_10008BA60();
  v1[4] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v1[5] = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  return _swift_task_switch(sub_1000065B4, v3, 0);
}

uint64_t sub_1000065B4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[2];
  sub_100006694();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  id v4 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v5 = v0[3];
  return v4(v5);
}

void sub_100006694()
{
  uint64_t v1 = sub_10008B710();
  uint64_t v93 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  id v4 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v81 - v5;
  uint64_t v7 = sub_10008B720();
  uint64_t v94 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v89 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v81 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  v90 = (char *)&v81 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v92 = (char *)&v81 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v91 = (char *)&v81 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v81 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v81 - v22;
  sub_100007310();
  if (v0)
  {
    uint64_t v97 = v0;
    swift_errorRetain();
    sub_10000A390(&qword_1000B0870);
    if (swift_dynamicCast())
    {
      uint64_t v82 = v12;
      uint64_t v24 = (uint64_t)v21;
      uint64_t v25 = v94 + 16;
      uint64_t v85 = *(void (**)(uint64_t, char *, uint64_t))(v94 + 16);
      v85(v24, v23, v7);
      uint64_t v84 = sub_10000D12C(&qword_1000AE1C8, (void (*)(uint64_t))&type metadata accessor for CocoaError);
      uint64_t v87 = v24;
      sub_10008B950();
      sub_10008B700();
      uint64_t v26 = sub_10000D12C(&qword_1000AE1D0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
      sub_10008C140();
      uint64_t v83 = v26;
      sub_10008C140();
      uint64_t v88 = v7;
      uint64_t v27 = v95;
      uint64_t v28 = v96;
      uint64_t v86 = v23;
      uint64_t v29 = *(void (**)(char *, uint64_t))(v93 + 8);
      v29(v4, v1);
      v29(v6, v1);
      if (v28 == v27)
      {
        uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v85;
        uint64_t v31 = v88;
        swift_errorRelease();
        if (qword_1000B09E0 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_10008BD50();
        sub_10000A358(v32, (uint64_t)qword_1000B6C70);
        id v33 = v91;
        uint64_t v34 = v31;
        v30(v91, v87, v31);
        v35 = sub_10008BD30();
        os_log_type_t v36 = sub_10008C310();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = v33;
          v38 = (uint8_t *)swift_slowAlloc();
          v39 = (void *)swift_slowAlloc();
          *(_DWORD *)v38 = 138412290;
          uint64_t v34 = v31;
          sub_10008B6C0();
          uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v96 = v40;
          sub_10008C440();
          void *v39 = v40;
          v41 = *(void (**)(char *, uint64_t))(v94 + 8);
          v41(v37, v31);
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "transparency log - no write permission. %@", v38, 0xCu);
          sub_10000A390(&qword_1000AE1C0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v41 = *(void (**)(char *, uint64_t))(v94 + 8);
          v41(v33, v31);
        }

        uint64_t v57 = v87;
        sub_100004628(v87, "unable to access transparency log (PERM): %{public}s");
        sub_10008B6C0();
        swift_willThrow();
        v41((char *)v57, v34);
        v41(v86, v34);
        goto LABEL_32;
      }
      id v42 = *(char **)(v94 + 8);
      uint64_t v43 = v88;
      uint64_t v93 = v94 + 8;
      v91 = v42;
      ((void (*)(uint64_t, uint64_t))v42)(v87, v88);
      uint64_t v44 = v92;
      uint64_t v87 = v25;
      v85((uint64_t)v92, v86, v43);
      sub_10008B950();
      sub_10008B6F0();
      sub_10008C140();
      sub_10008C140();
      uint64_t v46 = v95;
      uint64_t v45 = v96;
      v29(v4, v1);
      v29(v6, v1);
      if (v45 == v46)
      {
        uint64_t v47 = v88;
        swift_errorRelease();
        if (qword_1000B09E0 != -1) {
          swift_once();
        }
        uint64_t v48 = sub_10008BD50();
        sub_10000A358(v48, (uint64_t)qword_1000B6C70);
        v49 = v90;
        uint64_t v50 = (uint64_t)v92;
        v85((uint64_t)v90, v92, v47);
        unint64_t v51 = sub_10008BD30();
        os_log_type_t v52 = sub_10008C310();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          v54 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 138412290;
          sub_10008B6C0();
          uint64_t v55 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v96 = v55;
          sub_10008C440();
          void *v54 = v55;
          v56 = (void (*)(uint64_t, uint64_t))v91;
          ((void (*)(char *, uint64_t))v91)(v49, v47);
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "transparency log - no space. %@", v53, 0xCu);
          sub_10000A390(&qword_1000AE1C0);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v50 = (uint64_t)v92;
          swift_slowDealloc();
        }
        else
        {
          v56 = (void (*)(uint64_t, uint64_t))v91;
          ((void (*)(char *, uint64_t))v91)(v49, v47);
        }

        sub_100004628(v50, "unable to write transparency log (OOS): %{public}s");
        sub_10008B6C0();
        swift_willThrow();
        v56(v50, v47);
        uint64_t v71 = (uint64_t)v86;
        uint64_t v72 = v47;
LABEL_31:
        v56(v71, v72);
LABEL_32:
        swift_errorRelease();
        return;
      }
      unint64_t v58 = v44;
      uint64_t v59 = v88;
      ((void (*)(char *, uint64_t))v91)(v58, v88);
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v82, v86, v59);
      sub_10008B950();
      sub_10008B6E0();
      sub_10008C140();
      sub_10008C140();
      uint64_t v61 = v95;
      uint64_t v60 = v96;
      v29(v4, v1);
      v29(v6, v1);
      if (v60 == v61)
      {
        uint64_t v62 = v88;
        swift_errorRelease();
        if (qword_1000B09E0 != -1) {
          swift_once();
        }
        uint64_t v63 = sub_10008BD50();
        sub_10000A358(v63, (uint64_t)qword_1000B6C70);
        uint64_t v64 = v89;
        v85((uint64_t)v89, v82, v62);
        v65 = sub_10008BD30();
        os_log_type_t v66 = sub_10008C310();
        if (os_log_type_enabled(v65, v66))
        {
          v67 = (uint8_t *)swift_slowAlloc();
          uint64_t v68 = (void *)swift_slowAlloc();
          *(_DWORD *)v67 = 138412290;
          sub_10008B6C0();
          uint64_t v69 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v96 = v69;
          sub_10008C440();
          *uint64_t v68 = v69;
          uint64_t v70 = v64;
          v56 = (void (*)(uint64_t, uint64_t))v91;
          ((void (*)(char *, uint64_t))v91)(v70, v62);
          _os_log_impl((void *)&_mh_execute_header, v65, v66, "transparency log - unknown write error. %@", v67, 0xCu);
          sub_10000A390(&qword_1000AE1C0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          id v79 = v64;
          v56 = (void (*)(uint64_t, uint64_t))v91;
          ((void (*)(char *, uint64_t))v91)(v79, v62);
        }

        uint64_t v80 = (uint64_t)v82;
        sub_100004628((uint64_t)v82, "unable to access storebag cache (WRITE-UNKNOWN): %{public}s");
        sub_10008B6C0();
        swift_willThrow();
        uint64_t v71 = v80;
        uint64_t v72 = v62;
        goto LABEL_31;
      }
      ((void (*)(char *, uint64_t))v91)(v82, v88);
    }
    swift_errorRelease();
    if (qword_1000B09E0 != -1) {
      swift_once();
    }
    uint64_t v73 = sub_10008BD50();
    sub_10000A358(v73, (uint64_t)qword_1000B6C70);
    swift_errorRetain();
    swift_errorRetain();
    id v74 = sub_10008BD30();
    os_log_type_t v75 = sub_10008C310();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc();
      v77 = (void *)swift_slowAlloc();
      *(_DWORD *)v76 = 138412290;
      swift_errorRetain();
      uint64_t v78 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v97 = v78;
      sub_10008C440();
      void *v77 = v78;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "transparency log - unexpected error. %@", v76, 0xCu);
      sub_10000A390(&qword_1000AE1C0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_100004944();
    swift_willThrow();
  }
}

void sub_100007310()
{
  uint64_t v113 = sub_10008BE30();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  os_log_type_t v110 = (char *)&v102 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10008BE70();
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  v108 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10008C3A0();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v105 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = (void *)sub_10008BBB0();
  uint64_t v117 = *(v118 - 1);
  __chkstk_darwin(v118);
  uint64_t v5 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A390(&qword_1000AE350);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10008BA60();
  uint64_t v10 = *(uint8_t **)(v9 - 8);
  uint64_t v120 = v9;
  uint64_t v121 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v104 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v114 = (char *)&v102 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v102 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v102 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  id v115 = (char *)&v102 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v103 = (char *)&v102 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v102 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v102 - v28;
  uint64_t v123 = v0;
  uint64_t v30 = (void **)(v0 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_activeFile);
  swift_beginAccess();
  v116 = v30;
  uint64_t v31 = *v30;
  uint64_t v32 = self;
  id v33 = v31;
  id v34 = [v32 fileHandleWithNullDevice];
  uint64_t v119 = sub_10000A8C8(0, &qword_1000AE358);
  LOBYTE(v30) = sub_10008C420();

  if ((v30 & 1) == 0)
  {
    if (qword_1000B09E0 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_10008BD50();
    sub_10000A358(v35, (uint64_t)qword_1000B6C70);
    os_log_type_t v36 = sub_10008BD30();
    os_log_type_t v37 = sub_10008C310();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "witnessed log vanish - refeshing", v38, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v39 = v123;
  uint64_t v40 = (uint64_t *)(v123 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_fileDeletionSource);
  swift_beginAccess();
  if (*v40)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10008C3D0();
    swift_unknownObjectRelease();
    *uint64_t v40 = 0;
    swift_unknownObjectRelease();
  }
  uint64_t v41 = v122;
  sub_100004C74((uint64_t)v8);
  if (!v41)
  {
    uint64_t v102 = v40;
    uint64_t v122 = 0;
    uint64_t v43 = v120;
    id v42 = v121;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v121 + 6))(v8, 1, v120) == 1)
    {
      sub_10000CC24((uint64_t)v8, &qword_1000AE350);
      id v44 = [objc_allocWithZone((Class)NSDateFormatter) init];
      uint64_t v45 = v39;
      uint64_t v46 = v42;
      NSString v47 = sub_10008BF80();
      [v44 setDateFormat:v47];

      sub_10008BB70();
      Class isa = sub_10008BB30().super.isa;
      (*(void (**)(char *, void *))(v117 + 8))(v5, v118);
      v118 = v44;
      id v49 = [v44 stringFromDate:isa];

      uint64_t v50 = sub_10008BFB0();
      os_log_type_t v52 = v51;

      uint64_t v53 = v45 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_rootLogsURL;
      swift_beginAccess();
      uint64_t v117 = *((void *)v46 + 2);
      ((void (*)(char *, uint64_t, uint64_t))v117)(v17, v53, v43);
      uint64_t aBlock = 0;
      unint64_t v125 = 0xE000000000000000;
      sub_10008C540(32);
      swift_bridgeObjectRelease();
      uint64_t aBlock = 0xD00000000000001ALL;
      unint64_t v125 = 0x8000000100091B50;
      v132._countAndFlagsBits = v50;
      v132._object = v52;
      sub_10008C090(v132);
      swift_bridgeObjectRelease();
      v133._countAndFlagsBits = 1954051118;
      v133._object = (void *)0xE400000000000000;
      sub_10008C090(v133);
      sub_10008B9E0();
      swift_bridgeObjectRelease();
      v54 = (void (*)(char *, uint64_t))*((void *)v46 + 1);
      v54(v17, v43);
      uint64_t v55 = v122;
      sub_10008BAF0();
      uint64_t v56 = v43;
      if (v55)
      {
        v54(v20, v43);

        return;
      }

      uint64_t v61 = v115;
      (*((void (**)(char *, char *, uint64_t))v46 + 4))(v115, v20, v43);
      uint64_t v62 = (uint64_t)v114;
      uint64_t v63 = (void (*)(char *, char *, uint64_t))v117;
      ((void (*)(char *, char *, uint64_t))v117)(v114, v61, v56);
      id v64 = sub_100008324(v62);
      uint64_t v122 = 0;
      v65 = v116;
      uint64_t v68 = *v116;
      NSURL *v116 = v64;

      if (qword_1000B09E0 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_10008BD50();
      sub_10000A358(v69, (uint64_t)qword_1000B6C70);
      uint64_t v70 = v104;
      v63(v104, v61, v56);
      uint64_t v71 = v61;
      uint64_t v72 = sub_10008BD30();
      os_log_type_t v73 = sub_10008C2D0();
      if (os_log_type_enabled(v72, v73))
      {
        id v74 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)id v74 = 136446210;
        uint64_t v121 = v74 + 4;
        uint64_t v75 = sub_10008BA30();
        uint64_t v131 = sub_100009D00(v75, v76, &aBlock);
        sub_10008C440();
        swift_bridgeObjectRelease();
        uint64_t v77 = v120;
        v54(v70, v120);
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "created new log file at %{public}s", v74, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        v65 = v116;
        swift_slowDealloc();

        uint64_t v78 = v115;
        uint64_t v79 = v77;
      }
      else
      {

        v54(v70, v56);
        uint64_t v78 = v71;
        uint64_t v79 = v56;
      }
      v54(v78, v79);
      uint64_t v85 = v107;
    }
    else
    {
      (*((void (**)(char *, char *, uint64_t))v42 + 4))(v29, v8, v43);
      uint64_t v57 = (void (*)(char *, char *, uint64_t))*((void *)v42 + 2);
      v57(v27, v29, v43);
      uint64_t v58 = v122;
      id v59 = sub_100008324((uint64_t)v27);
      uint64_t v60 = v43;
      if (v58)
      {
        (*((void (**)(char *, uint64_t))v42 + 1))(v29, v43);
        return;
      }
      v65 = v116;
      os_log_type_t v66 = *v116;
      NSURL *v116 = v59;

      id v67 = *v65;
      sub_10008C2C0();
      uint64_t v122 = 0;

      if (qword_1000B09E0 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_10008BD50();
      sub_10000A358(v80, (uint64_t)qword_1000B6C70);
      uint64_t v81 = v103;
      v57(v103, v29, v60);
      uint64_t v82 = sub_10008BD30();
      os_log_type_t v83 = sub_10008C2D0();
      BOOL v84 = os_log_type_enabled(v82, v83);
      uint64_t v85 = v107;
      if (v84)
      {
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v119 = swift_slowAlloc();
        uint64_t aBlock = v119;
        *(_DWORD *)uint64_t v86 = 136446210;
        uint64_t v87 = sub_10008BA30();
        uint64_t v130 = sub_100009D00(v87, v88, &aBlock);
        sub_10008C440();
        swift_bridgeObjectRelease();
        uint64_t v89 = (void (*)(char *, uint64_t))*((void *)v121 + 1);
        v90 = v81;
        uint64_t v91 = v120;
        v89(v90, v120);
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "opened log file at %{public}s", v86, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        v65 = v116;
        swift_slowDealloc();

        v89(v29, v91);
      }
      else
      {

        v92 = (void (*)(char *, uint64_t))*((void *)v121 + 1);
        v92(v81, v60);
        v92(v29, v60);
      }
    }
    sub_10000A8C8(0, &qword_1000AE360);
    [*v65 fileDescriptor];
    sub_10000A390(&qword_1000AE368);
    uint64_t v93 = v106;
    uint64_t v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = xmmword_10008DC40;
    sub_10008C390();
    sub_10008C380();
    uint64_t aBlock = v94;
    sub_10000D12C(&qword_1000AE370, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.FileSystemEvent);
    sub_10000A390(&qword_1000AE378);
    sub_10000A95C(&qword_1000AE380, &qword_1000AE378);
    uint64_t v95 = v105;
    sub_10008C480();
    uint64_t v96 = sub_10008C3B0();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v85);
    uint64_t v97 = v102;
    *uint64_t v102 = v96;
    swift_unknownObjectRelease();
    if (*v97)
    {
      swift_getObjectType();
      uint64_t v98 = swift_allocObject();
      swift_weakInit();
      uint64_t v128 = sub_10000A93C;
      uint64_t v129 = v98;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v125 = 1107296256;
      v126 = sub_1000087B8;
      v127 = &unk_1000A5D38;
      v99 = _Block_copy(&aBlock);
      swift_retain();
      swift_unknownObjectRetain();
      double v100 = v108;
      sub_10008BE60();
      double v101 = v110;
      sub_1000087FC();
      sub_10008C3C0();
      _Block_release(v99);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v112 + 8))(v101, v113);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v100, v111);
      swift_release();
      swift_release();
      if (*v97)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10008C3E0();
        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_100008324(uint64_t a1)
{
  sub_10008B9C0(__stack_chk_guard);
  uint64_t v3 = v2;
  id v12 = 0;
  id v4 = [(id)swift_getObjCClassFromMetadata() fileHandleForWritingToURL:v2 error:&v12];

  id v5 = v12;
  if (v4)
  {
    uint64_t v6 = sub_10008BA60();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    id v8 = v5;
    v7(a1, v6);
  }
  else
  {
    id v9 = v12;
    sub_10008B960();

    swift_willThrow();
    uint64_t v10 = sub_10008BA60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  }
  return v4;
}

uint64_t sub_10000847C()
{
  uint64_t v0 = sub_10000A390(&qword_1000AE3A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_10008C220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = (void *)swift_allocObject();
    uint64_t v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_100008630((uint64_t)v2, (uint64_t)&unk_1000AE3B0, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_100008594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1000085B4, a4, 0);
}

uint64_t sub_1000085B4()
{
  sub_100006694();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100008630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10008C220();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_10008C210();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10000CC24(a1, &qword_1000AE3A0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10008C1D0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1000087B8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1000087FC()
{
  return sub_10008C480();
}

uint64_t sub_1000088C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v32[2] = a3;
  v32[3] = a4;
  v33._countAndFlagsBits = a1;
  v33._object = a2;
  uint64_t v4 = sub_10008C000();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008BBB0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_10008C540(27);
  swift_bridgeObjectRelease();
  uint64_t v35 = 40;
  unint64_t v36 = 0xE100000000000000;
  sub_10008BB70();
  uint64_t v12 = sub_10008BB10();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v39._countAndFlagsBits = v12;
  v39._object = v14;
  sub_10008C090(v39);
  swift_bridgeObjectRelease();
  v40._countAndFlagsBits = 5972009;
  v40._object = (void *)0xE300000000000000;
  sub_10008C090(v40);
  sub_10008C090(v33);
  v41._object = (void *)0x8000000100091A60;
  v41._countAndFlagsBits = 0xD000000000000013;
  sub_10008C090(v41);
  sub_10008BFF0();
  uint64_t v15 = sub_10008BFC0();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  if (v17 >> 60 == 15)
  {
    sub_10000A3D4();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    os_log_type_t v37 = (void *)v15;
    v38 = (void *)v17;
    sub_10008BB00();
    sub_10008BFF0();
    uint64_t v20 = sub_10008BFC0();
    unint64_t v22 = v21;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v7, v4);
    if (v22 >> 60 == 15)
    {
      __break(1u);
    }
    else
    {
      sub_10008BB00();
      sub_10000A428(v20, v22);
      uint64_t v23 = (void **)(v32[0] + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_activeFile);
      swift_beginAccess();
      uint64_t v24 = *v23;
      uint64_t v26 = (uint64_t)v37;
      unint64_t v25 = (unint64_t)v38;
      v34[0] = v37;
      v34[1] = v38;
      id v27 = v24;
      sub_10000A494(v26, v25);
      sub_10000A4EC();
      uint64_t v28 = v32[1];
      sub_10008C2B0();
      if (v28)
      {

        sub_10000A43C(v26, v25);
      }
      else
      {
        sub_10000A43C(v26, v25);

        uint64_t v29 = *v23;
        v34[0] = 0;
        if ([v29 synchronizeAndReturnError:v34])
        {
          id v30 = v34[0];
        }
        else
        {
          id v31 = v34[0];
          sub_10008B960();

          swift_willThrow();
        }
      }
      return sub_10000A43C(v26, v25);
    }
  }
  return result;
}

unsigned char *sub_100008CA8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  v49._countAndFlagsBits = a1;
  v49._object = a2;
  uint64_t v7 = sub_10008B7A0();
  uint64_t v47 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_10008C000();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v50 = v8;
  uint64_t v51 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10008BBB0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = sub_100048E38();
  uint64_t result = (unsigned char *)swift_beginAccess();
  if (*v16 == 1)
  {
    uint64_t result = sub_100049014();
    if (*result == 1)
    {
      uint64_t v45 = v5;
      uint64_t v46 = v6;
      uint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      sub_10008C540(25);
      swift_bridgeObjectRelease();
      uint64_t v53 = 40;
      unint64_t v54 = 0xE100000000000000;
      sub_10008BB70();
      uint64_t v18 = sub_10008BB10();
      uint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v57._countAndFlagsBits = v18;
      v57._object = v20;
      sub_10008C090(v57);
      swift_bridgeObjectRelease();
      v58._countAndFlagsBits = 5972009;
      v58._object = (void *)0xE300000000000000;
      sub_10008C090(v58);
      sub_10008C090(v49);
      v59._object = (void *)0x8000000100091A80;
      v59._countAndFlagsBits = 0xD000000000000011;
      sub_10008C090(v59);
      sub_10008BFF0();
      unint64_t v21 = (void *)sub_10008BFC0();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v24 = v51 + 8;
      unint64_t v25 = *(void (**)(char *, uint64_t))(v51 + 8);
      v25(v11, v50);
      if (v23 >> 60 == 15)
      {
        sub_10000A3D4();
        swift_allocError();
        return (unsigned char *)swift_willThrow();
      }
      else
      {
        uint64_t v51 = v24;
        v49._object = v21;
        uint64_t v55 = v21;
        uint64_t v56 = (void *)v23;
        sub_10008B7E0();
        swift_allocObject();
        uint64_t v26 = (void *)sub_10008B7D0();
        sub_10000A390(&qword_1000AE1E8);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_10008DC30;
        sub_10008B790();
        uint64_t v53 = v27;
        sub_10000D12C(&qword_1000AE1F0, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
        sub_10000A390(&qword_1000AE1F8);
        sub_10000A95C((unint64_t *)&qword_1000AE200, &qword_1000AE1F8);
        sub_10008C480();
        sub_10008B7B0();
        uint64_t v53 = v48;
        sub_10000A588();
        swift_bridgeObjectRetain();
        uint64_t v28 = v46;
        uint64_t v29 = sub_10008B7C0();
        if (v28)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return (unsigned char *)sub_10000A428((uint64_t)v49._object, v23);
        }
        else
        {
          uint64_t v31 = v29;
          unint64_t v32 = v30;
          v49._object = v26;
          swift_bridgeObjectRelease();
          sub_10008BB00();
          sub_10008BFF0();
          uint64_t v33 = sub_10008BFC0();
          unint64_t v35 = v34;
          uint64_t result = (unsigned char *)((uint64_t (*)(char *, uint64_t))v25)(v11, v50);
          if (v35 >> 60 == 15)
          {
            __break(1u);
          }
          else
          {
            sub_10008BB00();
            sub_10000A428(v33, v35);
            unint64_t v36 = (void **)(v45 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_activeFile);
            swift_beginAccess();
            os_log_type_t v37 = *v36;
            uint64_t v39 = (uint64_t)v55;
            unint64_t v38 = (unint64_t)v56;
            v52[0] = v55;
            v52[1] = v56;
            id v40 = v37;
            sub_10000A494(v39, v38);
            sub_10000A4EC();
            sub_10008C2B0();
            sub_10000A43C(v39, v38);

            Swift::String v41 = *v36;
            v52[0] = 0;
            if ([v41 synchronizeAndReturnError:v52])
            {
              id v42 = v52[0];
              sub_10000A43C(v39, v38);
              sub_10000A43C(v31, v32);
              return (unsigned char *)swift_release();
            }
            else
            {
              id v43 = v52[0];
              sub_10008B960();

              swift_willThrow();
              sub_10000A43C(v31, v32);
              swift_release();
              return (unsigned char *)sub_10000A43C(v39, v38);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100009308()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21CloudTelemetryService15TransparencyLog_rootLogsURL;
  uint64_t v2 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t DiskCache.unownedExecutor.getter()
{
  return v0;
}

Swift::Int sub_1000093B0()
{
  return sub_10008C920();
}

Swift::Int sub_1000093F4()
{
  return sub_10008C920();
}

uint64_t sub_100009438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result = sub_10000D098(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_100009468()
{
  return 0;
}

void sub_100009474(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100009480(uint64_t a1)
{
  unint64_t v2 = sub_10000A7C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000094BC(uint64_t a1)
{
  unint64_t v2 = sub_10000A7C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000094F8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390((uint64_t *)&unk_1000AE330);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A784(a1, a1[3]);
  sub_10000A7C8();
  sub_10008C980();
  v9[1] = a2;
  sub_10000A390((uint64_t *)&unk_1000AF050);
  sub_10000A81C();
  sub_10008C780();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100009648(void *a1)
{
  return sub_1000094F8(a1, *v1);
}

uint64_t sub_100009664(uint64_t a1, uint64_t a2)
{
  return sub_1000097D0(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10000967C(uint64_t a1, id *a2)
{
  uint64_t result = sub_10008BF90();
  *a2 = 0;
  return result;
}

uint64_t sub_1000096F4(uint64_t a1, id *a2)
{
  char v3 = sub_10008BFA0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100009774@<X0>(void *a1@<X8>)
{
  sub_10008BFB0();
  NSString v2 = sub_10008BF80();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000097B8(uint64_t a1, uint64_t a2)
{
  return sub_1000097D0(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000097D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_10008BFB0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100009814()
{
  sub_10008BFB0();
  sub_10008C050();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100009868()
{
  sub_10008BFB0();
  sub_10008C8F0();
  sub_10008C050();
  Swift::Int v0 = sub_10008C920();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000098DC()
{
  uint64_t v0 = sub_10008BFB0();
  uint64_t v2 = v1;
  if (v0 == sub_10008BFB0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_10008C7D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100009968@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_10008BF80();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000099B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008BFB0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000099DC(uint64_t a1)
{
  uint64_t v2 = sub_10000D12C(&qword_1000AE408, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_10000D12C((unint64_t *)&unk_1000AE410, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100009A98(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000A390(&qword_1000AE3C8);
  uint64_t v10 = *(void *)(sub_10008BA60() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_10008C630();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10008BA60() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10000C89C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_100009D00(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100009DD4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10000CD38((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10000CD38((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000CCE8((uint64_t)v12);
  return v7;
}

uint64_t sub_100009DD4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_10008C450();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100009F90(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_10008C5B0();
  if (!v8)
  {
    sub_10008C630();
    __break(1u);
LABEL_17:
    uint64_t result = sub_10008C690();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100009F90(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10000A028(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10000A208(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10000A208(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10000A028(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10000A1A0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_10008C550();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_10008C630();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_10008C0D0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_10008C690();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_10008C630();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10000A1A0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000A390(&qword_1000AE3E0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10000A208(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A390(&qword_1000AE3E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_10000A358(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10000A390(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10000A3D4()
{
  unint64_t result = qword_1000AE1D8;
  if (!qword_1000AE1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE1D8);
  }
  return result;
}

uint64_t sub_10000A428(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000A43C(a1, a2);
  }
  return a1;
}

uint64_t sub_10000A43C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_10000A494(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_10000A4EC()
{
  unint64_t result = qword_1000AE1E0;
  if (!qword_1000AE1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE1E0);
  }
  return result;
}

uint64_t sub_10000A540(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10000A588()
{
  unint64_t result = qword_1000B09E8[0];
  if (!qword_1000B09E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B09E8);
  }
  return result;
}

unint64_t sub_10000A5E0()
{
  unint64_t result = qword_1000AE208;
  if (!qword_1000AE208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE208);
  }
  return result;
}

uint64_t sub_10000A638()
{
  return type metadata accessor for TransparencyLog();
}

uint64_t type metadata accessor for TransparencyLog()
{
  uint64_t result = qword_1000B0CF0;
  if (!qword_1000B0CF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000A68C()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t variable initialization expression of Daemon.mode()
{
  return 0;
}

ValueMetadata *type metadata accessor for TransparencyLog.WriteError()
{
  return &type metadata for TransparencyLog.WriteError;
}

ValueMetadata *type metadata accessor for TransparencyLog.JustEvents()
{
  return &type metadata for TransparencyLog.JustEvents;
}

void *sub_10000A784(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10000A7C8()
{
  unint64_t result = qword_1000B0D80[0];
  if (!qword_1000B0D80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B0D80);
  }
  return result;
}

unint64_t sub_10000A81C()
{
  unint64_t result = qword_1000AE340;
  if (!qword_1000AE340)
  {
    sub_10000A540((uint64_t *)&unk_1000AF050);
    sub_10000D12C((unint64_t *)&qword_1000AE348, (void (*)(uint64_t))type metadata accessor for ServiceEventValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE340);
  }
  return result;
}

uint64_t sub_10000A8C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10000A904()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10000A93C()
{
  return sub_10000847C();
}

uint64_t sub_10000A944(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10000A954()
{
  return swift_release();
}

uint64_t sub_10000A95C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A540(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000A9AC()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10000A9EC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_10000AA94;
  v3[2] = v2;
  return _swift_task_switch(sub_1000085B4, v2, 0);
}

uint64_t sub_10000AA94()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void type metadata accessor for URLResourceKey()
{
  if (!qword_1000AE3E8)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1000AE3E8);
    }
  }
}

uint64_t sub_10000ABE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AE350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000AC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AE350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Int sub_10000ACB0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10008BA60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v153 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v165 = (char *)&v145 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v168 = (char *)&v145 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v167 = (char *)&v145 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v148 = (char *)&v145 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v155 = (char *)&v145 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v151 = (char *)&v145 - v19;
  __chkstk_darwin(v18);
  v150 = (char *)&v145 - v20;
  v170 = a1;
  Swift::Int v21 = a1[1];
  Swift::Int result = sub_10008C790(v21);
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_151;
    }
    if (v21) {
      return sub_10000B9C4(0, v21, 1, v170);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_159;
  }
  Swift::Int v146 = result;
  if (v21 < 2)
  {
    uint64_t v26 = v5;
    uint64_t v28 = (char *)_swiftEmptyArrayStorage;
    unint64_t v156 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    id v145 = _swiftEmptyArrayStorage;
    if (v21 != 1)
    {
      unint64_t v30 = _swiftEmptyArrayStorage[2];
LABEL_117:
      if (v30 >= 2)
      {
        uint64_t v136 = *v170;
        do
        {
          unint64_t v137 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_146;
          }
          if (!v136) {
            goto LABEL_158;
          }
          uint64_t v138 = v28;
          uint64_t v139 = v28 + 32;
          uint64_t v140 = *(void *)&v28[16 * v137 + 32];
          uint64_t v141 = *(void *)&v28[16 * v30 + 24];
          uint64_t v142 = v26;
          sub_10000BD10(v136 + *(void *)(v26 + 72) * v140, v136 + *(void *)(v26 + 72) * *(void *)&v139[16 * v30 - 16], v136 + *(void *)(v26 + 72) * v141, v156);
          if (v2) {
            break;
          }
          if (v141 < v140) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v138 = sub_10000C614((uint64_t)v138);
          }
          if (v137 >= *((void *)v138 + 2)) {
            goto LABEL_148;
          }
          v143 = &v138[16 * v137 + 32];
          *(void *)v143 = v140;
          *((void *)v143 + 1) = v141;
          unint64_t v144 = *((void *)v138 + 2);
          if (v30 > v144) {
            goto LABEL_149;
          }
          uint64_t v28 = v138;
          memmove(&v138[16 * v30 + 16], &v138[16 * v30 + 32], 16 * (v144 - v30));
          *((void *)v138 + 2) = v144 - 1;
          unint64_t v30 = v144 - 1;
          uint64_t v26 = v142;
        }
        while (v144 > 2);
      }
LABEL_128:
      swift_bridgeObjectRelease();
      v145[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_10008C1A0();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = v5;
    unint64_t v27 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    id v145 = (void *)v25;
    unint64_t v156 = v25 + v27;
  }
  Swift::Int v29 = 0;
  uint64_t v161 = v26 + 16;
  v162 = (void (**)(char *, uint64_t))(v26 + 8);
  v166 = (char **)(v26 + 32);
  uint64_t v28 = (char *)_swiftEmptyArrayStorage;
  uint64_t v157 = v26;
  uint64_t v164 = v4;
  while (1)
  {
    Swift::Int v31 = v29;
    Swift::Int v32 = v29 + 1;
    Swift::Int v154 = v29;
    if (v29 + 1 >= v21)
    {
      Swift::Int v40 = v29 + 1;
      goto LABEL_69;
    }
    Swift::Int v163 = v21;
    long long v149 = v28;
    uint64_t v33 = *v170;
    uint64_t v34 = *(void *)(v26 + 72);
    unint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35(v150, *v170 + v34 * v32, v4);
    v158 = (char *)v33;
    uint64_t v169 = v34;
    v35(v151, v33 + v34 * v31, v4);
    uint64_t v36 = sub_10008B9A0();
    uint64_t v38 = v37;
    if (v36 != sub_10008B9A0()) {
      goto LABEL_20;
    }
    if (v38 == v39) {
      LODWORD(v160) = 0;
    }
    else {
LABEL_20:
    }
      LODWORD(v160) = sub_10008C7D0();
    Swift::String v41 = v148;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v42 = *v162;
    uint64_t v43 = v164;
    (*v162)(v151, v164);
    v42(v150, v43);
    Swift::Int v40 = v154 + 2;
    if (v154 + 2 >= v163)
    {
      uint64_t v55 = v157;
    }
    else
    {
      uint64_t v147 = v2;
      uint64_t v159 = v169 * v32;
      uint64_t v44 = v158;
      uint64_t v45 = v169 * v40;
      while (1)
      {
        Swift::Int v46 = v40;
        uint64_t v47 = v164;
        v35(v155, (uint64_t)&v44[v45], v164);
        v35(v41, (uint64_t)&v44[v159], v47);
        uint64_t v48 = sub_10008B9A0();
        uint64_t v50 = v49;
        if (v48 == sub_10008B9A0() && v50 == v51) {
          int v52 = 0;
        }
        else {
          int v52 = sub_10008C7D0();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = v164;
        v42(v41, v164);
        v42(v155, v53);
        if ((v160 ^ v52)) {
          break;
        }
        Swift::Int v40 = v46 + 1;
        v44 += v169;
        if (v163 == v46 + 1)
        {
          Swift::Int v54 = v163;
          Swift::Int v40 = v163;
          uint64_t v2 = v147;
          uint64_t v55 = v157;
          goto LABEL_33;
        }
      }
      uint64_t v2 = v147;
      uint64_t v55 = v157;
      Swift::Int v40 = v46;
    }
    Swift::Int v54 = v163;
LABEL_33:
    uint64_t v28 = v149;
    Swift::Int v31 = v154;
    uint64_t v56 = v158;
    if ((v160 & 1) == 0) {
      break;
    }
    if (v40 < v154) {
      goto LABEL_152;
    }
    if (v154 >= v40) {
      break;
    }
    uint64_t v147 = v2;
    uint64_t v57 = 0;
    uint64_t v58 = v169 * (v40 - 1);
    uint64_t v59 = v40 * v169;
    Swift::Int v60 = v154;
    uint64_t v61 = v154 * v169;
    do
    {
      if (v60 != v40 + v57 - 1)
      {
        if (!v56) {
          goto LABEL_157;
        }
        uint64_t v63 = &v56[v58];
        v160 = *v166;
        ((void (*)(char *, char *, uint64_t))v160)(v153, &v56[v61], v164);
        if (v61 < v58 || &v56[v61] >= &v56[v59])
        {
          uint64_t v62 = v164;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v62 = v164;
          if (v61 != v58) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        ((void (*)(char *, char *, uint64_t))v160)(v63, v153, v62);
        uint64_t v55 = v157;
        uint64_t v56 = v158;
      }
      ++v60;
      --v57;
      v58 -= v169;
      v59 -= v169;
      v61 += v169;
    }
    while (v60 < v40 + v57);
    uint64_t v2 = v147;
    Swift::Int v54 = v163;
    uint64_t v64 = v164;
    uint64_t v28 = v149;
    Swift::Int v31 = v154;
    if (v40 < v163) {
      goto LABEL_49;
    }
LABEL_69:
    if (v40 < v31) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v28 = sub_10000C3D8(0, *((void *)v28 + 2) + 1, 1, v28);
    }
    unint64_t v85 = *((void *)v28 + 2);
    unint64_t v84 = *((void *)v28 + 3);
    unint64_t v30 = v85 + 1;
    uint64_t v26 = v157;
    Swift::Int v163 = v40;
    if (v85 >= v84 >> 1)
    {
      uint64_t v135 = sub_10000C3D8((char *)(v84 > 1), v85 + 1, 1, v28);
      uint64_t v26 = v157;
      uint64_t v28 = v135;
    }
    *((void *)v28 + 2) = v30;
    uint64_t v86 = v28 + 32;
    uint64_t v87 = &v28[16 * v85 + 32];
    Swift::Int v88 = v163;
    *(void *)uint64_t v87 = v31;
    *((void *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        unint64_t v89 = v30 - 1;
        if (v30 >= 4)
        {
          uint64_t v94 = &v86[16 * v30];
          uint64_t v95 = *((void *)v94 - 8);
          uint64_t v96 = *((void *)v94 - 7);
          BOOL v100 = __OFSUB__(v96, v95);
          uint64_t v97 = v96 - v95;
          if (v100) {
            goto LABEL_134;
          }
          uint64_t v99 = *((void *)v94 - 6);
          uint64_t v98 = *((void *)v94 - 5);
          BOOL v100 = __OFSUB__(v98, v99);
          uint64_t v92 = v98 - v99;
          char v93 = v100;
          if (v100) {
            goto LABEL_135;
          }
          unint64_t v101 = v30 - 2;
          uint64_t v102 = &v86[16 * v30 - 32];
          uint64_t v104 = *(void *)v102;
          uint64_t v103 = *((void *)v102 + 1);
          BOOL v100 = __OFSUB__(v103, v104);
          uint64_t v105 = v103 - v104;
          if (v100) {
            goto LABEL_137;
          }
          BOOL v100 = __OFADD__(v92, v105);
          uint64_t v106 = v92 + v105;
          if (v100) {
            goto LABEL_140;
          }
          if (v106 >= v97)
          {
            v124 = &v86[16 * v89];
            uint64_t v126 = *(void *)v124;
            uint64_t v125 = *((void *)v124 + 1);
            BOOL v100 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            if (v100) {
              goto LABEL_144;
            }
            BOOL v117 = v92 < v127;
            goto LABEL_106;
          }
        }
        else
        {
          if (v30 != 3)
          {
            uint64_t v118 = *((void *)v28 + 4);
            uint64_t v119 = *((void *)v28 + 5);
            BOOL v100 = __OFSUB__(v119, v118);
            uint64_t v111 = v119 - v118;
            char v112 = v100;
            goto LABEL_100;
          }
          uint64_t v91 = *((void *)v28 + 4);
          uint64_t v90 = *((void *)v28 + 5);
          BOOL v100 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          char v93 = v100;
        }
        if (v93) {
          goto LABEL_136;
        }
        unint64_t v101 = v30 - 2;
        uint64_t v107 = &v86[16 * v30 - 32];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v110 = __OFSUB__(v108, v109);
        uint64_t v111 = v108 - v109;
        char v112 = v110;
        if (v110) {
          goto LABEL_139;
        }
        uint64_t v113 = &v86[16 * v89];
        uint64_t v115 = *(void *)v113;
        uint64_t v114 = *((void *)v113 + 1);
        BOOL v100 = __OFSUB__(v114, v115);
        uint64_t v116 = v114 - v115;
        if (v100) {
          goto LABEL_142;
        }
        if (__OFADD__(v111, v116)) {
          goto LABEL_143;
        }
        if (v111 + v116 >= v92)
        {
          BOOL v117 = v92 < v116;
LABEL_106:
          if (v117) {
            unint64_t v89 = v101;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v112) {
          goto LABEL_138;
        }
        uint64_t v120 = &v86[16 * v89];
        uint64_t v122 = *(void *)v120;
        uint64_t v121 = *((void *)v120 + 1);
        BOOL v100 = __OFSUB__(v121, v122);
        uint64_t v123 = v121 - v122;
        if (v100) {
          goto LABEL_141;
        }
        if (v123 < v111) {
          goto LABEL_14;
        }
LABEL_108:
        unint64_t v128 = v89 - 1;
        if (v89 - 1 >= v30)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!*v170) {
          goto LABEL_156;
        }
        uint64_t v129 = v28;
        uint64_t v130 = &v86[16 * v128];
        uint64_t v131 = *(void *)v130;
        Swift::String v132 = &v86[16 * v89];
        uint64_t v133 = *((void *)v132 + 1);
        sub_10000BD10(*v170 + *(void *)(v26 + 72) * *(void *)v130, *v170 + *(void *)(v26 + 72) * *(void *)v132, *v170 + *(void *)(v26 + 72) * v133, v156);
        if (v2) {
          goto LABEL_128;
        }
        if (v133 < v131) {
          goto LABEL_131;
        }
        if (v89 > *((void *)v129 + 2)) {
          goto LABEL_132;
        }
        *(void *)uint64_t v130 = v131;
        *(void *)&v86[16 * v128 + 8] = v133;
        unint64_t v134 = *((void *)v129 + 2);
        if (v89 >= v134) {
          goto LABEL_133;
        }
        uint64_t v28 = v129;
        unint64_t v30 = v134 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v134 - 1 - v89));
        *((void *)v129 + 2) = v134 - 1;
        uint64_t v26 = v157;
        if (v134 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v30 = 1;
LABEL_14:
    Swift::Int v21 = v170[1];
    Swift::Int v29 = v163;
    uint64_t v4 = v164;
    if (v163 >= v21) {
      goto LABEL_117;
    }
  }
  uint64_t v64 = v164;
  if (v40 >= v54) {
    goto LABEL_69;
  }
LABEL_49:
  if (__OFSUB__(v40, v31)) {
    goto LABEL_150;
  }
  if (v40 - v31 >= v146) {
    goto LABEL_69;
  }
  if (__OFADD__(v31, v146)) {
    goto LABEL_153;
  }
  if (v31 + v146 >= v54) {
    Swift::Int v65 = v54;
  }
  else {
    Swift::Int v65 = v31 + v146;
  }
  if (v65 >= v31)
  {
    if (v40 != v65)
    {
      long long v149 = v28;
      uint64_t v147 = v2;
      uint64_t v66 = *(void *)(v55 + 72);
      v158 = *(char **)(v55 + 16);
      uint64_t v159 = v66;
      uint64_t v169 = v66 * (v40 - 1);
      Swift::Int v67 = v40 * v66;
      Swift::Int v152 = v65;
      do
      {
        uint64_t v70 = 0;
        Swift::Int v71 = v31;
        Swift::Int v163 = v40;
        v160 = (char *)v67;
        while (1)
        {
          uint64_t v72 = *v170;
          uint64_t v73 = v67 + v70 + *v170;
          id v74 = v158;
          ((void (*)(char *, uint64_t, uint64_t))v158)(v167, v73, v64);
          ((void (*)(char *, uint64_t, uint64_t))v74)(v168, v169 + v70 + v72, v64);
          uint64_t v75 = sub_10008B9A0();
          uint64_t v77 = v76;
          if (v75 == sub_10008B9A0() && v77 == v78) {
            break;
          }
          char v79 = sub_10008C7D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = *v162;
          uint64_t v64 = v164;
          (*v162)(v168, v164);
          v80(v167, v64);
          if ((v79 & 1) == 0) {
            goto LABEL_59;
          }
          uint64_t v81 = *v170;
          Swift::Int v67 = (Swift::Int)v160;
          if (!*v170) {
            goto LABEL_155;
          }
          uint64_t v82 = v81 + v169 + v70;
          os_log_type_t v83 = *v166;
          ((void (*)(char *, char *, uint64_t))*v166)(v165, &v160[v81 + v70], v64);
          swift_arrayInitWithTakeFrontToBack();
          ((void (*)(uint64_t, char *, uint64_t))v83)(v82, v165, v64);
          v70 -= v159;
          ++v71;
          Swift::Int v69 = v163;
          if (v163 == v71) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v68 = *v162;
        uint64_t v64 = v164;
        (*v162)(v168, v164);
        v68(v167, v64);
LABEL_59:
        Swift::Int v69 = v163;
        Swift::Int v67 = (Swift::Int)v160;
LABEL_60:
        Swift::Int v40 = v69 + 1;
        v169 += v159;
        v67 += v159;
        Swift::Int v31 = v154;
      }
      while (v40 != v152);
      Swift::Int v40 = v152;
      uint64_t v2 = v147;
      uint64_t v28 = v149;
    }
    goto LABEL_69;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  Swift::Int result = sub_10008C630();
  __break(1u);
  return result;
}

uint64_t sub_10000B9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  Swift::Int v46 = a4;
  uint64_t v34 = a1;
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v44 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v32 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v32 - v13;
  uint64_t v42 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v14 = *(void *)(v12 + 72);
    unint64_t v35 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v36 = v6;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v39 = v14;
    uint64_t v16 = v14 * v42;
LABEL_6:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v40 = v16;
    uint64_t v41 = v15;
    while (1)
    {
      uint64_t v20 = *v46;
      uint64_t v45 = v16 + v18;
      uint64_t v21 = v16 + v18 + v20;
      unint64_t v22 = v37;
      v37(v47, v21, v6);
      v22(v48, v15 + v18 + v20, v6);
      uint64_t v23 = sub_10008B9A0();
      uint64_t v25 = v24;
      if (v23 == sub_10008B9A0() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v36;
        uint64_t v17 = *v35;
        (*v35)(v48, v36);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v47, v6);
        uint64_t v16 = v40;
        uint64_t v15 = v41;
LABEL_5:
        v15 += v39;
        v16 += v39;
        if (++v42 == v33) {
          return result;
        }
        goto LABEL_6;
      }
      char v27 = sub_10008C7D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v36;
      uint64_t v28 = *v35;
      (*v35)(v48, v36);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v47, v6);
      uint64_t v16 = v40;
      uint64_t v15 = v41;
      if ((v27 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v29 = *v46;
      if (!*v46) {
        break;
      }
      uint64_t v30 = v29 + v41 + v18;
      Swift::Int v31 = *v43;
      (*v43)(v44, v29 + v40 + v18, v6);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v30, v44, v6);
      v18 -= v39;
      if (v42 == ++v19) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10000BD10(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v66 = sub_10008BA60();
  uint64_t v8 = *(void *)(v66 - 8);
  uint64_t v9 = __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v63 = (char *)&v58 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v62 = (char *)&v58 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v65 = *(void *)(v17 + 72);
  if (!v65)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_69;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v65 == -1) {
    goto LABEL_70;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v65;
  unint64_t v69 = a1;
  unint64_t v68 = a4;
  uint64_t v20 = v18 / v65;
  if (v19 >= v18 / v65)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v65;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v40 = a4 + v22;
      unint64_t v67 = a4 + v22;
      unint64_t v69 = a2;
      uint64_t v62 = (char *)a1;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v42 = -v65;
        uint64_t v65 = *(void *)(v8 + 16);
        unint64_t v60 = a4;
        uint64_t v61 = v8 + 16;
        uint64_t v59 = (void (**)(char *, uint64_t))(v8 + 8);
        do
        {
          unint64_t v43 = a3;
          uint64_t v44 = (void (*)(char *, unint64_t, uint64_t))v65;
          uint64_t v45 = v66;
          ((void (*)(char *, unint64_t, uint64_t))v65)(v63, v40 + v42, v66);
          unint64_t v46 = a2 + v42;
          v44(v64, a2 + v42, v45);
          uint64_t v47 = sub_10008B9A0();
          uint64_t v49 = v48;
          if (v47 == sub_10008B9A0() && v49 == v50) {
            char v51 = 0;
          }
          else {
            char v51 = sub_10008C7D0();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v52 = v43 + v42;
          uint64_t v53 = *v59;
          uint64_t v54 = v66;
          (*v59)(v64, v66);
          v53(v63, v54);
          unint64_t v55 = v60;
          if (v51)
          {
            if (v43 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v69 += v42;
          }
          else
          {
            unint64_t v56 = v67;
            v67 += v42;
            if (v43 < v56 || v52 >= v56)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v56)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v46 = a2;
          }
          unint64_t v40 = v67;
          if (v67 <= v55) {
            break;
          }
          a2 = v46;
          a3 = v43 + v42;
        }
        while (v46 > (unint64_t)v62);
      }
LABEL_67:
      sub_10000C4D4(&v69, &v68, (uint64_t *)&v67);
      return 1;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v65;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v64 = (char *)(a4 + v21);
    unint64_t v67 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      uint64_t v63 = *(char **)(v8 + 16);
      uint64_t v61 = v8 + 16;
      uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
      while (1)
      {
        unint64_t v25 = a3;
        uint64_t v26 = v66;
        char v27 = (void (*)(char *, unint64_t, uint64_t))v63;
        ((void (*)(char *, unint64_t, uint64_t))v63)(v16, a2, v66);
        v27(v62, a4, v26);
        uint64_t v28 = sub_10008B9A0();
        uint64_t v30 = v29;
        if (v28 == sub_10008B9A0() && v30 == v31) {
          break;
        }
        char v34 = sub_10008C7D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v35 = *v24;
        uint64_t v36 = v66;
        (*v24)(v62, v66);
        v35(v16, v36);
        if ((v34 & 1) == 0) {
          goto LABEL_31;
        }
        unint64_t v37 = v69;
        unint64_t v38 = a2 + v65;
        if (v69 < a2 || v69 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v25;
        }
        else
        {
          a3 = v25;
          if (v69 == a2) {
            unint64_t v37 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_37:
        unint64_t v69 = v37 + v65;
        a4 = v68;
        if (v68 < (unint64_t)v64)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v32 = *v24;
      uint64_t v33 = v66;
      (*v24)(v62, v66);
      v32(v16, v33);
LABEL_31:
      unint64_t v37 = v69;
      unint64_t v39 = v68 + v65;
      if (v69 < v68 || v69 >= v39)
      {
        swift_arrayInitWithTakeFrontToBack();
        a3 = v25;
      }
      else
      {
        a3 = v25;
        if (v69 != v68) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v68 = v39;
      unint64_t v38 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

char *sub_10000C3D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A390(&qword_1000AE3D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10000C4D4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_10008BA60();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_10008C690();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_10000C614(uint64_t a1)
{
  return sub_10000C3D8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10000C628(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10000C648(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_10000C648(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000A390(&qword_1000AE3C8);
  uint64_t v10 = *(void *)(sub_10008BA60() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10008BA60() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_10000C888(unint64_t a1)
{
  return sub_100009A98(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10000C89C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_10008BA60() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

void *sub_10000C9F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000A390(&qword_1000AE3D0);
    uint64_t v3 = sub_10008C530();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      unint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_10008BFB0();
      sub_10008C8F0();
      id v7 = v6;
      sub_10008C050();
      Swift::Int v8 = sub_10008C920();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_10008BFB0();
        uint64_t v17 = v16;
        if (v15 == sub_10008BFB0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_10008C7D0();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_10008BFB0();
          uint64_t v24 = v23;
          if (v22 == sub_10008BFB0() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_10008C7D0();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10000CC24(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000A390(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_10000CC84(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10000CCE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10000CD38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t getEnumTagSinglePayload for SubmitEventsActivity.Error(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s21CloudTelemetryService15TransparencyLogC10WriteErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10000CE80);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransparencyLog.JustEvents.CodingKeys()
{
  return &type metadata for TransparencyLog.JustEvents.CodingKeys;
}

unint64_t sub_10000CEBC()
{
  unint64_t result = qword_1000B0E90[0];
  if (!qword_1000B0E90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B0E90);
  }
  return result;
}

uint64_t sub_10000CF10()
{
  return sub_10000D12C(&qword_1000AE3F0, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

uint64_t sub_10000CF58()
{
  return sub_10000D12C(&qword_1000AE3F8, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

uint64_t sub_10000CFA0()
{
  return sub_10000D12C(&qword_1000AE400, (void (*)(uint64_t))type metadata accessor for URLResourceKey);
}

unint64_t sub_10000CFEC()
{
  unint64_t result = qword_1000B1120;
  if (!qword_1000B1120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B1120);
  }
  return result;
}

unint64_t sub_10000D044()
{
  unint64_t result = qword_1000B1128[0];
  if (!qword_1000B1128[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B1128);
  }
  return result;
}

uint64_t sub_10000D098(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10008C7D0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10000D118()
{
  return 0x73746E657665;
}

uint64_t sub_10000D12C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000D178(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t type metadata accessor for CachedSession()
{
  uint64_t result = qword_1000B1230;
  if (!qword_1000B1230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000D220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v8;
  *(_OWORD *)(a5 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a5 + 48) = *(void *)(a1 + 48);
  *(void *)(a5 + 56) = a2;
  *(void *)(a5 + 64) = a3;
  *(double *)(a5 + 72) = a6;
  uint64_t v9 = type metadata accessor for CachedSession();
  uint64_t v10 = a5 + *(int *)(v9 + 28);
  uint64_t v11 = sub_10008BBB0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a4, v11);
  uint64_t v13 = a5 + *(int *)(v9 + 32);
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  return result;
}

uint64_t sub_10000D2D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D178(v1, a1);
}

uint64_t sub_10000D2DC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_10000D30C()
{
  return *(double *)(v0 + 72);
}

uint64_t sub_10000D314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_10008BBB0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

unint64_t sub_10000D384(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 32)) | ((unint64_t)*(unsigned __int8 *)(v1 + *(int *)(a1 + 32) + 4) << 32);
}

uint64_t sub_10000D3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008BED0();
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10008BEC0();
  uint64_t v24 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v23 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10008C000();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    return arc4random_uniform(0x2710u);
  }
  uint64_t v21 = v7;
  sub_10008BFF0();
  uint64_t v13 = sub_10008BFC0();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v15 >> 60 == 15)
  {
    __break(1u);
LABEL_15:
    swift_release();
    swift_release();
    __break(1u);
    JUMPOUT(0x10000D878);
  }
  sub_10000D888();
  sub_10008BEA0();
  switch(v15 >> 62)
  {
    case 1uLL:
      if (v13 >> 32 < (int)v13) {
        __break(1u);
      }
      sub_10000A494(v13, v15);
      sub_10000D9F8((int)v13, v13 >> 32);
      break;
    case 2uLL:
      uint64_t v17 = *(void *)(v13 + 16);
      uint64_t v18 = *(void *)(v13 + 24);
      sub_10000DAA8(v13, v15);
      swift_retain();
      swift_retain();
      sub_10000D9F8(v17, v18);
      if (v2) {
        goto LABEL_15;
      }
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v25, 0, 14);
      goto LABEL_9;
    default:
      v25[0] = v13;
      LOWORD(v25[1]) = v15;
      BYTE2(v25[1]) = BYTE2(v15);
      BYTE3(v25[1]) = BYTE3(v15);
      BYTE4(v25[1]) = BYTE4(v15);
      BYTE5(v25[1]) = BYTE5(v15);
LABEL_9:
      sub_10008BE80();
      break;
  }
  sub_10000A428(v13, v15);
  uint64_t v19 = v23;
  sub_10008BE90();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  sub_10008BEB0();
  sub_10000A428(v13, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v19, v21);
}

unint64_t sub_10000D888()
{
  unint64_t result = qword_1000AE4E0;
  if (!qword_1000AE4E0)
  {
    sub_10008BED0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE4E0);
  }
  return result;
}

int8x16_t *sub_10000D8E0@<X0>(int8x16_t *result@<X0>, uint64_t a2@<X1>, int8x8_t *a3@<X8>)
{
  if (!result
    || (a2 - (uint64_t)result >= 0 ? (uint64_t v3 = a2 - (void)result) : (uint64_t v3 = a2 - (void)result + 7),
        (unint64_t)(a2 - (void)result + 7) < 0xF))
  {
    *a3 = 0;
    return result;
  }
  unint64_t v4 = ((v3 >> 3) - 1) & 0x1FFFFFFFFFFFFFFFLL;
  if (v4 >= 3)
  {
    unint64_t v7 = v4 + 1;
    uint64_t v8 = (v4 + 1) & 0x3FFFFFFFFFFFFFFCLL;
    unint64_t v6 = &result->i64[v8];
    uint64_t v9 = result + 1;
    int8x16_t v10 = 0uLL;
    uint64_t v11 = v8;
    int8x16_t v12 = 0uLL;
    do
    {
      int8x16_t v10 = veorq_s8(v9[-1], v10);
      int8x16_t v12 = veorq_s8(*v9, v12);
      v9 += 2;
      v11 -= 4;
    }
    while (v11);
    int8x16_t v13 = veorq_s8(v12, v10);
    int8x8_t v5 = veor_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL));
    if (v7 == v8) {
      goto LABEL_14;
    }
  }
  else
  {
    int8x8_t v5 = 0;
    unint64_t v6 = (uint64_t *)result;
  }
  unint64_t v14 = (uint64_t *)((char *)result->i64 + (v3 & 0xFFFFFFFFFFFFFFF8));
  do
  {
    uint64_t v15 = *v6++;
    *(void *)&v5 ^= v15;
  }
  while (v6 != v14);
LABEL_14:
  *a3 = v5;
  return result;
}

uint64_t sub_10000D990()
{
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10000D9C0()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  return v0;
}

uint64_t sub_10000D9F8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10008B830();
  if (!result || (uint64_t result = sub_10008B860(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_10008B850();
      sub_10008BED0();
      sub_10000D888();
      return sub_10008BE80();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10000DAA8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10000A494(a1, a2);
  }
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionUser(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SessionUser(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SessionUser(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_10000DB1C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10000DB38(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)uint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionUser()
{
  return &type metadata for SessionUser;
}

void *sub_10000DB68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v11;
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v20 = (uint64_t)a2 + v12;
    uint64_t v21 = a1 + v12;
    *(void *)(a1 + 56) = v10;
    uint64_t v13 = sub_10008BBB0();
    unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v21, v20, v13);
    uint64_t v15 = *(int *)(a3 + 32);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = *(unsigned char *)(v17 + 4);
  }
  return v4;
}

uint64_t sub_10000DCC4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_10008BBB0();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_10000DD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v18 = a1 + v10;
  uint64_t v11 = a2 + v10;
  *(void *)(a1 + 56) = v8;
  uint64_t v12 = sub_10008BBB0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v18, v11, v12);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  return a1;
}

uint64_t sub_10000DE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10008BBB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  char v13 = *(unsigned char *)(v12 + 4);
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(unsigned char *)(v11 + 4) = v13;
  return a1;
}

uint64_t sub_10000DFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = sub_10008BBB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  return a1;
}

uint64_t sub_10000E068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_10008BBB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  return a1;
}

uint64_t sub_10000E160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000E174);
}

uint64_t sub_10000E174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10008BBB0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10000E224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000E238);
}

uint64_t sub_10000E238(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10008BBB0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10000E2E0()
{
  uint64_t result = sub_10008BBB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Session()
{
  return self;
}

uint64_t sub_10000E3BC()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6CA8);
  sub_10000A358(v0, (uint64_t)qword_1000B6CA8);
  return sub_10008BD40();
}

uint64_t sub_10000E440(uint64_t a1, void *a2, char a3)
{
  uint64_t result = 0x656C74746F726874;
  switch(a3)
  {
    case 1:
      sub_10008C540(20);
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD000000000000012;
      goto LABEL_4;
    case 2:
      sub_10008C540(35);
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD000000000000021;
      v9._countAndFlagsBits = sub_10008C7A0();
      sub_10008C090(v9);
      swift_bridgeObjectRelease();
      return v7;
    case 3:
      return result;
    default:
      sub_10008C540(33);
      swift_bridgeObjectRelease();
      unint64_t v6 = 0xD00000000000001FLL;
LABEL_4:
      unint64_t v7 = v6;
      v8._countAndFlagsBits = a1;
      v8._object = a2;
      sub_10008C090(v8);
      return v7;
  }
}

uint64_t sub_10000E5B4()
{
  return sub_10000E440(*(void *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t type metadata accessor for StorebagCloudKitSigningConfiguration()
{
  uint64_t result = qword_1000B1350;
  if (!qword_1000B1350) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000E60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10008BA60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v15 - v10;
  type metadata accessor for Throttle();
  sub_10005DB40(a1, (uint64_t)v11);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  }
  uint64_t v13 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v13(a2, v11, v5);
  sub_10004A270(a1, (void *)0x72756769666E6F63, (void *)0xEF2F736E6F697461, (uint64_t)v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  uint64_t v14 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a2 + *(int *)(v14 + 20), v9, v5);
}

uint64_t sub_10000E7F8()
{
  uint64_t v95 = sub_10008BBB0();
  uint64_t v96 = *(void *)(v95 - 8);
  uint64_t v0 = __chkstk_darwin(v95);
  uint64_t v92 = (char *)&v86 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __chkstk_darwin(v0);
  char v93 = (char *)&v86 - v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v86 - v4;
  uint64_t v6 = sub_10008B910();
  uint64_t v94 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A390(&qword_1000AF2A0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v86 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v86 - v16;
  uint64_t v97 = sub_10008BA60();
  uint64_t v18 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StorebagCloudKitSigningConfiguration();
  sub_10008B9D0();
  BOOL v21 = sub_10008B9F0();
  uint64_t v87 = v15;
  uint64_t v88 = v6;
  unint64_t v89 = v12;
  uint64_t v90 = v5;
  uint64_t v91 = v17;
  if (!v21)
  {
    if (qword_1000B1240 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_10008BD50();
    sub_10000A358(v26, (uint64_t)qword_1000B6CA8);
    char v27 = sub_10008BD30();
    os_log_type_t v28 = sub_10008C2D0();
    if (os_log_type_enabled(v27, v28))
    {
      BOOL v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "configuration does not exist", v29, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v97);
    return 0;
  }
  uint64_t v86 = v18;
  sub_10000A390(&qword_1000AE3C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10008DC30;
  *(void *)(inited + 32) = NSURLContentModificationDateKey;
  uint64_t v23 = NSURLContentModificationDateKey;
  sub_10000C9F4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  uint64_t v24 = v8;
  uint64_t v25 = v20;
  sub_10008B980();
  swift_bridgeObjectRelease();
  uint64_t v31 = v87;
  sub_10008B8E0();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v24, v88);
  uint64_t v32 = v96;
  uint64_t v33 = v95;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 48))(v31, 1, v95);
  if (result != 1)
  {
    uint64_t v35 = (uint64_t)v91;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v91, v31, v33);
    uint64_t v36 = v86;
    uint64_t v37 = v33;
    uint64_t v38 = (uint64_t)v89;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v37);
    sub_1000133C8(v35, v38);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v38, 1, v37) == 1)
    {
      sub_10000CC24(v38, &qword_1000AF2A0);
      if (qword_1000B1240 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_10008BD50();
      sub_10000A358(v39, (uint64_t)qword_1000B6CA8);
      unint64_t v40 = sub_10008BD30();
      os_log_type_t v41 = sub_10008C2F0();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "unable to determine configuration creation date", v42, 2u);
        swift_slowDealloc();
      }

LABEL_28:
      sub_10000CC24(v35, &qword_1000AF2A0);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v97);
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v90, v38, v37);
    uint64_t v30 = sub_10008BA80();
    unint64_t v44 = v43;
    uint64_t v45 = self;
    sub_10000A494(v30, v44);
    Class isa = sub_10008BAC0().super.isa;
    *(void *)&long long v101 = 0;
    id v47 = [v45 propertyListWithData:isa options:0 format:0 error:&v101];

    if (v47)
    {
      id v48 = (id)v101;
      sub_10008C470();
      swift_unknownObjectRelease();
      sub_10000A390(&qword_1000AE630);
      if (swift_dynamicCast())
      {
        double v49 = v99;
        if (*(void *)(*(void *)&v99 + 16))
        {
          unint64_t v50 = sub_100011F50(0xD000000000000016, 0x80000001000921A0);
          char v51 = v90;
          unint64_t v52 = v93;
          uint64_t v53 = v92;
          if (v54)
          {
            sub_10000CD38(*(void *)(*(void *)&v49 + 56) + 32 * v50, (uint64_t)&v101);
          }
          else
          {
            long long v101 = 0u;
            long long v102 = 0u;
          }
        }
        else
        {
          long long v101 = 0u;
          long long v102 = 0u;
          char v51 = v90;
          unint64_t v52 = v93;
          uint64_t v53 = v92;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v102 + 1))
        {
          char v60 = swift_dynamicCast();
          if (v60)
          {
            char v100 = 0;
            if (v99 > 31536000.0 || v99 < 3600.0)
            {
              double v99 = 86400.0;
              char v100 = 0;
            }
            goto LABEL_39;
          }
          double v99 = 0.0;
          char v61 = v60 ^ 1;
        }
        else
        {
          sub_10000CC24((uint64_t)&v101, &qword_1000AE638);
          double v99 = 0.0;
          char v61 = 1;
        }
        char v100 = v61;
LABEL_39:
        sub_10008BB80();
        sub_10008BB70();
        char v62 = sub_10008BB40();
        uint64_t v63 = v53;
        char v64 = v62;
        uint64_t v65 = v32 + 8;
        uint64_t v66 = *(void (**)(char *, uint64_t))(v32 + 8);
        v66(v63, v37);
        if ((v64 & 1) == 0)
        {
          sub_10000A43C(v30, v44);
          v66(v52, v37);
          v66(v51, v37);
          sub_10000CC24(v35, &qword_1000AF2A0);
          (*(void (**)(char *, uint64_t))(v86 + 8))(v25, v97);
          return v30;
        }
        uint64_t v96 = v65;
        if (qword_1000B1240 != -1) {
          swift_once();
        }
        uint64_t v67 = sub_10008BD50();
        sub_10000A358(v67, (uint64_t)qword_1000B6CA8);
        unint64_t v68 = sub_10008BD30();
        os_log_type_t v69 = sub_10008C310();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v70 = 0;
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "removing expired config", v70, 2u);
          swift_slowDealloc();
        }

        id v71 = [self defaultManager];
        sub_10008B9C0(v72);
        id v74 = v73;
        *(void *)&long long v101 = 0;
        unsigned int v75 = [v71 removeItemAtURL:v73 error:&v101];

        if (v75)
        {
          id v76 = (id)v101;
          sub_10000A43C(v30, v44);
          sub_10000A43C(v30, v44);
          v66(v93, v37);
          uint64_t v77 = v51;
          uint64_t v78 = v37;
        }
        else
        {
          id v79 = (id)v101;
          sub_10008B960();

          swift_willThrow();
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v80 = sub_10008BD30();
          os_log_type_t v81 = sub_10008C2D0();
          if (os_log_type_enabled(v80, v81))
          {
            uint64_t v82 = (uint8_t *)swift_slowAlloc();
            uint64_t v94 = swift_slowAlloc();
            *(void *)&long long v101 = v94;
            *(_DWORD *)uint64_t v82 = 136446210;
            uint64_t v92 = (char *)(v82 + 4);
            swift_getErrorValue();
            uint64_t v83 = sub_10008C890();
            uint64_t v98 = sub_100009D00(v83, v84, (uint64_t *)&v101);
            sub_10008C440();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v80, v81, "failed to remove expired configuration: %{public}s", v82, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            sub_10000A43C(v30, v44);
          }
          else
          {
            sub_10000A43C(v30, v44);

            swift_errorRelease();
            swift_errorRelease();
          }
          swift_errorRelease();
          sub_10000A43C(v30, v44);
          uint64_t v85 = v95;
          v66(v93, v95);
          uint64_t v77 = v90;
          uint64_t v78 = v85;
        }
        v66(v77, v78);
        sub_10000CC24((uint64_t)v91, &qword_1000AF2A0);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v25, v97);
        return 0;
      }
    }
    else
    {
      id v55 = (id)v101;
      sub_10008B960();

      swift_willThrow();
      swift_errorRelease();
    }
    if (qword_1000B1240 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_10008BD50();
    sub_10000A358(v56, (uint64_t)qword_1000B6CA8);
    uint64_t v57 = sub_10008BD30();
    os_log_type_t v58 = sub_10008C2F0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "failed to parse configuration", v59, 2u);
      swift_slowDealloc();
    }
    sub_10000A43C(v30, v44);

    sub_10000A43C(v30, v44);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v90, v37);
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000F6F0()
{
  v1[16] = v0;
  uint64_t v2 = sub_10008B780();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  sub_10000A390(&qword_1000AE350);
  v1[20] = swift_task_alloc();
  uint64_t v3 = sub_10008BA60();
  v1[21] = v3;
  v1[22] = *(void *)(v3 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  return _swift_task_switch(sub_10000F884, 0);
}

uint64_t sub_10000F884()
{
  uint64_t v1 = sub_10000E7F8();
  if (v2 >> 60 == 15)
  {
    uint64_t v3 = v0[25];
    type metadata accessor for Throttle();
    sub_10008B9E0();
    uint64_t v4 = sub_10005DAA8(v3);
    v0[26] = v4;
    uint64_t v10 = (uint64_t (*)(void))(*(void *)(*(void *)v4 + 160) + **(int **)(*(void *)v4 + 160));
    uint64_t v5 = (void *)swift_task_alloc();
    v0[27] = v5;
    void *v5 = v0;
    v5[1] = sub_10000FAAC;
    return v10();
  }
  else
  {
    uint64_t v7 = v1;
    unint64_t v8 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v9(v7, v8);
  }
}

uint64_t sub_10000FAAC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 328) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10000FBD8, 0);
}

uint64_t sub_10000FBD8()
{
  if (*(unsigned char *)(v0 + 328))
  {
    if (qword_1000B1240 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_10008BD50();
    *(void *)(v0 + 224) = sub_10000A358(v1, (uint64_t)qword_1000B6CA8);
    unint64_t v2 = sub_10008BD30();
    os_log_type_t v3 = sub_10008C310();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "fetching configuration from server", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 160);

    sub_10008BA40();
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
    if (v8 == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 176) + 32))(*(void *)(v0 + 192), *(void *)(v0 + 160), *(void *)(v0 + 168));
      RequestOptions.globalRequestOptions.unsafeMutableAddressor();
      swift_beginAccess();
      uint64_t v10 = self;
      swift_retain();
      id v11 = [v10 mainBundle];
      id v12 = [v11 bundleIdentifier];

      if (v12)
      {
        uint64_t v14 = *(void *)(v0 + 192);
        uint64_t v13 = *(void *)(v0 + 200);
        uint64_t v15 = *(void *)(v0 + 168);
        uint64_t v16 = *(void *)(v0 + 176);
        sub_10008BFB0();

        __int16 v17 = sub_100068F64(1, 1);
        id v18 = sub_10005D8C4(v17 & 0x101);
        *(void *)(v0 + 232) = v18;
        swift_bridgeObjectRelease();
        swift_release();
        [v18 setTlsPinning:1];
        *(void *)(v0 + 240) = [objc_allocWithZone((Class)C2RequestManager) init];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
        sub_10008B740();
        uint64_t v19 = (void *)swift_task_alloc();
        *(void *)(v0 + 248) = v19;
        *uint64_t v19 = v0;
        v19[1] = sub_100010098;
        uint64_t v8 = *(void *)(v0 + 152);
        id v9 = v18;
        return C2RequestManager.data(for:options:)(v8, v9);
      }
    }
    __break(1u);
    return C2RequestManager.data(for:options:)(v8, v9);
  }
  if (qword_1000B1240 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10008BD50();
  sub_10000A358(v20, (uint64_t)qword_1000B6CA8);
  BOOL v21 = sub_10008BD30();
  os_log_type_t v22 = sub_10008C310();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "configuration fetch throttled", v23, 2u);
    swift_slowDealloc();
  }

  sub_100011EFC();
  swift_allocError();
  *(void *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  *(unsigned char *)(v24 + 16) = 3;
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_100010098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v6[32] = a1;
  v6[33] = a2;
  v6[34] = a3;
  v6[35] = v3;
  swift_task_dealloc();
  uint64_t v7 = (void *)v5[30];
  (*(void (**)(void, void))(v5[18] + 8))(v5[19], v5[17]);

  if (v3) {
    uint64_t v8 = sub_100010E0C;
  }
  else {
    uint64_t v8 = sub_100010258;
  }
  return _swift_task_switch(v8, 0);
}

uint64_t sub_100010258()
{
  uint64_t v59 = v0;
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    unint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 272);
    if ((uint64_t)[v2 statusCode] < 200 || (uint64_t)objc_msgSend(v2, "statusCode") >= 300)
    {
      unint64_t v18 = *(void *)(v0 + 264);
      uint64_t v19 = *(void **)(v0 + 272);
      uint64_t v20 = *(void *)(v0 + 256);
      BOOL v21 = *(void **)(v0 + 232);
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v22 = *(void *)(v0 + 176);
      id v24 = objc_msgSend(v2, "statusCode", *(void *)(v0 + 192));
      sub_100011EFC();
      uint64_t v10 = swift_allocError();
      *(void *)uint64_t v25 = v24;
      *(void *)(v25 + 8) = 0;
      *(unsigned char *)(v25 + 16) = 2;
      swift_willThrow();

      sub_10000A43C(v20, v18);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v54, v23);
      goto LABEL_12;
    }
  }
  uint64_t v4 = self;
  Class isa = sub_10008BAC0().super.isa;
  *(void *)(v0 + 104) = 0;
  id v6 = [v4 propertyListWithData:isa options:0 format:0 error:v0 + 104];

  uint64_t v7 = *(void **)(v0 + 104);
  if (!v6)
  {
    unint64_t v26 = *(void *)(v0 + 264);
    uint64_t v27 = *(void **)(v0 + 272);
    uint64_t v28 = *(void *)(v0 + 256);
    BOOL v29 = *(void **)(v0 + 232);
    uint64_t v55 = *(void *)(v0 + 192);
    uint64_t v31 = *(void *)(v0 + 168);
    uint64_t v30 = *(void *)(v0 + 176);
    id v32 = v7;
    uint64_t v10 = sub_10008B960();

    swift_willThrow();
    sub_10000A43C(v28, v26);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v55, v31);
    goto LABEL_12;
  }
  id v8 = v7;
  sub_10008C470();
  swift_unknownObjectRelease();
  sub_10000A390(&qword_1000AE630);
  if (!swift_dynamicCast())
  {
    unint64_t v33 = *(void *)(v0 + 264);
    char v34 = *(void **)(v0 + 272);
    uint64_t v35 = *(void *)(v0 + 256);
    uint64_t v36 = *(void **)(v0 + 232);
    uint64_t v37 = *(void *)(v0 + 192);
    uint64_t v39 = *(void *)(v0 + 168);
    uint64_t v38 = *(void *)(v0 + 176);
    sub_100011EFC();
    uint64_t v10 = swift_allocError();
    *(void *)uint64_t v40 = 0xD000000000000028;
    *(void *)(v40 + 8) = 0x8000000100091FA0;
    *(unsigned char *)(v40 + 16) = 0;
    swift_willThrow();
    sub_10000A43C(v35, v33);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(v0 + 280);
  swift_bridgeObjectRelease();
  type metadata accessor for StorebagCloudKitSigningConfiguration();
  sub_10008B9D0();
  sub_10008BAF0();
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = *(void **)(v0 + 272);
    id v12 = *(void **)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 184);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v16 = *(void *)(v0 + 176);
    sub_10000A43C(*(void *)(v0 + 256), *(void *)(v0 + 264));

    __int16 v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v17(v13, v15);
    v17(v14, v15);
LABEL_12:
    *(void *)(v0 + 312) = v10;
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v41 = sub_10008BD30();
    os_log_type_t v42 = sub_10008C310();
    if (os_log_type_enabled(v41, v42))
    {
      unint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      *(_DWORD *)unint64_t v43 = 136315138;
      swift_getErrorValue();
      uint64_t v44 = sub_10008C890();
      *(void *)(v0 + 96) = sub_100009D00(v44, v45, &v58);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "failed to fetch configuration from server with error (%s)", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v56 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 208) + 168) + **(int **)(**(void **)(v0 + 208) + 168));
    unint64_t v46 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v46;
    *unint64_t v46 = v0;
    v46[1] = sub_100010BF8;
    return v56();
  }
  uint64_t v48 = *(void *)(v0 + 208);
  uint64_t v50 = *(void *)(v0 + 176);
  uint64_t v49 = *(void *)(v0 + 184);
  uint64_t v51 = *(void *)(v0 + 168);
  unint64_t v52 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  *(void *)(v0 + 288) = v52;
  *(void *)(v0 + 296) = (v50 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v52(v49, v51);
  uint64_t v57 = (uint64_t (*)(void))(*(void *)(*(void *)v48 + 152) + **(int **)(*(void *)v48 + 152));
  uint64_t v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v53;
  *uint64_t v53 = v0;
  v53[1] = sub_100010948;
  return v57();
}

uint64_t sub_100010948()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100010A70, 0);
}

uint64_t sub_100010A70()
{
  uint64_t v1 = sub_10008BD30();
  os_log_type_t v2 = sub_10008C310();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "successfully fetched configuration from server", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v5 = (void *)v0[34];
  id v6 = (void *)v0[29];
  uint64_t v7 = v0[24];
  uint64_t v8 = v0[21];

  swift_release();
  v4(v7, v8);
  uint64_t v9 = v0[32];
  uint64_t v10 = v0[33];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v11 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v11(v9, v10);
}

uint64_t sub_100010BF8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100010D20, 0);
}

uint64_t sub_100010D20()
{
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100010E0C()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  *(void *)(v0 + 312) = *(void *)(v0 + 280);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_10008BD30();
  os_log_type_t v5 = sub_10008C310();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)id v6 = 136315138;
    swift_getErrorValue();
    uint64_t v7 = sub_10008C890();
    *(void *)(v0 + 96) = sub_100009D00(v7, v8, &v12);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "failed to fetch configuration from server with error (%s)", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  id v11 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 208) + 168) + **(int **)(**(void **)(v0 + 208) + 168));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v9;
  void *v9 = v0;
  v9[1] = sub_100010BF8;
  return v11();
}

unint64_t sub_1000110C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A390(&qword_1000AE6E0);
  uint64_t v2 = (void *)sub_10008C680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    os_log_type_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_100011FC8((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000111D4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001128C;
  return sub_10000F6F0();
}

uint64_t sub_10001128C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[37] = a1;
  v4[38] = a2;
  swift_task_dealloc();
  if (v2)
  {
    os_log_type_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_100011404, 0);
  }
}

uint64_t sub_100011404()
{
  uint64_t v1 = self;
  Class isa = sub_10008BAC0().super.isa;
  *(void *)(v0 + 232) = 0;
  id v3 = [v1 propertyListWithData:isa options:0 format:0 error:v0 + 232];

  uint64_t v4 = *(void **)(v0 + 232);
  if (!v3)
  {
    id v9 = v4;
    sub_10008B960();

    swift_willThrow();
    swift_errorRelease();
    goto LABEL_7;
  }
  id v5 = v4;
  sub_10008C470();
  swift_unknownObjectRelease();
  sub_10000A390(&qword_1000AE630);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    uint64_t v11 = *(void *)(v0 + 296);
    unint64_t v10 = *(void *)(v0 + 304);
    sub_100011EFC();
    swift_allocError();
    *(void *)uint64_t v12 = 0xD000000000000028;
    *(void *)(v12 + 8) = 0x8000000100091FA0;
LABEL_72:
    *(unsigned char *)(v12 + 16) = 0;
    swift_willThrow();
    sub_10000A43C(v11, v10);
    uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
    return v44();
  }
  uint64_t v6 = *(void *)(v0 + 264);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_100011F50(0x67616265726F7453, 0xE800000000000000), (v8 & 1) != 0))
  {
    sub_10000CD38(*(void *)(v6 + 56) + 32 * v7, v0 + 112);
  }
  else
  {
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 136))
  {
    sub_10000CC24(v0 + 112, &qword_1000AE638);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    uint64_t v11 = *(void *)(v0 + 296);
    unint64_t v10 = *(void *)(v0 + 304);
    sub_100011EFC();
    swift_allocError();
    uint64_t v16 = "failed to parse configuration, missing or unexpected type for Storebag key";
    unint64_t v17 = 0xD00000000000004ALL;
LABEL_71:
    *(void *)uint64_t v12 = v17;
    *(void *)(v12 + 8) = (unint64_t)(v16 - 32) | 0x8000000000000000;
    goto LABEL_72;
  }
  uint64_t v13 = *(void *)(v0 + 256);
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_100011F50(0x676E696E676953, 0xE700000000000000), (v15 & 1) != 0))
  {
    sub_10000CD38(*(void *)(v13 + 56) + 32 * v14, v0 + 176);
  }
  else
  {
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 200))
  {
    sub_10000CC24(v0 + 176, &qword_1000AE638);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:
    uint64_t v11 = *(void *)(v0 + 296);
    unint64_t v10 = *(void *)(v0 + 304);
    sub_100011EFC();
    swift_allocError();
    uint64_t v16 = "failed to parse configuration, missing or unexpected type for Signing key";
    unint64_t v17 = 0xD000000000000049;
    goto LABEL_71;
  }
  uint64_t v18 = *(void *)(v0 + 248);
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_100011F50(0x6D6E6F7269766E45, 0xEB00000000746E65), (v20 & 1) != 0))
  {
    sub_10000CD38(*(void *)(v18 + 56) + 32 * v19, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
    sub_10000CC24(v0 + 16, &qword_1000AE638);
    goto LABEL_70;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_70:
    uint64_t v11 = *(void *)(v0 + 296);
    unint64_t v10 = *(void *)(v0 + 304);
    sub_100011EFC();
    swift_allocError();
    uint64_t v16 = "failed to parse configuration, missing or unexpected type for Environment key";
    unint64_t v17 = 0xD00000000000004DLL;
    goto LABEL_71;
  }
  uint64_t v21 = *(void *)(v0 + 240);
  if (*(void *)(v21 + 16))
  {
    unint64_t v22 = sub_100011F50(0x64756F6C4369, 0xE600000000000000);
    if (v23)
    {
      sub_10000CD38(*(void *)(v21 + 56) + 32 * v22, v0 + 144);
      if (swift_dynamicCast())
      {
        unint64_t v24 = sub_1000125F8(*(void *)(v0 + 280));
        swift_bridgeObjectRelease();
        sub_100011BB8(v24);
      }
    }
  }
  uint64_t v25 = sub_100048E38();
  swift_beginAccess();
  if (*v25 == 1)
  {
    unint64_t v26 = (_OWORD *)(v0 + 80);
    uint64_t v47 = v21 + 64;
    uint64_t v27 = -1;
    uint64_t v28 = -1 << *(unsigned char *)(v21 + 32);
    if (-v28 < 64) {
      uint64_t v27 = ~(-1 << -(char)v28);
    }
    unint64_t v29 = v27 & *(void *)(v21 + 64);
    int64_t v30 = (unint64_t)(63 - v28) >> 6;
    swift_bridgeObjectRetain();
    int64_t v31 = 0;
    while (1)
    {
      do
      {
        if (v29)
        {
          unint64_t v32 = __clz(__rbit64(v29));
          v29 &= v29 - 1;
          unint64_t v33 = v32 | (v31 << 6);
        }
        else
        {
          int64_t v34 = v31 + 1;
          if (__OFADD__(v31, 1))
          {
            __break(1u);
            goto LABEL_80;
          }
          if (v34 >= v30) {
            goto LABEL_75;
          }
          unint64_t v35 = *(void *)(v47 + 8 * v34);
          ++v31;
          if (!v35)
          {
            int64_t v31 = v34 + 1;
            if (v34 + 1 >= v30) {
              goto LABEL_75;
            }
            unint64_t v35 = *(void *)(v47 + 8 * v31);
            if (!v35)
            {
              int64_t v31 = v34 + 2;
              if (v34 + 2 >= v30) {
                goto LABEL_75;
              }
              unint64_t v35 = *(void *)(v47 + 8 * v31);
              if (!v35)
              {
                int64_t v31 = v34 + 3;
                if (v34 + 3 >= v30) {
                  goto LABEL_75;
                }
                unint64_t v35 = *(void *)(v47 + 8 * v31);
                if (!v35)
                {
                  int64_t v31 = v34 + 4;
                  if (v34 + 4 >= v30) {
                    goto LABEL_75;
                  }
                  unint64_t v35 = *(void *)(v47 + 8 * v31);
                  if (!v35)
                  {
                    int64_t v36 = v34 + 5;
                    if (v36 >= v30)
                    {
LABEL_75:
                      swift_release();
                      goto LABEL_76;
                    }
                    unint64_t v35 = *(void *)(v47 + 8 * v36);
                    if (!v35)
                    {
                      while (1)
                      {
                        int64_t v31 = v36 + 1;
                        if (__OFADD__(v36, 1)) {
                          break;
                        }
                        if (v31 >= v30) {
                          goto LABEL_75;
                        }
                        unint64_t v35 = *(void *)(v47 + 8 * v31);
                        ++v36;
                        if (v35) {
                          goto LABEL_56;
                        }
                      }
LABEL_80:
                      __break(1u);
                    }
                    int64_t v31 = v36;
                  }
                }
              }
            }
          }
LABEL_56:
          unint64_t v29 = (v35 - 1) & v35;
          unint64_t v33 = __clz(__rbit64(v35)) + (v31 << 6);
        }
        uint64_t v37 = (uint64_t *)(*(void *)(v21 + 48) + 16 * v33);
        uint64_t v38 = *v37;
        uint64_t v39 = v37[1];
        BOOL v40 = *v37 == 0x64756F6C4369 && v39 == 0xE600000000000000;
      }
      while (v40 || (sub_10008C7D0() & 1) != 0);
      if (!*(void *)(v21 + 16)) {
        break;
      }
      swift_bridgeObjectRetain();
      unint64_t v41 = sub_100011F50(v38, v39);
      if (v42)
      {
        sub_10000CD38(*(void *)(v21 + 56) + 32 * v41, v0 + 80);
      }
      else
      {
        *unint64_t v26 = 0u;
        *(_OWORD *)(v0 + 96) = 0u;
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 104))
      {
        if (swift_dynamicCast())
        {
          unint64_t v43 = sub_1000125F8(*(void *)(v0 + 272));
          swift_bridgeObjectRelease();
          sub_100011BB8(v43);
        }
      }
      else
      {
LABEL_36:
        sub_10000CC24(v0 + 80, &qword_1000AE638);
      }
    }
    *unint64_t v26 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    goto LABEL_36;
  }
LABEL_76:
  sub_10000A43C(*(void *)(v0 + 296), *(void *)(v0 + 304));
  swift_bridgeObjectRelease();
  unint64_t v46 = *(uint64_t (**)(void *))(v0 + 8);
  return v46(_swiftEmptyArrayStorage);
}

uint64_t sub_100011BB8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_10008C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10008C650();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10008C580();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1000122BC(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_10008C650();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_10008C180();
}

uint64_t sub_100011D84()
{
  return sub_10008BD20();
}

uint64_t sub_100011DD0()
{
  return sub_10008BD10();
}

Swift::Int sub_100011E28()
{
  return sub_10008C920();
}

uint64_t sub_100011E90()
{
  swift_getWitnessTable();
  return sub_10008BD00();
}

unint64_t sub_100011EFC()
{
  unint64_t result = qword_1000AE628;
  if (!qword_1000AE628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE628);
  }
  return result;
}

unint64_t sub_100011F50(uint64_t a1, uint64_t a2)
{
  sub_10008C8F0();
  sub_10008C050();
  Swift::Int v4 = sub_10008C920();
  return sub_10001207C(a1, a2, v4);
}

unint64_t sub_100011FC8(uint64_t a1)
{
  sub_10008C8F0();
  type metadata accessor for CFString(0);
  sub_100013338(&qword_1000AE6E8, type metadata accessor for CFString);
  sub_10008BD10();
  Swift::Int v2 = sub_10008C920();
  return sub_100012160(a1, v2);
}

unint64_t sub_10001207C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_10008C7D0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        BOOL v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_10008C7D0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100012160(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    unint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_100013338(&qword_1000AE6E8, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_10008BD00();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_10008BD00();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_1000122BC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_10008C650();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10008C650();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000132C8();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A390(&qword_1000AE6C0);
          uint64_t v12 = sub_1000124C0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for SecKey(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

void (*sub_1000124C0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100012570(v6, a2, a3);
  return sub_100012528;
}

void sub_100012528(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_100012570(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_10008C570();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000125F0;
  }
  __break(1u);
  return result;
}

void sub_1000125F0(id *a1)
{
}

unint64_t sub_1000125F8(uint64_t a1)
{
  char v2 = 0;
  uint64_t v3 = 0;
  unint64_t v36 = (unint64_t)_swiftEmptyArrayStorage;
  long long v34 = xmmword_10008DC40;
  v35[0] = 0x654B63696C627550;
  v35[1] = 0xEF34366573614279;
  v35[2] = 0xD000000000000012;
  v35[3] = 0x80000001000920C0;
  do
  {
    char v4 = v2;
    if (!*(void *)(a1 + 16))
    {
      long long v32 = 0u;
      long long v33 = 0u;
LABEL_3:
      sub_10000CC24((uint64_t)&v32, &qword_1000AE638);
      goto LABEL_4;
    }
    uint64_t v5 = &v35[2 * v3];
    uint64_t v6 = *v5;
    uint64_t v7 = v5[1];
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_100011F50(v6, v7);
    if (v9)
    {
      sub_10000CD38(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v32);
    }
    else
    {
      long long v32 = 0u;
      long long v33 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v33 + 1)) {
      goto LABEL_3;
    }
    if (swift_dynamicCast())
    {
      uint64_t v10 = sub_10008BA90();
      if (v11 >> 60 == 15)
      {
        if (qword_1000B1240 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_10008BD50();
        sub_10000A358(v12, (uint64_t)qword_1000B6CA8);
        BOOL v13 = sub_10008BD30();
        os_log_type_t v14 = sub_10008C2F0();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, v14, "failed to parse configuration, failed to read public key data", v15, 2u);
          swift_slowDealloc();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v16 = v10;
        unint64_t v17 = v11;
        sub_10000A390(&qword_1000AE6D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10008DC40;
        *(void *)(inited + 32) = kSecAttrKeyType;
        *(void *)(inited + 40) = kSecAttrKeyTypeRSA;
        *(void *)(inited + 48) = kSecAttrKeyClass;
        *(void *)(inited + 56) = kSecAttrKeyClassPublic;
        CFStringRef v19 = (id)kSecAttrKeyType;
        CFStringRef v20 = (id)kSecAttrKeyTypeRSA;
        CFStringRef v21 = (id)kSecAttrKeyClass;
        CFStringRef v22 = (id)kSecAttrKeyClassPublic;
        sub_10000DAA8(v16, v17);
        sub_1000110C8(inited);
        CFDataRef isa = sub_10008BAC0().super.isa;
        type metadata accessor for CFString(0);
        sub_100013338(&qword_1000AE6D8, type metadata accessor for CFString);
        CFDictionaryRef v24 = sub_10008BEE0().super.isa;
        swift_bridgeObjectRelease();
        SecKeyRef v25 = SecKeyCreateWithData(isa, v24, 0);

        if (v25)
        {
          sub_10000A428(v16, v17);
          sub_10000A428(v16, v17);
          swift_bridgeObjectRelease();
          unint64_t v26 = v25;
          sub_10008C150();
          if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_10008C190();
          }
          sub_10008C1B0();
          sub_10008C180();
        }
        else
        {
          if (qword_1000B1240 != -1) {
            swift_once();
          }
          uint64_t v27 = sub_10008BD50();
          sub_10000A358(v27, (uint64_t)qword_1000B6CA8);
          uint64_t v28 = sub_10008BD30();
          os_log_type_t v29 = sub_10008C2F0();
          if (os_log_type_enabled(v28, v29))
          {
            int64_t v30 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int64_t v30 = 0;
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "failed to parse configuration, failed to decode public key", v30, 2u);
            swift_slowDealloc();
            sub_10000A428(v16, v17);

            sub_10000A428(v16, v17);
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10000A428(v16, v17);
            sub_10000A428(v16, v17);
            swift_bridgeObjectRelease();
          }
        }
      }
    }
LABEL_4:
    char v2 = 1;
    uint64_t v3 = 1;
  }
  while ((v4 & 1) == 0);
  swift_arrayDestroy();
  return v36;
}

uint64_t *sub_100012B2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10008BA60();
    unint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_100012C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008BA60();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return v7(v5, v4);
}

uint64_t sub_100012CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_100012D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_100012DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_100012E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_100012F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100012F28);
}

uint64_t sub_100012F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008BA60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_100012F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100012FA8);
}

uint64_t sub_100012FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008BA60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_100013018()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000130A8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for StorebagCloudKitSigningConfiguration.Error(uint64_t a1)
{
  return sub_1000130D0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1000130D0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s21CloudTelemetryService36StorebagCloudKitSigningConfigurationV5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1000130A8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1000130A8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000130D0(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for StorebagCloudKitSigningConfiguration.Error(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000130D0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagCloudKitSigningConfiguration.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagCloudKitSigningConfiguration.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100013274(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_10001328C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagCloudKitSigningConfiguration.Error()
{
  return &type metadata for StorebagCloudKitSigningConfiguration.Error;
}

void type metadata accessor for SecKey(uint64_t a1)
{
}

unint64_t sub_1000132C8()
{
  unint64_t result = qword_1000AE6C8;
  if (!qword_1000AE6C8)
  {
    sub_10000A540(&qword_1000AE6C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE6C8);
  }
  return result;
}

void type metadata accessor for CFString(uint64_t a1)
{
}

uint64_t sub_100013338(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100013380(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1000133C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AF2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100013430()
{
  return sub_100013338(&qword_1000AE6D8, type metadata accessor for CFString);
}

uint64_t sub_100013478()
{
  return sub_100013338(&qword_1000AE700, type metadata accessor for CFString);
}

void *sub_1000134C0()
{
  return &unk_10008E3F0;
}

void *sub_1000134CC()
{
  return &unk_10008E3F8;
}

uint64_t sub_1000134D8()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6CC0);
  sub_10000A358(v0, (uint64_t)qword_1000B6CC0);
  return sub_10008BD40();
}

uint64_t sub_100013558(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  swift_allocObject();
  uint64_t v14 = sub_100017468(a1, a2, a3, a4, a5, a6, a7);
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1000135F8(char a1)
{
  return *(void *)&aPosttimeclient[8 * a1];
}

BOOL sub_100013618(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10001362C()
{
  Swift::UInt v1 = *v0;
  sub_10008C8F0();
  sub_10008C900(v1);
  return sub_10008C920();
}

void sub_100013674()
{
  sub_10008C900(*v0);
}

Swift::Int sub_1000136A0()
{
  Swift::UInt v1 = *v0;
  sub_10008C8F0();
  sub_10008C900(v1);
  return sub_10008C920();
}

uint64_t sub_1000136E4()
{
  return sub_1000135F8(*v0);
}

uint64_t sub_1000136EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10001769C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100013714(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100013720(uint64_t a1)
{
  unint64_t v2 = sub_100017FAC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001375C(uint64_t a1)
{
  unint64_t v2 = sub_100017FAC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100013798(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a3;
  uint64_t v7 = sub_10000A390(&qword_1000AE830);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A784(a1, a1[3]);
  sub_100017FAC();
  sub_10008C980();
  char v16 = 0;
  sub_10008C770();
  if (!v4)
  {
    char v15 = 1;
    sub_10008C760();
    uint64_t v14 = a4;
    char v13 = 2;
    sub_10000A390(&qword_1000AE838);
    sub_100018000();
    sub_10008C780();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100013960(void *a1)
{
  return sub_100013798(a1, v1[1], v1[2], v1[3]);
}

uint64_t sub_100013984(uint64_t a1)
{
  v2[37] = a1;
  v2[38] = v1;
  uint64_t v3 = sub_10008BC20();
  v2[39] = v3;
  v2[40] = *(void *)(v3 - 8);
  v2[41] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  v2[42] = v4;
  v2[43] = *(void *)(v4 - 8);
  v2[44] = swift_task_alloc();
  sub_10000A390(&qword_1000AE710);
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  uint64_t v5 = sub_10008BA60();
  v2[47] = v5;
  v2[48] = *(void *)(v5 - 8);
  v2[49] = swift_task_alloc();
  uint64_t v6 = sub_10008B780();
  v2[50] = v6;
  v2[51] = *(void *)(v6 - 8);
  v2[52] = swift_task_alloc();
  uint64_t v7 = sub_10008B7A0();
  v2[53] = v7;
  v2[54] = *(void *)(v7 - 8);
  v2[55] = swift_task_alloc();
  uint64_t v8 = sub_10008BBB0();
  v2[56] = v8;
  v2[57] = *(void *)(v8 - 8);
  v2[58] = swift_task_alloc();
  return _swift_task_switch(sub_100013C84, v1, 0);
}

uint64_t sub_100013C84()
{
  uint64_t v123 = v0;
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  swift_retain();
  uint64_t v3 = sub_1000177DC(v1, v2);
  swift_release();
  uint64_t v5 = v3[2];
  if (v5)
  {
    uint64_t v6 = v3 + 5;
    uint64_t v7 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v8 = *((void *)v6 - 1);
      long long v119 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v121 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100016CEC(0, v7[2] + 1, 1);
        uint64_t v7 = v121;
      }
      unint64_t v10 = v7[2];
      unint64_t v9 = v7[3];
      if (v10 >= v9 >> 1)
      {
        sub_100016CEC(v9 > 1, v10 + 1, 1);
        uint64_t v7 = v121;
      }
      v7[2] = v10 + 1;
      unint64_t v11 = &v7[3 * v10];
      v11[4] = v8;
      *(_OWORD *)(v11 + 5) = v119;
      uint64_t v6 = (_OWORD *)((char *)v6 + 24);
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (v7[2])
  {
    if (qword_1000B1660 == -1) {
      goto LABEL_16;
    }
    while (1)
    {
      swift_once();
LABEL_16:
      uint64_t v12 = sub_10008BD50();
      *(void *)(v0 + 472) = sub_10000A358(v12, (uint64_t)qword_1000B6CC0);
      swift_retain_n();
      swift_retain();
      char v13 = sub_10008BD30();
      os_log_type_t v14 = sub_10008C310();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v121 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 134349314;
        *(void *)(v0 + 280) = v7[2];
        sub_10008C440();
        swift_release();
        *(_WORD *)(v15 + 12) = 2082;
        sub_100018074(&qword_1000AE720, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v16 = sub_10008C7A0();
        *(void *)(v0 + 288) = sub_100009D00(v16, v17, (uint64_t *)&v121);
        sub_10008C440();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "submitting %{public}ld events to %{public}s", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        swift_release();
      }
      uint64_t v20 = *(void *)(v0 + 456);
      uint64_t v19 = *(void *)(v0 + 464);
      uint64_t v21 = *(void *)(v0 + 448);
      uint64_t v22 = *(void *)(v0 + 304);
      sub_10008BB70();
      uint64_t v23 = getTimeIntervalSince1970(Date:)();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
      uint64_t v24 = *(void *)(v22 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_clientID);
      uint64_t v25 = *(void *)(v22 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_clientID + 8);
      uint64_t v115 = v24;
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_100016390((uint64_t)v7);
      swift_release();
      sub_10008B7E0();
      swift_allocObject();
      *(void *)(v0 + 480) = sub_10008B7D0();
      sub_10000A390(&qword_1000AE1E8);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_10008DC30;
      sub_10008B790();
      *(void *)(v0 + 264) = v27;
      sub_100018074(&qword_1000AE1F0, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
      sub_10000A390(&qword_1000AE1F8);
      sub_100017A18();
      sub_10008C480();
      sub_10008B7B0();
      *(double *)(v0 + 104) = (double)v23;
      *(void *)(v0 + 112) = v115;
      *(void *)(v0 + 120) = v25;
      *(void *)(v0 + 128) = v26;
      sub_100017A74();
      uint64_t v28 = sub_10008B7C0();
      *(void *)(v0 + 488) = 0;
      *(void *)(v0 + 496) = v28;
      *(void *)(v0 + 504) = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int64_t v30 = sub_100048E38();
      swift_beginAccess();
      if (*v30 == 1 && *sub_100049014() == 1)
      {
        uint64_t v31 = *(void *)(v0 + 304);
      }
      else
      {
        uint64_t v31 = *(void *)(v0 + 304);
        if ((*(unsigned char *)(v31 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_skipLogging) & 1) == 0)
        {
          uint64_t v37 = *(void *)(v31 + 120);
          *(void *)(v0 + 512) = v37;
          uint64_t v38 = (void *)(v31 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_name);
          *(void *)(v0 + 520) = *v38;
          *(void *)(v0 + 528) = v38[1];
          return _swift_task_switch(sub_10001506C, v37, 0);
        }
      }
      unint64_t v32 = *(void *)(v0 + 504);
      (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 384) + 16))(*(void *)(v0 + 392), v31 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_url, *(void *)(v0 + 376));
      sub_10008B740();
      switch(v32 >> 62)
      {
        case 1uLL:
          uint64_t v39 = *(void *)(v0 + 496);
          if (v39 >> 32 < (int)v39)
          {
            __break(1u);
LABEL_106:
            __break(1u);
          }
          unint64_t v40 = *(void *)(v0 + 504);
          sub_10000A494(*(void *)(v0 + 496), v40);
          sub_10000A494(v39, v40);
          sub_100017020((int)v39, v39 >> 32, v39, v40, (uint64_t)&v121);
          uint64_t v41 = *(void *)(v0 + 496);
          unint64_t v42 = *(void *)(v0 + 504);
          goto LABEL_32;
        case 2uLL:
          uint64_t v44 = *(void *)(v0 + 496);
          unint64_t v43 = *(void *)(v0 + 504);
          uint64_t v45 = *(void *)(v44 + 16);
          uint64_t v46 = *(void *)(v44 + 24);
          sub_10000A494(v44, v43);
          sub_10000A494(v44, v43);
          swift_retain();
          swift_retain();
          sub_100017020(v45, v46, v44, v43, (uint64_t)&v121);
          uint64_t v47 = *(void *)(v0 + 496);
          unint64_t v48 = *(void *)(v0 + 504);
          swift_release();
          swift_release();
          uint64_t v41 = v47;
          unint64_t v42 = v48;
LABEL_32:
          sub_10000A43C(v41, v42);
          goto LABEL_33;
        case 3uLL:
          uint64_t v33 = *(void *)(v0 + 496);
          unint64_t v34 = *(void *)(v0 + 504);
          *(void *)(v0 + 606) = 0;
          *(void *)(v0 + 612) = 0;
          unint64_t v36 = (Bytef *)(v0 + 606);
          uint64_t v35 = v0 + 606;
          goto LABEL_40;
        default:
          uint64_t v33 = *(void *)(v0 + 496);
          unint64_t v34 = *(void *)(v0 + 504);
          *(void *)(v0 + 592) = v33;
          *(_WORD *)(v0 + 600) = v34;
          *(unsigned char *)(v0 + 602) = BYTE2(v34);
          *(unsigned char *)(v0 + 603) = BYTE3(v34);
          *(unsigned char *)(v0 + 604) = BYTE4(v34);
          uint64_t v35 = v0 + 592 + BYTE6(v34);
          *(unsigned char *)(v0 + 605) = BYTE5(v34);
          unint64_t v36 = (Bytef *)(v0 + 592);
LABEL_40:
          sub_1000167D8(v36, v35, v33, v34, (uint64_t)&v121);
          uint64_t v54 = *(void *)(v0 + 496);
          unint64_t v53 = *(void *)(v0 + 504);
          sub_10000A43C(v54, v53);
          sub_10000A43C(v54, v53);
LABEL_33:
          uint64_t v49 = (uint64_t)v121;
          unint64_t v50 = v122;
          if (v122 >> 60 == 15) {
            uint64_t v51 = *(void *)(v0 + 496);
          }
          else {
            uint64_t v51 = (uint64_t)v121;
          }
          if (v122 >> 60 == 15) {
            unint64_t v52 = *(void *)(v0 + 504);
          }
          else {
            unint64_t v52 = v122;
          }
          *(void *)(v0 + 552) = v122;
          *(void *)(v0 + 544) = v49;
          sub_10000A494(v51, v52);
          sub_10008B760();
          sub_10008B730();
          if (v50 >> 60 != 15)
          {
            v129._object = (void *)0x8000000100092210;
            v125.value._countAndFlagsBits = 1885960807;
            v125.value._object = (void *)0xE400000000000000;
            v129._countAndFlagsBits = 0xD000000000000010;
            sub_10008B770(v125, v129);
          }
          v126.value._countAndFlagsBits = 0xD000000000000010;
          v126.value._object = (void *)0x80000001000921D0;
          v130._countAndFlagsBits = 0x747065636341;
          v130._object = (void *)0xE600000000000000;
          sub_10008B770(v126, v130);
          v127.value._countAndFlagsBits = 0xD000000000000010;
          v127.value._object = (void *)0x80000001000921D0;
          v131._countAndFlagsBits = 0x2D746E65746E6F43;
          v131._object = (void *)0xEC00000065707954;
          sub_10008B770(v127, v131);
          unint64_t v55 = sub_10008B750();
          if (v56 >> 60 == 15)
          {
            sub_10000A428(v49, v50);
            __break(1u);
            goto LABEL_108;
          }
          unint64_t v57 = v56;
          uint64_t v58 = v55;
          unint64_t v110 = v50;
          uint64_t v111 = v49;
          switch(v56 >> 62)
          {
            case 1uLL:
              unint64_t v60 = HIDWORD(v55);
              sub_10000A428(v55, v56);
              LODWORD(v59) = v60 - v58;
              if (__OFSUB__(v60, v58)) {
                goto LABEL_106;
              }
              uint64_t v59 = (int)v59;
              break;
            case 2uLL:
              uint64_t v62 = *(void *)(v55 + 16);
              uint64_t v61 = *(void *)(v55 + 24);
              sub_10000A428(v55, v56);
              uint64_t v59 = v61 - v62;
              if (!__OFSUB__(v61, v62)) {
                break;
              }
              __break(1u);
LABEL_51:
              sub_10000A428(v58, v57);
              uint64_t v59 = 0;
              break;
            case 3uLL:
              goto LABEL_51;
            default:
              sub_10000A428(v55, v56);
              uint64_t v59 = BYTE6(v57);
              break;
          }
          uint64_t v118 = *(void *)(v0 + 360);
          uint64_t v120 = *(void *)(v0 + 368);
          uint64_t v114 = *(void *)(v0 + 352);
          uint64_t v117 = *(void *)(v0 + 344);
          uint64_t v7 = *(void **)(v0 + 304);
          *(void *)(v0 + 248) = v59;
          v128.value._countAndFlagsBits = sub_10008C7A0();
          v132._countAndFlagsBits = 0x2D746E65746E6F43;
          v132._object = (void *)0xEE006874676E654CLL;
          sub_10008B770(v128, v132);
          swift_bridgeObjectRelease();
          uint64_t v63 = (char *)v7 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_extraHeaders;
          long long v64 = *(_OWORD *)((char *)v7 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_extraHeaders + 16);
          *(_OWORD *)(v0 + 16) = *(_OWORD *)((char *)v7
                                           + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_extraHeaders);
          *(_OWORD *)(v0 + 32) = v64;
          long long v66 = *((_OWORD *)v63 + 3);
          long long v65 = *((_OWORD *)v63 + 4);
          long long v67 = *((_OWORD *)v63 + 2);
          *(void *)(v0 + 96) = *((void *)v63 + 10);
          *(_OWORD *)(v0 + 64) = v66;
          *(_OWORD *)(v0 + 80) = v65;
          *(_OWORD *)(v0 + 48) = v67;
          unint64_t v68 = sub_1000400A8();
          unint64_t v69 = v68;
          int64_t v70 = 0;
          uint64_t v71 = *(void *)(v68 + 64);
          unint64_t v113 = v68 + 64;
          uint64_t v72 = -1;
          uint64_t v73 = -1 << *(unsigned char *)(v68 + 32);
          if (-v73 < 64) {
            uint64_t v72 = ~(-1 << -(char)v73);
          }
          unint64_t v74 = v72 & v71;
          unint64_t v112 = v68 + 104;
          int64_t v116 = (unint64_t)(63 - v73) >> 6;
          if ((v72 & v71) != 0)
          {
            while (1)
            {
              while (1)
              {
                unint64_t v77 = __clz(__rbit64(v74));
                v74 &= v74 - 1;
                unint64_t v78 = v77 | (v70 << 6);
LABEL_59:
                id v79 = *(void **)(v0 + 360);
                uint64_t v80 = (void *)(*(void *)(v69 + 48) + 16 * v78);
                uint64_t v81 = v80[1];
                *id v79 = *v80;
                *(void *)(v118 + 8) = v81;
                uint64_t v82 = *(void *)(v69 + 56) + *(void *)(v117 + 72) * v78;
                uint64_t v83 = sub_10000A390((uint64_t *)&unk_1000AF070);
                sub_100017AC8(v82, (uint64_t)v79 + *(int *)(v83 + 48));
                (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v79, 0, 1, v83);
                swift_bridgeObjectRetain();
LABEL_69:
                uint64_t v88 = *(void *)(v0 + 368);
                sub_100017B2C(*(void *)(v0 + 360), v88);
                uint64_t v89 = sub_10000A390((uint64_t *)&unk_1000AF070);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 48))(v88, 1, v89) == 1)
                {
                  uint64_t v96 = *(void *)(v0 + 320);
                  uint64_t v95 = *(void *)(v0 + 328);
                  uint64_t v98 = *(void *)(v0 + 304);
                  uint64_t v97 = *(void *)(v0 + 312);
                  swift_release();
                  objc_msgSend(*(id *)(v98 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_options), "copy", v110, v111, 0);
                  sub_10008C470();
                  swift_unknownObjectRelease();
                  sub_10000A8C8(0, &qword_1000AE718);
                  swift_dynamicCast();
                  double v99 = *(void **)(v0 + 216);
                  *(void *)(v0 + 560) = v99;
                  sub_10008BC10();
                  sub_10008BBC0();
                  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v95, v97);
                  NSString v100 = sub_10008BF80();
                  swift_bridgeObjectRelease();
                  [v99 setIdentifier:v100];

                  sub_10000A8C8(0, (unint64_t *)&qword_1000AF170);
                  Class isa = sub_10008C410(1).super.super.isa;
                  [v99 setUseNWLoaderOverride:isa];

                  uint64_t v102 = sub_10008BA10(1);
                  if (v103)
                  {
                    if (v102 == 0xD00000000000001BLL && v103 == 0x80000001000921F0)
                    {
                      swift_bridgeObjectRelease();
                      goto LABEL_94;
                    }
                    char v104 = sub_10008C7D0();
                    swift_bridgeObjectRelease();
                    if (v104)
                    {
LABEL_94:
                      Class v105 = sub_10008C410(1).super.super.isa;
                      [v99 setPrivacyProxyFailClosedOverride:v105];
                    }
                  }
                  if (*(void *)(v0 + 24) == 0x51424A3241394B34 && *(void *)(v0 + 32) == 0xEA00000000005832
                    || (sub_10008C7D0() & 1) != 0)
                  {
                    Class v106 = sub_10008C410(0).super.super.isa;
                    [v99 setUseNWLoaderOverride:v106];
                  }
                  objc_msgSend(v99, "set_optIntoDisableAPWakeOnIdleConnections:", 1);
                  id v107 = [self sharedManager];
                  *(void *)(v0 + 568) = v107;
                  if (v107)
                  {
                    uint64_t v108 = (void *)swift_task_alloc();
                    *(void *)(v0 + 576) = v108;
                    void *v108 = v0;
                    v108[1] = sub_100015E28;
                    uint64_t v109 = *(void *)(v0 + 416);
                    return C2RequestManager.data(for:options:)(v109, v99);
                  }
LABEL_108:
                  sub_10000A428(v111, v110);
                  __break(1u);
                  JUMPOUT(0x10001504CLL);
                }
                uint64_t v90 = *(uint64_t **)(v0 + 368);
                uint64_t v7 = *(void **)(v0 + 336);
                uint64_t v91 = *v90;
                uint64_t v92 = *(void **)(v120 + 8);
                sub_100017B94((uint64_t)v90 + *(int *)(v89 + 48), *(void *)(v0 + 352));
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload) {
                  break;
                }
                v75.value._countAndFlagsBits = **(void **)(v0 + 352);
                object = *(void **)(v114 + 8);
LABEL_57:
                v75.value._object = object;
                v133._countAndFlagsBits = v91;
                v133._object = v92;
                sub_10008B770(v75, v133);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (!v74) {
                  goto LABEL_60;
                }
              }
              if (EnumCaseMultiPayload == 2) {
                break;
              }
              if (EnumCaseMultiPayload == 1)
              {
                *(void *)(v0 + 232) = **(void **)(v0 + 352);
LABEL_75:
                v75.value._countAndFlagsBits = sub_10008C7A0();
                object = v75.value._object;
                goto LABEL_57;
              }
              uint64_t v94 = *(void *)(v0 + 352);
              swift_bridgeObjectRelease();
              sub_100018214(v94, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
              if (!v74) {
                goto LABEL_60;
              }
            }
            *(void *)(v0 + 224) = **(void **)(v0 + 352);
            goto LABEL_75;
          }
LABEL_60:
          int64_t v84 = v70 + 1;
          if (!__OFADD__(v70, 1))
          {
            if (v84 < v116)
            {
              unint64_t v85 = *(void *)(v113 + 8 * v84);
              if (v85)
              {
LABEL_63:
                unint64_t v74 = (v85 - 1) & v85;
                unint64_t v78 = __clz(__rbit64(v85)) + (v84 << 6);
                int64_t v70 = v84;
                goto LABEL_59;
              }
              if (v70 + 2 >= v116)
              {
                ++v70;
              }
              else
              {
                unint64_t v85 = *(void *)(v113 + 8 * (v70 + 2));
                if (v85)
                {
                  int64_t v84 = v70 + 2;
                  goto LABEL_63;
                }
                if (v70 + 3 >= v116)
                {
                  v70 += 2;
                }
                else
                {
                  unint64_t v85 = *(void *)(v113 + 8 * (v70 + 3));
                  if (v85)
                  {
                    int64_t v84 = v70 + 3;
                    goto LABEL_63;
                  }
                  int64_t v84 = v70 + 4;
                  if (v70 + 4 >= v116)
                  {
                    v70 += 3;
                  }
                  else
                  {
                    unint64_t v85 = *(void *)(v113 + 8 * v84);
                    if (v85) {
                      goto LABEL_63;
                    }
                    while (v116 - 5 != v70)
                    {
                      unint64_t v85 = *(void *)(v112 + 8 * v70++);
                      if (v85)
                      {
                        int64_t v84 = v70 + 4;
                        goto LABEL_63;
                      }
                    }
                    int64_t v70 = v116 - 1;
                  }
                }
              }
            }
            uint64_t v86 = *(void *)(v0 + 360);
            uint64_t v87 = sub_10000A390((uint64_t *)&unk_1000AF070);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 1, 1, v87);
            unint64_t v74 = 0;
            goto LABEL_69;
          }
          __break(1u);
          break;
      }
    }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_10001506C()
{
  uint64_t v1 = *(void *)(v0 + 488);
  sub_1000088C4(*(void *)(v0 + 520), *(void **)(v0 + 528), *(void *)(v0 + 496), *(void *)(v0 + 504));
  *(void *)(v0 + 536) = v1;
  uint64_t v2 = *(void *)(v0 + 304);
  if (v1) {
    uint64_t v3 = sub_100016124;
  }
  else {
    uint64_t v3 = sub_10001512C;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_10001512C()
{
  uint64_t v94 = v0;
  unint64_t v1 = v0 + 256;
  uint64_t v2 = *(void *)(v0 + 536);
  unint64_t v3 = *(void *)(v0 + 504);
  (*(void (**)(void))(*(void *)(v0 + 384) + 16))(*(void *)(v0 + 392));
  sub_10008B740();
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v8 = *(void *)(v0 + 496);
      uint64_t v9 = v8 >> 32;
      if (v8 >> 32 < (int)v8) {
        goto LABEL_82;
      }
      unint64_t v10 = *(void *)(v0 + 504);
      sub_10000A494(*(void *)(v0 + 496), v10);
      sub_10000A494(v8, v10);
      sub_100017020((int)v8, v8 >> 32, v8, v10, (uint64_t)&v92);
      uint64_t v11 = v2;
      sub_10000A43C(*(void *)(v0 + 496), *(void *)(v0 + 504));
      if (!v2) {
        goto LABEL_7;
      }
      goto LABEL_15;
    case 2uLL:
      uint64_t v12 = *(void *)(v0 + 496);
      unint64_t v13 = *(void *)(v0 + 504);
      uint64_t v15 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v12 + 24);
      sub_10000A494(v12, v13);
      sub_10000A494(v12, v13);
      swift_retain();
      swift_retain();
      sub_100017020(v15, v14, v12, v13, (uint64_t)&v92);
      uint64_t v11 = v2;
      uint64_t v17 = *(void *)(v0 + 496);
      unint64_t v16 = *(void *)(v0 + 504);
      swift_release();
      swift_release();
      sub_10000A43C(v17, v16);
      if (!v11) {
        goto LABEL_7;
      }
      goto LABEL_15;
    case 3uLL:
      uint64_t v4 = (Bytef *)(v0 + 606);
      uint64_t v5 = *(void *)(v0 + 496);
      unint64_t v6 = *(void *)(v0 + 504);
      *(void *)(v0 + 606) = 0;
      *(void *)(v0 + 612) = 0;
      uint64_t v7 = v0 + 606;
      goto LABEL_14;
    default:
      uint64_t v4 = (Bytef *)(v0 + 592);
      uint64_t v5 = *(void *)(v0 + 496);
      unint64_t v6 = *(void *)(v0 + 504);
      *(void *)(v0 + 592) = v5;
      *(_WORD *)(v0 + 600) = v6;
      *(unsigned char *)(v0 + 602) = BYTE2(v6);
      *(unsigned char *)(v0 + 603) = BYTE3(v6);
      *(unsigned char *)(v0 + 604) = BYTE4(v6);
      uint64_t v7 = v0 + 592 + BYTE6(v6);
      *(unsigned char *)(v0 + 605) = BYTE5(v6);
LABEL_14:
      sub_1000167D8(v4, v7, v5, v6, (uint64_t)&v92);
      uint64_t v11 = v2;
      uint64_t v20 = *(void *)(v0 + 496);
      unint64_t v21 = *(void *)(v0 + 504);
      sub_10000A43C(v20, v21);
      sub_10000A43C(v20, v21);
      if (v2)
      {
LABEL_15:
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v22 = sub_10008BD30();
        os_log_type_t v23 = sub_10008C2F0();
        uint64_t v82 = v11;
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          *(_DWORD *)uint64_t v24 = 136446210;
          swift_getErrorValue();
          uint64_t v25 = sub_10008C890();
          *(void *)(v0 + 256) = sub_100009D00(v25, v26, &v92);
          sub_10008C440();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "failed to compress payload: %{public}s", v24, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v9 = 0;
        uint64_t v18 = *(void *)(v0 + 496);
        unint64_t v19 = *(void *)(v0 + 504);
        unint64_t v1 = 0xF000000000000000;
      }
      else
      {
LABEL_7:
        uint64_t v82 = v11;
        uint64_t v9 = v92;
        unint64_t v1 = v93;
        if (v93 >> 60 == 15) {
          uint64_t v18 = *(void *)(v0 + 496);
        }
        else {
          uint64_t v18 = v92;
        }
        if (v93 >> 60 == 15) {
          unint64_t v19 = *(void *)(v0 + 504);
        }
        else {
          unint64_t v19 = v93;
        }
      }
      *(void *)(v0 + 552) = v1;
      *(void *)(v0 + 544) = v9;
      sub_10000A494(v18, v19);
      sub_10008B760();
      sub_10008B730();
      if (v1 >> 60 != 15)
      {
        v100._object = (void *)0x8000000100092210;
        v96.value._countAndFlagsBits = 1885960807;
        v96.value._object = (void *)0xE400000000000000;
        v100._countAndFlagsBits = 0xD000000000000010;
        sub_10008B770(v96, v100);
      }
      v97.value._countAndFlagsBits = 0xD000000000000010;
      v97.value._object = (void *)0x80000001000921D0;
      v101._countAndFlagsBits = 0x747065636341;
      v101._object = (void *)0xE600000000000000;
      sub_10008B770(v97, v101);
      v98.value._countAndFlagsBits = 0xD000000000000010;
      v98.value._object = (void *)0x80000001000921D0;
      v102._countAndFlagsBits = 0x2D746E65746E6F43;
      v102._object = (void *)0xEC00000065707954;
      sub_10008B770(v98, v102);
      unint64_t v27 = sub_10008B750();
      if (v28 >> 60 == 15) {
        goto LABEL_84;
      }
      unint64_t v29 = v28;
      uint64_t v30 = v27;
      unint64_t v83 = v1;
      uint64_t v84 = v9;
      switch(v28 >> 62)
      {
        case 1uLL:
          unint64_t v32 = HIDWORD(v27);
          sub_10000A428(v27, v28);
          LODWORD(v31) = v32 - v30;
          if (__OFSUB__(v32, v30)) {
            goto LABEL_83;
          }
          uint64_t v31 = (int)v31;
          break;
        case 2uLL:
          uint64_t v34 = *(void *)(v27 + 16);
          uint64_t v33 = *(void *)(v27 + 24);
          sub_10000A428(v27, v28);
          uint64_t v31 = v33 - v34;
          if (!__OFSUB__(v33, v34)) {
            break;
          }
          __break(1u);
LABEL_29:
          sub_10000A428(v30, v29);
          uint64_t v31 = 0;
          break;
        case 3uLL:
          goto LABEL_29;
        default:
          sub_10000A428(v27, v28);
          uint64_t v31 = BYTE6(v29);
          break;
      }
      uint64_t v91 = *(void *)(v0 + 368);
      uint64_t v87 = *(void *)(v0 + 352);
      uint64_t v89 = *(void *)(v0 + 344);
      uint64_t v90 = *(void *)(v0 + 360);
      uint64_t v35 = *(void *)(v0 + 304);
      *(void *)(v0 + 248) = v31;
      v99.value._countAndFlagsBits = sub_10008C7A0();
      v103._countAndFlagsBits = 0x2D746E65746E6F43;
      v103._object = (void *)0xEE006874676E654CLL;
      sub_10008B770(v99, v103);
      swift_bridgeObjectRelease();
      uint64_t v36 = v35 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_extraHeaders;
      long long v37 = *(_OWORD *)(v35 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_extraHeaders + 16);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v35 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_extraHeaders);
      *(_OWORD *)(v0 + 32) = v37;
      long long v39 = *(_OWORD *)(v36 + 48);
      long long v38 = *(_OWORD *)(v36 + 64);
      long long v40 = *(_OWORD *)(v36 + 32);
      *(void *)(v0 + 96) = *(void *)(v36 + 80);
      *(_OWORD *)(v0 + 64) = v39;
      *(_OWORD *)(v0 + 80) = v38;
      *(_OWORD *)(v0 + 48) = v40;
      unint64_t v41 = sub_1000400A8();
      unint64_t v42 = v41;
      int64_t v43 = 0;
      uint64_t v44 = *(void *)(v41 + 64);
      unint64_t v86 = v41 + 64;
      uint64_t v45 = -1;
      uint64_t v46 = -1 << *(unsigned char *)(v41 + 32);
      if (-v46 < 64) {
        uint64_t v45 = ~(-1 << -(char)v46);
      }
      unint64_t v47 = v45 & v44;
      unint64_t v85 = v41 + 104;
      int64_t v88 = (unint64_t)(63 - v46) >> 6;
      if ((v45 & v44) == 0) {
        goto LABEL_38;
      }
      break;
  }
LABEL_36:
  unint64_t v50 = __clz(__rbit64(v47));
  v47 &= v47 - 1;
  unint64_t v51 = v50 | (v43 << 6);
LABEL_37:
  unint64_t v52 = *(void **)(v0 + 360);
  unint64_t v53 = (void *)(*(void *)(v42 + 48) + 16 * v51);
  uint64_t v54 = v53[1];
  *unint64_t v52 = *v53;
  *(void *)(v90 + 8) = v54;
  uint64_t v55 = *(void *)(v42 + 56) + *(void *)(v89 + 72) * v51;
  uint64_t v56 = sub_10000A390((uint64_t *)&unk_1000AF070);
  sub_100017AC8(v55, (uint64_t)v52 + *(int *)(v56 + 48));
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v52, 0, 1, v56);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v61 = *(void *)(v0 + 368);
    sub_100017B2C(*(void *)(v0 + 360), v61);
    uint64_t v62 = sub_10000A390((uint64_t *)&unk_1000AF070);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v61, 1, v62) == 1) {
      break;
    }
    uint64_t v63 = *(unint64_t **)(v0 + 368);
    unint64_t v1 = *v63;
    uint64_t v9 = *(void *)(v91 + 8);
    sub_100017B94((uint64_t)v63 + *(int *)(v62 + 48), *(void *)(v0 + 352));
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 0:
        v48.value._countAndFlagsBits = **(void **)(v0 + 352);
        object = *(void **)(v87 + 8);
        goto LABEL_35;
      case 2:
        *(void *)(v0 + 224) = **(void **)(v0 + 352);
LABEL_53:
        v48.value._countAndFlagsBits = sub_10008C7A0();
        object = v48.value._object;
LABEL_35:
        v48.value._object = object;
        v104._countAndFlagsBits = v1;
        v104._object = (void *)v9;
        sub_10008B770(v48, v104);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v47) {
          goto LABEL_36;
        }
        goto LABEL_38;
      case 1:
        *(void *)(v0 + 232) = **(void **)(v0 + 352);
        goto LABEL_53;
    }
    uint64_t v65 = *(void *)(v0 + 352);
    swift_bridgeObjectRelease();
    sub_100018214(v65, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    if (v47) {
      goto LABEL_36;
    }
LABEL_38:
    int64_t v57 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      sub_10000A428(v9, v1);
      __break(1u);
      goto LABEL_85;
    }
    if (v57 >= v88) {
      goto LABEL_46;
    }
    unint64_t v58 = *(void *)(v86 + 8 * v57);
    if (v58) {
      goto LABEL_41;
    }
    if (v43 + 2 >= v88)
    {
      ++v43;
      goto LABEL_46;
    }
    unint64_t v58 = *(void *)(v86 + 8 * (v43 + 2));
    if (v58)
    {
      int64_t v57 = v43 + 2;
      goto LABEL_41;
    }
    if (v43 + 3 >= v88)
    {
      v43 += 2;
      goto LABEL_46;
    }
    unint64_t v58 = *(void *)(v86 + 8 * (v43 + 3));
    if (v58)
    {
      int64_t v57 = v43 + 3;
LABEL_41:
      unint64_t v47 = (v58 - 1) & v58;
      unint64_t v51 = __clz(__rbit64(v58)) + (v57 << 6);
      int64_t v43 = v57;
      goto LABEL_37;
    }
    int64_t v57 = v43 + 4;
    if (v43 + 4 >= v88)
    {
      v43 += 3;
    }
    else
    {
      unint64_t v58 = *(void *)(v86 + 8 * v57);
      if (v58) {
        goto LABEL_41;
      }
      while (v88 - 5 != v43)
      {
        unint64_t v58 = *(void *)(v85 + 8 * v43++);
        if (v58)
        {
          int64_t v57 = v43 + 4;
          goto LABEL_41;
        }
      }
      int64_t v43 = v88 - 1;
    }
LABEL_46:
    uint64_t v59 = *(void *)(v0 + 360);
    uint64_t v60 = sub_10000A390((uint64_t *)&unk_1000AF070);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
    unint64_t v47 = 0;
  }
  uint64_t v67 = *(void *)(v0 + 320);
  uint64_t v66 = *(void *)(v0 + 328);
  uint64_t v69 = *(void *)(v0 + 304);
  uint64_t v68 = *(void *)(v0 + 312);
  swift_release();
  objc_msgSend(*(id *)(v69 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_options), "copy", v82, v83, v84);
  sub_10008C470();
  swift_unknownObjectRelease();
  sub_10000A8C8(0, &qword_1000AE718);
  swift_dynamicCast();
  int64_t v70 = *(void **)(v0 + 216);
  *(void *)(v0 + 560) = v70;
  sub_10008BC10();
  sub_10008BBC0();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
  NSString v71 = sub_10008BF80();
  swift_bridgeObjectRelease();
  [v70 setIdentifier:v71];

  sub_10000A8C8(0, (unint64_t *)&qword_1000AF170);
  Class isa = sub_10008C410(1).super.super.isa;
  [v70 setUseNWLoaderOverride:isa];

  uint64_t v73 = sub_10008BA10(1);
  if (v74)
  {
    if (v73 == 0xD00000000000001BLL && v74 == 0x80000001000921F0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_72;
    }
    char v75 = sub_10008C7D0();
    swift_bridgeObjectRelease();
    if (v75)
    {
LABEL_72:
      Class v76 = sub_10008C410(1).super.super.isa;
      [v70 setPrivacyProxyFailClosedOverride:v76];
    }
  }
  if (*(void *)(v0 + 24) == 0x51424A3241394B34 && *(void *)(v0 + 32) == 0xEA00000000005832
    || (sub_10008C7D0() & 1) != 0)
  {
    Class v77 = sub_10008C410(0).super.super.isa;
    [v70 setUseNWLoaderOverride:v77];
  }
  objc_msgSend(v70, "set_optIntoDisableAPWakeOnIdleConnections:", 1);
  id v78 = [self sharedManager];
  *(void *)(v0 + 568) = v78;
  if (!v78)
  {
LABEL_85:
    sub_10000A428(v84, v83);
    __break(1u);
  }
  id v79 = (void *)swift_task_alloc();
  *(void *)(v0 + 576) = v79;
  *id v79 = v0;
  v79[1] = sub_100015E28;
  uint64_t v80 = *(void *)(v0 + 416);
  return C2RequestManager.data(for:options:)(v80, v70);
}

uint64_t sub_100015E28(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v8 = *v4;
  *(void *)(*v4 + 584) = v3;
  swift_task_dealloc();
  uint64_t v9 = *(void **)(v8 + 568);
  uint64_t v10 = *(void *)(v8 + 304);
  if (v3)
  {

    uint64_t v11 = sub_100016238;
  }
  else
  {
    sub_10000A43C(a1, a2);

    uint64_t v11 = sub_100015FCC;
  }
  return _swift_task_switch(v11, v10, 0);
}

uint64_t sub_100015FCC()
{
  unint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 496);
  unint64_t v3 = *(void *)(v0 + 504);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);

  swift_release();
  sub_10000A43C(v4, v3);
  sub_10000A428(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100016124()
{
  sub_10000A43C(v0[62], v0[63]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100016238()
{
  unint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 496);
  unint64_t v3 = *(void *)(v0 + 504);
  uint64_t v6 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);

  swift_release();
  sub_10000A43C(v4, v3);
  sub_10000A428(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

void *sub_100016390(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100016CCC(0, v1, 0);
    unint64_t v3 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v4 = *v3;
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v6 >= v5 >> 1) {
        sub_100016CCC(v5 > 1, v6 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v6 + 1;
      _swiftEmptyArrayStorage[v6 + 4] = v4;
      v3 += 3;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100016460()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_name);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_name + 8);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v1;
  v4._object = v2;
  sub_10008C090(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 539828258;
  v5._object = (void *)0xE400000000000000;
  sub_10008C090(v5);
  sub_10008BA60();
  sub_100018074(&qword_1000AE720, (void (*)(uint64_t))&type metadata accessor for URL);
  v6._countAndFlagsBits = sub_10008C7A0();
  sub_10008C090(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  sub_10008C090(v7);
  return 8744;
}

uint64_t sub_100016560()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_url;
  uint64_t v2 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100016664()
{
  sub_100016560();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100016690(uint64_t a1)
{
  Swift::String v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  Swift::String v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *Swift::String v4 = v2;
  v4[1] = sub_10000AA94;
  return v6(a1);
}

uint64_t sub_100016794()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t sub_1000167D8@<X0>(Bytef *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  memset(&strm.total_in, 0, 20);
  uLong v6 = a2 - (void)a1;
  memset(&strm.total_out, 0, 32);
  if (a1) {
    unint64_t v7 = a2 - (void)a1;
  }
  else {
    unint64_t v7 = 0;
  }
  memset(&strm.zfree, 0, 20);
  strm.adler = 0;
  strm.reserved = 0;
  if ((v7 & 0x8000000000000000) != 0 || HIDWORD(v7))
  {
    sub_10008C630();
    __break(1u);
    JUMPOUT(0x100016BACLL);
  }
  strm.avail_in = v7;
  if (!a1) {
LABEL_40:
  }
    __break(1u);
  strm.next_in = a1;
  int v10 = deflateInit2_(&strm, -1, 8, 31, 8, 0, "1.2.12", 112);
  if (v10)
  {
    int v11 = v10;
    sub_1000180BC();
    swift_allocError();
    *uint64_t v12 = v11;
    return swift_willThrow();
  }
  uLong v14 = deflateBound(&strm, v6);
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v28 = sub_100018110(v14);
  unint64_t v29 = v15;
  if (sub_1000170E0(&v28, &strm) != 1)
  {
    if (qword_1000B1660 == -1)
    {
LABEL_15:
      uint64_t v18 = sub_10008BD50();
      sub_10000A358(v18, (uint64_t)qword_1000B6CC0);
      unint64_t v19 = sub_10008BD30();
      os_log_type_t v20 = sub_10008C300();
      if (os_log_type_enabled(v19, v20))
      {
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v21 = 67240192;
        sub_10008C440();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "zlib returned unexpected status %{public}d", v21, 8u);
        swift_slowDealloc();
      }

      *(_OWORD *)a5 = xmmword_10008E3D0;
      sub_10000A43C(v28, v29);
      return deflateEnd(&strm);
    }
LABEL_35:
    swift_once();
    goto LABEL_15;
  }
  if ((strm.total_out & 0x8000000000000000) != 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_10008BAB0();
  unint64_t v16 = v29;
  uint64_t v17 = 0;
  switch(v29 >> 62)
  {
    case 1uLL:
      LODWORD(v17) = HIDWORD(v28) - v28;
      if (__OFSUB__(HIDWORD(v28), v28))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v17 = (int)v17;
LABEL_21:
      switch(a4 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_39;
          }
          if (v17 >= HIDWORD(a3) - (int)a3) {
            goto LABEL_28;
          }
          goto LABEL_26;
        case 2uLL:
          uint64_t v26 = *(void *)(a3 + 16);
          uint64_t v25 = *(void *)(a3 + 24);
          BOOL v24 = __OFSUB__(v25, v26);
          uint64_t v27 = v25 - v26;
          if (v24) {
            goto LABEL_38;
          }
          if (v17 >= v27)
          {
LABEL_28:
            sub_10000A43C(v28, v29);
            *(_OWORD *)a5 = xmmword_10008E3D0;
          }
          else
          {
LABEL_26:
            *(void *)a5 = v28;
            *(void *)(a5 + 8) = v16;
          }
          break;
        case 3uLL:
          if ((v17 & 0x8000000000000000) == 0) {
            goto LABEL_28;
          }
          goto LABEL_26;
        default:
          if (v17 >= BYTE6(a4)) {
            goto LABEL_28;
          }
          goto LABEL_26;
      }
      return deflateEnd(&strm);
    case 2uLL:
      uint64_t v23 = *(void *)(v28 + 16);
      uint64_t v22 = *(void *)(v28 + 24);
      BOOL v24 = __OFSUB__(v22, v23);
      uint64_t v17 = v22 - v23;
      if (!v24) {
        goto LABEL_21;
      }
      goto LABEL_37;
    case 3uLL:
      goto LABEL_21;
    default:
      uint64_t v17 = BYTE6(v29);
      goto LABEL_21;
  }
}

uint64_t sub_100016BCC@<X0>(z_streamp strm@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, _DWORD *a4@<X8>)
{
  if (a2) {
    uLong v5 = a3 - a2;
  }
  else {
    uLong v5 = 0;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_13;
  }
  uLong total_out = strm->total_out;
  BOOL v7 = v5 >= total_out;
  uLong v8 = v5 - total_out;
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (!HIDWORD(v8))
  {
    strm->avail_out = v8;
    if (!a2)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    if ((total_out & 0x8000000000000000) == 0)
    {
      strm->next_out = (Bytef *)(a2 + total_out);
      uint64_t result = deflate(strm, 4);
      *a4 = result;
      return result;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
LABEL_13:
  uint64_t result = sub_10008C630();
  __break(1u);
  return result;
}

uint64_t sub_100016CCC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100016D0C(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_100016CEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100016E98(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100016D0C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A390(&qword_1000AE850);
    int v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_10000A390((uint64_t *)&unk_1000AF050);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100016E98(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A390(&qword_1000AE858);
    int v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100017020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t result = sub_10008B830();
  size_t v11 = (Bytef *)result;
  if (result)
  {
    uint64_t result = sub_10008B860();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  BOOL v12 = __OFSUB__(a2, a1);
  uint64_t v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v14 = sub_10008B850();
  if (v14 >= v13) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  unint64_t v16 = &v11[v15];
  if (v11) {
    uint64_t v17 = (uint64_t)v16;
  }
  else {
    uint64_t v17 = 0;
  }
  sub_1000167D8(v11, v17, a3, a4, a5);
  return sub_10000A43C(a3, a4);
}

uint64_t sub_1000170E0(uint64_t *a1, z_streamp strm)
{
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_10008E3E0;
      uint64_t v10 = v4 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_14;
      }
      if (v10 < (int)v4) {
        goto LABEL_18;
      }
      if (sub_10008B830() && __OFSUB__((int)v4, sub_10008B860())) {
        goto LABEL_19;
      }
      sub_10008B870();
      swift_allocObject();
      uint64_t v12 = sub_10008B810();
      swift_release();
      uint64_t v9 = v12;
LABEL_14:
      if (v10 < (int)v4)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
      }
      uint64_t result = sub_1000173C4((int)v4, v4 >> 32, v9, strm);
      *a1 = v4;
      a1[1] = v9 | 0x4000000000000000;
      return result;
    case 2uLL:
      *(void *)&long long v14 = *a1;
      *((void *)&v14 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_10008BA70();
      uint64_t v11 = *((void *)&v14 + 1);
      uint64_t result = sub_1000173C4(*(void *)(v14 + 16), *(void *)(v14 + 24), *((uint64_t *)&v14 + 1), strm);
      *a1 = v14;
      a1[1] = v11 | 0x8000000000000000;
      return result;
    case 3uLL:
      *(void *)((char *)&v14 + 7) = 0;
      *(void *)&long long v14 = 0;
      uint64_t result = sub_100016BCC(strm, (uint64_t)&v14, (uint64_t)&v14, &v13);
      if (!v2) {
        return v13;
      }
      return result;
    default:
      *(void *)&long long v14 = *a1;
      WORD4(v14) = v3;
      BYTE10(v14) = BYTE2(v3);
      BYTE11(v14) = BYTE3(v3);
      BYTE12(v14) = BYTE4(v3);
      BYTE13(v14) = BYTE5(v3);
      BYTE14(v14) = BYTE6(v3);
      uint64_t result = sub_100016BCC(strm, (uint64_t)&v14, (uint64_t)&v14 + BYTE6(v3), &v13);
      if (!v2) {
        uint64_t result = v13;
      }
      unint64_t v8 = DWORD2(v14) | ((unint64_t)BYTE12(v14) << 32) | ((unint64_t)BYTE13(v14) << 40) | ((unint64_t)BYTE14(v14) << 48);
      *a1 = v14;
      a1[1] = v8;
      return result;
  }
}

uint64_t sub_1000173C4(uint64_t a1, uint64_t a2, uint64_t a3, z_stream *a4)
{
  uint64_t result = sub_10008B830();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v9 = result;
  uint64_t result = sub_10008B860();
  uint64_t v10 = a1 - result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v13 = sub_10008B850();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  uint64_t result = sub_100016BCC(a4, v9 + v10, v9 + v10 + v14, &v15);
  if (!v4) {
    return v15;
  }
  return result;
}

uint64_t sub_100017468(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v8 = v7;
  swift_defaultActor_initialize();
  unint64_t v16 = (void *)(v8 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_clientID);
  void *v16 = a5;
  v16[1] = a6;
  *(void *)(v8 + 112) = a3;
  *(void *)(v8 + 120) = a1;
  uint64_t v36 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
  uint64_t v17 = (char *)a4 + v36[6];
  uint64_t v18 = v8 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_url;
  uint64_t v19 = sub_10008BA60();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v17, v19);
  *(void *)(v8 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_options) = a7;
  os_log_type_t v20 = a7;
  uint64_t v22 = a2[3];
  uint64_t v21 = a2[4];
  sub_10000A784(a2, v22);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
  swift_retain();
  swift_retain();
  id v24 = v20;
  uint64_t v25 = v23(v22, v21);
  uint64_t v27 = v26;
  uint64_t v28 = a2[3];
  uint64_t v29 = a2[4];
  sub_10000A784(a2, v28);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v29 + 8))(v37, v28, v29);
  sub_10003FFCC(v25, v27, v37, *((unsigned char *)a4 + v36[8]), (uint64_t)v38);
  uint64_t v30 = v8 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_extraHeaders;
  long long v31 = v38[3];
  *(_OWORD *)(v30 + 32) = v38[2];
  *(_OWORD *)(v30 + 48) = v31;
  *(_OWORD *)(v30 + 64) = v38[4];
  *(void *)(v30 + 80) = v39;
  long long v32 = v38[1];
  *(_OWORD *)uint64_t v30 = v38[0];
  *(_OWORD *)(v30 + 16) = v32;
  *(void *)(v8 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_filters) = *(void *)((char *)a4 + v36[7]);
  uint64_t v33 = a4[1];
  uint64_t v34 = (void *)(v8 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_name);
  *uint64_t v34 = *a4;
  v34[1] = v33;
  LOBYTE(v23) = *((unsigned char *)a4 + v36[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100018214((uint64_t)a4, type metadata accessor for SessionConfiguration.BackendHTTP);
  *(unsigned char *)(v8 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_skipLogging) = (_BYTE)v23;
  sub_10000CCE8((uint64_t)a2);
  return v8;
}

uint64_t sub_10001769C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x656D695474736F70 && a2 == 0xE800000000000000;
  if (v3 || (sub_10008C7D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E65696C63 && a2 == 0xE800000000000000 || (sub_10008C7D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_10008C7D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_1000177DC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uLong v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    uint64_t v33 = _swiftEmptyArrayStorage;
    sub_100016CEC(0, v4, 0);
    uint64_t v8 = 0;
    uLong v5 = _swiftEmptyArrayStorage;
    uint64_t v9 = a1 + 32;
    uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC21CloudTelemetryService11BackendHTTP_filters);
    uint64_t v23 = v10;
    uint64_t v24 = v10 + 32;
    int64_t v22 = v4;
    while (1)
    {
      BOOL v11 = (uint64_t *)(v9 + 24 * v8);
      uint64_t v12 = *v11;
      long long v25 = *(_OWORD *)(v11 + 1);
      uint64_t v31 = *v11;
      long long v32 = v25;
      uint64_t v13 = *(void *)(v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13) {
        break;
      }
      long long v17 = v25;
LABEL_9:
      uint64_t v33 = v5;
      unint64_t v19 = v5[2];
      unint64_t v18 = v5[3];
      if (v19 >= v18 >> 1)
      {
        long long v27 = v17;
        sub_100016CEC(v18 > 1, v19 + 1, 1);
        long long v17 = v27;
        uLong v5 = v33;
      }
      ++v8;
      v5[2] = v19 + 1;
      os_log_type_t v20 = &v5[3 * v19];
      v20[4] = v12;
      *(_OWORD *)(v20 + 5) = v17;
      if (v8 == v4) {
        return v5;
      }
    }
    uint64_t v26 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v24;
    while (1)
    {
      sub_1000181B0(v14, (uint64_t)v28);
      uint64_t v16 = v29;
      uint64_t v15 = v30;
      sub_10000A784(v28, v29);
      uLong v5 = v3;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(&v31, v16, v15);
      if (v3) {
        break;
      }
      sub_10000CCE8((uint64_t)v28);
      v14 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v23;
        swift_bridgeObjectRelease();
        uint64_t v12 = v31;
        long long v17 = v32;
        uLong v5 = v26;
        uint64_t v9 = a1 + 32;
        int64_t v4 = v22;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000CCE8((uint64_t)v28);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_100017A18()
{
  unint64_t result = qword_1000AE200;
  if (!qword_1000AE200)
  {
    sub_10000A540(&qword_1000AE1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE200);
  }
  return result;
}

unint64_t sub_100017A74()
{
  unint64_t result = qword_1000B1668[0];
  if (!qword_1000B1668[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B1668);
  }
  return result;
}

uint64_t sub_100017AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AE710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017BF8()
{
  return type metadata accessor for BackendHTTP();
}

uint64_t type metadata accessor for BackendHTTP()
{
  uint64_t result = qword_1000B17F0;
  if (!qword_1000B17F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100017C4C()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

_DWORD *_s9ZLibErrorOwCP(_DWORD *result, _DWORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t _s9ZLibErrorOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s9ZLibErrorOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *_s9ZLibErrorOMa()
{
  return &_s9ZLibErrorON;
}

uint64_t initializeBufferWithCopyOfBuffer for ClientIdentity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for BackendHTTP.POSTData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BackendHTTP.POSTData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BackendHTTP.POSTData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BackendHTTP.POSTData(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for BackendHTTP.POSTData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BackendHTTP.POSTData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BackendHTTP.POSTData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackendHTTP.POSTData()
{
  return &type metadata for BackendHTTP.POSTData;
}

unint64_t sub_100017FAC()
{
  unint64_t result = qword_1000B1880[0];
  if (!qword_1000B1880[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B1880);
  }
  return result;
}

unint64_t sub_100018000()
{
  unint64_t result = qword_1000AE840;
  if (!qword_1000AE840)
  {
    sub_10000A540(&qword_1000AE838);
    sub_10000A81C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE840);
  }
  return result;
}

uint64_t sub_100018074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000180BC()
{
  unint64_t result = qword_1000AE848;
  if (!qword_1000AE848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE848);
  }
  return result;
}

uint64_t sub_100018110(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_10008B870();
      swift_allocObject();
      sub_10008B840();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_10008BAA0();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1000181B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100018214(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *initializeBufferWithCopyOfBuffer for StorebagBool(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BackendHTTP.POSTData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BackendHTTP.POSTData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000183DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_100018404(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10001840C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BackendHTTP.POSTData.CodingKeys()
{
  return &type metadata for BackendHTTP.POSTData.CodingKeys;
}

unint64_t sub_100018428()
{
  unint64_t result = qword_1000B1990[0];
  if (!qword_1000B1990[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B1990);
  }
  return result;
}

unint64_t sub_100018480()
{
  unint64_t result = qword_1000B1AA0;
  if (!qword_1000B1AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B1AA0);
  }
  return result;
}

unint64_t sub_1000184D8()
{
  unint64_t result = qword_1000B1AA8[0];
  if (!qword_1000B1AA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B1AA8);
  }
  return result;
}

uint64_t sub_10001852C()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B1B38);
  sub_10000A358(v0, (uint64_t)qword_1000B1B38);
  return sub_10008BD40();
}

uint64_t sub_1000185B0()
{
  return swift_weakLoadStrong();
}

uint64_t sub_1000185F4()
{
  return swift_release();
}

void (*sub_100018648(void *a1))(void **a1, char a2)
{
  int v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_weakLoadStrong();
  return sub_1000186C4;
}

void sub_1000186C4(void **a1, char a2)
{
  int v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
  }
  free(v3);
}

unint64_t sub_100018744(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A390(&qword_1000AEA08);
  int v2 = (void *)sub_10008C680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100011F50(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100018858(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A390(&qword_1000AEA20);
  int v2 = (void *)sub_10008C680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100011F50(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100018974()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000189AC(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1000189F4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100018A48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100018A80(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 136) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100018AC8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100018B1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100018B54(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 144) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100018B9C())()
{
  return j__swift_endAccess;
}

uint64_t sub_100018BF4(char a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100018CB4;
  return sub_100018DB4(a1, a2, a3);
}

uint64_t sub_100018CB4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100018DB4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  *(void *)(v4 + 96) = a3;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 88) = a2;
  *(unsigned char *)(v4 + 160) = a1;
  *(void *)(v4 + 112) = *v5;
  uint64_t v7 = sub_10008BA60();
  *(void *)(v4 + 120) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v4 + 128) = v8;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v4 + 136) = v9;
  swift_defaultActor_initialize();
  swift_weakInit();
  v5[16] = sub_100018744((uint64_t)_swiftEmptyArrayStorage);
  v5[17] = &_swiftEmptySetSingleton;
  v5[18] = sub_100018858((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for StorebagCoordinator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, a3, v7);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_100018F68;
  return sub_100067F30(v9);
}

uint64_t sub_100018F68(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[16];
    uint64_t v7 = v4[15];
    uint64_t v8 = v4[12];
    swift_weakDestroy();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for SessionCoordinator();
    swift_defaultActor_destroy();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v7);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v5[1];
    return v9();
  }
  else
  {
    uint64_t v11 = v4[13];
    *(void *)(v11 + 112) = a1;
    return _swift_task_switch(sub_100019140, v11, 0);
  }
}

uint64_t sub_100019140()
{
  char v1 = *(unsigned char *)(v0 + 160);
  swift_beginAccess();
  swift_weakAssign();
  if (v1)
  {
    swift_release();
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 120));
    swift_task_dealloc();
    int v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v3 = *(void *)(v0 + 104);
    return v2(v3);
  }
  else
  {
    uint64_t v5 = *(int **)(**(void **)(v0 + 104) + 264);
    uint64_t v7 = (uint64_t (*)(void))((char *)v5 + *v5);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v6;
    void *v6 = v0;
    v6[1] = sub_1000192E8;
    return v7();
  }
}

uint64_t sub_1000192E8()
{
  char v1 = (void *)*v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  id v5 = [self defaultCenter];
  uint64_t v6 = MCEffectiveSettingsChangedNotification;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v2;
  v1[6] = sub_1000197C8;
  v1[7] = v7;
  v1[2] = _NSConcreteStackBlock;
  v1[3] = 1107296256;
  v1[4] = sub_100019A74;
  v1[5] = &unk_1000A61D0;
  uint64_t v8 = _Block_copy(v1 + 2);
  swift_retain();
  swift_release();
  id v9 = [v5 addObserverForName:v6 object:0 queue:0 usingBlock:v8];
  _Block_release(v8);
  swift_release();
  swift_unknownObjectRelease();

  (*(void (**)(void, void))(v1[16] + 8))(v1[12], v1[15]);
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v4 + 8);
  uint64_t v11 = v1[13];
  return v10(v11);
}

uint64_t type metadata accessor for SessionCoordinator()
{
  return self;
}

uint64_t sub_1000195D4(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AE3A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10008BD50();
  sub_10000A358(v5, (uint64_t)qword_1000B1B38);
  uint64_t v6 = sub_10008BD30();
  os_log_type_t v7 = sub_10008C310();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "received notification for MC effective settings change", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t v9 = sub_10008C220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  swift_retain();
  sub_1000198D0((uint64_t)v4, (uint64_t)&unk_1000AEA18, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100019790()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000197C8()
{
  return sub_1000195D4(*(void *)(v0 + 16));
}

uint64_t sub_1000197D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v7 = (uint64_t (*)(void))(*(void *)(*(void *)a4 + 264) + **(int **)(*(void *)a4 + 264));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_10001F8C8;
  return v7();
}

uint64_t sub_1000198D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10008C220();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_10008C210();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10001EA6C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10008C1D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100019A74(uint64_t a1)
{
  uint64_t v2 = sub_10008B800();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_10008B7F0();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100019B68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100019B78()
{
  return swift_release();
}

uint64_t sub_100019B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[42] = a4;
  v5[43] = v4;
  v5[40] = a2;
  v5[41] = a3;
  v5[39] = a1;
  v5[44] = *(void *)(a3 - 8);
  v5[45] = swift_task_alloc();
  return _swift_task_switch(sub_100019C3C, v4, 0);
}

uint64_t sub_100019C3C()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(*(void *)(v0 + 344) + 112);
  *(void *)(v0 + 368) = v3;
  long long v9 = *(_OWORD *)(v0 + 328);
  *(_OWORD *)(v0 + 216) = v9;
  uint64_t v4 = sub_10001A5FC((uint64_t *)(v0 + 192));
  uint64_t v5 = *(void (**)(uint64_t *, uint64_t, void))(v1 + 16);
  *(void *)(v0 + 376) = v5;
  *(void *)(v0 + 384) = (v1 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v4, v2, v9);
  uint64_t v8 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v3 + 128) + **(int **)(*(void *)v3 + 128));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v6;
  void *v6 = v0;
  v6[1] = sub_100019D98;
  return v8(v0 + 192);
}

uint64_t sub_100019D98(char a1)
{
  uint64_t v2 = *(void *)v1 + 192;
  uint64_t v3 = *(void *)(*(void *)v1 + 344);
  *(unsigned char *)(*(void *)v1 + 432) = a1;
  swift_task_dealloc();
  sub_10000CCE8(v2);
  return _swift_task_switch(sub_100019EBC, v3, 0);
}

uint64_t sub_100019EBC()
{
  if (static Mode.__derived_enum_equals(_:_:)(*(unsigned char *)(v0 + 432), 3)
    || static Mode.__derived_enum_equals(_:_:)(*(unsigned char *)(v0 + 432), 2))
  {
    uint64_t v1 = v0 + 272;
    uint64_t v2 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v0 + 376);
    uint64_t v3 = *(void *)(v0 + 368);
    uint64_t v5 = *(void *)(v0 + 328);
    uint64_t v4 = *(void *)(v0 + 336);
    uint64_t v6 = *(void *)(v0 + 320);
    *(void *)(v0 + 296) = v5;
    *(void *)(v0 + 304) = v4;
    uint64_t v7 = sub_10001A5FC((uint64_t *)(v0 + 272));
    v2(v7, v6, v5);
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v3 + 136)
                                                   + **(int **)(*(void *)v3 + 136));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10001A21C;
    uint64_t v9 = v0 + 152;
LABEL_4:
    return v30(v9, v1);
  }
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 360);
  uint64_t v13 = (void *)(v0 + 328);
  uint64_t v15 = *(void *)(v0 + 320);
  uint64_t v14 = *(void *)(v0 + 328);
  BOOL v16 = static Mode.__derived_enum_equals(_:_:)(*(unsigned char *)(v0 + 432), 1);
  v11(v12, v15, v14);
  uint64_t v18 = *(void *)(v0 + 352);
  uint64_t v17 = *(void *)(v0 + 360);
  if (v16)
  {
    uint64_t v19 = *(void *)(v0 + 328);
    (*(void (**)(uint64_t))(*(void *)(v0 + 336) + 8))(v19);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    sub_10001A660(v0 + 16);
    if (*(unsigned char *)(v0 + 49))
    {
      uint64_t v1 = v0 + 232;
      os_log_type_t v20 = *(void (**)(uint64_t *, uint64_t, void))(v0 + 376);
      uint64_t v21 = *(void *)(v0 + 368);
      uint64_t v22 = *(void *)(v0 + 320);
      long long v31 = *(_OWORD *)v13;
      *(_OWORD *)(v0 + 256) = *(_OWORD *)v13;
      uint64_t v23 = sub_10001A5FC((uint64_t *)(v0 + 232));
      v20(v23, v22, v31);
      uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v21 + 136)
                                                     + **(int **)(*(void *)v21 + 136));
      uint64_t v24 = (void *)swift_task_alloc();
      *(void *)(v0 + 416) = v24;
      *uint64_t v24 = v0;
      v24[1] = sub_10001A3A0;
      uint64_t v9 = v0 + 72;
      goto LABEL_4;
    }
  }
  else
  {
    (*(void (**)(void, void))(v18 + 8))(*(void *)(v0 + 360), *v13);
  }
  sub_10007A2D4(v0 + 112);
  uint64_t v25 = *(void *)(v0 + 312);
  uint64_t v26 = *(void *)(v0 + 136);
  uint64_t v27 = *(void *)(v0 + 144);
  char v28 = *(unsigned char *)(v0 + 128);
  long long v32 = *(_OWORD *)(v0 + 112);
  swift_task_dealloc();
  *(_OWORD *)uint64_t v25 = v32;
  *(unsigned char *)(v25 + 16) = v28;
  *(void *)(v25 + 24) = v26;
  *(void *)(v25 + 32) = v27;
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_10001A21C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    return _swift_task_switch(sub_10001A524, v3, 0);
  }
  else
  {
    sub_10000CCE8(v2 + 272);
    uint64_t v4 = *(void *)(v2 + 312);
    uint64_t v5 = *(void *)(v2 + 176);
    uint64_t v6 = *(void *)(v2 + 184);
    char v7 = *(unsigned char *)(v2 + 168);
    long long v10 = *(_OWORD *)(v2 + 152);
    swift_task_dealloc();
    *(_OWORD *)uint64_t v4 = v10;
    *(unsigned char *)(v4 + 16) = v7;
    *(void *)(v4 + 24) = v5;
    *(void *)(v4 + 32) = v6;
    uint64_t v8 = *(uint64_t (**)(void))(v2 + 8);
    return v8();
  }
}

uint64_t sub_10001A3A0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 344);
    return _swift_task_switch(sub_10001A590, v3, 0);
  }
  else
  {
    sub_10000CCE8(v2 + 232);
    uint64_t v4 = *(void *)(v2 + 312);
    uint64_t v5 = *(void *)(v2 + 96);
    uint64_t v6 = *(void *)(v2 + 104);
    char v7 = *(unsigned char *)(v2 + 88);
    long long v10 = *(_OWORD *)(v2 + 72);
    swift_task_dealloc();
    *(_OWORD *)uint64_t v4 = v10;
    *(unsigned char *)(v4 + 16) = v7;
    *(void *)(v4 + 24) = v5;
    *(void *)(v4 + 32) = v6;
    uint64_t v8 = *(uint64_t (**)(void))(v2 + 8);
    return v8();
  }
}

uint64_t sub_10001A524()
{
  sub_10000CCE8(v0 + 272);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001A590()
{
  sub_10000CCE8(v0 + 232);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t *sub_10001A5FC(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10001A660(uint64_t a1)
{
  return a1;
}

void sub_10001A6AC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(uint64_t (**)(uint64_t *))(*(void *)v2 + 168);
  swift_bridgeObjectRetain();
  char v7 = (void (*)(uint64_t *, void))v6(v35);
  uint64_t v9 = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = (void *)*v9;
  uint64_t v34 = (void *)*v9;
  void *v9 = 0x8000000000000000;
  unint64_t v13 = sub_100011F50(a1, a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v17 = v12;
  if (v11[3] >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_10001DEDC();
    }
  }
  else
  {
    sub_10001DBD0(v16, isUniquelyReferenced_nonNull_native);
    unint64_t v18 = sub_100011F50(a1, a2);
    if ((v17 & 1) != (v19 & 1))
    {
LABEL_21:
      sub_10008C880();
      __break(1u);
      return;
    }
    unint64_t v13 = v18;
  }
  void *v9 = v34;
  swift_bridgeObjectRelease();
  os_log_type_t v20 = (void *)*v9;
  if (v17) {
    goto LABEL_10;
  }
  v20[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v21 = (uint64_t *)(v20[6] + 16 * v13);
  uint64_t *v21 = a1;
  v21[1] = a2;
  *(void *)(v20[7] + 8 * v13) = 0;
  uint64_t v22 = v20[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
    goto LABEL_21;
  }
  v20[2] = v24;
  swift_bridgeObjectRetain();
LABEL_10:
  uint64_t v25 = v20[7];
  uint64_t v26 = *(void *)(v25 + 8 * v13);
  BOOL v23 = __OFADD__(v26, 1);
  uint64_t v27 = v26 + 1;
  if (!v23)
  {
    *(void *)(v25 + 8 * v13) = v27;
    swift_bridgeObjectRelease();
    v7(v35, 0);
    if (qword_1000B1B30 == -1) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once();
LABEL_12:
  uint64_t v28 = sub_10008BD50();
  sub_10000A358(v28, (uint64_t)qword_1000B1B38);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v29 = sub_10008BD30();
  os_log_type_t v30 = sub_10008C2E0();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136446466;
    swift_bridgeObjectRetain();
    sub_100009D00(a1, a2, v35);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2048;
    long long v32 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 152);
    uint64_t v33 = swift_bridgeObjectRetain();
    if (*(void *)(v32(v33) + 16)) {
      sub_100011F50(a1, a2);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "registered use for session config for %{public}s, now %lld uses", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

void sub_10001AA9C(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = sub_10000A390(&qword_1000AE3A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *(uint64_t (**)(uint64_t))(v8 + 152);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = v12(v13);
  if (*(void *)(v14 + 16))
  {
    unint64_t v15 = sub_100011F50(a1, a2);
    if (v16)
    {
      LODWORD(v60) = a3;
      uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v17 - 1;
      if (__OFSUB__(v17, 1))
      {
        __break(1u);
      }
      else if (qword_1000B1B30 == -1)
      {
        goto LABEL_5;
      }
      swift_once();
LABEL_5:
      uint64_t v19 = sub_10008BD50();
      uint64_t v20 = sub_10000A358(v19, (uint64_t)qword_1000B1B38);
      swift_bridgeObjectRetain_n();
      uint64_t v57 = v20;
      uint64_t v21 = sub_10008BD30();
      os_log_type_t v22 = sub_10008C2E0();
      BOOL v23 = os_log_type_enabled(v21, v22);
      uint64_t v58 = v8;
      uint64_t v59 = v11;
      if (v23)
      {
        uint64_t v24 = swift_slowAlloc();
        v62[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v25 = a1;
        Swift::Int v61 = sub_100009D00(a1, a2, v62);
        sub_10008C440();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2050;
        Swift::Int v61 = v17 - 1;
        sub_10008C440();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "session config finished for %{public}s with %{public}lld uses remaining", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v25 = a1;
        swift_bridgeObjectRelease_n();
      }

      os_log_type_t v30 = *(uint64_t (**)(uint64_t *))(*v4 + 168);
      if (v18 > 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = (void (*)(uint64_t *, void))v30(v62);
        uint64_t v33 = v32;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        Swift::Int v61 = *v33;
        *uint64_t v33 = 0x8000000000000000;
        sub_10001E794(v18, v25, a2, isUniquelyReferenced_nonNull_native);
        *uint64_t v33 = v61;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31(v62, 0);
        return;
      }
      uint64_t v35 = (uint64_t (*)(uint64_t *, void))v30(v62);
      uint64_t v36 = v25;
      sub_10001E08C(v25, a2);
      uint64_t v37 = v35(v62, 0);
      if (v60)
      {
        uint64_t v38 = (*(uint64_t (**)(uint64_t))(*v4 + 176))(v37);
        char v39 = sub_10001B408(v25, a2, v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        long long v40 = sub_10008BD30();
        os_log_type_t v41 = sub_10008C2E0();
        BOOL v42 = os_log_type_enabled(v40, v41);
        if (v39)
        {
          if (v42)
          {
            int64_t v43 = (uint8_t *)swift_slowAlloc();
            v62[0] = swift_slowAlloc();
            *(_DWORD *)int64_t v43 = 136446210;
            swift_bridgeObjectRetain();
            Swift::Int v61 = sub_100009D00(v25, a2, v62);
            sub_10008C440();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v40, v41, "not evicting %{public}s: already running", v43, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          return;
        }
        if (v42)
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          v62[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = 136446210;
          swift_bridgeObjectRetain();
          Swift::Int v61 = sub_100009D00(v25, a2, v62);
          sub_10008C440();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "starting eviction timer for %{public}s", v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        unint64_t v50 = *(uint64_t (**)(uint64_t *))(*v4 + 192);
        swift_bridgeObjectRetain();
        unint64_t v51 = (void (*)(uint64_t *, void))v50(v62);
        sub_10001E2C4(&v61, v25, a2);
        swift_bridgeObjectRelease();
        v51(v62, 0);
        uint64_t v52 = sub_10008C220();
        uint64_t v53 = (uint64_t)v59;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v59, 1, 1, v52);
        unint64_t v54 = sub_10001E16C();
        uint64_t v55 = (void *)swift_allocObject();
        v55[2] = v4;
        v55[3] = v54;
        v55[4] = v4;
        v55[5] = v36;
        uint64_t v56 = v58;
        v55[6] = a2;
        v55[7] = v56;
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_100008630(v53, (uint64_t)&unk_1000AE898, (uint64_t)v55);
      }
      else
      {
        uint64_t v44 = sub_10008C220();
        uint64_t v45 = (uint64_t)v59;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v59, 1, 1, v44);
        unint64_t v46 = sub_10001E16C();
        unint64_t v47 = (void *)swift_allocObject();
        v47[2] = v4;
        v47[3] = v46;
        v47[4] = v36;
        v47[5] = a2;
        uint64_t v48 = v58;
        v47[6] = v4;
        v47[7] = v48;
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1000198D0(v45, (uint64_t)&unk_1000AE888, (uint64_t)v47);
      }
      swift_release();
      return;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_10008BD50();
  sub_10000A358(v26, (uint64_t)qword_1000B1B38);
  swift_bridgeObjectRetain_n();
  uint64_t v60 = sub_10008BD30();
  os_log_type_t v27 = sub_10008C2F0();
  if (os_log_type_enabled(v60, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    v62[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446210;
    swift_bridgeObjectRetain();
    Swift::Int v61 = sub_100009D00(a1, a2, v62);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v60, v27, "session config finished with no use count for %{public}s", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v29 = v60;
  }
}

uint64_t sub_10001B408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_10008C8F0();
    sub_10008C050();
    Swift::Int v6 = sub_10008C920();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_10008C7D0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          char v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_10008C7D0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_10001B540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[12] = a4;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[15] = v7;
  void *v7 = v6;
  v7[1] = sub_10001B5E4;
  return static Task<>.sleep(nanoseconds:)(10000000000);
}

uint64_t sub_10001B5E4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_10001BDE0;
  }
  else {
    uint64_t v3 = sub_10001B70C;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_10001B70C()
{
  uint64_t v30 = v0;
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B1B38);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C2E0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 112);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_100009D00(v6, v5, &v29);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "eviction timer fired: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v8 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 96) + 152);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = v8(v9);
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_100011F50(*(void *)(v0 + 104), *(void *)(v0 + 112)), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13)
    {
      uint64_t v15 = *(void *)(v0 + 104);
      uint64_t v14 = *(void *)(v0 + 112);
      char v16 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 96) + 192))(v0 + 48);
      sub_10001F3AC(v15, v14);
      swift_bridgeObjectRelease();
      v16(v0 + 48, 0);
      BOOL v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_10008BD30();
  os_log_type_t v20 = sub_10008C2E0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v22 = *(void *)(v0 + 112);
  if (v21)
  {
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 80) = sub_100009D00(v23, v22, &v29);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "requesting eviction for %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)(*(void *)(v0 + 96) + 112) + 144)
                                                 + **(int **)(**(void **)(*(void *)(v0 + 96) + 112) + 144));
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_10001BC00;
  uint64_t v27 = *(void *)(v0 + 104);
  uint64_t v26 = *(void *)(v0 + 112);
  return v28(v27, v26);
}

uint64_t sub_10001BC00()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  return _swift_task_switch(sub_10001BD10, v1, 0);
}

uint64_t sub_10001BD10()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 96) + 192))(v0 + 48);
  sub_10001F3AC(v2, v1);
  swift_bridgeObjectRelease();
  v3(v0 + 48, 0);
  BOOL v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10001BDE0()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 96) + 192))(v0 + 16);
  sub_10001F3AC(v2, v1);
  swift_bridgeObjectRelease();
  v3(v0 + 16, 0);
  BOOL v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10001BEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return _swift_task_switch(sub_10001BED4, a6, 0);
}

uint64_t sub_10001BED4()
{
  uint64_t v14 = v0;
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B1B38);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C2E0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_100009D00(v6, v5, &v13);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "requesting immediate eviction for %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  char v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(**(void **)(v0[5] + 112) + 144)
                                                 + **(int **)(**(void **)(v0[5] + 112) + 144));
  unint64_t v8 = (void *)swift_task_alloc();
  v0[6] = v8;
  *unint64_t v8 = v0;
  v8[1] = sub_10001C170;
  uint64_t v10 = v0[3];
  uint64_t v9 = v0[4];
  return v12(v10, v9);
}

uint64_t sub_10001C170()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10001C264()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_10001C284, v0, 0);
}

uint64_t sub_10001C284()
{
  uint64_t v1 = (*(uint64_t (**)(void))(**(void **)(v0 + 56) + 128))();
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    void *v2 = v0;
    v2[1] = sub_10001C438;
    return sub_100027EA0();
  }
  else
  {
    if (qword_1000B1B30 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_10008BD50();
    sub_10000A358(v4, (uint64_t)qword_1000B1B38);
    unint64_t v5 = sub_10008BD30();
    os_log_type_t v6 = sub_10008C300();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "failed to check last DNU setting : diskCache nil", v7, 2u);
      swift_slowDealloc();
    }

    unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_10001C438(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v4 + 160) = a1;
  *(void *)(v4 + 80) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 56);
  if (v1) {
    os_log_type_t v6 = sub_10001CEDC;
  }
  else {
    os_log_type_t v6 = sub_10001C570;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10001C570()
{
  int v1 = *(unsigned __int8 *)(v0 + 160);
  if (v1 == 2)
  {
    if (qword_1000B1B30 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_10008BD50();
    sub_10000A358(v2, (uint64_t)qword_1000B1B38);
    uint64_t v3 = sub_10008BD30();
    os_log_type_t v4 = sub_10008C310();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "resetting clientIDs due to missing lastDNU setting", v5, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v6;
    void *v6 = v0;
    uint64_t v7 = sub_10001CB80;
LABEL_13:
    v6[1] = v7;
    return sub_100027C74();
  }
  int v8 = v1 & 1;
  if (v8 != (sub_10004935C() & 1))
  {
    if (qword_1000B1B30 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10008BD50();
    sub_10000A358(v9, (uint64_t)qword_1000B1B38);
    uint64_t v10 = sub_10008BD30();
    os_log_type_t v11 = sub_10008C310();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67240448;
      *(_DWORD *)(v0 + 152) = v8;
      sub_10008C440();
      *(_WORD *)(v12 + 8) = 1026;
      *(_DWORD *)(v0 + 156) = sub_10004935C() & 1;
      sub_10008C440();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "DNU status changed (%{BOOL,public}d -> %{BOOL,public}d), resetting clientIDs", (uint8_t *)v12, 0xEu);
      swift_slowDealloc();
    }

    os_log_type_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v6;
    void *v6 = v0;
    uint64_t v7 = sub_10001C884;
    goto LABEL_13;
  }
  swift_release();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_10001C884()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    os_log_type_t v4 = sub_10001D104;
  }
  else {
    os_log_type_t v4 = sub_10001C9B0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10001C9B0()
{
  char v1 = sub_10004935C();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  void *v2 = v0;
  v2[1] = sub_10001CA54;
  return sub_100028158(v1 & 1);
}

uint64_t sub_10001CA54()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_10001D32C;
  }
  else {
    uint64_t v4 = sub_10001F8CC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10001CB80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_10001D554;
  }
  else {
    uint64_t v4 = sub_10001CCAC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10001CCAC()
{
  char v1 = sub_10004935C();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  void *v2 = v0;
  v2[1] = sub_10001CD50;
  return sub_100028158(v1 & 1);
}

uint64_t sub_10001CD50()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_10001D77C;
  }
  else {
    uint64_t v4 = sub_10001CE7C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10001CE7C()
{
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001CEDC()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B1B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C300();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = sub_10008C890();
    *(void *)(v0 + 48) = sub_100009D00(v5, v6, &v9);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to check last DNU setting: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10001D104()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B1B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C300();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = sub_10008C890();
    *(void *)(v0 + 48) = sub_100009D00(v5, v6, &v9);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to check last DNU setting: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10001D32C()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B1B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C300();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = sub_10008C890();
    *(void *)(v0 + 48) = sub_100009D00(v5, v6, &v9);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to check last DNU setting: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10001D554()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B1B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C300();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = sub_10008C890();
    *(void *)(v0 + 48) = sub_100009D00(v5, v6, &v9);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to check last DNU setting: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10001D77C()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1000B1B30 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B1B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C300();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = sub_10008C890();
    *(void *)(v0 + 48) = sub_100009D00(v5, v6, &v9);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to check last DNU setting: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10001D9A4()
{
  swift_release();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10001D9FC(uint64_t a1, int *a2)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10001DAD8;
  return v6(a1);
}

uint64_t sub_10001DAD8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10001DBD0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000A390(&qword_1000AEA08);
  char v37 = a2;
  uint64_t v6 = sub_10008C670();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_10008C8F0();
    sub_10008C050();
    uint64_t result = sub_10008C920();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_10001DEDC()
{
  uint64_t v1 = v0;
  sub_10000A390(&qword_1000AEA08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10008C660();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10001E08C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100011F50(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10001DEDC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_10001E5BC(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_10001E16C()
{
  unint64_t result = qword_1000AE880;
  if (!qword_1000AE880)
  {
    type metadata accessor for SessionCoordinator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE880);
  }
  return result;
}

uint64_t sub_10001E1C0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10001E208()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_10000AA94;
  v5[4] = v3;
  v5[5] = v4;
  v5[3] = v2;
  return _swift_task_switch(sub_10001BED4, v4, 0);
}

uint64_t sub_10001E2C4(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_10008C8F0();
  swift_bridgeObjectRetain();
  sub_10008C050();
  Swift::Int v8 = sub_10008C920();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_10008C7D0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_10008C7D0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10001EDAC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10001E474()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10001E4BC()
{
  long long v6 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10000AA94;
  *(void *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 96) = v6;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 120) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10001B5E4;
  return static Task<>.sleep(nanoseconds:)(10000000000);
}

unint64_t sub_10001E5BC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_10008C490();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10008C8F0();
        swift_bridgeObjectRetain();
        sub_10008C050();
        Swift::Int v9 = sub_10008C920();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          BOOL v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          Swift::Int v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *Swift::Int v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10001E794(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100011F50(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10001DEDC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10001DBD0(result, a4 & 1);
  uint64_t result = sub_100011F50(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_10008C880();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for SessionHierarchyItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ServiceTransportConfiguration()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SessionHierarchyItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ServiceTransportConfiguration(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SessionHierarchyItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceTransportConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceTransportConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionHierarchyItem()
{
  return &type metadata for SessionHierarchyItem;
}

uint64_t sub_10001EA6C(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AE3A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10001EACC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A390(&qword_1000AE9F8);
  uint64_t v3 = sub_10008C510();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_10008C8F0();
      sub_10008C050();
      uint64_t result = sub_10008C920();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_10001EDAC(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10001EACC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_10001EF48();
      goto LABEL_22;
    }
    sub_10001F0FC();
  }
  uint64_t v11 = *v4;
  sub_10008C8F0();
  sub_10008C050();
  uint64_t result = sub_10008C920();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_10008C7D0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_10008C870();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_10008C7D0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_10001EF48()
{
  uint64_t v1 = v0;
  sub_10000A390(&qword_1000AE9F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10008C500();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    char v19 = (void *)(*(void *)(v4 + 48) + v16);
    *char v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10001F0FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A390(&qword_1000AE9F8);
  uint64_t v3 = sub_10008C510();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_10008C8F0();
    swift_bridgeObjectRetain();
    sub_10008C050();
    uint64_t result = sub_10008C920();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10001F3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_10008C8F0();
  swift_bridgeObjectRetain();
  sub_10008C050();
  Swift::Int v6 = sub_10008C920();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_10008C7D0() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_10008C7D0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10001EF48();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10001F53C(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_10001F53C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10008C490();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_10008C8F0();
        swift_bridgeObjectRetain();
        sub_10008C050();
        Swift::Int v10 = sub_10008C920();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            _OWORD *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10001F704()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001F73C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10001F8C8;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000B0220 + dword_1000B0220);
  return v6(a1, v4);
}

uint64_t sub_10001F7F4()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10001F834()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10001F8C8;
  return sub_1000197D0((uint64_t)v3, v4, v5, v2);
}

uint64_t sub_10001F8D8()
{
  return 0x79745F746E657665;
}

uint64_t sub_10001F8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x79745F746E657665 && a2 == 0xEB00000000736570)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_10008C7D0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10001F9A8(uint64_t a1)
{
  unint64_t v2 = sub_100020A58();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001F9E4(uint64_t a1)
{
  unint64_t v2 = sub_100020A58();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001FA20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10001FC08(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_10001FA50()
{
  return 0x675F747069726373;
}

uint64_t sub_10001FA74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x675F747069726373 && a2 == 0xED00007370756F72)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_10008C7D0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10001FB30(uint64_t a1)
{
  unint64_t v2 = sub_100020A04();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001FB6C(uint64_t a1)
{
  unint64_t v2 = sub_100020A04();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10001FBA8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10001FEA0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10001FBD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10002003C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_10001FC08(void *a1)
{
  uint64_t v3 = sub_10000A390(&qword_1000AEA88);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_10000A784(a1, a1[3]);
  sub_100020A58();
  sub_10008C950();
  if (v1)
  {
    sub_10000CCE8((uint64_t)a1);
    return v7;
  }
  sub_10000A784(a1, a1[3]);
  uint64_t v8 = sub_10008C930();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    sub_1000181B0(v8 + 40 * v9 - 8, (uint64_t)&v11);
  }
  else
  {
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (*((void *)&v12 + 1))
  {
    sub_10000A784(&v11, *((uint64_t *)&v12 + 1));
    uint64_t v7 = sub_10008C990();
    swift_bridgeObjectRetain();
    sub_10000CCE8((uint64_t)&v11);
    sub_10000A390(&qword_1000AEA90);
    sub_100020B00(&qword_1000AEA98, &qword_1000AEA90, (void (*)(void))sub_100020B78);
    sub_10008C730();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_10000CCE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  __break(1u);
  return result;
}

void *sub_10001FEA0(void *a1)
{
  uint64_t v3 = sub_10000A390(&qword_1000AEA68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A784(a1, a1[3]);
  sub_100020A04();
  sub_10008C950();
  if (v1)
  {
    sub_10000CCE8((uint64_t)a1);
  }
  else
  {
    sub_10000A390(&qword_1000AEA70);
    sub_100020B00(&qword_1000AEA78, &qword_1000AEA70, (void (*)(void))sub_100020AAC);
    sub_10008C730();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    sub_10000CCE8((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_10002003C(void *a1)
{
  sub_10000A784(a1, a1[3]);
  uint64_t v3 = sub_10008C930();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    sub_1000181B0(v3 + 40 * v4 - 8, (uint64_t)&v12);
    uint64_t result = swift_bridgeObjectRelease();
    if (*((void *)&v13 + 1))
    {
      sub_10000A784(&v12, *((uint64_t *)&v13 + 1));
      uint64_t v6 = sub_10008C990();
      uint64_t v8 = v7;
      sub_10000CCE8((uint64_t)&v12);
      if (v6 == 0x6F736A5F70747468 && v8 == (void *)0xE90000000000006ELL || (sub_10008C7D0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1000181B0((uint64_t)a1, (uint64_t)&v12);
        uint64_t v9 = sub_10001FC08(&v12);
        if (!v1) {
          uint64_t v8 = (void *)v9;
        }
        goto LABEL_14;
      }
      if (v6 == 0x6C61636F6CLL && v8 == (void *)0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = sub_10008C7D0();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
        {
          uint64_t v8 = 0;
LABEL_14:
          sub_10000CCE8((uint64_t)a1);
          return (uint64_t)v8;
        }
      }
      sub_1000181B0((uint64_t)a1, (uint64_t)&v12);
      long long v11 = sub_10001FEA0(&v12);
      if (!v1) {
        uint64_t v8 = v11;
      }
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t result = swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_10002027C()
{
  unint64_t result = qword_1000AEA28;
  if (!qword_1000AEA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA28);
  }
  return result;
}

unint64_t sub_1000202D4()
{
  unint64_t result = qword_1000AEA30;
  if (!qword_1000AEA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA30);
  }
  return result;
}

unint64_t sub_10002032C()
{
  unint64_t result = qword_1000AEA38;
  if (!qword_1000AEA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA38);
  }
  return result;
}

unint64_t sub_100020384()
{
  unint64_t result = qword_1000AEA40;
  if (!qword_1000AEA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA40);
  }
  return result;
}

unint64_t sub_1000203DC()
{
  unint64_t result = qword_1000AEA48;
  if (!qword_1000AEA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA48);
  }
  return result;
}

unint64_t sub_100020434()
{
  unint64_t result = qword_1000AEA50;
  if (!qword_1000AEA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA50);
  }
  return result;
}

uint64_t destroy for StorebagSectionBackendHTTP()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s21CloudTelemetryService26StorebagSectionBackendHTTPVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StorebagSectionBackendHTTP(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StorebagSectionBackendHTTP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionBackendHTTP(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionBackendHTTP(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendHTTP()
{
  return &type metadata for StorebagSectionBackendHTTP;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendHTTP.CodingKeys()
{
  return &type metadata for StorebagSectionBackendHTTP.CodingKeys;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendScriptGroup()
{
  return &type metadata for StorebagSectionBackendScriptGroup;
}

unsigned char *_s21CloudTelemetryService26StorebagSectionBackendHTTPV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100020710);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackendScriptGroup.CodingKeys()
{
  return &type metadata for StorebagSectionBackendScriptGroup.CodingKeys;
}

uint64_t sub_100020748(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != 1)
  {
    if (a4) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for StorebagSectionBackend(uint64_t a1)
{
  return sub_1000207AC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_1000207AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != 1)
  {
    if (a4) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_100020748(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_100020748(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1000207AC(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionBackend(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1000207AC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionBackend(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionBackend(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000209C0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000209D8(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionBackend()
{
  return &type metadata for StorebagSectionBackend;
}

unint64_t sub_100020A04()
{
  unint64_t result = qword_1000AEA58;
  if (!qword_1000AEA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA58);
  }
  return result;
}

unint64_t sub_100020A58()
{
  unint64_t result = qword_1000AEA60;
  if (!qword_1000AEA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA60);
  }
  return result;
}

unint64_t sub_100020AAC()
{
  unint64_t result = qword_1000AEA80;
  if (!qword_1000AEA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEA80);
  }
  return result;
}

uint64_t sub_100020B00(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A540(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100020B78()
{
  unint64_t result = qword_1000AEAA0;
  if (!qword_1000AEAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEAA0);
  }
  return result;
}

uint64_t sub_100020BCC()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6D10);
  sub_10000A358(v0, (uint64_t)qword_1000B6D10);
  return sub_10008BD40();
}

void *sub_100020C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v6[14] = a1;
  v6[15] = a2;
  v6[16] = a3;
  return v6;
}

uint64_t sub_100020C94()
{
  v1[29] = v0;
  sub_10000A390(&qword_1000AE3A0);
  v1[30] = swift_task_alloc();
  v1[31] = type metadata accessor for CachedSession();
  v1[32] = swift_task_alloc();
  uint64_t v2 = sub_10008BBB0();
  v1[33] = v2;
  v1[34] = *(void *)(v2 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  return _swift_task_switch(sub_100020DC4, v0, 0);
}

uint64_t sub_100020DC4()
{
  if (qword_1000B2250 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  v0[37] = sub_10000A358(v1, (uint64_t)qword_1000B6D10);
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C2E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "starting submission activity", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[29];

  uint64_t v6 = *(void *)(v5 + 112);
  v0[38] = v6;
  if (!v6
    || (v7 = v0[29], uint64_t v8 = *(void *)(v7 + 120), (v0[39] = v8) == 0)
    || (uint64_t v9 = *(void *)(v7 + 128), (v0[40] = v9) == 0))
  {
    char v10 = sub_10008BD30();
    os_log_type_t v11 = sub_10008C310();
    if (os_log_type_enabled(v10, v11))
    {
      long long v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "submission activity skipped due to bad initialization", v12, 2u);
      swift_slowDealloc();
    }

    goto LABEL_13;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  if (sub_10008C260())
  {
    swift_release();
    swift_release();
    swift_release();
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  sub_10008BB70();
  uint64_t v15 = (void *)swift_task_alloc();
  v0[41] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100021054;
  return sub_100026ADC(50);
}

uint64_t sub_100021054(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 336) = a1;
  *(void *)(v4 + 344) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 232);
  if (v1) {
    uint64_t v6 = sub_100022DA0;
  }
  else {
    uint64_t v6 = sub_100021188;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100021188(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v16 = v3;
  uint64_t v4 = (void *)v3[42];
  uint64_t v5 = v4[2];
  v3[44] = v5;
  if (v5)
  {
    uint64_t v6 = v3[39];
    uint64_t v7 = (*(void *)v6 + 248) & 0xFFFFFFFFFFFFLL | 0x7F8D000000000000;
    v3[45] = *(void *)(*(void *)v6 + 248);
    v3[46] = v7;
    v3[47] = 0;
    if (v4[2])
    {
      uint64_t v8 = v4[4];
      v3[48] = v8;
      unint64_t v9 = v4[5];
      v3[49] = v9;
      swift_bridgeObjectRetain_n();
      char v10 = sub_10008BD30();
      os_log_type_t v11 = sub_10008C310();
      if (os_log_type_enabled(v10, v11))
      {
        long long v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        *(_DWORD *)long long v12 = 136446210;
        swift_bridgeObjectRetain();
        v3[28] = sub_100009D00(v8, v9, &v15);
        sub_10008C440();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "sending events for client type: %{public}s", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a2 = v3[39];
      a1 = sub_100021428;
      a3 = 0;
    }
    else
    {
      __break(1u);
    }
    return _swift_task_switch(a1, a2, a3);
  }
  else
  {
    (*(void (**)(void, void))(v3[34] + 8))(v3[36], v3[33]);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v13 = (uint64_t (*)(void))v3[1];
    return v13();
  }
}

uint64_t sub_100021428()
{
  uint64_t v1 = *(void *)(v0 + 232);
  (*(void (**)(void, void))(v0 + 360))(*(void *)(v0 + 384), *(void *)(v0 + 392));
  return _swift_task_switch(sub_10002149C, v1, 0);
}

uint64_t sub_10002149C()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[50] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100021548;
  uint64_t v3 = v0[48];
  uint64_t v2 = v0[49];
  return sub_100026E10(v3, v2, 50);
}

uint64_t sub_100021548(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[51] = a1;
  v3[52] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[29];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100022FD0;
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v6 = v3[29];
    uint64_t v5 = sub_10002167C;
  }
  return _swift_task_switch(v5, v6, 0);
}

uint64_t sub_10002167C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)())(v3 + 408);
  uint64_t v5 = *((void *)v4 + 2);
  *(void *)(v3 + 424) = v5;
  if (!v5)
  {
    long long v13 = *(uint64_t **)(v3 + 312);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v3 + 560) = variable initialization expression of Daemon.mode() & 1;
    uint64_t v14 = *v13;
    *(void *)(v3 + 544) = *(void *)(*v13 + 256);
    *(void *)(v3 + 552) = (v14 + 256) & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
    a2 = *(void *)(v3 + 312);
    uint64_t v4 = sub_1000229EC;
    a3 = 0;
    return _swift_task_switch(v4, a2, a3);
  }
  *(void *)(v3 + 432) = 0;
  if (!*((void *)v4 + 2))
  {
    __break(1u);
    return _swift_task_switch(v4, a2, a3);
  }
  long long v6 = *((_OWORD *)v4 + 2);
  long long v7 = *((_OWORD *)v4 + 3);
  long long v8 = *((_OWORD *)v4 + 4);
  *(void *)(v3 + 64) = *((void *)v4 + 10);
  *(_OWORD *)(v3 + 32) = v7;
  *(_OWORD *)(v3 + 48) = v8;
  *(_OWORD *)(v3 + 16) = v6;
  sub_10002483C(v3 + 16);
  uint64_t v9 = *(void *)sub_1000134CC();
  uint64_t v10 = *(void *)sub_1000134C0();
  os_log_type_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 440) = v11;
  void *v11 = v3;
  v11[1] = sub_10002180C;
  return sub_100026570(v3 + 16, v9, v10);
}

uint64_t sub_10002180C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[56] = a1;
  v3[57] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = (uint64_t)(v3 + 2);
    uint64_t v5 = v3[29];
    sub_10001A660(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v6 = sub_1000232DC;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = v3[29];
    long long v6 = sub_100021960;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_100021960()
{
  uint64_t v1 = (_OWORD *)(v0 + 16);
  uint64_t v2 = *(double **)(v0 + 448);
  if (*((void *)v2 + 2))
  {
    uint64_t v3 = *(void *)(v0 + 320);
    uint64_t v4 = *(void *)(v0 + 280);
    uint64_t v5 = *(void *)(v0 + 256);
    double v6 = v2[4];
    uint64_t v8 = *((void *)v2 + 6);
    uint64_t v7 = *((void *)v2 + 7);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 272) + 16))(v4, *(void *)(v0 + 288), *(void *)(v0 + 264));
    sub_10002483C(v0 + 16);
    swift_bridgeObjectRetain();
    sub_10000D220(v0 + 16, v8, v7, v4, v5, v6);
    char v25 = (uint64_t (*)(uint64_t, uint64_t, _UNKNOWN **))(*(void *)(*(void *)v3 + 120)
                                                                + **(int **)(*(void *)v3 + 120));
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v9;
    void *v9 = v0;
    v9[1] = sub_100021C74;
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 256);
    return v25(v11, v10, &off_1000A5E40);
  }
  else
  {
    sub_10001A660(v0 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v0 + 432) + 1;
    if (v13 == *(void *)(v0 + 424))
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 400) = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_100021548;
      uint64_t v16 = *(void *)(v0 + 384);
      uint64_t v15 = *(void *)(v0 + 392);
      return sub_100026E10(v16, v15, 50);
    }
    else
    {
      *(void *)(v0 + 432) = v13;
      uint64_t v17 = *(void *)(v0 + 408);
      if (v13 >= *(void *)(v17 + 16))
      {
        __break(1u);
      }
      else
      {
        uint64_t v18 = v17 + 56 * v13;
        long long v19 = *(_OWORD *)(v18 + 32);
        long long v20 = *(_OWORD *)(v18 + 48);
        long long v21 = *(_OWORD *)(v18 + 64);
        *(void *)(v0 + 64) = *(void *)(v18 + 80);
        *(_OWORD *)(v0 + 32) = v20;
        *(_OWORD *)(v0 + 48) = v21;
        *uint64_t v1 = v19;
        sub_10002483C(v0 + 16);
        uint64_t v22 = *(void *)sub_1000134CC();
        uint64_t v23 = *(void *)sub_1000134C0();
        unint64_t v24 = (void *)swift_task_alloc();
        *(void *)(v0 + 440) = v24;
        *unint64_t v24 = v0;
        v24[1] = sub_10002180C;
        return sub_100026570((uint64_t)v1, v22, v23);
      }
    }
  }
  return result;
}

uint64_t sub_100021C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[59] = a1;
  v5[60] = a2;
  v5[61] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[29];
  if (v2) {
    uint64_t v7 = sub_1000235E8;
  }
  else {
    uint64_t v7 = sub_100021DAC;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100021DAC()
{
  uint64_t v56 = v0;
  uint64_t v1 = v0 + 26;
  if (v0[59])
  {
    uint64_t v2 = v0[60];
    int64_t v3 = *(void *)(v0[56] + 16);
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (v3)
    {
      uint64_t v49 = v0[60];
      *uint64_t v1 = _swiftEmptyArrayStorage;
      sub_10002444C(0, v3, 0);
      uint64_t v5 = 0;
      uint64_t v4 = (void *)*v1;
      do
      {
        uint64_t v6 = v0[56] + v5;
        uint64_t v7 = *(void *)(v6 + 40);
        uint64_t v8 = *(void *)(v6 + 48);
        long long v52 = *(_OWORD *)(v6 + 56);
        v0[26] = v4;
        unint64_t v9 = v4[2];
        unint64_t v10 = v4[3];
        int64_t v11 = v9 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9 >= v10 >> 1)
        {
          sub_10002444C(v10 > 1, v9 + 1, 1);
          uint64_t v4 = (void *)v0[26];
        }
        v4[2] = v11;
        long long v12 = &v4[4 * v9];
        v12[4] = v7;
        v12[5] = v8;
        *((_OWORD *)v12 + 3) = v52;
        v5 += 40;
        --v3;
      }
      while (v3);
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage[2];
      if (!v11)
      {
        uint64_t v22 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
LABEL_17:
        v0[62] = v22;
        uint64_t ObjectType = swift_getObjectType();
        unint64_t v51 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
        int64_t v29 = (void *)swift_task_alloc();
        v0[63] = v29;
        *int64_t v29 = v0;
        v29[1] = sub_10002246C;
        return v51(v22, ObjectType, v2);
      }
      uint64_t v49 = v0[60];
    }
    long long v21 = v0 + 27;
    v0[27] = _swiftEmptyArrayStorage;
    sub_100016CEC(0, v11, 0);
    uint64_t v22 = (void *)v0[27];
    uint64_t v23 = v4 + 6;
    do
    {
      uint64_t v24 = *((void *)v23 - 1);
      long long v53 = *v23;
      void *v21 = v22;
      unint64_t v25 = v22[2];
      unint64_t v26 = v22[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25 >= v26 >> 1)
      {
        sub_100016CEC(v26 > 1, v25 + 1, 1);
        uint64_t v22 = (void *)*v21;
      }
      v22[2] = v25 + 1;
      BOOL v27 = &v22[3 * v25];
      v27[4] = v24;
      *(_OWORD *)(v27 + 5) = v53;
      v23 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v0 = v50;
    uint64_t v2 = v49;
    goto LABEL_17;
  }
  sub_1000248E8();
  swift_allocError();
  swift_willThrow();
  sub_100024888(v0[32], (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  unint64_t v13 = sub_10008BD30();
  os_log_type_t v14 = sub_10008C2F0();
  BOOL v15 = os_log_type_enabled(v13, v14);
  unint64_t v16 = v0[49];
  if (v15)
  {
    uint64_t v17 = v0[48];
    uint64_t v18 = swift_slowAlloc();
    v55[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_100009D00(v17, v16, v55);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v19 = sub_10008C890();
    v0[25] = sub_100009D00(v19, v20, v55);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  int64_t v31 = *(void *)(v0[56] + 16);
  if (v31)
  {
    uint64_t v32 = v0 + 18;
    v0[18] = _swiftEmptyArrayStorage;
    sub_10002444C(0, v31, 0);
    uint64_t v33 = 0;
    uint64_t v34 = (void *)v0[18];
    do
    {
      uint64_t v35 = v0[56] + v33;
      uint64_t v36 = *(void *)(v35 + 40);
      uint64_t v37 = *(void *)(v35 + 48);
      long long v54 = *(_OWORD *)(v35 + 56);
      v0[18] = v34;
      unint64_t v39 = v34[2];
      unint64_t v38 = v34[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39 >= v38 >> 1)
      {
        sub_10002444C(v38 > 1, v39 + 1, 1);
        uint64_t v34 = (void *)*v32;
      }
      id v34[2] = v39 + 1;
      long long v40 = &v34[4 * v39];
      v40[4] = v36;
      v40[5] = v37;
      *((_OWORD *)v40 + 3) = v54;
      v33 += 40;
      --v31;
      uint64_t v0 = v50;
    }
    while (v31);
    swift_bridgeObjectRelease();
    int64_t v41 = v34[2];
    if (v41) {
      goto LABEL_27;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = _swiftEmptyArrayStorage;
    int64_t v41 = _swiftEmptyArrayStorage[2];
    if (v41)
    {
LABEL_27:
      BOOL v42 = v0 + 19;
      v0[19] = _swiftEmptyArrayStorage;
      sub_10002442C(0, v41, 0);
      int64_t v43 = (void *)v0[19];
      uint64_t v44 = 4;
      do
      {
        uint64_t v45 = v34[v44];
        *BOOL v42 = v43;
        unint64_t v47 = v43[2];
        unint64_t v46 = v43[3];
        if (v47 >= v46 >> 1)
        {
          sub_10002442C(v46 > 1, v47 + 1, 1);
          int64_t v43 = (void *)*v42;
        }
        v43[2] = v47 + 1;
        v43[v47 + 4] = v45;
        v44 += 4;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  int64_t v43 = _swiftEmptyArrayStorage;
LABEL_34:
  v0[65] = v43;
  uint64_t v48 = (void *)swift_task_alloc();
  v0[66] = v48;
  void *v48 = v0;
  v48[1] = sub_1000227F0;
  return sub_100026980((uint64_t)v43);
}

uint64_t sub_10002246C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 512) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v4 = sub_1000239E4;
  }
  else {
    uint64_t v4 = sub_1000225B4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1000225B4()
{
  uint64_t v1 = v0[32];
  swift_unknownObjectRelease();
  sub_100024888(v1, (uint64_t (*)(void))type metadata accessor for CachedSession);
  int64_t v2 = *(void *)(v0[56] + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = _swiftEmptyArrayStorage;
    int64_t v12 = _swiftEmptyArrayStorage[2];
    if (!v12) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  v0[18] = _swiftEmptyArrayStorage;
  sub_10002444C(0, v2, 0);
  uint64_t v4 = 0;
  uint64_t v5 = (void *)v0[18];
  do
  {
    uint64_t v6 = v0[56] + v4;
    uint64_t v7 = *(void *)(v6 + 40);
    uint64_t v8 = *(void *)(v6 + 48);
    long long v20 = *(_OWORD *)(v6 + 56);
    v0[18] = v5;
    unint64_t v10 = v5[2];
    unint64_t v9 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= v9 >> 1)
    {
      sub_10002444C(v9 > 1, v10 + 1, 1);
      uint64_t v5 = (void *)v0[18];
    }
    v5[2] = v10 + 1;
    int64_t v11 = &v5[4 * v10];
    v11[4] = v7;
    v11[5] = v8;
    *((_OWORD *)v11 + 3) = v20;
    v4 += 40;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = _swiftEmptyArrayStorage;
  int64_t v12 = v5[2];
  if (v12)
  {
LABEL_9:
    unint64_t v13 = v0 + 19;
    v0[19] = _swiftEmptyArrayStorage;
    sub_10002442C(0, v12, 0);
    uint64_t v3 = (void *)v0[19];
    uint64_t v14 = 4;
    do
    {
      uint64_t v15 = v5[v14];
      void *v13 = v3;
      unint64_t v17 = v3[2];
      unint64_t v16 = v3[3];
      if (v17 >= v16 >> 1)
      {
        sub_10002442C(v16 > 1, v17 + 1, 1);
        uint64_t v3 = (void *)*v13;
      }
      v3[2] = v17 + 1;
      v3[v17 + 4] = v15;
      v14 += 4;
      --v12;
    }
    while (v12);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  v0[65] = v3;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[66] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1000227F0;
  return sub_100026980((uint64_t)v3);
}

uint64_t sub_1000227F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 536) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2 + 16;
    uint64_t v4 = *(void *)(v2 + 232);
    swift_bridgeObjectRelease();
    sub_10001A660(v3);
    uint64_t v5 = sub_100023DE8;
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 232);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100022930;
    uint64_t v6 = v7;
  }
  return _swift_task_switch(v5, v6, 0);
}

uint64_t sub_100022930()
{
  uint64_t v1 = *(void *)sub_1000134CC();
  uint64_t v2 = *(void *)sub_1000134C0();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10002180C;
  return sub_100026570(v0 + 16, v1, v2);
}

uint64_t sub_1000229EC()
{
  uint64_t v1 = *(void *)(v0 + 232);
  (*(void (**)(void, void, void))(v0 + 544))(*(void *)(v0 + 384), *(void *)(v0 + 392), *(unsigned __int8 *)(v0 + 560));
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100022A7C, v1, 0);
}

uint64_t sub_100022A7C(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v19 = v3;
  unint64_t v4 = v3[47] + 1;
  if (v4 == v3[44])
  {
    uint64_t v5 = v3[36];
    uint64_t v6 = v3[33];
    uint64_t v7 = v3[34];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    if (sub_10008C260())
    {
      swift_release();
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v8 = (uint64_t (*)(void))v3[1];
      return v8();
    }
    else
    {
      sub_10008BB70();
      unint64_t v17 = (void *)swift_task_alloc();
      v3[41] = v17;
      *unint64_t v17 = v3;
      v17[1] = sub_100021054;
      return sub_100026ADC(50);
    }
  }
  else
  {
    v3[47] = v4;
    uint64_t v10 = v3[42];
    if (v4 >= *(void *)(v10 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v11 = v10 + 16 * v4;
      uint64_t v12 = *(void *)(v11 + 32);
      v3[48] = v12;
      unint64_t v13 = *(void *)(v11 + 40);
      v3[49] = v13;
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_10008BD30();
      os_log_type_t v15 = sub_10008C310();
      if (os_log_type_enabled(v14, v15))
      {
        unint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        *(_DWORD *)unint64_t v16 = 136446210;
        swift_bridgeObjectRetain();
        v3[28] = sub_100009D00(v12, v13, &v18);
        sub_10008C440();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "sending events for client type: %{public}s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a2 = v3[39];
      a1 = sub_100021428;
      a3 = 0;
    }
    return _swift_task_switch(a1, a2, a3);
  }
}

uint64_t sub_100022DA0()
{
  uint64_t v9 = v0;
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10008BD30();
  os_log_type_t v2 = sub_10008C2F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = sub_10008C890();
    v0[24] = sub_100009D00(v4, v5, &v8);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "error running sendOneMessage submission: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100022FD0()
{
  os_log_type_t v15 = v0;
  uint64_t v2 = v0[48];
  uint64_t v1 = v0[49];
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_10008BD30();
  os_log_type_t v4 = sub_10008C2F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 136315138;
    swift_getErrorValue();
    uint64_t v6 = sub_10008C890();
    v0[24] = sub_100009D00(v6, v7, &v14);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "error running sendOneMessage submission: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[39];
  if (v1)
  {
    uint64_t v9 = v0[30];
    uint64_t v10 = sub_10008C220();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = 0;
    void v11[3] = 0;
    v11[4] = v8;
    v11[5] = v2;
    v11[6] = v1;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000198D0(v9, (uint64_t)&unk_1000AEAC0, (uint64_t)v11);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1000232DC()
{
  os_log_type_t v15 = v0;
  uint64_t v2 = v0[48];
  uint64_t v1 = v0[49];
  (*(void (**)(void, void))(v0[34] + 8))(v0[36], v0[33]);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = sub_10008BD30();
  os_log_type_t v4 = sub_10008C2F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)unint64_t v5 = 136315138;
    swift_getErrorValue();
    uint64_t v6 = sub_10008C890();
    v0[24] = sub_100009D00(v6, v7, &v14);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "error running sendOneMessage submission: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[39];
  if (v1)
  {
    uint64_t v9 = v0[30];
    uint64_t v10 = sub_10008C220();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = 0;
    void v11[3] = 0;
    v11[4] = v8;
    v11[5] = v2;
    v11[6] = v1;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1000198D0(v9, (uint64_t)&unk_1000AEAC0, (uint64_t)v11);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1000235E8()
{
  uint64_t v28 = v0;
  sub_100024888(v0[32], (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10008BD30();
  os_log_type_t v2 = sub_10008C2F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[48];
    unint64_t v3 = v0[49];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_100009D00(v4, v3, &v27);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v6 = sub_10008C890();
    v0[25] = sub_100009D00(v6, v7, &v27);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  int64_t v8 = *(void *)(v0[56] + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
    int64_t v18 = _swiftEmptyArrayStorage[2];
    if (!v18) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  v0[18] = _swiftEmptyArrayStorage;
  sub_10002444C(0, v8, 0);
  uint64_t v10 = 0;
  uint64_t v11 = (void *)v0[18];
  do
  {
    uint64_t v12 = v0[56] + v10;
    uint64_t v13 = *(void *)(v12 + 40);
    uint64_t v14 = *(void *)(v12 + 48);
    long long v26 = *(_OWORD *)(v12 + 56);
    v0[18] = v11;
    unint64_t v16 = v11[2];
    unint64_t v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 >= v15 >> 1)
    {
      sub_10002444C(v15 > 1, v16 + 1, 1);
      uint64_t v11 = (void *)v0[18];
    }
    v11[2] = v16 + 1;
    unint64_t v17 = &v11[4 * v16];
    v17[4] = v13;
    v17[5] = v14;
    *((_OWORD *)v17 + 3) = v26;
    v10 += 40;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = _swiftEmptyArrayStorage;
  int64_t v18 = v11[2];
  if (v18)
  {
LABEL_12:
    uint64_t v19 = v0 + 19;
    v0[19] = _swiftEmptyArrayStorage;
    sub_10002442C(0, v18, 0);
    uint64_t v9 = (void *)v0[19];
    uint64_t v20 = 4;
    do
    {
      uint64_t v21 = v11[v20];
      *uint64_t v19 = v9;
      unint64_t v23 = v9[2];
      unint64_t v22 = v9[3];
      if (v23 >= v22 >> 1)
      {
        sub_10002442C(v22 > 1, v23 + 1, 1);
        uint64_t v9 = (void *)*v19;
      }
      void v9[2] = v23 + 1;
      v9[v23 + 4] = v21;
      v20 += 4;
      --v18;
    }
    while (v18);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v0[65] = v9;
  uint64_t v24 = (void *)swift_task_alloc();
  v0[66] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_1000227F0;
  return sub_100026980((uint64_t)v9);
}

uint64_t sub_1000239E4()
{
  uint64_t v28 = v0;
  swift_unknownObjectRelease();
  sub_100024888(v0[32], (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10008BD30();
  os_log_type_t v2 = sub_10008C2F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[48];
    unint64_t v3 = v0[49];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_100009D00(v4, v3, &v27);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v6 = sub_10008C890();
    v0[25] = sub_100009D00(v6, v7, &v27);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to send sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  int64_t v8 = *(void *)(v0[56] + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
    int64_t v18 = _swiftEmptyArrayStorage[2];
    if (!v18) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  v0[18] = _swiftEmptyArrayStorage;
  sub_10002444C(0, v8, 0);
  uint64_t v10 = 0;
  uint64_t v11 = (void *)v0[18];
  do
  {
    uint64_t v12 = v0[56] + v10;
    uint64_t v13 = *(void *)(v12 + 40);
    uint64_t v14 = *(void *)(v12 + 48);
    long long v26 = *(_OWORD *)(v12 + 56);
    v0[18] = v11;
    unint64_t v16 = v11[2];
    unint64_t v15 = v11[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 >= v15 >> 1)
    {
      sub_10002444C(v15 > 1, v16 + 1, 1);
      uint64_t v11 = (void *)v0[18];
    }
    v11[2] = v16 + 1;
    unint64_t v17 = &v11[4 * v16];
    v17[4] = v13;
    v17[5] = v14;
    *((_OWORD *)v17 + 3) = v26;
    v10 += 40;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = _swiftEmptyArrayStorage;
  int64_t v18 = v11[2];
  if (v18)
  {
LABEL_12:
    uint64_t v19 = v0 + 19;
    v0[19] = _swiftEmptyArrayStorage;
    sub_10002442C(0, v18, 0);
    uint64_t v9 = (void *)v0[19];
    uint64_t v20 = 4;
    do
    {
      uint64_t v21 = v11[v20];
      *uint64_t v19 = v9;
      unint64_t v23 = v9[2];
      unint64_t v22 = v9[3];
      if (v23 >= v22 >> 1)
      {
        sub_10002442C(v22 > 1, v23 + 1, 1);
        uint64_t v9 = (void *)*v19;
      }
      void v9[2] = v23 + 1;
      v9[v23 + 4] = v21;
      v20 += 4;
      --v18;
    }
    while (v18);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v0[65] = v9;
  uint64_t v24 = (void *)swift_task_alloc();
  v0[66] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_1000227F0;
  return sub_100026980((uint64_t)v9);
}

void sub_100023DE8()
{
  uint64_t v21 = v0;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10008BD30();
  os_log_type_t v2 = sub_10008C2F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = *(void *)(v0 + 384);
    unint64_t v3 = *(void *)(v0 + 392);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v5 + 4) = sub_100009D00(v4, v3, &v20);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v6 = sub_10008C890();
    *(void *)(v5 + 14) = sub_100009D00(v6, v7, &v20);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to remove sendOneMessage events for clientType %{public}s: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v8 = *(void *)(v0 + 432) + 1;
  if (v8 == *(void *)(v0 + 424))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v9;
    void *v9 = v0;
    v9[1] = sub_100021548;
    uint64_t v11 = *(void *)(v0 + 384);
    uint64_t v10 = *(void *)(v0 + 392);
    sub_100026E10(v11, v10, 50);
  }
  else
  {
    *(void *)(v0 + 432) = v8;
    uint64_t v12 = *(void *)(v0 + 408);
    if (v8 >= *(void *)(v12 + 16))
    {
      __break(1u);
    }
    else
    {
      uint64_t v13 = v12 + 56 * v8;
      long long v14 = *(_OWORD *)(v13 + 32);
      long long v15 = *(_OWORD *)(v13 + 48);
      long long v16 = *(_OWORD *)(v13 + 64);
      *(void *)(v0 + 64) = *(void *)(v13 + 80);
      *(_OWORD *)(v0 + 32) = v15;
      *(_OWORD *)(v0 + 48) = v16;
      *(_OWORD *)(v0 + 16) = v14;
      sub_10002483C(v0 + 16);
      uint64_t v17 = *(void *)sub_1000134CC();
      uint64_t v18 = *(void *)sub_1000134C0();
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 440) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_10002180C;
      sub_100026570(v0 + 16, v17, v18);
    }
  }
}

unint64_t sub_100024138()
{
  return 0xD000000000000014;
}

uint64_t sub_100024154()
{
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10002419C()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 120) + **(int **)(*(void *)v0 + 120));
  os_log_type_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_10000AA94;
  return v4();
}

uint64_t sub_100024290()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000242D4()
{
  uint64_t v0 = *(void *)SubmitEventsActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100024308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  uint64_t v6[2] = a4;
  return _swift_task_switch(sub_10002432C, 0, 0);
}

uint64_t sub_10002432C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *(unsigned char *)(v0 + 56) = variable initialization expression of Daemon.mode() & 1;
  uint64_t v2 = *v1 + 256;
  *(void *)(v0 + 40) = *(void *)v2;
  *(void *)(v0 + 48) = v2 & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
  return _swift_task_switch(sub_1000243C0, v1, 0);
}

uint64_t sub_1000243C0()
{
  (*(void (**)(void, void, void))(v0 + 40))(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 56));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002442C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10002446C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10002444C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000245CC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10002446C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A390(&qword_1000AEBA8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_1000245CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A390(&qword_1000AEBB0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100024738()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100024780()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10001F8C8;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v5;
  return _swift_task_switch(sub_10002432C, 0, 0);
}

uint64_t sub_10002483C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100024888(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000248E8()
{
  unint64_t result = qword_1000AEAC8;
  if (!qword_1000AEAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEAC8);
  }
  return result;
}

unint64_t sub_100024940()
{
  unint64_t result = qword_1000AEAD0;
  if (!qword_1000AEAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEAD0);
  }
  return result;
}

unint64_t sub_100024998(uint64_t a1)
{
  unint64_t result = sub_1000249C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1000249C0()
{
  unint64_t result = qword_1000AEAE0;
  if (!qword_1000AEAE0)
  {
    type metadata accessor for SubmitEventsActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEAE0);
  }
  return result;
}

uint64_t type metadata accessor for SubmitEventsActivity()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SubmitEventsActivity.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100024AD4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubmitEventsActivity.Error()
{
  return &type metadata for SubmitEventsActivity.Error;
}

uint64_t sub_100024B0C()
{
  uint64_t v0 = NSHomeDirectory();
  sub_10008BFB0();

  sub_10008B990();
  return swift_bridgeObjectRelease();
}

BOOL sub_100024B7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100024B94()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B2568);
  sub_10000A358(v0, (uint64_t)qword_1000B2568);
  return sub_10008BD40();
}

uint64_t DiskCache.__allocating_init(rootCacheURL:)(uint64_t a1)
{
  swift_allocObject();
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_100018CB4;
  return DiskCache.init(rootCacheURL:)(a1);
}

uint64_t DiskCache.init(rootCacheURL:)(uint64_t a1)
{
  unsigned int v4 = v2;
  v2[20] = a1;
  v2[21] = v1;
  uint64_t v5 = v2 + 20;
  type metadata accessor for SQLiteDB.Location();
  uint64_t v6 = swift_task_alloc();
  v5[2] = v6;
  sub_10000A390(&qword_1000AEBC8);
  uint64_t v43 = swift_task_alloc();
  v5[3] = v43;
  uint64_t v7 = sub_10008BA60();
  v5[4] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = swift_task_alloc();
  v5[5] = v9;
  uint64_t v42 = swift_task_alloc();
  v5[6] = v42;
  swift_defaultActor_initialize();
  sub_10004A270(a1, (void *)0x636163746E657665, (void *)0xEB000000002F6568, v9);
  uint64_t v41 = v1;
  sub_10008B9D0();
  uint64_t v39 = v7;
  uint64_t v40 = v8;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v4[27] = v10;
  v4[28] = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v38 = v10;
  v10(v9, v7);
  sub_10000A390(&qword_1000AE3C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10008DC30;
  *(void *)(inited + 32) = NSURLFileSizeKey;
  uint64_t v12 = NSURLFileSizeKey;
  sub_10000C9F4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_10008B980();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_10008B910();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v43, 0, 1, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v43, 1, v13) == 1)
  {
    sub_10002899C(v43);
    uint64_t v15 = v6;
LABEL_3:
    type metadata accessor for SQLiteDB();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v15, v42, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v15, 0, 1, v39);
    *(void *)(v41 + 112) = sub_10006534C(v15);
    uint64_t v18 = (void *)swift_task_alloc();
    v4[29] = v18;
    *uint64_t v18 = v4;
    v18[1] = sub_100025520;
    v18[3] = v41;
    return _swift_task_switch(sub_1000259EC, v41, 0);
  }
  uint64_t v37 = sub_10008B8F0();
  char v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v43, v13);
  uint64_t v15 = v6;
  if (v20) {
    goto LABEL_3;
  }
  uint64_t v21 = v5;
  uint64_t v22 = sub_100048E38();
  swift_beginAccess();
  uint64_t v23 = (*v22 & 1) != 0 ? 0x140000000 : 3221225472;
  if (v37 <= v23) {
    goto LABEL_3;
  }
  uint64_t v24 = v5 - 3;
  unint64_t v25 = v5 - 1;
  if (*sub_100049310())
  {
    if (qword_1000B2560 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_10008BD50();
    sub_10000A358(v26, (uint64_t)qword_1000B2568);
    uint64_t v27 = sub_10008BD30();
    os_log_type_t v28 = sub_10008C2F0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134349312;
      *uint64_t v24 = v37;
      sub_10008C440();
      *(_WORD *)(v29 + 12) = 2050;
      swift_beginAccess();
      uint64_t v30 = 3221225472;
      if (*v22) {
        uint64_t v30 = 0x140000000;
      }
      *unint64_t v25 = v30;
      sub_10008C440();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "cache size %{public}ld exceeded maximum %{public}ld - cache delete overridden", (uint8_t *)v29, 0x16u);
      swift_slowDealloc();
    }

    goto LABEL_3;
  }
  if (qword_1000B2560 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_10008BD50();
  sub_10000A358(v31, (uint64_t)qword_1000B2568);
  uint64_t v32 = sub_10008BD30();
  os_log_type_t v33 = sub_10008C2F0();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 134349312;
    *(v21 - 2) = v37;
    sub_10008C440();
    *(_WORD *)(v34 + 12) = 2050;
    swift_beginAccess();
    uint64_t v35 = 3221225472;
    if (*v22) {
      uint64_t v35 = 0x140000000;
    }
    *(v21 - 4) = v35;
    sub_10008C440();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "cache size %{public}ld exceeded maximum %{public}ld - deleting cache", (uint8_t *)v34, 0x16u);
    swift_slowDealloc();
  }

  sub_1000289FC();
  swift_allocError();
  unsigned char *v36 = 1;
  swift_willThrow();
  v38(v42, v39);
  swift_defaultActor_destroy();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a1, v39);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v16 = (uint64_t (*)(void))v4[1];
  return v16();
}

uint64_t sub_100025520(uint64_t a1)
{
  unsigned int v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    a1 = 0;
LABEL_4:
    uint64_t v6 = (void *)swift_task_alloc();
    v4[30] = v6;
    void *v6 = v5;
    v6[1] = sub_100025728;
    uint64_t v7 = v4[21];
    v6[3] = a1;
    v6[4] = v7;
    return _swift_task_switch(sub_100025C04, v7, 0);
  }
  if (a1 <= 8) {
    goto LABEL_4;
  }
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v4[27];
  uint64_t v9 = v4[26];
  uint64_t v10 = v4[24];
  v8(v4[20], v10);
  v8(v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v11 = (uint64_t (*)(uint64_t))v5[1];
  uint64_t v12 = v4[21];
  return v11(v12);
}

uint64_t sub_100025728()
{
  uint64_t v2 = (void *)*v1;
  v2[31] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2[21] + 112);
    v2[32] = v3;
    swift_retain();
    return _swift_task_switch(sub_1000258E8, v3, 0);
  }
  else
  {
    unsigned int v4 = (void (*)(uint64_t, uint64_t))v2[27];
    uint64_t v5 = v2[26];
    uint64_t v6 = v2[24];
    v4(v2[20], v6);
    v4(v5, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(uint64_t))v2[1];
    uint64_t v8 = v2[21];
    return v7(v8);
  }
}

uint64_t sub_1000258E8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[27];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[20];
  sub_10006580C();
  swift_release();
  swift_willThrow();
  swift_release();
  v1(v2, v3);
  v1(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t DiskCache.schemaVersion.getter()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_1000259EC, v0, 0);
}

uint64_t sub_1000259EC()
{
  uint64_t v1 = *(void *)(v0[3] + 112);
  v0[4] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = 0x6E6F6973726576;
  *(void *)(v2 + 24) = 0xE700000000000000;
  return _swift_task_switch(sub_100025A7C, v1, 0);
}

uint64_t sub_100025A7C()
{
  sub_10006561C(0xD000000000000025, 0x80000001000929F0, (void (*)(void))sub_100028A50);
  v0[6] = 0;
  swift_task_dealloc();
  uint64_t v1 = v0[2];
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_100025B74()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *DiskCache.currentVersion.unsafeMutableAddressor()
{
  return &static DiskCache.currentVersion;
}

uint64_t sub_100025BE4(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_100025C04, v1, 0);
}

uint64_t sub_100025C04()
{
  if (v0[3])
  {
    if (qword_1000B2560 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_10008BD50();
    sub_10000A358(v1, (uint64_t)qword_1000B2568);
    uint64_t v2 = sub_10008BD30();
    os_log_type_t v3 = sub_10008C310();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "unsupported prior database version - deleting disk cache", v4, 2u);
      swift_slowDealloc();
    }

    sub_1000289FC();
    swift_allocError();
    unsigned char *v5 = 1;
    swift_willThrow();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v0[4] + 112);
    v0[5] = v8;
    return _swift_task_switch(sub_100025D94, v8, 0);
  }
}

uint64_t sub_100025D94()
{
  sub_1000657F4();
  *(void *)(v0 + 48) = 0;
  uint64_t v1 = *(void *)(v0 + 32);
  return _swift_task_switch(sub_100025E60, v1, 0);
}

uint64_t sub_100025E60()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  v2[2] = 0x6E6F6973726576;
  v2[3] = 0xE700000000000000;
  v2[4] = 9;
  return _swift_task_switch(sub_100025EF0, v1, 0);
}

uint64_t sub_100025EF0()
{
  uint64_t v1 = v0[6];
  sub_10006561C(0xD000000000000060, 0x8000000100092EB0, (void (*)(void))sub_10002A404);
  v0[8] = v1;
  if (v1)
  {
    uint64_t v2 = v0[4];
    uint64_t v3 = sub_100025FC8;
  }
  else
  {
    uint64_t v4 = v0[4];
    swift_task_dealloc();
    uint64_t v3 = sub_10002602C;
    uint64_t v2 = v4;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_100025FC8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002602C()
{
  if (qword_1000B2560 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B2568);
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C310();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 16) = 9;
    sub_10008C440();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "initialized disk cache with version %lld", v4, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100026178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000A390(&qword_1000AED18);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10008DC40;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = &off_1000A88B0;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  *(void *)(v9 + 96) = &type metadata for Int64;
  *(void *)(v9 + 104) = &off_1000A8870;
  *(void *)(v9 + 72) = a4;
  uint64_t v10 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  swift_bridgeObjectRetain();
  v10(v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_100026284()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002629C(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 48) = v6;
  *(void *)(v7 + 32) = a2;
  *(double *)(v7 + 24) = a3;
  *(void *)(v7 + 16) = a1;
  return _swift_task_switch(sub_1000262C8, v6);
}

uint64_t sub_1000262C8()
{
  uint64_t v1 = sub_10008BB60();
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    uint64_t v4 = 0;
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return _swift_task_switch(v1, v2);
  }
  uint64_t v4 = (uint64_t)v3;
LABEL_6:
  uint64_t v5 = sub_100028A7C(*(void **)(v0 + 40));
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 64) = v6;
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = *(void *)(*(void *)(v0 + 48) + 112);
  *(void *)(v0 + 72) = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v12;
  v12[2] = v10;
  uint64_t v12[3] = v9;
  v12[4] = v4;
  v12[5] = v7;
  v12[6] = v8;
  uint64_t v1 = (uint64_t)sub_10002641C;
  uint64_t v2 = v11;
  return _swift_task_switch(v1, v2);
}

uint64_t sub_10002641C()
{
  uint64_t v1 = v0[7];
  sub_10006561C(0xD0000000000000C4, 0x8000000100092A20, (void (*)(void))sub_100028E24);
  v0[11] = v1;
  if (v1)
  {
    uint64_t v2 = v0[6];
    double v3 = sub_100026500;
  }
  else
  {
    uint64_t v4 = v0[6];
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    double v3 = sub_100026284;
    uint64_t v2 = v4;
  }
  return _swift_task_switch(v3, v2);
}

uint64_t sub_100026500()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100026570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return _swift_task_switch(sub_100026594, v3, 0);
}

uint64_t sub_100026594()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = *(void *)(v1 + 112);
  v0[7] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  uint64_t v6[2] = v4;
  v6[3] = v2;
  v6[4] = v3;
  v6[5] = v1;
  return _swift_task_switch(sub_100026628, v5, 0);
}

uint64_t sub_100026628()
{
  sub_10000A390(&qword_1000AEBF8);
  sub_10006561C(0xD000000000000185, 0x8000000100092AF0, (void (*)(void))sub_100028FEC);
  *(void *)(v0 + 72) = 0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_100026710, v1, 0);
}

uint64_t sub_100026710()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_10002672C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100026790@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_10000A390(&qword_1000AED18);
  uint64_t v11 = swift_allocObject();
  long long v13 = a2[1];
  long long v20 = *a2;
  long long v12 = v20;
  *(_OWORD *)(v11 + 16) = xmmword_10008EBE0;
  *(_OWORD *)(v11 + 32) = v12;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = &off_1000A88B0;
  long long v19 = v13;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = &off_1000A88B0;
  *(_OWORD *)(v11 + 72) = v13;
  *(_OWORD *)uint64_t v18 = a2[2];
  *(void *)&v18[16] = *((void *)a2 + 6);
  char v14 = v18[0];
  *(void *)(v11 + 136) = &type metadata for Bool;
  *(void *)(v11 + 144) = &off_1000A8830;
  *(unsigned char *)(v11 + 112) = v14;
  char v15 = v18[1];
  *(void *)(v11 + 176) = &type metadata for Bool;
  *(void *)(v11 + 184) = &off_1000A8830;
  *(unsigned char *)(v11 + 152) = v15;
  *(void *)(v11 + 216) = &type metadata for String;
  *(void *)(v11 + 224) = &off_1000A88B0;
  *(_OWORD *)(v11 + 192) = *(_OWORD *)&v18[8];
  *(void *)(v11 + 256) = &type metadata for Int64;
  *(void *)(v11 + 264) = &off_1000A8870;
  *(void *)(v11 + 232) = a3;
  *(void *)(v11 + 296) = &type metadata for Int64;
  *(void *)(v11 + 304) = &off_1000A8870;
  *(void *)(v11 + 272) = a4;
  long long v16 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_1000298C8((uint64_t)&v20);
  sub_1000298C8((uint64_t)&v19);
  sub_10002A204((uint64_t)v18);
  v16(v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    __chkstk_darwin(result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)a1 + 144))(sub_10002A230);
    uint64_t result = (uint64_t)v21;
    *a5 = v21;
  }
  return result;
}

uint64_t sub_100026980(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1000269A0, v1, 0);
}

uint64_t sub_1000269A0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 112);
  v0[4] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  return _swift_task_switch(sub_100026A1C, v2, 0);
}

uint64_t sub_100026A1C()
{
  sub_100065688((void (*)(uint64_t))sub_10002900C);
  *(void *)(v0 + 48) = 0;
  uint64_t v1 = *(void *)(v0 + 24);
  swift_task_dealloc();
  return _swift_task_switch(sub_10002A41C, v1, 0);
}

uint64_t sub_100026ADC(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_100026AFC, v1, 0);
}

uint64_t sub_100026AFC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[4] + 112);
  v0[5] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  return _swift_task_switch(sub_100026B78, v2, 0);
}

uint64_t sub_100026B78()
{
  sub_10000A390(&qword_1000AEC10);
  sub_10006561C(0xD000000000000045, 0x8000000100092C80, (void (*)(void))sub_10002918C);
  *(void *)(v0 + 56) = 0;
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc();
  return _swift_task_switch(sub_100026710, v1, 0);
}

uint64_t sub_100026C60()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_100026CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_10000A390(&qword_1000AED18);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10008DC30;
  *(void *)(v7 + 56) = &type metadata for Int;
  *(void *)(v7 + 64) = &off_1000A8850;
  *(void *)(v7 + 32) = a2;
  (*(void (**)(void))(*(void *)a1 + 192))();
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (!v3)
  {
    __chkstk_darwin(result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)a1 + 144))(sub_100029FFC);
    uint64_t result = _swiftEmptyArrayStorage;
    *a3 = _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100026E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return _swift_task_switch(sub_100026E34, v3, 0);
}

uint64_t sub_100026E34()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 48) + 112);
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = v5;
  *(void *)(v3 + 32) = v1;
  return _swift_task_switch(sub_100026EC8, v2, 0);
}

uint64_t sub_100026EC8()
{
  sub_10000A390(&qword_1000AEC20);
  sub_10006561C(0xD000000000000091, 0x8000000100092CD0, (void (*)(void))sub_1000291A8);
  *(void *)(v0 + 72) = 0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_100026710, v1, 0);
}

void *sub_100026FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  sub_10000A390(&qword_1000AED18);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10008DC40;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = &off_1000A88B0;
  *(void *)(v11 + 32) = a2;
  *(void *)(v11 + 40) = a3;
  *(void *)(v11 + 96) = &type metadata for Int;
  *(void *)(v11 + 104) = &off_1000A8850;
  *(void *)(v11 + 72) = a4;
  long long v12 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  swift_bridgeObjectRetain();
  v12(v11);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (!v5)
  {
    __chkstk_darwin(result);
    (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)a1 + 144))(sub_100029AE4);
    uint64_t result = _swiftEmptyArrayStorage;
    *a5 = _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100027138(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_100027158, v1);
}

uint64_t sub_100027158()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[4] + 112);
  v0[5] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  return _swift_task_switch(sub_1000271D4, v2);
}

uint64_t sub_1000271D4()
{
  sub_100065688((void (*)(uint64_t))sub_1000291C8);
  *(void *)(v0 + 56) = 0;
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc();
  return _swift_task_switch(sub_100027298, v1);
}

uint64_t sub_100027298()
{
  if (v0[2] == 50)
  {
    uint64_t v1 = v0[5];
    uint64_t v2 = v0[3];
    uint64_t v3 = swift_task_alloc();
    v0[8] = v3;
    *(void *)(v3 + 16) = v2;
    return _swift_task_switch(sub_100027354, v1);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100027354()
{
  uint64_t v1 = v0[7];
  sub_100065688((void (*)(uint64_t))sub_1000291C8);
  if (v1)
  {
    v0[9] = v0[8];
    v0[10] = v1;
    uint64_t v2 = v0[4];
    uint64_t v3 = sub_100027418;
  }
  else
  {
    v0[7] = 0;
    uint64_t v4 = v0[4];
    swift_task_dealloc();
    uint64_t v3 = sub_100027298;
    uint64_t v2 = v4;
  }
  return _swift_task_switch(v3, v2);
}

uint64_t sub_100027418()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002747C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_10008BBB0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  (*(void (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, char *))(*(void *)a1 + 128))(0xD00000000000004BLL, 0x8000000100092F80, sub_100029984, v11, &type metadata for ()[8]);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(result);
    *a3 = result;
  }
  return result;
}

uint64_t sub_100027644(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_100027668, v2);
}

uint64_t sub_100027668()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[4] + 112);
  v0[5] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  *(void *)(v3 + 16) = v1;
  return _swift_task_switch(sub_1000276E4, v2);
}

uint64_t sub_1000276E4()
{
  sub_10000A390(&qword_1000AEC38);
  sub_10006561C(0xD000000000000046, 0x8000000100092D70, (void (*)(void))sub_1000291E4);
  *(void *)(v0 + 56) = 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000277E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_100064D24(0, a1, (uint64_t)&type metadata for String, (uint64_t)&off_1000A88A0);
  if (v8)
  {
    sub_100064CAC(1, a1, (uint64_t)&type metadata for Int64, (uint64_t)&off_1000A8860);
    uint64_t v4 = sub_10000A390(&qword_1000AED20);
    *a2 = v7;
    a2[1] = v8;
    sub_10008BB50();
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 0, 1, v4);
  }
  else
  {
    sub_1000289FC();
    swift_allocError();
    unsigned char *v6 = 0;
    return swift_willThrow();
  }
}

uint64_t sub_100027910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return _swift_task_switch(sub_100027938, v4);
}

uint64_t sub_100027938()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[6];
  if (v1)
  {
    uint64_t v3 = v0[5];
    uint64_t v5 = v0[2];
    uint64_t v4 = v0[3];
    uint64_t v6 = *(void *)(v2 + 112);
    v0[7] = v6;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[8] = v7;
    v7[2] = v3;
    v7[3] = v5;
    v7[4] = v4;
    v7[5] = v1;
    uint64_t v8 = sub_100027A04;
  }
  else
  {
    uint64_t v9 = v0[2];
    uint64_t v6 = *(void *)(v2 + 112);
    v0[10] = v6;
    uint64_t v10 = swift_task_alloc();
    v0[11] = v10;
    *(void *)(v10 + 16) = v9;
    uint64_t v8 = sub_100027ADC;
  }
  return _swift_task_switch(v8, v6);
}

uint64_t sub_100027A04()
{
  sub_10006561C(0xD0000000000000A8, 0x8000000100092E00, (void (*)(void))sub_100029504);
  *(void *)(v0 + 72) = 0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_100026284, v1);
}

uint64_t sub_100027ADC()
{
  sub_10006561C(0xD000000000000038, 0x8000000100092DC0, (void (*)(void))sub_1000293E4);
  *(void *)(v0 + 96) = 0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_10002A41C, v1);
}

uint64_t sub_100027BB4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100027C14()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100027C74()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100027C94, v0, 0);
}

uint64_t sub_100027C94()
{
  uint64_t v1 = *(void *)(v0[3] + 112);
  v0[4] = v1;
  v0[5] = 0;
  return _swift_task_switch(sub_100027CB8, v1, 0);
}

uint64_t sub_100027CB8()
{
  uint64_t v1 = v0[5];
  sub_100065688((void (*)(uint64_t))sub_100027DC8);
  v0[6] = v1;
  uint64_t v2 = v0[3];
  if (v1) {
    uint64_t v3 = sub_100027DB0;
  }
  else {
    uint64_t v3 = sub_100027D64;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_100027D64()
{
  if (*(void *)(v0 + 16) != 50) {
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(void *)(v0 + 40) = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100027CB8, *(void *)(v0 + 32), 0);
}

uint64_t sub_100027DB0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100027DC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), void, char *))(*(void *)a1 + 128))(0xD00000000000001DLL, 0x8000000100092F60, sub_100027E88, 0, &type metadata for ()[8]);
  if (!v2)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(result);
    *a2 = result;
  }
  return result;
}

uint64_t sub_100027E88(uint64_t a1)
{
  return sub_10002846C(a1);
}

uint64_t sub_100027EA0()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100027EC0, v0, 0);
}

uint64_t sub_100027EC0()
{
  uint64_t v1 = *(void *)(v0[3] + 112);
  v0[4] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = 0x554E447473616CLL;
  *(void *)(v2 + 24) = 0xE700000000000000;
  return _swift_task_switch(sub_100027F50, v1, 0);
}

uint64_t sub_100027F50()
{
  sub_10006561C(0xD000000000000025, 0x80000001000929F0, (void (*)(void))sub_100029660);
  v0[6] = 0;
  swift_task_dealloc();
  BOOL v1 = v0[2] != 0;
  uint64_t v2 = (uint64_t (*)(BOOL))v0[1];
  return v2(v1);
}

uint64_t sub_100028050()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_task_dealloc();
  *(void *)(v0 + 16) = v1;
  swift_errorRetain();
  sub_10000A390(&qword_1000B0870);
  if (swift_dynamicCast() && !*(unsigned char *)(v0 + 56))
  {
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v4(2);
  }
  else
  {
    swift_errorRelease();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_100028158(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return _swift_task_switch(sub_10002817C, v1, 0);
}

uint64_t sub_10002817C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 112);
  *(void *)(v0 + 24) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  v3[2] = 0x554E447473616CLL;
  v3[3] = 0xE700000000000000;
  v3[4] = v1;
  return _swift_task_switch(sub_100028214, v2, 0);
}

uint64_t sub_100028214()
{
  sub_10006561C(0xD000000000000060, 0x8000000100092EB0, (void (*)(void))sub_10002968C);
  *(void *)(v0 + 40) = 0;
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  return _swift_task_switch(sub_10002A41C, v1, 0);
}

uint64_t sub_1000282EC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100028350()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100028370, v0);
}

uint64_t sub_100028370()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 112);
  *(void *)(v0 + 24) = v1;
  return _swift_task_switch(sub_100028394, v1);
}

uint64_t sub_100028394()
{
  sub_10006561C(0x4D5555434156, 0xE600000000000000, (void (*)(void))sub_100027E88);
  *(void *)(v0 + 32) = 0;
  uint64_t v1 = *(void *)(v0 + 16);
  return _swift_task_switch(sub_100026284, v1);
}

uint64_t sub_100028454()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10002846C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 176))();
}

uint64_t DiskCache.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DiskCache.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t static DiskCache.currentVersion.getter()
{
  return 9;
}

void *sub_100028518(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000A390(&qword_1000AED30);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100029D00(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10002863C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000A390(&qword_1000B0620);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100029E10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10002874C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000A390(&qword_1000AED28);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100029F04(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100028878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  sub_10000A390(&qword_1000AED18);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10008DC30;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = &off_1000A88B0;
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a3;
  char v14 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  swift_bridgeObjectRetain();
  v14(v13);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)a1 + 160))(&v16, a4, a5);
    *a6 = v16;
  }
  return result;
}

uint64_t sub_10002899C(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AEBC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000289FC()
{
  unint64_t result = qword_1000AEBE0;
  if (!qword_1000AEBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEBE0);
  }
  return result;
}

void *sub_100028A50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100028878(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&type metadata for Int64, (uint64_t)&off_1000A8860, a2);
}

void *sub_100028A7C(void *a1)
{
  uint64_t v3 = sub_10008C000();
  __chkstk_darwin(v3 - 8);
  sub_10008B7E0();
  swift_allocObject();
  sub_10008B7D0();
  swift_bridgeObjectRetain();
  sub_10000A390((uint64_t *)&unk_1000AF050);
  sub_10000A81C();
  uint64_t v4 = sub_10008B7C0();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return a1;
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  swift_bridgeObjectRelease();
  uint64_t v8 = 0;
  switch(v7 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v6), v6))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v8 = HIDWORD(v6) - (int)v6;
LABEL_8:
      size_t v11 = sub_1000134CC();
      if (*v11 >= v8)
      {
        sub_10008BFF0();
        uint64_t v17 = sub_10008BFD0();
        if (v18)
        {
          a1 = (void *)v17;
          sub_10000A43C(v6, v7);
          swift_release();
          return a1;
        }
LABEL_26:
        __break(1u);
        JUMPOUT(0x100028E04);
      }
      a1 = v11;
      if (qword_1000B2560 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_10008BD50();
      sub_10000A358(v12, (uint64_t)qword_1000B2568);
      sub_10000A494(v6, v7);
      uint64_t v13 = sub_10008BD30();
      os_log_type_t v14 = sub_10008C2F0();
      if (os_log_type_enabled(v13, v14))
      {
        char v15 = (_DWORD *)swift_slowAlloc();
        *char v15 = 134349312;
        uint64_t v16 = v15;
        switch(v7 >> 62)
        {
          case 1uLL:
            if (!__OFSUB__(HIDWORD(v6), v6)) {
              goto LABEL_19;
            }
            goto LABEL_24;
          case 2uLL:
            if (!__OFSUB__(*(void *)(v6 + 24), *(void *)(v6 + 16))) {
              goto LABEL_19;
            }
            goto LABEL_25;
          default:
LABEL_19:
            sub_10008C440();
            sub_10000A43C(v6, v7);
            *((_WORD *)v16 + 6) = 2050;
            sub_10008C440();
            _os_log_impl((void *)&_mh_execute_header, v13, v14, "event too large: (%{public}ld > %{public}lld", (uint8_t *)v16, 0x16u);
            swift_slowDealloc();
            break;
        }
      }
      else
      {
        sub_10000A43C(v6, v7);
      }

      sub_1000289FC();
      swift_allocError();
      *long long v19 = 0;
      swift_willThrow();
      sub_10000A43C(v6, v7);
      swift_release();
      return a1;
    case 2uLL:
      uint64_t v10 = *(void *)(v6 + 16);
      uint64_t v9 = *(void *)(v6 + 24);
      uint64_t v8 = v9 - v10;
      if (!__OFSUB__(v9, v10)) {
        goto LABEL_8;
      }
      goto LABEL_23;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v8 = BYTE6(v7);
      goto LABEL_8;
  }
}

uint64_t sub_100028E24(uint64_t a1)
{
  uint64_t v3 = v1;
  unint64_t v5 = (long long *)v3[2];
  uint64_t v6 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v7 = v3[5];
  uint64_t v9 = v3[6];
  sub_10000A390(&qword_1000AED18);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10008EBD0;
  long long v17 = *v5;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = &off_1000A88B0;
  *(_OWORD *)(v10 + 32) = *v5;
  long long v16 = v5[1];
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = &off_1000A88B0;
  *(_OWORD *)(v10 + 72) = v5[1];
  *(_OWORD *)char v15 = v5[2];
  *(void *)&v15[16] = *((void *)v5 + 6);
  char v11 = v15[0];
  *(void *)(v10 + 136) = &type metadata for Bool;
  *(void *)(v10 + 144) = &off_1000A8830;
  *(unsigned char *)(v10 + 112) = v11;
  char v12 = v15[1];
  *(void *)(v10 + 176) = &type metadata for Bool;
  *(void *)(v10 + 184) = &off_1000A8830;
  *(unsigned char *)(v10 + 152) = v12;
  *(void *)(v10 + 216) = &type metadata for String;
  *(void *)(v10 + 224) = &off_1000A88B0;
  *(_OWORD *)(v10 + 192) = *(_OWORD *)&v15[8];
  *(void *)(v10 + 256) = &type metadata for Double;
  *(void *)(v10 + 264) = &off_1000A8890;
  *(void *)(v10 + 232) = v6;
  *(void *)(v10 + 296) = &type metadata for Int64;
  *(void *)(v10 + 304) = &off_1000A8870;
  *(void *)(v10 + 272) = v8;
  *(void *)(v10 + 336) = &type metadata for String;
  *(void *)(v10 + 344) = &off_1000A88B0;
  *(void *)(v10 + 312) = v7;
  *(void *)(v10 + 320) = v9;
  uint64_t v13 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_1000298C8((uint64_t)&v17);
  sub_1000298C8((uint64_t)&v16);
  sub_10002A204((uint64_t)v15);
  swift_bridgeObjectRetain();
  v13(v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_100028FEC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100026790(a1, *(long long **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_10002900C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v11 = *(void *)(v5 + 16);
  if (!v11) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 144))(a1);
  }
  uint64_t v10 = *(void (**)(unint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t, char *))(*(void *)a1 + 128);
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(v5 + 8 * v6 + 32);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    v10(0xD000000000000038, 0x8000000100092FD0, sub_10002A128, v8, &type metadata for ()[8]);
    if (v2) {
      break;
    }
    swift_release();
    if (v11 == ++v6)
    {
      a1 = swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 144))(a1);
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_10002918C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100026CC4(a1, *(void *)(v2 + 16), a2);
}

void *sub_1000291A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100026FB0(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1000291C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10002747C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1000291E4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(long long **)(v3 + 16);
  sub_10000A390(&qword_1000AED18);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10008DC40;
  long long v12 = *v5;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = &off_1000A88B0;
  *(_OWORD *)(v6 + 32) = *v5;
  long long v11 = v5[1];
  *(void *)(v6 + 96) = &type metadata for String;
  *(void *)(v6 + 104) = &off_1000A88B0;
  *(_OWORD *)(v6 + 72) = v5[1];
  uint64_t v7 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_1000298C8((uint64_t)&v12);
  sub_1000298C8((uint64_t)&v11);
  v7(v6);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, void *@<X8>), void, uint64_t))(*(void *)a1 + 152);
  uint64_t v10 = sub_10000A390(&qword_1000AEC38);
  return v9(sub_1000277E8, 0, v10);
}

uint64_t sub_1000293E4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(long long **)(v3 + 16);
  sub_10000A390(&qword_1000AED18);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10008DC40;
  long long v10 = *v5;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = &off_1000A88B0;
  *(_OWORD *)(v6 + 32) = *v5;
  long long v9 = v5[1];
  *(void *)(v6 + 96) = &type metadata for String;
  *(void *)(v6 + 104) = &off_1000A88B0;
  *(_OWORD *)(v6 + 72) = v5[1];
  uint64_t v7 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_1000298C8((uint64_t)&v10);
  sub_1000298C8((uint64_t)&v9);
  v7(v6);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_100029504(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = (long long *)v3[3];
  uint64_t v7 = v3[4];
  uint64_t v6 = v3[5];
  uint64_t v8 = getTimeIntervalSince1970(Date:)();
  sub_10000A390(&qword_1000AED18);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10008EBF0;
  long long v13 = *v5;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = &off_1000A88B0;
  *(_OWORD *)(v9 + 32) = *v5;
  long long v12 = v5[1];
  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = &off_1000A88B0;
  *(_OWORD *)(v9 + 72) = v5[1];
  *(void *)(v9 + 136) = &type metadata for String;
  *(void *)(v9 + 144) = &off_1000A88B0;
  *(void *)(v9 + 112) = v7;
  *(void *)(v9 + 120) = v6;
  *(void *)(v9 + 176) = &type metadata for Int64;
  *(void *)(v9 + 184) = &off_1000A8870;
  *(void *)(v9 + 152) = v8;
  long long v10 = *(void (**)(uint64_t))(*(void *)a1 + 192);
  sub_1000298C8((uint64_t)&v13);
  sub_1000298C8((uint64_t)&v12);
  swift_bridgeObjectRetain();
  v10(v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

void *sub_100029660@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100028878(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&type metadata for Int, (uint64_t)&off_1000A8840, a2);
}

uint64_t sub_10002968C(uint64_t a1)
{
  return sub_100026178(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1000296B0()
{
  unint64_t result = qword_1000AEC68;
  if (!qword_1000AEC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEC68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DiskCacheError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DiskCacheError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100029860);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100029888(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DiskCacheError()
{
  return &type metadata for DiskCacheError;
}

uint64_t type metadata accessor for DiskCache()
{
  return self;
}

uint64_t sub_1000298C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000298F4()
{
  uint64_t v1 = sub_10008BBB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100029984(uint64_t a1)
{
  sub_10008BBB0();
  uint64_t result = sub_10008BB60();
  uint64_t v5 = 0;
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0) {
    goto LABEL_5;
  }
  if (v4 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v5 = (uint64_t)v4;
LABEL_5:
  sub_10000A390(&qword_1000AED18);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10008DC30;
  *(void *)(v6 + 56) = &type metadata for Int64;
  *(void *)(v6 + 64) = &off_1000A8870;
  *(void *)(v6 + 32) = v5;
  (*(void (**)(void))(*(void *)a1 + 192))();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_100029AE4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  sub_100064D24(0, a1, (uint64_t)&type metadata for String, (uint64_t)&off_1000A88A0);
  if (v24)
  {
    sub_100064D24(3, a1, (uint64_t)&type metadata for String, (uint64_t)&off_1000A88A0);
    uint64_t v27 = v3;
    sub_100064CAC(1, a1, (uint64_t)&type metadata for Bool, (uint64_t)&off_1000A8820);
    sub_100064CAC(2, a1, (uint64_t)&type metadata for Bool, (uint64_t)&off_1000A8820);
    __int16 v6 = sub_100068F64(v23, v23);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    __int16 v11 = v6 & 0x101;
    swift_bridgeObjectRetain();
    __int16 v12 = v11;
    long long v13 = v27;
    sub_100068F84(v4, v5, v23, v24, v12, v8, v10, (uint64_t)v25);
    os_log_type_t v14 = (void *)*v13;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v13 = (uint64_t)v14;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_10002874C(0, v14[2] + 1, 1, v14);
      os_log_type_t v14 = (void *)result;
      uint64_t *v13 = result;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      uint64_t result = (uint64_t)sub_10002874C((void *)(v16 > 1), v17 + 1, 1, v14);
      os_log_type_t v14 = (void *)result;
      uint64_t *v13 = result;
    }
    v14[2] = v17 + 1;
    uint64_t v18 = &v14[7 * v17];
    long long v19 = v25[0];
    long long v20 = v25[1];
    long long v21 = v25[2];
    v18[10] = v26;
    *((_OWORD *)v18 + 3) = v20;
    *((_OWORD *)v18 + 4) = v21;
    *((_OWORD *)v18 + 2) = v19;
  }
  else
  {
    sub_1000289FC();
    swift_allocError();
    *uint64_t v22 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100029D00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10000A390(&qword_1000AED38);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100029E10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100029F04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100029FFC(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 16);
  sub_100064D24(0, a1, (uint64_t)&type metadata for String, (uint64_t)&off_1000A88A0);
  if (v10)
  {
    uint64_t v3 = (void *)*v2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t *v2 = (uint64_t)v3;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_10002863C(0, v3[2] + 1, 1, v3);
      uint64_t v3 = (void *)result;
      uint64_t *v2 = result;
    }
    unint64_t v6 = v3[2];
    unint64_t v5 = v3[3];
    if (v6 >= v5 >> 1)
    {
      uint64_t result = (uint64_t)sub_10002863C((void *)(v5 > 1), v6 + 1, 1, v3);
      uint64_t v3 = (void *)result;
      uint64_t *v2 = result;
    }
    v3[2] = v6 + 1;
    uint64_t v7 = &v3[2 * v6];
    v7[4] = v9;
    v7[5] = v10;
  }
  else
  {
    sub_1000289FC();
    swift_allocError();
    *uint64_t v8 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10002A118()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002A128(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v3 + 16);
  sub_10000A390(&qword_1000AED18);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10008DC30;
  *(void *)(v6 + 56) = &type metadata for Int64;
  *(void *)(v6 + 64) = &off_1000A8870;
  *(void *)(v6 + 32) = v5;
  (*(void (**)(void))(*(void *)a1 + 192))();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 176))(result);
  }
  return result;
}

uint64_t sub_10002A204(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002A230(uint64_t a1)
{
  uint64_t v4 = *(uint64_t **)(v1 + 16);
  sub_100064D24(2, a1, (uint64_t)&type metadata for String, (uint64_t)&off_1000A88A0);
  if (v23)
  {
    sub_100064CAC(0, a1, (uint64_t)&type metadata for Double, (uint64_t)&off_1000A8880);
    sub_100064CAC(1, a1, (uint64_t)&type metadata for Int64, (uint64_t)&off_1000A8860);
    uint64_t result = sub_1000342EC(v22, 0x4D656E4F646E6553);
    if (!v2)
    {
      uint64_t v9 = result;
      uint64_t v10 = v6;
      uint64_t v11 = v7;
      uint64_t v12 = v8;
      long long v13 = (void *)*v4;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v4 = (uint64_t)v13;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100028518(0, v13[2] + 1, 1, v13);
        long long v13 = (void *)result;
        *uint64_t v4 = result;
      }
      unint64_t v14 = v13[2];
      unint64_t v15 = v13[3];
      unint64_t v16 = v14 + 1;
      if (v14 >= v15 >> 1)
      {
        unint64_t v21 = v14 + 1;
        long long v19 = v13;
        unint64_t v20 = v13[2];
        uint64_t result = (uint64_t)sub_100028518((void *)(v15 > 1), v14 + 1, 1, v19);
        unint64_t v14 = v20;
        unint64_t v16 = v21;
        long long v13 = (void *)result;
        *uint64_t v4 = result;
      }
      void v13[2] = v16;
      unint64_t v17 = &v13[5 * v14];
      v17[4] = v22;
      v17[5] = v9;
      v17[6] = v10;
      v17[7] = v11;
      v17[8] = v12;
    }
  }
  else
  {
    sub_1000289FC();
    swift_allocError();
    *uint64_t v18 = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10002A404(uint64_t a1)
{
  return sub_10002968C(a1);
}

uint64_t sub_10002A420()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6D28);
  sub_10000A358(v0, (uint64_t)qword_1000B6D28);
  return sub_10008BD40();
}

void sub_10002A4A0()
{
  qword_1000B6D40 = (uint64_t)&_swiftEmptyArrayStorage;
}

void sub_10002A4B4()
{
  qword_1000B6D48 = (uint64_t)&_swiftEmptySetSingleton;
}

void sub_10002A4C8()
{
  qword_1000B6D50 = (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t sub_10002A4DC()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000AED48 + dword_1000AED48);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001F8C8;
  return v3();
}

uint64_t sub_10002A57C()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 88) + **(int **)(*(void *)v0 + 88));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_10000AA94;
  return v4();
}

uint64_t sub_10002A670()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10002A6B4()
{
  uint64_t v0 = *(void *)PostInstallActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10002A6E8()
{
  uint64_t v1 = sub_10008B970();
  v0[18] = v1;
  v0[19] = *(void *)(v1 - 8);
  v0[20] = swift_task_alloc();
  uint64_t v2 = sub_10008BA60();
  v0[21] = v2;
  v0[22] = *(void *)(v2 - 8);
  v0[23] = swift_task_alloc();
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  v0[26] = swift_task_alloc();
  v0[27] = swift_task_alloc();
  return _swift_task_switch(sub_10002A860, 0, 0);
}

uint64_t sub_10002A860()
{
  unint64_t v113 = v0;
  uint64_t v1 = (uint64_t)(v0 + 8);
  id v98 = [self defaultManager];
  if (qword_1000B2788 != -1) {
LABEL_78:
  }
    swift_once();
  uint64_t v2 = *(void *)(qword_1000B6D40 + 16);
  uint64_t v3 = swift_arrayDestroy;
  Class v105 = v0;
  if (v2)
  {
    uint64_t v96 = v1;
    Swift::String_optional v97 = v0 + 16;
    uint64_t v4 = v0[22];
    uint64_t v5 = v0[19];
    unsigned int v103 = enum case for URL.DirectoryHint.isDirectory(_:);
    Swift::String v101 = (void (**)(uint64_t, void, uint64_t))(v5 + 104);
    Swift::String_optional v99 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    unint64_t v110 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    Class v106 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v6 = (void *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v7 = v0[26];
      uint64_t v9 = v0[20];
      uint64_t v8 = v0[21];
      uint64_t v10 = v0[18];
      uint64_t v12 = *(v6 - 1);
      uint64_t v11 = *v6;
      uint64_t v108 = v6;
      swift_bridgeObjectRetain();
      sub_100024B0C();
      v0[14] = v12;
      v0[15] = v11;
      (*v101)(v9, v103, v10);
      sub_10002B864();
      sub_10008BA50();
      (*v99)(v9, v10);
      long long v13 = *v110;
      (*v110)(v7, v8);
      swift_bridgeObjectRelease();
      if (sub_10008B9F0())
      {
        uint64_t v0 = v105;
        if (qword_1000B2780 != -1) {
          swift_once();
        }
        uint64_t v14 = v105[27];
        uint64_t v15 = v105[25];
        uint64_t v16 = v105[21];
        uint64_t v17 = sub_10008BD50();
        sub_10000A358(v17, (uint64_t)qword_1000B6D28);
        uint64_t v18 = *v106;
        (*v106)(v15, v14, v16);
        long long v19 = sub_10008BD30();
        os_log_type_t v20 = sub_10008C310();
        BOOL v21 = os_log_type_enabled(v19, v20);
        uint64_t v22 = v105[25];
        uint64_t v23 = v105[21];
        if (v21)
        {
          uint64_t v24 = swift_slowAlloc();
          v112[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v24 = 136446210;
          uint64_t v25 = sub_10008BA30();
          *(void *)(v24 + 4) = sub_100009D00(v25, v26, v112);
          swift_bridgeObjectRelease();
          v13(v22, v23);
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "removing %{public}s", (uint8_t *)v24, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v0 = v105;
          swift_slowDealloc();
        }
        else
        {
          v13(v22, v23);
        }

        sub_10008B9C0(v40);
        uint64_t v42 = v41;
        v0[16] = 0;
        unsigned int v43 = [v98 removeItemAtURL:v41 error:v97];

        uint64_t v44 = (void *)v0[16];
        uint64_t v45 = v0[27];
        if (v43)
        {
          uint64_t v46 = v0[21];
          id v47 = v44;
          v13(v45, v46);
        }
        else
        {
          uint64_t v48 = v0[23];
          uint64_t v49 = v0[21];
          id v50 = v44;
          sub_10008B960();

          swift_willThrow();
          v18(v48, v45, v49);
          swift_errorRetain();
          swift_errorRetain();
          unint64_t v51 = sub_10008BD30();
          os_log_type_t v52 = sub_10008C2F0();
          BOOL v53 = os_log_type_enabled(v51, v52);
          uint64_t v54 = v0[27];
          uint64_t v55 = v0[23];
          uint64_t v56 = v0[21];
          if (v53)
          {
            uint64_t v57 = swift_slowAlloc();
            v112[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v57 = 136446466;
            uint64_t v58 = sub_10008BA30();
            *(void *)(v57 + 4) = sub_100009D00(v58, v59, v112);
            swift_bridgeObjectRelease();
            v13(v55, v56);
            *(_WORD *)(v57 + 12) = 2082;
            swift_getErrorValue();
            uint64_t v60 = sub_10008C890();
            *(void *)(v57 + 14) = sub_100009D00(v60, v61, v112);
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v51, v52, "failed removing %{public}s: %{public}s", (uint8_t *)v57, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_errorRelease();
            swift_errorRelease();
            v13(v55, v56);
          }
          swift_errorRelease();
          v13(v54, v56);
        }
      }
      else
      {
        uint64_t v0 = v105;
        if (qword_1000B2780 != -1) {
          swift_once();
        }
        uint64_t v27 = v105[27];
        uint64_t v28 = v105[24];
        uint64_t v29 = v105[21];
        uint64_t v30 = sub_10008BD50();
        sub_10000A358(v30, (uint64_t)qword_1000B6D28);
        (*v106)(v28, v27, v29);
        uint64_t v31 = sub_10008BD30();
        os_log_type_t v32 = sub_10008C2E0();
        BOOL v33 = os_log_type_enabled(v31, v32);
        uint64_t v34 = v105[27];
        uint64_t v35 = v105[24];
        uint64_t v36 = v105[21];
        if (v33)
        {
          uint64_t v37 = swift_slowAlloc();
          v112[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v37 = 136446210;
          uint64_t v38 = sub_10008BA30();
          *(void *)(v37 + 4) = sub_100009D00(v38, v39, v112);
          swift_bridgeObjectRelease();
          v13(v35, v36);
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "skipping %{public}s", (uint8_t *)v37, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v0 = v105;
          swift_slowDealloc();
        }
        else
        {

          v13(v35, v36);
        }
        v13(v34, v36);
      }
      uint64_t v6 = v108 + 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v1 = v96;
    uint64_t v3 = swift_arrayDestroy;
  }
  uint64_t v62 = sub_100048EFC();
  swift_beginAccess();
  id v63 = [(id)*v62 dictionaryRepresentation];
  uint64_t v64 = sub_10008BF00();

  uint64_t v102 = v64 + 64;
  uint64_t v65 = -1 << *(unsigned char *)(v64 + 32);
  if (-v65 < 64) {
    uint64_t v66 = ~(-1 << -(char)v65);
  }
  else {
    uint64_t v66 = -1;
  }
  unint64_t v67 = v66 & *(void *)(v64 + 64);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v68 = 0;
  int64_t v104 = (unint64_t)(63 - v65) >> 6;
  int v111 = *((void *)v3 + 387);
  uint64_t v100 = v64;
  while (1)
  {
    if (v67)
    {
      uint64_t v107 = (v67 - 1) & v67;
      int64_t v109 = v68;
      unint64_t v69 = __clz(__rbit64(v67)) | (v68 << 6);
      goto LABEL_47;
    }
    BOOL v70 = __OFADD__(v68, 1);
    int64_t v71 = v68 + 1;
    if (v70)
    {
      __break(1u);
      goto LABEL_78;
    }
    if (v71 >= v104) {
      goto LABEL_74;
    }
    unint64_t v72 = *(void *)(v102 + 8 * v71);
    if (!v72) {
      break;
    }
LABEL_46:
    uint64_t v107 = (v72 - 1) & v72;
    int64_t v109 = v71;
    unint64_t v69 = __clz(__rbit64(v72)) + (v71 << 6);
LABEL_47:
    uint64_t v74 = (uint64_t *)(*(void *)(v64 + 48) + 16 * v69);
    uint64_t v76 = *v74;
    unint64_t v75 = v74[1];
    uint64_t v77 = qword_1000B2780;
    swift_bridgeObjectRetain();
    if (v77 != -1) {
      swift_once();
    }
    uint64_t v78 = sub_10008BD50();
    sub_10000A358(v78, (uint64_t)qword_1000B6D28);
    swift_bridgeObjectRetain_n();
    id v79 = sub_10008BD30();
    os_log_type_t v80 = sub_10008C2E0();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = swift_slowAlloc();
      v112[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = v111;
      swift_bridgeObjectRetain();
      *(void *)(v81 + 4) = sub_100009D00(v76, v75, v112);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "default set: %{public}s", (uint8_t *)v81, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if (qword_1000B2790 != -1) {
      swift_once();
    }
    if (sub_10001B408(v76, v75, qword_1000B6D48))
    {
      swift_bridgeObjectRetain_n();
      uint64_t v82 = sub_10008BD30();
      os_log_type_t v83 = sub_10008C310();
      if (os_log_type_enabled(v82, v83))
      {
        uint64_t v84 = swift_slowAlloc();
        v112[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v84 = v111;
        swift_bridgeObjectRetain();
        *(void *)(v84 + 4) = sub_100009D00(v76, v75, v112);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "removing default %{public}s", (uint8_t *)v84, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      id v93 = (id)*v62;
      uint64_t v1 = (uint64_t)sub_10008BF80();
      swift_bridgeObjectRelease();
      [v93 removeObjectForKey:v1];
    }
    else
    {
      if (qword_1000B2798 != -1) {
        swift_once();
      }
      uint64_t v1 = qword_1000B6D50;
      uint64_t v85 = *(void *)(qword_1000B6D50 + 16);
      if (v85)
      {
        swift_bridgeObjectRetain();
        swift_beginAccess();
        unint64_t v86 = (void **)(v1 + 40);
        do
        {
          uint64_t v88 = (uint64_t)*(v86 - 1);
          uint64_t v89 = *v86;
          swift_bridgeObjectRetain();
          v115._countAndFlagsBits = v88;
          v115._object = v89;
          uint64_t v1 = sub_10008C0E0(v115);
          swift_bridgeObjectRelease();
          if (v1)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v90 = sub_10008BD30();
            os_log_type_t v91 = sub_10008C310();
            if (os_log_type_enabled(v90, v91))
            {
              uint64_t v92 = swift_slowAlloc();
              v112[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v92 = v111;
              swift_bridgeObjectRetain();
              *(void *)(v92 + 4) = sub_100009D00(v76, v75, v112);
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v90, v91, "removing default %{public}s", (uint8_t *)v92, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            uint64_t v1 = (uint64_t)(id)*v62;
            NSString v87 = sub_10008BF80();
            [(id)v1 removeObjectForKey:v87];
          }
          v86 += 2;
          --v85;
        }
        while (v85);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v0 = v105;
        uint64_t v64 = v100;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    unint64_t v67 = v107;
    int64_t v68 = v109;
  }
  int64_t v73 = v71 + 1;
  if (v71 + 1 >= v104) {
    goto LABEL_74;
  }
  unint64_t v72 = *(void *)(v102 + 8 * v73);
  if (v72) {
    goto LABEL_45;
  }
  int64_t v73 = v71 + 2;
  if (v71 + 2 >= v104) {
    goto LABEL_74;
  }
  unint64_t v72 = *(void *)(v102 + 8 * v73);
  if (v72) {
    goto LABEL_45;
  }
  int64_t v73 = v71 + 3;
  if (v71 + 3 >= v104) {
    goto LABEL_74;
  }
  unint64_t v72 = *(void *)(v102 + 8 * v73);
  if (v72) {
    goto LABEL_45;
  }
  int64_t v73 = v71 + 4;
  if (v71 + 4 >= v104) {
    goto LABEL_74;
  }
  unint64_t v72 = *(void *)(v102 + 8 * v73);
  if (v72) {
    goto LABEL_45;
  }
  int64_t v73 = v71 + 5;
  if (v71 + 5 >= v104) {
    goto LABEL_74;
  }
  unint64_t v72 = *(void *)(v102 + 8 * v73);
  if (v72)
  {
LABEL_45:
    int64_t v71 = v73;
    goto LABEL_46;
  }
  while (1)
  {
    int64_t v71 = v73 + 1;
    if (__OFADD__(v73, 1)) {
      __break(1u);
    }
    if (v71 >= v104) {
      break;
    }
    unint64_t v72 = *(void *)(v102 + 8 * v71);
    ++v73;
    if (v72) {
      goto LABEL_46;
    }
  }
LABEL_74:
  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v94 = (uint64_t (*)(void))v0[1];
  return v94();
}

unint64_t sub_10002B7C4(uint64_t a1)
{
  unint64_t result = sub_10002B7EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10002B7EC()
{
  unint64_t result = qword_1000AED58;
  if (!qword_1000AED58)
  {
    type metadata accessor for PostInstallActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AED58);
  }
  return result;
}

uint64_t type metadata accessor for PostInstallActivity()
{
  return self;
}

unint64_t sub_10002B864()
{
  unint64_t result = qword_1000AEE08;
  if (!qword_1000AEE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEE08);
  }
  return result;
}

uint64_t sub_10002B8B8()
{
  if (*v0) {
    return 0x727574616E676973;
  }
  else {
    return 6775138;
  }
}

uint64_t sub_10002B8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10002BFDC(a1, a2);
  *a3 = result;
  return result;
}

void sub_10002B918(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10002B924(uint64_t a1)
{
  unint64_t v2 = sub_10002C2D4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10002B960(uint64_t a1)
{
  unint64_t v2 = sub_10002C2D4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10002B99C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10002C0CC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10002B9CC(uint64_t a1, uint64_t a2)
{
  sub_10008B940();
  swift_allocObject();
  sub_10008B930();
  sub_10002BB44();
  sub_10008B920();
  if (!v2
    && ((a2 = sub_10008BA90(),
         unint64_t v5 = v4,
         uint64_t v6 = sub_10008BA90(),
         unint64_t v8 = v7,
         swift_bridgeObjectRelease(),
         swift_bridgeObjectRelease(),
         v5 >> 60 == 15)
     || v8 >> 60 == 15))
  {
    sub_10002BB98();
    swift_allocError();
    unsigned char *v9 = 0;
    swift_willThrow();
    swift_release();
    sub_10000A428(v6, v8);
    sub_10000A428(a2, v5);
  }
  else
  {
    swift_release();
  }
  return a2;
}

unint64_t sub_10002BB44()
{
  unint64_t result = qword_1000B28A0[0];
  if (!qword_1000B28A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B28A0);
  }
  return result;
}

unint64_t sub_10002BB98()
{
  unint64_t result = qword_1000AEE10;
  if (!qword_1000AEE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEE10);
  }
  return result;
}

uint64_t sub_10002BBEC()
{
  return sub_10008BAF0();
}

uint64_t destroy for RawStorebag(uint64_t *a1)
{
  sub_10000A43C(*a1, a1[1]);
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  return sub_10000A43C(v2, v3);
}

uint64_t *initializeWithCopy for RawStorebag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_10000A494(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v7 = a2[2];
  unint64_t v6 = a2[3];
  sub_10000A494(v7, v6);
  a1[2] = v7;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for RawStorebag(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_10000A494(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_10000A43C(v6, v7);
  uint64_t v9 = a2[2];
  unint64_t v8 = a2[3];
  sub_10000A494(v9, v8);
  uint64_t v10 = a1[2];
  unint64_t v11 = a1[3];
  a1[2] = v9;
  a1[3] = v8;
  sub_10000A43C(v10, v11);
  return a1;
}

uint64_t *assignWithTake for RawStorebag(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10000A43C(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_10000A43C(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for RawStorebag(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RawStorebag(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag()
{
  return &type metadata for RawStorebag;
}

uint64_t destroy for RawStorebag._EncodedRawStorebag()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RawStorebag._EncodedRawStorebag(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RawStorebag._EncodedRawStorebag(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for RawStorebag._EncodedRawStorebag(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawStorebag._EncodedRawStorebag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawStorebag._EncodedRawStorebag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag._EncodedRawStorebag()
{
  return &type metadata for RawStorebag._EncodedRawStorebag;
}

uint64_t sub_10002BFDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6775138 && a2 == 0xE300000000000000;
  if (v2 || (sub_10008C7D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x727574616E676973 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10008C7D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10002C0CC(void *a1)
{
  uint64_t v3 = sub_10000A390(&qword_1000AEE18);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_10000A784(a1, a1[3]);
  sub_10002C2D4();
  sub_10008C950();
  if (v1)
  {
    sub_10000CCE8((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_10008C710();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_10008C710();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_10000CCE8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_10002C2D4()
{
  unint64_t result = qword_1000B2930[0];
  if (!qword_1000B2930[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B2930);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RawStorebag._EncodedRawStorebag.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002C3F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawStorebag._EncodedRawStorebag.CodingKeys()
{
  return &type metadata for RawStorebag._EncodedRawStorebag.CodingKeys;
}

unint64_t sub_10002C430()
{
  unint64_t result = qword_1000B2A40[0];
  if (!qword_1000B2A40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B2A40);
  }
  return result;
}

unint64_t sub_10002C488()
{
  unint64_t result = qword_1000B2B50;
  if (!qword_1000B2B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B2B50);
  }
  return result;
}

unint64_t sub_10002C4E0()
{
  unint64_t result = qword_1000B2B58[0];
  if (!qword_1000B2B58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B2B58);
  }
  return result;
}

unint64_t sub_10002C538()
{
  return 0xD000000000000032;
}

uint64_t sub_10002C554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10002C584(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_10002C584(uint64_t a1)
{
  sub_1000181B0(a1, (uint64_t)v6);
  sub_10002C9C8();
  uint64_t v3 = sub_10008C1C0();
  if (v1)
  {
    swift_errorRelease();
    sub_1000181B0(a1, (uint64_t)v6);
    sub_10002CA1C();
    uint64_t v4 = sub_10008C1C0();
  }
  else
  {
    uint64_t v4 = v3;
  }
  sub_10000CCE8(a1);
  return v4;
}

unint64_t sub_10002C6C8()
{
  unint64_t result = qword_1000AEE20;
  if (!qword_1000AEE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEE20);
  }
  return result;
}

unint64_t sub_10002C720()
{
  unint64_t result = qword_1000AEE28;
  if (!qword_1000AEE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEE28);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StorebagSectionPerCountrySampling()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StorebagSharedValue(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for StorebagSharedValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSharedValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSharedValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10002C8D4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_10002C8DC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StorebagSharedValue()
{
  return &type metadata for StorebagSharedValue;
}

unsigned char *storeEnumTagSinglePayload for StorebagSharedValue.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10002C990);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSharedValue.Error()
{
  return &type metadata for StorebagSharedValue.Error;
}

unint64_t sub_10002C9C8()
{
  unint64_t result = qword_1000AEE30;
  if (!qword_1000AEE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEE30);
  }
  return result;
}

unint64_t sub_10002CA1C()
{
  unint64_t result = qword_1000AEE38;
  if (!qword_1000AEE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEE38);
  }
  return result;
}

uint64_t variable initialization expression of Listener.connectionQueue()
{
  uint64_t v12 = sub_10008BE40();
  uint64_t v0 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10008C340();
  uint64_t v3 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10008C330();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_10008BE70();
  __chkstk_darwin(v7 - 8);
  sub_10002CD68();
  sub_10008BE50();
  long long v13 = _swiftEmptyArrayStorage;
  sub_10002FDB8(&qword_1000AEE40, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A390((uint64_t *)&unk_1000B0100);
  sub_10002CDA8();
  sub_10008C480();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v11);
  uint64_t v8 = v12;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for DispatchQoS.QoSClass.background(_:), v12);
  sub_10008C370();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v8);
  return sub_10008C360();
}

unint64_t sub_10002CD68()
{
  unint64_t result = qword_1000B00F0;
  if (!qword_1000B00F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000B00F0);
  }
  return result;
}

unint64_t sub_10002CDA8()
{
  unint64_t result = qword_1000AEE48;
  if (!qword_1000AEE48)
  {
    sub_10000A540((uint64_t *)&unk_1000B0100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEE48);
  }
  return result;
}

uint64_t variable initialization expression of Listener.clients()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_10008C650()) {
    uint64_t v0 = (void *)sub_10002F728((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v0 = &_swiftEmptySetSingleton;
  }
  sub_10000A390(&qword_1000AEE50);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v0;
  return result;
}

uint64_t sub_10002CE7C()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B2E68);
  sub_10000A358(v0, (uint64_t)qword_1000B2E68);
  return sub_10008BD40();
}

uint64_t variable initialization expression of Listener.conn()
{
  return 0;
}

uint64_t Listener.__allocating_init(mode:clientBundleID:)(char a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100018CB4;
  return Listener.init(mode:clientBundleID:)(a1, a2, a3);
}

uint64_t Listener.init(mode:clientBundleID:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 168) = a3;
  *(void *)(v4 + 176) = v3;
  *(void *)(v4 + 160) = a2;
  *(unsigned char *)(v4 + 73) = a1;
  uint64_t v5 = sub_10008BE40();
  *(void *)(v4 + 184) = v5;
  *(void *)(v4 + 192) = *(void *)(v5 - 8);
  *(void *)(v4 + 200) = swift_task_alloc();
  uint64_t v6 = sub_10008C340();
  *(void *)(v4 + 208) = v6;
  *(void *)(v4 + 216) = *(void *)(v6 - 8);
  *(void *)(v4 + 224) = swift_task_alloc();
  *(void *)(v4 + 232) = sub_10008C330();
  *(void *)(v4 + 240) = swift_task_alloc();
  sub_10008BE70();
  *(void *)(v4 + 248) = swift_task_alloc();
  return _swift_task_switch(sub_10002D13C, 0);
}

uint64_t sub_10002D13C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v15 = *(void *)(v0 + 176);
  sub_10002CD68();
  sub_10008BE50();
  *(void *)(v0 + 152) = _swiftEmptyArrayStorage;
  sub_10002FDB8(&qword_1000AEE40, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A390((uint64_t *)&unk_1000B0100);
  sub_10002CDA8();
  sub_10008C480();
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 104))(v13, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v14);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v3, enum case for DispatchQoS.QoSClass.background(_:), v4);
  sub_10008C370();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  *(void *)(v15 + 16) = sub_10008C360();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_10008C650()) {
    uint64_t v5 = (void *)sub_10002F728((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v5 = &_swiftEmptySetSingleton;
  }
  uint64_t v6 = *(void *)(v0 + 176);
  sub_10000A390(&qword_1000AEE50);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(void *)(v7 + 16) = v5;
  *(void *)(v6 + 24) = v7;
  *(void *)(v6 + 96) = 0;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10002D3B8;
  uint64_t v9 = *(void *)(v0 + 160);
  uint64_t v10 = *(void *)(v0 + 168);
  char v11 = *(unsigned char *)(v0 + 73);
  return Daemon.init(mode:clientBundleID:)(v0 + 16, v11, v9, v10);
}

uint64_t sub_10002D3B8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10002D4B4, 0, 0);
}

uint64_t sub_10002D4B4()
{
  uint64_t v1 = *(_OWORD **)(v0 + 176);
  int v2 = *(unsigned __int8 *)(v0 + 73);
  long long v3 = *(_OWORD *)(v0 + 16);
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)((char *)v1 + 73) = *(_OWORD *)(v0 + 57);
  v1[3] = v4;
  v1[4] = v5;
  v1[2] = v3;
  if (v2)
  {
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void **)(v6 + 16);
    if (v2 == 1)
    {
      type metadata accessor for XPCConnection();
      swift_allocObject();
      swift_retain();
      XPCConnection.init(serviceName:targetQ:listen:delegate:)(0xD000000000000023, 0x80000001000930E0, v7, 1, v6, (uint64_t)&protocol witness table for Listener);
    }
    else
    {
      type metadata accessor for XPCConnection();
      swift_allocObject();
      swift_retain();
      uint64_t v8 = XPCConnection.init(machService:targetQ:listen:delegate:)(0xD000000000000019, 0x80000001000930C0, v7, 1, v6, (_xpc_connection_s *)&protocol witness table for Listener);
    }
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v10 = *(void **)(v9 + 16);
    type metadata accessor for XPCConnection();
    swift_allocObject();
    char v11 = v10;
    swift_retain();
    uint64_t v8 = (uint64_t)XPCConnection.init(targetQ:delegate:)(v11, v9, (uint64_t)&protocol witness table for Listener);
  }
  uint64_t v12 = v8;
  uint64_t v13 = *(void *)(v0 + 176);
  swift_beginAccess();
  *(void *)(v13 + 96) = v12;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v15 = *(void *)(v0 + 176);
  return v14(v15);
}

_xpc_connection_s *Listener.connection(targetQ:delegate:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (_xpc_connection_s *)swift_beginAccess();
  uint64_t v8 = *(void *)(v3 + 96);
  if (v8)
  {
    type metadata accessor for XPCConnection();
    swift_allocObject();
    swift_unknownObjectRetain();
    swift_retain();
    return XPCConnection.init(listener:targetQ:delegate:)(v8, a1, a2, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Listener.handle(message:)()
{
  uint64_t v1 = sub_10000A390(&qword_1000AE3A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for XPCObject();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v33 - v9;
  uint64_t v11 = sub_10000A390((uint64_t *)&unk_1000AF140);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v33 - v15;
  uint64_t v17 = swift_unknownObjectRetain();
  uint64_t v18 = (_xpc_connection_s *)XPCIncomingConnection.init(conn:)(v17);
  XPCIncomingConnection.entitlementValue(forKey:)((uint64_t)v16);
  sub_10002FA84((uint64_t)v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
  {
    sub_10000CC24((uint64_t)v14, (uint64_t *)&unk_1000AF140);
LABEL_14:
    pid_t pid = xpc_connection_get_pid(v18);
    if (qword_1000B2E60 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_10008BD50();
    sub_10000A358(v26, (uint64_t)qword_1000B2E68);
    uint64_t v27 = sub_10008BD30();
    os_log_type_t v28 = sub_10008C2F0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 67240192;
      v33[2] = pid;
      sub_10008C440();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "connection attempted by unentitled process %{public}d", v29, 8u);
      swift_slowDealloc();
    }

    xpc_connection_cancel(v18);
    swift_unknownObjectRelease();
    return sub_10000CC24((uint64_t)v16, (uint64_t *)&unk_1000AF140);
  }
  sub_10002FAEC((uint64_t)v14, (uint64_t)v10);
  sub_10002FB50((uint64_t)v10, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_10002FBB4((uint64_t)v10);
    uint64_t v24 = (uint64_t)v8;
LABEL_13:
    sub_10002FBB4(v24);
    goto LABEL_14;
  }
  if ((*v8 & 1) == 0)
  {
    uint64_t v24 = (uint64_t)v10;
    goto LABEL_13;
  }
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 88))
  {
    pid_t v19 = xpc_connection_get_pid(v18);
    if (qword_1000B2E60 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_10008BD50();
    sub_10000A358(v20, (uint64_t)qword_1000B2E68);
    BOOL v21 = sub_10008BD30();
    os_log_type_t v22 = sub_10008C2F0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 67240192;
      v33[1] = v19;
      sub_10008C440();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "rejecting connection from %{public}d while reporting is disabled", v23, 8u);
      swift_slowDealloc();
    }

    xpc_connection_cancel(v18);
  }
  else
  {
    uint64_t v31 = sub_10008C220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v3, 1, 1, v31);
    os_log_type_t v32 = (void *)swift_allocObject();
    v32[2] = 0;
    v32[3] = 0;
    void v32[4] = v0;
    v32[5] = v18;
    swift_retain();
    swift_unknownObjectRetain();
    sub_1000198D0((uint64_t)v3, (uint64_t)&unk_1000AEE70, (uint64_t)v32);
    swift_release();
  }
  swift_unknownObjectRelease();
  sub_10002FBB4((uint64_t)v10);
  return sub_10000CC24((uint64_t)v16, (uint64_t *)&unk_1000AF140);
}

uint64_t sub_10002DC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return _swift_task_switch(sub_10002DCA4, 0, 0);
}

uint64_t sub_10002DCA4()
{
  uint64_t v1 = v0[5];
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 56);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = (void *)v0[5];
  uint64_t v5 = v4[8];
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = v4[9];
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = v4[10];
  if (!v7)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  type metadata accessor for Client();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[7] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10002DDF4;
  uint64_t v9 = v0[5];
  unint64_t v10 = v0[6];
  return sub_100069128(v3, v5, v6, v7, v9, v10);
}

uint64_t sub_10002DDF4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10002DEF4, 0, 0);
}

uint64_t sub_10002DEF4()
{
  uint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 40) + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_10002FE00();
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10002DFD8()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_10002FD04();
  os_unfair_lock_unlock(v1 + 6);
  return swift_release();
}

uint64_t Listener.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Listener.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_10002E164(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_10008C4D0();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for Client();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_10008C4C0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_10002E460(v7, result + 1);
    uint64_t v20 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_10002E69C();
      uint64_t v17 = v20;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_10002E9C4(a2, v17);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  type metadata accessor for Client();
  sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10008BF40();
  uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    uint64_t v15 = swift_retain();
    sub_10002EAAC(v15, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v13 = ~v11;
  sub_10002FDB8(&qword_1000AEF38, (void (*)(uint64_t))type metadata accessor for Client);
  while ((sub_10008BF70() & 1) == 0)
  {
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_10002E460(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10000A390(&qword_1000AEF40);
    uint64_t v2 = sub_10008C520();
    uint64_t v14 = v2;
    sub_10008C4B0();
    if (sub_10008C4E0())
    {
      type metadata accessor for Client();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10002E69C();
          uint64_t v2 = v14;
        }
        sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
        uint64_t result = sub_10008BF40();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_10008C4E0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10002E69C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A390(&qword_1000AEF40);
  uint64_t v3 = sub_10008C510();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = v27[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v26) {
            goto LABEL_33;
          }
          unint64_t v15 = v27[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v26) {
              goto LABEL_33;
            }
            unint64_t v15 = v27[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v26)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v25 = 1 << *(unsigned char *)(v2 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v27 = -1 << v25;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v27[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v26) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v27[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      type metadata accessor for Client();
      sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
      uint64_t result = sub_10008BF40();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_10002E9C4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Client();
  sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
  sub_10008BF40();
  unint64_t result = sub_10008C4A0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_10002EAAC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10002E69C();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_10002EC88();
      goto LABEL_12;
    }
    sub_10002EE34();
  }
  uint64_t v8 = *v3;
  type metadata accessor for Client();
  sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
  unint64_t result = sub_10008BF40();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_10002FDB8(&qword_1000AEF38, (void (*)(uint64_t))type metadata accessor for Client);
    do
    {
      unint64_t result = sub_10008BF70();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  unint64_t result = sub_10008C870();
  __break(1u);
  return result;
}

void *sub_10002EC88()
{
  uint64_t v1 = v0;
  sub_10000A390(&qword_1000AEF40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10008C500();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    unint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10002EE34()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A390(&qword_1000AEF40);
  uint64_t v3 = sub_10008C510();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v25 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    type metadata accessor for Client();
    sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
    swift_retain();
    uint64_t result = sub_10008BF40();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10002F134()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = sub_10008C4F0();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_10002F354();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  type metadata accessor for Client();
  sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10008BF40();
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = ~v5;
  sub_10002FDB8(&qword_1000AEF38, (void (*)(uint64_t))type metadata accessor for Client);
  while ((sub_10008BF70() & 1) == 0)
  {
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v0;
  uint64_t v11 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_10002EC88();
    uint64_t v10 = v11;
  }
  uint64_t v3 = *(void *)(*(void *)(v10 + 48) + 8 * v6);
  sub_10002F538(v6);
  *uint64_t v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10002F354()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_10008C4C0();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = sub_10002E460(v2, v1);
  uint64_t v10 = v3;
  type metadata accessor for Client();
  sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
  swift_retain();
  uint64_t v4 = sub_10008BF40();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if ((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = ~v5;
    sub_10002FDB8(&qword_1000AEF38, (void (*)(uint64_t))type metadata accessor for Client);
    while ((sub_10008BF70() & 1) == 0)
    {
      unint64_t v6 = (v6 + 1) & v7;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    uint64_t v8 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
    sub_10002F538(v6);
    if (sub_10008BF70())
    {
      *uint64_t v0 = v10;
      return v8;
    }
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_10002F538(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_10008C490();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      type metadata accessor for Client();
      sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
      do
      {
        uint64_t v10 = sub_10008BF40() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(v3 + 48);
            int64_t v14 = (void *)(v13 + 8 * v2);
            unint64_t v15 = (void *)(v13 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
            {
              *int64_t v14 = *v15;
              int64_t v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_10002F728(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10008C650();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10000A390(&qword_1000AEF40);
      uint64_t result = sub_10008C530();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_10008C650();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = sub_10008C570();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for Client();
    sub_10002FDB8((unint64_t *)&unk_1000B0130, (void (*)(uint64_t))type metadata accessor for Client);
    uint64_t result = sub_10008BF40();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_10002FDB8(&qword_1000AEF38, (void (*)(uint64_t))type metadata accessor for Client);
      while (1)
      {
        uint64_t result = sub_10008BF70();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void _s21CloudTelemetryService8ListenerC6handle5errorySo13OS_xpc_object_p_tF_0(void *a1)
{
  xpc_copy_description(a1);
  uint64_t v1 = sub_10008C0A0();
  uint64_t v3 = v2;
  sub_10008C540(36);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = v1;
  v4._object = v3;
  sub_10008C090(v4);
  sub_10008C640();
  __break(1u);
}

uint64_t sub_10002FA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390((uint64_t *)&unk_1000AF140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FBB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002FC10()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10002FC58()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000AA94;
  *(_OWORD *)(v2 + 40) = v3;
  return _swift_task_switch(sub_10002DCA4, 0, 0);
}

uint64_t sub_10002FD04()
{
  return swift_release();
}

uint64_t type metadata accessor for Listener()
{
  return self;
}

void type metadata accessor for os_unfair_lock_s()
{
  if (!qword_1000AEF30)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1000AEF30);
    }
  }
}

uint64_t sub_10002FDB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002FE00()
{
  swift_retain();
  sub_10002E164(&v2, v0);
  return swift_release();
}

void *sub_10002FE50()
{
  uint64_t v0 = dlopen("../../AppleInternal/Library/Frameworks/CloudTelemetryLocalBackend.framework/CloudTelemetryLocalBackend", 1);
  if (v0)
  {
    uint64_t result = dlsym(v0, "initLocalBackend");
  }
  else
  {
    if (dlerror())
    {
      uint64_t v2 = sub_10008C0A0();
      unint64_t v4 = v3;
    }
    else
    {
      unint64_t v4 = 0xE700000000000000;
      uint64_t v2 = 0x6E776F6E6B6E75;
    }
    if (qword_1000B2E88 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10008BD50();
    sub_10000A358(v5, (uint64_t)qword_1000B6D60);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10008BD30();
    os_log_type_t v7 = sub_10008C2F0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446210;
      swift_bridgeObjectRetain();
      sub_100009D00(v2, v4, &v9);
      sub_10008C440();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "failed to load CloudTelemetryTTR framework: %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t result = 0;
  }
  off_1000B6D58 = result;
  return result;
}

uint64_t sub_100030044()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6D60);
  sub_10000A358(v0, (uint64_t)qword_1000B6D60);
  return sub_10008BD40();
}

uint64_t sub_1000300C8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000300D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  sub_100030130(a1, a2, a3);
  return v6;
}

void *sub_100030130(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = v3;
  swift_defaultActor_initialize();
  v4[16] = sub_100031F94(a2);
  v4[17] = a1;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[3];
  uint64_t v9 = a3[4];
  sub_10000A784(a3, v8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v24, v8, v9);
  uint64_t v11 = v24[0];
  uint64_t v10 = v24[1];
  swift_bridgeObjectRetain();
  sub_10001A660((uint64_t)v24);
  v4[14] = v11;
  v4[15] = v10;
  unint64_t v12 = sub_100048E38();
  swift_beginAccess();
  if (*v12 == 1)
  {
    if (qword_1000B2E80 != -1) {
      swift_once();
    }
    unint64_t v13 = (uint64_t (*)(uint64_t))off_1000B6D58;
    if (off_1000B6D58)
    {
      uint64_t v14 = a3[3];
      uint64_t v15 = a3[4];
      sub_10000A784(a3, v14);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
      if ((v16 & (unint64_t)&_mh_execute_header) != 0) {
        uint64_t v16 = 0;
      }
      else {
        uint64_t v16 = v16;
      }
      v4[18] = (id)v13(v16);
      if (qword_1000B2E88 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_10008BD50();
      sub_10000A358(v17, (uint64_t)qword_1000B6D60);
      uint64_t v18 = sub_10008BD30();
      os_log_type_t v19 = sub_10008C310();
      if (!os_log_type_enabled(v18, v19)) {
        goto LABEL_18;
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      unint64_t v21 = "initialized CloudTelemetryTTR framework";
    }
    else
    {
      v4[18] = 0;
      if (qword_1000B2E88 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_10008BD50();
      sub_10000A358(v22, (uint64_t)qword_1000B6D60);
      uint64_t v18 = sub_10008BD30();
      os_log_type_t v19 = sub_10008C2F0();
      if (!os_log_type_enabled(v18, v19)) {
        goto LABEL_18;
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      unint64_t v21 = "failed to initialize CloudTelemetryTTR framework";
    }
    _os_log_impl((void *)&_mh_execute_header, v18, v19, v21, v20, 2u);
    swift_slowDealloc();
LABEL_18:

    goto LABEL_19;
  }
  v4[18] = 0;
LABEL_19:
  sub_10000CCE8((uint64_t)a3);
  return v4;
}

uint64_t sub_1000303E4(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  v2[12] = *v1;
  v2[13] = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  v2[14] = swift_task_alloc();
  sub_10000A390(&qword_1000AE710);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_100030508, v1, 0);
}

uint64_t sub_100030508()
{
  Class v105 = v0;
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = sub_100048E38();
  swift_beginAccess();
  if (*v2 != 1) {
    goto LABEL_76;
  }
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  swift_retain();
  uint64_t v5 = sub_1000326C0(v3, v4);
  swift_release();
  uint64_t v6 = v5[2];
  if (v6)
  {
    os_log_type_t v7 = v5 + 5;
    uint64_t v8 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = *((void *)v7 - 1);
      long long v102 = *v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int64_t v104 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100016CEC(0, v8[2] + 1, 1);
        uint64_t v8 = v104;
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1)
      {
        sub_100016CEC(v10 > 1, v11 + 1, 1);
        uint64_t v8 = v104;
      }
      v8[2] = v11 + 1;
      unint64_t v12 = &v8[3 * v11];
      v12[4] = v9;
      *(_OWORD *)(v12 + 5) = v102;
      os_log_type_t v7 = (_OWORD *)((char *)v7 + 24);
      --v6;
    }
    while (v6);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  v0[17] = v8;
  uint64_t v13 = v0[11];
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void **)(v13 + 144);
  v0[18] = v14;
  if (!v14) {
    goto LABEL_73;
  }
  uint64_t v15 = v8[2];
  v0[19] = v15;
  if (!v15) {
    goto LABEL_73;
  }
  v0[20] = 0;
  uint64_t v16 = v0[17];
  uint64_t v17 = *(void *)(v16 + 16);
  id v18 = v14;
  if (!v17) {
    goto LABEL_72;
  }
  os_log_type_t v19 = v0 + 8;
  Swift::String v101 = v0 + 9;
  unint64_t v20 = sub_1000328F4();
  unint64_t v21 = 0;
  uint64_t v22 = &type metadata for String;
  uint64_t v23 = -1;
  uint64_t v96 = v0 + 8;
  while (2)
  {
    uint64_t v24 = *(void *)(v16 + 24 * v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *os_log_type_t v19 = sub_10008BF20();
    uint64_t v25 = *(void *)(v24 + 64);
    uint64_t v97 = v24 + 64;
    uint64_t v99 = v24;
    uint64_t v26 = -1 << *(unsigned char *)(v24 + 32);
    uint64_t v27 = (void *)swift_bridgeObjectRelease();
    int64_t v100 = 0;
    if (-v26 < 64) {
      uint64_t v28 = ~(-1 << -(char)v26);
    }
    else {
      uint64_t v28 = -1;
    }
    unint64_t v29 = v28 & v25;
    int64_t v98 = (unint64_t)(63 - v26) >> 6;
    while (1)
    {
      os_log_type_t v32 = &unk_1000AF070;
      if (v29)
      {
        uint64_t v103 = (v29 - 1) & v29;
        unint64_t v33 = __clz(__rbit64(v29)) | (v100 << 6);
LABEL_23:
        uint64_t v34 = *(void **)(v1 + 120);
        uint64_t v35 = *(void *)(v1 + 104);
        uint64_t v36 = (void *)(*(void *)(v99 + 48) + 16 * v33);
        uint64_t v37 = v36[1];
        *uint64_t v34 = *v36;
        v34[1] = v37;
        uint64_t v38 = *(void *)(v99 + 56) + *(void *)(v35 + 72) * v33;
        uint64_t v39 = sub_10000A390((uint64_t *)&unk_1000AF070);
        sub_100017AC8(v38, (uint64_t)v34 + *(int *)(v39 + 48));
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v34, 0, 1, v39);
        swift_bridgeObjectRetain();
        goto LABEL_42;
      }
      int64_t v40 = v100 + 1;
      if (__OFADD__(v100, 1))
      {
        __break(1u);
        goto LABEL_88;
      }
      if (v40 < v98)
      {
        unint64_t v41 = *(void *)(v97 + 8 * v40);
        if (v41) {
          goto LABEL_27;
        }
        int64_t v42 = v100 + 2;
        ++v100;
        if (v40 + 1 < v98)
        {
          unint64_t v41 = *(void *)(v97 + 8 * v42);
          if (v41) {
            goto LABEL_30;
          }
          int64_t v100 = v40 + 1;
          if (v40 + 2 < v98)
          {
            unint64_t v41 = *(void *)(v97 + 8 * (v40 + 2));
            if (v41)
            {
              v40 += 2;
LABEL_27:
              uint64_t v103 = (v41 - 1) & v41;
              unint64_t v33 = __clz(__rbit64(v41)) + (v40 << 6);
              int64_t v100 = v40;
              goto LABEL_23;
            }
            int64_t v42 = v40 + 3;
            int64_t v100 = v40 + 2;
            if (v40 + 3 < v98)
            {
              unint64_t v41 = *(void *)(v97 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  int64_t v40 = v42 + 1;
                  if (__OFADD__(v42, 1)) {
                    break;
                  }
                  if (v40 >= v98)
                  {
                    int64_t v100 = v98 - 1;
                    goto LABEL_41;
                  }
                  unint64_t v41 = *(void *)(v97 + 8 * v40);
                  ++v42;
                  if (v41) {
                    goto LABEL_27;
                  }
                }
                __break(1u);
                goto LABEL_99;
              }
LABEL_30:
              int64_t v40 = v42;
              goto LABEL_27;
            }
          }
        }
      }
LABEL_41:
      uint64_t v43 = *(void *)(v1 + 120);
      uint64_t v44 = sub_10000A390((uint64_t *)&unk_1000AF070);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
      uint64_t v103 = 0;
LABEL_42:
      uint64_t v45 = *(void *)(v1 + 128);
      sub_100017B2C(*(void *)(v1 + 120), v45);
      uint64_t v46 = sub_10000A390((uint64_t *)&unk_1000AF070);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46) == 1) {
        break;
      }
      id v47 = v22;
      unint64_t v48 = v20;
      uint64_t v49 = *(uint64_t **)(v1 + 128);
      uint64_t v50 = *(void *)(v1 + 112);
      uint64_t v51 = v1;
      uint64_t v1 = *v49;
      uint64_t v52 = v49[1];
      sub_100017B94((uint64_t)v49 + *(int *)(v46 + 48), v50);
      uint64_t v23 = (uint64_t)sub_100036448();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v54 = *(void *)(v51 + 64);
      uint64_t v55 = v51;
      *(void *)(v51 + 64) = 0x8000000000000000;
      *(void *)(v51 + 72) = v54;
      unint64_t v57 = sub_100011F50(v1, v52);
      int64_t v40 = *(void *)(v54 + 16);
      BOOL v58 = (v56 & 1) == 0;
      uint64_t v27 = (void *)(v40 + v58);
      if (__OFADD__(v40, v58))
      {
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        uint64_t v71 = 2;
LABEL_90:
        uint64_t v82 = (v40 - 1) & v40;
        unint64_t v81 = __clz(__rbit64(v40)) + (v71 << 6);
LABEL_91:
        *(void *)(v1 + 176) = v71;
        *(void *)(v1 + 184) = v82;
        uint64_t v84 = (uint64_t *)(v27[6] + 16 * v81);
        uint64_t v26 = *v84;
        os_log_type_t v32 = (void *)v84[1];
        *(void *)(v1 + 192) = v32;
        uint64_t v85 = *(void **)(v27[7] + 8 * v81);
        *(void *)(v1 + 200) = v85;
        uint64_t v86 = qword_1000B2E88;
        swift_bridgeObjectRetain();
        uint64_t v23 = v85;
        if (v86 == -1)
        {
LABEL_92:
          uint64_t v87 = sub_10008BD50();
          sub_10000A358(v87, (uint64_t)qword_1000B6D60);
          swift_bridgeObjectRetain_n();
          uint64_t v88 = sub_10008BD30();
          os_log_type_t v89 = sub_10008C310();
          if (os_log_type_enabled(v88, v89))
          {
            uint64_t v90 = swift_slowAlloc();
            int64_t v104 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v90 = 136446210;
            swift_bridgeObjectRetain();
            *(void *)(v90 + 4) = sub_100009D00(v26, (unint64_t)v32, (uint64_t *)&v104);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v88, v89, "running TTR rule \"%{public}s\"", (uint8_t *)v90, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v91 = *(void *)(v1 + 144);
          uint64_t v92 = *(void *)(v1 + 88);
          uint64_t v93 = *(void *)(v1 + 96);
          sub_100032934();
          uint64_t v94 = (void *)swift_task_alloc();
          *(void *)(v1 + 208) = v94;
          v94[2] = v23;
          v94[3] = v91;
          v94[4] = v96;
          v94[5] = v92;
          v94[6] = v26;
          v94[7] = v32;
          v94[8] = v93;
          uint64_t v95 = (void *)swift_task_alloc();
          *(void *)(v1 + 216) = v95;
          *uint64_t v95 = v1;
          v95[1] = sub_100030FF0;
          return withCheckedContinuation<A>(isolation:function:_:)();
        }
LABEL_99:
        swift_once();
        goto LABEL_92;
      }
      uint64_t v26 = v56;
      if (*(void *)(v54 + 24) >= (uint64_t)v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v27 = sub_10003250C();
        }
      }
      else
      {
        sub_1000321FC((uint64_t)v27, isUniquelyReferenced_nonNull_native);
        uint64_t v27 = (void *)sub_100011F50(v1, v52);
        if ((v26 & 1) != (v59 & 1))
        {
          return sub_10008C880();
        }
        unint64_t v57 = (unint64_t)v27;
      }
      uint64_t v60 = (void *)*v101;
      if (v26)
      {
        uint64_t v30 = v60[7];
        uint64_t v26 = 8 * v57;

        *(void *)(v30 + 8 * v57) = v23;
      }
      else
      {
        v60[(v57 >> 6) + 8] |= 1 << v57;
        unint64_t v61 = (uint64_t *)(v60[6] + 16 * v57);
        *unint64_t v61 = v1;
        v61[1] = v52;
        *(void *)(v60[7] + 8 * v57) = v23;
        uint64_t v62 = v60[2];
        BOOL v63 = __OFADD__(v62, 1);
        int64_t v40 = v62 + 1;
        if (v63) {
          goto LABEL_85;
        }
        v60[2] = v40;
        swift_bridgeObjectRetain();
      }
      uint64_t v1 = v55;
      uint64_t v31 = *(void *)(v55 + 112);
      *(void *)(v55 + 64) = v60;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = (void *)sub_1000329C0(v31);
      unint64_t v20 = v48;
      uint64_t v22 = v47;
      unint64_t v29 = v103;
    }
    uint64_t v64 = *(void *)(v1 + 88);
    swift_release();
    uint64_t v65 = *(void *)(v64 + 128);
    *(void *)(v1 + 168) = v65;
    char v66 = *(unsigned char *)(v65 + 32);
    *(unsigned char *)(v1 + 224) = v66;
    uint64_t v67 = -1 << v66;
    if (-(-1 << v66) < 64) {
      uint64_t v68 = ~(-1 << -(char)v67);
    }
    else {
      uint64_t v68 = -1;
    }
    unint64_t v69 = v68 & *(void *)(v65 + 64);
    uint64_t v27 = (void *)swift_bridgeObjectRetain();
    if (v69)
    {
      uint64_t v71 = 0;
      unint64_t v81 = __clz(__rbit64(v69));
      uint64_t v82 = (v69 - 1) & v69;
      goto LABEL_91;
    }
    unint64_t v70 = 63 - v67;
    uint64_t v71 = 1;
    if ((unint64_t)(63 - v67) > 0x7F)
    {
      int64_t v40 = v27[9];
      if (v40) {
        goto LABEL_90;
      }
      if (v70 >= 0xC0)
      {
        int64_t v40 = v27[10];
        if (v40) {
          goto LABEL_86;
        }
        if (v70 >= 0x100)
        {
          int64_t v40 = v27[11];
          if (!v40)
          {
            if (v70 >= 0x140)
            {
              int64_t v40 = v27[12];
              if (v40)
              {
                uint64_t v71 = 4;
                goto LABEL_90;
              }
              uint64_t v72 = 0;
              uint64_t v73 = v70 >> 6;
              if (v70 >> 6 <= 5) {
                uint64_t v73 = 5;
              }
              uint64_t v74 = v73 - 5;
              while (v74 != v72)
              {
                int64_t v40 = v27[v72++ + 13];
                if (v40)
                {
                  uint64_t v71 = v72 + 4;
                  goto LABEL_90;
                }
              }
            }
            goto LABEL_70;
          }
LABEL_88:
          uint64_t v71 = 3;
          goto LABEL_90;
        }
      }
    }
LABEL_70:
    uint64_t v75 = *(void *)(v1 + 152);
    uint64_t v76 = *(void *)(v1 + 160);
    swift_release();
    swift_bridgeObjectRelease();
    if (v76 + 1 == v75)
    {
      os_log_type_t v83 = *(void **)(v1 + 144);
      swift_release();

      goto LABEL_74;
    }
    unint64_t v21 = *(void *)(v1 + 160) + 1;
    *(void *)(v1 + 160) = v21;
    uint64_t v16 = *(void *)(v1 + 136);
    os_log_type_t v19 = v96;
    uint64_t v23 = -1;
    if (v21 < *(void *)(v16 + 16)) {
      continue;
    }
    break;
  }
LABEL_72:
  __break(1u);
LABEL_73:
  swift_release();
LABEL_74:
  swift_beginAccess();
  uint64_t v77 = (void (*)(uint64_t))off_1000B6D78;
  if (off_1000B6D78)
  {
    uint64_t v78 = swift_retain();
    v77(v78);
    sub_1000300C8((uint64_t)v77);
  }
LABEL_76:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v79 = *(uint64_t (**)(void))(v1 + 8);
  return v79();
}

uint64_t sub_100030FF0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_100031140, v1, 0);
}

uint64_t sub_100031140()
{
  uint64_t v78 = v1;
  uint64_t v72 = (uint64_t *)(v1 + 64);

  int64_t v3 = *(void *)(v1 + 176);
  unint64_t v4 = *(void *)(v1 + 184);
  if (v4)
  {
    uint64_t v5 = *(void *)(v1 + 168);
LABEL_3:
    uint64_t v6 = (v4 - 1) & v4;
    unint64_t v7 = __clz(__rbit64(v4)) | (v3 << 6);
LABEL_4:
    *(void *)(v1 + 176) = v3;
    *(void *)(v1 + 184) = v6;
    uint64_t v8 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v7);
    uint64_t v9 = *v8;
    unint64_t v0 = v8[1];
    *(void *)(v1 + 192) = v0;
    unint64_t v10 = *(void **)(*(void *)(v5 + 56) + 8 * v7);
    *(void *)(v1 + 200) = v10;
    uint64_t v11 = qword_1000B2E88;
    swift_bridgeObjectRetain();
    unint64_t v2 = v10;
    if (v11 != -1) {
      goto LABEL_84;
    }
    goto LABEL_5;
  }
  uint64_t v9 = -1;
LABEL_12:
  BOOL v21 = __OFADD__(v3++, 1);
  if (!v21)
  {
    int64_t v22 = (unint64_t)((1 << *(unsigned char *)(v1 + 224)) + 63) >> 6;
    uint64_t v5 = *(void *)(v1 + 168);
    if (v3 < v22)
    {
      uint64_t v23 = v5 + 64;
      unint64_t v24 = *(void *)(v5 + 64 + 8 * v3);
      if (v24) {
        goto LABEL_72;
      }
      int64_t v25 = v3 + 1;
      if (v3 + 1 < v22)
      {
        unint64_t v24 = *(void *)(v23 + 8 * v25);
        if (v24) {
          goto LABEL_71;
        }
        int64_t v25 = v3 + 2;
        if (v3 + 2 < v22)
        {
          unint64_t v24 = *(void *)(v23 + 8 * v25);
          if (v24)
          {
LABEL_71:
            int64_t v3 = v25;
            goto LABEL_72;
          }
          v3 += 3;
          if (v3 < v22)
          {
            unint64_t v24 = *(void *)(v23 + 8 * v3);
            if (!v24)
            {
              while (1)
              {
                int64_t v25 = v3 + 1;
                if (__OFADD__(v3, 1)) {
                  goto LABEL_83;
                }
                if (v25 >= v22) {
                  goto LABEL_25;
                }
                unint64_t v24 = *(void *)(v23 + 8 * v25);
                ++v3;
                if (v24) {
                  goto LABEL_71;
                }
              }
            }
LABEL_72:
            uint64_t v6 = (v24 - 1) & v24;
            unint64_t v7 = __clz(__rbit64(v24)) + (v3 << 6);
            goto LABEL_4;
          }
        }
      }
    }
LABEL_25:
    unint64_t v0 = *(void *)(v1 + 152);
    uint64_t v26 = *(void *)(v1 + 160);
    swift_release();
    swift_bridgeObjectRelease();
    if (v26 + 1 == v0)
    {
      uint64_t v68 = *(void **)(v1 + 144);
      swift_release();

      swift_beginAccess();
      unint64_t v69 = (void (*)(uint64_t))off_1000B6D78;
      if (off_1000B6D78)
      {
        uint64_t v70 = swift_retain();
        v69(v70);
        sub_1000300C8((uint64_t)v69);
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v71 = *(uint64_t (**)(void))(v1 + 8);
      return v71();
    }
    unint64_t v27 = *(void *)(v1 + 160) + 1;
    *(void *)(v1 + 160) = v27;
    uint64_t v28 = *(void *)(v1 + 136);
    if (v27 >= *(void *)(v28 + 16)) {
      goto LABEL_82;
    }
    uint64_t v29 = *(void *)(v28 + 24 * v27 + 48);
    sub_1000328F4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t *v72 = sub_10008BF20();
    unint64_t v0 = *(void *)(v29 + 64);
    uint64_t v73 = v29 + 64;
    uint64_t v75 = v29;
    unint64_t v2 = -1 << *(unsigned char *)(v29 + 32);
    swift_bridgeObjectRelease();
    int64_t v76 = 0;
    if (-(uint64_t)v2 < 64) {
      uint64_t v30 = ~(-1 << -(char)v2);
    }
    else {
      uint64_t v30 = -1;
    }
    uint64_t v9 = v30 & v0;
    int64_t v74 = (63 - v2) >> 6;
    while (!v9)
    {
      int64_t v40 = v76 + 1;
      if (__OFADD__(v76, 1)) {
        goto LABEL_80;
      }
      if (v40 < v74)
      {
        unint64_t v41 = *(void *)(v73 + 8 * v40);
        if (v41) {
          goto LABEL_39;
        }
        int64_t v42 = v76 + 2;
        ++v76;
        if (v40 + 1 < v74)
        {
          unint64_t v41 = *(void *)(v73 + 8 * v42);
          if (v41) {
            goto LABEL_42;
          }
          int64_t v76 = v40 + 1;
          if (v40 + 2 < v74)
          {
            unint64_t v41 = *(void *)(v73 + 8 * (v40 + 2));
            if (v41)
            {
              v40 += 2;
              goto LABEL_39;
            }
            int64_t v42 = v40 + 3;
            int64_t v76 = v40 + 2;
            if (v40 + 3 < v74)
            {
              unint64_t v41 = *(void *)(v73 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  int64_t v40 = v42 + 1;
                  if (__OFADD__(v42, 1)) {
                    break;
                  }
                  if (v40 >= v74)
                  {
                    int64_t v76 = v74 - 1;
                    goto LABEL_53;
                  }
                  unint64_t v41 = *(void *)(v73 + 8 * v40);
                  ++v42;
                  if (v41) {
                    goto LABEL_39;
                  }
                }
                __break(1u);
                return withCheckedContinuation<A>(isolation:function:_:)();
              }
LABEL_42:
              int64_t v40 = v42;
LABEL_39:
              uint64_t v9 = (v41 - 1) & v41;
              unint64_t v34 = __clz(__rbit64(v41)) + (v40 << 6);
              int64_t v76 = v40;
LABEL_35:
              uint64_t v35 = *(void **)(v1 + 120);
              uint64_t v36 = *(void *)(v1 + 104);
              uint64_t v37 = (void *)(*(void *)(v75 + 48) + 16 * v34);
              uint64_t v38 = v37[1];
              void *v35 = *v37;
              v35[1] = v38;
              unint64_t v2 = *(void *)(v75 + 56) + *(void *)(v36 + 72) * v34;
              uint64_t v39 = sub_10000A390((uint64_t *)&unk_1000AF070);
              sub_100017AC8(v2, (uint64_t)v35 + *(int *)(v39 + 48));
              (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v35, 0, 1, v39);
              swift_bridgeObjectRetain();
              goto LABEL_54;
            }
          }
        }
      }
LABEL_53:
      uint64_t v43 = *(void *)(v1 + 120);
      uint64_t v44 = sub_10000A390((uint64_t *)&unk_1000AF070);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
      uint64_t v9 = 0;
LABEL_54:
      unint64_t v0 = *(void *)(v1 + 128);
      sub_100017B2C(*(void *)(v1 + 120), v0);
      uint64_t v45 = sub_10000A390((uint64_t *)&unk_1000AF070);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v0, 1, v45) == 1)
      {
        uint64_t v16 = *(void *)(v1 + 88);
        swift_release();
        uint64_t v17 = *(void *)(v16 + 128);
        *(void *)(v1 + 168) = v17;
        char v18 = *(unsigned char *)(v17 + 32);
        *(unsigned char *)(v1 + 224) = v18;
        uint64_t v19 = 1 << v18;
        uint64_t v9 = -1;
        if (v19 < 64) {
          uint64_t v20 = ~(-1 << v19);
        }
        else {
          uint64_t v20 = -1;
        }
        unint64_t v4 = v20 & *(void *)(v17 + 64);
        uint64_t v5 = swift_bridgeObjectRetain();
        int64_t v3 = 0;
        if (v4) {
          goto LABEL_3;
        }
        goto LABEL_12;
      }
      uint64_t v46 = *(uint64_t **)(v1 + 128);
      uint64_t v48 = *v46;
      uint64_t v47 = v46[1];
      sub_100017B94((uint64_t)v46 + *(int *)(v45 + 48), *(void *)(v1 + 112));
      unint64_t v0 = (unint64_t)sub_100036448();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v50 = *(void *)(v1 + 64);
      *(void *)(v1 + 64) = 0x8000000000000000;
      *(void *)(v1 + 72) = v50;
      unint64_t v2 = sub_100011F50(v48, v47);
      uint64_t v52 = *(void *)(v50 + 16);
      BOOL v53 = (v51 & 1) == 0;
      uint64_t v54 = v52 + v53;
      if (__OFADD__(v52, v53))
      {
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      char v55 = v51;
      if (*(void *)(v50 + 24) >= v54)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10003250C();
        }
      }
      else
      {
        sub_1000321FC(v54, isUniquelyReferenced_nonNull_native);
        unint64_t v56 = sub_100011F50(v48, v47);
        if ((v55 & 1) != (v57 & 1))
        {
          return sub_10008C880();
        }
        unint64_t v2 = v56;
      }
      BOOL v58 = *(void **)(v1 + 72);
      if (v55)
      {
        uint64_t v31 = v58[7];
        v2 *= 8;

        *(void *)(v31 + v2) = v0;
      }
      else
      {
        v58[(v2 >> 6) + 8] |= 1 << v2;
        char v59 = (uint64_t *)(v58[6] + 16 * v2);
        uint64_t *v59 = v48;
        v59[1] = v47;
        *(void *)(v58[7] + 8 * v2) = v0;
        uint64_t v60 = v58[2];
        BOOL v21 = __OFADD__(v60, 1);
        uint64_t v61 = v60 + 1;
        if (v21) {
          goto LABEL_79;
        }
        v58[2] = v61;
        swift_bridgeObjectRetain();
      }
      uint64_t v32 = *(void *)(v1 + 112);
      *(void *)(v1 + 64) = v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000329C0(v32);
    }
    unint64_t v33 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v34 = v33 | (v76 << 6);
    goto LABEL_35;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  swift_once();
LABEL_5:
  uint64_t v12 = sub_10008BD50();
  sub_10000A358(v12, (uint64_t)qword_1000B6D60);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_10008BD30();
  os_log_type_t v14 = sub_10008C310();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v15 + 4) = sub_100009D00(v9, v0, &v77);
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "running TTR rule \"%{public}s\"", (uint8_t *)v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v62 = *(void *)(v1 + 144);
  uint64_t v63 = *(void *)(v1 + 88);
  uint64_t v64 = *(void *)(v1 + 96);
  sub_100032934();
  uint64_t v65 = (void *)swift_task_alloc();
  *(void *)(v1 + 208) = v65;
  v65[2] = v2;
  v65[3] = v62;
  v65[4] = v72;
  v65[5] = v63;
  v65[6] = v9;
  v65[7] = v0;
  v65[8] = v64;
  char v66 = (void *)swift_task_alloc();
  *(void *)(v1 + 216) = v66;
  *char v66 = v1;
  v66[1] = sub_100030FF0;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

void sub_100031A68()
{
  uint64_t v0 = sub_10000A390(&qword_1000AF038);
  __chkstk_darwin(v0);
  self;
  swift_dynamicCastObjCClassUnconditional();
  sub_1000328F4();
  sub_10008BEF0();
  __break(1u);
}

uint64_t sub_100031D38(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_100031D8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100031DDC(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_10000AA94;
  return v6(a1);
}

unint64_t sub_100031EE0()
{
  sub_10008C540(24);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void **)(v0 + 120);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v1;
  sub_10008C090(v4);
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

unint64_t sub_100031F70()
{
  return sub_100031EE0();
}

uint64_t sub_100031F94(uint64_t a1)
{
  sub_10000A390(&qword_1000AF030);
  uint64_t result = sub_10008C660();
  int64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v28 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v26 = v6;
  int64_t v27 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v28 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = (long long *)(*(void *)(v28 + 56) + 48 * i);
    *(_OWORD *)uint64_t v29 = v20[1];
    *(_OWORD *)&v29[16] = v20[2];
    long long v30 = *v20;
    long long v31 = *(_OWORD *)&v29[8];
    uint64_t v32 = *(void *)&v29[24];
    swift_bridgeObjectRetain();
    sub_1000298C8((uint64_t)&v30);
    sub_1000298C8((uint64_t)&v31);
    sub_100032D30((uint64_t)&v32);
    Class v21 = sub_10003A8F8();
    sub_100032D5C((uint64_t)&v30);
    sub_100032D5C((uint64_t)&v31);
    uint64_t result = sub_100032D88((uint64_t)&v32);
    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    int64_t v22 = (void *)(v3[6] + 16 * i);
    *int64_t v22 = v18;
    v22[1] = v19;
    *(void *)(v3[7] + 8 * i) = v21;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v25;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v27) {
        return (uint64_t)v3;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v27) {
          return (uint64_t)v3;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27) {
    return (uint64_t)v3;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v27) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1000321FC(uint64_t a1, char a2)
{
  int64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000A390(&qword_1000AF030);
  char v38 = a2;
  uint64_t v6 = sub_10008C670();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          int64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_10008C8F0();
    sub_10008C050();
    uint64_t result = sub_10008C920();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *int64_t v3 = v7;
  return result;
}

id sub_10003250C()
{
  uint64_t v1 = v0;
  sub_10000A390(&qword_1000AF030);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10008C660();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000326C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    id v33 = _swiftEmptyArrayStorage;
    sub_100016CEC(0, v4, 0);
    uint64_t v8 = 0;
    uint64_t v5 = _swiftEmptyArrayStorage;
    uint64_t v9 = a1 + 32;
    uint64_t v10 = *(void *)(a2 + 136);
    uint64_t v23 = v10;
    uint64_t v24 = v10 + 32;
    int64_t v22 = v4;
    while (1)
    {
      uint64_t v11 = (uint64_t *)(v9 + 24 * v8);
      uint64_t v12 = *v11;
      long long v25 = *(_OWORD *)(v11 + 1);
      uint64_t v31 = *v11;
      long long v32 = v25;
      uint64_t v13 = *(void *)(v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13) {
        break;
      }
      long long v17 = v25;
LABEL_9:
      id v33 = v5;
      unint64_t v19 = v5[2];
      unint64_t v18 = v5[3];
      if (v19 >= v18 >> 1)
      {
        long long v27 = v17;
        sub_100016CEC(v18 > 1, v19 + 1, 1);
        long long v17 = v27;
        uint64_t v5 = v33;
      }
      ++v8;
      v5[2] = v19 + 1;
      unint64_t v20 = &v5[3 * v19];
      v20[4] = v12;
      *(_OWORD *)(v20 + 5) = v17;
      if (v8 == v4) {
        return v5;
      }
    }
    unint64_t v26 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = v24;
    while (1)
    {
      sub_1000181B0(v14, (uint64_t)v28);
      uint64_t v16 = v29;
      uint64_t v15 = v30;
      sub_10000A784(v28, v29);
      uint64_t v5 = v3;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(&v31, v16, v15);
      if (v3) {
        break;
      }
      sub_10000CCE8((uint64_t)v28);
      v14 += 40;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v23;
        swift_bridgeObjectRelease();
        uint64_t v12 = v31;
        long long v17 = v32;
        uint64_t v5 = v26;
        uint64_t v9 = a1 + 32;
        int64_t v4 = v22;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000CCE8((uint64_t)v28);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5;
}

unint64_t sub_1000328F4()
{
  unint64_t result = qword_1000AF080;
  if (!qword_1000AF080)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000AF080);
  }
  return result;
}

unint64_t sub_100032934()
{
  unint64_t result = qword_1000AEF50;
  if (!qword_1000AEF50)
  {
    type metadata accessor for BackendLocal();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AEF50);
  }
  return result;
}

uint64_t type metadata accessor for BackendLocal()
{
  return self;
}

void sub_1000329AC()
{
}

uint64_t sub_1000329C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100032A1C()
{
  uint64_t v1 = sub_10000A390(&qword_1000AF038);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100032AF8()
{
  sub_10000A390(&qword_1000AF038);
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  if (qword_1000B2E88 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10008BD50();
  sub_10000A358(v3, (uint64_t)qword_1000B6D60);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_10008BD30();
  os_log_type_t v5 = sub_10008C2D0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    swift_bridgeObjectRetain();
    sub_100009D00(v2, v1, &v8);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 1026;
    sub_10008C440();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTR rule \"%{public}s\" processed event with status: %{BOOL,public}d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_10000A390(&qword_1000AF038);
  return sub_10008C1F0();
}

uint64_t sub_100032D18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100032D28()
{
  return swift_release();
}

uint64_t sub_100032D30(uint64_t a1)
{
  return a1;
}

uint64_t sub_100032D5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100032D88(uint64_t a1)
{
  return a1;
}

uint64_t sub_100032DB4()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6D90);
  sub_10000A358(v0, (uint64_t)qword_1000B6D90);
  return sub_10008BD40();
}

void sub_100032E30(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AE3A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000B2F90 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10008BD50();
  sub_10000A358(v5, (uint64_t)qword_1000B6D90);
  uint64_t v6 = sub_10008BD30();
  os_log_type_t v7 = sub_10008C310();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "received client connection.", v8, 2u);
    swift_slowDealloc();
  }

  memset(&v36, 0, sizeof(v36));
  xpc_connection_get_audit_token();
  audit_token_t token = v36;
  SecTaskRef v9 = SecTaskCreateWithAuditToken(0, &token);
  if (!v9)
  {
    uint64_t v10 = sub_10008BD30();
    os_log_type_t v18 = sub_10008C2F0();
    if (os_log_type_enabled(v10, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v18, "failed to extract entitlements.", v19, 2u);
      swift_slowDealloc();
    }
    goto LABEL_24;
  }
  uint64_t v10 = v9;
  uint64_t v11 = (__CFString *)sub_10008BF80();
  CFTypeRef v12 = SecTaskCopyValueForEntitlement((SecTaskRef)v10, v11, 0);

  if (!v12)
  {
    unint64_t v20 = sub_10008BD30();
    os_log_type_t v21 = sub_10008C2F0();
    if (os_log_type_enabled(v20, v21))
    {
      int64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "missing bundle id.", v22, 2u);
      swift_slowDealloc();
    }
    goto LABEL_16;
  }
  uint64_t v35 = (uint64_t)v12;
  swift_unknownObjectRetain_n();
  if (!swift_dynamicCast())
  {
    unint64_t v20 = sub_10008BD30();
    os_log_type_t v23 = sub_10008C2F0();
    if (!os_log_type_enabled(v20, v23))
    {

      swift_unknownObjectRelease_n();
      goto LABEL_23;
    }
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v23, "invalid bundle id.", v24, 2u);
    swift_slowDealloc();
    swift_unknownObjectRelease_n();
LABEL_16:

LABEL_23:
LABEL_24:

    return;
  }
  uint64_t v14 = *(void *)token.val;
  unint64_t v13 = *(void *)&token.val[2];
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_10008BD30();
  os_log_type_t v16 = sub_10008C310();
  if (os_log_type_enabled(v15, v16))
  {
    long long v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = a1;
    *(void *)token.val = v33;
    *(_DWORD *)long long v17 = 136315138;
    long long v32 = v17 + 4;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_100009D00(v14, v13, (uint64_t *)&token);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "setting up XPCService for %s.", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  dispatch_semaphore_t v25 = dispatch_semaphore_create(0);
  uint64_t v26 = sub_10008C220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v4, 1, 1, v26);
  long long v27 = (void *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = v14;
  v27[5] = v13;
  v27[6] = v25;
  uint64_t v28 = v25;
  sub_100008630((uint64_t)v4, (uint64_t)&unk_1000AF048, (uint64_t)v27);
  swift_release();
  sub_10008C3F0();
  uint64_t v29 = sub_10008BD30();
  os_log_type_t v30 = sub_10008C310();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "starting client connection.", v31, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  if (qword_1000B6D88)
  {
    swift_retain();
    Listener.handle(message:)();

    swift_unknownObjectRelease_n();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10003346C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return _swift_task_switch(sub_100033490, 0);
}

uint64_t sub_100033490()
{
  swift_beginAccess();
  if (qword_1000B6D88)
  {
    sub_10008C400();
    unint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    uint64_t v3 = v0[6];
    type metadata accessor for Listener();
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[8] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1000335B8;
    uint64_t v5 = v0[5];
    return Listener.__allocating_init(mode:clientBundleID:)(1, v5, v3);
  }
}

uint64_t sub_1000335B8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    return _swift_task_switch(sub_100033704, 0);
  }
}

uint64_t sub_100033704()
{
  qword_1000B6D88 = *(void *)(v0 + 72);
  swift_release();
  sub_10008C400();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003377C()
{
  uint64_t v0 = swift_unknownObjectRetain();
  sub_100032E30(v0);
  return swift_unknownObjectRelease();
}

int main(int argc, const char **argv, const char **envp)
{
  if (qword_1000B2F90 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10008BD50();
  sub_10000A358(v3, (uint64_t)qword_1000B6D90);
  uint64_t v4 = sub_10008BD30();
  os_log_type_t v5 = sub_10008C310();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "starting CloudTelemetryService XPCService.", v6, 2u);
    swift_slowDealloc();
  }

  xpc_main((xpc_connection_handler_t)sub_10003377C);
}

uint64_t sub_100033894()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000338DC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10000AA94;
  *(_OWORD *)(v3 + 48) = v4;
  *(void *)(v3 + 40) = v2;
  return _swift_task_switch(sub_100033490, 0);
}

ValueMetadata *type metadata accessor for Main()
{
  return &type metadata for Main;
}

uint64_t sub_1000339A0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_10000A784(a1, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_100036DB0(v5, (uint64_t)sub_100036D24, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  *(void *)(v2 + 16) = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100033A60@<X0>(uint64_t a1@<X0>, CFBooleanRef *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ServiceEventValue();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v69 = (uint64_t)&v59 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v59 - v13;
  sub_10000CD38(a1, (uint64_t)v76);
  if (swift_dynamicCast())
  {
    CFBooleanRef v15 = (const __CFBoolean *)v74;
    *a2 = v73;
    a2[1] = v15;
    goto LABEL_16;
  }
  uint64_t v68 = v7;
  sub_10000A8C8(0, (unint64_t *)&qword_1000AF170);
  if (swift_dynamicCast())
  {
    CFBooleanRef v16 = v73;
    if (kCFBooleanTrue) {
      BOOL v17 = v73 == kCFBooleanTrue;
    }
    else {
      BOOL v17 = 0;
    }
    if (v17)
    {

      *(unsigned char *)a2 = 1;
      goto LABEL_16;
    }

    if (kCFBooleanFalse)
    {
      if (v16 == kCFBooleanFalse)
      {
        *(unsigned char *)a2 = 0;
        goto LABEL_16;
      }
    }
  }
  if (swift_dynamicCast())
  {
    *a2 = v73;
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    *a2 = v73;
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    *a2 = v73;
    goto LABEL_16;
  }
  sub_10000A390(&qword_1000AE630);
  if (!swift_dynamicCast())
  {
    sub_10000A390(&qword_1000AF180);
    if (!swift_dynamicCast())
    {
      sub_10003917C();
      swift_allocError();
      swift_willThrow();
      return sub_10000CCE8((uint64_t)v76);
    }
    uint64_t v53 = v71;
    CFBooleanRef v54 = (const __CFBoolean *)sub_100037A8C(0, *(void *)(v71 + 16), 0, _swiftEmptyArrayStorage);
    uint64_t v55 = *(void *)(v53 + 16);
    if (v55)
    {
      uint64_t v64 = a2;
      uint64_t v56 = v53 + 32;
      while (1)
      {
        sub_10000CD38(v56, (uint64_t)&v73);
        sub_100033A60(&v73);
        if (v2) {
          break;
        }
        unint64_t v58 = *((void *)v54 + 2);
        unint64_t v57 = *((void *)v54 + 3);
        if (v58 >= v57 >> 1) {
          CFBooleanRef v54 = (const __CFBoolean *)sub_100037A8C(v57 > 1, v58 + 1, 1, v54);
        }
        *((void *)v54 + 2) = v58 + 1;
        sub_100017B94((uint64_t)v10, (uint64_t)v54+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v58);
        sub_10000CCE8((uint64_t)&v73);
        v56 += 32;
        if (!--v55)
        {
          swift_bridgeObjectRelease();
          a2 = v64;
          goto LABEL_77;
        }
      }
      sub_10000CCE8((uint64_t)&v73);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_10000CCE8((uint64_t)v76);
    }
    swift_bridgeObjectRelease();
LABEL_77:
    *a2 = v54;
LABEL_16:
    swift_storeEnumTagMultiPayload();
    return sub_10000CCE8((uint64_t)v76);
  }
  uint64_t v19 = v77;
  CFBooleanRef v20 = (const __CFBoolean *)sub_10008BF20();
  int64_t v21 = 0;
  uint64_t v22 = *(void *)(v19 + 64);
  uint64_t v60 = v19 + 64;
  uint64_t v63 = v19;
  uint64_t v23 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  uint64_t v62 = v72;
  uint64_t v65 = &v75;
  int64_t v61 = (unint64_t)(v23 + 63) >> 6;
  int64_t v59 = v61 - 1;
  uint64_t v64 = a2;
  while (1)
  {
    if (v25)
    {
      uint64_t v26 = v3;
      unint64_t v27 = __clz(__rbit64(v25));
      uint64_t v28 = (v25 - 1) & v25;
      unint64_t v29 = v27 | (v21 << 6);
      goto LABEL_28;
    }
    int64_t v33 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      goto LABEL_80;
    }
    if (v33 >= v61) {
      goto LABEL_40;
    }
    unint64_t v34 = *(void *)(v60 + 8 * v33);
    if (v34) {
      goto LABEL_32;
    }
    v21 += 2;
    if (v33 + 1 < v61) {
      break;
    }
    uint64_t v26 = v3;
    int64_t v21 = v33;
LABEL_41:
    uint64_t v28 = 0;
    memset(v72, 0, sizeof(v72));
    long long v71 = 0u;
LABEL_42:
    sub_100039CF8((uint64_t)&v71, (uint64_t)&v73, &qword_1000AF188);
    uint64_t v35 = v74;
    if (!v74)
    {
      swift_release();
      *a2 = v20;
      swift_storeEnumTagMultiPayload();
      return sub_10000CCE8((uint64_t)v76);
    }
    uint64_t v36 = v6;
    CFBooleanRef v37 = v73;
    sub_100039CE0(v65, &v71);
    sub_100033A60(&v71);
    uint64_t v67 = v26;
    if (v26)
    {
      swift_bridgeObjectRelease();
      sub_10000CCE8((uint64_t)&v71);
      swift_bridgeObjectRelease();
      swift_release();
      return sub_10000CCE8((uint64_t)v76);
    }
    unint64_t v66 = v28;
    int64_t v38 = v21;
    sub_100017B94((uint64_t)v14, v69);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    CFBooleanRef v70 = v20;
    unint64_t v41 = sub_100011F50((uint64_t)v37, v35);
    uint64_t v42 = *((void *)v20 + 2);
    BOOL v43 = (v40 & 1) == 0;
    uint64_t v44 = v42 + v43;
    if (__OFADD__(v42, v43))
    {
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    char v45 = v40;
    if (*((void *)v20 + 3) >= v44)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        CFBooleanRef v20 = v70;
        if (v40) {
          goto LABEL_24;
        }
      }
      else
      {
        sub_1000375BC();
        CFBooleanRef v20 = v70;
        if (v45) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      sub_100037204(v44, isUniquelyReferenced_nonNull_native);
      unint64_t v46 = sub_100011F50((uint64_t)v37, v35);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_82;
      }
      unint64_t v41 = v46;
      CFBooleanRef v20 = v70;
      if (v45)
      {
LABEL_24:
        sub_100039C14(v69, *((void *)v20 + 7) + *(void *)(v68 + 72) * v41);
        goto LABEL_25;
      }
    }
    *((void *)v20 + (v41 >> 6) + 8) |= 1 << v41;
    uint64_t v48 = (CFBooleanRef *)(*((void *)v20 + 6) + 16 * v41);
    CFBooleanRef *v48 = v37;
    v48[1] = (CFBooleanRef)v35;
    sub_100017B94(v69, *((void *)v20 + 7) + *(void *)(v68 + 72) * v41);
    uint64_t v49 = *((void *)v20 + 2);
    BOOL v50 = __OFADD__(v49, 1);
    uint64_t v51 = v49 + 1;
    if (v50) {
      goto LABEL_79;
    }
    *((void *)v20 + 2) = v51;
    swift_bridgeObjectRetain();
LABEL_25:
    uint64_t v6 = v36;
    int64_t v21 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000CCE8((uint64_t)&v71);
    uint64_t v3 = v67;
    a2 = v64;
    unint64_t v25 = v66;
  }
  unint64_t v34 = *(void *)(v60 + 8 * v21);
  if (v34)
  {
    ++v33;
    goto LABEL_32;
  }
  if (v33 + 2 >= v61)
  {
LABEL_40:
    uint64_t v26 = v3;
    goto LABEL_41;
  }
  unint64_t v34 = *(void *)(v60 + 8 * (v33 + 2));
  if (v34)
  {
    v33 += 2;
    goto LABEL_32;
  }
  int64_t v52 = v33 + 3;
  if (v33 + 3 >= v61)
  {
    uint64_t v26 = v3;
    int64_t v21 = v33 + 2;
    goto LABEL_41;
  }
  unint64_t v34 = *(void *)(v60 + 8 * v52);
  if (v34)
  {
    v33 += 3;
LABEL_32:
    uint64_t v26 = v3;
    uint64_t v28 = (v34 - 1) & v34;
    unint64_t v29 = __clz(__rbit64(v34)) + (v33 << 6);
    int64_t v21 = v33;
LABEL_28:
    uint64_t v30 = *(void *)(v63 + 56);
    uint64_t v31 = (void *)(*(void *)(v63 + 48) + 16 * v29);
    uint64_t v32 = v31[1];
    *(void *)&long long v71 = *v31;
    *((void *)&v71 + 1) = v32;
    sub_10000CD38(v30 + 32 * v29, (uint64_t)v62);
    swift_bridgeObjectRetain();
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v33 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      break;
    }
    if (v33 >= v61)
    {
      uint64_t v26 = v3;
      int64_t v21 = v59;
      goto LABEL_41;
    }
    unint64_t v34 = *(void *)(v60 + 8 * v33);
    ++v52;
    if (v34) {
      goto LABEL_32;
    }
  }
LABEL_81:
  __break(1u);
LABEL_82:
  uint64_t result = sub_10008C880();
  __break(1u);
  return result;
}

uint64_t sub_1000342EC(uint64_t a1, uint64_t a2)
{
  sub_100038474(a2);
  if (v2) {
    return v4;
  }
  else {
    return a1;
  }
}

uint64_t sub_10003433C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue() - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_100038E10(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_100038E10(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        char v15 = sub_1000387B4((uint64_t)v10, (uint64_t)v7);
        sub_100038E78((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_100038E78((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1000344C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v9 = sub_10000A390(&qword_1000AE710);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = __chkstk_darwin(v10);
  char v15 = (uint64_t *)((char *)&v41 - v14);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v47 = 0;
  uint64_t v45 = a1;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v43 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v44 = (unint64_t)(v17 + 63) >> 6;
  int64_t v42 = v44 - 1;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v47 << 6);
LABEL_8:
      uint64_t v22 = *(void *)(v45 + 56);
      uint64_t v23 = (void *)(*(void *)(v45 + 48) + 16 * v21);
      uint64_t v24 = v23[1];
      *unint64_t v12 = *v23;
      v12[1] = v24;
      uint64_t v25 = v22 + *(void *)(v48 + 72) * v21;
      uint64_t v26 = sub_10000A390((uint64_t *)&unk_1000AF070);
      sub_100038E10(v25, (uint64_t)v12 + *(int *)(v26 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 0, 1, v26);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    int64_t v27 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 < v44)
    {
      unint64_t v28 = *(void *)(v43 + 8 * v27);
      if (v28) {
        goto LABEL_12;
      }
      int64_t v29 = v47 + 2;
      ++v47;
      if (v27 + 1 < v44)
      {
        unint64_t v28 = *(void *)(v43 + 8 * v29);
        if (v28) {
          goto LABEL_15;
        }
        int64_t v47 = v27 + 1;
        if (v27 + 2 < v44)
        {
          unint64_t v28 = *(void *)(v43 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          int64_t v47 = v27 + 2;
          if (v27 + 3 < v44)
          {
            unint64_t v28 = *(void *)(v43 + 8 * (v27 + 3));
            if (v28)
            {
              v27 += 3;
              goto LABEL_12;
            }
            int64_t v29 = v27 + 4;
            int64_t v47 = v27 + 3;
            if (v27 + 4 < v44) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v30 = sub_10000A390((uint64_t *)&unk_1000AF070);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 1, 1, v30);
    unint64_t v19 = 0;
LABEL_30:
    sub_100039CF8((uint64_t)v12, (uint64_t)v15, &qword_1000AE710);
    uint64_t v31 = sub_10000A390((uint64_t *)&unk_1000AF070);
    int v32 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v15, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v35 = *v15;
    uint64_t v34 = v15[1];
    sub_100017B94((uint64_t)v15 + *(int *)(v31 + 48), (uint64_t)v8);
    unint64_t v36 = sub_100011F50(v35, v34);
    LOBYTE(v35) = v37;
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      sub_100038E78((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      return 0;
    }
    uint64_t v38 = *(void *)(a2 + 56) + *(void *)(v48 + 72) * v36;
    uint64_t v39 = v46;
    sub_100038E10(v38, v46, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    char v40 = sub_1000387B4(v39, v8);
    sub_100038E78(v39, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    uint64_t result = sub_100038E78((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    if ((v40 & 1) == 0) {
      return v33;
    }
  }
  unint64_t v28 = *(void *)(v43 + 8 * v29);
  if (v28)
  {
LABEL_15:
    int64_t v27 = v29;
LABEL_12:
    unint64_t v19 = (v28 - 1) & v28;
    unint64_t v21 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v47 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v44)
    {
      int64_t v47 = v42;
      goto LABEL_29;
    }
    unint64_t v28 = *(void *)(v43 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1000349A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ServiceEventValue();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100038E10(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for XPCObject);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      sub_100038E78(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      *uint64_t v10 = *v6;
      goto LABEL_7;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      sub_100038E78(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      *(void *)uint64_t v10 = *(void *)v6;
      goto LABEL_7;
    case 8u:
      sub_100038E78(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      uint64_t v12 = *((void *)v6 + 1);
      *(void *)uint64_t v10 = *(void *)v6;
      *((void *)v10 + 1) = v12;
      goto LABEL_7;
    case 9u:
      sub_100038E78(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      uint64_t v13 = sub_10008BC20();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v6, v13);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      uint64_t v14 = 0;
      char v15 = 0;
      break;
    case 0xBu:
      uint64_t v16 = *(void **)v6;
      int64_t count = xpc_array_get_count(*(xpc_object_t *)v6);
      uint64_t v18 = _swiftEmptyArrayStorage;
      size_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || count > _swiftEmptyArrayStorage[3] >> 1)
      {
        if (_swiftEmptyArrayStorage[2] <= count) {
          int64_t v20 = count;
        }
        else {
          int64_t v20 = _swiftEmptyArrayStorage[2];
        }
        uint64_t v18 = (void *)sub_100037A8C(isUniquelyReferenced_nonNull_native, v20, 0, _swiftEmptyArrayStorage);
      }
      unint64_t v38 = (unint64_t)v18;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = &v38;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_100038F6C;
      *(void *)(v22 + 24) = v21;
      unint64_t v36 = sub_100038FA0;
      uint64_t v37 = v22;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v33 = 1107296256;
      uint64_t v34 = sub_1000352DC;
      uint64_t v35 = &unk_1000A6BE0;
      uint64_t v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      xpc_array_apply(v16, v23);
      _Block_release(v23);
      swift_unknownObjectRelease();
      sub_100038E78(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x100035080);
      }
      *(void *)uint64_t v10 = v38;
      swift_storeEnumTagMultiPayload();
      char v15 = 0;
      uint64_t v14 = sub_100038F6C;
      break;
    case 0xCu:
      xpc_object_t v25 = *(xpc_object_t *)v6;
      unint64_t v38 = sub_1000352E4((uint64_t)_swiftEmptyArrayStorage);
      size_t v26 = xpc_dictionary_get_count(v25);
      sub_10000A390((uint64_t *)&unk_1000AF050);
      sub_10008BF30(v26);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = &v38;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = sub_100038EE8;
      *(void *)(v28 + 24) = v27;
      unint64_t v36 = sub_100038F18;
      uint64_t v37 = v28;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v33 = 1107296256;
      uint64_t v34 = sub_100035900;
      uint64_t v35 = &unk_1000A6B68;
      int64_t v29 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      xpc_dictionary_apply(v25, v29);
      _Block_release(v29);
      swift_unknownObjectRelease_n();
      sub_100038E78(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      char v30 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v30) {
        goto LABEL_21;
      }
      *(void *)uint64_t v10 = v38;
      swift_storeEnumTagMultiPayload();
      uint64_t v14 = 0;
      char v15 = sub_100038EE8;
      break;
    default:
      sub_100038E78(a1, (uint64_t (*)(void))type metadata accessor for XPCObject);
      sub_100038E78((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for XPCObject);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
  }
  sub_100017B94((uint64_t)v10, a2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  sub_1000300C8((uint64_t)v14);
  return sub_1000300C8((uint64_t)v15);
}

uint64_t sub_1000350AC(uint64_t a1, void **a2)
{
  uint64_t v3 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A390(&qword_1000AEAA8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v9, (uint64_t)v5);
  uint64_t v10 = type metadata accessor for XPCObject();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v5, 1, v10);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1000349A0(v5);
  uint64_t v12 = type metadata accessor for ServiceEventValue();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
  if (result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v14 = *a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = (void *)sub_100037A8C(0, v14[2] + 1, 1, v14);
    *a2 = v14;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = (void *)sub_100037A8C(v16 > 1, v17 + 1, 1, v14);
    *a2 = v14;
  }
  v14[2] = v17 + 1;
  return sub_100017B94((uint64_t)v8, (uint64_t)v14+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v17);
}

uint64_t sub_1000352DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100035908(a1, a2, a3);
}

unint64_t sub_1000352E4(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AF160);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A390(&qword_1000B0240);
  uint64_t v6 = sub_10008C680();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100039C78(v12, (uint64_t)v5);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100011F50(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *unint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for ServiceEventValue();
    unint64_t result = sub_100017B94(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000354C4()
{
  uint64_t v0 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000A390(&qword_1000AEAA8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for ServiceEventValue();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10008C0A0();
  uint64_t v15 = v14;
  unint64_t v16 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v16, (uint64_t)v2);
  uint64_t v17 = type metadata accessor for XPCObject();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v2, 1, v17);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1000349A0(v2);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
    if (result != 1)
    {
      sub_100017B94((uint64_t)v8, (uint64_t)v12);
      sub_100038E10((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
      sub_100035744((uint64_t)v6, v13, v15);
      return sub_100038E78((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100035744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10000A390(&qword_1000AEAA8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ServiceEventValue();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10000CC24(a1, &qword_1000AEAA8);
    sub_10003783C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10000CC24((uint64_t)v10, &qword_1000AEAA8);
  }
  else
  {
    sub_100017B94(a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_100037E70((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100035900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100035908(a1, a2, a3);
}

uint64_t sub_100035908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  char v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

uint64_t sub_100035968()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100035998@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1000359A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008C7A0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000359E8(uint64_t a1)
{
  unint64_t v2 = sub_100038FCC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100035A24(uint64_t a1)
{
  unint64_t v2 = sub_100038FCC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100035A60(void *a1)
{
  uint64_t v3 = sub_10000A390(&qword_1000AE710);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  char v6 = (int64_t *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v8 = (int64_t *)((char *)&v49 - v7);
  uint64_t v55 = sub_10000A390(&qword_1000AF060);
  uint64_t v51 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v56 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008BC20();
  int64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ServiceEventValue();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v49 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (int64_t *)((char *)&v49 - v20);
  sub_100038E10(v57, (uint64_t)&v49 - v20, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  uint64_t v57 = v13;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10000A784(a1, a1[3]);
      sub_10008C970();
      sub_100039078((uint64_t)v58, v59);
      sub_10008C830();
      return sub_10000CCE8((uint64_t)v58);
    case 2u:
      sub_10000A784(a1, a1[3]);
      sub_10008C970();
      sub_100039078((uint64_t)v58, v59);
      sub_10008C840();
      return sub_10000CCE8((uint64_t)v58);
    case 3u:
      sub_10000A784(a1, a1[3]);
      sub_10008C970();
      sub_100039078((uint64_t)v58, v59);
      sub_10008C820();
      return sub_10000CCE8((uint64_t)v58);
    case 4u:
      sub_10000A784(a1, a1[3]);
      sub_10008C970();
      sub_100039078((uint64_t)v58, v59);
      sub_10008C810();
      return sub_10000CCE8((uint64_t)v58);
    case 5u:
      int64_t v23 = v52;
      uint64_t v22 = v53;
      (*(void (**)(char *, uint64_t *, uint64_t))(v52 + 32))(v12, v21, v53);
      sub_10000A784(a1, a1[3]);
      sub_10008C970();
      sub_10008BBC0();
      sub_100039078((uint64_t)v58, v59);
      sub_10008C800();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
      goto LABEL_47;
    case 6u:
      uint64_t v24 = *v21;
      sub_10000A784(a1, a1[3]);
      sub_10008C960();
      uint64_t v25 = *(void *)(v24 + 16);
      if (!v25) {
        goto LABEL_47;
      }
      uint64_t v26 = v24 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
      uint64_t v27 = *(void *)(v54 + 72);
      while (1)
      {
        sub_100038E10(v26, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_100039078((uint64_t)v58, v59);
        sub_100039020();
        sub_10008C7C0();
        if (v1) {
          break;
        }
        sub_100038E78((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        v26 += v27;
        if (!--v25) {
          goto LABEL_47;
        }
      }
      sub_100038E78((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
LABEL_47:
      swift_bridgeObjectRelease();
      return sub_10000CCE8((uint64_t)v58);
    case 7u:
      uint64_t v28 = *v21;
      sub_10000A784(a1, a1[3]);
      sub_100038FCC();
      sub_10008C980();
      int64_t v29 = 0;
      uint64_t v30 = *(void *)(v28 + 64);
      uint64_t v50 = v28 + 64;
      uint64_t v53 = v28;
      uint64_t v31 = 1 << *(unsigned char *)(v28 + 32);
      uint64_t v32 = -1;
      if (v31 < 64) {
        uint64_t v32 = ~(-1 << v31);
      }
      unint64_t v33 = v32 & v30;
      int64_t v52 = (unint64_t)(v31 + 63) >> 6;
      int64_t v49 = v52 - 1;
      while (2)
      {
        if (v33)
        {
          unint64_t v34 = __clz(__rbit64(v33));
          v33 &= v33 - 1;
          unint64_t v35 = v34 | (v29 << 6);
LABEL_19:
          uint64_t v36 = *(void *)(v53 + 56);
          uint64_t v37 = (void *)(*(void *)(v53 + 48) + 16 * v35);
          uint64_t v38 = v37[1];
          void *v6 = *v37;
          v6[1] = v38;
          uint64_t v39 = v36 + *(void *)(v54 + 72) * v35;
          uint64_t v40 = sub_10000A390((uint64_t *)&unk_1000AF070);
          sub_100038E10(v39, (uint64_t)v6 + *(int *)(v40 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
          (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v6, 0, 1, v40);
          swift_bridgeObjectRetain();
          goto LABEL_29;
        }
        int64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
LABEL_50:
          __break(1u);
          JUMPOUT(0x1000363F4);
        }
        if (v41 >= v52) {
          goto LABEL_28;
        }
        unint64_t v42 = *(void *)(v50 + 8 * v41);
        if (v42) {
          goto LABEL_23;
        }
        v29 += 2;
        if (v41 + 1 >= v52)
        {
          int64_t v29 = v41;
        }
        else
        {
          unint64_t v42 = *(void *)(v50 + 8 * v29);
          if (v42)
          {
            ++v41;
LABEL_23:
            unint64_t v33 = (v42 - 1) & v42;
            unint64_t v35 = __clz(__rbit64(v42)) + (v41 << 6);
            int64_t v29 = v41;
            goto LABEL_19;
          }
          if (v41 + 2 < v52)
          {
            unint64_t v42 = *(void *)(v50 + 8 * (v41 + 2));
            if (v42)
            {
              v41 += 2;
              goto LABEL_23;
            }
            int64_t v47 = v41 + 3;
            if (v41 + 3 >= v52)
            {
              int64_t v29 = v41 + 2;
            }
            else
            {
              unint64_t v42 = *(void *)(v50 + 8 * v47);
              if (v42)
              {
                v41 += 3;
                goto LABEL_23;
              }
              while (1)
              {
                int64_t v41 = v47 + 1;
                if (__OFADD__(v47, 1)) {
                  goto LABEL_50;
                }
                if (v41 >= v52) {
                  break;
                }
                unint64_t v42 = *(void *)(v50 + 8 * v41);
                ++v47;
                if (v42) {
                  goto LABEL_23;
                }
              }
              int64_t v29 = v49;
            }
          }
        }
LABEL_28:
        uint64_t v43 = sub_10000A390((uint64_t *)&unk_1000AF070);
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v6, 1, 1, v43);
        unint64_t v33 = 0;
LABEL_29:
        sub_100039CF8((uint64_t)v6, (uint64_t)v8, &qword_1000AE710);
        uint64_t v44 = sub_10000A390((uint64_t *)&unk_1000AF070);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v8, 1, v44) != 1)
        {
          uint64_t v46 = *v8;
          uint64_t v45 = v8[1];
          sub_100017B94((uint64_t)v8 + *(int *)(v44 + 48), (uint64_t)v16);
          v58[0] = v46;
          v58[1] = v45;
          sub_100039020();
          sub_10008C780();
          if (!v1)
          {
            swift_bridgeObjectRelease();
            sub_100038E78((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
            continue;
          }
          swift_bridgeObjectRelease();
          sub_100038E78((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        }
        break;
      }
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v56, v55);
    default:
      sub_10000A784(a1, a1[3]);
      sub_10008C970();
      sub_100039078((uint64_t)v58, v59);
      sub_10008C800();
      goto LABEL_47;
  }
}

uint64_t sub_100036414(void *a1)
{
  return sub_100035A60(a1);
}

unint64_t sub_10003642C()
{
  return 0xD000000000000021;
}

Class sub_100036448()
{
  uint64_t v1 = sub_10000A390(&qword_1000AE710);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v72 = (uint64_t *)((char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  long long v71 = (uint64_t *)((char *)&v64 - v4);
  uint64_t v5 = sub_10008BC20();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ServiceEventValue();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v74 = (uint64_t)&v64 - v14;
  __chkstk_darwin(v13);
  unint64_t v16 = (unsigned __int8 *)&v64 - v15;
  sub_100038E10(v0, (uint64_t)&v64 - v15, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      return (Class)[objc_allocWithZone((Class)NSNumber) initWithLongLong:*(void *)v16];
    case 2u:
      return (Class)[objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:*(void *)v16];
    case 3u:
      return (Class)[objc_allocWithZone((Class)NSNumber) initWithDouble:*(double *)v16];
    case 4u:
      return (Class)[objc_allocWithZone((Class)NSNumber) initWithBool:*v16];
    case 5u:
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v6 + 32))(v8, v16, v5);
      Class isa = sub_10008BBD0().super.isa;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return isa;
    case 6u:
      uint64_t v58 = *(void *)v16;
      unint64_t v75 = (unint64_t)_swiftEmptyArrayStorage;
      sub_1000379CC(*(void *)(v58 + 16));
      sub_10008C180();
      uint64_t v59 = *(void *)(v58 + 16);
      if (v59)
      {
        uint64_t v60 = v58 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
        uint64_t v61 = *(void *)(v70 + 72);
        do
        {
          uint64_t v62 = sub_100038E10(v60, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
          sub_100036448(v62);
          sub_10008C150();
          if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_10008C190();
          }
          sub_10008C1B0();
          sub_10008C180();
          sub_100038E78((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
          v60 += v61;
          --v59;
        }
        while (v59);
      }
      swift_bridgeObjectRelease();
      sub_10000A8C8(0, (unint64_t *)&qword_1000AF080);
      uint64_t v17 = sub_10008C160().super.isa;
      goto LABEL_53;
    case 7u:
      uint64_t v20 = *(void *)v16;
      uint64_t v66 = sub_10000A8C8(0, (unint64_t *)&qword_1000AF080);
      uint64_t v21 = (void *)sub_10008BF20();
      int64_t v73 = 0;
      uint64_t v22 = *(void *)(v20 + 64);
      uint64_t v67 = v20 + 64;
      uint64_t v69 = v20;
      uint64_t v23 = 1 << *(unsigned char *)(v20 + 32);
      uint64_t v24 = -1;
      if (v23 < 64) {
        uint64_t v24 = ~(-1 << v23);
      }
      unint64_t v25 = v24 & v22;
      int64_t v68 = (unint64_t)(v23 + 63) >> 6;
      int64_t v65 = v68 - 1;
      break;
    default:
      uint64_t v17 = (objc_class *)sub_10008BF80();
LABEL_53:
      Class isa = v17;
      goto LABEL_55;
  }
  while (1)
  {
    uint64_t v27 = (uint64_t)v72;
    if (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v29 = v28 | (v73 << 6);
LABEL_15:
      uint64_t v30 = *(void *)(v69 + 56);
      uint64_t v31 = (void *)(*(void *)(v69 + 48) + 16 * v29);
      uint64_t v32 = v31[1];
      void *v72 = *v31;
      *(void *)(v27 + 8) = v32;
      uint64_t v33 = v30 + *(void *)(v70 + 72) * v29;
      uint64_t v34 = sub_10000A390((uint64_t *)&unk_1000AF070);
      sub_100038E10(v33, v27 + *(int *)(v34 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v27, 0, 1, v34);
      swift_bridgeObjectRetain();
      goto LABEL_34;
    }
    int64_t v35 = v73 + 1;
    if (__OFADD__(v73, 1)) {
      goto LABEL_59;
    }
    if (v35 < v68)
    {
      unint64_t v36 = *(void *)(v67 + 8 * v35);
      if (v36) {
        goto LABEL_19;
      }
      int64_t v37 = v73 + 2;
      ++v73;
      if (v35 + 1 < v68)
      {
        unint64_t v36 = *(void *)(v67 + 8 * v37);
        if (v36) {
          goto LABEL_22;
        }
        int64_t v73 = v35 + 1;
        if (v35 + 2 < v68)
        {
          unint64_t v36 = *(void *)(v67 + 8 * (v35 + 2));
          if (v36)
          {
            v35 += 2;
            goto LABEL_19;
          }
          int64_t v37 = v35 + 3;
          int64_t v73 = v35 + 2;
          if (v35 + 3 < v68)
          {
            unint64_t v36 = *(void *)(v67 + 8 * v37);
            if (v36)
            {
LABEL_22:
              int64_t v35 = v37;
LABEL_19:
              unint64_t v25 = (v36 - 1) & v36;
              unint64_t v29 = __clz(__rbit64(v36)) + (v35 << 6);
              int64_t v73 = v35;
              goto LABEL_15;
            }
            while (1)
            {
              int64_t v35 = v37 + 1;
              if (__OFADD__(v37, 1)) {
                goto LABEL_60;
              }
              if (v35 >= v68) {
                break;
              }
              unint64_t v36 = *(void *)(v67 + 8 * v35);
              ++v37;
              if (v36) {
                goto LABEL_19;
              }
            }
            int64_t v73 = v65;
          }
        }
      }
    }
    uint64_t v38 = sub_10000A390((uint64_t *)&unk_1000AF070);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v27, 1, 1, v38);
    unint64_t v25 = 0;
LABEL_34:
    uint64_t v39 = v71;
    sub_100039CF8(v27, (uint64_t)v71, &qword_1000AE710);
    uint64_t v40 = sub_10000A390((uint64_t *)&unk_1000AF070);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40) == 1) {
      break;
    }
    uint64_t v42 = *v39;
    uint64_t v41 = v39[1];
    uint64_t v43 = sub_100017B94((uint64_t)v39 + *(int *)(v40 + 48), v74);
    uint64_t v44 = sub_100036448(v43);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v75 = (unint64_t)v21;
    unint64_t v47 = sub_100011F50(v42, v41);
    uint64_t v48 = v21[2];
    BOOL v49 = (v46 & 1) == 0;
    uint64_t v50 = v48 + v49;
    if (__OFADD__(v48, v49))
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      sub_10008C880();
      __break(1u);
      JUMPOUT(0x100036D04);
    }
    char v51 = v46;
    if (v21[3] >= v50)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v21 = (void *)v75;
        if (v46) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_10003250C();
        uint64_t v21 = (void *)v75;
        if (v51) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1000321FC(v50, isUniquelyReferenced_nonNull_native);
      unint64_t v52 = sub_100011F50(v42, v41);
      if ((v51 & 1) != (v53 & 1)) {
        goto LABEL_61;
      }
      unint64_t v47 = v52;
      uint64_t v21 = (void *)v75;
      if (v51)
      {
LABEL_11:
        uint64_t v26 = v21[7];

        *(void *)(v26 + 8 * v47) = v44;
        goto LABEL_12;
      }
    }
    v21[(v47 >> 6) + 8] |= 1 << v47;
    uint64_t v54 = (uint64_t *)(v21[6] + 16 * v47);
    uint64_t *v54 = v42;
    v54[1] = v41;
    *(void *)(v21[7] + 8 * v47) = v44;
    uint64_t v55 = v21[2];
    BOOL v56 = __OFADD__(v55, 1);
    uint64_t v57 = v55 + 1;
    if (v56) {
      goto LABEL_58;
    }
    v21[2] = v57;
    swift_bridgeObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100038E78(v74, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  swift_release();
  Class isa = sub_10008BEE0().super.isa;
LABEL_55:
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t sub_100036D24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (uint64_t)a1 + *(int *)(sub_10000A390((uint64_t *)&unk_1000AF070) + 48);
  uint64_t v5 = sub_10000A390(&qword_1000AF160);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  sub_100038E10(v4, (uint64_t)a2 + *(int *)(v5 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  *a2 = v7;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100036DB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for ServiceEventValue();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v49 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v48 = (uint64_t)v47 - v14;
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)v47 - v15;
  uint64_t v17 = sub_10000A390((uint64_t *)&unk_1000AF190);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (void *)((char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  uint64_t v52 = v21;
  uint64_t v53 = 0;
  uint64_t v54 = v24 & v22;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  v47[1] = a1;
  swift_bridgeObjectRetain();
  v47[0] = a3;
  swift_retain();
  sub_10003806C((uint64_t)v19);
  uint64_t v25 = sub_10000A390(&qword_1000AF160);
  for (int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v19, 1, v25);
        ;
        int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v19, 1, v25))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_100039CF0();
      return swift_release();
    }
    uint64_t v31 = *v19;
    uint64_t v30 = v19[1];
    sub_100017B94((uint64_t)v19 + *(int *)(v25 + 48), (uint64_t)v16);
    uint64_t v32 = *(void **)a5;
    unint64_t v34 = sub_100011F50(v31, v30);
    uint64_t v35 = v32[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    if (v32[3] >= v37)
    {
      if (a4)
      {
        uint64_t v41 = *(void **)a5;
        if (v33) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_1000375BC();
        uint64_t v41 = *(void **)a5;
        if (v38) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_100037204(v37, a4 & 1);
      unint64_t v39 = sub_100011F50(v31, v30);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_22;
      }
      unint64_t v34 = v39;
      uint64_t v41 = *(void **)a5;
      if (v38)
      {
LABEL_5:
        unint64_t v27 = *(void *)(v57 + 72) * v34;
        uint64_t v28 = v49;
        sub_100038E10(v41[7] + v27, v49, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        uint64_t v29 = v48;
        sub_100038E10(v28, v48, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_100038E78(v28, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_100038E78((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        swift_bridgeObjectRelease();
        sub_100039C14(v29, *(void *)(*(void *)a5 + 56) + v27);
        goto LABEL_6;
      }
    }
    v41[(v34 >> 6) + 8] |= 1 << v34;
    uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
    *uint64_t v42 = v31;
    v42[1] = v30;
    sub_100017B94((uint64_t)v16, v41[7] + *(void *)(v57 + 72) * v34);
    uint64_t v43 = v41[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_21;
    }
    v41[2] = v45;
LABEL_6:
    sub_10003806C((uint64_t)v19);
    uint64_t v25 = sub_10000A390(&qword_1000AF160);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_10008C880();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ServiceEventValue()
{
  uint64_t result = qword_1000B33A0;
  if (!qword_1000B33A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100037204(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ServiceEventValue();
  uint64_t v42 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10000A390(&qword_1000B0240);
  int v43 = a2;
  uint64_t v9 = sub_10008C670();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  unint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_100017B94(v30, (uint64_t)v7);
    }
    else
    {
      sub_100038E10(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      swift_bridgeObjectRetain();
    }
    sub_10008C8F0();
    sub_10008C050();
    uint64_t result = sub_10008C920();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_100017B94((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void *sub_1000375BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ServiceEventValue();
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A390(&qword_1000B0240);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10008C660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_100038E10(*(void *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *int64_t v22 = v19;
    v22[1] = v20;
    sub_100017B94((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10003783C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100011F50(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000375BC();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for ServiceEventValue();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_100017B94(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_100037C60(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    int64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ServiceEventValue();
    int64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_1000379CC(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_10008C650();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_10008C580();
    *uint64_t v1 = result;
  }
  return result;
}

size_t sub_100037A8C(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000A390((uint64_t *)&unk_1000AF150);
  uint64_t v10 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

unint64_t sub_100037C60(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_10008C490();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_10008C8F0();
        swift_bridgeObjectRetain();
        sub_10008C050();
        Swift::Int v9 = sub_10008C920();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *unint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for ServiceEventValue() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100037E70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100011F50(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1000375BC();
      goto LABEL_7;
    }
    sub_100037204(v15, a4 & 1);
    unint64_t v22 = sub_100011F50(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_10008C880();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for ServiceEventValue() - 8) + 72) * v12;
    return sub_100039C14(a1, v20);
  }
LABEL_13:
  sub_100037FD4(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100037FD4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for ServiceEventValue();
  uint64_t result = sub_100017B94(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_10003806C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v2 = sub_10000A390((uint64_t *)&unk_1000AF070);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A390(&qword_1000AE710);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char **)((char *)&v40 - v10);
  uint64_t v13 = *v1;
  uint64_t v12 = v1[1];
  uint64_t v15 = v1[2];
  int64_t v14 = v1[3];
  int64_t v16 = v14;
  unint64_t v17 = v1[4];
  int64_t v40 = v5;
  if (v17)
  {
    int v43 = v9;
    int64_t v44 = v14;
    uint64_t v41 = v15;
    uint64_t v42 = v12;
    uint64_t v18 = v2;
    uint64_t v19 = (v17 - 1) & v17;
    unint64_t v20 = __clz(__rbit64(v17)) | (v14 << 6);
LABEL_3:
    uint64_t v21 = *(void *)(v13 + 56);
    unint64_t v22 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v20);
    uint64_t v23 = v13;
    uint64_t v25 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v26 = v21 + *(void *)(*(void *)(type metadata accessor for ServiceEventValue() - 8) + 72) * v20;
    uint64_t v2 = v18;
    sub_100038E10(v26, (uint64_t)v11 + *(int *)(v18 + 48), (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    void *v11 = v25;
    v11[1] = v24;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v18);
    uint64_t v13 = v23;
    swift_bridgeObjectRetain();
    uint64_t v12 = v42;
    uint64_t v9 = v43;
    uint64_t v15 = v41;
    goto LABEL_25;
  }
  int64_t v27 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v16 = v10;
    goto LABEL_24;
  }
  int64_t v28 = (unint64_t)(v15 + 64) >> 6;
  if (v27 < v28)
  {
    unint64_t v29 = *(void *)(v12 + 8 * v27);
    if (v29)
    {
LABEL_7:
      uint64_t v41 = v15;
      uint64_t v42 = v12;
      int v43 = v9;
      int64_t v44 = v27;
      uint64_t v18 = v2;
      uint64_t v19 = (v29 - 1) & v29;
      unint64_t v20 = __clz(__rbit64(v29)) + (v27 << 6);
      goto LABEL_3;
    }
    int64_t v30 = v14 + 2;
    int64_t v16 = v14 + 1;
    if (v14 + 2 < v28)
    {
      unint64_t v29 = *(void *)(v12 + 8 * v30);
      if (v29)
      {
LABEL_10:
        int64_t v27 = v30;
        goto LABEL_7;
      }
      int64_t v16 = v14 + 2;
      if (v14 + 3 < v28)
      {
        unint64_t v29 = *(void *)(v12 + 8 * (v14 + 3));
        if (v29)
        {
          int64_t v27 = v14 + 3;
          goto LABEL_7;
        }
        int64_t v30 = v14 + 4;
        int64_t v16 = v14 + 3;
        if (v14 + 4 < v28)
        {
          unint64_t v29 = *(void *)(v12 + 8 * v30);
          if (v29) {
            goto LABEL_10;
          }
          int64_t v27 = v14 + 5;
          int64_t v16 = v14 + 4;
          if (v14 + 5 < v28)
          {
            unint64_t v29 = *(void *)(v12 + 8 * v27);
            if (v29) {
              goto LABEL_7;
            }
            int64_t v10 = v28 - 1;
            uint64_t v31 = v14 + 6;
            while (v28 != v31)
            {
              unint64_t v29 = *(void *)(v12 + 8 * v31++);
              if (v29)
              {
                int64_t v27 = v31 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v44 = v16;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
  uint64_t v19 = 0;
LABEL_25:
  *uint64_t v1 = v13;
  v1[1] = v12;
  int64_t v32 = v44;
  v1[2] = v15;
  v1[3] = v32;
  v1[4] = v19;
  unint64_t v33 = (void (*)(uint64_t))v1[5];
  sub_100039CF8((uint64_t)v11, (uint64_t)v9, &qword_1000AE710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    uint64_t v34 = sub_10000A390(&qword_1000AF160);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v45, 1, 1, v34);
  }
  else
  {
    uint64_t v36 = (uint64_t)v9;
    uint64_t v37 = (uint64_t)v40;
    sub_100039CF8(v36, (uint64_t)v40, (uint64_t *)&unk_1000AF070);
    uint64_t v38 = v45;
    v33(v37);
    sub_10000CC24(v37, (uint64_t *)&unk_1000AF070);
    uint64_t v39 = sub_10000A390(&qword_1000AF160);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
  }
}

uint64_t sub_100038474(uint64_t a1)
{
  v18[0] = a1;
  uint64_t v1 = type metadata accessor for ServiceEventValue();
  __chkstk_darwin(v1);
  uint64_t v3 = (CFBooleanRef *)((char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10008C000();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008BFF0();
  uint64_t v8 = sub_10008BFC0();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    sub_10003917C();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v12 = self;
    Class isa = sub_10008BAC0().super.isa;
    id v19 = 0;
    id v14 = [v12 JSONObjectWithData:isa options:0 error:&v19];

    id v15 = v19;
    if (v14)
    {
      sub_10008C470();
      swift_unknownObjectRelease();
      uint64_t v16 = v18[1];
      sub_100033A60((uint64_t)v20, v3);
      if (v16)
      {
        sub_10000CCE8((uint64_t)v20);
        sub_10000A428(v8, v10);
        return swift_bridgeObjectRelease();
      }
      else if (swift_getEnumCaseMultiPayload() == 7)
      {
        sub_10000CCE8((uint64_t)v20);
        sub_10000A428(v8, v10);
        return v18[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_100038E78((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        sub_10003917C();
        swift_allocError();
        swift_willThrow();
        sub_10000A428(v8, v10);
        return sub_10000CCE8((uint64_t)v20);
      }
    }
    else
    {
      unint64_t v17 = v15;
      swift_bridgeObjectRelease();
      sub_10008B960();

      swift_willThrow();
      return sub_10000A428(v8, v10);
    }
  }
}

uint64_t sub_1000387B4(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v2 = sub_10008BC20();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  __chkstk_darwin(v2);
  uint64_t v50 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v53 = (uint64_t *)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (uint64_t *)((char *)&v49 - v8);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v54 = (uint64_t)&v49 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v49 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (double *)((char *)&v49 - v16);
  uint64_t v18 = __chkstk_darwin(v15);
  unint64_t v20 = (uint64_t *)((char *)&v49 - v19);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (uint64_t *)((char *)&v49 - v22);
  __chkstk_darwin(v21);
  uint64_t v25 = (uint64_t *)((char *)&v49 - v24);
  uint64_t v26 = sub_10000A390(&qword_1000AF168);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  unint64_t v29 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v30 = (uint64_t *)&v29[*(int *)(v27 + 56)];
  sub_100038E10(v55, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  sub_100038E10(v56, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100038E10((uint64_t)v29, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_31;
      }
      uint64_t v35 = *v23;
      goto LABEL_13;
    case 2u:
      sub_100038E10((uint64_t)v29, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_31;
      }
      uint64_t v35 = *v20;
LABEL_13:
      BOOL v36 = v35 == *v30;
      goto LABEL_16;
    case 3u:
      sub_100038E10((uint64_t)v29, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_31;
      }
      BOOL v36 = *v17 == *(double *)v30;
LABEL_16:
      char v37 = v36;
      goto LABEL_28;
    case 4u:
      sub_100038E10((uint64_t)v29, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_31;
      }
      char v38 = *v14 ^ *(unsigned char *)v30;
      sub_100038E78((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      char v37 = v38 ^ 1;
      return v37 & 1;
    case 5u:
      uint64_t v39 = v54;
      sub_100038E10((uint64_t)v29, v54, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v39, v52);
        goto LABEL_31;
      }
      uint64_t v41 = v50;
      uint64_t v40 = v51;
      uint64_t v42 = v52;
      (*(void (**)(char *, uint64_t *, uint64_t))(v51 + 32))(v50, v30, v52);
      char v37 = sub_10008BBE0();
      int v43 = *(void (**)(char *, uint64_t))(v40 + 8);
      v43(v41, v42);
      v43((char *)v39, v42);
LABEL_28:
      sub_100038E78((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      return v37 & 1;
    case 6u:
      sub_100038E10((uint64_t)v29, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      uint64_t v44 = *v9;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_29;
      }
      char v45 = sub_10003433C(v44, *v30);
      goto LABEL_27;
    case 7u:
      char v46 = v53;
      sub_100038E10((uint64_t)v29, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      uint64_t v47 = *v46;
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_29;
      }
      char v45 = sub_1000344C8(v47, *v30);
LABEL_27:
      char v37 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    default:
      sub_100038E10((uint64_t)v29, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      uint64_t v32 = *v25;
      uint64_t v31 = v25[1];
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_29:
        swift_bridgeObjectRelease();
LABEL_31:
        sub_10000CC24((uint64_t)v29, &qword_1000AF168);
        goto LABEL_32;
      }
      if (v32 == *v30 && v31 == v30[1])
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v34 = sub_10008C7D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {
          sub_100038E78((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
LABEL_32:
          char v37 = 0;
          return v37 & 1;
        }
      }
      sub_100038E78((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      char v37 = 1;
      return v37 & 1;
  }
}

uint64_t sub_100038E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100038E78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100038ED8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100038EE8()
{
  return 1;
}

uint64_t sub_100038F08()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100038F18()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_100038F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100038F54()
{
  return swift_release();
}

uint64_t sub_100038F5C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100038F6C(uint64_t a1, uint64_t a2)
{
  sub_1000350AC(a2, *(void ***)(v2 + 16));
  return 1;
}

uint64_t sub_100038F90()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100038FA0()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

unint64_t sub_100038FCC()
{
  unint64_t result = qword_1000AF068;
  if (!qword_1000AF068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF068);
  }
  return result;
}

unint64_t sub_100039020()
{
  unint64_t result = qword_1000AE348;
  if (!qword_1000AE348)
  {
    type metadata accessor for ServiceEventValue();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AE348);
  }
  return result;
}

uint64_t sub_100039078(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1000390CC()
{
  unint64_t result = qword_1000AF088;
  if (!qword_1000AF088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF088);
  }
  return result;
}

unint64_t sub_100039124()
{
  unint64_t result = qword_1000AF090;
  if (!qword_1000AF090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF090);
  }
  return result;
}

unint64_t sub_10003917C()
{
  unint64_t result = qword_1000AF098;
  if (!qword_1000AF098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF098);
  }
  return result;
}

ValueMetadata *type metadata accessor for Event()
{
  return &type metadata for Event;
}

void *assignWithCopy for CachedEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for CachedEvent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CachedEvent()
{
  return &type metadata for CachedEvent;
}

uint64_t *sub_1000392A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v10 = sub_10008BC20();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100039448(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 6:
    case 7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5:
      uint64_t v3 = sub_10008BC20();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_100039530(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 5u:
      uint64_t v7 = sub_10008BC20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_6;
    case 6u:
    case 7u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_100039680(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100038E78((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 5u:
        uint64_t v6 = sub_10008BC20();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_7;
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_1000397FC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v6 = sub_10008BC20();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1000398B4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100038E78((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      uint64_t v6 = sub_10008BC20();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for XPCObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000399E4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000399F4()
{
  uint64_t result = sub_10008BC20();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ServiceEventValue.CodingKeys(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ServiceEventValue.CodingKeys()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ServiceEventValue.CodingKeys(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for StorebagSectionPerCountrySampling(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for ServiceEventValue.CodingKeys(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceEventValue.CodingKeys(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceEventValue.CodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServiceEventValue.CodingKeys()
{
  return &type metadata for ServiceEventValue.CodingKeys;
}

ValueMetadata *type metadata accessor for BadCachedEvent()
{
  return &type metadata for BadCachedEvent;
}

uint64_t sub_100039C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ServiceEventValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100039C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AF160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_100039CE0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100039CF0()
{
  return swift_release();
}

uint64_t sub_100039CF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000A390(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100039D68(unsigned __int8 *a1, char *a2)
{
  return sub_100039F90(*a1, *a2);
}

uint64_t sub_100039D74(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x7972617262696CLL;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7972617262696CLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      unint64_t v5 = 7496054;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000013;
      uint64_t v6 = "decision_server_url";
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD000000000000012;
      uint64_t v6 = "radar_component_id";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v3 = 0x8000000100093420;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v5 = 0x69745F7261646172;
      unint64_t v3 = 0xEB00000000656C74;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE300000000000000;
      if (v5 == 7496054) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      unint64_t v8 = 0xD000000000000013;
      unint64_t v9 = "decision_server_url";
      goto LABEL_13;
    case 3:
      unint64_t v8 = 0xD000000000000012;
      unint64_t v9 = "radar_component_id";
LABEL_13:
      unint64_t v7 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      if (v5 != v8) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v7 = 0x8000000100093420;
      unint64_t v2 = 0xD000000000000011;
      goto LABEL_16;
    case 5:
      unint64_t v7 = 0xEB00000000656C74;
      if (v5 != 0x69745F7261646172) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_17:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_20:
      }
        char v10 = sub_10008C7D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_100039F90(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x747069726373;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x747069726373;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E6F6973726576;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x63736A5F343662;
      break;
    case 3:
      unint64_t v3 = 0x80000001000933C0;
      unint64_t v5 = 0xD000000000000012;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6E6F6973726576) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x63736A5F343662;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x80000001000933C0;
      if (v5 == 0xD000000000000012) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_10008C7D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Swift::Int sub_10003A120()
{
  return sub_10003A128();
}

Swift::Int sub_10003A128()
{
  return sub_10008C920();
}

Swift::Int sub_10003A204()
{
  return sub_10008C920();
}

uint64_t sub_10003A324()
{
  sub_10008C050();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003A3E8()
{
  sub_10008C050();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10003A4F4()
{
  return sub_10003A4FC();
}

Swift::Int sub_10003A4FC()
{
  return sub_10008C920();
}

Swift::Int sub_10003A5D4()
{
  return sub_10008C920();
}

uint64_t sub_10003A6F0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10003B5D4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10003A720(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x747069726373;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6E6F6973726576;
      goto LABEL_3;
    case 2:
      *a1 = 0x63736A5F343662;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000012;
      a1[1] = 0x80000001000933C0;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_10003A7BC()
{
  unint64_t result = 0x747069726373;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      unint64_t result = 0x63736A5F343662;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10003A84C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003B5D4(a1, a2);
  *a3 = result;
  return result;
}

void sub_10003A874(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10003A880(uint64_t a1)
{
  unint64_t v2 = sub_10003C97C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003A8BC(uint64_t a1)
{
  unint64_t v2 = sub_10003C97C();
  return CodingKey.debugDescription.getter(a1, v2);
}

Class sub_10003A8F8()
{
  sub_1000328F4();
  sub_10008BF20();
  NSString v1 = sub_10008BF80();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10003B464((uint64_t)v1, 0x747069726373, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v3 = [objc_allocWithZone((Class)NSNumber) initWithChar:*(char *)(v0 + 16)];
  char v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_10003B464((uint64_t)v3, 0x6E6F6973726576, 0xE700000000000000, v4);
  swift_bridgeObjectRelease();
  NSString v5 = sub_10008BF80();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_10003B464((uint64_t)v5, 0x63736A5F343662, 0xE700000000000000, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_10003AF2C(v7);
  swift_bridgeObjectRelease();
  Class isa = sub_10008C160().super.isa;
  swift_bridgeObjectRelease();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_10003B464((uint64_t)isa, 0xD000000000000012, 0x80000001000933C0, v9);
  swift_bridgeObjectRelease();
  Class v10 = sub_10008BEE0().super.isa;
  swift_bridgeObjectRelease();
  return v10;
}

Class sub_10003AAF0()
{
  uint64_t v1 = v0;
  sub_1000328F4();
  uint64_t v2 = sub_10008BF20();
  NSString v3 = sub_10008BF80();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10003B464((uint64_t)v3, 0x7972617262696CLL, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  NSString v5 = sub_10008BF80();
  char v6 = swift_isUniquelyReferenced_nonNull_native();
  v26[0] = v2;
  sub_10003B464((uint64_t)v5, 7496054, 0xE300000000000000, v6);
  uint64_t v20 = v2;
  swift_bridgeObjectRelease();
  sub_10003B620(v1 + 32, (uint64_t)v23);
  sub_10003B620((uint64_t)v23, (uint64_t)v24);
  if (v24[1])
  {
    NSString v7 = sub_10008BF80();
    char v8 = swift_isUniquelyReferenced_nonNull_native();
    v26[0] = v2;
    sub_10003B464((uint64_t)v7, 0xD000000000000013, 0x80000001000933E0, v8);
    uint64_t v20 = v26[0];
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  sub_10003B620(v1 + 48, (uint64_t)v22);
  sub_10003B620((uint64_t)v22, (uint64_t)v25);
  if (v25[1])
  {
    NSString v9 = sub_10008BF80();
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    v26[0] = v20;
    sub_10003B464((uint64_t)v9, 0xD000000000000012, 0x8000000100093400, v10);
    uint64_t v20 = v26[0];
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v1 + 64);
    if (!v11) {
      goto LABEL_14;
    }
  }
  else
  {

    uint64_t v11 = *(void *)(v1 + 64);
    if (!v11) {
      goto LABEL_14;
    }
  }
  v26[0] = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  sub_1000379CC(v12);
  sub_10008C180();
  if (v12)
  {
    uint64_t v13 = v11 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_10008BF80();
      swift_bridgeObjectRelease();
      sub_10008C150();
      if (*(void *)((v26[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10008C190();
      }
      v13 += 16;
      sub_10008C1B0();
      sub_10008C180();
      --v12;
    }
    while (v12);
  }
  swift_bridgeObjectRelease();
  Class isa = sub_10008C160().super.isa;
  swift_bridgeObjectRelease();
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  v21[0] = v20;
  sub_10003B464((uint64_t)isa, 0xD000000000000011, 0x8000000100093420, v15);
  swift_bridgeObjectRelease();
LABEL_14:
  sub_10003B620(v1 + 72, (uint64_t)v21);
  sub_10003B620((uint64_t)v21, (uint64_t)v26);
  if (v26[1])
  {
    NSString v16 = sub_10008BF80();
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_10003B464((uint64_t)v16, 0x69745F7261646172, 0xEB00000000656C74, v17);
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  Class v18 = sub_10008BEE0().super.isa;
  swift_bridgeObjectRelease();
  return v18;
}

void *sub_10003AF2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_10008C5F0();
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 48);
      v7[2] = *(_OWORD *)(v4 + 32);
      v7[3] = v5;
      v7[4] = *(_OWORD *)(v4 + 64);
      uint64_t v8 = *(void *)(v4 + 80);
      long long v6 = *(_OWORD *)(v4 + 16);
      v7[0] = *(_OWORD *)v4;
      v7[1] = v6;
      sub_10003CB04((uint64_t)v7);
      sub_10003AAF0();
      sub_10003CB78((uint64_t)v7);
      sub_10008C5D0();
      sub_10008C600();
      sub_10008C610();
      sub_10008C5E0();
      v4 += 88;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

double sub_10003B010@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10003B688(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

unint64_t sub_10003B054(char a1)
{
  unint64_t result = 0x7972617262696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 7496054;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x69745F7261646172;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10003B12C(char a1)
{
  unint64_t result = 0x7972617262696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 7496054;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x69745F7261646172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10003B204(unsigned __int8 *a1, char *a2)
{
  return sub_100039D74(*a1, *a2);
}

Swift::Int sub_10003B210()
{
  return sub_10003A204();
}

uint64_t sub_10003B218()
{
  return sub_10003A3E8();
}

Swift::Int sub_10003B220()
{
  return sub_10003A5D4();
}

uint64_t sub_10003B228@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10003B970(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_10003B258@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10003B054(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10003B284()
{
  return sub_10003B12C(*v0);
}

uint64_t sub_10003B28C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003B970(a1, a2);
  *a3 = result;
  return result;
}

void sub_10003B2B4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_10003B2C0(uint64_t a1)
{
  unint64_t v2 = sub_10003C928();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003B2FC(uint64_t a1)
{
  unint64_t v2 = sub_10003C928();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10003B338@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10003B9BC(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_10003B394(uint64_t a1, uint64_t a2)
{
  NSString v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100011F50(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *NSString v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10003250C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_10001E5BC(v6, v9);
  *NSString v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

void sub_10003B464(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  long long v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100011F50(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10003250C();
LABEL_7:
    Class v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1000321FC(v15, a4 & 1);
  unint64_t v20 = sub_100011F50(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_10008C880();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  Class v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_10003B5D4(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000A6DA8;
  v6._object = a2;
  unint64_t v4 = sub_10008C6B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_10003B620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AF1A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003B688@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A390(&qword_1000AF1F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A784(a1, a1[3]);
  sub_10003C97C();
  sub_10008C950();
  if (v2) {
    return sub_10000CCE8((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_10008C710();
  uint64_t v11 = v10;
  char v23 = 1;
  swift_bridgeObjectRetain();
  int v20 = sub_10008C740();
  char v22 = 2;
  v17[0] = sub_10008C710();
  uint64_t v13 = v12;
  v17[1] = sub_10000A390(&qword_1000AF200);
  char v21 = 3;
  sub_10003CA3C();
  uint64_t v18 = v13;
  swift_bridgeObjectRetain();
  sub_10008C730();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v19;
  swift_bridgeObjectRetain();
  sub_10000CCE8((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v15 = v18;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v17[0];
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v14;
  return result;
}

uint64_t sub_10003B970(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000A6E28;
  v6._object = a2;
  unint64_t v4 = sub_10008C6B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_10003B9BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000A390(&qword_1000AF1E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A784(a1, a1[3]);
  sub_10003C928();
  sub_10008C950();
  if (v2) {
    return sub_10000CCE8((uint64_t)a1);
  }
  char v44 = 0;
  uint64_t v9 = sub_10008C710();
  uint64_t v11 = v10;
  char v43 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_10008C710();
  uint64_t v35 = v9;
  uint64_t v36 = v12;
  char v42 = 2;
  uint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10008C6C0();
  uint64_t v37 = v16;
  uint64_t v31 = v15;
  uint64_t v34 = v14;
  char v41 = 3;
  swift_bridgeObjectRetain();
  uint64_t v33 = 0;
  uint64_t v30 = sub_10008C6C0();
  uint64_t v18 = v17;
  sub_10000A390(&qword_1000AEC10);
  char v40 = 4;
  sub_10003C9D0();
  swift_bridgeObjectRetain();
  sub_10008C6E0();
  uint64_t v32 = v18;
  uint64_t v19 = v38;
  char v39 = 5;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_10008C6C0();
  uint64_t v22 = v21;
  char v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v33 = v20;
  v23(v8, v5);
  swift_bridgeObjectRetain();
  sub_10000CCE8((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v32;
  swift_bridgeObjectRelease();
  uint64_t v25 = v37;
  swift_bridgeObjectRelease();
  uint64_t v26 = v34;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v35;
  a2[1] = v11;
  a2[2] = v36;
  a2[3] = v26;
  a2[4] = v31;
  a2[5] = v25;
  a2[6] = v30;
  a2[7] = v24;
  uint64_t v28 = v33;
  a2[8] = v19;
  a2[9] = v28;
  a2[10] = v22;
  return result;
}

unint64_t sub_10003BE7C()
{
  unint64_t result = qword_1000AF1A8;
  if (!qword_1000AF1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1A8);
  }
  return result;
}

unint64_t sub_10003BED4()
{
  unint64_t result = qword_1000AF1B0;
  if (!qword_1000AF1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1B0);
  }
  return result;
}

unint64_t sub_10003BF2C()
{
  unint64_t result = qword_1000AF1B8;
  if (!qword_1000AF1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1B8);
  }
  return result;
}

unint64_t sub_10003BF84()
{
  unint64_t result = qword_1000AF1C0;
  if (!qword_1000AF1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1C0);
  }
  return result;
}

unint64_t sub_10003BFDC()
{
  unint64_t result = qword_1000AF1C8;
  if (!qword_1000AF1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1C8);
  }
  return result;
}

unint64_t sub_10003C034()
{
  unint64_t result = qword_1000AF1D0;
  if (!qword_1000AF1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1D0);
  }
  return result;
}

uint64_t destroy for StorebagSectionScript()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionScript(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionScript(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionScript(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScript()
{
  return &type metadata for StorebagSectionScript;
}

uint64_t getEnumTagSinglePayload for StorebagSectionScript.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionScript.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003C430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScript.CodingKeys()
{
  return &type metadata for StorebagSectionScript.CodingKeys;
}

uint64_t destroy for StorebagSectionScriptRequiredLibraries()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StorebagSectionScriptRequiredLibraries(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StorebagSectionScriptRequiredLibraries(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for StorebagSectionScriptRequiredLibraries(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionScriptRequiredLibraries(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScriptRequiredLibraries()
{
  return &type metadata for StorebagSectionScriptRequiredLibraries;
}

uint64_t getEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionScriptRequiredLibraries.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003C8F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionScriptRequiredLibraries.CodingKeys()
{
  return &type metadata for StorebagSectionScriptRequiredLibraries.CodingKeys;
}

unint64_t sub_10003C928()
{
  unint64_t result = qword_1000AF1D8;
  if (!qword_1000AF1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1D8);
  }
  return result;
}

unint64_t sub_10003C97C()
{
  unint64_t result = qword_1000AF1E0;
  if (!qword_1000AF1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1E0);
  }
  return result;
}

unint64_t sub_10003C9D0()
{
  unint64_t result = qword_1000AF1F0;
  if (!qword_1000AF1F0)
  {
    sub_10000A540(&qword_1000AEC10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF1F0);
  }
  return result;
}

unint64_t sub_10003CA3C()
{
  unint64_t result = qword_1000AF208;
  if (!qword_1000AF208)
  {
    sub_10000A540(&qword_1000AF200);
    sub_10003CAB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF208);
  }
  return result;
}

unint64_t sub_10003CAB0()
{
  unint64_t result = qword_1000AF210;
  if (!qword_1000AF210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF210);
  }
  return result;
}

uint64_t sub_10003CB04(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003CB78(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003CBF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v20 = type metadata accessor for StorebagSectionMaybeShared();
  uint64_t v4 = *(void *)(v20 - 8);
  uint64_t v5 = __chkstk_darwin(v20);
  BOOL v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v16 = (uint64_t *)((char *)&v15 - v8);
  sub_10000A784(a1, a1[3]);
  sub_10008C940();
  if (v2)
  {
    swift_errorRelease();
    uint64_t v18 = 0;
    memset(v17, 0, sizeof(v17));
    sub_10003CE58((uint64_t)v17);
    sub_1000181B0((uint64_t)a1, (uint64_t)v19);
    sub_10008C290();
    uint64_t v10 = v20;
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(void (**)(uint64_t *, char *, uint64_t))(v4 + 32);
    uint64_t v12 = v16;
    v11(v16, v7, v10);
  }
  else
  {
    sub_10003CEB8(v17, (uint64_t)v19);
    sub_10000A784(v19, v19[3]);
    uint64_t v9 = sub_10008C7E0();
    uint64_t v12 = v16;
    uint64_t *v16 = v9;
    v12[1] = v13;
    uint64_t v10 = v20;
    swift_storeEnumTagMultiPayload();
    sub_10000CCE8((uint64_t)v19);
    uint64_t v11 = *(void (**)(uint64_t *, char *, uint64_t))(v4 + 32);
  }
  v11(v15, (char *)v12, v10);
  return sub_10000CCE8((uint64_t)a1);
}

uint64_t type metadata accessor for StorebagSectionMaybeShared()
{
  return sub_10003FBE8();
}

uint64_t sub_10003CE58(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AF218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003CEB8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10003CED0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003CBF4(a1, a2);
}

uint64_t sub_10003CEF0(unsigned __int8 *a1, char *a2)
{
  return sub_10003CEFC(*a1, *a2);
}

uint64_t sub_10003CEFC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1937335659;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1937335659;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7955819;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x7365756C6176;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x65756C6176;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6E6F69746361;
      break;
    case 5:
      uint64_t v5 = 0x6F697469646E6F63;
      unint64_t v3 = 0xE90000000000006ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7955819) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x7365756C6176) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x65756C6176) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6E6F69746361;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE90000000000006ELL;
      if (v5 != 0x6F697469646E6F63) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_10008C7D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Swift::Int sub_10003D0D8()
{
  return sub_10003D0E0();
}

Swift::Int sub_10003D0E0()
{
  return sub_10008C920();
}

uint64_t sub_10003D1DC()
{
  sub_10008C050();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10003D2C0()
{
  return sub_10003D2C8();
}

Swift::Int sub_10003D2C8()
{
  return sub_10008C920();
}

uint64_t sub_10003D3C0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10003E214(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_10003D3F0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1937335659;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7955819;
      goto LABEL_3;
    case 2:
      *a1 = 0x7365756C6176;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x65756C6176;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x6E6F69746361;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x6F697469646E6F63;
      a1[1] = 0xE90000000000006ELL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_10003D4B4()
{
  uint64_t result = 1937335659;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7955819;
      break;
    case 2:
      uint64_t result = 0x7365756C6176;
      break;
    case 3:
      uint64_t result = 0x65756C6176;
      break;
    case 4:
      uint64_t result = 0x6E6F69746361;
      break;
    case 5:
      uint64_t result = 0x6F697469646E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10003D564@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003E214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10003D58C(uint64_t a1)
{
  unint64_t v2 = sub_10003F9B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003D5C8(uint64_t a1)
{
  unint64_t v2 = sub_10003F9B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10003D604(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_10002863C(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

__n128 sub_10003D6F0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10003D8AC(a1, v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_10003D744()
{
  uint64_t result = 0x6E6F69746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1937335659;
      break;
    case 2:
      uint64_t result = 0x7365756C6176;
      break;
    case 3:
      uint64_t result = 0x6F697469646E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10003D7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10003FE24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10003D7EC(uint64_t a1)
{
  unint64_t v2 = sub_10003FA04();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10003D828(uint64_t a1)
{
  unint64_t v2 = sub_10003FA04();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10003D864@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10003DE9C(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10003D8AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_10000A390(&qword_1000AF260);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  BOOL v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A784(a1, a1[3]);
  sub_10003F9B0();
  sub_10008C950();
  if (v2) {
    return sub_10000CCE8((uint64_t)a1);
  }
  char v42 = a2;
  uint64_t v50 = _swiftEmptyArrayStorage;
  sub_10000A390(&qword_1000AEC10);
  LOBYTE(v49) = 0;
  sub_10003C9D0();
  sub_10008C6E0();
  if (v43) {
    sub_10003D604(v43);
  }
  LOBYTE(v49) = 1;
  sub_10008C730();
  sub_10003D604(v43);
  LOBYTE(v43) = 1;
  uint64_t v9 = sub_10008C710();
  uint64_t v40 = v10;
  uint64_t v11 = v50;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v11 = sub_10002863C(0, v11[2] + 1, 1, v11);
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  unint64_t v15 = v14 + 1;
  if (v14 >= v13 >> 1)
  {
    unint64_t v39 = v14 + 1;
    uint64_t v37 = sub_10002863C((void *)(v13 > 1), v14 + 1, 1, v11);
    unint64_t v15 = v39;
    uint64_t v11 = v37;
  }
  v11[2] = v15;
  uint64_t v16 = &v11[2 * v14];
  uint64_t v17 = v40;
  v16[4] = v41;
  v16[5] = v17;
  uint64_t v50 = v11;
  uint64_t v49 = _swiftEmptyArrayStorage;
  char v48 = 2;
  sub_10008C6E0();
  if (v43) {
    sub_10003D604(v43);
  }
  char v48 = 3;
  sub_10008C730();
  sub_10003D604(v43);
  LOBYTE(v43) = 3;
  uint64_t v19 = sub_10008C710();
  uint64_t v21 = v20;
  uint64_t v41 = v19;
  uint64_t v22 = v49;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v22 = sub_10002863C(0, v22[2] + 1, 1, v22);
  }
  unint64_t v24 = v22[2];
  unint64_t v23 = v22[3];
  if (v24 >= v23 >> 1) {
    uint64_t v22 = sub_10002863C((void *)(v23 > 1), v24 + 1, 1, v22);
  }
  v22[2] = v24 + 1;
  uint64_t v25 = &v22[2 * v24];
  v25[4] = v41;
  v25[5] = v21;
  uint64_t v49 = v22;
  uint64_t v26 = v50;
  LOBYTE(v43) = 4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_10008C710();
  uint64_t v29 = v28;
  uint64_t v40 = v27;
  char v48 = 5;
  sub_10003FACC();
  swift_bridgeObjectRetain();
  uint64_t v41 = v29;
  sub_10008C6E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v30 = v43;
  uint64_t v31 = v44;
  uint64_t v32 = v45;
  uint64_t v33 = v46;
  unint64_t v39 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v41;
  swift_bridgeObjectRetain();
  sub_10003FB20((uint64_t)v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000CCE8((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v35 = v39;
  uint64_t result = sub_10003FB84((uint64_t)v30, v31);
  uint64_t v36 = v42;
  *char v42 = v26;
  v36[1] = v22;
  v36[2] = v40;
  v36[3] = v34;
  v36[4] = v30;
  v36[5] = v31;
  v36[6] = v32;
  v36[7] = v33;
  v36[8] = v35;
  return result;
}

uint64_t sub_10003DE9C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000A390(&qword_1000AF240);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  BOOL v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A784(a1, a1[3]);
  sub_10003FA04();
  sub_10008C950();
  if (v2) {
    return sub_10000CCE8((uint64_t)a1);
  }
  LOBYTE(v21) = 0;
  uint64_t v9 = sub_10008C710();
  uint64_t v11 = v10;
  uint64_t v18 = v9;
  uint64_t v19 = a2;
  sub_10000A390(&qword_1000AEC10);
  char v20 = 1;
  sub_10003C9D0();
  swift_bridgeObjectRetain();
  sub_10008C6E0();
  char v20 = 2;
  uint64_t v17 = v21;
  swift_bridgeObjectRetain();
  sub_10008C6E0();
  uint64_t v12 = v21;
  sub_10000A390(&qword_1000AF248);
  char v20 = 3;
  sub_10003FA58();
  swift_bridgeObjectRetain();
  sub_10008C6E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v21;
  swift_bridgeObjectRetain();
  sub_10000CCE8((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v17;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = v19;
  *uint64_t v19 = v18;
  v16[1] = v11;
  v16[2] = v14;
  v16[3] = v12;
  v16[4] = v13;
  return result;
}

uint64_t sub_10003E214(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000A7110;
  v6._object = a2;
  unint64_t v4 = sub_10008C6B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

unint64_t sub_10003E264()
{
  unint64_t result = qword_1000AF220;
  if (!qword_1000AF220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF220);
  }
  return result;
}

unint64_t sub_10003E2BC()
{
  unint64_t result = qword_1000AF228;
  if (!qword_1000AF228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF228);
  }
  return result;
}

unint64_t sub_10003E314()
{
  unint64_t result = qword_1000AF230;
  if (!qword_1000AF230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF230);
  }
  return result;
}

uint64_t sub_10003E368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10003E370()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_10003E404(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  Swift::OpaquePointer v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *Swift::OpaquePointer v3 = *(void *)a2;
    Swift::OpaquePointer v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      uint64_t v14 = *((void *)a2 + 1);
      *Swift::OpaquePointer v3 = *(void *)a2;
      v3[1] = v14;
      *((unsigned char *)v3 + v5) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_10003E580(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_bridgeObjectRelease();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_10003E680(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_bridgeObjectRetain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_10003E7BC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      a1[v7] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_10003E9E0(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_10003EB18(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_10003ED30(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_10003EE64(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x10003F02CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_10003F054(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_10003F10C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t destroy for StorebagSectionFilter(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for StorebagSectionFilter(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    a1[4] = a2[4];
    a1[5] = v6;
    uint64_t v7 = a2[7];
    a1[6] = a2[6];
    a1[7] = v7;
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v8;
    a1[8] = a2[8];
  }
  return a1;
}

void *assignWithCopy for StorebagSectionFilter(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 4;
  uint64_t v5 = a2 + 4;
  uint64_t v6 = a2[5];
  if (a1[5])
  {
    if (v6)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10003F490((uint64_t)(a1 + 4));
      uint64_t v7 = a2[8];
      long long v8 = *((_OWORD *)a2 + 3);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 3) = v8;
      a1[8] = v7;
    }
  }
  else if (v6)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
    *uint64_t v4 = v9;
    *((_OWORD *)a1 + 3) = v10;
  }
  return a1;
}

uint64_t sub_10003F490(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for StorebagSectionFilter(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionFilter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  if (!v5)
  {
    sub_10003F490(a1 + 32);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    return a1;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionFilter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionFilter()
{
  return &type metadata for StorebagSectionFilter;
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionFilter.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003F720);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionFilter.CodingKeys()
{
  return &type metadata for StorebagSectionFilter.CodingKeys;
}

uint64_t destroy for StorebagSectionCondition()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StorebagSectionCondition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StorebagSectionCondition(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for StorebagSectionCondition(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StorebagSectionCondition(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionCondition(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionCondition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionCondition()
{
  return &type metadata for StorebagSectionCondition;
}

unint64_t sub_10003F9B0()
{
  unint64_t result = qword_1000AF238;
  if (!qword_1000AF238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF238);
  }
  return result;
}

unint64_t sub_10003FA04()
{
  unint64_t result = qword_1000B3FB0[0];
  if (!qword_1000B3FB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B3FB0);
  }
  return result;
}

unint64_t sub_10003FA58()
{
  unint64_t result = qword_1000AF250;
  if (!qword_1000AF250)
  {
    sub_10000A540(&qword_1000AF248);
    sub_10003FACC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF250);
  }
  return result;
}

unint64_t sub_10003FACC()
{
  unint64_t result = qword_1000AF258;
  if (!qword_1000AF258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF258);
  }
  return result;
}

uint64_t sub_10003FB20(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10003FB84(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10003FBE8()
{
  return swift_getGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionCondition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003FCE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionCondition.CodingKeys()
{
  return &type metadata for StorebagSectionCondition.CodingKeys;
}

unint64_t sub_10003FD20()
{
  unint64_t result = qword_1000B40C0[0];
  if (!qword_1000B40C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B40C0);
  }
  return result;
}

unint64_t sub_10003FD78()
{
  unint64_t result = qword_1000B41D0;
  if (!qword_1000B41D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B41D0);
  }
  return result;
}

unint64_t sub_10003FDD0()
{
  unint64_t result = qword_1000B41D8[0];
  if (!qword_1000B41D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B41D8);
  }
  return result;
}

uint64_t sub_10003FE24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_10008C7D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937335659 && a2 == 0xE400000000000000 || (sub_10008C7D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000 || (sub_10008C7D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F697469646E6F63 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_10008C7D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unsigned char *sub_10003FFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = a3[2];
  uint64_t v9 = a3[3];
  char v10 = *((unsigned char *)a3 + 32);
  char v11 = *((unsigned char *)a3 + 33);
  uint64_t v13 = a3[5];
  uint64_t v12 = a3[6];
  unsigned int v14 = sub_100048E38();
  unint64_t result = (unsigned char *)swift_beginAccess();
  uint64_t v16 = 0;
  if (*v14 == 1)
  {
    unint64_t result = sub_100049198();
    uint64_t v16 = 5;
    if (!*result) {
      uint64_t v16 = 1;
    }
  }
  *(void *)a5 = v16;
  *(void *)(a5 + 8) = v6;
  *(void *)(a5 + 16) = v7;
  *(void *)(a5 + 24) = v8;
  *(void *)(a5 + 32) = v9;
  *(unsigned char *)(a5 + 40) = v10 & 1;
  *(unsigned char *)(a5 + 41) = v11 & 1;
  *(void *)(a5 + 48) = v13;
  *(void *)(a5 + 56) = v12;
  *(unsigned char *)(a5 + 64) = a4 & 1;
  *(void *)(a5 + 72) = a1;
  *(void *)(a5 + 80) = a2;
  return result;
}

unint64_t sub_1000400A8()
{
  uint64_t v1 = type metadata accessor for ServiceEventValue();
  uint64_t v2 = __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)((char *)&v23 - v5);
  sub_10000A390(&qword_1000AF268);
  uint64_t v7 = (int *)(sub_10000A390(&qword_1000AF160) - 8);
  uint64_t v8 = *(void *)(*(void *)v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10008FA10;
  char v11 = (void *)(v10 + v9);
  uint64_t v12 = v7[14];
  void *v11 = 0xD00000000000001BLL;
  v11[1] = 0x8000000100093470;
  long long v13 = *(_OWORD *)(v0 + 24);
  long long v25 = *(_OWORD *)(v0 + 8);
  long long v26 = v13;
  long long v27 = *(_OWORD *)(v0 + 40);
  uint64_t v28 = *(void *)(v0 + 56);
  long long v30 = v13;
  *(_OWORD *)((char *)v11 + v12) = v13;
  swift_storeEnumTagMultiPayload();
  unsigned int v14 = (void *)((char *)v11 + v8);
  uint64_t v15 = (void *)((char *)v11 + v8 + v7[14]);
  *unsigned int v14 = 0xD00000000000001FLL;
  v14[1] = 0x8000000100093490;
  *uint64_t v15 = *(void *)v0;
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (void *)((char *)v11 + 2 * v8);
  int v17 = (_OWORD *)((char *)v16 + v7[14]);
  void *v16 = 0xD000000000000017;
  v16[1] = 0x80000001000934B0;
  long long v29 = v25;
  *int v17 = v25;
  swift_storeEnumTagMultiPayload();
  sub_1000298C8((uint64_t)&v30);
  sub_1000298C8((uint64_t)&v29);
  unint64_t v18 = sub_1000352E4(v10);
  if (*(unsigned char *)(v0 + 64))
  {
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 80);
    void *v6 = v19;
    v6[1] = v20;
    swift_storeEnumTagMultiPayload();
    sub_100017B94((uint64_t)v6, (uint64_t)v4);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v18;
    sub_100037E70((uint64_t)v4, 0xD000000000000010, 0x80000001000934D0, isUniquelyReferenced_nonNull_native);
    unint64_t v18 = v24;
    swift_bridgeObjectRelease();
  }
  return v18;
}

void sub_10004035C()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (!v0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v1 = v0;
  id v2 = (id)MobileGestalt_copy_deviceName_obj();
  if (!v2)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_10008BFB0();
  uint64_t v6 = v5;

  id v7 = (id)MobileGestalt_copy_marketingProductName_obj();
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_10008BFB0();
  uint64_t v11 = v10;

  id v12 = (id)MobileGestalt_copy_productType_obj();
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  long long v13 = v12;
  uint64_t v14 = sub_10008BFB0();
  uint64_t v16 = v15;

  id v17 = (id)MobileGestalt_copy_productVersion_obj();
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v18 = v17;
  uint64_t v40 = sub_10008BFB0();
  uint64_t v20 = v19;

  id v21 = (id)MobileGestalt_copy_buildVersion_obj();
  if (!v21)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v22 = v21;
  uint64_t v36 = sub_10008BFB0();
  uint64_t v37 = v23;

  unint64_t v24 = sub_100048E38();
  swift_beginAccess();
  uint64_t v38 = v20;
  uint64_t v39 = v16;
  uint64_t v25 = v14;
  uint64_t v26 = v11;
  if (*v24 != 1)
  {
    uint64_t v29 = v4;
    uint64_t v30 = 0;
    unint64_t v32 = 0xE000000000000000;
    goto LABEL_11;
  }
  id v27 = (id)MobileGestalt_copy_serialNumber_obj();
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = v4;
    uint64_t v30 = sub_10008BFB0();
    unint64_t v32 = v31;

LABEL_11:
    uint64_t v33 = _s21CloudTelemetryService21AllEventFieldProviderV17getProjectVersionSSyFZ_0();
    uint64_t v35 = v34;

    qword_1000B4268 = v29;
    qword_1000B4270 = v6;
    qword_1000B4278 = v9;
    qword_1000B4280 = v26;
    qword_1000B4288 = v25;
    qword_1000B4290 = v39;
    qword_1000B4298 = v40;
    qword_1000B42A0 = v38;
    qword_1000B42A8 = v36;
    qword_1000B42B0 = v37;
    qword_1000B42B8 = v33;
    qword_1000B42C0 = v35;
    qword_1000B42C8 = v30;
    qword_1000B42D0 = v32;
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_100040590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  uint64_t v7 = sub_10008BBB0();
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  uint64_t v8 = sub_10008BCC0();
  v6[14] = v8;
  v6[15] = *(void *)(v8 - 8);
  v6[16] = swift_task_alloc();
  return _swift_task_switch(sub_1000406B4, 0);
}

uint64_t sub_1000406B4()
{
  uint64_t v1 = *(uint64_t **)(v0 + 48);
  uint64_t v21 = v1[1];
  uint64_t v22 = *v1;
  uint64_t v19 = v1[3];
  uint64_t v20 = v1[2];
  *(unsigned char *)(v0 + 136) = *((unsigned char *)v1 + 32);
  *(unsigned char *)(v0 + 144) = *((unsigned char *)v1 + 33);
  uint64_t v17 = v1[6];
  uint64_t v18 = v1[5];
  id v2 = sub_100048E38();
  swift_beginAccess();
  uint64_t v3 = 0;
  if (*v2 == 1)
  {
    if (*sub_100049198()) {
      uint64_t v3 = 5;
    }
    else {
      uint64_t v3 = 1;
    }
  }
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v9 = *(void *)(v0 + 96);
  long long v15 = *(_OWORD *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 64);
  uint64_t v14 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 40);
  sub_10008BCB0();
  sub_10008BBA0();
  uint64_t v11 = sub_10008BCA0();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  LOBYTE(v6) = *(unsigned char *)(v0 + 136);
  LOBYTE(v8) = *(unsigned char *)(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v10 = v3;
  *(void *)(v10 + 8) = v11;
  *(_OWORD *)(v10 + 16) = v15;
  *(void *)(v10 + 32) = v14;
  *(void *)(v10 + 40) = v16;
  *(void *)(v10 + 48) = v22;
  *(void *)(v10 + 56) = v21;
  *(void *)(v10 + 64) = v20;
  *(void *)(v10 + 72) = v19;
  *(unsigned char *)(v10 + 80) = v6;
  *(unsigned char *)(v10 + 81) = v8;
  *(void *)(v10 + 88) = v18;
  *(void *)(v10 + 96) = v17;
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

unint64_t sub_10004087C()
{
  uint64_t v1 = type metadata accessor for ServiceEventValue();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v48 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unint64_t v47 = (void **)((char *)&v47 - v4);
  sub_10000A390(&qword_1000AF268);
  uint64_t v5 = sub_10000A390(&qword_1000AF160);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 72);
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10008FA20;
  uint64_t v9 = (void *)(v8 + v7);
  uint64_t v10 = (_OWORD *)((char *)v9 + *(int *)(v5 + 48));
  void *v9 = 0x7265646E65735FLL;
  v9[1] = 0xE700000000000000;
  long long v11 = *(_OWORD *)(v0 + 64);
  long long v52 = *(_OWORD *)(v0 + 48);
  long long v53 = v11;
  long long v54 = *(_OWORD *)(v0 + 80);
  uint64_t v55 = *(void *)(v0 + 96);
  long long v57 = v52;
  *uint64_t v10 = v52;
  swift_storeEnumTagMultiPayload();
  id v12 = (void *)((char *)v9 + v6);
  long long v13 = (_OWORD *)((char *)v9 + v6 + *(int *)(v5 + 48));
  *id v12 = 0x7954746E6576655FLL;
  v12[1] = 0xEA00000000006570;
  long long v56 = v53;
  _OWORD *v13 = v53;
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (void *)((char *)v9 + 2 * v6);
  long long v15 = (_OWORD *)((char *)v14 + *(int *)(v5 + 48));
  *uint64_t v14 = 0x6E6F69737365735FLL;
  v14[1] = 0xEA00000000004449;
  long long v51 = *(_OWORD *)(v0 + 16);
  *long long v15 = v51;
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (void *)((char *)v9 + 3 * v6);
  uint64_t v17 = (void *)((char *)v16 + *(int *)(v5 + 48));
  void *v16 = 0x616E7265746E695FLL;
  v16[1] = 0xE90000000000006CLL;
  *uint64_t v17 = *(void *)v0;
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = (void *)((char *)v9 + 4 * v6);
  uint64_t v19 = (void *)((char *)v18 + *(int *)(v5 + 48));
  *uint64_t v18 = 0x6E6F7A656D69745FLL;
  v18[1] = 0xEF74657366664F65;
  *uint64_t v19 = *(void *)(v0 + 8);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (void *)((char *)v9 + 5 * v6);
  uint64_t v21 = (_OWORD *)((char *)v20 + *(int *)(v5 + 48));
  void *v20 = 0x6449746E65696C63;
  v20[1] = 0xE800000000000000;
  long long v50 = *(_OWORD *)(v0 + 32);
  _OWORD *v21 = v50;
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (char *)v9 + 6 * v6;
  uint64_t v23 = &v22[*(int *)(v5 + 48)];
  strcpy(v22, "_productFamily");
  v22[15] = -18;
  sub_1000298C8((uint64_t)&v57);
  sub_1000298C8((uint64_t)&v56);
  sub_1000298C8((uint64_t)&v51);
  sub_1000298C8((uint64_t)&v50);
  if (qword_1000B4260 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1000B4270;
  *(void *)uint64_t v23 = qword_1000B4268;
  *((void *)v23 + 1) = v24;
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (void *)((char *)v9 + 7 * v6);
  uint64_t v26 = (void *)((char *)v25 + *(int *)(v5 + 48));
  *uint64_t v25 = 0x656D614E736F5FLL;
  v25[1] = 0xE700000000000000;
  uint64_t v27 = qword_1000B4280;
  *uint64_t v26 = qword_1000B4278;
  v26[1] = v27;
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = (void *)((char *)&v9[v6] + *(int *)(v5 + 48));
  strcpy((char *)&v9[v6], "_productModel");
  HIWORD(v9[v6 + 1]) = -4864;
  uint64_t v29 = qword_1000B4290;
  *uint64_t v28 = qword_1000B4288;
  v28[1] = v29;
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (void *)((char *)v9 + 9 * v6);
  unint64_t v31 = (void *)((char *)v30 + *(int *)(v5 + 48));
  *uint64_t v30 = 0x6973726556736F5FLL;
  v30[1] = 0xEA00000000006E6FLL;
  uint64_t v32 = qword_1000B42A0;
  *unint64_t v31 = qword_1000B4298;
  v31[1] = v32;
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = (void *)((char *)v9 + 10 * v6);
  uint64_t v34 = (void *)((char *)v33 + *(int *)(v5 + 48));
  *uint64_t v33 = 0x646C6975625FLL;
  v33[1] = 0xE600000000000000;
  uint64_t v35 = qword_1000B42B0;
  *uint64_t v34 = qword_1000B42A8;
  v34[1] = v35;
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (void *)((char *)v9 + 11 * v6);
  uint64_t v37 = (void *)((char *)v36 + *(int *)(v5 + 48));
  void *v36 = 0x5674726F7065725FLL;
  v36[1] = 0xEB00000000737265;
  uint64_t v38 = qword_1000B42C0;
  void *v37 = qword_1000B42B8;
  v37[1] = v38;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v39 = sub_1000352E4(v8);
  uint64_t v40 = sub_100048E38();
  swift_beginAccess();
  if (*v40 == 1)
  {
    uint64_t v41 = qword_1000B42D0;
    char v42 = v47;
    *unint64_t v47 = qword_1000B42C8;
    v42[1] = v41;
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = (uint64_t)v42;
    uint64_t v44 = v48;
    sub_100017B94(v43, v48);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v49 = v39;
    sub_100037E70(v44, 0x754E6C6169726553, 0xE90000000000006DLL, isUniquelyReferenced_nonNull_native);
    unint64_t v39 = v49;
    swift_bridgeObjectRelease();
  }
  return v39;
}

unint64_t sub_100040E74()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_10000A390(&qword_1000AF268);
  uint64_t v3 = (int *)(sub_10000A390(&qword_1000AF160) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10008DC30;
  uint64_t v6 = (void *)(v5 + v4);
  unint64_t v7 = (void *)(v5 + v4 + v3[14]);
  void *v6 = 0x656C61636F4CLL;
  v6[1] = 0xE600000000000000;
  void *v7 = v2;
  v7[1] = v1;
  type metadata accessor for ServiceEventValue();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_1000352E4(v5);
}

unint64_t sub_100040F88(char a1, uint64_t a2, uint64_t a3)
{
  sub_10000A390(&qword_1000AF268);
  uint64_t v6 = (int *)(sub_10000A390(&qword_1000AF160) - 8);
  uint64_t v7 = *(void *)(*(void *)v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10008DC40;
  uint64_t v10 = (void *)(v9 + v8);
  long long v11 = (void *)(v9 + v8 + v6[14]);
  *uint64_t v10 = 0x67616265726F7453;
  v10[1] = 0xEF6E6F6973726556;
  void *v11 = a2;
  v11[1] = a3;
  type metadata accessor for ServiceEventValue();
  swift_storeEnumTagMultiPayload();
  id v12 = (void *)((char *)v10 + v7);
  long long v13 = (char *)v10 + v7 + v6[14];
  *id v12 = 0xD000000000000013;
  v12[1] = 0x80000001000934F0;
  unsigned char *v13 = a1;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return sub_1000352E4(v9);
}

unint64_t sub_1000410F8()
{
  return sub_100040F88(*(unsigned char *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t _s21CloudTelemetryService21AllEventFieldProviderV17getProjectVersionSSyFZ_0()
{
  uint64_t v0 = 960051513;
  id v1 = [self mainBundle];
  id v2 = [v1 infoDictionary];

  if (!v2) {
    return v0;
  }
  uint64_t v3 = sub_10008BF00();

  if (!*(void *)(v3 + 16) || (unint64_t v4 = sub_100011F50(0x656C646E75424643, 0xEF6E6F6973726556), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10000CD38(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    sub_10000CC24((uint64_t)&v8, &qword_1000AE638);
    return v0;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  return v0;
}

uint64_t destroy for HTTPHeaderFieldProvider()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HTTPHeaderFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HTTPHeaderFieldProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HTTPHeaderFieldProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HTTPHeaderFieldProvider()
{
  return &type metadata for HTTPHeaderFieldProvider;
}

uint64_t destroy for AllEventFieldProvider()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AllEventFieldProvider(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for AllEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AllEventFieldProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AllEventFieldProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AllEventFieldProvider()
{
  return &type metadata for AllEventFieldProvider;
}

ValueMetadata *type metadata accessor for StartEventFieldProvider()
{
  return &type metadata for StartEventFieldProvider;
}

uint64_t sub_100041874(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EndEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EndEventFieldProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EndEventFieldProvider()
{
  return &type metadata for EndEventFieldProvider;
}

uint64_t type metadata accessor for CachedStorebag(uint64_t a1)
{
  return sub_100046C34(a1, (uint64_t *)&unk_1000B4470);
}

unint64_t sub_100041964()
{
  uint64_t v1 = sub_10008B720();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CacheError(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100047840(v0, (uint64_t)v7, type metadata accessor for CacheError);
  uint64_t v8 = 0x727265206B636F6DLL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_10008C540(42);
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000028;
      uint64_t v10 = "unable to access storebag cache (PERM): ";
      goto LABEL_4;
    case 2u:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_10008C540(51);
      v15._countAndFlagsBits = 0xD000000000000031;
      v15._object = (void *)0x8000000100093540;
      sub_10008C090(v15);
      goto LABEL_6;
    case 3u:
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_10008C540(45);
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD00000000000002BLL;
      unint64_t v14 = 0x8000000100093510;
      swift_getErrorValue();
      v17._countAndFlagsBits = sub_10008C890();
      sub_10008C090(v17);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return v13;
    case 4u:
      return v8;
    default:
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      sub_10008C540(40);
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000026;
      uint64_t v10 = "unable to write storebag cache (OOS): ";
LABEL_4:
      unint64_t v13 = v9;
      unint64_t v14 = (unint64_t)(v10 - 32) | 0x8000000000000000;
LABEL_6:
      sub_100041EC8(&qword_1000AE1B0, (void (*)(uint64_t))&type metadata accessor for CocoaError);
      v16._countAndFlagsBits = sub_10008C890();
      sub_10008C090(v16);
      swift_bridgeObjectRelease();
      uint64_t v8 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      return v8;
  }
}

uint64_t type metadata accessor for CacheError(uint64_t a1)
{
  return sub_100046C34(a1, (uint64_t *)&unk_1000B4480);
}

uint64_t sub_100041D04()
{
  uint64_t v0 = sub_10008BD50();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100048DAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = sub_10008BD30();
  os_log_type_t v6 = sub_10008C300();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "mock error", v7, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for CacheError(0);
  sub_100041EC8(&qword_1000AF288, (void (*)(uint64_t))type metadata accessor for CacheError);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_100041EC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100041F10(uint64_t a1)
{
  return sub_100041F7C(a1, "unable to write storebag cache (OOS): %{public}s", 0);
}

uint64_t sub_100041F34(uint64_t a1)
{
  return sub_100041F7C(a1, "unable to access storebag cache (PERM): %{public}s", 1);
}

uint64_t sub_100041F58(uint64_t a1)
{
  return sub_100041F7C(a1, "unable to access storebag cache (WRITE-UNKNOWN): %{public}s", 2);
}

uint64_t sub_100041F7C(uint64_t a1, const char *a2, int a3)
{
  int v30 = a3;
  uint64_t v26 = a2;
  uint64_t v4 = sub_10008B720();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10008BD50();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100048DAC();
  unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v27 = v8;
  v13(v11, v12, v8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v29 = a1;
  uint64_t v14 = v4;
  v28(v7, a1, v4);
  Swift::String v15 = sub_10008BD30();
  os_log_type_t v16 = sub_10008C300();
  if (os_log_type_enabled(v15, v16))
  {
    Swift::String v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v32 = v25;
    uint64_t v23 = v17;
    os_log_t v24 = v15;
    *(_DWORD *)Swift::String v17 = 136446210;
    uint64_t v22 = v17 + 4;
    sub_100041EC8(&qword_1000AE1B0, (void (*)(uint64_t))&type metadata accessor for CocoaError);
    uint64_t v18 = sub_10008C890();
    uint64_t v31 = sub_100009D00(v18, v19, &v32);
    sub_10008C440();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
    Swift::String v15 = v24;
    _os_log_impl((void *)&_mh_execute_header, v24, v16, v26, v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v27);
  type metadata accessor for CacheError(0);
  sub_100041EC8(&qword_1000AF288, (void (*)(uint64_t))type metadata accessor for CacheError);
  swift_allocError();
  v28(v20, v29, v14);
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_100042328(uint64_t a1)
{
  uint64_t v2 = sub_10008BD50();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100048DAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = sub_10008BD30();
  os_log_type_t v8 = sub_10008C300();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v2;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    v15[1] = v10 + 4;
    swift_getErrorValue();
    uint64_t v11 = sub_10008C890();
    uint64_t v17 = sub_100009D00(v11, v12, &v18);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "unable to access storebag cache (UNKNOWN): %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for CacheError(0);
  sub_100041EC8(&qword_1000AF288, (void (*)(uint64_t))type metadata accessor for CacheError);
  swift_allocError();
  void *v13 = a1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  return swift_willThrow();
}

uint64_t sub_1000425FC()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6DA8);
  sub_10000A358(v0, (uint64_t)qword_1000B6DA8);
  return sub_10008BD40();
}

uint64_t sub_100042680()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000426B8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100042700())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_100042754()
{
  return swift_retain();
}

uint64_t sub_10004278C(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_release();
}

uint64_t (*sub_1000427D4())()
{
  return j__swift_endAccess;
}

uint64_t sub_100042828()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100042860(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return swift_unknownObjectRelease();
}

unint64_t sub_1000428A8()
{
  return sub_1000428B4((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t sub_1000428B4(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AF5A0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A390(&qword_1000AF578);
  uint64_t v6 = sub_10008C680();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100048C14(v12, (uint64_t)v5);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100011F50(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *unint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for CachedStorebag(0);
    unint64_t result = sub_1000478A8(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100042A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_100042B04(a1, a2, a3, a4);
  return v8;
}

void *sub_100042B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_10008BA60();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v22 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - v13;
  swift_defaultActor_initialize();
  v5[15] = 0;
  v5[16] = 0;
  v5[14] = a1;
  swift_beginAccess();
  v5[15] = a2;
  uint64_t v15 = a4;
  swift_retain();
  swift_release();
  swift_beginAccess();
  v5[16] = a3;
  uint64_t v25 = a3;
  uint64_t v16 = v23;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v17 = v24;
  sub_10004A270(a4, (void *)0x67616265726F7473, (void *)0xEA00000000002F73, (uint64_t)v14);
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    type metadata accessor for StorebagCache(0);
    swift_defaultActor_destroy();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a4, v10);
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))((uint64_t)v5 + OBJC_IVAR____TtC21CloudTelemetryService13StorebagCache_storebagCacheURL, v14, v10);
    type metadata accessor for StorebagCloudKitSource();
    uint64_t v18 = (uint64_t)v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v22, v15, v10);
    uint64_t v20 = sub_10007B7AC(v18);
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v10);
    *(void *)((char *)v5 + OBJC_IVAR____TtC21CloudTelemetryService13StorebagCache_storebagCloudKitSource) = v20;
  }
  return v5;
}

uint64_t sub_100042E18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v43 = a3;
  uint64_t v7 = sub_10008BBB0();
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A390(&qword_1000AF290);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v39 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = type metadata accessor for CachedStorebag(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v42 = (uint64_t)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)v3 + 128);
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = v18(v19);
  if (*(void *)(v20 + 16))
  {
    unint64_t v21 = sub_100011F50(a1, a2);
    uint64_t v23 = v16;
    if (v22)
    {
      sub_100047840(*(void *)(v20 + 56) + *(void *)(v16 + 72) * v21, (uint64_t)v14, type metadata accessor for CachedStorebag);
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v24(v14, 0, 1, v15);
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v24(v14, 1, 1, v15);
    }
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v25(v14, 1, 1, v15);
    uint64_t v23 = v16;
    uint64_t v24 = v25;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v15) == 1)
  {
    sub_10000CC24((uint64_t)v14, &qword_1000AF290);
LABEL_16:
    uint64_t v35 = 1;
    uint64_t v34 = v43;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v34, v35, 1, v15);
  }
  uint64_t v26 = (uint64_t)v14;
  uint64_t v27 = v42;
  sub_1000478A8(v26, v42);
  sub_10008BB70();
  char v28 = sub_10008BB40();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v41);
  if (v28)
  {
    if (qword_1000B42E0 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_10008BD50();
    sub_10000A358(v29, (uint64_t)qword_1000B6DA8);
    swift_bridgeObjectRetain_n();
    int v30 = sub_10008BD30();
    os_log_type_t v31 = sub_10008C310();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v41 = a1;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v40 = swift_slowAlloc();
      v45[0] = v40;
      *(_DWORD *)uint64_t v33 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_100009D00(v41, a2, v45);
      sub_10008C440();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "removing expired storebag %{public}s from memory cache", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v41;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v36 = (void (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v4 + 144))(v45);
    uint64_t v37 = v39;
    sub_100046C6C(a1, a2, v39);
    sub_10000CC24(v37, &qword_1000AF290);
    v36(v45, 0);
    sub_10004860C(v42, type metadata accessor for CachedStorebag);
    goto LABEL_16;
  }
  uint64_t v34 = v43;
  sub_1000478A8(v27, v43);
  uint64_t v35 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v34, v35, 1, v15);
}

BOOL sub_100043388(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10008BA60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A390(&qword_1000AF290);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100042E18(a1, a2, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for CachedStorebag(0);
  BOOL v12 = 1;
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  sub_10000CC24((uint64_t)v10, &qword_1000AF290);
  if (v13 == 1)
  {
    void v15[2] = a1;
    v15[3] = a2;
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = 0x7473696C702ELL;
    v16._object = (void *)0xE600000000000000;
    sub_10008C090(v16);
    sub_10008B9E0();
    swift_bridgeObjectRelease();
    BOOL v12 = sub_10008B9F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v12;
}

uint64_t sub_10004358C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  sub_10000A390(&qword_1000AF2A0);
  v4[33] = swift_task_alloc();
  uint64_t v5 = sub_10008B910();
  v4[34] = v5;
  v4[35] = *(void *)(v5 - 8);
  v4[36] = swift_task_alloc();
  uint64_t v6 = sub_10008BBB0();
  v4[37] = v6;
  v4[38] = *(void *)(v6 - 8);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  uint64_t v7 = sub_10008BA60();
  v4[42] = v7;
  v4[43] = *(void *)(v7 - 8);
  v4[44] = swift_task_alloc();
  sub_10000A390(&qword_1000AF290);
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CachedStorebag(0);
  v4[47] = v8;
  v4[48] = *(void *)(v8 - 8);
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  return _swift_task_switch(sub_100043834, v3);
}

uint64_t sub_100043834()
{
  uint64_t v94 = v0;
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 368);
  sub_100042E18(*(void *)(v0 + 240), *(void *)(v0 + 248), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    uint64_t v6 = *(void *)(v0 + 400);
    sub_1000478A8(*(void *)(v0 + 368), v6);
    int v92 = *(_DWORD *)(v6 + 8);
    uint64_t v7 = *(void *)(v6 + 24);
    uint64_t v88 = *(void *)(v6 + 16);
    uint64_t v89 = *(void *)v6;
    uint64_t v8 = *(void *)(v6 + 32);
    swift_bridgeObjectRetain();
    uint64_t v86 = v7;
    swift_bridgeObjectRetain();
    uint64_t v85 = v8;
    swift_bridgeObjectRetain();
    sub_10004860C(v6, type metadata accessor for CachedStorebag);
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 240);
  sub_10000CC24(*(void *)(v0 + 368), &qword_1000AF290);
  v93[0] = v5;
  v93[1] = v4;
  swift_bridgeObjectRetain();
  v96._countAndFlagsBits = 0x7473696C702ELL;
  v96._object = (void *)0xE600000000000000;
  sub_10008C090(v96);
  sub_10008B9E0();
  swift_bridgeObjectRelease();
  if (sub_10008B9F0())
  {
    sub_10000A390(&qword_1000AE3C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10008DC30;
    *(void *)(inited + 32) = NSURLContentModificationDateKey;
    int v13 = NSURLContentModificationDateKey;
    sub_10000C9F4(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey();
    swift_arrayDestroy();
    sub_10008B980();
    uint64_t v18 = *(void *)(v0 + 296);
    uint64_t v17 = *(void *)(v0 + 304);
    uint64_t v20 = *(void *)(v0 + 280);
    uint64_t v19 = *(void *)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 264);
    uint64_t v21 = *(void *)(v0 + 272);
    swift_bridgeObjectRelease();
    sub_10008B8E0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v22, 1, v18);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 304) + 32))(*(void *)(v0 + 328), *(void *)(v0 + 264), *(void *)(v0 + 296));
    uint64_t v23 = sub_10008BA80();
    unint64_t v25 = v24;
    unsigned __int8 v26 = sub_10005068C();
    sub_100050E78(v23, v25, v26, v0 + 96);
    uint64_t v28 = *(void *)(v0 + 304);
    uint64_t v27 = *(void *)(v0 + 312);
    uint64_t v29 = *(void *)(v0 + 296);
    int v30 = *(_DWORD *)(v0 + 104);
    sub_10008BB80();
    sub_10008BB70();
    LOBYTE(v23) = sub_10008BB40();
    os_log_type_t v31 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    *(void *)(v0 + 424) = v31;
    *(void *)(v0 + 432) = (v28 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v31(v27, v29);
    uint64_t v84 = v31;
    if (v23)
    {
      *(void *)(v0 + 184) = *(void *)(v0 + 96);
      sub_100032D88(v0 + 184);
      *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 112);
      sub_100032D5C(v0 + 168);
      *(void *)(v0 + 200) = *(void *)(v0 + 128);
      sub_100032D88(v0 + 200);
      if (qword_1000B42E0 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_10008BD50();
      sub_10000A358(v32, (uint64_t)qword_1000B6DA8);
      swift_bridgeObjectRetain_n();
      uint64_t v33 = sub_10008BD30();
      os_log_type_t v34 = sub_10008C310();
      BOOL v35 = os_log_type_enabled(v33, v34);
      unint64_t v36 = *(void *)(v0 + 248);
      if (v35)
      {
        uint64_t v90 = *(void *)(v0 + 240);
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        v93[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 224) = sub_100009D00(v90, v36, v93);
        sub_10008C440();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "removing expired storebag %{public}s", v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v61 = [self defaultManager];
      sub_10008B9C0(v62);
      uint64_t v64 = v63;
      *(void *)(v0 + 216) = 0;
      unsigned int v65 = [v61 removeItemAtURL:v63 error:v0 + 216];

      uint64_t v66 = *(void **)(v0 + 216);
      if (v65)
      {
        uint64_t v67 = *(int **)(**(void **)(v0 + 256) + 232);
        uint64_t v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v67 + *v67);
        id v68 = v66;
        uint64_t v69 = (void *)swift_task_alloc();
        *(void *)(v0 + 440) = v69;
        *uint64_t v69 = v0;
        v69[1] = sub_100045310;
        uint64_t v70 = *(void *)(v0 + 248);
        uint64_t v71 = *(void *)(v0 + 240);
        return v91(v0 + 56, v71, v70);
      }
      uint64_t v73 = *(void *)(v0 + 344);
      uint64_t v72 = *(void *)(v0 + 352);
      uint64_t v75 = *(void *)(v0 + 328);
      uint64_t v74 = *(void *)(v0 + 336);
      uint64_t v76 = *(void *)(v0 + 320);
      uint64_t v77 = *(void *)(v0 + 296);
      id v78 = v66;
      sub_10008B960();

      swift_willThrow();
      v84(v76, v77);
      v84(v75, v77);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_5;
    }
    int v92 = v30;
    uint64_t v38 = *(void *)(v0 + 384);
    uint64_t v39 = *(void *)(v0 + 392);
    uint64_t v40 = *(void *)(v0 + 376);
    uint64_t v41 = *(void *)(v0 + 360);
    uint64_t v42 = *(void *)(v0 + 256);
    uint64_t v82 = *(void *)(v0 + 248);
    uint64_t v87 = *(void *)(v0 + 240);
    uint64_t v43 = *(void *)(v0 + 96);
    uint64_t v44 = *(void *)(v0 + 120);
    uint64_t v88 = *(void *)(v0 + 112);
    uint64_t v45 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 304) + 16))(v39 + *(int *)(v40 + 20), *(void *)(v0 + 320), *(void *)(v0 + 296));
    uint64_t v46 = *(void *)(v0 + 128);
    long long v47 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v39 + 16) = v47;
    *(void *)(v39 + 32) = v46;
    sub_100047840(v39, v41, type metadata accessor for CachedStorebag);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v40);
    uint64_t v48 = *(uint64_t (**)(uint64_t))(*(void *)v42 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v85 = v45;
    swift_bridgeObjectRetain();
    unint64_t v49 = (void (*)(uint64_t, void))v48(v0 + 136);
    sub_100045888(v41, v87, v82);
    v49(v0 + 136, 0);
    if (qword_1000B42E0 != -1) {
      swift_once();
    }
    uint64_t v86 = v44;
    uint64_t v89 = v43;
    uint64_t v50 = sub_10008BD50();
    sub_10000A358(v50, (uint64_t)qword_1000B6DA8);
    swift_bridgeObjectRetain_n();
    long long v51 = sub_10008BD30();
    os_log_type_t v52 = sub_10008C2E0();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v55 = *(void *)(v0 + 344);
    uint64_t v54 = *(void *)(v0 + 352);
    uint64_t v57 = *(void *)(v0 + 328);
    uint64_t v56 = *(void *)(v0 + 336);
    uint64_t v81 = *(void *)(v0 + 320);
    uint64_t v83 = *(void *)(v0 + 392);
    uint64_t v58 = *(void *)(v0 + 296);
    unint64_t v59 = *(void *)(v0 + 248);
    if (v53)
    {
      uint64_t v79 = *(void *)(v0 + 240);
      uint64_t v80 = *(void *)(v0 + 296);
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      v93[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_100009D00(v79, v59, v93);
      sub_10008C440();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "storing storebag %{public}s in cache", v60, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10004860C(v83, type metadata accessor for CachedStorebag);
      v84(v81, v80);
      v84(v57, v80);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_10004860C(v83, type metadata accessor for CachedStorebag);
      v84(v81, v58);
      v84(v57, v58);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    }
LABEL_4:
    uint64_t v9 = *(void *)(v0 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)uint64_t v9 = v89;
    *(_DWORD *)(v9 + 8) = v92;
    *(void *)(v9 + 16) = v88;
    *(void *)(v9 + 24) = v86;
    *(void *)(v9 + 32) = v85;
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v10();
  }
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1000445E0;
  uint64_t v15 = *(void *)(v0 + 248);
  uint64_t v16 = *(void *)(v0 + 240);
  return sub_100045A44(v16, v15);
}

uint64_t sub_1000445E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  if (v0) {
    uint64_t v4 = sub_100045600;
  }
  else {
    uint64_t v4 = sub_100044738;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_100044738()
{
  uint64_t v86 = v0;
  uint64_t v1 = *(void *)(v0 + 416);
  sub_10000A390(&qword_1000AE3C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10008DC30;
  *(void *)(inited + 32) = NSURLContentModificationDateKey;
  uint64_t v3 = NSURLContentModificationDateKey;
  sub_10000C9F4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_10008B980();
  if (v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 344) + 8))(*(void *)(v0 + 352), *(void *)(v0 + 336));
    swift_bridgeObjectRelease();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
    return v15();
  }
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v7 = *(void *)(v0 + 280);
  uint64_t v6 = *(void *)(v0 + 288);
  uint64_t v9 = *(void *)(v0 + 264);
  uint64_t v8 = *(void *)(v0 + 272);
  swift_bridgeObjectRelease();
  sub_10008B8E0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v5);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 304) + 32))(*(void *)(v0 + 328), *(void *)(v0 + 264), *(void *)(v0 + 296));
  uint64_t v11 = sub_10008BA80();
  unint64_t v13 = v12;
  unsigned __int8 v14 = sub_10005068C();
  sub_100050E78(v11, v13, v14, v0 + 96);
  uint64_t v16 = v0 + 216;
  uint64_t v18 = *(void *)(v0 + 304);
  uint64_t v17 = *(void *)(v0 + 312);
  uint64_t v19 = *(void *)(v0 + 296);
  int v20 = *(_DWORD *)(v0 + 104);
  sub_10008BB80();
  sub_10008BB70();
  char v21 = sub_10008BB40();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  *(void *)(v0 + 424) = v22;
  *(void *)(v0 + 432) = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v22(v17, v19);
  uint64_t v83 = v22;
  if ((v21 & 1) == 0)
  {
    int v82 = v20;
    uint64_t v31 = *(void *)(v0 + 384);
    uint64_t v30 = *(void *)(v0 + 392);
    uint64_t v32 = *(void *)(v0 + 376);
    uint64_t v33 = *(void *)(v0 + 360);
    uint64_t v34 = *(void *)(v0 + 256);
    uint64_t v74 = *(void *)(v0 + 248);
    uint64_t v76 = *(void *)(v0 + 240);
    uint64_t v35 = *(void *)(v0 + 96);
    uint64_t v36 = *(void *)(v0 + 120);
    uint64_t v81 = *(void *)(v0 + 112);
    uint64_t v37 = *(void *)(v0 + 128);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 304) + 16))(v30 + *(int *)(v32 + 20), *(void *)(v0 + 320), *(void *)(v0 + 296));
    uint64_t v38 = *(void *)(v0 + 128);
    long long v39 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v30 + 16) = v39;
    *(void *)(v30 + 32) = v38;
    sub_100047840(v30, v33, type metadata accessor for CachedStorebag);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v32);
    uint64_t v40 = *(uint64_t (**)(uint64_t))(*(void *)v34 + 144);
    swift_bridgeObjectRetain();
    uint64_t v78 = v35;
    swift_bridgeObjectRetain();
    uint64_t v80 = v36;
    swift_bridgeObjectRetain();
    uint64_t v79 = v37;
    swift_bridgeObjectRetain();
    uint64_t v41 = (void (*)(uint64_t, void))v40(v0 + 136);
    sub_100045888(v33, v76, v74);
    v41(v0 + 136, 0);
    if (qword_1000B42E0 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_10008BD50();
    sub_10000A358(v42, (uint64_t)qword_1000B6DA8);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = sub_10008BD30();
    os_log_type_t v44 = sub_10008C2E0();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v46 = *(void *)(v0 + 392);
    uint64_t v48 = *(void *)(v0 + 344);
    uint64_t v47 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 328);
    uint64_t v49 = *(void *)(v0 + 336);
    uint64_t v77 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 296);
    unint64_t v52 = *(void *)(v0 + 248);
    if (v45)
    {
      uint64_t v73 = *(void *)(v0 + 240);
      uint64_t v75 = *(void *)(v0 + 328);
      BOOL v53 = (uint8_t *)swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)BOOL v53 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_100009D00(v73, v52, v85);
      sub_10008C440();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "storing storebag %{public}s in cache", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10004860C(v46, type metadata accessor for CachedStorebag);
      v83(v77, v51);
      v83(v75, v51);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_10004860C(v46, type metadata accessor for CachedStorebag);
      v83(v77, v51);
      v83(v50, v51);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    }
    uint64_t v65 = *(void *)(v0 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(void *)uint64_t v65 = v78;
    *(_DWORD *)(v65 + 8) = v82;
    *(void *)(v65 + 16) = v81;
    *(void *)(v65 + 24) = v80;
    *(void *)(v65 + 32) = v79;
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_6;
  }
  *(void *)(v0 + 184) = *(void *)(v0 + 96);
  sub_100032D88(v0 + 184);
  *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 112);
  sub_100032D5C(v0 + 168);
  *(void *)(v0 + 200) = *(void *)(v0 + 128);
  sub_100032D88(v0 + 200);
  if (qword_1000B42E0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_10008BD50();
  sub_10000A358(v23, (uint64_t)qword_1000B6DA8);
  swift_bridgeObjectRetain_n();
  unint64_t v24 = sub_10008BD30();
  os_log_type_t v25 = sub_10008C310();
  BOOL v26 = os_log_type_enabled(v24, v25);
  unint64_t v27 = *(void *)(v0 + 248);
  if (v26)
  {
    uint64_t v28 = *(void *)(v0 + 240);
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    v85[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 224) = sub_100009D00(v28, v27, v85);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "removing expired storebag %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v0 + 216;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v54 = [self defaultManager];
  sub_10008B9C0(v55);
  uint64_t v57 = v56;
  *(void *)(v0 + 216) = 0;
  unsigned int v58 = [v54 removeItemAtURL:v56 error:v16];

  unint64_t v59 = *(void **)(v0 + 216);
  if (!v58)
  {
    uint64_t v66 = *(void *)(v0 + 344);
    uint64_t v67 = *(void *)(v0 + 352);
    uint64_t v69 = *(void *)(v0 + 328);
    uint64_t v68 = *(void *)(v0 + 336);
    uint64_t v70 = *(void *)(v0 + 320);
    uint64_t v71 = *(void *)(v0 + 296);
    id v72 = v59;
    sub_10008B960();

    swift_willThrow();
    v83(v70, v71);
    v83(v69, v71);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v68);
    goto LABEL_5;
  }
  uint64_t v60 = *(int **)(**(void **)(v0 + 256) + 232);
  uint64_t v84 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v60 + *v60);
  id v61 = v59;
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v62;
  *uint64_t v62 = v0;
  v62[1] = sub_100045310;
  uint64_t v63 = *(void *)(v0 + 248);
  uint64_t v64 = *(void *)(v0 + 240);
  return v84(v0 + 56, v64, v63);
}

uint64_t sub_100045310()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 448) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  if (v0) {
    uint64_t v4 = sub_100045730;
  }
  else {
    uint64_t v4 = sub_100045468;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_100045468()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 296);
  v1(*(void *)(v0 + 320), v6);
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v13 = *(void *)(v0 + 72);
  int v12 = *(_DWORD *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 232);
  long long v10 = *(_OWORD *)(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v7 = v11;
  *(_DWORD *)(v7 + 8) = v12;
  *(void *)(v7 + 16) = v13;
  *(_OWORD *)(v7 + 24) = v10;
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100045600()
{
  (*(void (**)(void, void))(v0[43] + 8))(v0[44], v0[42]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100045730()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[53];
  uint64_t v3 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v5 = v0[41];
  uint64_t v4 = v0[42];
  uint64_t v6 = v0[37];
  v1(v0[40], v6);
  v1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100045888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10000A390(&qword_1000AF290);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CachedStorebag(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10000CC24(a1, &qword_1000AF290);
    sub_100046C6C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10000CC24((uint64_t)v10, &qword_1000AF290);
  }
  else
  {
    sub_1000478A8(a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_100047644((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100045A44(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  sub_10000A390(&qword_1000AE3A0);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_100045ADC, v2);
}

uint64_t sub_100045ADC()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 152);
  uint64_t v3 = (*(void *)v1 + 152) & 0xFFFFFFFFFFFFLL | 0x6560000000000000;
  v0[8] = v2;
  v0[9] = v3;
  uint64_t v4 = v2();
  if (v4)
  {
    uint64_t v5 = v4;
    v0[10] = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    uint64_t v7 = sub_10000A390(&qword_1000B0870);
    void *v6 = v0;
    v6[1] = sub_100045DC4;
    return Task.result.getter(v0 + 2, v5, &type metadata for ()[8], v7, &protocol self-conformance witness table for Error);
  }
  else
  {
    uint64_t v9 = v0[6];
    uint64_t v8 = v0[7];
    uint64_t v11 = v0[4];
    uint64_t v10 = v0[5];
    uint64_t v12 = os_transaction_create();
    (*(void (**)(uint64_t))(*(void *)v9 + 184))(v12);
    uint64_t v13 = sub_10008C220();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
    uint64_t v14 = sub_100041EC8(&qword_1000AF588, (void (*)(uint64_t))type metadata accessor for StorebagCache);
    uint64_t v15 = (void *)swift_allocObject();
    void v15[2] = v9;
    v15[3] = v14;
    void v15[4] = v9;
    v15[5] = v11;
    v15[6] = v10;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_100008630(v8, (uint64_t)&unk_1000AF590, (uint64_t)v15);
    v0[12] = v16;
    uint64_t v17 = *(void (**)(uint64_t))(*(void *)v9 + 160);
    uint64_t v18 = swift_retain();
    v17(v18);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[13] = v19;
    uint64_t v20 = sub_10000A390(&qword_1000B0870);
    *uint64_t v19 = v0;
    v19[1] = sub_1000461C0;
    return Task.value.getter(v20, v16, &type metadata for ()[8], v20, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_100045DC4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  swift_task_dealloc();
  sub_100048C08(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
  return _swift_task_switch(sub_100045EF8, v2);
}

uint64_t sub_100045EF8()
{
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[8];
  uint64_t v2 = swift_release();
  uint64_t v3 = v1(v2);
  if (v3)
  {
    uint64_t v4 = v3;
    v0[10] = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[11] = v5;
    uint64_t v6 = sub_10000A390(&qword_1000B0870);
    void *v5 = v0;
    v5[1] = sub_100045DC4;
    return Task.result.getter(v0 + 2, v4, &type metadata for ()[8], v6, &protocol self-conformance witness table for Error);
  }
  else
  {
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    uint64_t v10 = v0[4];
    uint64_t v9 = v0[5];
    uint64_t v11 = os_transaction_create();
    (*(void (**)(uint64_t))(*(void *)v8 + 184))(v11);
    uint64_t v12 = sub_10008C220();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
    uint64_t v13 = sub_100041EC8(&qword_1000AF588, (void (*)(uint64_t))type metadata accessor for StorebagCache);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v8;
    v14[3] = v13;
    v14[4] = v8;
    v14[5] = v10;
    v14[6] = v9;
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100008630(v7, (uint64_t)&unk_1000AF590, (uint64_t)v14);
    v0[12] = v15;
    uint64_t v16 = *(void (**)(uint64_t))(*(void *)v8 + 160);
    uint64_t v17 = swift_retain();
    v16(v17);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[13] = v18;
    uint64_t v19 = sub_10000A390(&qword_1000B0870);
    *uint64_t v18 = v0;
    v18[1] = sub_1000461C0;
    return Task.value.getter(v19, v15, &type metadata for ()[8], v19, &protocol self-conformance witness table for Error);
  }
}

uint64_t sub_1000461C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v4 = sub_10004635C;
  }
  else {
    uint64_t v4 = sub_1000462EC;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_1000462EC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10004635C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000463CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  _OWORD v6[4] = a6;
  _OWORD v6[2] = a4;
  uint64_t v8 = sub_10008BA60();
  v6[5] = v8;
  v6[6] = *(void *)(v8 - 8);
  v6[7] = swift_task_alloc();
  return _swift_task_switch(sub_100046494, a4);
}

uint64_t sub_100046494()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC21CloudTelemetryService13StorebagCache_storebagCloudKitSource);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = 0x7473696C702ELL;
  v9._object = (void *)0xE600000000000000;
  sub_10008C090(v9);
  sub_10008B9E0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v1 + 136)
                                                         + **(int **)(*(void *)v1 + 136));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  void *v2 = v0;
  v2[1] = sub_100046608;
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  return v7(v5, v4, v3);
}

uint64_t sub_100046608()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 56);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v5 = *(void *)(*v1 + 40);
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 16);
  if (v0) {
    uint64_t v7 = sub_10004684C;
  }
  else {
    uint64_t v7 = sub_100046790;
  }
  return _swift_task_switch(v7, v6);
}

uint64_t sub_100046790()
{
  uint64_t v1 = *(void *)(v0 + 16);
  (*(void (**)(void))(*(void *)v1 + 160))(0);
  (*(void (**)(void))(*(void *)v1 + 184))(0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10004684C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  (*(void (**)(void))(*(void *)v1 + 160))(0);
  (*(void (**)(void))(*(void *)v1 + 184))(0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100046908(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A390(&qword_1000AF290);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000B42E0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10008BD50();
  sub_10000A358(v9, (uint64_t)qword_1000B6DA8);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_10008BD30();
  os_log_type_t v11 = sub_10008C2E0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    swift_bridgeObjectRetain();
    v15[1] = sub_100009D00(a1, a2, v16);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "evicting storebag %{public}s from cache", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = (uint64_t (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v3 + 144))(v16);
  sub_100046C6C(a1, a2, (uint64_t)v8);
  sub_10000CC24((uint64_t)v8, &qword_1000AF290);
  return v13(v16, 0);
}

uint64_t sub_100046B70()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21CloudTelemetryService13StorebagCache_storebagCacheURL;
  uint64_t v2 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for StorebagCache(uint64_t a1)
{
  return sub_100046C34(a1, (uint64_t *)&unk_1000B4490);
}

uint64_t sub_100046C34(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100046C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100011F50(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000473C4();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for CachedStorebag(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1000478A8(v12 + *(void *)(v20 + 72) * v8, a3);
    sub_1000471B4(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for CachedStorebag(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_100046DFC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for CachedStorebag(0);
  uint64_t v42 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10000A390(&qword_1000AF578);
  int v43 = a2;
  uint64_t v9 = sub_10008C670();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    BOOL v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_1000478A8(v30, (uint64_t)v7);
    }
    else
    {
      sub_100047840(v30, (uint64_t)v7, type metadata accessor for CachedStorebag);
      swift_bridgeObjectRetain();
    }
    sub_10008C8F0();
    sub_10008C050();
    uint64_t result = sub_10008C920();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_1000478A8((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

unint64_t sub_1000471B4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_10008C490();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_10008C8F0();
        swift_bridgeObjectRetain();
        sub_10008C050();
        Swift::Int v9 = sub_10008C920();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for CachedStorebag(0) - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_1000473C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CachedStorebag(0);
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A390(&qword_1000AF578);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10008C660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_100047840(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for CachedStorebag);
    uint64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *uint64_t v22 = v19;
    v22[1] = v20;
    sub_1000478A8((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100047644(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  int64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100011F50(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1000473C4();
      goto LABEL_7;
    }
    sub_100046DFC(v15, a4 & 1);
    unint64_t v22 = sub_100011F50(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_10008C880();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for CachedStorebag(0) - 8) + 72) * v12;
    return sub_100048AB4(a1, v20);
  }
LABEL_13:
  sub_1000477A8(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000477A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for CachedStorebag(0);
  uint64_t result = sub_1000478A8(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_100047840(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000478A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CachedStorebag(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004790C()
{
  return sub_100041EC8(&qword_1000AF288, (void (*)(uint64_t))type metadata accessor for CacheError);
}

uint64_t sub_100047954(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_10008BBB0();
    char v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_100047A68(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_10008BBB0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_100047AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_10008BBB0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_100047BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10008BBB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100047C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_10008BBB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_100047D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10008BBB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100047DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100047DD8);
}

uint64_t sub_100047DD8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10008BBB0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    char v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100047E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100047E9C);
}

void *sub_100047E9C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10008BBB0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100047F44()
{
  uint64_t result = sub_10008BBB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100047FDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        uint64_t v7 = sub_10008B720();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v10 = *a2;
        swift_errorRetain();
        *a1 = v10;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000481D0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
      uint64_t v3 = sub_10008B720();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 3:
      uint64_t result = swift_errorRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1000482A0(void *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      uint64_t v6 = sub_10008B720();
      (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_5;
    case 3u:
      uint64_t v7 = *a2;
      swift_errorRetain();
      *a1 = v7;
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_100048444(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10004860C((uint64_t)a1, type metadata accessor for CacheError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        uint64_t v6 = sub_10008B720();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_6;
      case 3u:
        uint64_t v7 = *a2;
        swift_errorRetain();
        *a1 = v7;
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10004860C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_10004866C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10008B720();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1000487D0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10004860C((uint64_t)a1, type metadata accessor for CacheError);
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10008B720();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100048958()
{
  uint64_t result = sub_10008B720();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000489EC()
{
  return type metadata accessor for StorebagCache(0);
}

uint64_t sub_1000489F4()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100048AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CachedStorebag(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048B18()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100048B60()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  int v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_10000AA94;
  return sub_1000463CC((uint64_t)v5, v6, v7, v2, v3, v4);
}

uint64_t sub_100048C08(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100048C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AF5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL static Mode.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void Mode.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int Mode.hashValue.getter(unsigned __int8 a1)
{
  return sub_10008C920();
}

uint64_t variable initialization expression of Daemon.clientBundleID()
{
  return 0;
}

uint64_t Daemon.disabled.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Daemon.disabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*Daemon.disabled.modify())()
{
  return XPCIncomingConnection.init(conn:);
}

uint64_t sub_100048D38()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6DD0);
  sub_10000A358(v0, (uint64_t)qword_1000B6DD0);
  return sub_10008BD40();
}

uint64_t sub_100048DAC()
{
  if (qword_1000B44A0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10008BD50();
  return sub_10000A358(v0, (uint64_t)qword_1000B6DD0);
}

uint64_t sub_100048E10()
{
  uint64_t result = os_variant_has_internal_diagnostics();
  byte_1000B6DE8 = result;
  return result;
}

char *sub_100048E38()
{
  if (qword_1000B44A8 != -1) {
    swift_once();
  }
  return &byte_1000B6DE8;
}

void sub_100048E84()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = sub_10008BF80();
  id v2 = [v0 initWithSuiteName:v1];

  if (v2) {
    qword_1000B6DF0 = (uint64_t)v2;
  }
  else {
    __break(1u);
  }
}

uint64_t *sub_100048EFC()
{
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  return &qword_1000B6DF0;
}

void sub_100048F48()
{
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_1000B6DF0;
  NSString v1 = sub_10008BF80();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_1000B6DF8 = v2;
}

char *sub_100049014()
{
  if (qword_1000B44B8 != -1) {
    swift_once();
  }
  return &byte_1000B6DF8;
}

void sub_100049060()
{
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)qword_1000B6DF0;
  NSString v1 = sub_10008BF80();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  if (v2)
  {
    BOOL v3 = 1;
  }
  else
  {
    id v4 = (id)qword_1000B6DF0;
    NSString v5 = sub_10008BF80();
    id v6 = [v4 integerForKey:v5];

    BOOL v3 = v6 == (id)5;
  }
  byte_1000B6DF9 = v3;
}

char *sub_100049198()
{
  if (qword_1000B44C0 != -1) {
    swift_once();
  }
  return &byte_1000B6DF9;
}

void sub_1000491E4()
{
  if (qword_1000B44A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_1000B6DE8 == 1)
  {
    if (qword_1000B44B0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v0 = (id)qword_1000B6DF0;
    NSString v1 = sub_10008BF80();
    unsigned __int8 v2 = [v0 BOOLForKey:v1];
  }
  else
  {
    unsigned __int8 v2 = 0;
  }
  byte_1000B6DFA = v2;
}

char *sub_100049310()
{
  if (qword_1000B44C8 != -1) {
    swift_once();
  }
  return &byte_1000B6DFA;
}

uint64_t sub_10004935C()
{
  return DiagnosticLogSubmissionEnabled();
}

void sub_100049374()
{
  if (!*(unsigned char *)v0)
  {
    sub_10008C540(43);
    swift_bridgeObjectRelease();
    id v3 = [self mainBundle];
    id v4 = [v3 bundleIdentifier];

    if (v4)
    {
      uint64_t v5 = sub_10008BFB0();
      uint64_t v7 = v6;

      v10._countAndFlagsBits = v5;
      v10._object = v7;
      sub_10008C090(v10);
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (*(unsigned char *)v0 == 1)
  {
    sub_10008C540(54);
    v8._countAndFlagsBits = 0xD000000000000033;
    v8._object = (void *)0x8000000100093710;
    sub_10008C090(v8);
    NSString v1 = *(void **)(v0 + 16);
    if (v1)
    {
      uint64_t v2 = *(void *)(v0 + 8);
      swift_bridgeObjectRetain();
      v9._countAndFlagsBits = v2;
      v9._object = v1;
      sub_10008C090(v9);
LABEL_7:
      swift_bridgeObjectRelease();
      v11._countAndFlagsBits = 47;
      v11._object = (void *)0xE100000000000000;
      sub_10008C090(v11);
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

void sub_1000494F4()
{
  if (!*(unsigned char *)v0)
  {
    sub_10008C540(41);
    swift_bridgeObjectRelease();
    id v3 = [self mainBundle];
    id v4 = [v3 bundleIdentifier];

    if (v4)
    {
      uint64_t v5 = sub_10008BFB0();
      uint64_t v7 = v6;

      v10._countAndFlagsBits = v5;
      v10._object = v7;
      sub_10008C090(v10);
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (*(unsigned char *)v0 == 1)
  {
    sub_10008C540(52);
    v8._countAndFlagsBits = 0xD000000000000031;
    v8._object = (void *)0x80000001000937B0;
    sub_10008C090(v8);
    NSString v1 = *(void **)(v0 + 16);
    if (v1)
    {
      uint64_t v2 = *(void *)(v0 + 8);
      swift_bridgeObjectRetain();
      v9._countAndFlagsBits = v2;
      v9._object = v1;
      sub_10008C090(v9);
LABEL_7:
      swift_bridgeObjectRelease();
      v11._countAndFlagsBits = 47;
      v11._object = (void *)0xE100000000000000;
      sub_10008C090(v11);
      return;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

id sub_100049674@<X0>(char *a1@<X8>)
{
  uint64_t v86 = sub_10008B710();
  uint64_t v85 = *(void (**)(char *, uint64_t))(v86 - 8);
  uint64_t v3 = __chkstk_darwin(v86);
  uint64_t v94 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v93 = (char *)&v78 - v5;
  uint64_t v90 = sub_10008B720();
  uint64_t v95 = *(void *)(v90 - 8);
  uint64_t v6 = __chkstk_darwin(v90);
  Swift::String v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v84 = (char *)&v78 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v89 = (char *)&v78 - v12;
  __chkstk_darwin(v11);
  uint64_t v91 = (char *)&v78 - v13;
  uint64_t v14 = sub_10000A390(&qword_1000AEBC8);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10008BA60();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  int v92 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v78 - v21;
  sub_100024B0C();
  sub_1000494F4();
  sub_10008B9D0();
  swift_bridgeObjectRelease();
  Swift::String v96 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v97 = v18 + 8;
  v96(v22, v17);
  sub_10000A390(&qword_1000AE3C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10008DC30;
  *(void *)(inited + 32) = NSURLIsDirectoryKey;
  unint64_t v24 = NSURLIsDirectoryKey;
  sub_10000C9F4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey();
  swift_arrayDestroy();
  sub_10008B980();
  if (v1)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_10008B910();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v16, 1, 1, v25);
LABEL_5:
    sub_10000CC24((uint64_t)v16, &qword_1000AEBC8);
    goto LABEL_6;
  }
  uint64_t v26 = v17;
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_10008B910();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v16, 0, 1, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v16, 1, v27) == 1)
  {
    uint64_t v17 = v26;
    goto LABEL_5;
  }
  char v59 = sub_10008B8B0();
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, v27);
  uint64_t v17 = v26;
  if ((v59 & 1) == 0)
  {
LABEL_6:
    if (qword_1000B44A0 != -1) {
      swift_once();
    }
    uint64_t v87 = 0;
    uint64_t v29 = sub_10008BD50();
    sub_10000A358(v29, (uint64_t)qword_1000B6DD0);
    uint64_t v30 = v92;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v92, a1, v17);
    uint64_t v31 = sub_10008BD30();
    os_log_type_t v32 = sub_10008C2D0();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v83 = v8;
    if (v33)
    {
      char v34 = (uint8_t *)swift_slowAlloc();
      id v100 = (id)swift_slowAlloc();
      uint64_t v88 = a1;
      *(_DWORD *)char v34 = 136446210;
      uint64_t v35 = sub_10008BA30();
      uint64_t v99 = sub_100009D00(v35, v36, (uint64_t *)&v100);
      a1 = v88;
      sub_10008C440();
      swift_bridgeObjectRelease();
      v96(v30, v17);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "creating log directory at %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v96(v30, v17);
    }

    uint64_t v37 = v95;
    id v38 = [self defaultManager];
    sub_10008B9C0(v39);
    uint64_t v41 = v40;
    id v100 = 0;
    unsigned int v42 = [v38 createDirectoryAtURL:v40 withIntermediateDirectories:1 attributes:0 error:&v100];

    int v43 = v93;
    os_log_type_t v44 = v94;
    if (v42) {
      return v100;
    }
    id v46 = v100;
    uint64_t v47 = (void *)sub_10008B960();

    swift_willThrow();
    id v100 = v47;
    swift_errorRetain();
    sub_10000A390(&qword_1000B0870);
    uint64_t v49 = v90;
    uint64_t v48 = v91;
    if (swift_dynamicCast())
    {
      int v92 = (char *)v17;
      uint64_t v88 = a1;
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
      uint64_t v81 = v37 + 16;
      uint64_t v80 = v50;
      v50(v89, v48, v49);
      uint64_t v87 = sub_10004FF78(&qword_1000AE1C8, (void (*)(uint64_t))&type metadata accessor for CocoaError);
      sub_10008B950();
      sub_10008B700();
      uint64_t v51 = sub_10004FF78(&qword_1000AE1D0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
      unint64_t v52 = v43;
      uint64_t v53 = v86;
      sub_10008C140();
      uint64_t v82 = v51;
      sub_10008C140();
      uint64_t v55 = v98;
      uint64_t v54 = v99;
      uint64_t v56 = (void (*)(char *, uint64_t))*((void *)v85 + 1);
      v56(v44, v53);
      uint64_t v85 = v56;
      v56(v52, v53);
      if (v54 == v55)
      {
        swift_errorRelease();
        uint64_t v57 = (uint64_t)v89;
        sub_100041F34((uint64_t)v89);
        unsigned int v58 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
        v58(v57, v49);
LABEL_20:
        v96(v88, (uint64_t)v92);
        v58((uint64_t)v91, v49);
        return (id)swift_errorRelease();
      }
      uint64_t v60 = (uint64_t)v89;
      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
      uint64_t v89 = (char *)(v95 + 8);
      v79(v60, v49);
      uint64_t v61 = (uint64_t)v84;
      v80(v84, v91, v49);
      uint64_t v62 = v93;
      sub_10008B950();
      uint64_t v63 = v94;
      sub_10008B6F0();
      sub_10008C140();
      sub_10008C140();
      uint64_t v65 = v98;
      uint64_t v64 = v99;
      uint64_t v66 = v63;
      uint64_t v67 = v85;
      v85(v66, v53);
      v67(v62, v53);
      if (v64 == v65)
      {
        swift_errorRelease();
        sub_100041F10(v61);
        uint64_t v68 = v61;
        unsigned int v58 = v79;
        v79(v68, v49);
        goto LABEL_20;
      }
      uint64_t v69 = v61;
      uint64_t v70 = v79;
      v79(v69, v49);
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v83, v91, v49);
      uint64_t v71 = v93;
      sub_10008B950();
      id v72 = v94;
      sub_10008B6E0();
      sub_10008C140();
      sub_10008C140();
      uint64_t v74 = v98;
      uint64_t v73 = v99;
      uint64_t v75 = v72;
      uint64_t v76 = v85;
      v85(v75, v53);
      v76(v71, v53);
      a1 = v88;
      if (v73 == v74)
      {
        swift_errorRelease();
        uint64_t v77 = (uint64_t)v83;
        sub_100041F58((uint64_t)v83);
        v70(v77, v49);
        v96(a1, (uint64_t)v92);
        return (id)swift_errorRelease();
      }
      v70((uint64_t)v83, v49);
      uint64_t v17 = (uint64_t)v92;
    }
    swift_errorRelease();
    sub_100042328((uint64_t)v47);
    v96(a1, v17);
    return (id)swift_errorRelease();
  }
  return result;
}

uint64_t sub_10004A234()
{
  sub_10000A390(&qword_1000AF5F8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 20) = 0;
  *(unsigned char *)(result + 16) = 0;
  qword_1000B6E00 = result;
  return result;
}

void sub_10004A270(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v81 = a1;
  uint64_t v86 = a4;
  uint64_t v80 = sub_10008B710();
  uint64_t v79 = *(void (**)(char *, uint64_t))(v80 - 8);
  uint64_t v7 = __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v82 = (char *)&v73 - v9;
  uint64_t v87 = sub_10008B720();
  uint64_t v83 = *(void *)(v87 - 8);
  uint64_t v10 = __chkstk_darwin(v87);
  uint64_t v76 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v77 = (char *)&v73 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v84 = (uint64_t)&v73 - v15;
  __chkstk_darwin(v14);
  uint64_t v85 = (char *)&v73 - v16;
  uint64_t v17 = sub_10008B910();
  uint64_t v88 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000A390(&qword_1000AEBC8);
  __chkstk_darwin(v20 - 8);
  unint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000B44D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v23 = (os_unfair_lock_s *)qword_1000B6E00;
  unint64_t v24 = (unsigned char *)(qword_1000B6E00 + 16);
  swift_retain();
  os_unfair_lock_lock(v23 + 5);
  sub_10004ADD8(v24, v91);
  if (v4)
  {
    os_unfair_lock_unlock(v23 + 5);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v23 + 5);
    char v25 = (char)v91[0];
    swift_release();
    if (v25)
    {
      sub_100041D04();
      return;
    }
    v91[0] = a2;
    v91[1] = a3;
    swift_bridgeObjectRetain();
    v92._countAndFlagsBits = 47;
    v92._object = (void *)0xE100000000000000;
    sub_10008C090(v92);
    uint64_t v26 = v86;
    sub_10008B9D0();
    swift_bridgeObjectRelease();
    sub_10000A390(&qword_1000AE3C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10008DC30;
    *(void *)(inited + 32) = NSURLIsDirectoryKey;
    uint64_t v28 = NSURLIsDirectoryKey;
    sub_10000C9F4(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey();
    swift_arrayDestroy();
    sub_10008B980();
    swift_bridgeObjectRelease();
    uint64_t v29 = v88;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v22, 0, 1, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 1, v17) == 1)
    {
      sub_10000CC24((uint64_t)v22, &qword_1000AEBC8);
      goto LABEL_8;
    }
    char v55 = sub_10008B8B0();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v17);
    if ((v55 & 1) == 0)
    {
LABEL_8:
      id v30 = [self defaultManager];
      sub_10008B9C0(v31);
      BOOL v33 = v32;
      v91[0] = 0;
      unsigned int v34 = [v30 createDirectoryAtURL:v32 withIntermediateDirectories:1 attributes:0 error:v91];

      if (v34)
      {
        id v35 = v91[0];
        sub_10008B900();
        sub_10008B8D0();
        sub_10008B9B0();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v19, v17);
        return;
      }
      id v36 = v91[0];
      uint64_t v37 = (void *)sub_10008B960();

      swift_willThrow();
      uint64_t v38 = v84;
      v91[0] = v37;
      swift_errorRetain();
      sub_10000A390(&qword_1000B0870);
      long long v39 = v85;
      uint64_t v40 = v87;
      int v41 = swift_dynamicCast();
      unsigned int v42 = v82;
      if (v41)
      {
        uint64_t v88 = 0;
        uint64_t v74 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
        v74(v38, v39, v40);
        uint64_t v81 = sub_10004FF78(&qword_1000AE1C8, (void (*)(uint64_t))&type metadata accessor for CocoaError);
        sub_10008B950();
        int v43 = v78;
        sub_10008B700();
        uint64_t v44 = sub_10004FF78(&qword_1000AE1D0, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
        BOOL v45 = v42;
        uint64_t v46 = v80;
        sub_10008C140();
        uint64_t v75 = v44;
        sub_10008C140();
        uint64_t v48 = v89;
        uint64_t v47 = v90;
        uint64_t v49 = (void (*)(char *, uint64_t))*((void *)v79 + 1);
        v49(v43, v46);
        v49(v45, v46);
        if (v47 == v48)
        {
          swift_errorRelease();
          uint64_t v50 = v84;
          sub_100041F34(v84);
          uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
          uint64_t v52 = v50;
          uint64_t v53 = v87;
          v51(v52, v87);
          uint64_t v54 = sub_10008BA60();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v86, v54);
          v51((uint64_t)v85, v53);
LABEL_21:
          swift_errorRelease();
          return;
        }
        uint64_t v56 = v84;
        uint64_t v57 = *(void (**)(char *, uint64_t))(v83 + 8);
        uint64_t v58 = v87;
        uint64_t v84 = v83 + 8;
        uint64_t v79 = v57;
        v57((char *)v56, v87);
        uint64_t v59 = (uint64_t)v77;
        v74((uint64_t)v77, v85, v58);
        uint64_t v60 = v82;
        sub_10008B950();
        sub_10008B6F0();
        sub_10008C140();
        sub_10008C140();
        uint64_t v62 = v89;
        uint64_t v61 = v90;
        v49(v43, v46);
        v49(v60, v46);
        if (v61 == v62)
        {
          swift_errorRelease();
          sub_100041F10(v59);
          uint64_t v63 = v87;
          uint64_t v64 = v79;
          v79((char *)v59, v87);
          uint64_t v65 = sub_10008BA60();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v86, v65);
          v64(v85, v63);
          goto LABEL_21;
        }
        uint64_t v66 = v87;
        v79((char *)v59, v87);
        uint64_t v67 = (uint64_t)v76;
        (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v76, v85, v66);
        uint64_t v68 = v82;
        sub_10008B950();
        sub_10008B6E0();
        sub_10008C140();
        sub_10008C140();
        uint64_t v70 = v89;
        uint64_t v69 = v90;
        v49(v43, v46);
        v49(v68, v46);
        if (v69 == v70)
        {
          swift_errorRelease();
          sub_100041F58(v67);
          v79((char *)v67, v87);
          uint64_t v71 = sub_10008BA60();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v86, v71);
          goto LABEL_21;
        }
        v79((char *)v67, v87);
        uint64_t v26 = v86;
      }
      swift_errorRelease();
      sub_100042328((uint64_t)v37);
      uint64_t v72 = sub_10008BA60();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 - 8) + 8))(v26, v72);
      goto LABEL_21;
    }
  }
}

unsigned char *sub_10004ADD8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t Daemon.init(mode:clientBundleID:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 584) = a4;
  *(void *)(v4 + 576) = a3;
  *(unsigned char *)(v4 + 76) = a2;
  *(void *)(v4 + 568) = a1;
  uint64_t v5 = sub_10008BA60();
  *(void *)(v4 + 592) = v5;
  *(void *)(v4 + 600) = *(void *)(v5 - 8);
  *(void *)(v4 + 608) = swift_task_alloc();
  *(void *)(v4 + 616) = swift_task_alloc();
  *(void *)(v4 + 624) = swift_task_alloc();
  *(void *)(v4 + 632) = swift_task_alloc();
  *(void *)(v4 + 640) = swift_task_alloc();
  *(void *)(v4 + 648) = swift_task_alloc();
  *(void *)(v4 + 656) = swift_task_alloc();
  return _swift_task_switch(sub_10004AF28, 0);
}

uint64_t sub_10004AF28()
{
  uint64_t v55 = v0;
  uint64_t v1 = qword_1000B44A0;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10008BD50();
  *(void *)(v0 + 664) = sub_10000A358(v2, (uint64_t)qword_1000B6DD0);
  uint64_t v3 = sub_10008BD30();
  os_log_type_t v4 = sub_10008C310();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "starting CloudTelemetryService", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 656);
  uint64_t v7 = *(void *)(v0 + 600);
  uint64_t v8 = *(void *)(v0 + 592);

  *(unsigned char *)(v0 + 888) = 0;
  uint64_t v9 = self;
  *(void *)(v0 + 672) = v9;
  id v10 = [v9 defaultManager];
  sub_100024B0C();
  sub_10008BA20(1);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(void *)(v0 + 680) = v11;
  *(void *)(v0 + 688) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v11(v6, v8);
  NSString v12 = sub_10008BF80();
  swift_bridgeObjectRelease();
  LOBYTE(v6) = [v10 fileExistsAtPath:v12];

  if (v6)
  {
    uint64_t v13 = *(char **)(v0 + 648);
    *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 76);
    *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 576);
    *(_OWORD *)(v0 + 40) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    *(unsigned char *)(v0 + 72) = 0;
    swift_bridgeObjectRetain();
    sub_100049674(v13);
    swift_bridgeObjectRelease();
    type metadata accessor for TransparencyLog();
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 696) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_10004BBA8;
    uint64_t v32 = *(void *)(v0 + 648);
    return sub_100006478(v32);
  }
  uint64_t v14 = sub_10008BD30();
  os_log_type_t v15 = sub_10008C300();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = *(void *)(v0 + 656);
    uint64_t v50 = *(void *)(v0 + 592);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136380675;
    sub_100024B0C();
    uint64_t v18 = sub_10008BA20(1);
    unint64_t v20 = v19;
    v11(v16, v50);
    *(void *)(v0 + 528) = sub_100009D00(v18, v20, &v54);
    sub_10008C440();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "reporting disabled due to missing home directory: %{private}s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  *(unsigned char *)(v0 + 888) = 1;
  uint64_t v21 = sub_10008BD30();
  os_log_type_t v22 = sub_10008C300();
  if (os_log_type_enabled(v21, v22))
  {
    char v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "reporting disabled due to startup failure.", v23, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(v0 + 888) = 1;
  *(_OWORD *)(v0 + 784) = 0u;
  *(_OWORD *)(v0 + 800) = 0u;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    unint64_t v24 = XPCActivity.makeHandler.unsafeMutableAddressor();
    char v25 = (void *)swift_allocObject();
    _OWORD v25[3] = 0;
    v25[4] = 0;
    void v25[2] = 0;
    swift_beginAccess();
    uint64_t v26 = *v24;
    *unint64_t v24 = (uint64_t)&unk_1000AF5B8;
    v24[1] = (uint64_t)v25;
    sub_1000300C8(v26);
    if (qword_1000B44D8 != -1) {
      swift_once();
    }
    unint64_t v27 = qword_1000B6E08;
    *(void *)(v0 + 816) = qword_1000B6E08;
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_10008C650();
      *(void *)(v0 + 824) = v28;
      if (v28) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v28;
      if (v28)
      {
LABEL_16:
        if (v28 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v29 = *(void *)(v0 + 816);
        if ((v29 & 0xC000000000000001) != 0)
        {
          id v30 = (void *)sub_10008C570();
        }
        else
        {
          id v30 = *(void **)(v29 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v30;
        *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
        uint64_t v34 = *v30 + 160;
        *(void *)(v0 + 848) = *(void *)v34;
        *(void *)(v0 + 856) = v34 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return _swift_task_switch(sub_10004D228, v30);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  if (qword_1000B44B8 != -1) {
    swift_once();
  }
  if (byte_1000B6DF8 == 1)
  {
    sub_10001E2C4(&v54, 0xD000000000000011, 0x8000000100093860);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v35 = (id)qword_1000B6DF0;
  NSString v36 = sub_10008BF80();
  id v37 = [v35 valueForKey:v36];

  if (v37)
  {
    sub_10008C470();
    swift_unknownObjectRelease();
    sub_10000CC24(v0 + 336, &qword_1000AE638);
    sub_10001E2C4(&v54, 0xD000000000000013, 0x8000000100093840);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_10000CC24(v0 + 336, &qword_1000AE638);
  }
  if (qword_1000B44C0 != -1) {
    swift_once();
  }
  if (byte_1000B6DF9 == 1)
  {
    sub_10001E2C4(&v54, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44C8 != -1) {
    swift_once();
  }
  if (byte_1000B6DFA == 1)
  {
    sub_10001E2C4(&v54, 0xD000000000000014, 0x8000000100093820);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_10008BD30();
  os_log_type_t v39 = sub_10008C310();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v41 = sub_10004FD34((uint64_t)&_swiftEmptySetSingleton);
    *(void *)(v0 + 488) = sub_100009D00(v41, v42, &v54);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "started CloudTelemetryService%s", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  uint64_t v43 = *(void *)(v0 + 808);
  uint64_t v51 = *(void *)(v0 + 800);
  uint64_t v52 = *(void *)(v0 + 792);
  uint64_t v44 = *(void *)(v0 + 584);
  uint64_t v48 = *(void *)(v0 + 576);
  uint64_t v49 = *(void *)(v0 + 784);
  char v47 = *(unsigned char *)(v0 + 76);
  uint64_t v45 = *(void *)(v0 + 568);
  char v53 = *(unsigned char *)(v0 + 888);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v45 = v47;
  *(void *)(v45 + 8) = v48;
  *(void *)(v45 + 16) = v44;
  *(void *)(v45 + 24) = v51;
  *(void *)(v45 + 32) = v49;
  *(void *)(v45 + 40) = v43;
  *(void *)(v45 + 48) = v52;
  *(unsigned char *)(v45 + 56) = v53;
  uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_10004BBA8(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = sub_10004D910;
  }
  else
  {
    *(void *)(v4 + 704) = a1;
    uint64_t v5 = sub_10004BCFC;
  }
  return _swift_task_switch(v5, 0);
}

uint64_t sub_10004BCFC()
{
  *(void *)(v0 + 712) = *(void *)(v0 + 704);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  uint64_t v1 = *(void *)(v0 + 656);
  uint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  uint64_t v4 = *(void *)(v0 + 576);
  char v5 = *(unsigned char *)(v0 + 76);
  *(void *)(v0 + 720) = type metadata accessor for DiskCache();
  *(unsigned char *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 96) = v3;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(unsigned char *)(v0 + 136) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100024B0C();
  sub_100049374();
  sub_10008B9E0();
  swift_bridgeObjectRelease();
  v9(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 728) = v6;
  void *v6 = v0;
  v6[1] = sub_10004BE88;
  uint64_t v7 = *(void *)(v0 + 640);
  return DiskCache.__allocating_init(rootCacheURL:)(v7);
}

uint64_t sub_10004BE88(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 736) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v5 = sub_10004E50C;
  }
  else
  {
    *(void *)(v4 + 744) = a1;
    char v5 = sub_10004BFD8;
  }
  return _swift_task_switch(v5, 0);
}

uint64_t sub_10004BFD8()
{
  uint64_t v44 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 888);
  uint64_t v2 = *(void *)(v0 + 744);
  *(void *)(v0 + 752) = v2;
  uint64_t v3 = *(void *)(v0 + 712);
  swift_retain();
  if (v3) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    char v5 = sub_10008BD30();
    os_log_type_t v6 = sub_10008C300();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "reporting disabled due to startup failure.", v7, 2u);
      swift_slowDealloc();
    }

    *uint64_t v1 = 1;
  }
  else if ((*v1 & 1) == 0)
  {
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
    uint64_t v15 = *(void *)(v0 + 656);
    uint64_t v16 = *(void *)(v0 + 592);
    uint64_t v17 = *(void *)(v0 + 584);
    uint64_t v18 = *(void *)(v0 + 576);
    char v19 = *(unsigned char *)(v0 + 76);
    type metadata accessor for SessionCoordinator();
    *(unsigned char *)(v0 + 272) = v19;
    *(void *)(v0 + 280) = v18;
    *(void *)(v0 + 288) = v17;
    *(void *)(v0 + 296) = v2;
    *(void *)(v0 + 304) = 0;
    *(void *)(v0 + 312) = 0;
    *(void *)(v0 + 320) = v3;
    *(unsigned char *)(v0 + 328) = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100024B0C();
    sub_100049374();
    sub_10008B9E0();
    swift_bridgeObjectRelease();
    v40(v15, v16);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    unint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 760) = v20;
    void *v20 = v0;
    v20[1] = sub_10004C908;
    uint64_t v21 = *(void *)(v0 + 632);
    return sub_100018BF4(0, v2, v21);
  }
  *(void *)(v0 + 808) = 0;
  *(void *)(v0 + 800) = v2;
  *(void *)(v0 + 792) = v3;
  *(void *)(v0 + 784) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    uint64_t v8 = XPCActivity.makeHandler.unsafeMutableAddressor();
    uint64_t v9 = (void *)swift_allocObject();
    v9[3] = 0;
    v9[4] = 0;
    void v9[2] = v2;
    swift_beginAccess();
    uint64_t v10 = *v8;
    *uint64_t v8 = (uint64_t)&unk_1000AF5B8;
    v8[1] = (uint64_t)v9;
    swift_retain_n();
    sub_1000300C8(v10);
    if (qword_1000B44D8 != -1) {
      swift_once();
    }
    unint64_t v11 = qword_1000B6E08;
    *(void *)(v0 + 816) = qword_1000B6E08;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_10008C650();
      *(void *)(v0 + 824) = v12;
      if (v12) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v12;
      if (v12)
      {
LABEL_15:
        if (v12 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v13 = *(void *)(v0 + 816);
        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = (void *)sub_10008C570();
        }
        else
        {
          uint64_t v14 = *(void **)(v13 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v14;
        *(unsigned char *)(v0 + 77) = *v1;
        uint64_t v23 = *v14 + 160;
        *(void *)(v0 + 848) = *(void *)v23;
        *(void *)(v0 + 856) = v23 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return _swift_task_switch(sub_10004D228, v14);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  if (qword_1000B44B8 != -1) {
    swift_once();
  }
  if (byte_1000B6DF8 == 1)
  {
    sub_10001E2C4(&v43, 0xD000000000000011, 0x8000000100093860);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v24 = (id)qword_1000B6DF0;
  NSString v25 = sub_10008BF80();
  id v26 = [v24 valueForKey:v25];

  if (v26)
  {
    sub_10008C470();
    swift_unknownObjectRelease();
    sub_10000CC24(v0 + 336, &qword_1000AE638);
    sub_10001E2C4(&v43, 0xD000000000000013, 0x8000000100093840);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_10000CC24(v0 + 336, &qword_1000AE638);
  }
  if (qword_1000B44C0 != -1) {
    swift_once();
  }
  if (byte_1000B6DF9 == 1)
  {
    sub_10001E2C4(&v43, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44C8 != -1) {
    swift_once();
  }
  if (byte_1000B6DFA == 1)
  {
    sub_10001E2C4(&v43, 0xD000000000000014, 0x8000000100093820);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_10008BD30();
  os_log_type_t v28 = sub_10008C310();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v30 = sub_10004FD34((uint64_t)&_swiftEmptySetSingleton);
    *(void *)(v0 + 488) = sub_100009D00(v30, v31, &v43);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "started CloudTelemetryService%s", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  uint64_t v32 = *(void *)(v0 + 808);
  uint64_t v39 = *(void *)(v0 + 800);
  uint64_t v41 = *(void *)(v0 + 792);
  uint64_t v33 = *(void *)(v0 + 584);
  uint64_t v37 = *(void *)(v0 + 576);
  uint64_t v38 = *(void *)(v0 + 784);
  char v36 = *(unsigned char *)(v0 + 76);
  uint64_t v34 = *(void *)(v0 + 568);
  char v42 = *(unsigned char *)(v0 + 888);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v34 = v36;
  *(void *)(v34 + 8) = v37;
  *(void *)(v34 + 16) = v33;
  *(void *)(v34 + 24) = v39;
  *(void *)(v34 + 32) = v38;
  *(void *)(v34 + 40) = v32;
  *(void *)(v34 + 48) = v41;
  *(unsigned char *)(v34 + 56) = v42;
  id v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_10004C908(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 768) = v1;
  swift_task_dealloc();
  if (v1)
  {
    char v5 = sub_10004F290;
  }
  else
  {
    *(void *)(v4 + 776) = a1;
    char v5 = sub_10004CA58;
  }
  return _swift_task_switch(v5, 0);
}

uint64_t sub_10004CA58()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 776);
  if (*(unsigned char *)(v0 + 888) == 1)
  {
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 752);
    uint64_t v4 = *(void *)(v0 + 712);
    if (!v1)
    {
      swift_release();
      uint64_t v15 = swift_release();
      __break(1u);
      return _swift_task_switch(v15, v16);
    }
    type metadata accessor for SubmissionCoordinator();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v2 = sub_100020C40(v1, v3, v4);
  }
  uint64_t v5 = *(void *)(v0 + 752);
  uint64_t v6 = *(void *)(v0 + 712);
  *(void *)(v0 + 808) = v2;
  *(void *)(v0 + 800) = v5;
  *(void *)(v0 + 792) = v6;
  *(void *)(v0 + 784) = v1;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    uint64_t v7 = XPCActivity.makeHandler.unsafeMutableAddressor();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v5;
    v8[3] = v1;
    v8[4] = v2;
    swift_beginAccess();
    uint64_t v9 = *v7;
    uint64_t *v7 = (uint64_t)&unk_1000AF5B8;
    v7[1] = (uint64_t)v8;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    sub_1000300C8(v9);
    if (qword_1000B44D8 != -1) {
      swift_once();
    }
    unint64_t v10 = qword_1000B6E08;
    *(void *)(v0 + 816) = qword_1000B6E08;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_10008C650();
      *(void *)(v0 + 824) = v11;
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v11;
      if (v11)
      {
LABEL_10:
        if (v11 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v12 = *(void *)(v0 + 816);
        if ((v12 & 0xC000000000000001) != 0)
        {
          uint64_t v13 = (void *)sub_10008C570();
        }
        else
        {
          uint64_t v13 = *(void **)(v12 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v13;
        *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
        uint64_t v14 = *v13 + 160;
        *(void *)(v0 + 848) = *(void *)v14;
        *(void *)(v0 + 856) = v14 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        uint64_t v15 = (uint64_t)sub_10004D228;
        uint64_t v16 = v13;
        return _swift_task_switch(v15, v16);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  if (qword_1000B44B8 != -1) {
    swift_once();
  }
  if (byte_1000B6DF8 == 1)
  {
    sub_10001E2C4(&v36, 0xD000000000000011, 0x8000000100093860);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v17 = (id)qword_1000B6DF0;
  NSString v18 = sub_10008BF80();
  id v19 = [v17 valueForKey:v18];

  if (v19)
  {
    sub_10008C470();
    swift_unknownObjectRelease();
    sub_10000CC24(v0 + 336, &qword_1000AE638);
    sub_10001E2C4(&v36, 0xD000000000000013, 0x8000000100093840);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_10000CC24(v0 + 336, &qword_1000AE638);
  }
  if (qword_1000B44C0 != -1) {
    swift_once();
  }
  if (byte_1000B6DF9 == 1)
  {
    sub_10001E2C4(&v36, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44C8 != -1) {
    swift_once();
  }
  if (byte_1000B6DFA == 1)
  {
    sub_10001E2C4(&v36, 0xD000000000000014, 0x8000000100093820);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_10008BD30();
  os_log_type_t v21 = sub_10008C310();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v22 = 136315138;
    uint64_t v23 = sub_10004FD34((uint64_t)&_swiftEmptySetSingleton);
    *(void *)(v0 + 488) = sub_100009D00(v23, v24, &v36);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "started CloudTelemetryService%s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_release();
  swift_release();
  uint64_t v25 = *(void *)(v0 + 808);
  uint64_t v33 = *(void *)(v0 + 800);
  uint64_t v34 = *(void *)(v0 + 792);
  uint64_t v26 = *(void *)(v0 + 584);
  uint64_t v31 = *(void *)(v0 + 576);
  uint64_t v32 = *(void *)(v0 + 784);
  char v30 = *(unsigned char *)(v0 + 76);
  uint64_t v27 = *(void *)(v0 + 568);
  char v35 = *(unsigned char *)(v0 + 888);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v27 = v30;
  *(void *)(v27 + 8) = v31;
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = v33;
  *(void *)(v27 + 32) = v32;
  *(void *)(v27 + 40) = v25;
  *(void *)(v27 + 48) = v34;
  *(unsigned char *)(v27 + 56) = v35;
  os_log_type_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_10004D228()
{
  (*(void (**)(void))(v0 + 848))(*(unsigned __int8 *)(v0 + 77));
  return _swift_task_switch(sub_10004D2C8, 0);
}

uint64_t sub_10004D2C8()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 832);
  uint64_t v2 = *(void *)(v0 + 824);
  swift_release();
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    if (qword_1000B44B8 != -1) {
      swift_once();
    }
    if (byte_1000B6DF8 == 1)
    {
      sub_10001E2C4(&v26, 0xD000000000000011, 0x8000000100093860);
      swift_bridgeObjectRelease();
    }
    if (qword_1000B44B0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)qword_1000B6DF0;
    NSString v4 = sub_10008BF80();
    id v5 = [v3 valueForKey:v4];

    if (v5)
    {
      sub_10008C470();
      swift_unknownObjectRelease();
      sub_10000CC24(v0 + 336, &qword_1000AE638);
      sub_10001E2C4(&v26, 0xD000000000000013, 0x8000000100093840);
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 336) = 0u;
      *(_OWORD *)(v0 + 352) = 0u;
      sub_10000CC24(v0 + 336, &qword_1000AE638);
    }
    if (qword_1000B44C0 != -1) {
      swift_once();
    }
    if (byte_1000B6DF9 == 1)
    {
      sub_10001E2C4(&v26, 0x6976654474736574, 0xEA00000000006563);
      swift_bridgeObjectRelease();
    }
    if (qword_1000B44C8 != -1) {
      swift_once();
    }
    if (byte_1000B6DFA == 1)
    {
      sub_10001E2C4(&v26, 0xD000000000000014, 0x8000000100093820);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10008BD30();
    os_log_type_t v10 = sub_10008C310();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v12 = sub_10004FD34((uint64_t)&_swiftEmptySetSingleton);
      *(void *)(v0 + 488) = sub_100009D00(v12, v13, &v26);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "started CloudTelemetryService%s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_release();
    swift_release();
    uint64_t v14 = *(void *)(v0 + 808);
    uint64_t v23 = *(void *)(v0 + 800);
    uint64_t v24 = *(void *)(v0 + 792);
    uint64_t v15 = *(void *)(v0 + 584);
    uint64_t v21 = *(void *)(v0 + 576);
    uint64_t v22 = *(void *)(v0 + 784);
    char v20 = *(unsigned char *)(v0 + 76);
    uint64_t v16 = *(void *)(v0 + 568);
    char v25 = *(unsigned char *)(v0 + 888);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(unsigned char *)uint64_t v16 = v20;
    *(void *)(v16 + 8) = v21;
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = v23;
    *(void *)(v16 + 32) = v22;
    *(void *)(v16 + 40) = v14;
    *(void *)(v16 + 48) = v24;
    *(unsigned char *)(v16 + 56) = v25;
    id v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 832) + 1;
    *(void *)(v0 + 832) = v6;
    uint64_t v7 = *(void *)(v0 + 816);
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v8 = (void *)sub_10008C570();
    }
    else
    {
      uint64_t v8 = *(void **)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *(void *)(v0 + 840) = v8;
    *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
    uint64_t v19 = *v8 + 160;
    *(void *)(v0 + 848) = *(void *)v19;
    *(void *)(v0 + 856) = v19 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
    return _swift_task_switch(sub_10004D228, v8);
  }
}

uint64_t sub_10004D910()
{
  *(void *)(v0 + 712) = 0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  uint64_t v2 = *(void *)(v0 + 656);
  uint64_t v3 = *(void *)(v0 + 592);
  uint64_t v4 = *(void *)(v0 + 584);
  uint64_t v5 = *(void *)(v0 + 576);
  char v6 = *(unsigned char *)(v0 + 76);
  *(void *)(v0 + 720) = type metadata accessor for DiskCache();
  *(unsigned char *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = v5;
  *(void *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(unsigned char *)(v0 + 136) = 0;
  swift_bridgeObjectRetain();
  sub_100024B0C();
  sub_100049374();
  sub_10008B9E0();
  swift_bridgeObjectRelease();
  v1(v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 728) = v7;
  void *v7 = v0;
  v7[1] = sub_10004BE88;
  uint64_t v8 = *(void *)(v0 + 640);
  return DiskCache.__allocating_init(rootCacheURL:)(v8);
}

uint64_t sub_10004DA90(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 872) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10004EAE0;
  }
  else
  {
    *(void *)(v4 + 880) = a1;
    uint64_t v5 = sub_10004DBE0;
  }
  return _swift_task_switch(v5, 0);
}

uint64_t sub_10004DBE0()
{
  uint64_t v44 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 888);
  uint64_t v2 = *(void *)(v0 + 880);
  swift_errorRelease();
  *(void *)(v0 + 752) = v2;
  uint64_t v3 = *(void *)(v0 + 712);
  swift_retain();
  if (v3) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4)
  {
    uint64_t v5 = sub_10008BD30();
    os_log_type_t v6 = sub_10008C300();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "reporting disabled due to startup failure.", v7, 2u);
      swift_slowDealloc();
    }

    *uint64_t v1 = 1;
  }
  else if ((*v1 & 1) == 0)
  {
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
    uint64_t v15 = *(void *)(v0 + 656);
    uint64_t v16 = *(void *)(v0 + 592);
    uint64_t v17 = *(void *)(v0 + 584);
    uint64_t v18 = *(void *)(v0 + 576);
    char v19 = *(unsigned char *)(v0 + 76);
    type metadata accessor for SessionCoordinator();
    *(unsigned char *)(v0 + 272) = v19;
    *(void *)(v0 + 280) = v18;
    *(void *)(v0 + 288) = v17;
    *(void *)(v0 + 296) = v2;
    *(void *)(v0 + 304) = 0;
    *(void *)(v0 + 312) = 0;
    *(void *)(v0 + 320) = v3;
    *(unsigned char *)(v0 + 328) = 0;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100024B0C();
    sub_100049374();
    sub_10008B9E0();
    swift_bridgeObjectRelease();
    v40(v15, v16);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    char v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 760) = v20;
    void *v20 = v0;
    v20[1] = sub_10004C908;
    uint64_t v21 = *(void *)(v0 + 632);
    return sub_100018BF4(0, v2, v21);
  }
  *(void *)(v0 + 808) = 0;
  *(void *)(v0 + 800) = v2;
  *(void *)(v0 + 792) = v3;
  *(void *)(v0 + 784) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    uint64_t v8 = XPCActivity.makeHandler.unsafeMutableAddressor();
    uint64_t v9 = (void *)swift_allocObject();
    v9[3] = 0;
    v9[4] = 0;
    void v9[2] = v2;
    swift_beginAccess();
    uint64_t v10 = *v8;
    *uint64_t v8 = (uint64_t)&unk_1000AF5B8;
    v8[1] = (uint64_t)v9;
    swift_retain_n();
    sub_1000300C8(v10);
    if (qword_1000B44D8 != -1) {
      swift_once();
    }
    unint64_t v11 = qword_1000B6E08;
    *(void *)(v0 + 816) = qword_1000B6E08;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_10008C650();
      *(void *)(v0 + 824) = v12;
      if (v12) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v12;
      if (v12)
      {
LABEL_15:
        if (v12 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v13 = *(void *)(v0 + 816);
        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = (void *)sub_10008C570();
        }
        else
        {
          uint64_t v14 = *(void **)(v13 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v14;
        *(unsigned char *)(v0 + 77) = *v1;
        uint64_t v23 = *v14 + 160;
        *(void *)(v0 + 848) = *(void *)v23;
        *(void *)(v0 + 856) = v23 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return _swift_task_switch(sub_10004D228, v14);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  if (qword_1000B44B8 != -1) {
    swift_once();
  }
  if (byte_1000B6DF8 == 1)
  {
    sub_10001E2C4(&v43, 0xD000000000000011, 0x8000000100093860);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v24 = (id)qword_1000B6DF0;
  NSString v25 = sub_10008BF80();
  id v26 = [v24 valueForKey:v25];

  if (v26)
  {
    sub_10008C470();
    swift_unknownObjectRelease();
    sub_10000CC24(v0 + 336, &qword_1000AE638);
    sub_10001E2C4(&v43, 0xD000000000000013, 0x8000000100093840);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_10000CC24(v0 + 336, &qword_1000AE638);
  }
  if (qword_1000B44C0 != -1) {
    swift_once();
  }
  if (byte_1000B6DF9 == 1)
  {
    sub_10001E2C4(&v43, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44C8 != -1) {
    swift_once();
  }
  if (byte_1000B6DFA == 1)
  {
    sub_10001E2C4(&v43, 0xD000000000000014, 0x8000000100093820);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_10008BD30();
  os_log_type_t v28 = sub_10008C310();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v30 = sub_10004FD34((uint64_t)&_swiftEmptySetSingleton);
    *(void *)(v0 + 488) = sub_100009D00(v30, v31, &v43);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "started CloudTelemetryService%s", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  uint64_t v39 = *(void *)(v0 + 792);
  uint64_t v41 = *(void *)(v0 + 808);
  uint64_t v37 = *(void *)(v0 + 784);
  uint64_t v38 = *(void *)(v0 + 800);
  uint64_t v32 = *(void *)(v0 + 584);
  uint64_t v36 = *(void *)(v0 + 576);
  char v35 = *(unsigned char *)(v0 + 76);
  uint64_t v33 = *(void *)(v0 + 568);
  char v42 = *(unsigned char *)(v0 + 888);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v33 = v35;
  *(void *)(v33 + 8) = v36;
  *(void *)(v33 + 16) = v32;
  *(void *)(v33 + 24) = v38;
  *(void *)(v33 + 32) = v37;
  *(void *)(v33 + 40) = v41;
  *(void *)(v33 + 48) = v39;
  *(unsigned char *)(v33 + 56) = v42;
  uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34();
}

uint64_t sub_10004E50C()
{
  uint64_t v37 = v0;
  char v35 = (char *)(v0 + 888);
  *(void *)(v0 + 496) = *(void *)(v0 + 736);
  swift_errorRetain();
  sub_10000A390(&qword_1000B0870);
  if (!swift_dynamicCast()
    || (*(unsigned char *)(v0 + 73) = *(unsigned char *)(v0 + 75), *(unsigned char *)(v0 + 74) = 1, sub_1000296B0(), (sub_10008BF70() & 1) == 0))
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v1 = sub_10008BD30();
    os_log_type_t v2 = sub_10008C2F0();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136446210;
      swift_getErrorValue();
      uint64_t v4 = sub_10008C890();
      *(void *)(v0 + 512) = sub_100009D00(v4, v5, &v36);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to open database file: %{public}s", v3, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  os_log_type_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  uint64_t v7 = *(void *)(v0 + 656);
  uint64_t v8 = *(void *)(v0 + 624);
  uint64_t v9 = *(void *)(v0 + 616);
  uint64_t v10 = *(void *)(v0 + 592);
  uint64_t v11 = *(void *)(v0 + 584);
  uint64_t v12 = *(void *)(v0 + 576);
  char v13 = *(unsigned char *)(v0 + 76);
  id v34 = [*(id *)(v0 + 672) defaultManager];
  char v14 = *v35;
  *(unsigned char *)(v0 + 144) = v13;
  *(void *)(v0 + 152) = v12;
  *(void *)(v0 + 160) = v11;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 184) = 0u;
  *(unsigned char *)(v0 + 200) = v14;
  swift_bridgeObjectRetain();
  sub_100024B0C();
  sub_100049374();
  sub_10008B9E0();
  swift_bridgeObjectRelease();
  v6(v9, v10);
  swift_bridgeObjectRelease();
  sub_10008BA00();
  v6(v8, v10);
  sub_10008B9C0(v15);
  uint64_t v17 = v16;
  v6(v7, v10);
  *(void *)(v0 + 536) = 0;
  LODWORD(v9) = [v34 removeItemAtURL:v17 error:v0 + 536];

  id v18 = *(id *)(v0 + 536);
  if (!v9)
  {
    char v19 = v18;
    sub_10008B960();

    swift_willThrow();
    swift_errorRetain();
    swift_errorRetain();
    char v20 = sub_10008BD30();
    os_log_type_t v21 = sub_10008C2F0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446210;
      swift_getErrorValue();
      uint64_t v23 = sub_10008C890();
      *(void *)(v0 + 544) = sub_100009D00(v23, v24, &v36);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "failed to clear cache directory with error: %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  NSString v25 = *(void (**)(uint64_t, uint64_t))(v0 + 680);
  uint64_t v26 = *(void *)(v0 + 656);
  uint64_t v27 = *(void *)(v0 + 592);
  uint64_t v28 = *(void *)(v0 + 584);
  uint64_t v29 = *(void *)(v0 + 576);
  *(unsigned char *)(v0 + 208) = *(unsigned char *)(v0 + 76);
  char v30 = *v35;
  *(void *)(v0 + 216) = v29;
  *(void *)(v0 + 224) = v28;
  *(_OWORD *)(v0 + 232) = 0u;
  *(_OWORD *)(v0 + 248) = 0u;
  *(unsigned char *)(v0 + 264) = v30;
  swift_bridgeObjectRetain();
  sub_100024B0C();
  sub_100049374();
  sub_10008B9E0();
  swift_bridgeObjectRelease();
  v25(v26, v27);
  swift_bridgeObjectRelease();
  unint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 864) = v31;
  *unint64_t v31 = v0;
  v31[1] = sub_10004DA90;
  uint64_t v32 = *(void *)(v0 + 608);
  return DiskCache.__allocating_init(rootCacheURL:)(v32);
}

uint64_t sub_10004EAE0()
{
  uint64_t v33 = v0;
  swift_errorRelease();
  swift_errorRelease();
  *(void *)(v0 + 752) = 0;
  uint64_t v1 = *(void *)(v0 + 712);
  os_log_type_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C300();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "reporting disabled due to startup failure.", v4, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(v0 + 888) = 1;
  *(_OWORD *)(v0 + 800) = 0u;
  *(void *)(v0 + 792) = v1;
  *(void *)(v0 + 784) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    unint64_t v5 = XPCActivity.makeHandler.unsafeMutableAddressor();
    os_log_type_t v6 = (void *)swift_allocObject();
    v6[3] = 0;
    _OWORD v6[4] = 0;
    _OWORD v6[2] = 0;
    swift_beginAccess();
    uint64_t v7 = *v5;
    uint64_t *v5 = (uint64_t)&unk_1000AF5B8;
    v5[1] = (uint64_t)v6;
    sub_1000300C8(v7);
    if (qword_1000B44D8 != -1) {
      swift_once();
    }
    unint64_t v8 = qword_1000B6E08;
    *(void *)(v0 + 816) = qword_1000B6E08;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10008C650();
      *(void *)(v0 + 824) = v9;
      if (v9) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v9;
      if (v9)
      {
LABEL_8:
        if (v9 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v10 = *(void *)(v0 + 816);
        if ((v10 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = (void *)sub_10008C570();
        }
        else
        {
          uint64_t v11 = *(void **)(v10 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v11;
        *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
        uint64_t v12 = *v11 + 160;
        *(void *)(v0 + 848) = *(void *)v12;
        *(void *)(v0 + 856) = v12 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return _swift_task_switch(sub_10004D228, v11);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  if (qword_1000B44B8 != -1) {
    swift_once();
  }
  if (byte_1000B6DF8 == 1)
  {
    sub_10001E2C4(&v32, 0xD000000000000011, 0x8000000100093860);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v13 = (id)qword_1000B6DF0;
  NSString v14 = sub_10008BF80();
  id v15 = [v13 valueForKey:v14];

  if (v15)
  {
    sub_10008C470();
    swift_unknownObjectRelease();
    sub_10000CC24(v0 + 336, &qword_1000AE638);
    sub_10001E2C4(&v32, 0xD000000000000013, 0x8000000100093840);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_10000CC24(v0 + 336, &qword_1000AE638);
  }
  if (qword_1000B44C0 != -1) {
    swift_once();
  }
  if (byte_1000B6DF9 == 1)
  {
    sub_10001E2C4(&v32, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44C8 != -1) {
    swift_once();
  }
  if (byte_1000B6DFA == 1)
  {
    sub_10001E2C4(&v32, 0xD000000000000014, 0x8000000100093820);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10008BD30();
  os_log_type_t v17 = sub_10008C310();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)id v18 = 136315138;
    uint64_t v19 = sub_10004FD34((uint64_t)&_swiftEmptySetSingleton);
    *(void *)(v0 + 488) = sub_100009D00(v19, v20, &v32);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "started CloudTelemetryService%s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  uint64_t v29 = *(void *)(v0 + 792);
  uint64_t v30 = *(void *)(v0 + 808);
  uint64_t v27 = *(void *)(v0 + 784);
  uint64_t v28 = *(void *)(v0 + 800);
  uint64_t v21 = *(void *)(v0 + 584);
  uint64_t v26 = *(void *)(v0 + 576);
  char v25 = *(unsigned char *)(v0 + 76);
  uint64_t v22 = *(void *)(v0 + 568);
  char v31 = *(unsigned char *)(v0 + 888);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v22 = v25;
  *(void *)(v22 + 8) = v26;
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v28;
  *(void *)(v22 + 32) = v27;
  *(void *)(v22 + 40) = v30;
  *(void *)(v22 + 48) = v29;
  *(unsigned char *)(v22 + 56) = v31;
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_10004F290()
{
  uint64_t v36 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10008BD30();
  os_log_type_t v2 = sub_10008C300();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v3 = 136446210;
    swift_getErrorValue();
    uint64_t v4 = sub_10008C890();
    *(void *)(v0 + 520) = sub_100009D00(v4, v5, &v35);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "reporting disabled due to failure setting up session coordinator. %{public}s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  *(unsigned char *)(v0 + 888) = 1;
  uint64_t v6 = *(void *)(v0 + 752);
  uint64_t v7 = *(void *)(v0 + 712);
  *(void *)(v0 + 808) = 0;
  *(void *)(v0 + 800) = v6;
  *(void *)(v0 + 792) = v7;
  *(void *)(v0 + 784) = 0;
  if ((*(unsigned __int8 *)(v0 + 76) | 2) == 2)
  {
    unint64_t v8 = XPCActivity.makeHandler.unsafeMutableAddressor();
    uint64_t v9 = (void *)swift_allocObject();
    v9[3] = 0;
    v9[4] = 0;
    void v9[2] = v6;
    swift_beginAccess();
    uint64_t v10 = *v8;
    *unint64_t v8 = (uint64_t)&unk_1000AF5B8;
    v8[1] = (uint64_t)v9;
    swift_retain_n();
    sub_1000300C8(v10);
    if (qword_1000B44D8 != -1) {
      swift_once();
    }
    unint64_t v11 = qword_1000B6E08;
    *(void *)(v0 + 816) = qword_1000B6E08;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_10008C650();
      *(void *)(v0 + 824) = v12;
      if (v12) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 824) = v12;
      if (v12)
      {
LABEL_9:
        if (v12 < 1) {
          __break(1u);
        }
        *(void *)(v0 + 832) = 0;
        uint64_t v13 = *(void *)(v0 + 816);
        if ((v13 & 0xC000000000000001) != 0)
        {
          NSString v14 = (void *)sub_10008C570();
        }
        else
        {
          NSString v14 = *(void **)(v13 + 32);
          swift_retain();
        }
        *(void *)(v0 + 840) = v14;
        *(unsigned char *)(v0 + 77) = *(unsigned char *)(v0 + 888);
        uint64_t v15 = *v14 + 160;
        *(void *)(v0 + 848) = *(void *)v15;
        *(void *)(v0 + 856) = v15 & 0xFFFFFFFFFFFFLL | 0xD283000000000000;
        return _swift_task_switch(sub_10004D228, v14);
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  if (qword_1000B44B8 != -1) {
    swift_once();
  }
  if (byte_1000B6DF8 == 1)
  {
    sub_10001E2C4(&v35, 0xD000000000000011, 0x8000000100093860);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v16 = (id)qword_1000B6DF0;
  NSString v17 = sub_10008BF80();
  id v18 = [v16 valueForKey:v17];

  if (v18)
  {
    sub_10008C470();
    swift_unknownObjectRelease();
    sub_10000CC24(v0 + 336, &qword_1000AE638);
    sub_10001E2C4(&v35, 0xD000000000000013, 0x8000000100093840);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 336) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
    sub_10000CC24(v0 + 336, &qword_1000AE638);
  }
  if (qword_1000B44C0 != -1) {
    swift_once();
  }
  if (byte_1000B6DF9 == 1)
  {
    sub_10001E2C4(&v35, 0x6976654474736574, 0xEA00000000006563);
    swift_bridgeObjectRelease();
  }
  if (qword_1000B44C8 != -1) {
    swift_once();
  }
  if (byte_1000B6DFA == 1)
  {
    sub_10001E2C4(&v35, 0xD000000000000014, 0x8000000100093820);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_10008BD30();
  os_log_type_t v20 = sub_10008C310();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v22 = sub_10004FD34((uint64_t)&_swiftEmptySetSingleton);
    *(void *)(v0 + 488) = sub_100009D00(v22, v23, &v35);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "started CloudTelemetryService%s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_release();
  swift_release();
  uint64_t v32 = *(void *)(v0 + 792);
  uint64_t v33 = *(void *)(v0 + 808);
  uint64_t v30 = *(void *)(v0 + 784);
  uint64_t v31 = *(void *)(v0 + 800);
  uint64_t v24 = *(void *)(v0 + 584);
  uint64_t v29 = *(void *)(v0 + 576);
  char v28 = *(unsigned char *)(v0 + 76);
  uint64_t v25 = *(void *)(v0 + 568);
  char v34 = *(unsigned char *)(v0 + 888);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)uint64_t v25 = v28;
  *(void *)(v25 + 8) = v29;
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v31;
  *(void *)(v25 + 32) = v30;
  *(void *)(v25 + 40) = v33;
  *(void *)(v25 + 48) = v32;
  *(unsigned char *)(v25 + 56) = v34;
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_10004FB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[4] = a5;
  v6[5] = a6;
  _OWORD v6[2] = a1;
  v6[3] = a4;
  return _swift_task_switch(sub_10004FB60, 0);
}

uint64_t sub_10004FB60()
{
  uint64_t v1 = v0[2];
  if (type metadata accessor for SubmitEventsActivity() == v1)
  {
    uint64_t v4 = v0[4];
    uint64_t v3 = v0[5];
    uint64_t v5 = v0[3];
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v6 = (uint64_t)sub_100020C40(v5, v4, v3);
    uint64_t v7 = &qword_1000AF5D0;
    unint64_t v8 = type metadata accessor for SubmitEventsActivity;
  }
  else if (type metadata accessor for CacheCleanupActivity() == v1)
  {
    uint64_t v9 = swift_retain();
    uint64_t v6 = sub_10005B5D0(v9);
    uint64_t v7 = &qword_1000AF5E0;
    unint64_t v8 = type metadata accessor for CacheCleanupActivity;
  }
  else
  {
    if (type metadata accessor for PostInstallActivity() != v1) {
      return sub_10008C640();
    }
    uint64_t v6 = sub_10000D9C0();
    uint64_t v7 = &qword_1000AF5D8;
    unint64_t v8 = type metadata accessor for PostInstallActivity;
  }
  uint64_t v10 = sub_10004FF78(v7, (void (*)(uint64_t))v8);
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v11(v6, v10);
}

uint64_t sub_10004FD34(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_10000A390(&qword_1000AF5E8);
  sub_100050630();
  sub_10002B864();
  uint64_t v1 = sub_10008C130();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = v1;
  v5._object = v3;
  sub_10008C090(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  sub_10008C090(v6);
  return 0x6769666E6F632820;
}

uint64_t sub_10004FE10()
{
  sub_10000A390(&qword_1000AF5C8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10008FC80;
  type metadata accessor for XPCActivity();
  uint64_t v1 = type metadata accessor for SubmitEventsActivity();
  uint64_t v2 = sub_10004FF78(&qword_1000AF5D0, (void (*)(uint64_t))type metadata accessor for SubmitEventsActivity);
  *(void *)(v0 + 32) = XPCActivity.__allocating_init(handlerType:)(v1, v2);
  uint64_t v3 = type metadata accessor for PostInstallActivity();
  uint64_t v4 = sub_10004FF78(&qword_1000AF5D8, (void (*)(uint64_t))type metadata accessor for PostInstallActivity);
  *(void *)(v0 + 40) = XPCActivity.__allocating_init(handlerType:)(v3, v4);
  uint64_t v5 = type metadata accessor for CacheCleanupActivity();
  uint64_t v6 = sub_10004FF78(&qword_1000AF5E0, (void (*)(uint64_t))type metadata accessor for CacheCleanupActivity);
  *(void *)(v0 + 48) = XPCActivity.__allocating_init(handlerType:)(v5, v6);
  uint64_t result = sub_10008C180();
  qword_1000B6E08 = v0;
  return result;
}

uint64_t sub_10004FF78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004FFC0()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100050008(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v7;
  *(void *)(v5 + 8) = sub_1000500D0;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_10004FB60, 0);
}

uint64_t sub_1000500D0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

unint64_t sub_1000501D8()
{
  unint64_t result = qword_1000AF5C0;
  if (!qword_1000AF5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF5C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000502F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Mode()
{
  return &type metadata for Mode;
}

uint64_t destroy for Daemon()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Daemon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Daemon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for Daemon(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Daemon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Daemon(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Daemon(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Daemon()
{
  return &type metadata for Daemon;
}

unint64_t sub_100050630()
{
  unint64_t result = qword_1000AF5F0;
  if (!qword_1000AF5F0)
  {
    sub_10000A540(&qword_1000AF5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF5F0);
  }
  return result;
}

uint64_t sub_10005068C()
{
  uint64_t v0 = sub_100048EFC();
  swift_beginAccess();
  id v1 = (id)*v0;
  NSString v2 = sub_10008BF80();
  id v3 = [v1 integerForKey:v2];

  uint64_t v4 = 1;
  switch((unint64_t)v3)
  {
    case 0uLL:
      goto LABEL_8;
    case 1uLL:
      uint64_t v4 = 0;
      goto LABEL_13;
    case 2uLL:
      goto LABEL_13;
    case 3uLL:
      uint64_t v4 = 2;
      goto LABEL_13;
    case 4uLL:
      uint64_t v4 = 3;
LABEL_13:
      if (qword_1000B45E0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_10008BD50();
      sub_10000A358(v10, (uint64_t)qword_1000B6E10);
      unint64_t v11 = sub_10008BD30();
      os_log_type_t v12 = sub_10008C2D0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        v17[0] = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136446466;
        uint64_t v14 = sub_10008C010();
        sub_100009D00(v14, v15, (uint64_t *)v17);
        sub_10008C440();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2050;
        sub_10008C440();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "overriding environmentType to %{public}s (%{public}ld) from defaults", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      break;
    default:
      if (qword_1000B45E0 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_10008BD50();
      sub_10000A358(v5, (uint64_t)qword_1000B6E10);
      unsigned int v6 = sub_10008BD30();
      os_log_type_t v7 = sub_10008C2F0();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 134349056;
        v17[0] = v3;
        sub_10008C440();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "invalid environmentType override from defaults: %{public}ld", v8, 0xCu);
        swift_slowDealloc();
      }

LABEL_8:
      uint64_t v9 = sub_100048E38();
      swift_beginAccess();
      if (*v9) {
        uint64_t v4 = 1;
      }
      else {
        uint64_t v4 = 3;
      }
      break;
  }
  return v4;
}

void *sub_100050A04(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  unsigned int v6 = _swiftEmptyArrayStorage;
  do
  {
    char v17 = *(unsigned char *)(a3 + v5 + 32);
    a1(&v15, &v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v8 = v16;
    if (v16)
    {
      char v9 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned int v6 = sub_100052FB8(0, v6[2] + 1, 1, v6);
      }
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1) {
        unsigned int v6 = sub_100052FB8((void *)(v10 > 1), v11 + 1, 1, v6);
      }
      _OWORD v6[2] = v11 + 1;
      os_log_type_t v7 = &v6[2 * v11];
      *((unsigned char *)v7 + 32) = v9;
      _OWORD v7[5] = v8;
    }
    ++v5;
  }
  while (v13 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

Swift::Int sub_100050B5C()
{
  uint64_t v1 = *v0;
  sub_10008C8F0();
  sub_10008C900(v1 + 1);
  return sub_10008C920();
}

void sub_100050BA4()
{
  sub_10008C900(*v0 + 1);
}

Swift::Int sub_100050BD4()
{
  uint64_t v1 = *v0;
  sub_10008C8F0();
  sub_10008C900(v1 + 1);
  return sub_10008C920();
}

uint64_t sub_100050C18@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100054BA0(*a1);
  *a2 = result;
  return result;
}

void sub_100050C44(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

void sub_100050C54(void *a1@<X8>)
{
  *a1 = &off_1000A7830;
}

uint64_t sub_100050C64()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6E10);
  sub_10000A358(v0, (uint64_t)qword_1000B6E10);
  return sub_10008BD40();
}

uint64_t sub_100050CDC(char a1)
{
  return *(void *)&aDevelopmappleI[8 * a1];
}

uint64_t sub_100050CFC()
{
  return sub_100050CDC(*v0);
}

uint64_t sub_100050D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  char v4 = sub_100054D6C(a1, a2);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4;
  return result;
}

void sub_100050D44(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100050D50(uint64_t a1)
{
  unint64_t v2 = sub_100056C84();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100050D8C(uint64_t a1)
{
  unint64_t v2 = sub_100056C84();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100050DC8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100055178(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

unint64_t sub_100050E10(char a1)
{
  if (!a1) {
    return 0xD00000000000001DLL;
  }
  if (a1 == 1) {
    return 0xD000000000000025;
  }
  return 0xD000000000000010;
}

unint64_t sub_100050E70()
{
  return sub_100050E10(*v0);
}

uint64_t sub_100050E78@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  sub_10008B940();
  swift_allocObject();
  sub_10008B930();
  sub_100054BC4();
  sub_10008B920();
  if (v4)
  {
    sub_10000A43C(a1, a2);
    return swift_release();
  }
  else
  {
    unint64_t v10 = v20;
    if (*(void *)(v21 + 16) && (sub_100053C18(a3), (v11 & 1) != 0)) {
      unint64_t v12 = swift_bridgeObjectRetain();
    }
    else {
      unint64_t v12 = sub_10005103C((uint64_t)_swiftEmptyArrayStorage);
    }
    if (v19) {
      int v13 = 86400;
    }
    else {
      int v13 = v18;
    }
    unint64_t v15 = v12;
    if (v20)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = v17;
      swift_bridgeObjectRetain();
      sub_10000A43C(a1, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = v17;
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_100051188((uint64_t)_swiftEmptyArrayStorage);
      sub_10000A43C(a1, a2);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *(void *)a4 = v15;
    *(_DWORD *)(a4 + 8) = v13;
    *(void *)(a4 + 16) = v16;
    *(void *)(a4 + 24) = v14;
    *(void *)(a4 + 32) = v10;
  }
  return result;
}

unint64_t sub_10005103C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A390(&qword_1000AF6D0);
  uint64_t v2 = (void *)sub_10008C680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 5);
    uint64_t v6 = *((void *)v4 - 4);
    uint64_t v7 = *((void *)v4 - 3);
    uint64_t v8 = *((void *)v4 - 2);
    uint64_t v9 = *((void *)v4 - 1);
    char v10 = *v4;
    swift_bridgeObjectRetain();
    sub_100020748(v7, v8, v9, v10);
    unint64_t result = sub_100011F50(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int v13 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v13 = v5;
    v13[1] = v6;
    uint64_t v14 = v2[7] + 32 * result;
    *(void *)uint64_t v14 = v7;
    *(void *)(v14 + 8) = v8;
    *(void *)(v14 + 16) = v9;
    *(unsigned char *)(v14 + 24) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 48;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100051188(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A390(&qword_1000AF6C8);
  uint64_t v2 = (void *)sub_10008C680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    char v8 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100011F50(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 16 * result;
    *(void *)uint64_t v12 = v7;
    *(unsigned char *)(v12 + 8) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 32;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000512B4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  void (*v35)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  long long v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  double v69;
  int v70;
  void *v71;
  uint64_t v72;
  BOOL v73;
  BOOL v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  long long v83;
  long long v84;
  long long v85;
  long long v86;
  long long v87;
  long long v88;
  long long v89;
  long long v90;
  long long v91;
  int v92;
  BOOL v93;
  BOOL v94;
  NSString v95;
  uint64_t v96;
  void *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  BOOL v105;
  void *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  unint64_t v126;
  double *v127;
  void *v128;
  uint64_t v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  char v134;
  BOOL v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  long long v144;
  unsigned __int8 v145;
  long long v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  NSObject *v151;
  os_log_type_t v152;
  uint8_t *v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  BOOL v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  BOOL v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  BOOL v165;
  unint64_t v166;
  NSObject *v167;
  os_log_type_t v168;
  BOOL v169;
  uint8_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unsigned __int8 v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  BOOL v190;
  BOOL v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  char v197;
  uint64_t v198;
  char isUniquelyReferenced_nonNull_native;
  void *v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  void *v204;
  uint64_t v205;
  char v206;
  void *v207;
  unint64_t v208;
  int64_t v209;
  uint64_t v210;
  _OWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  void *v225;
  uint64_t v226;
  unint64_t v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  uint64_t result;
  long long v234;
  _OWORD *v235;
  uint64_t v236;
  void (**v237)(char *, uint64_t);
  void (**v238)(uint64_t, char *, uint64_t);
  void (**v239)(char *, uint64_t, uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _OWORD *v243;
  char *v244;
  uint64_t v245;
  long long v246;
  void *v247;
  uint64_t v248;
  uint64_t v249;
  void *v250;
  uint64_t v251;
  void *v252;
  void *v253;
  uint64_t v254;
  char *v255;
  long long v256;
  uint64_t *v257;
  uint64_t v258;
  uint64_t v259;
  void (**v260)(char *, uint64_t);
  void (**v261)(char *, uint64_t, uint64_t);
  void *v262;
  unsigned int (**v263)(uint64_t, uint64_t, uint64_t);
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  uint64_t v268;
  void *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  int64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  void *v277;
  unint64_t v278;
  int64_t v279;
  uint64_t v280;
  uint64_t v281;
  void (**v282)(char *, uint64_t);
  void (**v283)(char *, uint64_t);
  uint64_t v284;
  uint64_t v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  long long v291;
  uint64_t v292;
  unint64_t v293;
  uint64_t v294;
  uint64_t v295;
  long long v296;
  long long v297;
  long long v298;
  long long v299;
  long long v300;
  long long v301;
  long long v302;
  long long v303;
  long long v304;
  long long v305;
  long long v306;
  long long v307;
  void *v308;
  void v309[2];
  long long v310;
  long long v311;

  uint64_t v3 = v2;
  v243 = a2;
  v280 = sub_10008BD50();
  v293 = *(void *)(v280 - 8);
  __chkstk_darwin(v280 - 8);
  v275 = (char *)&v236 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SessionConfiguration.Backend(0);
  v248 = *(void *)(v6 - 8);
  v249 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  v252 = (uint64_t *)((char *)&v236 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  v242 = (uint64_t)&v236 - v10;
  __chkstk_darwin(v9);
  v241 = (uint64_t)&v236 - v11;
  uint64_t v12 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  __chkstk_darwin(v12 - 8);
  v240 = (uint64_t)&v236 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000A390(&qword_1000AE350);
  __chkstk_darwin(v14 - 8);
  v264 = (char *)&v236 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = sub_10008BA60();
  uint64_t v16 = *(void *)(v268 - 8);
  uint64_t v17 = __chkstk_darwin(v268);
  v245 = (uint64_t)&v236 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v244 = (char *)&v236 - v19;
  v285 = sub_10008BC70();
  uint64_t v20 = *(void *)(v285 - 8);
  uint64_t v21 = __chkstk_darwin(v285);
  v267 = (char *)&v236 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v272 = (char *)&v236 - v23;
  v284 = sub_10008BC90();
  uint64_t v24 = *(void *)(v284 - 8);
  uint64_t v25 = __chkstk_darwin(v284);
  v266 = (char *)&v236 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v271 = (char *)&v236 - v27;
  uint64_t v28 = sub_10000A390((uint64_t *)&unk_1000AF278);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  v265 = (char *)&v236 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v236 - v31;
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  v269 = a1;
  sub_10000A784(a1, v33);
  uint64_t v35 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 8);
  uint64_t v36 = v34;
  uint64_t v37 = (uint64_t)v32;
  v35(v309, v33, v36);
  v311 = v310;
  uint64_t v38 = *((void *)&v310 + 1);
  uint64_t v39 = v310;
  swift_bridgeObjectRetain();
  sub_10001A660((uint64_t)v309);
  v250 = v3;
  uint64_t v40 = *v3;
  uint64_t v41 = *(void *)(v40 + 64);
  v270 = v40 + 64;
  char v42 = 1 << *(unsigned char *)(v40 + 32);
  uint64_t v43 = -1;
  if (v42 < 64) {
    uint64_t v43 = ~(-1 << v42);
  }
  uint64_t v44 = v43 & v41;
  v273 = (unint64_t)(v42 + 63) >> 6;
  v282 = (void (**)(char *, uint64_t))(v20 + 8);
  v283 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v45 = v38;
  v263 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v260 = (void (**)(char *, uint64_t))(v293 + 8);
  v261 = (void (**)(char *, uint64_t, uint64_t))(v293 + 16);
  v257 = &v295;
  v238 = (void (**)(uint64_t, char *, uint64_t))(v16 + 16);
  v239 = (void (**)(char *, uint64_t, uint64_t))(v16 + 32);
  v237 = (void (**)(char *, uint64_t))(v16 + 8);
  swift_bridgeObjectRetain();
  uint64_t v46 = v44;
  char v47 = 0;
  v251 = 0;
  *(void *)&uint64_t v48 = 136315138;
  v256 = v48;
  v255 = (char *)&type metadata for Any + 8;
  *(void *)&uint64_t v48 = 136446210;
  v246 = v48;
  v253 = _swiftEmptyArrayStorage;
  v247 = _swiftEmptyArrayStorage;
  v281 = v37;
  v286 = v39;
  v258 = v40;
  v293 = v38;
  while (1)
  {
LABEL_9:
    if (v46)
    {
      char v53 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      uint64_t v54 = v53 | (v47 << 6);
    }
    else
    {
      if (__OFADD__(v47++, 1)) {
        goto LABEL_253;
      }
      if (v47 >= v273)
      {
LABEL_248:
        swift_release();
        sub_100032D5C((uint64_t)&v311);
        v230 = v250[2];
        v231 = v250[3];
        swift_bridgeObjectRetain();
        v232 = variable initialization expression of Daemon.mode();
        unint64_t result = sub_10007A2C4((uint64_t)v247, (uint64_t)v253, v232 & 1, v230, v231, (uint64_t)&v296);
        v234 = v297;
        v235 = v243;
        *v243 = v296;
        v235[1] = v234;
        *((void *)v235 + 4) = v298;
        return result;
      }
      uint64_t v56 = *(void *)(v270 + 8 * v47);
      if (!v56)
      {
        uint64_t v57 = v47 + 1;
        if (v47 + 1 >= v273) {
          goto LABEL_248;
        }
        uint64_t v56 = *(void *)(v270 + 8 * v57);
        if (!v56)
        {
          uint64_t v57 = v47 + 2;
          if (v47 + 2 >= v273) {
            goto LABEL_248;
          }
          uint64_t v56 = *(void *)(v270 + 8 * v57);
          if (!v56)
          {
            uint64_t v57 = v47 + 3;
            if (v47 + 3 >= v273) {
              goto LABEL_248;
            }
            uint64_t v56 = *(void *)(v270 + 8 * v57);
            if (!v56)
            {
              while (1)
              {
                char v47 = v57 + 1;
                if (__OFADD__(v57, 1)) {
                  goto LABEL_256;
                }
                if (v47 >= v273) {
                  goto LABEL_248;
                }
                uint64_t v56 = *(void *)(v270 + 8 * v47);
                ++v57;
                if (v56) {
                  goto LABEL_21;
                }
              }
            }
          }
        }
        char v47 = v57;
      }
LABEL_21:
      uint64_t v46 = (v56 - 1) & v56;
      uint64_t v54 = __clz(__rbit64(v56)) + (v47 << 6);
    }
    uint64_t v58 = *(void *)(v40 + 56) + 32 * v54;
    uint64_t v59 = *(void *)(v58 + 8);
    v289 = *(void *)v58;
    uint64_t v60 = *(void *)(v58 + 16);
    uint64_t v61 = *(unsigned __int8 *)(v58 + 24);
    v292 = v60;
    if (!v61) {
      break;
    }
    if (v61 != 1) {
      continue;
    }
    v278 = v46;
    v279 = v47;
    uint64_t v62 = v289;
    sub_100020748(v289, v59, v60, 1);
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_100048E38();
    swift_beginAccess();
    if ((*v63 & 1) == 0)
    {
      sub_1000207AC(v62, v59, v60, 1);
      uint64_t v49 = v62;
      uint64_t v50 = v59;
LABEL_5:
      uint64_t v51 = v60;
      goto LABEL_6;
    }
    v274 = v59;
    uint64_t v64 = *(void *)(v62 + 16);
    if (!v64)
    {
      v171 = v274;
      sub_1000207AC(v62, v274, v60, 1);
      uint64_t v49 = v62;
      uint64_t v50 = v171;
      goto LABEL_5;
    }
    uint64_t v65 = 0;
    *(void *)&v291 = v62 + 32;
    while (1)
    {
      uint64_t v66 = v291 + 72 * v65;
      uint64_t v67 = *(void **)v66;
      uint64_t v68 = *(void *)(*(void *)v66 + 16);
      if (!v68) {
        goto LABEL_27;
      }
      uint64_t v69 = *(double *)(v66 + 8);
      uint64_t v70 = *(unsigned __int8 *)(v66 + 16);
      uint64_t v71 = *(void **)(v66 + 24);
      v276 = *(void *)(v66 + 32);
      LODWORD(v277) = *(unsigned __int8 *)(v66 + 40);
      uint64_t v72 = *(void *)(v66 + 48);
      v287 = *(void *)(v66 + 56);
      v288 = v72;
      LODWORD(v290) = *(unsigned __int8 *)(v66 + 64);
      uint64_t v73 = v67[4] == v39 && v67[5] == v45;
      if (v73 || (sub_10008C7D0() & 1) != 0) {
        break;
      }
      if (v68 != 1)
      {
        uint64_t v74 = v67[6] == v39 && v67[7] == v45;
        if (v74 || (sub_10008C7D0() & 1) != 0) {
          break;
        }
        if (v68 != 2)
        {
          uint64_t v75 = v67 + 9;
          uint64_t v76 = 2;
          do
          {
            uint64_t v77 = v76 + 1;
            if (__OFADD__(v76, 1)) {
              goto LABEL_250;
            }
            if (*(v75 - 1) == v286 && *v75 == v293)
            {
              uint64_t v39 = v286;
              goto LABEL_200;
            }
            if (sub_10008C7D0())
            {
              uint64_t v39 = v286;
              goto LABEL_200;
            }
            v75 += 2;
            ++v76;
          }
          while (v77 != v68);
        }
      }
LABEL_27:
      ++v65;
      uint64_t v37 = v281;
      uint64_t v39 = v286;
      uint64_t v45 = v293;
      if (v65 == v64)
      {
        v192 = v289;
        v193 = v274;
        v194 = v292;
        sub_1000207AC(v289, v274, v292, 1);
        sub_1000207AC(v192, v193, v194, 1);
        goto LABEL_190;
      }
    }
LABEL_200:
    v262 = v71;
    if (v70) {
      uint64_t v69 = 1.0;
    }
    v173 = v269[3];
    v172 = v269[4];
    sub_10000A784(v269, v173);
    *(void *)&v291 = *(void *)(v172 + 24);
    swift_bridgeObjectRetain();
    v174 = v276;
    v175 = v277;
    sub_100054C18((uint64_t)v71, v276, v277);
    sub_100054C30();
    if (((double (*)(uint64_t, uint64_t))v291)(v173, v172) >= v69)
    {
      swift_bridgeObjectRelease();
      sub_100054C3C((uint64_t)v262, v174, v175);
      sub_100054C54();
      v183 = v289;
      v184 = v274;
      v185 = v292;
      sub_1000207AC(v289, v274, v292, 1);
      sub_1000207AC(v183, v184, v185, 1);
      uint64_t v40 = v258;
      uint64_t v45 = v293;
      uint64_t v46 = v278;
      char v47 = v279;
      uint64_t v37 = v281;
      continue;
    }
    v176 = v250[4];
    v259 = sub_1000559B0(v262, v174, v175, v176);
    uint64_t v40 = v258;
    uint64_t v45 = v293;
    if ((v290 & 1) == 0)
    {
      v182 = (void *)swift_bridgeObjectRetain();
      uint64_t v37 = v281;
      goto LABEL_227;
    }
    v177 = v287;
    uint64_t v37 = v281;
    if (!*(void *)(v176 + 16)) {
      goto LABEL_226;
    }
    swift_bridgeObjectRetain();
    v178 = sub_100011F50(v288, v177);
    if ((v179 & 1) == 0)
    {
      sub_100054C54();
LABEL_226:
      v182 = _swiftEmptyArrayStorage;
LABEL_227:
      swift_bridgeObjectRelease();
      v181 = (uint64_t)v182;
      goto LABEL_228;
    }
    v180 = *(void *)(v176 + 56) + 16 * v178;
    v181 = *(void *)v180;
    LODWORD(v291) = *(unsigned __int8 *)(v180 + 8);
    swift_bridgeObjectRetain();
    sub_100054C54();
    swift_bridgeObjectRelease();
    v182 = _swiftEmptyArrayStorage;
    uint64_t v45 = v293;
    if (v291 != 1) {
      goto LABEL_227;
    }
LABEL_228:
    sub_100054C3C((uint64_t)v71, v276, v277);
    sub_100054C54();
    v209 = *(void *)(v181 + 16);
    if (v209)
    {
      *(void *)&v296 = _swiftEmptyArrayStorage;
      sub_10005471C(0, v209, 0);
      v210 = v296;
      v288 = v181;
      v211 = (_OWORD *)(v181 + 64);
      do
      {
        v213 = *((void *)v211 - 4);
        v212 = *((void *)v211 - 3);
        LODWORD(v290) = *((unsigned __int8 *)v211 - 16);
        v214 = *((void *)v211 - 1);
        v291 = *v211;
        *(void *)&v296 = v210;
        v216 = *(void *)(v210 + 16);
        v215 = *(void *)(v210 + 24);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v216 >= v215 >> 1)
        {
          sub_10005471C(v215 > 1, v216 + 1, 1);
          v210 = v296;
        }
        v211 += 3;
        *(void *)(v210 + 16) = v216 + 1;
        v217 = v210 + (v216 << 6);
        *(void *)(v217 + 32) = v213;
        *(void *)(v217 + 40) = v212;
        *(void *)(v217 + 48) = v213;
        *(void *)(v217 + 56) = v212;
        *(unsigned char *)(v217 + 64) = v290;
        *(void *)(v217 + 72) = v214;
        *(_OWORD *)(v217 + 80) = v291;
        --v209;
      }
      while (v209);
      swift_bridgeObjectRelease();
      sub_1000207AC(v289, v274, v292, 1);
      uint64_t v37 = v281;
      uint64_t v39 = v286;
      uint64_t v40 = v258;
      uint64_t v45 = v293;
      if (*(void *)(v210 + 16))
      {
LABEL_234:
        sub_10000A390(&qword_1000AF618);
        v218 = (void *)sub_10008C680();
        goto LABEL_237;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1000207AC(v289, v274, v292, 1);
      if (_swiftEmptyArrayStorage[2]) {
        goto LABEL_234;
      }
    }
    v218 = &_swiftEmptyDictionarySingleton;
LABEL_237:
    *(void *)&v296 = v218;
    v219 = swift_bridgeObjectRetain();
    v220 = v251;
    sub_1000538C0(v219, 1, &v296);
    v251 = v220;
    if (v220) {
      goto LABEL_259;
    }
    swift_bridgeObjectRelease();
    v221 = XPCIncomingConnection.init(conn:)(v259);
    v222 = v252;
    *v252 = v223;
    v222[1] = v221;
    v222[2] = v224;
    swift_storeEnumTagMultiPayload();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      v225 = v253;
    }
    else {
      v225 = (void *)sub_1000532E8(0, v253[2] + 1, 1, (unint64_t)v253);
    }
    v226 = v292;
    v228 = v225[2];
    v227 = v225[3];
    if (v228 >= v227 >> 1) {
      v225 = (void *)sub_1000532E8(v227 > 1, v228 + 1, 1, (unint64_t)v225);
    }
    v225[2] = v228 + 1;
    v229 = (*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80);
    v253 = v225;
    sub_1000570BC((uint64_t)v252, (uint64_t)v225 + v229 + *(void *)(v248 + 72) * v228, type metadata accessor for SessionConfiguration.Backend);
    uint64_t v49 = v289;
    uint64_t v50 = v274;
    uint64_t v51 = v226;
LABEL_6:
    uint64_t v52 = 1;
LABEL_7:
    sub_1000207AC(v49, v50, v51, v52);
LABEL_8:
    uint64_t v46 = v278;
    char v47 = v279;
  }
  *(void *)&v291 = *(void *)(v60 + 16);
  if (!(void)v291) {
    goto LABEL_9;
  }
  v278 = v46;
  v279 = v47;
  uint64_t v79 = (uint64_t *)(*(void *)(v40 + 48) + 16 * v54);
  uint64_t v80 = v79[1];
  v254 = *v79;
  v259 = v80;
  swift_bridgeObjectRetain();
  v274 = v59;
  sub_100020748(v289, v59, v60, 0);
  swift_bridgeObjectRetain();
  if (*(void *)(v60 + 16))
  {
    uint64_t v81 = 0;
    v290 = v60 + 32;
    while (1)
    {
      uint64_t v82 = v290 + 200 * v81;
      v296 = *(_OWORD *)v82;
      uint64_t v83 = *(_OWORD *)(v82 + 16);
      uint64_t v84 = *(_OWORD *)(v82 + 32);
      uint64_t v85 = *(_OWORD *)(v82 + 64);
      v299 = *(_OWORD *)(v82 + 48);
      v300 = v85;
      v297 = v83;
      v298 = v84;
      uint64_t v86 = *(_OWORD *)(v82 + 80);
      uint64_t v87 = *(_OWORD *)(v82 + 96);
      uint64_t v88 = *(_OWORD *)(v82 + 128);
      v303 = *(_OWORD *)(v82 + 112);
      v304 = v88;
      v301 = v86;
      v302 = v87;
      uint64_t v89 = *(_OWORD *)(v82 + 144);
      uint64_t v90 = *(_OWORD *)(v82 + 160);
      uint64_t v91 = *(_OWORD *)(v82 + 176);
      v308 = *(void **)(v82 + 192);
      v306 = v90;
      v307 = v91;
      v305 = v89;
      if (__PAIR128__(v45, v39) != v296 && (sub_10008C7D0() & 1) == 0) {
        goto LABEL_164;
      }
      Swift::String v92 = BYTE8(v307);
      if (BYTE8(v307) == 2)
      {
        sub_100056308((uint64_t)&v296);
        uint64_t v93 = 0;
      }
      else
      {
        sub_100056308((uint64_t)&v296);
        uint64_t v93 = sub_100060068(v92 & 1);
      }
      uint64_t v94 = BYTE9(v307) != 2 && sub_100060068(BYTE9(v307) & 1);
      if (((sub_10004935C() | v93) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1000563E0((uint64_t)&v296);
        if (qword_1000B45E0 != -1) {
          swift_once();
        }
        sub_10000A358(v280, (uint64_t)qword_1000B6E10);
        v166 = v259;
        swift_bridgeObjectRetain();
        v167 = sub_10008BD30();
        v168 = sub_10008C2E0();
        uint64_t v169 = os_log_type_enabled(v167, v168);
        uint64_t v40 = v258;
        if (v169)
        {
          v170 = (uint8_t *)swift_slowAlloc();
          v295 = swift_slowAlloc();
          *(_DWORD *)v170 = v246;
          swift_bridgeObjectRetain();
          v294 = sub_100009D00(v254, v166, &v295);
          uint64_t v39 = v286;
          sub_10008C440();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v167, v168, "skipping %{public}s: dnu disabled", v170, 0xCu);
          swift_arrayDestroy();
          uint64_t v45 = v293;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v49 = v289;
        uint64_t v50 = v274;
        uint64_t v51 = v292;
        uint64_t v52 = 0;
        goto LABEL_7;
      }
      LODWORD(v287) = v94;
      LODWORD(v288) = v92;
      uint64_t v95 = sub_10008BF80();
      Swift::String v96 = MGCopyAnswer();

      if (!v96) {
        goto LABEL_258;
      }
      uint64_t v97 = (void *)*((void *)&v300 + 1);
      type metadata accessor for CFString(0);
      uint64_t v98 = (void *)swift_dynamicCastUnknownClassUnconditional();
      uint64_t v99 = sub_10008BFB0();
      Swift::String v101 = v100;

      if (!v97) {
        break;
      }
      long long v102 = v97[2];
      if (!v102) {
        goto LABEL_161;
      }
      if (v97[4] == v99 && v97[5] == v101 || (sub_10008C7D0() & 1) != 0) {
        break;
      }
      uint64_t v45 = v293;
      if (v102 != 1)
      {
        if (v97[6] == v99 && v97[7] == v101 || (sub_10008C7D0() & 1) != 0) {
          break;
        }
        if (v102 != 2)
        {
          Swift::Int v154 = v97 + 9;
          v155 = 2;
          while (1)
          {
            unint64_t v156 = v155 + 1;
            if (__OFADD__(v155, 1)) {
              goto LABEL_254;
            }
            uint64_t v157 = *(v154 - 1) == v99 && *v154 == v101;
            if (v157 || (sub_10008C7D0() & 1) != 0) {
              goto LABEL_68;
            }
            v154 += 2;
            ++v155;
            if (v156 == v102) {
              goto LABEL_161;
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_1000563E0((uint64_t)&v296);
      uint64_t v60 = v292;
LABEL_164:
      if (++v81 == (void)v291)
      {
        swift_bridgeObjectRelease();
        sub_1000207AC(v289, v274, v60, 0);
        swift_bridgeObjectRelease();
LABEL_190:
        uint64_t v40 = v258;
        goto LABEL_8;
      }
      if (v81 >= *(void *)(v60 + 16)) {
        goto LABEL_249;
      }
    }
LABEL_68:
    uint64_t v103 = (void *)v300;
    if ((void)v300)
    {
      int64_t v104 = *(void *)(v300 + 16);
      if (v104)
      {
        Class v105 = *(void *)(v300 + 32) == v99 && *(void *)(v300 + 40) == v101;
        if (v105 || (sub_10008C7D0() & 1) != 0) {
          goto LABEL_161;
        }
        if (v104 != 1)
        {
          if (v103[6] == v99 && v103[7] == v101 || (sub_10008C7D0() & 1) != 0) {
            goto LABEL_161;
          }
          if (v104 != 2)
          {
            swift_bridgeObjectRetain();
            v158 = v103 + 9;
            uint64_t v159 = 2;
            while (1)
            {
              v160 = v159 + 1;
              if (__OFADD__(v159, 1)) {
                goto LABEL_255;
              }
              uint64_t v161 = *(v158 - 1) == v99 && *v158 == v101;
              if (v161 || (sub_10008C7D0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                uint64_t v39 = v286;
                uint64_t v37 = v281;
                goto LABEL_161;
              }
              v158 += 2;
              ++v159;
              if (v160 == v104)
              {
                swift_bridgeObjectRelease();
                uint64_t v39 = v286;
                uint64_t v37 = v281;
                break;
              }
            }
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v106 = (void *)v307;
    if (!(void)v307)
    {
LABEL_84:
      Swift::String v115 = v266;
      sub_10008BC50();
      int64_t v116 = v267;
      sub_10008BC80();
      (*v283)(v115, v284);
      uint64_t v117 = (uint64_t)v265;
      sub_10008BC60();
      (*v282)(v116, v285);
      uint64_t v118 = sub_10008BC40();
      long long v119 = *(void *)(v118 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v117, 1, v118) == 1)
      {
        sub_10000CC24(v117, (uint64_t *)&unk_1000AF278);
      }
      else
      {
        uint64_t v120 = v308;
        uint64_t v121 = sub_10008BC30();
        uint64_t v123 = v122;
        uint64_t v124 = v117;
        Swift::String_optional v125 = v120;
        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v124, v118);
        if (v120)
        {
          v276 = v120[2];
          if (v276)
          {
            v277 = v120 + 4;
            swift_bridgeObjectRetain();
            Swift::String_optional v126 = 0;
            v262 = v120;
            while (v126 < v125[2])
            {
              Swift::String_optional v127 = (double *)&v277[2 * v126];
              Swift::String_optional v128 = *(void **)v127;
              Swift::String v129 = *(void *)(*(void *)v127 + 16);
              if (v129)
              {
                Swift::String v130 = v127[1];
                Swift::String v131 = v128[4];
                Swift::String v132 = v128[5];
                swift_bridgeObjectRetain();
                if (v131 == v121 && v132 == v123) {
                  goto LABEL_168;
                }
                unint64_t v134 = sub_10008C7D0();
                swift_bridgeObjectRetain_n();
                if (v134) {
                  goto LABEL_167;
                }
                if (v129 != 1)
                {
                  uint64_t v135 = v128[6] == v121 && v128[7] == v123;
                  if (v135 || (sub_10008C7D0() & 1) != 0)
                  {
LABEL_167:
                    swift_bridgeObjectRelease_n();
LABEL_168:
                    uint64_t v140 = v289;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    goto LABEL_125;
                  }
                  if (v129 != 2)
                  {
                    if (v128[8] == v121 && v128[9] == v123 || (sub_10008C7D0() & 1) != 0) {
                      goto LABEL_167;
                    }
                    if (v129 != 3)
                    {
                      uint64_t v136 = v128 + 11;
                      unint64_t v137 = 3;
                      do
                      {
                        uint64_t v138 = v137 + 1;
                        if (__OFADD__(v137, 1)) {
                          goto LABEL_252;
                        }
                        uint64_t v139 = *(v136 - 1) == v121 && *v136 == v123;
                        if (v139 || (sub_10008C7D0() & 1) != 0) {
                          goto LABEL_167;
                        }
                        v136 += 2;
                        ++v137;
                      }
                      while (v138 != v129);
                    }
                  }
                }
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                Swift::String_optional v125 = v262;
              }
              if (++v126 == v276)
              {
                swift_bridgeObjectRelease();
                goto LABEL_120;
              }
            }
            goto LABEL_251;
          }
        }
LABEL_120:
        swift_bridgeObjectRelease();
      }
      if (BYTE8(v298)) {
        Swift::String v130 = 1.0;
      }
      else {
        Swift::String v130 = *(double *)&v298;
      }
      uint64_t v140 = v289;
LABEL_125:
      uint64_t v141 = v269[3];
      uint64_t v142 = v269[4];
      sub_10000A784(v269, v141);
      if ((*(double (**)(uint64_t, uint64_t))(v142 + 24))(v141, v142) >= v130)
      {
        swift_bridgeObjectRelease();
        sub_1000563E0((uint64_t)&v296);
        sub_1000207AC(v140, v274, v292, 0);
        swift_bridgeObjectRelease();
        uint64_t v37 = v281;
        uint64_t v39 = v286;
        uint64_t v40 = v258;
        uint64_t v45 = v293;
        goto LABEL_8;
      }
      v143 = BYTE9(v306);
      unint64_t v144 = v304;
      id v145 = v305;
      Swift::Int v146 = v297;
      uint64_t v147 = (uint64_t)v264;
      sub_10008BA40();
      if ((*v263)(v147, 1, v268) != 1)
      {
        swift_bridgeObjectRelease();
        v186 = v244;
        v187 = v268;
        (*v239)(v244, v147, v268);
        v188 = v250[4];
        sub_100054C30();
        v189 = sub_1000559B0((void *)v144, *((uint64_t *)&v144 + 1), v145, v188);
        sub_100054C54();
        (*v238)(v245, v186, v187);
        v190 = sub_100060068((v143 == 2) | v143 & 1);
        v191 = v288 != 2 && sub_100060068(v288 & 1);
        uint64_t v37 = v281;
        uint64_t v39 = v286;
        uint64_t v40 = v258;
        v195 = v259;
        v196 = v287;
        sub_1000563E0((uint64_t)&v296);
        v197 = v190;
        v198 = v240;
        sub_10007A1FC(v254, v195, v245, v189, v197, v191, v240, v130);
        if (v196)
        {
          sub_1000564B8(v198, v241);
          swift_storeEnumTagMultiPayload();
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v45 = v293;
          if (isUniquelyReferenced_nonNull_native) {
            v200 = v253;
          }
          else {
            v200 = (void *)sub_1000532E8(0, v253[2] + 1, 1, (unint64_t)v253);
          }
          v202 = v200[2];
          v201 = v200[3];
          v203 = v202 + 1;
          if (v202 >= v201 >> 1)
          {
            v204 = (void *)sub_1000532E8(v201 > 1, v202 + 1, 1, (unint64_t)v200);
            v205 = v241;
            v253 = v204;
          }
          else
          {
            v253 = v200;
            v204 = v200;
            v205 = v241;
          }
        }
        else
        {
          sub_1000564B8(v198, v242);
          swift_storeEnumTagMultiPayload();
          v206 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v45 = v293;
          if (v206) {
            v207 = v247;
          }
          else {
            v207 = (void *)sub_1000532E8(0, v247[2] + 1, 1, (unint64_t)v247);
          }
          v202 = v207[2];
          v208 = v207[3];
          v203 = v202 + 1;
          if (v202 >= v208 >> 1)
          {
            v204 = (void *)sub_1000532E8(v208 > 1, v202 + 1, 1, (unint64_t)v207);
            v205 = v242;
            v247 = v204;
          }
          else
          {
            v247 = v207;
            v204 = v207;
            v205 = v242;
          }
        }
        v204[2] = v203;
        sub_1000570BC(v205, (uint64_t)v204+ ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80))+ *(void *)(v248 + 72) * v202, type metadata accessor for SessionConfiguration.Backend);
        sub_1000207AC(v289, v274, v292, 0);
        sub_10005651C(v198);
        (*v237)(v244, v268);
        goto LABEL_8;
      }
      sub_10000CC24(v147, &qword_1000AE350);
      if (qword_1000B45E0 != -1) {
        swift_once();
      }
      v148 = v280;
      long long v149 = sub_10000A358(v280, (uint64_t)qword_1000B6E10);
      v150 = v275;
      (*v261)(v275, v149, v148);
      sub_100056308((uint64_t)&v296);
      uint64_t v151 = sub_10008BD30();
      Swift::Int v152 = sub_10008C2F0();
      if (os_log_type_enabled(v151, v152))
      {
        v153 = (uint8_t *)swift_slowAlloc();
        v295 = swift_slowAlloc();
        *(_DWORD *)v153 = v256;
        swift_bridgeObjectRetain();
        v294 = sub_100009D00(v146, *((unint64_t *)&v146 + 1), &v295);
        sub_10008C440();
        swift_bridgeObjectRelease();
        sub_1000563E0((uint64_t)&v296);
        sub_1000563E0((uint64_t)&v296);
        _os_log_impl((void *)&_mh_execute_header, v151, v152, "invalid URL \"%s\"", v153, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*v260)(v275, v280);
      }
      else
      {
        sub_1000563E0((uint64_t)&v296);
        sub_1000563E0((uint64_t)&v296);

        (*v260)(v150, v280);
      }
      uint64_t v37 = v281;
      uint64_t v39 = v286;
      goto LABEL_163;
    }
    swift_bridgeObjectRetain();
    uint64_t v107 = v271;
    sub_10008BC50();
    uint64_t v108 = v272;
    sub_10008BC80();
    (*v283)(v107, v284);
    sub_10008BC60();
    (*v282)(v108, v285);
    int64_t v109 = sub_10008BC40();
    unint64_t v110 = *(void *)(v109 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v37, 1, v109) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1000563E0((uint64_t)&v296);
      sub_10000CC24(v37, (uint64_t *)&unk_1000AF278);
LABEL_163:
      uint64_t v60 = v292;
      uint64_t v45 = v293;
      goto LABEL_164;
    }
    int v111 = sub_10008BC30();
    unint64_t v113 = v112;
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v37, v109);
    uint64_t v114 = v106[2];
    if (v114)
    {
      if (v106[4] == v111 && v106[5] == v113 || (sub_10008C7D0() & 1) != 0) {
        goto LABEL_83;
      }
      if (v114 != 1)
      {
        if (v106[6] == v111 && v106[7] == v113 || (sub_10008C7D0() & 1) != 0)
        {
LABEL_83:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
        if (v114 != 2)
        {
          swift_bridgeObjectRetain();
          v162 = v106 + 9;
          Swift::Int v163 = 2;
          while (1)
          {
            uint64_t v164 = v163 + 1;
            if (__OFADD__(v163, 1)) {
              goto LABEL_257;
            }
            uint64_t v165 = *(v162 - 1) == v111 && *v162 == v113;
            if (v165 || (sub_10008C7D0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_84;
            }
            v162 += 2;
            ++v163;
            if (v164 == v114)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v39 = v286;
              uint64_t v37 = v281;
              goto LABEL_162;
            }
          }
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_161:
    swift_bridgeObjectRelease();
LABEL_162:
    sub_1000563E0((uint64_t)&v296);
    goto LABEL_163;
  }
LABEL_249:
  __break(1u);
LABEL_250:
  __break(1u);
LABEL_251:
  __break(1u);
LABEL_252:
  __break(1u);
LABEL_253:
  __break(1u);
LABEL_254:
  __break(1u);
LABEL_255:
  __break(1u);
LABEL_256:
  __break(1u);
LABEL_257:
  __break(1u);
LABEL_258:
  __break(1u);
LABEL_259:
  unint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void *sub_100052FB8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000A390(&qword_1000AF670);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100054C60(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000530C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000A390(&qword_1000AF668);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100055090(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000531C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000A390(&qword_1000AF6B8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000558A0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000532E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000A390(&qword_1000AF6A0);
  uint64_t v10 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_10008C630();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100056F64(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_100053550(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  unsigned __int8 v7 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  unint64_t v10 = sub_100053C18(v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v11 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_24;
  }
  unint64_t v15 = v10;
  char v16 = v11;
  uint64_t v17 = v9[3];
  swift_bridgeObjectRetain();
  if (v17 >= v14)
  {
    if (a2)
    {
      if (v16) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100053C88();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(unsigned char *)(v21[6] + v15) = v7;
    *(void *)(v21[7] + 8 * v15) = v8;
    uint64_t v22 = v21[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v21[2] = v24;
    uint64_t v25 = v4 - 1;
    if (v4 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (int i = (void *)(a1 + 56); ; i += 2)
    {
      uint64_t v28 = *i;
      unsigned __int8 v27 = *((unsigned char *)i - 8);
      uint64_t v29 = (void *)*a3;
      unint64_t v30 = sub_100053C18(v27);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        break;
      }
      unint64_t v35 = v30;
      char v36 = v31;
      uint64_t v37 = v29[3];
      swift_bridgeObjectRetain();
      if (v37 < v34)
      {
        sub_10005402C(v34, 1);
        unint64_t v38 = sub_100053C18(v27);
        if ((v36 & 1) != (v39 & 1)) {
          goto LABEL_26;
        }
        unint64_t v35 = v38;
      }
      if (v36) {
        goto LABEL_10;
      }
      uint64_t v40 = (void *)*a3;
      *(void *)(*a3 + 8 * (v35 >> 6) + 64) |= 1 << v35;
      *(unsigned char *)(v40[6] + v35) = v27;
      *(void *)(v40[7] + 8 * v35) = v28;
      uint64_t v41 = v40[2];
      BOOL v23 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v23) {
        goto LABEL_25;
      }
      v40[2] = v42;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_10005402C(v14, a2 & 1);
  unint64_t v18 = sub_100053C18(v7);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v15 = v18;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10000A390(&qword_1000B0870);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_10008C880();
  __break(1u);
LABEL_27:
  sub_10008C540(30);
  v43._object = (void *)0x8000000100093960;
  v43._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10008C090(v43);
  sub_10008C620();
  v44._countAndFlagsBits = 39;
  v44._object = (void *)0xE100000000000000;
  sub_10008C090(v44);
  uint64_t result = sub_10008C640();
  __break(1u);
  return result;
}

uint64_t sub_1000538C0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v30 = v4;
  if (!v4) {
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v29 = v3;
  while (1)
  {
    if (v6 >= *(void *)(v3 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_10008C880();
      __break(1u);
      goto LABEL_24;
    }
    long long v35 = *(_OWORD *)(v3 + v5 + 80);
    char v7 = *(unsigned char *)(v3 + v5 + 64);
    uint64_t v8 = *(void *)(v3 + v5 + 72);
    uint64_t v10 = *(void *)(v3 + v5 + 48);
    uint64_t v9 = *(void *)(v3 + v5 + 56);
    uint64_t v12 = *(void *)(v3 + v5 + 32);
    uint64_t v11 = *(void *)(v3 + v5 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v11) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v31 = v10;
    uint64_t v32 = v9;
    BOOL v13 = (void *)*a3;
    unint64_t v15 = sub_100011F50(v12, v11);
    uint64_t v16 = v13[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      goto LABEL_21;
    }
    char v19 = v14;
    if (v13[3] < v18) {
      break;
    }
    if (a2)
    {
      if (v14) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_100053E2C();
      if (v19) {
        goto LABEL_16;
      }
    }
LABEL_12:
    uint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    BOOL v23 = (uint64_t *)(v22[6] + 16 * v15);
    *BOOL v23 = v12;
    v23[1] = v11;
    uint64_t v24 = v22[7] + 48 * v15;
    *(void *)uint64_t v24 = v31;
    *(void *)(v24 + 8) = v32;
    *(unsigned char *)(v24 + 16) = v7;
    *(void *)(v24 + 24) = v8;
    *(_OWORD *)(v24 + 32) = v35;
    uint64_t v25 = v22[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_22;
    }
    ++v6;
    v22[2] = v27;
    v5 += 64;
    a2 = 1;
    uint64_t v3 = v29;
    if (v30 == v6) {
      return swift_bridgeObjectRelease_n();
    }
  }
  sub_1000542FC(v18, a2 & 1);
  unint64_t v20 = sub_100011F50(v12, v11);
  if ((v19 & 1) != (v21 & 1)) {
    goto LABEL_23;
  }
  unint64_t v15 = v20;
  if ((v19 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  swift_allocError();
  swift_willThrow();
  swift_errorRetain();
  sub_10000A390(&qword_1000B0870);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_errorRelease();
  }
LABEL_24:
  sub_10008C540(30);
  v36._object = (void *)0x8000000100093960;
  v36._countAndFlagsBits = 0xD00000000000001BLL;
  sub_10008C090(v36);
  sub_10008C620();
  v37._countAndFlagsBits = 39;
  v37._object = (void *)0xE100000000000000;
  sub_10008C090(v37);
  uint64_t result = sub_10008C640();
  __break(1u);
  return result;
}

unint64_t sub_100053C18(unsigned __int8 a1)
{
  sub_10008C8F0();
  sub_10008C900(a1 + 1);
  Swift::Int v2 = sub_10008C920();
  return sub_10005465C(a1, v2);
}

void *sub_100053C88()
{
  uint64_t v1 = v0;
  sub_10000A390(&qword_1000AF660);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10008C660();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100053E2C()
{
  uint64_t v1 = v0;
  sub_10000A390(&qword_1000AF618);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10008C660();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    BOOL v26 = (void *)(*(void *)(v4 + 48) + v16);
    long long v27 = *(_OWORD *)(v21 + 32);
    *BOOL v26 = v19;
    v26[1] = v18;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v28 = v22;
    *(void *)(v28 + 8) = v23;
    *(unsigned char *)(v28 + 16) = v24;
    *(void *)(v28 + 24) = v25;
    *(_OWORD *)(v28 + 32) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10005402C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000A390(&qword_1000AF660);
  uint64_t result = sub_10008C670();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_10008C8F0();
      sub_10008C900(v26 + 1);
      uint64_t result = sub_10008C920();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000542FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000A390(&qword_1000AF618);
  char v40 = a2;
  uint64_t v6 = sub_10008C670();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 48 * v21;
      uint64_t v33 = *(void *)v32;
      uint64_t v34 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      uint64_t v41 = *(void *)(v32 + 24);
      long long v42 = *(_OWORD *)(v32 + 32);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_10008C8F0();
      sub_10008C050();
      uint64_t result = sub_10008C920();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      *unint64_t v18 = v31;
      v18[1] = v30;
      uint64_t v19 = *(void *)(v7 + 56) + 48 * v17;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v34;
      *(unsigned char *)(v19 + 16) = v35;
      *(void *)(v19 + 24) = v41;
      *(_OWORD *)(v19 + 32) = v42;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_10005465C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000546FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10005473C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10005471C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10005497C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10005473C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000A390((uint64_t *)&unk_1000AF150);
  uint64_t v10 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ServiceEventValue() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_10005497C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A390(&qword_1000AF6A8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  int64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_10000A390(&qword_1000AF6B0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100054B08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_10001A5FC((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_10003CEB8(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_100054BA0(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x302010004uLL >> (8 * a1));
  }
}

unint64_t sub_100054BC4()
{
  unint64_t result = qword_1000B45E8[0];
  if (!qword_1000B45E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B45E8);
  }
  return result;
}

uint64_t sub_100054C18(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_100054C30();
  }
  return result;
}

uint64_t sub_100054C30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100054C3C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_100054C54();
  }
  return result;
}

uint64_t sub_100054C54()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100054C60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10000A390(&qword_1000AF678);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100054D6C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_10008C7D0() & 1) != 0) {
    return 4;
  }
  if (a1 == 0x5F68736572666572 && a2 == 0xED0000656C637963 || (sub_10008C7D0() & 1) != 0) {
    return 5;
  }
  if (a1 == 0x765F646572616873 && a2 == 0xEC00000073656C61 || (sub_10008C7D0() & 1) != 0) {
    return 6;
  }
  if (a1 == 0x6D706F6C65766564 && a2 == 0xEB00000000746E65)
  {
    uint64_t v4 = 0;
LABEL_17:
    swift_bridgeObjectRelease();
    return v4;
  }
  char v6 = sub_10008C7D0();
  swift_bridgeObjectRelease();
  uint64_t v4 = 0;
  if (v6) {
    return v4;
  }
  if (a1 == 0x6E695F656C707061 && a2 == 0xEE006C616E726574)
  {
    uint64_t v4 = 1;
    swift_bridgeObjectRelease();
    return v4;
  }
  char v7 = sub_10008C7D0();
  swift_bridgeObjectRelease();
  if (v7) {
    return 1;
  }
  if (a1 == 1684366707 && a2 == 0xE400000000000000)
  {
    uint64_t v4 = 2;
    swift_bridgeObjectRelease();
    return v4;
  }
  char v8 = sub_10008C7D0();
  swift_bridgeObjectRelease();
  if (v8) {
    return 2;
  }
  uint64_t v4 = 3;
  if (a1 == 0x657361656C6572 && a2 == 0xE700000000000000) {
    goto LABEL_17;
  }
  char v9 = sub_10008C7D0();
  swift_bridgeObjectRelease();
  if (v9) {
    return 3;
  }
  else {
    return 7;
  }
}

char *sub_100055090(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    char v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_100055178@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A390(&qword_1000AF640);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A784(a1, a1[3]);
  sub_100056C84();
  sub_10008C950();
  if (v2) {
    return sub_10000CCE8((uint64_t)a1);
  }
  LOBYTE(v47) = 4;
  uint64_t v9 = sub_10008C710();
  uint64_t v12 = v11;
  uint64_t v40 = v9;
  LOBYTE(v47) = 5;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_10008C6F0();
  uint64_t v38 = v12;
  sub_10000A390(&qword_1000AF648);
  char v46 = 6;
  sub_100056E90(&qword_1000AF650, &qword_1000AF648, (void (*)(void))sub_100056CD8);
  sub_10008C6E0();
  char v39 = v47;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_10008C750();
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v36 = a2;
  uint64_t v45 = v14;
  if (v14)
  {
    uint64_t v35 = v6;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v16 = _swiftEmptyArrayStorage;
    uint64_t v43 = v13;
    uint64_t v44 = v5;
    while (1)
    {
      uint64_t v17 = *(unsigned __int8 *)(v13 + v15 + 32);
      int v18 = 1;
      char v19 = 0;
      int v20 = 0;
      switch(v17)
      {
        case 1:
          LOBYTE(v17) = (sub_10008C7D0() & 1) == 0;
          goto LABEL_22;
        case 2:
          int v20 = 0;
          int v18 = 0;
          char v19 = 1;
          goto LABEL_12;
        case 3:
          char v19 = 0;
          int v20 = 1;
          goto LABEL_12;
        case 4:
          goto LABEL_12;
        case 5:
          char v19 = 0;
          int v20 = 0;
          int v18 = 0;
          goto LABEL_12;
        case 6:
          char v19 = 0;
          int v20 = 0;
          int v18 = 0;
LABEL_12:
          int v41 = v20;
          int v42 = v18;
          if (sub_10008C7D0())
          {
            LOBYTE(v17) = 0;
LABEL_22:
            swift_bridgeObjectRelease();
            goto LABEL_23;
          }
          unsigned __int8 v21 = sub_10008C7D0();
          if (v21) {
            LOBYTE(v17) = 1;
          }
          else {
            LOBYTE(v17) = 2;
          }
          if ((v21 | v19)) {
            goto LABEL_22;
          }
          if (sub_10008C7D0())
          {
            LOBYTE(v17) = 2;
            goto LABEL_22;
          }
          if (v41 & v42)
          {
            LOBYTE(v17) = 3;
            goto LABEL_22;
          }
          char v24 = sub_10008C7D0();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
            uint64_t v5 = v44;
            goto LABEL_28;
          }
          LOBYTE(v17) = 3;
LABEL_23:
          uint64_t v5 = v44;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = sub_1000530C8(0, v16[2] + 1, 1, v16);
          }
          unint64_t v23 = v16[2];
          unint64_t v22 = v16[3];
          if (v23 >= v22 >> 1) {
            uint64_t v16 = sub_1000530C8((void *)(v22 > 1), v23 + 1, 1, v16);
          }
          v16[2] = v23 + 1;
          *((unsigned char *)v16 + v23 + 32) = v17;
LABEL_28:
          uint64_t v13 = v43;
          if (v45 == ++v15)
          {
            swift_bridgeObjectRelease();
            uint64_t v6 = v35;
            goto LABEL_34;
          }
          break;
        default:
          goto LABEL_22;
      }
    }
  }
  uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_34:
  uint64_t v25 = swift_bridgeObjectRelease();
  __chkstk_darwin(v25);
  *(&v34 - 2) = (uint64_t)v8;
  unint64_t v26 = sub_100050A04((void (*)(uint64_t *__return_ptr, char *))sub_100056D2C, (uint64_t)(&v34 - 4), (uint64_t)v16);
  swift_bridgeObjectRelease();
  if (v26[2])
  {
    sub_10000A390(&qword_1000AF660);
    BOOL v27 = (void *)sub_10008C680();
  }
  else
  {
    BOOL v27 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = v36;
  char v47 = v27;
  uint64_t v29 = swift_bridgeObjectRetain();
  sub_100053550(v29, 1, &v47);
  swift_bridgeObjectRelease();
  uint64_t v30 = v47;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_retain();
  sub_10000CCE8((uint64_t)a1);
  swift_release();
  uint64_t v31 = v39;
  swift_bridgeObjectRelease();
  uint64_t v32 = v38;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v28 = v40;
  *(void *)(v28 + 8) = v32;
  char v33 = BYTE4(v37);
  *(_DWORD *)(v28 + 16) = v37;
  *(unsigned char *)(v28 + 20) = v33 & 1;
  *(void *)(v28 + 24) = v31;
  *(void *)(v28 + 32) = v30;
  return result;
}

uint64_t sub_1000558A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10000A390(&qword_1000AF6C0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_1000559B0(void *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  int v8 = ~a3;
  uint64_t v77 = type metadata accessor for ServiceEventValue();
  uint64_t v9 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v11 = (uint64_t *)((char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v8) {
    goto LABEL_9;
  }
  if ((a3 & 1) == 0)
  {
    sub_100054C30();
    goto LABEL_10;
  }
  if (!*(void *)(a4 + 16)) {
    goto LABEL_9;
  }
  sub_100054C30();
  unint64_t v12 = sub_100011F50((uint64_t)a1, a2);
  if ((v13 & 1) == 0)
  {
    sub_100054C3C((uint64_t)a1, a2, a3);
    goto LABEL_9;
  }
  uint64_t v14 = *(void *)(a4 + 56) + 16 * v12;
  uint64_t v15 = *(void **)v14;
  int v16 = *(unsigned __int8 *)(v14 + 8);
  swift_bridgeObjectRetain();
  sub_100054C3C((uint64_t)a1, a2, a3);
  if (v16)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    a1 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  a1 = v15;
LABEL_10:
  uint64_t result = (uint64_t)sub_1000531C4(0, a1[2], 0, _swiftEmptyArrayStorage);
  uint64_t v80 = (void *)result;
  uint64_t v18 = a1[2];
  if (v18)
  {
    unint64_t v19 = 0;
    int v20 = a1 + 4;
    uint64_t v64 = "Swift/NativeDictionary.swift";
    unint64_t v63 = 0x80000001000939A0;
    uint64_t v66 = v18;
    uint64_t v67 = a1;
    uint64_t v65 = a1 + 4;
    while (1)
    {
      if (v19 >= a1[2])
      {
        __break(1u);
        return result;
      }
      char v24 = &v20[9 * v19];
      if (!v24[5]) {
        break;
      }
LABEL_14:
      if (++v19 == v18)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v80;
      }
    }
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = v24[2];
    uint64_t v28 = v24[3];
    uint64_t v68 = v19;
    uint64_t v69 = v27;
    uint64_t v29 = v24[4];
    uint64_t v30 = v24[6];
    uint64_t v31 = v24[7];
    uint64_t v32 = v24[8];
    swift_bridgeObjectRetain();
    uint64_t v75 = v26;
    swift_bridgeObjectRetain();
    uint64_t v70 = v28;
    swift_bridgeObjectRetain();
    uint64_t v71 = v29;
    uint64_t v72 = v32;
    uint64_t v73 = v31;
    uint64_t v74 = v30;
    sub_10003FB20(v29, 0);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_10008C2A0();
    uint64_t v79 = v33;
    uint64_t v34 = *(void *)(v25 + 16);
    uint64_t v76 = v25;
    if (v34)
    {
      uint64_t v35 = (Swift::Int *)(v25 + 40);
      do
      {
        Swift::Int v36 = *(v35 - 1);
        Swift::Int v37 = *v35;
        swift_bridgeObjectRetain();
        sub_10001E2C4(v78, v36, v37);
        swift_bridgeObjectRelease();
        v35 += 2;
        --v34;
      }
      while (v34);
      swift_bridgeObjectRelease();
      uint64_t v38 = v79;
    }
    else
    {
      uint64_t v38 = v33;
      swift_bridgeObjectRelease();
    }
    unint64_t v19 = v68;
    uint64_t v39 = v75;
    int64_t v40 = *(void *)(v75 + 16);
    if (v40)
    {
      uint64_t v68 = v38;
      v78[0] = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1000546FC(0, v40, 0);
      uint64_t v41 = v78[0];
      int v42 = (uint64_t *)(v39 + 40);
      do
      {
        uint64_t v43 = *v42;
        void *v11 = *(v42 - 1);
        v11[1] = v43;
        swift_storeEnumTagMultiPayload();
        v78[0] = v41;
        unint64_t v44 = *(void *)(v41 + 16);
        unint64_t v45 = *(void *)(v41 + 24);
        swift_bridgeObjectRetain();
        if (v44 >= v45 >> 1)
        {
          sub_1000546FC(v45 > 1, v44 + 1, 1);
          uint64_t v41 = v78[0];
        }
        v42 += 2;
        *(void *)(v41 + 16) = v44 + 1;
        sub_1000570BC((uint64_t)v11, v41+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v44, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
        --v40;
      }
      while (v40);
      swift_bridgeObjectRelease();
      uint64_t v38 = v68;
    }
    uint64_t v46 = XPCIncomingConnection.init(conn:)(v38);
    uint64_t v48 = v47;
    uint64_t v49 = v69;
    uint64_t v50 = v70;
    if (v69 == 0x776F6C6C61 && v70 == 0xE500000000000000 || (sub_10008C7D0() & 1) != 0)
    {
      uint64_t v51 = v46;
      swift_bridgeObjectRelease();
      uint64_t v52 = &type metadata for EventAllowFilter;
      char v53 = &off_1000A7B18;
      goto LABEL_32;
    }
    if (v49 == 0x65766F6D6572 && v50 == 0xE600000000000000 || (sub_10008C7D0() & 1) != 0)
    {
      uint64_t v51 = v46;
      swift_bridgeObjectRelease();
      uint64_t v52 = &type metadata for EventRemoveFilter;
      char v53 = &off_1000A7B30;
      goto LABEL_32;
    }
    if (v49 == 0x363532616873 && v50 == 0xE600000000000000 || (sub_10008C7D0() & 1) != 0)
    {
      uint64_t v51 = v46;
      swift_bridgeObjectRelease();
      uint64_t v52 = &type metadata for EventSHA256KeyFilter;
      char v53 = &off_1000A7B48;
      goto LABEL_32;
    }
    if (v49 == 0x73696C6574696877 && v50 == 0xEF7365756C615674 || (sub_10008C7D0() & 1) != 0)
    {
      uint64_t v51 = v46;
      swift_bridgeObjectRelease();
      uint64_t v52 = &type metadata for EventAllowValuesFilter;
      char v53 = &off_1000A7B60;
      goto LABEL_32;
    }
    if (v49 == 0x73696C6B63616C62 && v50 == 0xEF7365756C615674 || (sub_10008C7D0() & 1) != 0)
    {
      uint64_t v51 = v46;
      swift_bridgeObjectRelease();
      uint64_t v52 = &type metadata for EventDenyValuesFilter;
      char v53 = &off_1000A7B78;
      goto LABEL_32;
    }
    if (v49 == 0xD000000000000018 && v50 == v63)
    {
      uint64_t v51 = v46;
    }
    else
    {
      if ((sub_10008C7D0() & 1) == 0)
      {
        if (v49 == 0x646E65707061 && v50 == 0xE600000000000000 || (sub_10008C7D0() & 1) != 0)
        {
          uint64_t v51 = v46;
          swift_bridgeObjectRelease();
          uint64_t v52 = &type metadata for EventAppendToKeyFilter;
          char v53 = &off_1000A7BA8;
        }
        else
        {
          if (v49 != 0x646E6570657270 || v50 != 0xE700000000000000)
          {
            char v60 = sub_10008C7D0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10003FB84(v71, 0);
            if ((v60 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
              uint64_t v18 = v66;
              a1 = v67;
              int v20 = v65;
              goto LABEL_14;
            }
            uint64_t v51 = v46;
            uint64_t v52 = &type metadata for EventPrependToKeyFilter;
            char v53 = &off_1000A7BC0;
LABEL_33:
            uint64_t v54 = (void (*)(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>))v53[1];
            v78[3] = (uint64_t)v52;
            v78[4] = (uint64_t)v53;
            uint64_t v55 = sub_10001A5FC(v78);
            v54(v51, v48, v55);
            uint64_t v56 = v80;
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1000531C4(0, v56[2] + 1, 1, v56);
              uint64_t v56 = (void *)isUniquelyReferenced_nonNull_native;
              uint64_t v80 = (void *)isUniquelyReferenced_nonNull_native;
            }
            unint64_t v59 = v56[2];
            unint64_t v58 = v56[3];
            if (v59 >= v58 >> 1)
            {
              uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1000531C4((void *)(v58 > 1), v59 + 1, 1, v56);
              uint64_t v56 = (void *)isUniquelyReferenced_nonNull_native;
              uint64_t v80 = (void *)isUniquelyReferenced_nonNull_native;
            }
            __chkstk_darwin(isUniquelyReferenced_nonNull_native);
            unint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, uint64_t *, ValueMetadata *))(v23 + 16))(v22, v55, v52);
            sub_100054B08(v59, (uint64_t)v22, (uint64_t *)&v80, (uint64_t)v52, (uint64_t)v53);
            uint64_t v80 = v56;
            uint64_t result = sub_10000CCE8((uint64_t)v78);
            goto LABEL_13;
          }
          uint64_t v51 = v46;
          swift_bridgeObjectRelease();
          uint64_t v52 = &type metadata for EventPrependToKeyFilter;
          char v53 = &off_1000A7BC0;
        }
LABEL_32:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10003FB84(v71, 0);
        goto LABEL_33;
      }
      uint64_t v51 = v46;
    }
    swift_bridgeObjectRelease();
    uint64_t v52 = &type metadata for EventInsertStringKeyFilter;
    char v53 = &off_1000A7B90;
    goto LABEL_32;
  }
  uint64_t v61 = result;
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_100056308(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000563E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000564B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005651C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10005657C()
{
  unint64_t result = qword_1000AF620;
  if (!qword_1000AF620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF620);
  }
  return result;
}

uint64_t sub_1000565D0()
{
  return sub_10005660C(&qword_1000AF628, &qword_1000AF630);
}

uint64_t sub_10005660C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A540(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100056654()
{
  unint64_t result = qword_1000AF638;
  if (!qword_1000AF638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF638);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StorebagEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100056778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagEnvironment()
{
  return &type metadata for StorebagEnvironment;
}

uint64_t destroy for Storebag()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Storebag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Storebag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Storebag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Storebag(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Storebag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Storebag()
{
  return &type metadata for Storebag;
}

unsigned char *storeEnumTagSinglePayload for Storebag.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100056AA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Storebag.Error()
{
  return &type metadata for Storebag.Error;
}

uint64_t destroy for Storebag._StorebagRoot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Storebag._StorebagRoot(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Storebag._StorebagRoot()
{
  return &type metadata for Storebag._StorebagRoot;
}

unint64_t sub_100056C84()
{
  unint64_t result = qword_1000B4A70[0];
  if (!qword_1000B4A70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B4A70);
  }
  return result;
}

unint64_t sub_100056CD8()
{
  unint64_t result = qword_1000AF658;
  if (!qword_1000AF658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF658);
  }
  return result;
}

uint64_t sub_100056D2C@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  sub_10000A390(&qword_1000AF640);
  sub_100056E3C();
  sub_10008C730();
  if (v2)
  {
    swift_errorRelease();
    sub_10000A390(&qword_1000AF688);
    sub_100056E90(&qword_1000AF690, &qword_1000AF688, (void (*)(void))sub_100056F10);
    uint64_t result = sub_10008C730();
    *a2 = v4;
    a2[1] = v6;
  }
  else
  {
    uint64_t result = sub_10000A43C(v6, v7);
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

unint64_t sub_100056E3C()
{
  unint64_t result = qword_1000AF680;
  if (!qword_1000AF680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF680);
  }
  return result;
}

uint64_t sub_100056E90(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A540(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100056F10()
{
  unint64_t result = qword_1000AF698;
  if (!qword_1000AF698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF698);
  }
  return result;
}

uint64_t sub_100056F64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_1000570BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for Storebag._StorebagRoot.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA)
  {
    unsigned int v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 6;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000571D4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 6;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 4) {
    unsigned int v8 = v7 - 3;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 4) {
    return v8 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for Storebag._StorebagRoot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v7 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1000572BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t sub_1000572E4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 4) {
    return v1 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1000572F8(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for Storebag._StorebagRoot.CodingKeys()
{
  return &type metadata for Storebag._StorebagRoot.CodingKeys;
}

unint64_t sub_10005731C()
{
  unint64_t result = qword_1000B4B80;
  if (!qword_1000B4B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B4B80);
  }
  return result;
}

unint64_t sub_100057374()
{
  unint64_t result = qword_1000B4B88[0];
  if (!qword_1000B4B88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B4B88);
  }
  return result;
}

void sub_1000573C8()
{
  qword_1000B6E28 = (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_1000573DC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_10001E2C4(&v17, v12, v13);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10005755C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_1000B4C10 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1000B6E28;
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t result = sub_1000573DC(v7, v6);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

void *sub_1000575E4(uint64_t a1)
{
  return sub_10005997C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100057600(uint64_t a1)
{
  return sub_100059EDC(a1, *v1);
}

uint64_t sub_10005761C(uint64_t a1)
{
  return sub_10005A230(a1, *v1);
}

uint64_t sub_100057638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v87 = a3;
  uint64_t v97 = sub_10000A390(&qword_1000AF168);
  __chkstk_darwin(v97);
  uint64_t v106 = (uint64_t)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A390(&qword_1000AEAA8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v94 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v82 - v9;
  uint64_t v11 = type metadata accessor for ServiceEventValue();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  Swift::String v92 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v91 = (double *)((char *)&v82 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v90 = (uint64_t)&v82 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v89 = (uint64_t)&v82 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  Swift::String v96 = (uint64_t *)((char *)&v82 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v103 = (uint64_t)&v82 - v24;
  __chkstk_darwin(v23);
  uint64_t v98 = (uint64_t)&v82 - v25;
  uint64_t v26 = *(void *)(a2 + 56);
  uint64_t v100 = a2 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v101 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v105 = a2;
  uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v93 = _swiftEmptyArrayStorage;
  uint64_t v88 = a1;
  uint64_t v99 = v12;
  if (v29) {
    goto LABEL_8;
  }
LABEL_35:
  int64_t v56 = v31 + 1;
  if (__OFADD__(v31, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v56 < v101)
  {
    unint64_t v57 = *(void *)(v100 + 8 * v56);
    ++v31;
    if (v57) {
      goto LABEL_48;
    }
    int64_t v31 = v56 + 1;
    if (v56 + 1 >= v101) {
      goto LABEL_54;
    }
    unint64_t v57 = *(void *)(v100 + 8 * v31);
    if (v57) {
      goto LABEL_48;
    }
    int64_t v31 = v56 + 2;
    if (v56 + 2 >= v101) {
      goto LABEL_54;
    }
    unint64_t v57 = *(void *)(v100 + 8 * v31);
    if (v57)
    {
LABEL_48:
      uint64_t v112 = (v57 - 1) & v57;
      for (unint64_t i = __clz(__rbit64(v57)) + (v31 << 6); ; unint64_t i = __clz(__rbit64(v29)) | (v31 << 6))
      {
        unint64_t v59 = (uint64_t *)(*(void *)(v105 + 48) + 16 * i);
        uint64_t v60 = *v59;
        uint64_t v61 = v59[1];
        uint64_t v62 = *(void *)(a1 + 16);
        uint64_t v63 = *(void *)(v62 + 16);
        uint64_t v104 = v60;
        if (v63)
        {
          swift_bridgeObjectRetain_n();
          unint64_t v64 = sub_100011F50(v60, v61);
          if (v65)
          {
            uint64_t v66 = *(void *)(v62 + 56);
            uint64_t v67 = v99;
            sub_100017AC8(v66 + *(void *)(v99 + 72) * v64, (uint64_t)v10);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v10, 0, 1, v11);
          }
          else
          {
            (*v107)(v10, 1, 1, v11);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*v107)(v10, 1, 1, v11);
          swift_bridgeObjectRetain();
        }
        if ((*v30)(v10, 1, v11) == 1)
        {
          swift_bridgeObjectRelease();
          sub_10000CC24((uint64_t)v10, &qword_1000AEAA8);
          unint64_t v29 = v112;
          if (!v112) {
            goto LABEL_35;
          }
        }
        else
        {
          sub_100017B94((uint64_t)v10, v98);
          uint64_t v33 = *(void *)(v87 + 16);
          if (v33)
          {
            uint64_t v83 = v10;
            uint64_t v34 = v99;
            uint64_t v35 = v87 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80));
            swift_bridgeObjectRetain();
            uint64_t v95 = *(void *)(v34 + 72);
            while (2)
            {
              uint64_t v102 = v33;
              int64_t v36 = v31;
              Swift::Int v37 = v30;
              uint64_t v38 = v103;
              sub_100017AC8(v35, v103);
              uint64_t v39 = (double *)(v106 + *(int *)(v97 + 48));
              uint64_t v40 = v38;
              uint64_t v30 = v37;
              int64_t v31 = v36;
              sub_100017AC8(v40, v106);
              sub_100017AC8(v98, (uint64_t)v39);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              int v42 = v96;
              switch(EnumCaseMultiPayload)
              {
                case 0:
                  sub_100017AC8(v106, (uint64_t)v96);
                  if (swift_getEnumCaseMultiPayload())
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_13;
                  }
                  uint64_t v85 = *v42;
                  uint64_t v84 = sub_10008C020();
                  uint64_t v46 = v45;
                  uint64_t v86 = v45;
                  swift_bridgeObjectRelease();
                  uint64_t v110 = v84;
                  uint64_t v111 = v46;
                  uint64_t v47 = sub_10008C020();
                  uint64_t v49 = v48;
                  swift_bridgeObjectRelease();
                  uint64_t v108 = v47;
                  uint64_t v109 = v49;
                  sub_10002B864();
                  char v44 = sub_10008C460();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_26;
                case 1:
                  sub_100017AC8(v106, v89);
                  if (swift_getEnumCaseMultiPayload() != 1) {
                    goto LABEL_13;
                  }
                  uint64_t v43 = &v113;
                  goto LABEL_20;
                case 2:
                  sub_100017AC8(v106, v90);
                  if (swift_getEnumCaseMultiPayload() != 2) {
                    goto LABEL_13;
                  }
                  uint64_t v43 = &v114;
LABEL_20:
                  char v44 = *(void *)*(v43 - 32) == *(void *)v39;
                  goto LABEL_26;
                case 3:
                  sub_100017AC8(v106, (uint64_t)v91);
                  if (swift_getEnumCaseMultiPayload() != 3) {
                    goto LABEL_13;
                  }
                  char v44 = *v91 == *v39;
                  goto LABEL_26;
                case 4:
                  sub_100017AC8(v106, (uint64_t)v92);
                  if (swift_getEnumCaseMultiPayload() != 4) {
                    goto LABEL_13;
                  }
                  char v44 = *v92 ^ *(unsigned char *)v39 ^ 1;
LABEL_26:
                  sub_1000329C0(v106);
                  sub_1000329C0(v103);
                  if ((v44 & 1) == 0) {
                    goto LABEL_14;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  a1 = v88;
                  unint64_t v10 = v83;
                  goto LABEL_34;
                default:
LABEL_13:
                  sub_10000CC24(v106, &qword_1000AF168);
                  sub_1000329C0(v103);
LABEL_14:
                  v35 += v95;
                  uint64_t v33 = v102 - 1;
                  if (v102 != 1) {
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  unint64_t v10 = v83;
                  break;
              }
              break;
            }
          }
          uint64_t v50 = v93;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v50 = sub_10002863C(0, v50[2] + 1, 1, v50);
          }
          a1 = v88;
          unint64_t v52 = v50[2];
          unint64_t v51 = v50[3];
          uint64_t v93 = v50;
          uint64_t v53 = v104;
          if (v52 >= v51 >> 1)
          {
            uint64_t v93 = sub_10002863C((void *)(v51 > 1), v52 + 1, 1, v93);
            uint64_t v53 = v104;
          }
          uint64_t v54 = v93;
          v93[2] = v52 + 1;
          uint64_t v55 = &v54[2 * v52];
          v55[4] = v53;
          v55[5] = v61;
LABEL_34:
          sub_1000329C0(v98);
          unint64_t v29 = v112;
          if (!v112) {
            goto LABEL_35;
          }
        }
LABEL_8:
        uint64_t v112 = (v29 - 1) & v29;
      }
    }
    int64_t v58 = v56 + 3;
    if (v58 < v101)
    {
      unint64_t v57 = *(void *)(v100 + 8 * v58);
      if (v57)
      {
        int64_t v31 = v58;
        goto LABEL_48;
      }
      while (1)
      {
        int64_t v31 = v58 + 1;
        if (__OFADD__(v58, 1)) {
          break;
        }
        if (v31 >= v101) {
          goto LABEL_54;
        }
        unint64_t v57 = *(void *)(v100 + 8 * v31);
        ++v58;
        if (v57) {
          goto LABEL_48;
        }
      }
LABEL_65:
      __break(1u);
      JUMPOUT(0x100057FF0);
    }
  }
LABEL_54:
  swift_release();
  uint64_t v68 = v93;
  uint64_t v69 = *(void *)(a1 + 16);
  uint64_t v70 = v93[2];
  if (v70)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = v68 + 5;
    do
    {
      uint64_t v74 = *(v71 - 1);
      uint64_t v75 = *v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v76 = sub_100011F50(v74, v75);
      char v78 = v77;
      swift_bridgeObjectRelease();
      if (v78)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v110 = v69;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1000375BC();
          uint64_t v69 = v110;
        }
        swift_bridgeObjectRelease();
        uint64_t v73 = v94;
        sub_100017B94(*(void *)(v69 + 56) + *(void *)(v99 + 72) * v76, v94);
        sub_100037C60(v76, v69);
        swift_bridgeObjectRelease();
        uint64_t v72 = 0;
      }
      else
      {
        uint64_t v72 = 1;
        uint64_t v73 = v94;
      }
      v71 += 2;
      (*v107)((char *)v73, v72, 1, v11);
      sub_10000CC24(v73, &qword_1000AEAA8);
      swift_bridgeObjectRelease();
      --v70;
    }
    while (v70);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v80 = v88;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v80 + 16) = v69;
  return result;
}

uint64_t sub_100058004(uint64_t a1)
{
  return sub_100057638(a1, *v1, v1[1]);
}

uint64_t sub_100058020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v87 = a3;
  uint64_t v96 = sub_10000A390(&qword_1000AF168);
  __chkstk_darwin(v96);
  uint64_t v105 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A390(&qword_1000AEAA8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v94 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v81 - v9;
  uint64_t v11 = type metadata accessor for ServiceEventValue();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v93 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  Swift::String v92 = (double *)((char *)&v81 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v91 = (uint64_t *)((char *)&v81 - v18);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v90 = (uint64_t *)((char *)&v81 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v89 = (uint64_t *)((char *)&v81 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v102 = (uint64_t)&v81 - v24;
  __chkstk_darwin(v23);
  uint64_t v97 = (uint64_t)&v81 - v25;
  uint64_t v26 = *(void *)(a2 + 56);
  uint64_t v99 = a2 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v100 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v106 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v104 = a2;
  swift_bridgeObjectRetain();
  int64_t v31 = 0;
  uint64_t v88 = _swiftEmptyArrayStorage;
  uint64_t v98 = v12;
  if (v29) {
    goto LABEL_8;
  }
LABEL_35:
  int64_t v56 = v31 + 1;
  if (__OFADD__(v31, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v56 < v100)
  {
    unint64_t v57 = *(void *)(v99 + 8 * v56);
    ++v31;
    if (v57) {
      goto LABEL_48;
    }
    int64_t v31 = v56 + 1;
    if (v56 + 1 >= v100) {
      goto LABEL_54;
    }
    unint64_t v57 = *(void *)(v99 + 8 * v31);
    if (v57) {
      goto LABEL_48;
    }
    int64_t v31 = v56 + 2;
    if (v56 + 2 >= v100) {
      goto LABEL_54;
    }
    unint64_t v57 = *(void *)(v99 + 8 * v31);
    if (v57)
    {
LABEL_48:
      uint64_t v33 = (v57 - 1) & v57;
      for (unint64_t i = __clz(__rbit64(v57)) + (v31 << 6); ; unint64_t i = v32 | (v31 << 6))
      {
        unint64_t v111 = v33;
        unint64_t v59 = (uint64_t *)(*(void *)(v104 + 48) + 16 * i);
        uint64_t v60 = *v59;
        uint64_t v61 = v59[1];
        uint64_t v62 = *(void *)(a1 + 16);
        uint64_t v63 = *(void *)(v62 + 16);
        uint64_t v103 = v60;
        if (v63)
        {
          swift_bridgeObjectRetain_n();
          unint64_t v64 = sub_100011F50(v60, v61);
          if (v65)
          {
            uint64_t v66 = v98;
            sub_100017AC8(*(void *)(v62 + 56) + *(void *)(v98 + 72) * v64, (uint64_t)v10);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v10, 0, 1, v11);
          }
          else
          {
            (*v106)(v10, 1, 1, v11);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*v106)(v10, 1, 1, v11);
          swift_bridgeObjectRetain();
        }
        if ((*v30)(v10, 1, v11) == 1)
        {
          swift_bridgeObjectRelease();
          sub_10000CC24((uint64_t)v10, &qword_1000AEAA8);
          unint64_t v29 = v111;
          if (!v111) {
            goto LABEL_35;
          }
        }
        else
        {
          sub_100017B94((uint64_t)v10, v97);
          uint64_t v35 = *(void *)(v87 + 16);
          if (v35)
          {
            uint64_t v82 = v61;
            uint64_t v83 = a1;
            uint64_t v36 = v98;
            uint64_t v37 = v87 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
            swift_bridgeObjectRetain();
            uint64_t v95 = *(void *)(v36 + 72);
            while (2)
            {
              uint64_t v101 = v35;
              uint64_t v38 = v30;
              uint64_t v39 = v102;
              sub_100017AC8(v37, v102);
              uint64_t v40 = v39;
              uint64_t v30 = v38;
              uint64_t v41 = (double *)(v105 + *(int *)(v96 + 48));
              sub_100017AC8(v40, v105);
              sub_100017AC8(v97, (uint64_t)v41);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  sub_100017AC8(v105, (uint64_t)v89);
                  if (swift_getEnumCaseMultiPayload())
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_13;
                  }
                  uint64_t v85 = *v89;
                  uint64_t v84 = sub_10008C020();
                  uint64_t v45 = v44;
                  uint64_t v86 = v44;
                  swift_bridgeObjectRelease();
                  uint64_t v109 = v84;
                  uint64_t v110 = v45;
                  uint64_t v46 = sub_10008C020();
                  uint64_t v48 = v47;
                  swift_bridgeObjectRelease();
                  uint64_t v107 = v46;
                  uint64_t v108 = v48;
                  sub_10002B864();
                  char v43 = sub_10008C460();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_26;
                case 1u:
                  sub_100017AC8(v105, (uint64_t)v90);
                  if (swift_getEnumCaseMultiPayload() != 1) {
                    goto LABEL_13;
                  }
                  int v42 = v90;
                  goto LABEL_20;
                case 2u:
                  sub_100017AC8(v105, (uint64_t)v91);
                  if (swift_getEnumCaseMultiPayload() != 2) {
                    goto LABEL_13;
                  }
                  int v42 = v91;
LABEL_20:
                  char v43 = *v42 == *(void *)v41;
                  goto LABEL_26;
                case 3u:
                  sub_100017AC8(v105, (uint64_t)v92);
                  if (swift_getEnumCaseMultiPayload() != 3) {
                    goto LABEL_13;
                  }
                  char v43 = *v92 == *v41;
                  goto LABEL_26;
                case 4u:
                  sub_100017AC8(v105, (uint64_t)v93);
                  if (swift_getEnumCaseMultiPayload() != 4) {
                    goto LABEL_13;
                  }
                  char v43 = *v93 ^ *(unsigned char *)v41 ^ 1;
LABEL_26:
                  sub_1000329C0(v105);
                  sub_1000329C0(v102);
                  if ((v43 & 1) == 0) {
                    goto LABEL_14;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v49 = v88;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v88 = sub_10002863C(0, v49[2] + 1, 1, v49);
                  }
                  a1 = v83;
                  unint64_t v51 = v88[2];
                  unint64_t v50 = v88[3];
                  uint64_t v52 = v103;
                  if (v51 >= v50 >> 1) {
                    uint64_t v88 = sub_10002863C((void *)(v50 > 1), v51 + 1, 1, v88);
                  }
                  uint64_t v53 = v88;
                  v88[2] = v51 + 1;
                  uint64_t v54 = &v53[2 * v51];
                  uint64_t v55 = v82;
                  v54[4] = v52;
                  v54[5] = v55;
                  break;
                default:
LABEL_13:
                  sub_10000CC24(v105, &qword_1000AF168);
                  sub_1000329C0(v102);
LABEL_14:
                  v37 += v95;
                  uint64_t v35 = v101 - 1;
                  if (v101 != 1) {
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  a1 = v83;
                  break;
              }
              break;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          sub_1000329C0(v97);
          unint64_t v29 = v111;
          if (!v111) {
            goto LABEL_35;
          }
        }
LABEL_8:
        unint64_t v32 = __clz(__rbit64(v29));
        uint64_t v33 = (v29 - 1) & v29;
      }
    }
    int64_t v58 = v56 + 3;
    if (v58 < v100)
    {
      unint64_t v57 = *(void *)(v99 + 8 * v58);
      if (v57)
      {
        int64_t v31 = v58;
        goto LABEL_48;
      }
      while (1)
      {
        int64_t v31 = v58 + 1;
        if (__OFADD__(v58, 1)) {
          break;
        }
        if (v31 >= v100) {
          goto LABEL_54;
        }
        unint64_t v57 = *(void *)(v99 + 8 * v31);
        ++v58;
        if (v57) {
          goto LABEL_48;
        }
      }
LABEL_65:
      __break(1u);
      JUMPOUT(0x1000589FCLL);
    }
  }
LABEL_54:
  swift_release();
  uint64_t v67 = a1;
  uint64_t v68 = *(void *)(a1 + 16);
  uint64_t v69 = v88;
  uint64_t v70 = v88[2];
  if (v70)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = v69 + 5;
    do
    {
      uint64_t v74 = *(v71 - 1);
      uint64_t v75 = *v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v76 = sub_100011F50(v74, v75);
      char v78 = v77;
      swift_bridgeObjectRelease();
      if (v78)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v109 = v68;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1000375BC();
          uint64_t v68 = v109;
        }
        swift_bridgeObjectRelease();
        uint64_t v73 = v94;
        sub_100017B94(*(void *)(v68 + 56) + *(void *)(v98 + 72) * v76, v94);
        sub_100037C60(v76, v68);
        swift_bridgeObjectRelease();
        uint64_t v72 = 0;
      }
      else
      {
        uint64_t v72 = 1;
        uint64_t v73 = v94;
      }
      v71 += 2;
      (*v106)((char *)v73, v72, 1, v11);
      sub_10000CC24(v73, &qword_1000AEAA8);
      swift_bridgeObjectRelease();
      --v70;
    }
    while (v70);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v67 + 16) = v68;
  return result;
}

uint64_t sub_100058A10(uint64_t a1)
{
  return sub_100058020(a1, *v1, v1[1]);
}

uint64_t sub_100058A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10000A390(&qword_1000AEAA8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ServiceEventValue();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v53 = (uint64_t)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v12);
  if (!*(void *)(a3 + 16)) {
    return result;
  }
  v48[1] = v3;
  uint64_t v16 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v52 = (uint64_t)v48 - v15;
  sub_100017AC8(v16, (uint64_t)v48 - v15);
  uint64_t v17 = *(void *)(a2 + 56);
  uint64_t v54 = a2 + 56;
  v48[0] = a1;
  uint64_t v18 = *(void **)(a1 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v17;
  int64_t v55 = (unint64_t)(v19 + 63) >> 6;
  int64_t v56 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v50 = v10;
  uint64_t v51 = a2;
  if (v21) {
    goto LABEL_25;
  }
LABEL_8:
  while (2)
  {
    int64_t v23 = v22 + 1;
    if (!__OFADD__(v22, 1))
    {
      if (v23 < v55)
      {
        unint64_t v24 = *(void *)(v54 + 8 * v23);
        ++v22;
        if (v24) {
          goto LABEL_21;
        }
        int64_t v22 = v23 + 1;
        if (v23 + 1 >= v55) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v54 + 8 * v22);
        if (v24) {
          goto LABEL_21;
        }
        int64_t v22 = v23 + 2;
        if (v23 + 2 >= v55) {
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v54 + 8 * v22);
        if (v24)
        {
LABEL_21:
          unint64_t v21 = (v24 - 1) & v24;
          for (unint64_t i = __clz(__rbit64(v24)) + (v22 << 6); ; unint64_t i = v33 | (v22 << 6))
          {
            uint64_t v27 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
            uint64_t v29 = *v27;
            uint64_t v28 = v27[1];
            uint64_t v30 = v18[2];
            swift_bridgeObjectRetain();
            if (!v30) {
              break;
            }
            unint64_t v31 = sub_100011F50(v29, v28);
            if ((v32 & 1) == 0) {
              break;
            }
            sub_100017AC8(v18[7] + *(void *)(v11 + 72) * v31, (uint64_t)v9);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
            swift_bridgeObjectRelease();
            sub_10000CC24((uint64_t)v9, &qword_1000AEAA8);
            if (!v21) {
              goto LABEL_8;
            }
LABEL_25:
            unint64_t v33 = __clz(__rbit64(v21));
            v21 &= v21 - 1;
          }
          (*v56)(v9, 1, 1, v10);
          sub_10000CC24((uint64_t)v9, &qword_1000AEAA8);
          sub_100017AC8(v52, v53);
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v57 = v18;
          unint64_t v36 = sub_100011F50(v29, v28);
          uint64_t v37 = v18[2];
          BOOL v38 = (v35 & 1) == 0;
          uint64_t v39 = v37 + v38;
          if (__OFADD__(v37, v38)) {
            goto LABEL_41;
          }
          if (v18[3] < v39)
          {
            int v49 = v35;
            sub_100037204(v39, isUniquelyReferenced_nonNull_native);
            unint64_t v40 = sub_100011F50(v29, v28);
            if ((v49 & 1) != (v41 & 1)) {
              goto LABEL_43;
            }
            unint64_t v36 = v40;
            uint64_t v18 = v57;
            if ((v49 & 1) == 0) {
              goto LABEL_33;
            }
LABEL_6:
            sub_100039C14(v53, v18[7] + *(void *)(v11 + 72) * v36);
LABEL_7:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = v50;
            a2 = v51;
            if (!v21) {
              continue;
            }
            goto LABEL_25;
          }
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v18 = v57;
            if (v35) {
              goto LABEL_6;
            }
          }
          else
          {
            char v46 = v35;
            sub_1000375BC();
            uint64_t v18 = v57;
            if (v46) {
              goto LABEL_6;
            }
          }
LABEL_33:
          v18[(v36 >> 6) + 8] |= 1 << v36;
          int v42 = (uint64_t *)(v18[6] + 16 * v36);
          *int v42 = v29;
          v42[1] = v28;
          sub_100017B94(v53, v18[7] + *(void *)(v11 + 72) * v36);
          uint64_t v43 = v18[2];
          BOOL v44 = __OFADD__(v43, 1);
          uint64_t v45 = v43 + 1;
          if (v44) {
            goto LABEL_42;
          }
          void v18[2] = v45;
          swift_bridgeObjectRetain();
          goto LABEL_7;
        }
        int64_t v25 = v23 + 3;
        if (v25 < v55)
        {
          unint64_t v24 = *(void *)(v54 + 8 * v25);
          if (v24)
          {
            int64_t v22 = v25;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v22 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_40;
            }
            if (v22 >= v55) {
              break;
            }
            unint64_t v24 = *(void *)(v54 + 8 * v22);
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
      }
LABEL_37:
      swift_release();
      sub_1000329C0(v52);
      uint64_t v47 = v48[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v47 + 16) = v18;
      return swift_bridgeObjectRelease();
    }
    break;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_10008C880();
  __break(1u);
  return result;
}

uint64_t sub_100058F04(uint64_t a1)
{
  return sub_100058A2C(a1, *v1, v1[1]);
}

uint64_t sub_100058F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ServiceEventValue();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v62 - v14;
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v19 = (uint64_t *)((char *)&v62 - v17);
  if (!*(void *)(a3 + 16)) {
    return result;
  }
  uint64_t v70 = v18;
  sub_100017AC8(a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)&v62 - v17);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_1000329C0((uint64_t)v19);
  }
  uint64_t v72 = (uint64_t *)v15;
  uint64_t v73 = v8;
  uint64_t v74 = v7;
  uint64_t v65 = *v19;
  uint64_t v66 = v11;
  uint64_t v20 = (void *)v19[1];
  uint64_t v68 = v3;
  uint64_t v69 = v20;
  uint64_t v67 = a1;
  unint64_t v21 = *(void **)(a1 + 16);
  uint64_t v22 = a2 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & *(void *)(a2 + 56);
  int64_t v26 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  int64_t v71 = v26;
  while (1)
  {
    while (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v29 = v28 | (v27 << 6);
      if (v21[2])
      {
LABEL_25:
        unint64_t v33 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v29);
        uint64_t v35 = *v33;
        uint64_t v34 = v33[1];
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_100011F50(v35, v34);
        if (v37)
        {
          uint64_t v38 = v22;
          uint64_t v39 = a2;
          unint64_t v40 = v21;
          uint64_t v41 = v21[7];
          int v42 = v72;
          uint64_t v43 = *(void *)(v73 + 72);
          sub_100017AC8(v41 + v43 * v36, (uint64_t)v72);
          if (swift_getEnumCaseMultiPayload())
          {
            swift_bridgeObjectRelease();
            sub_1000329C0((uint64_t)v42);
            a2 = v39;
            uint64_t v22 = v38;
            int64_t v26 = v71;
            unint64_t v21 = v40;
          }
          else
          {
            uint64_t v44 = v42[1];
            uint64_t v75 = *v42;
            uint64_t v76 = v44;
            v78._countAndFlagsBits = v65;
            v78._object = v69;
            sub_10008C090(v78);
            uint64_t v45 = v76;
            uint64_t v46 = (uint64_t)v70;
            *uint64_t v70 = v75;
            *(void *)(v46 + 8) = v45;
            swift_storeEnumTagMultiPayload();
            sub_100017B94(v46, (uint64_t)v66);
            uint64_t v47 = v40;
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            char v77 = v40;
            unint64_t v49 = sub_100011F50(v35, v34);
            uint64_t v50 = v47[2];
            BOOL v51 = (v48 & 1) == 0;
            uint64_t v52 = v50 + v51;
            if (__OFADD__(v50, v51)) {
              goto LABEL_44;
            }
            if (v47[3] >= v52)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                int64_t v55 = v77;
                if (v48) {
                  goto LABEL_35;
                }
              }
              else
              {
                int v63 = v48;
                sub_1000375BC();
                int64_t v55 = v77;
                if (v63) {
                  goto LABEL_35;
                }
              }
            }
            else
            {
              int v63 = v48;
              sub_100037204(v52, isUniquelyReferenced_nonNull_native);
              unint64_t v53 = sub_100011F50(v35, v34);
              if ((v63 & 1) != (v54 & 1)) {
                goto LABEL_46;
              }
              unint64_t v49 = v53;
              int64_t v55 = v77;
              if (v63)
              {
LABEL_35:
                int64_t v56 = v55;
                sub_100039C14((uint64_t)v66, v55[7] + v49 * v43);
                goto LABEL_39;
              }
            }
            v55[(v49 >> 6) + 8] |= 1 << v49;
            unint64_t v57 = (uint64_t *)(v55[6] + 16 * v49);
            *unint64_t v57 = v35;
            v57[1] = v34;
            sub_100017B94((uint64_t)v66, v55[7] + v49 * v43);
            uint64_t v58 = v55[2];
            BOOL v59 = __OFADD__(v58, 1);
            uint64_t v60 = v58 + 1;
            if (v59) {
              goto LABEL_45;
            }
            int64_t v56 = v55;
            uint64_t v55[2] = v60;
            swift_bridgeObjectRetain();
LABEL_39:
            a2 = v39;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v22 = v38;
            int64_t v26 = v71;
            unint64_t v21 = v56;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    int64_t v30 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v30 >= v26) {
      goto LABEL_40;
    }
    unint64_t v31 = *(void *)(v22 + 8 * v30);
    ++v27;
    if (!v31)
    {
      int64_t v27 = v30 + 1;
      if (v30 + 1 >= v26) {
        goto LABEL_40;
      }
      unint64_t v31 = *(void *)(v22 + 8 * v27);
      if (!v31)
      {
        int64_t v27 = v30 + 2;
        if (v30 + 2 >= v26) {
          goto LABEL_40;
        }
        unint64_t v31 = *(void *)(v22 + 8 * v27);
        if (!v31) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v25 = (v31 - 1) & v31;
    unint64_t v29 = __clz(__rbit64(v31)) + (v27 << 6);
    if (v21[2]) {
      goto LABEL_25;
    }
  }
  int64_t v32 = v30 + 3;
  if (v32 >= v26)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v61 = v67;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v61 + 16) = v21;
    return swift_bridgeObjectRelease();
  }
  unint64_t v31 = *(void *)(v22 + 8 * v32);
  if (v31)
  {
    int64_t v27 = v32;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v27 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v27 >= v26) {
      goto LABEL_40;
    }
    unint64_t v31 = *(void *)(v22 + 8 * v27);
    ++v32;
    if (v31) {
      goto LABEL_24;
    }
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_10008C880();
  __break(1u);
  return result;
}

uint64_t sub_100059414(uint64_t a1)
{
  return sub_100058F20(a1, *v1, v1[1]);
}

uint64_t sub_100059430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for ServiceEventValue();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v19 = (uint64_t *)((char *)&v63 - v17);
  if (!*(void *)(a3 + 16)) {
    return result;
  }
  uint64_t v69 = v18;
  sub_100017AC8(a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)&v63 - v17);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_1000329C0((uint64_t)v19);
  }
  int64_t v71 = v15;
  uint64_t v72 = v8;
  uint64_t v77 = v7;
  uint64_t v64 = *v19;
  uint64_t v65 = v11;
  uint64_t v20 = v19[1];
  uint64_t v67 = v3;
  uint64_t v68 = v20;
  uint64_t v66 = a1;
  unint64_t v21 = *(void **)(a1 + 16);
  uint64_t v22 = a2 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & *(void *)(a2 + 56);
  int64_t v26 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  int64_t v70 = v26;
  while (1)
  {
    while (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v29 = v28 | (v27 << 6);
      if (v21[2])
      {
LABEL_25:
        unint64_t v33 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v29);
        uint64_t v35 = *v33;
        uint64_t v34 = v33[1];
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_100011F50(v35, v34);
        if (v37)
        {
          uint64_t v38 = a2;
          uint64_t v39 = v21;
          uint64_t v40 = v21[7];
          uint64_t v41 = v71;
          uint64_t v42 = *(void *)(v72 + 72);
          sub_100017AC8(v40 + v42 * v36, (uint64_t)v71);
          if (swift_getEnumCaseMultiPayload())
          {
            swift_bridgeObjectRelease();
            sub_1000329C0((uint64_t)v41);
            a2 = v38;
            goto LABEL_28;
          }
          uint64_t v43 = (void *)*v41;
          uint64_t v63 = v41[1];
          uint64_t v75 = v43;
          uint64_t v76 = v63;
          uint64_t v73 = v64;
          uint64_t v74 = v68;
          swift_bridgeObjectRetain();
          uint64_t v73 = sub_10008C100();
          uint64_t v74 = v44;
          sub_10008C080();
          swift_bridgeObjectRelease();
          uint64_t v45 = v74;
          uint64_t v46 = (uint64_t)v69;
          *uint64_t v69 = v73;
          *(void *)(v46 + 8) = v45;
          swift_storeEnumTagMultiPayload();
          sub_100017B94(v46, (uint64_t)v65);
          uint64_t v47 = v39;
          LODWORD(v63) = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v75 = v39;
          unint64_t v49 = sub_100011F50(v35, v34);
          uint64_t v50 = v39[2];
          BOOL v51 = (v48 & 1) == 0;
          uint64_t v52 = v50 + v51;
          if (__OFADD__(v50, v51)) {
            goto LABEL_45;
          }
          char v53 = v48;
          if (v47[3] >= v52)
          {
            if (v63)
            {
              int64_t v56 = v75;
              if ((v48 & 1) == 0) {
                goto LABEL_38;
              }
            }
            else
            {
              LODWORD(v63) = v48;
              unint64_t v57 = v49;
              sub_1000375BC();
              unint64_t v49 = v57;
              int64_t v56 = v75;
              if ((v63 & 1) == 0) {
                goto LABEL_38;
              }
            }
          }
          else
          {
            sub_100037204(v52, v63);
            unint64_t v54 = sub_100011F50(v35, v34);
            if ((v53 & 1) != (v55 & 1)) {
              goto LABEL_47;
            }
            unint64_t v49 = v54;
            int64_t v56 = v75;
            if ((v53 & 1) == 0)
            {
LABEL_38:
              v56[(v49 >> 6) + 8] |= 1 << v49;
              uint64_t v58 = (uint64_t *)(v56[6] + 16 * v49);
              *uint64_t v58 = v35;
              v58[1] = v34;
              sub_100017B94((uint64_t)v65, v56[7] + v49 * v42);
              uint64_t v59 = v56[2];
              BOOL v60 = __OFADD__(v59, 1);
              uint64_t v61 = v59 + 1;
              if (v60) {
                goto LABEL_46;
              }
              uint64_t v39 = v56;
              v56[2] = v61;
              swift_bridgeObjectRetain();
              goto LABEL_40;
            }
          }
          uint64_t v39 = v56;
          sub_100039C14((uint64_t)v65, v56[7] + v49 * v42);
LABEL_40:
          a2 = v38;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_28:
          int64_t v26 = v70;
          unint64_t v21 = v39;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    int64_t v30 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v30 >= v26) {
      goto LABEL_41;
    }
    unint64_t v31 = *(void *)(v22 + 8 * v30);
    ++v27;
    if (!v31)
    {
      int64_t v27 = v30 + 1;
      if (v30 + 1 >= v26) {
        goto LABEL_41;
      }
      unint64_t v31 = *(void *)(v22 + 8 * v27);
      if (!v31)
      {
        int64_t v27 = v30 + 2;
        if (v30 + 2 >= v26) {
          goto LABEL_41;
        }
        unint64_t v31 = *(void *)(v22 + 8 * v27);
        if (!v31) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v25 = (v31 - 1) & v31;
    unint64_t v29 = __clz(__rbit64(v31)) + (v27 << 6);
    if (v21[2]) {
      goto LABEL_25;
    }
  }
  int64_t v32 = v30 + 3;
  if (v32 >= v26)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v62 = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v62 + 16) = v21;
    return swift_bridgeObjectRelease();
  }
  unint64_t v31 = *(void *)(v22 + 8 * v32);
  if (v31)
  {
    int64_t v27 = v32;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v27 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v27 >= v26) {
      goto LABEL_41;
    }
    unint64_t v31 = *(void *)(v22 + 8 * v27);
    ++v32;
    if (v31) {
      goto LABEL_24;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_10008C880();
  __break(1u);
  return result;
}

uint64_t sub_100059960(uint64_t a1)
{
  return sub_100059430(a1, *v1, v1[1]);
}

void *sub_10005997C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AEAA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a1;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v54 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v8;
  int64_t v55 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v57 = a2 + 56;
  uint64_t result = (void *)swift_bridgeObjectRetain_n();
  int64_t v13 = 0;
  char v53 = _swiftEmptyArrayStorage;
  int64_t v56 = v6;
  if (v11) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_59:
    __break(1u);
    return result;
  }
  if (v16 < v55)
  {
    unint64_t v17 = *(void *)(v54 + 8 * v16);
    int64_t v18 = v13 + 1;
    if (v17) {
      goto LABEL_25;
    }
    int64_t v18 = v13 + 2;
    if (v13 + 2 >= v55) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v54 + 8 * v18);
    if (v17) {
      goto LABEL_25;
    }
    int64_t v18 = v13 + 3;
    if (v13 + 3 >= v55) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v54 + 8 * v18);
    if (v17) {
      goto LABEL_25;
    }
    int64_t v18 = v13 + 4;
    if (v13 + 4 >= v55) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v54 + 8 * v18);
    if (v17) {
      goto LABEL_25;
    }
    int64_t v18 = v13 + 5;
    if (v13 + 5 >= v55) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v54 + 8 * v18);
    if (v17)
    {
LABEL_25:
      unint64_t v11 = (v17 - 1) & v17;
      int64_t v59 = v18;
      for (unint64_t i = __clz(__rbit64(v17)) + (v18 << 6); ; unint64_t i = v14 | (v13 << 6))
      {
        uint64_t v20 = v7;
        unint64_t v21 = (uint64_t *)(*(void *)(v7 + 48) + 16 * i);
        uint64_t v23 = *v21;
        uint64_t v22 = v21[1];
        if (*(void *)(a2 + 16))
        {
          sub_10008C8F0();
          swift_bridgeObjectRetain();
          sub_10008C050();
          Swift::Int v24 = sub_10008C920();
          uint64_t v25 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v26 = v24 & ~v25;
          if ((*(void *)(v57 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26))
          {
            uint64_t v27 = *(void *)(a2 + 48);
            unint64_t v28 = (void *)(v27 + 16 * v26);
            BOOL v29 = *v28 == v23 && v28[1] == v22;
            if (v29 || (sub_10008C7D0() & 1) != 0)
            {
LABEL_6:
              uint64_t result = (void *)swift_bridgeObjectRelease();
              uint64_t v7 = v20;
              uint64_t v6 = v56;
              int64_t v13 = v59;
              if (!v11) {
                goto LABEL_8;
              }
              goto LABEL_7;
            }
            uint64_t v30 = ~v25;
            for (unint64_t j = v26 + 1; ; unint64_t j = v32 + 1)
            {
              uint64_t v32 = j & v30;
              if (((*(void *)(v57 + (((j & v30) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v30)) & 1) == 0) {
                break;
              }
              unint64_t v33 = (void *)(v27 + 16 * v32);
              BOOL v34 = *v33 == v23 && v33[1] == v22;
              if (v34 || (sub_10008C7D0() & 1) != 0) {
                goto LABEL_6;
              }
            }
          }
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v7 = v20;
          uint64_t result = v53;
        }
        else
        {
          uint64_t result = sub_10002863C(0, v53[2] + 1, 1, v53);
          uint64_t v7 = v20;
        }
        unint64_t v36 = result[2];
        unint64_t v35 = result[3];
        uint64_t v6 = v56;
        if (v36 >= v35 >> 1) {
          uint64_t result = sub_10002863C((void *)(v35 > 1), v36 + 1, 1, result);
        }
        result[2] = v36 + 1;
        char v53 = result;
        char v37 = &result[2 * v36];
        v37[4] = v23;
        v37[5] = v22;
        int64_t v13 = v59;
        if (!v11) {
          goto LABEL_8;
        }
LABEL_7:
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        int64_t v59 = v13;
      }
    }
    uint64_t v19 = v13 + 6;
    if (v13 + 6 < v55)
    {
      unint64_t v17 = *(void *)(v54 + 8 * v19);
      if (v17)
      {
        int64_t v18 = v13 + 6;
        goto LABEL_25;
      }
      while (1)
      {
        int64_t v18 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_59;
        }
        if (v18 >= v55) {
          break;
        }
        unint64_t v17 = *(void *)(v54 + 8 * v18);
        ++v19;
        if (v17) {
          goto LABEL_25;
        }
      }
    }
  }
LABEL_49:
  swift_release();
  uint64_t v38 = v53[2];
  if (v38)
  {
    uint64_t v39 = v53 + 5;
    do
    {
      uint64_t v41 = *(v39 - 1);
      uint64_t v42 = *v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v43 = sub_100011F50(v41, v42);
      char v45 = v44;
      swift_bridgeObjectRelease();
      if (v45)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v58 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000375BC();
          uint64_t v7 = v58;
        }
        swift_bridgeObjectRelease();
        uint64_t v47 = *(void *)(v7 + 56);
        uint64_t v48 = type metadata accessor for ServiceEventValue();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = v47 + *(void *)(v49 + 72) * v43;
        uint64_t v6 = v56;
        sub_100017B94(v50, (uint64_t)v56);
        sub_100037C60(v43, v7);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v6, 0, 1, v48);
      }
      else
      {
        uint64_t v40 = type metadata accessor for ServiceEventValue();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v6, 1, 1, v40);
      }
      v39 += 2;
      sub_10000CC24((uint64_t)v6, &qword_1000AEAA8);
      swift_bridgeObjectRelease();
      --v38;
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = v52;
  uint64_t result = (void *)swift_bridgeObjectRelease();
  *(void *)(v51 + 16) = v7;
  return result;
}

uint64_t sub_100059EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AEAA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v34 = a2 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v33 = a2;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v35) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v35) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v34 + 8 * v13);
      if (!v18)
      {
        int64_t v13 = v17 + 2;
        if (v17 + 2 >= v35) {
          goto LABEL_26;
        }
        unint64_t v18 = *(void *)(v34 + 8 * v13);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_22:
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_100011F50(v21, v22);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if (v25)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000375BC();
        uint64_t v7 = v36;
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(v7 + 56);
      uint64_t v28 = type metadata accessor for ServiceEventValue();
      uint64_t v29 = *(void *)(v28 - 8);
      sub_100017B94(v27 + *(void *)(v29 + 72) * v23, (uint64_t)v6);
      sub_100037C60(v23, v7);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v6, 0, 1, v28);
      a2 = v33;
    }
    else
    {
      uint64_t v14 = type metadata accessor for ServiceEventValue();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    sub_10000CC24((uint64_t)v6, &qword_1000AEAA8);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v35)
  {
LABEL_26:
    swift_release();
    uint64_t v30 = v32;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v30 + 16) = v7;
    return result;
  }
  unint64_t v18 = *(void *)(v34 + 8 * v19);
  if (v18)
  {
    int64_t v13 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v35) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v34 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10005A230(uint64_t a1, uint64_t a2)
{
  uint64_t v104 = sub_10008BED0();
  uint64_t v4 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v107 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10008C000();
  uint64_t v6 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  int64_t v100 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10008BEC0();
  uint64_t v8 = *(void *)(v106 - 8);
  uint64_t v9 = __chkstk_darwin(v106);
  uint64_t v98 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v105 = (char *)&v93 - v11;
  uint64_t v12 = type metadata accessor for ServiceEventValue();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v95 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v94 = (uint64_t *)((char *)&v93 - v16);
  uint64_t v17 = sub_10000A390(&qword_1000AEAA8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v102 = (uint64_t)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v119 = (uint64_t)&v93 - v21;
  __chkstk_darwin(v20);
  unint64_t v23 = (char *)&v93 - v22;
  uint64_t v24 = *(void *)(a2 + 56);
  uint64_t v116 = a2 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v26 = -1;
  uint64_t v103 = a1;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v28 = v26 & v24;
  int64_t v117 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v123 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v115 = v13;
  uint64_t v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v99 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v97 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v96 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v93 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v29 = (uint64_t)v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  long long v110 = xmmword_10008DC30;
  uint64_t v112 = a2;
  uint64_t v118 = v29;
LABEL_4:
  uint64_t v31 = v119;
  while (1)
  {
    if (v28)
    {
      unint64_t v32 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v33 = v32 | (v30 << 6);
      goto LABEL_23;
    }
    int64_t v34 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_78;
    }
    if (v34 >= v117) {
      goto LABEL_76;
    }
    unint64_t v35 = *(void *)(v116 + 8 * v34);
    ++v30;
    if (!v35)
    {
      int64_t v30 = v34 + 1;
      if (v34 + 1 >= v117) {
        goto LABEL_76;
      }
      unint64_t v35 = *(void *)(v116 + 8 * v30);
      if (!v35)
      {
        int64_t v30 = v34 + 2;
        if (v34 + 2 >= v117) {
          goto LABEL_76;
        }
        unint64_t v35 = *(void *)(v116 + 8 * v30);
        if (!v35) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v28 = (v35 - 1) & v35;
    unint64_t v33 = __clz(__rbit64(v35)) + (v30 << 6);
LABEL_23:
    char v37 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v33);
    uint64_t v38 = *v37;
    uint64_t v39 = v37[1];
    uint64_t v40 = *(void *)(v27 + 16);
    uint64_t v121 = v38;
    int64_t v122 = v30;
    if (v40)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v41 = sub_100011F50(v38, v39);
      if (v42)
      {
        uint64_t v43 = v115;
        sub_100017AC8(*(void *)(v27 + 56) + *(void *)(v115 + 72) * v41, v29);
        char v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
        v44(v29, 0, 1, v12);
      }
      else
      {
        char v44 = *v123;
        (*v123)(v29, 1, 1, v12);
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = v119;
    }
    else
    {
      char v44 = *v123;
      (*v123)(v29, 1, 1, v12);
      swift_bridgeObjectRetain();
    }
    char v45 = *v120;
    if ((*v120)(v29, 1, v12) == 1)
    {
      sub_10000CC24(v29, &qword_1000AEAA8);
      if (!*(void *)(v27 + 16)) {
        goto LABEL_5;
      }
    }
    else
    {
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v113 = v12;
        int64_t v55 = v100;
        sub_10008BFF0();
        uint64_t v56 = sub_10008BFC0();
        unint64_t v58 = v57;
        swift_bridgeObjectRelease();
        (*v99)(v55, v101);
        if (v58 >> 60 == 15) {
          uint64_t v59 = 0;
        }
        else {
          uint64_t v59 = v56;
        }
        if (v58 >> 60 == 15) {
          unint64_t v60 = 0xC000000000000000;
        }
        else {
          unint64_t v60 = v58;
        }
        uint64_t v61 = sub_10005B4A0((unint64_t *)&qword_1000AE4E0, (void (*)(uint64_t))&type metadata accessor for SHA256);
        uint64_t v62 = v104;
        sub_10008BEA0();
        uint64_t v114 = v59;
        switch(v60 >> 62)
        {
          case 1uLL:
            if (v59 >> 32 < (int)v59) {
              goto LABEL_82;
            }
            unint64_t v111 = v60;
            sub_10000A494(v59, v60);
            if (!sub_10008B830())
            {
              a2 = v112;
              uint64_t v12 = v113;
              goto LABEL_63;
            }
            uint64_t v63 = sub_10008B860();
            uint64_t v12 = v113;
            if (__OFSUB__((int)v59, v63)) {
              goto LABEL_84;
            }
            a2 = v112;
LABEL_63:
            sub_10008B850();
            uint64_t v68 = v107;
            uint64_t v62 = v104;
            sub_10008BE80();
            unint64_t v71 = v111;
            sub_10000A43C(v114, v111);
LABEL_64:
            uint64_t v72 = v105;
            sub_10008BE90();
            (*v97)(v68, v62);
            sub_10000A43C(v114, v71);
            (*v96)(v98, v72, v106);
            sub_10005B4A0(&qword_1000AF600, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
            sub_10008C120();
            uint64_t v114 = v124;
            uint64_t v73 = *(void *)(v124 + 16);
            uint64_t v74 = _swiftEmptyArrayStorage;
            unint64_t v111 = *((void *)&v124 + 1);
            uint64_t v109 = v73;
            if (*((void *)&v124 + 1) == v73)
            {
LABEL_65:
              swift_bridgeObjectRelease();
              (*v93)(v105, v106);
              *(void *)&long long v124 = v74;
              sub_10000A390(&qword_1000AEC10);
              sub_10005B4E8();
              uint64_t v75 = sub_10008BF60();
              uint64_t v77 = v76;
              swift_bridgeObjectRelease();
              Swift::String v78 = v94;
              *uint64_t v94 = v75;
              v78[1] = v77;
              swift_storeEnumTagMultiPayload();
              uint64_t v79 = (uint64_t)v78;
              uint64_t v80 = v95;
              sub_100017B94(v79, v95);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long v124 = v27;
              sub_100037E70(v80, v121, v39, isUniquelyReferenced_nonNull_native);
              uint64_t v27 = v124;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v29 = v118;
              int64_t v30 = v122;
              goto LABEL_4;
            }
            if (*((uint64_t *)&v124 + 1) >= v73) {
              goto LABEL_81;
            }
            uint64_t v108 = v114 + 32;
            unint64_t v82 = v111;
            while ((v111 & 0x8000000000000000) == 0)
            {
              if (v82 >= *(void *)(v114 + 16)) {
                goto LABEL_79;
              }
              char v83 = *(unsigned char *)(v108 + v82);
              sub_10000A390(&qword_1000AF608);
              uint64_t v84 = swift_allocObject();
              *(_OWORD *)(v84 + 16) = v110;
              *(void *)(v84 + 56) = &type metadata for UInt8;
              *(void *)(v84 + 64) = &protocol witness table for UInt8;
              *(unsigned char *)(v84 + 32) = v83;
              uint64_t v85 = sub_10008BFE0();
              uint64_t v87 = v86;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v74 = sub_10002863C(0, v74[2] + 1, 1, v74);
              }
              unint64_t v89 = v74[2];
              unint64_t v88 = v74[3];
              if (v89 >= v88 >> 1) {
                uint64_t v74 = sub_10002863C((void *)(v88 > 1), v89 + 1, 1, v74);
              }
              ++v82;
              v74[2] = v89 + 1;
              uint64_t v90 = &v74[2 * v89];
              v90[4] = v85;
              v90[5] = v87;
              a2 = v112;
              uint64_t v12 = v113;
              if (v109 == v82) {
                goto LABEL_65;
              }
            }
            break;
          case 2uLL:
            uint64_t v109 = v61;
            unint64_t v64 = v60;
            uint64_t v65 = v59;
            uint64_t v66 = *(void *)(v59 + 16);
            uint64_t v67 = *(void *)(v59 + 24);
            unint64_t v111 = v64;
            sub_10000A494(v65, v64);
            swift_retain();
            swift_retain();
            if (sub_10008B830() && __OFSUB__(v66, sub_10008B860())) {
              goto LABEL_85;
            }
            if (__OFSUB__(v67, v66)) {
              goto LABEL_83;
            }
            sub_10008B850();
            uint64_t v68 = v107;
            uint64_t v69 = v104;
            sub_10008BE80();
            uint64_t v62 = v69;
            swift_release();
            uint64_t v70 = v114;
            swift_release();
            unint64_t v71 = v111;
            sub_10000A43C(v70, v111);
            a2 = v112;
            uint64_t v12 = v113;
            goto LABEL_64;
          case 3uLL:
            *(void *)((char *)&v124 + 6) = 0;
            *(void *)&long long v124 = 0;
            goto LABEL_61;
          default:
            *(void *)&long long v124 = v59;
            WORD4(v124) = v60;
            BYTE10(v124) = BYTE2(v60);
            BYTE11(v124) = BYTE3(v60);
            BYTE12(v124) = BYTE4(v60);
            BYTE13(v124) = BYTE5(v60);
LABEL_61:
            uint64_t v68 = v107;
            sub_10008BE80();
            sub_10000A43C(v59, v60);
            unint64_t v71 = v60;
            uint64_t v12 = v113;
            goto LABEL_64;
        }
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
      }
      sub_1000329C0(v29);
      if (!*(void *)(v27 + 16))
      {
LABEL_5:
        v44(v31, 1, 1, v12);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v46 = sub_100011F50(v121, v39);
    if (v47)
    {
      uint64_t v31 = v119;
      sub_100017AC8(*(void *)(v27 + 56) + *(void *)(v115 + 72) * v46, v119);
      uint64_t v48 = 0;
    }
    else
    {
      uint64_t v48 = 1;
      uint64_t v31 = v119;
    }
    v44(v31, v48, 1, v12);
    swift_bridgeObjectRelease();
    if (v45(v31, 1, v12) != 1)
    {
      sub_10000CC24(v31, &qword_1000AEAA8);
      swift_bridgeObjectRetain();
      unint64_t v49 = sub_100011F50(v121, v39);
      char v51 = v50;
      swift_bridgeObjectRelease();
      int64_t v30 = v122;
      if (v51)
      {
        int v52 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v124 = v27;
        if (!v52)
        {
          sub_1000375BC();
          uint64_t v27 = v124;
        }
        swift_bridgeObjectRelease();
        uint64_t v53 = v102;
        sub_100017B94(*(void *)(v27 + 56) + *(void *)(v115 + 72) * v49, v102);
        sub_100037C60(v49, v27);
        swift_bridgeObjectRelease();
        uint64_t v54 = 0;
      }
      else
      {
        uint64_t v54 = 1;
        uint64_t v53 = v102;
      }
      v44(v53, v54, 1, v12);
      sub_10000CC24(v53, &qword_1000AEAA8);
      swift_bridgeObjectRelease();
      uint64_t v29 = v118;
      goto LABEL_4;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    sub_10000CC24(v31, &qword_1000AEAA8);
    uint64_t v29 = v118;
    int64_t v30 = v122;
  }
  int64_t v36 = v34 + 3;
  if (v36 < v117)
  {
    unint64_t v35 = *(void *)(v116 + 8 * v36);
    if (!v35)
    {
      while (1)
      {
        int64_t v30 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_80;
        }
        if (v30 >= v117) {
          goto LABEL_76;
        }
        unint64_t v35 = *(void *)(v116 + 8 * v30);
        ++v36;
        if (v35) {
          goto LABEL_22;
        }
      }
    }
    int64_t v30 = v36;
    goto LABEL_22;
  }
LABEL_76:
  swift_release();
  uint64_t v91 = v103;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v91 + 16) = v27;
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EventFilterMatcher()
{
  return &type metadata for EventFilterMatcher;
}

uint64_t destroy for EventAllowFilter()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s21CloudTelemetryService16EventAllowFilterVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EventAllowFilter(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EventAllowFilter(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventAllowFilter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventAllowFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventAllowFilter()
{
  return &type metadata for EventAllowFilter;
}

uint64_t destroy for EventRemoveFilter()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EventRemoveFilter()
{
  return &type metadata for EventRemoveFilter;
}

ValueMetadata *type metadata accessor for EventSHA256KeyFilter()
{
  return &type metadata for EventSHA256KeyFilter;
}

ValueMetadata *type metadata accessor for EventAllowValuesFilter()
{
  return &type metadata for EventAllowValuesFilter;
}

ValueMetadata *type metadata accessor for EventDenyValuesFilter()
{
  return &type metadata for EventDenyValuesFilter;
}

ValueMetadata *type metadata accessor for EventInsertStringKeyFilter()
{
  return &type metadata for EventInsertStringKeyFilter;
}

ValueMetadata *type metadata accessor for EventAppendToKeyFilter()
{
  return &type metadata for EventAppendToKeyFilter;
}

void *_s21CloudTelemetryService18EventFilterMatcherVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s21CloudTelemetryService18EventFilterMatcherVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s21CloudTelemetryService18EventFilterMatcherVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionPerCountrySampling(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionPerCountrySampling(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventPrependToKeyFilter()
{
  return &type metadata for EventPrependToKeyFilter;
}

uint64_t sub_10005B4A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005B4E8()
{
  unint64_t result = qword_1000AF610;
  if (!qword_1000AF610)
  {
    sub_10000A540(&qword_1000AEC10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF610);
  }
  return result;
}

uint64_t sub_10005B54C()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B4C28);
  sub_10000A358(v0, (uint64_t)qword_1000B4C28);
  return sub_10008BD40();
}

uint64_t sub_10005B5D0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t sub_10005B610(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return _swift_task_switch(sub_10005B658, v1);
}

uint64_t sub_10005B658()
{
  uint64_t v1 = v0[6];
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 112) + 16))
  {
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v5 = v0[5];
    sub_10005D57C(&qword_1000AF6E0, v2, (void (*)(uint64_t))type metadata accessor for BackendGroup);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[8] = v6;
    _OWORD v6[2] = v3;
    v6[3] = v5;
    _OWORD v6[4] = v4;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[9] = v7;
    void *v7 = v0;
    v7[1] = sub_10005B810;
    return withTaskGroup<A, B>(of:returning:isolation:body:)();
  }
  else
  {
    sub_10005BFAC();
    swift_allocError();
    swift_willThrow();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_10005B810()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100026284, v1);
}

uint64_t type metadata accessor for BackendGroup()
{
  return self;
}

uint64_t sub_10005B960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  v5[12] = a2;
  v5[13] = a3;
  sub_10000A390(&qword_1000AE3A0);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return _swift_task_switch(sub_10005BA0C, a3);
}

uint64_t sub_10005BA0C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v32 = *(void *)(v3 + 16);
  if (v32)
  {
    uint64_t v4 = sub_10008C220();
    uint64_t v5 = *(void *)(v4 - 8);
    int64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v29 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    uint64_t v28 = v3;
    uint64_t v31 = v4;
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 128);
      uint64_t v8 = *(void *)(v0 + 136);
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v11 = *(void *)(v0 + 120);
      uint64_t v12 = *(void *)(v0 + 104);
      long long v33 = *(_OWORD *)(v3 + 16 * v6 + 32);
      v30(v8, 1, 1, v4);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      uint64_t v14 = (void *)(v13 + 16);
      *(void *)(v13 + 24) = 0;
      *(_OWORD *)(v13 + 32) = v33;
      *(void *)(v13 + 48) = v10;
      *(void *)(v13 + 56) = v12;
      *(void *)(v13 + 64) = v11;
      sub_10005CF14(v8, v9);
      LODWORD(v9) = (*v29)(v9, 1, v4);
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v15 = *(void *)(v0 + 128);
      if (v9 == 1)
      {
        sub_10000CC24(*(void *)(v0 + 128), &qword_1000AE3A0);
        if (!*v14) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_10008C210();
        (*v27)(v15, v4);
        if (!*v14)
        {
LABEL_8:
          uint64_t v16 = 0;
          uint64_t v18 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = sub_10008C1D0();
      uint64_t v18 = v17;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v3 = v28;
      uint64_t v19 = **(void **)(v0 + 96);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = &unk_1000AF7F0;
      *(void *)(v20 + 24) = v13;
      uint64_t v21 = v18 | v16;
      if (v18 | v16)
      {
        uint64_t v21 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v16;
        *(void *)(v0 + 40) = v18;
      }
      ++v6;
      uint64_t v7 = *(void *)(v0 + 136);
      *(void *)(v0 + 72) = 1;
      *(void *)(v0 + 80) = v21;
      *(void *)(v0 + 88) = v19;
      swift_task_create();
      swift_unknownObjectRelease();
      swift_release();
      sub_10000CC24(v7, &qword_1000AE3A0);
      uint64_t v4 = v31;
      if (v32 == v6)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v22 = *(void *)(v0 + 104);
  uint64_t v23 = sub_10005D57C(&qword_1000AF6E0, v2, (void (*)(uint64_t))type metadata accessor for BackendGroup);
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v24;
  uint64_t v25 = sub_10000A390(&qword_1000AF800);
  *uint64_t v24 = v0;
  v24[1] = sub_10005BDD0;
  return TaskGroup.awaitAllRemainingTasks(isolation:)(v22, v23, v25);
}

uint64_t sub_10005BDD0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10005BEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_10000AA94;
  return sub_10005B960((uint64_t)v8, a2, v5, v6, v7);
}

unint64_t sub_10005BFAC()
{
  unint64_t result = qword_1000AF6F8;
  if (!qword_1000AF6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF6F8);
  }
  return result;
}

uint64_t sub_10005C000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[18] = a5;
  v7[19] = a7;
  v7[17] = a4;
  sub_10000A390(&qword_1000AF808);
  v7[20] = swift_task_alloc();
  uint64_t v10 = sub_10008B720();
  v7[21] = v10;
  v7[22] = *(void *)(v10 - 8);
  v7[23] = swift_task_alloc();
  uint64_t v11 = sub_10008BCE0();
  v7[24] = v11;
  v7[25] = *(void *)(v11 - 8);
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  sub_10000A390(&qword_1000AF810);
  v7[28] = swift_task_alloc();
  uint64_t v12 = sub_10008BCF0();
  v7[29] = v12;
  v7[30] = *(void *)(v12 - 8);
  v7[31] = swift_task_alloc();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v14 = (void *)swift_task_alloc();
  v7[32] = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_10005C2A0;
  return v16(a6, ObjectType, a5);
}

uint64_t sub_10005C2A0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10005C5BC, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10005C42C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 152) + 112;
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v3 = sub_10005D29C(v2, v1);
  uint64_t v4 = swift_unknownObjectRelease();
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < v3)
  {
    __break(1u);
  }
  else
  {
    sub_10005D408(v3, v5);
    swift_endAccess();
    uint64_t v4 = (uint64_t)sub_10005C50C;
    int64_t v5 = 0;
  }
  return _swift_task_switch(v4, v5);
}

uint64_t sub_10005C50C()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005C5BC()
{
  uint64_t v38 = v0;
  *(void *)(v0 + 104) = *(void *)(v0 + 264);
  uint64_t v1 = *(void *)(v0 + 176);
  swift_errorRetain();
  sub_10000A390(&qword_1000B0870);
  char v2 = swift_dynamicCast();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v2)
  {
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v6 = *(void *)(v0 + 168);
    v3(v7, 0, 1, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v7, v6);
    LOBYTE(v7) = sub_10008B6D0();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    if (v7) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 160);
    v3(v8, 1, 1, *(void *)(v0 + 168));
    sub_10000CC24(v8, &qword_1000AF808);
  }
  uint64_t v9 = *(void *)(v0 + 240);
  *(void *)(v0 + 80) = *(void *)(v0 + 264);
  swift_errorRetain();
  char v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v10)
  {
    uint64_t v13 = *(void *)(v0 + 240);
    uint64_t v12 = *(void *)(v0 + 248);
    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 232);
    uint64_t v16 = *(void *)(v0 + 216);
    uint64_t v34 = *(void *)(v0 + 208);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v17 = *(void *)(v0 + 200);
    v11(v14, 0, 1, v15);
    uint64_t v36 = v12;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v14, v15);
    sub_10005D57C(&qword_1000AF820, 255, (void (*)(uint64_t))&type metadata accessor for URLError);
    sub_10008B950();
    sub_10008BCD0();
    sub_10005D57C(&qword_1000AF828, 255, (void (*)(uint64_t))&type metadata accessor for URLError.Code);
    sub_10008C140();
    sub_10008C140();
    uint64_t v20 = *(void *)(v0 + 120);
    uint64_t v19 = *(void *)(v0 + 128);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v21(v34, v18);
    v21(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v36, v15);
    if (v20 == v19)
    {
LABEL_7:
      swift_errorRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 224);
    v11(v24, 1, 1, *(void *)(v0 + 232));
    sub_10000CC24(v24, &qword_1000AF810);
  }
  if (qword_1000B4C20 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_10008BD50();
  sub_10000A358(v25, (uint64_t)qword_1000B4C28);
  swift_errorRetain();
  swift_unknownObjectRetain();
  swift_errorRetain();
  swift_unknownObjectRetain();
  uint64_t v26 = sub_10008BD30();
  os_log_type_t v27 = sub_10008C2F0();
  if (os_log_type_enabled(v26, v27))
  {
    long long v35 = *(_OWORD *)(v0 + 136);
    uint64_t v28 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446466;
    *(_OWORD *)(v0 + 64) = v35;
    swift_unknownObjectRetain();
    sub_10000A390(&qword_1000AF818);
    uint64_t v29 = sub_10008C010();
    *(void *)(v0 + 88) = sub_100009D00(v29, v30, &v37);
    sub_10008C440();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    swift_getErrorValue();
    uint64_t v31 = sub_10008C890();
    *(void *)(v0 + 112) = sub_100009D00(v31, v32, &v37);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "disabling backend '%{public}s' which returned error: %{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_unknownObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v33 = *(void *)(v0 + 152);
  return _swift_task_switch(sub_10005C42C, v33);
}

uint64_t sub_10005CBB0()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

unint64_t sub_10005CBEC()
{
  unint64_t result = qword_1000AF700;
  if (!qword_1000AF700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AF700);
  }
  return result;
}

uint64_t sub_10005CC40(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10000AA94;
  return v6(a1);
}

unsigned char *storeEnumTagSinglePayload for BackendGroup.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10005CDE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackendGroup.Error()
{
  return &type metadata for BackendGroup.Error;
}

uint64_t sub_10005CE18()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10005CE68()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_10001F8C8;
  return sub_10005C000((uint64_t)v6, v7, v8, v2, v3, v5, v4);
}

uint64_t sub_10005CF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AE3A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005CF7C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005CFB4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10000AA94;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000AF7E8 + dword_1000AF7E8);
  return v6(a1, v4);
}

void *sub_10005D06C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10000A390((uint64_t *)&unk_1000AF830);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10005D190(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10005D17C(void *a1)
{
  return sub_10005D06C(0, a1[2], 0, a1);
}

uint64_t sub_10005D190(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_10000A390(&qword_1000AF818);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_10005D29C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void **)result;
  unint64_t v3 = *(void *)(*(void *)result + 16);
  if (!v3) {
    return 0;
  }
  unint64_t v5 = (void *)result;
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  while (v2[v6 + 4] != a2)
  {
    ++v7;
    v6 += 2;
    if (v3 == v7) {
      return *(void *)(*(void *)result + 16);
    }
  }
  unint64_t v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  while (v8 != v3)
  {
    if (v8 >= v3)
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      return result;
    }
    uint64_t v9 = v2[v6 + 6];
    if (v9 != a2)
    {
      if (v8 != v7)
      {
        if (v7 >= v3) {
          goto LABEL_25;
        }
        uint64_t v10 = v2[v6 + 7];
        long long v13 = *(_OWORD *)&v2[2 * v7 + 4];
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v2 = sub_10005D17C(v2);
        }
        int64_t v11 = &v2[2 * v7];
        v11[4] = v9;
        v11[5] = v10;
        uint64_t result = swift_unknownObjectRelease();
        if (v8 >= v2[2]) {
          goto LABEL_26;
        }
        *(_OWORD *)&v2[v6 + 6] = v13;
        uint64_t result = swift_unknownObjectRelease();
        void *v5 = v2;
      }
      if (__OFADD__(v7++, 1)) {
        goto LABEL_24;
      }
      unint64_t v3 = v2[2];
    }
LABEL_11:
    ++v8;
    v6 += 2;
  }
  return v7;
}

uint64_t sub_10005D408(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10005D06C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_10000A390(&qword_1000AF818);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_10008C690();
  __break(1u);
  return result;
}

uint64_t sub_10005D57C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005D5C4()
{
  type metadata accessor for RequestOptions();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  swift_beginAccess();
  *(void *)(v0 + 16) = 0;
  uint64_t result = swift_unknownObjectRelease();
  static RequestOptions.globalRequestOptions = v0;
  return result;
}

uint64_t RequestOptions.__allocating_init(networkingDelegate:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  swift_unknownObjectRelease();
  return v2;
}

uint64_t *RequestOptions.globalRequestOptions.unsafeMutableAddressor()
{
  if (qword_1000B4E40 != -1) {
    swift_once();
  }
  return &static RequestOptions.globalRequestOptions;
}

uint64_t static RequestOptions.globalRequestOptions.getter()
{
  if (qword_1000B4E40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static RequestOptions.globalRequestOptions.setter(uint64_t a1)
{
  if (qword_1000B4E40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static RequestOptions.globalRequestOptions = a1;
  return swift_release();
}

uint64_t (*static RequestOptions.globalRequestOptions.modify())()
{
  if (qword_1000B4E40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t RequestOptions.init(networkingDelegate:)(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  swift_unknownObjectRelease();
  return v1;
}

id sub_10005D8C4(unsigned int a1)
{
  char v2 = a1;
  uint64_t v3 = (a1 >> 8) & 1;
  id v4 = [objc_allocWithZone((Class)C2RequestOptions) init];
  objc_msgSend(v4, "set_timeoutIntervalForRequest:", 5.0);
  [v4 setAllowsCellularAccess:v2 & 1];
  objc_msgSend(v4, "set_allowsExpensiveAccess:", v3);
  NSString v5 = sub_10008BF80();
  objc_msgSend(v4, "set_sourceApplicationBundleIdentifier:", v5);

  swift_beginAccess();
  if (*(void *)(v1 + 16)) {
    objc_msgSend(v4, "setNetworkingDelegate:");
  }
  return v4;
}

uint64_t RequestOptions.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RequestOptions.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequestOptions()
{
  return self;
}

uint64_t sub_10005DA30()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6E38);
  sub_10000A358(v0, (uint64_t)qword_1000B6E38);
  return sub_10008BD40();
}

uint64_t sub_10005DAA8(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + OBJC_IVAR____TtC21CloudTelemetryService8Throttle_state) = 0;
  uint64_t v3 = v2 + OBJC_IVAR____TtC21CloudTelemetryService8Throttle_location;
  uint64_t v4 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

void sub_10005DB40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

id sub_10005DB70()
{
  uint64_t v1 = OBJC_IVAR____TtC21CloudTelemetryService8Throttle_state;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC21CloudTelemetryService8Throttle_state);
  if (!v2)
  {
    uint64_t v9 = sub_10008BA80();
    unint64_t v11 = v10;
    uint64_t v12 = self;
    sub_10000A494(v9, v11);
    Class isa = sub_10008BAC0().super.isa;
    sub_10000A43C(v9, v11);
    *(void *)&long long v26 = 0;
    id v14 = [v12 propertyListWithData:isa options:0 format:0 error:&v26];

    if (v14)
    {
      id v15 = (id)v26;
      sub_10008C470();
      sub_10000A43C(v9, v11);
      swift_unknownObjectRelease();
      sub_10000A390(&qword_1000AE630);
      int v16 = swift_dynamicCast();
      uint64_t v17 = v25;
      if (!v16) {
        uint64_t v17 = 0;
      }
    }
    else
    {
      id v24 = (id)v26;
      sub_10008B960();

      swift_willThrow();
      sub_10000A43C(v9, v11);
      swift_errorRelease();
      uint64_t v17 = 0;
    }
    *(void *)(v0 + v1) = v17;
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v0 + v1);
    if (!v2) {
      return 0;
    }
  }
  if (!*(void *)(v2 + 16)) {
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_100011F50(0xD000000000000011, 0x8000000100093AB0);
  if ((v4 & 1) == 0) {
    goto LABEL_17;
  }
  sub_10000CD38(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v26);
  sub_10005EBEC();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_17;
  }
  if (!*(void *)(v2 + 16)
    || (unint64_t v5 = sub_100011F50(0xD000000000000012, 0x8000000100093AD0), (v6 & 1) == 0)
    || (sub_10000CD38(*(void *)(v2 + 56) + 32 * v5, (uint64_t)&v26), (swift_dynamicCast() & 1) == 0))
  {

LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    if (qword_1000B4E50 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10008BD50();
    sub_10000A358(v18, (uint64_t)qword_1000B6E38);
    uint64_t v19 = sub_10008BD30();
    os_log_type_t v20 = sub_10008C2F0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "failed to decode throttle state", v21, 2u);
      swift_slowDealloc();
    }
    id v22 = 0;
    goto LABEL_23;
  }
  if (*(void *)(v2 + 16) && (unint64_t v7 = sub_100011F50(0x756F437972746572, 0xEC0000007265746ELL), (v8 & 1) != 0))
  {
    sub_10000CD38(*(void *)(v2 + 56) + 32 * v7, (uint64_t)&v26);
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v27 + 1))
  {

    sub_10005F2D4((uint64_t)&v26);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_18;
  }
  uint64_t v19 = v25;
  [v25 doubleValue];
  [v25 doubleValue];
  id v22 = [v25 integerValue];

LABEL_23:
  return v22;
}

void sub_10005DFDC(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  id v7 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a2];
  unint64_t v8 = sub_10005EBEC();
  unint64_t v28 = v8;
  *(void *)&long long v27 = v7;
  sub_100039CE0(&v27, v26);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10005EF2C(v26, 0xD000000000000011, 0x8000000100093AB0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v10 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a3];
  unint64_t v28 = v8;
  *(void *)&long long v27 = v10;
  sub_100039CE0(&v27, v26);
  char v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_10005EF2C(v26, 0xD000000000000012, 0x8000000100093AD0, v11);
  swift_bridgeObjectRelease();
  id v12 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
  unint64_t v28 = v8;
  *(void *)&long long v27 = v12;
  sub_100039CE0(&v27, v26);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_10005EF2C(v26, 0x756F437972746572, 0xEC0000007265746ELL, v13);
  swift_bridgeObjectRelease();
  *(void *)(v4 + OBJC_IVAR____TtC21CloudTelemetryService8Throttle_state) = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v14 = self;
  Class isa = sub_10008BEE0().super.isa;
  swift_bridgeObjectRelease();
  *(void *)&long long v27 = 0;
  id v16 = [v14 dataWithPropertyList:isa format:100 options:0 error:&v27];

  id v17 = (id)v27;
  if (v16)
  {
    uint64_t v18 = sub_10008BAE0();
    unint64_t v20 = v19;

    sub_10000A494(v18, v20);
    sub_10008BAF0();
    sub_10000A43C(v18, v20);
    sub_10000A43C(v18, v20);
  }
  else
  {
    uint64_t v21 = v17;
    sub_10008B960();

    swift_willThrow();
    swift_errorRelease();
    if (qword_1000B4E50 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_10008BD50();
    sub_10000A358(v22, (uint64_t)qword_1000B6E38);
    uint64_t v23 = sub_10008BD30();
    os_log_type_t v24 = sub_10008C2F0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "failed to encode throttle", v25, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10005E488()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_10005E518, v0);
}

uint64_t sub_10005E518()
{
  *(void *)(v0[3] + OBJC_IVAR____TtC21CloudTelemetryService8Throttle_state) = 0;
  swift_bridgeObjectRelease();
  id v1 = [self defaultManager];
  sub_10008B9C0((NSURL *)OBJC_IVAR____TtC21CloudTelemetryService8Throttle_location);
  uint64_t v3 = v2;
  v0[2] = 0;
  unsigned int v4 = [v1 removeItemAtURL:v2 error:v0 + 2];

  unint64_t v5 = (void *)v0[2];
  if (v4)
  {
    id v6 = v5;
  }
  else
  {
    id v7 = v5;
    sub_10008B960();

    swift_willThrow();
    if (qword_1000B4E50 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10008BD50();
    sub_10000A358(v8, (uint64_t)qword_1000B6E38);
    uint64_t v9 = sub_10008BD30();
    os_log_type_t v10 = sub_10008C2F0();
    if (os_log_type_enabled(v9, v10))
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "failed to clear throttle", v11, 2u);
      swift_slowDealloc();
    }
    swift_errorRelease();
  }
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10005E714()
{
  v1[2] = v0;
  uint64_t v2 = sub_10008BBB0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_10005E7D4, v0);
}

uint64_t sub_10005E7D4()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_10005DB70();
  double v5 = v4;
  double v7 = v6;
  sub_10008BB70();
  sub_10008BB60();
  double v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  BOOL v10 = 1;
  if (v5 != 0.0) {
    BOOL v10 = v7 == 0.0 || v9 + 3600.0 < v5 || v5 + v7 < v9;
  }
  swift_task_dealloc();
  id v12 = (uint64_t (*)(BOOL))v0[1];
  return v12(v10);
}

uint64_t sub_10005E8C4()
{
  v1[2] = v0;
  uint64_t v2 = sub_10008BBB0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_10005E984, v0);
}

uint64_t sub_10005E984()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  int64_t v4 = (int64_t)sub_10005DB70();
  sub_10008BB70();
  sub_10008BB60();
  double v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t result = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
  }
  else
  {
    double v8 = 86400.0;
    if ((double)(v4 ^ 2) <= 86400.0) {
      double v8 = (double)(v4 ^ 2);
    }
    sub_10005DFDC(result, v6, v8);
    swift_task_dealloc();
    double v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  return result;
}

uint64_t sub_10005EA68()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21CloudTelemetryService8Throttle_location;
  uint64_t v2 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10005EAF4()
{
  return type metadata accessor for Throttle();
}

uint64_t type metadata accessor for Throttle()
{
  uint64_t result = qword_1000B4EF0;
  if (!qword_1000B4EF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10005EB48()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_10005EBEC()
{
  unint64_t result = qword_1000AF170;
  if (!qword_1000AF170)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000AF170);
  }
  return result;
}

uint64_t sub_10005EC2C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000A390(&qword_1000AFA48);
  uint64_t v6 = sub_10008C670();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      os_log_type_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_100039CE0(v24, v35);
      }
      else
      {
        sub_10000CD38((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_10008C8F0();
      sub_10008C050();
      uint64_t result = sub_10008C920();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      id v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *id v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_100039CE0(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_10005EF2C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100011F50(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10005F0EC();
      goto LABEL_7;
    }
    sub_10005EC2C(v15, a4 & 1);
    unint64_t v21 = sub_100011F50(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      int64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_10008C880();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_10000CCE8((uint64_t)v19);
    return sub_100039CE0(a1, v19);
  }
LABEL_13:
  sub_10005F080(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_10005F080(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  void *v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100039CE0(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_10005F0EC()
{
  unint64_t v1 = v0;
  sub_10000A390(&qword_1000AFA48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10008C660();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10000CD38(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_100039CE0(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    unint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10005F2D4(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AE638);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005F334()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6E50);
  sub_10000A358(v0, (uint64_t)qword_1000B6E50);
  return sub_10008BD40();
}

uint64_t sub_10005F3B0()
{
  v1[7] = v0;
  uint64_t v2 = sub_10008BBB0();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_10005F480, v0);
}

uint64_t sub_10005F480()
{
  uint64_t v1 = *(void *)(v0[7] + 112);
  v0[12] = v1;
  if (v1)
  {
    uint64_t v2 = v0[10];
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[9];
    swift_retain();
    sub_10008BB70();
    sub_10008BB20();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v0[13] = v5;
    v0[14] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v5(v2, v3);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[15] = v6;
    void *v6 = v0;
    v6[1] = sub_10005F68C;
    uint64_t v7 = v0[11];
    return sub_100027138(v7);
  }
  else
  {
    if (qword_1000B4F00 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10008BD50();
    sub_10000A358(v9, (uint64_t)qword_1000B6E50);
    uint64_t v10 = sub_10008BD30();
    os_log_type_t v11 = sub_10008C310();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "cleanup cache activity skipped due to bad initialization", v12, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_10005F68C()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[7];
    return _swift_task_switch(sub_10005F9B4, v3);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v2[17] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_10005F7FC;
    return sub_100028350();
  }
}

uint64_t sub_10005F7FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_10005FC08;
  }
  else {
    uint64_t v4 = sub_10005F928;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_10005F928()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10005F9B4()
{
  uint64_t v10 = v0;
  (*(void (**)(void, void))(v0 + 104))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  if (qword_1000B4F00 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B6E50);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C300();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = sub_10008C890();
    *(void *)(v0 + 48) = sub_100009D00(v5, v6, &v9);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to delete outdated sessions: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10005FC08()
{
  uint64_t v10 = v0;
  (*(void (**)(void, void))(v0 + 104))(*(void *)(v0 + 88), *(void *)(v0 + 64));
  if (qword_1000B4F00 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B6E50);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C300();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = sub_10008C890();
    *(void *)(v0 + 48) = sub_100009D00(v5, v6, &v9);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to delete outdated sessions: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10005FE5C()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 104) + **(int **)(*(void *)v0 + 104));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_10000AA94;
  return v4();
}

uint64_t sub_10005FF50()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10005FF94()
{
  uint64_t v0 = *(void *)CacheCleanupActivityConfig.identifier.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10005FFC8(uint64_t a1)
{
  unint64_t result = sub_10005FFF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10005FFF0()
{
  unint64_t result = qword_1000AFA60;
  if (!qword_1000AFA60)
  {
    type metadata accessor for CacheCleanupActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFA60);
  }
  return result;
}

uint64_t type metadata accessor for CacheCleanupActivity()
{
  return self;
}

BOOL sub_100060068(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t sub_10006007C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100060E50(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

unint64_t sub_1000600AC(char a1)
{
  unint64_t result = 0x79745F746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C72755F74736F70;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
    case 5:
    case 6:
    case 16:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x5F64656C62616E65;
      break;
    case 8:
      unint64_t result = 0x6C625F746E657665;
      break;
    case 9:
      unint64_t result = 0x68775F746E657665;
      break;
    case 10:
      unint64_t result = 0x68745F746E657665;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 12:
      unint64_t result = 0x737265746C6966;
      break;
    case 13:
      unint64_t result = 0x635F646568736168;
      break;
    case 14:
      unint64_t result = 0x6863726172656968;
      break;
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 17:
      unint64_t result = 0x656469727265766FLL;
      break;
    case 18:
      unint64_t result = 0x746C6165725F7369;
      break;
    case 19:
      unint64_t result = 0xD000000000000011;
      break;
    case 20:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100060358(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1000600AC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000600AC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10008C7D0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1000603E4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000736570;
  uint64_t v3 = 0x79745F746E657665;
  uint64_t v4 = a1;
  uint64_t v5 = 0x79745F746E657665;
  unint64_t v6 = 0xEB00000000736570;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0x8000000100093B70;
      uint64_t v5 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v7 = 0x7265746C6966;
      goto LABEL_5;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v7 = 0x747069726373;
LABEL_5:
      uint64_t v5 = v7 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x8000000100093B70;
      if (v5 == 0xD000000000000012) {
        goto LABEL_13;
      }
      goto LABEL_15;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x737265746C6966;
      goto LABEL_10;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x73747069726373) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v5 != v3) {
        goto LABEL_15;
      }
LABEL_13:
      if (v6 == v2) {
        char v8 = 1;
      }
      else {
LABEL_15:
      }
        char v8 = sub_10008C7D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

Swift::Int sub_100060588()
{
  char v1 = *v0;
  sub_10008C8F0();
  sub_1000600AC(v1);
  sub_10008C050();
  swift_bridgeObjectRelease();
  return sub_10008C920();
}

Swift::Int sub_1000605EC()
{
  return sub_10008C920();
}

uint64_t sub_1000606D0()
{
  sub_1000600AC(*v0);
  sub_10008C050();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100060724()
{
  char v1 = *v0;
  sub_10008C8F0();
  sub_1000600AC(v1);
  sub_10008C050();
  swift_bridgeObjectRelease();
  return sub_10008C920();
}

Swift::Int sub_100060784()
{
  return sub_10008C920();
}

uint64_t sub_100060864@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100061008();
  *a1 = result;
  return result;
}

unint64_t sub_100060894@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000600AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000608C0()
{
  return sub_1000600AC(*v0);
}

uint64_t sub_1000608C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100061008();
  *a1 = result;
  return result;
}

void sub_1000608F0(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_1000608FC(uint64_t a1)
{
  unint64_t v2 = sub_100063610();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100060938(uint64_t a1)
{
  unint64_t v2 = sub_100063610();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100060974@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10006105C(a1, (uint64_t)v10);
  if (!v2)
  {
    long long v5 = v10[11];
    *(_OWORD *)(a2 + 160) = v10[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(void *)(a2 + 192) = v11;
    long long v6 = v10[7];
    *(_OWORD *)(a2 + 96) = v10[6];
    *(_OWORD *)(a2 + 112) = v6;
    long long v7 = v10[9];
    *(_OWORD *)(a2 + 128) = v10[8];
    *(_OWORD *)(a2 + 144) = v7;
    long long v8 = v10[3];
    *(_OWORD *)(a2 + 32) = v10[2];
    *(_OWORD *)(a2 + 48) = v8;
    long long v9 = v10[5];
    *(_OWORD *)(a2 + 64) = v10[4];
    *(_OWORD *)(a2 + 80) = v9;
    __n128 result = (__n128)v10[1];
    *(_OWORD *)a2 = v10[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1000609F8()
{
  if (*v0) {
    return 0x6C6F687365726874;
  }
  else {
    return 0x7972746E756F63;
  }
}

uint64_t sub_100060A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100061EC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100060A60(uint64_t a1)
{
  unint64_t v2 = sub_1000636B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100060A9C(uint64_t a1)
{
  unint64_t v2 = sub_1000636B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100060AD8(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v5 = sub_100061FC8(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(double *)(a2 + 8) = v5;
  }
}

uint64_t sub_100060B08(unsigned __int8 *a1, char *a2)
{
  return sub_1000603E4(*a1, *a2);
}

Swift::Int sub_100060B14()
{
  return sub_1000605EC();
}

uint64_t sub_100060B1C()
{
  sub_10008C050();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100060BE8()
{
  return sub_100060784();
}

uint64_t sub_100060BF0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000621D8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100060C20(void *a1@<X8>)
{
  unint64_t v2 = 0xEB00000000736570;
  unint64_t v3 = 0x79745F746E657665;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x8000000100093B70;
      unint64_t v3 = 0xD000000000000012;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x7265746C6966;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 0x747069726373;
LABEL_6:
      *a1 = v4 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_100060CC0()
{
  unint64_t result = 0x79745F746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x737265746C6966;
      break;
    case 3:
      unint64_t result = 0x73747069726373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100060D5C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000621D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100060D84(uint64_t a1)
{
  unint64_t v2 = sub_1000635BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100060DC0(uint64_t a1)
{
  unint64_t v2 = sub_1000635BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100060DFC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100062224(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100060E50(void *a1)
{
  uint64_t v3 = (uint64_t)sub_10000A784(a1, a1[3]);
  sub_10008C940();
  if (!v1)
  {
    sub_10000A784(v9, v9[3]);
    char v4 = sub_10008C7F0();
    if (!v4)
    {
      uint64_t v3 = 1;
      goto LABEL_10;
    }
    if (v4 == 1)
    {
      uint64_t v3 = 0;
LABEL_10:
      sub_10000CCE8((uint64_t)v9);
      sub_10000CCE8((uint64_t)a1);
      return v3;
    }
    uint64_t v6 = sub_10008C5A0();
    swift_allocError();
    long long v8 = v7;
    sub_10000A390(&qword_1000AFBC8);
    *long long v8 = &type metadata for StorebagBool;
    uint64_t v3 = (uint64_t)sub_10000A784(a1, a1[3]);
    sub_10008C930();
    sub_10008C590();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v6 - 8) + 104))(v8, enum case for DecodingError.typeMismatch(_:), v6);
    swift_willThrow();
    sub_10000CCE8((uint64_t)v9);
  }
  sub_10000CCE8((uint64_t)a1);
  return v3;
}

uint64_t sub_100061008()
{
  unint64_t v0 = sub_10008C850();
  swift_bridgeObjectRelease();
  if (v0 >= 0x15) {
    return 21;
  }
  else {
    return v0;
  }
}

uint64_t sub_10006105C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A390(&qword_1000AFB90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v142 = a1;
  sub_10000A784(a1, v9);
  sub_100063610();
  sub_10008C950();
  if (v2) {
    return sub_10000CCE8((uint64_t)v142);
  }
  uint64_t v10 = v6;
  LOBYTE(v86) = 0;
  uint64_t v11 = sub_10008C710();
  uint64_t v13 = v12;
  LOBYTE(v86) = 1;
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_10008C710();
  uint64_t v66 = v11;
  LOBYTE(v86) = 2;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10008C6D0();
  uint64_t v72 = v15;
  uint64_t v64 = v16;
  char v141 = v17 & 1;
  LOBYTE(v86) = 3;
  LODWORD(v15) = v17;
  uint64_t v18 = sub_10008C700();
  int v61 = v19;
  int v62 = v15;
  uint64_t v63 = v18;
  char v139 = v19 & 1;
  LOBYTE(v73) = 4;
  unint64_t v20 = sub_100063708();
  sub_10008C6E0();
  uint64_t v70 = v10;
  unint64_t v59 = v20;
  int v58 = v86;
  uint64_t v21 = sub_10000A390(&qword_1000AEC10);
  LOBYTE(v73) = 5;
  uint64_t v60 = sub_10006375C((unint64_t *)&qword_1000AF1F0, &qword_1000AEC10);
  sub_10008C6E0();
  LOBYTE(v73) = 6;
  uint64_t v57 = v86;
  swift_bridgeObjectRetain();
  sub_10008C6E0();
  uint64_t v56 = v21;
  uint64_t v22 = v86;
  LOBYTE(v86) = 7;
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_10008C6C0();
  uint64_t v55 = v23;
  uint64_t v25 = v24;
  uint64_t v26 = sub_10000A390(&qword_1000AFBA0);
  LOBYTE(v73) = 8;
  sub_10006375C(&qword_1000AFBA8, &qword_1000AFBA0);
  uint64_t v71 = v25;
  swift_bridgeObjectRetain();
  uint64_t v69 = v26;
  sub_10008C6E0();
  LOBYTE(v73) = 9;
  uint64_t v70 = v86;
  swift_bridgeObjectRetain();
  sub_10008C6E0();
  uint64_t v27 = v86;
  LOBYTE(v86) = 10;
  uint64_t v69 = v27;
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_10008C700();
  int v53 = v28;
  char v136 = v28 & 1;
  LOBYTE(v73) = 11;
  sub_10008C6E0();
  int v51 = v86;
  sub_10000A390(&qword_1000AFB50);
  LOBYTE(v73) = 12;
  sub_100063664(&qword_1000AFB70, &qword_1000AFB50);
  sub_10008C730();
  uint64_t v29 = v86;
  char v133 = v88;
  LOBYTE(v86) = 13;
  uint64_t v67 = v87;
  uint64_t v68 = v29;
  int v50 = v88;
  sub_100054C30();
  uint64_t v49 = sub_10008C6C0();
  uint64_t v31 = v30;
  LOBYTE(v73) = 14;
  swift_bridgeObjectRetain();
  sub_10008C6E0();
  int v48 = v86;
  LOBYTE(v73) = 15;
  sub_10008C6E0();
  int v47 = v86;
  LOBYTE(v73) = 16;
  sub_10008C6E0();
  LOBYTE(v73) = 17;
  uint64_t v60 = v86;
  swift_bridgeObjectRetain();
  sub_10008C6E0();
  LODWORD(v56) = v86;
  LOBYTE(v73) = 18;
  sub_10008C6E0();
  int v46 = v86;
  LOBYTE(v73) = 19;
  sub_10008C6E0();
  LODWORD(v59) = v86;
  sub_10000A390(&qword_1000AFBB0);
  char v126 = 20;
  sub_1000637C0();
  sub_10008C6E0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  uint64_t v45 = v127;
  *(void *)&long long v73 = v66;
  *((void *)&v73 + 1) = v13;
  *(void *)&long long v74 = v65;
  *((void *)&v74 + 1) = v72;
  *(void *)&long long v75 = v64;
  BYTE8(v75) = v62 & 1;
  *(void *)&long long v76 = v63;
  BYTE8(v76) = v61 & 1;
  BYTE9(v76) = v58;
  *(void *)&long long v77 = v57;
  *((void *)&v77 + 1) = v55;
  *(void *)&long long v78 = v54;
  *((void *)&v78 + 1) = v71;
  *(void *)&long long v79 = v70;
  *((void *)&v79 + 1) = v69;
  *(void *)&long long v80 = v52;
  BYTE8(v80) = v53 & 1;
  BYTE9(v80) = v51;
  *(void *)&long long v81 = v68;
  *((void *)&v81 + 1) = v67;
  LOBYTE(v82) = v50;
  *((void *)&v82 + 1) = v49;
  *(void *)&long long v83 = v31;
  uint64_t v44 = v31;
  BYTE8(v83) = v48;
  BYTE9(v83) = v47;
  *(void *)&long long v84 = v60;
  BYTE8(v84) = v56;
  BYTE9(v84) = v46;
  BYTE10(v84) = v59;
  uint64_t v85 = v127;
  sub_100056308((uint64_t)&v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100054C54();
  swift_bridgeObjectRelease();
  uint64_t v32 = v72;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v55;
  swift_bridgeObjectRelease();
  uint64_t v34 = v71;
  swift_bridgeObjectRelease();
  uint64_t v35 = v70;
  swift_bridgeObjectRelease();
  uint64_t v36 = v69;
  swift_bridgeObjectRelease();
  sub_10000CCE8((uint64_t)v142);
  uint64_t v86 = v66;
  uint64_t v87 = v13;
  uint64_t v88 = v65;
  uint64_t v89 = v32;
  uint64_t v90 = v64;
  char v91 = v141;
  *(_DWORD *)Swift::String v92 = *(_DWORD *)v140;
  *(_DWORD *)&v92[3] = *(_DWORD *)&v140[3];
  uint64_t v93 = v63;
  char v94 = v139;
  char v95 = v58;
  int v96 = v137;
  __int16 v97 = v138;
  uint64_t v98 = v57;
  uint64_t v99 = v33;
  uint64_t v100 = v54;
  uint64_t v101 = v34;
  uint64_t v102 = v35;
  uint64_t v103 = v36;
  uint64_t v104 = v52;
  char v105 = v136;
  char v106 = v51;
  int v107 = v134;
  __int16 v108 = v135;
  uint64_t v109 = v68;
  uint64_t v110 = v67;
  char v111 = v133;
  *(_DWORD *)&uint64_t v112[3] = *(_DWORD *)&v132[3];
  *(_DWORD *)uint64_t v112 = *(_DWORD *)v132;
  uint64_t v113 = v49;
  uint64_t v114 = v44;
  char v115 = v48;
  char v116 = v47;
  __int16 v118 = v131;
  int v117 = v130;
  uint64_t v119 = v60;
  char v120 = v56;
  char v121 = v46;
  char v122 = v59;
  char v124 = v129;
  int v123 = v128;
  uint64_t v125 = v45;
  uint64_t result = sub_1000563E0((uint64_t)&v86);
  long long v38 = v84;
  *(_OWORD *)(a2 + 160) = v83;
  *(_OWORD *)(a2 + 176) = v38;
  *(void *)(a2 + 192) = v85;
  long long v39 = v80;
  *(_OWORD *)(a2 + 96) = v79;
  *(_OWORD *)(a2 + 112) = v39;
  long long v40 = v82;
  *(_OWORD *)(a2 + 128) = v81;
  *(_OWORD *)(a2 + 144) = v40;
  long long v41 = v76;
  *(_OWORD *)(a2 + 32) = v75;
  *(_OWORD *)(a2 + 48) = v41;
  long long v42 = v78;
  *(_OWORD *)(a2 + 64) = v77;
  *(_OWORD *)(a2 + 80) = v42;
  long long v43 = v74;
  *(_OWORD *)a2 = v73;
  *(_OWORD *)(a2 + 16) = v43;
  return result;
}

uint64_t sub_100061EC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972746E756F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_10008C7D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_10008C7D0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_100061FC8(void *a1)
{
  uint64_t v4 = sub_10000A390(&qword_1000AFB88);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000A784(a1, a1[3]);
  sub_1000636B4();
  sub_10008C950();
  if (v1)
  {
    sub_10000CCE8((uint64_t)a1);
  }
  else
  {
    sub_10000A390(&qword_1000AEC10);
    v10[15] = 0;
    sub_10006375C((unint64_t *)&qword_1000AF1F0, &qword_1000AEC10);
    sub_10008C730();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    sub_10008C720();
    double v2 = v9;
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10000CCE8((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1000621D8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_1000A8388;
  v6._object = a2;
  unint64_t v4 = sub_10008C6B0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_100062224@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A390(&qword_1000AFB68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A784(a1, a1[3]);
  sub_1000635BC();
  sub_10008C950();
  if (v2) {
    return sub_10000CCE8((uint64_t)a1);
  }
  sub_10000A390(&qword_1000AEC10);
  char v32 = 0;
  sub_10006375C((unint64_t *)&qword_1000AF1F0, &qword_1000AEC10);
  sub_10008C730();
  uint64_t v9 = v28;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10008C6D0();
  int v31 = v11;
  uint64_t v27 = v10;
  sub_10000A390(&qword_1000AFB50);
  char v32 = 2;
  sub_100063664(&qword_1000AFB70, &qword_1000AFB50);
  sub_10008C6E0();
  uint64_t v12 = v28;
  uint64_t v13 = v29;
  HIDWORD(v23) = v30;
  uint64_t v24 = sub_10000A390(&qword_1000AFB78);
  uint64_t v25 = v13;
  char v32 = 3;
  uint64_t v26 = v12;
  uint64_t v14 = v13;
  LOBYTE(v13) = BYTE4(v23);
  sub_100054C18(v12, v14, BYTE4(v23));
  sub_100063664(&qword_1000AFB80, &qword_1000AFB78);
  sub_10008C730();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v28;
  uint64_t v16 = v29;
  unsigned __int8 v17 = v30;
  sub_100054C30();
  sub_10000CCE8((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v18 = v26;
  unsigned __int8 v19 = v13;
  uint64_t v20 = v25;
  sub_100054C3C(v26, v25, v19);
  uint64_t result = sub_100054C54();
  uint64_t v22 = v27;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 16) = v31 & 1;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v20;
  *(unsigned char *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v16;
  *(unsigned char *)(a2 + 64) = v17;
  return result;
}

unint64_t sub_1000625C8()
{
  unint64_t result = qword_1000AFB18;
  if (!qword_1000AFB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB18);
  }
  return result;
}

unint64_t sub_100062620()
{
  unint64_t result = qword_1000AFB20;
  if (!qword_1000AFB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB20);
  }
  return result;
}

unint64_t sub_100062678()
{
  unint64_t result = qword_1000AFB28;
  if (!qword_1000AFB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB28);
  }
  return result;
}

unint64_t sub_1000626D0()
{
  unint64_t result = qword_1000AFB30;
  if (!qword_1000AFB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB30);
  }
  return result;
}

unint64_t sub_100062728()
{
  unint64_t result = qword_1000AFB38;
  if (!qword_1000AFB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB38);
  }
  return result;
}

unint64_t sub_100062780()
{
  unint64_t result = qword_1000AFB40;
  if (!qword_1000AFB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB40);
  }
  return result;
}

unint64_t sub_1000627D8()
{
  unint64_t result = qword_1000AFB48;
  if (!qword_1000AFB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB48);
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagBool()
{
  return &type metadata for StorebagBool;
}

uint64_t destroy for StorebagSectionClientHTTP()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100054C54();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 136);
  char v13 = *(unsigned char *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100054C30();
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = v10;
  *(unsigned char *)(a1 + 144) = v13;
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  uint64_t v7 = *(void *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 136);
  char v9 = *(unsigned char *)(a2 + 144);
  sub_100054C30();
  *(void *)(a1 + 128) = v7;
  *(void *)(a1 + 136) = v8;
  *(unsigned char *)(a1 + 144) = v9;
  sub_100054C54();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionClientHTTP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  char v6 = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = v6;
  sub_100054C54();
  uint64_t v7 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_WORD *)(a1 + 185) = *(_WORD *)(a2 + 185);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientHTTP(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionClientHTTP(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientHTTP()
{
  return &type metadata for StorebagSectionClientHTTP;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientHTTP.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionClientHTTP.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *__n128 result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100062F7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientHTTP.CodingKeys()
{
  return &type metadata for StorebagSectionClientHTTP.CodingKeys;
}

void *initializeBufferWithCopyOfBuffer for StorebagSectionPerCountrySampling(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StorebagSectionPerCountrySampling(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for StorebagSectionPerCountrySampling(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for StorebagSectionPerCountrySampling()
{
  return &type metadata for StorebagSectionPerCountrySampling;
}

uint64_t destroy for StorebagSectionClientScriptGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 40) != 255) {
    sub_100054C54();
  }
  return sub_100054C54();
}

uint64_t initializeWithCopy for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 32);
    sub_100054C30();
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(unsigned char *)(a1 + 40) = v5 & 1;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  char v10 = *(unsigned char *)(a2 + 64);
  sub_100054C30();
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  return a1;
}

uint64_t assignWithCopy for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  int v5 = (long long *)(a1 + 24);
  uint64_t v6 = (long long *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v7 == 255)
    {
      long long v9 = *v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      long long *v5 = v9;
    }
    else
    {
      char v13 = v7 & 1;
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 32);
      sub_100054C30();
      *(void *)(a1 + 24) = v14;
      *(void *)(a1 + 32) = v15;
      *(unsigned char *)(a1 + 40) = v13;
    }
  }
  else if (v7 == 255)
  {
    sub_1000632C4(a1 + 24);
    char v8 = *(unsigned char *)(a2 + 40);
    long long *v5 = *v6;
    *(unsigned char *)(a1 + 40) = v8;
  }
  else
  {
    char v10 = v7 & 1;
    uint64_t v11 = *(void *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    sub_100054C30();
    *(void *)(a1 + 24) = v11;
    *(void *)(a1 + 32) = v12;
    *(unsigned char *)(a1 + 40) = v10;
    sub_100054C54();
  }
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  char v18 = *(unsigned char *)(a2 + 64);
  sub_100054C30();
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(unsigned char *)(a1 + 64) = v18;
  sub_100054C54();
  return a1;
}

uint64_t sub_1000632C4(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AFB50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 initializeWithTake for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for StorebagSectionClientScriptGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v4 = (_OWORD *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 != 255)
    {
      *(_OWORD *)(a1 + 24) = *v4;
      *(unsigned char *)(a1 + 40) = v5 & 1;
      sub_100054C54();
      goto LABEL_6;
    }
    sub_1000632C4(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
LABEL_6:
  char v6 = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = v6;
  sub_100054C54();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagSectionClientScriptGroup(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StorebagSectionClientScriptGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientScriptGroup()
{
  return &type metadata for StorebagSectionClientScriptGroup;
}

unsigned char *storeEnumTagSinglePayload for StorebagSectionClientScriptGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100063584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionClientScriptGroup.CodingKeys()
{
  return &type metadata for StorebagSectionClientScriptGroup.CodingKeys;
}

unint64_t sub_1000635BC()
{
  unint64_t result = qword_1000AFB58;
  if (!qword_1000AFB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB58);
  }
  return result;
}

unint64_t sub_100063610()
{
  unint64_t result = qword_1000AFB60;
  if (!qword_1000AFB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB60);
  }
  return result;
}

uint64_t sub_100063664(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A540(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000636B4()
{
  unint64_t result = qword_1000B5920[0];
  if (!qword_1000B5920[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B5920);
  }
  return result;
}

unint64_t sub_100063708()
{
  unint64_t result = qword_1000AFB98;
  if (!qword_1000AFB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFB98);
  }
  return result;
}

uint64_t sub_10006375C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000A540(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000637C0()
{
  unint64_t result = qword_1000AFBB8;
  if (!qword_1000AFBB8)
  {
    sub_10000A540(&qword_1000AFBB0);
    sub_100063834();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFBB8);
  }
  return result;
}

unint64_t sub_100063834()
{
  unint64_t result = qword_1000AFBC0;
  if (!qword_1000AFBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFBC0);
  }
  return result;
}

unsigned char *_s21CloudTelemetryService12StorebagBoolOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100063954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagSectionPerCountrySampling.CodingKeys()
{
  return &type metadata for StorebagSectionPerCountrySampling.CodingKeys;
}

unint64_t sub_100063990()
{
  unint64_t result = qword_1000B5A30[0];
  if (!qword_1000B5A30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B5A30);
  }
  return result;
}

unint64_t sub_1000639E8()
{
  unint64_t result = qword_1000B5B40;
  if (!qword_1000B5B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B5B40);
  }
  return result;
}

unint64_t sub_100063A40()
{
  unint64_t result = qword_1000B5B48[0];
  if (!qword_1000B5B48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000B5B48);
  }
  return result;
}

const char *sub_100063AA4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0x6F727245204C5153;
  if (a3) {
    uint64_t v4 = a2;
  }
  uint64_t v9 = v4;
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 8250;
  v10._object = (void *)0xE200000000000000;
  sub_10008C090(v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t result = sqlite3_errstr(a1);
  if (result)
  {
    uint64_t v6 = sub_10008C0A0();
    char v8 = v7;
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = v6;
    v11._object = v8;
    sub_10008C090(v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (const char *)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

const char *sub_100063B80()
{
  return sub_100063AA4(*(_DWORD *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

unint64_t sub_100063B8C(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD000000000000026;
      break;
    case 3:
      unint64_t result = 0x6465736F6C63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100063C18(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD000000000000026;
      break;
    case 3:
      unint64_t result = 0x6465736F6C63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100063CA4()
{
  return sub_100063C18(*v0);
}

unint64_t sub_100063CAC()
{
  return sub_100063B8C(*v0);
}

uint64_t type metadata accessor for SQLiteDB.Location()
{
  uint64_t result = qword_1000B6060;
  if (!qword_1000B6060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100063D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SQLiteDB.Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063D64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10008BA60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&ppDb - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SQLiteDB.Location();
  __chkstk_darwin(v8 - 8);
  Swift::String v10 = (char *)&ppDb - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v2 + 24) = 0;
  ppDb = 0;
  sub_100063D00(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_10008BA30();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v11 = sub_10008C030();
  swift_bridgeObjectRelease();
  int v12 = sqlite3_open_v2((const char *)(v11 + 32), &ppDb, 32774, 0);
  swift_release();
  char v13 = ppDb;
  if (!ppDb || v12)
  {
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v14 = v12;
    *(void *)(v14 + 8) = 0xD000000000000017;
    *(void *)(v14 + 16) = 0x8000000100094050;
    swift_willThrow();
    sub_1000655C0(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1000655C0(a1);
    *(void *)(v2 + 16) = v13;
  }
  return v2;
}

uint64_t sub_10006401C()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    *(unsigned char *)(v0 + 24) = 1;
    sqlite3_close_v2(*(sqlite3 **)(v0 + 16));
  }
  return swift_deallocClassInstance();
}

uint64_t sub_100064064()
{
  uint64_t v1 = sqlite3_expanded_sql(*(sqlite3_stmt **)(v0 + 16));
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_10008C0A0();
  sqlite3_free(v2);
  return v3;
}

uint64_t sub_1000640C0()
{
  uint64_t v1 = v0;
  int v2 = sqlite3_step(*(sqlite3_stmt **)(v0 + 16));
  if (v2 == 101)
  {
    swift_beginAccess();
    *(unsigned char *)(v0 + 24) = 1;
    return 0;
  }
  else
  {
    int v3 = v2;
    if (v2 == 100)
    {
      swift_retain();
    }
    else
    {
      sub_10008C540(38);
      uint64_t v4 = swift_bridgeObjectRelease();
      strcpy((char *)v8, "Statement ((");
      BYTE5(v8[1]) = 0;
      HIWORD(v8[1]) = -5120;
      v9._countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 96))(v4);
      sub_10008C090(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x8000000100093DC0;
      v10._countAndFlagsBits = 0xD000000000000018;
      sub_10008C090(v10);
      uint64_t v5 = v8[0];
      uint64_t v1 = v8[1];
      sub_100064390();
      swift_allocError();
      *(_DWORD *)uint64_t v6 = v3;
      *(void *)(v6 + 8) = v5;
      *(void *)(v6 + 16) = v1;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_100064214(void (*a1)(uint64_t))
{
  uint64_t v4 = *(sqlite3_stmt **)(v1 + 16);
  while (1)
  {
    int v5 = sqlite3_step(v4);
    if (v5 != 100) {
      break;
    }
    uint64_t v6 = swift_retain();
    a1(v6);
    uint64_t result = swift_release();
    if (v2) {
      return result;
    }
  }
  int v8 = v5;
  if (v5 == 101)
  {
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(v1 + 24) = 1;
  }
  else
  {
    sub_10008C540(38);
    uint64_t v9 = swift_bridgeObjectRelease();
    strcpy((char *)v13, "Statement ((");
    BYTE5(v13[1]) = 0;
    HIWORD(v13[1]) = -5120;
    v14._countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 96))(v9);
    sub_10008C090(v14);
    swift_bridgeObjectRelease();
    v15._object = (void *)0x8000000100093DC0;
    v15._countAndFlagsBits = 0xD000000000000018;
    sub_10008C090(v15);
    uint64_t v10 = v13[0];
    uint64_t v11 = v13[1];
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = v8;
    *(void *)(v12 + 8) = v10;
    *(void *)(v12 + 16) = v11;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_100064390()
{
  unint64_t result = qword_1000AFBD0;
  if (!qword_1000AFBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFBD0);
  }
  return result;
}

uint64_t sub_1000643E4@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t result = sub_1000640C0();
  if (!v4)
  {
    if (result)
    {
      a1(result);
      uint64_t v11 = sub_1000640C0();
      swift_release();
      if (v11)
      {
        uint64_t v12 = *(sqlite3_stmt **)(v5 + 16);
        do
          int v13 = sqlite3_step(v12);
        while (v13 == 100);
        int v14 = v13;
        if (v13 == 101)
        {
          swift_beginAccess();
          *(unsigned char *)(v5 + 24) = 1;
          sub_100064668();
          swift_allocError();
          *Swift::String v15 = 1;
          swift_willThrow();
          swift_release();
          return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a3, a2);
        }
        sub_10008C540(38);
        uint64_t v16 = swift_bridgeObjectRelease();
        strcpy((char *)v20, "Statement ((");
        BYTE5(v20[1]) = 0;
        HIWORD(v20[1]) = -5120;
        v21._countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 96))(v16);
        sub_10008C090(v21);
        swift_bridgeObjectRelease();
        v22._object = (void *)0x8000000100093DC0;
        v22._countAndFlagsBits = 0xD000000000000018;
        sub_10008C090(v22);
        uint64_t v17 = v20[0];
        uint64_t v18 = v20[1];
        sub_100064390();
        swift_allocError();
        *(_DWORD *)uint64_t v19 = v14;
        *(void *)(v19 + 8) = v17;
        *(void *)(v19 + 16) = v18;
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a3, a2);
      }
      return swift_release();
    }
    sub_100064668();
    swift_allocError();
    *uint64_t v10 = 0;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_100064668()
{
  unint64_t result = qword_1000AFBD8;
  if (!qword_1000AFBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFBD8);
  }
  return result;
}

uint64_t sub_1000646BC(uint64_t a1, uint64_t a2)
{
  v4[2] = a1;
  v4[3] = a2;
  return (*(uint64_t (**)(uint64_t (*)(uint64_t), void *, uint64_t))(*(void *)v2 + 152))(sub_10006471C, v4, a1);
}

uint64_t sub_10006471C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  if (sqlite3_column_count(*(sqlite3_stmt **)(a1 + 16)) == 1)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 8);
    uint64_t v5 = swift_retain();
    return v4(v5, 0, v3, v2);
  }
  else
  {
    sub_100064668();
    swift_allocError();
    unsigned char *v7 = 2;
    return swift_willThrow();
  }
}

uint64_t sub_1000647D8(uint64_t a1, uint64_t a2)
{
  _OWORD v6[2] = a1;
  v6[3] = a2;
  uint64_t v3 = *(uint64_t (**)(uint64_t (*)(uint64_t), void *, uint64_t))(*(void *)v2 + 152);
  uint64_t v4 = sub_10008C430();
  return v3(sub_100064868, v6, v4);
}

uint64_t sub_100064868(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  if (sqlite3_column_count(*(sqlite3_stmt **)(a1 + 16)) == 1)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 8);
    uint64_t v5 = swift_retain();
    return v4(v5, 0, v3, v2);
  }
  else
  {
    sub_100064668();
    swift_allocError();
    unsigned char *v7 = 2;
    return swift_willThrow();
  }
}

uint64_t sub_100064924()
{
  uint64_t v1 = (unsigned char *)v0;
  uint64_t v2 = *(sqlite3_stmt **)(v0 + 16);
  do
    int v3 = sqlite3_step(v2);
  while (v3 == 100);
  int v4 = v3;
  if (v3 == 101)
  {
    uint64_t result = swift_beginAccess();
    v1[24] = 1;
  }
  else
  {
    sub_10008C540(38);
    uint64_t v6 = swift_bridgeObjectRelease();
    strcpy((char *)v10, "Statement ((");
    BYTE5(v10[1]) = 0;
    HIWORD(v10[1]) = -5120;
    v11._countAndFlagsBits = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 96))(v6);
    sub_10008C090(v11);
    swift_bridgeObjectRelease();
    v12._object = (void *)0x8000000100093DC0;
    v12._countAndFlagsBits = 0xD000000000000018;
    sub_10008C090(v12);
    uint64_t v7 = v10[0];
    uint64_t v8 = v10[1];
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = v4;
    *(void *)(v9 + 8) = v7;
    *(void *)(v9 + 16) = v8;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100064A68(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  sub_10000A784(a2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v2, a1, v4, v5);
}

uint64_t sub_100064ADC(uint64_t a1)
{
  unint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  while (1)
  {
    if (v6 == v3)
    {
      unint64_t v6 = v3;
      memset(v9, 0, sizeof(v9));
    }
    else
    {
      if (v6 >= v3) {
        goto LABEL_11;
      }
      sub_1000181B0(v4 + 40 * v6, (uint64_t)v8);
      *(void *)&v9[0] = v6;
      sub_10003CEB8(v8, (uint64_t)v9 + 8);
      ++v6;
    }
    sub_100064C0C((uint64_t)v9, (uint64_t)&v10);
    if (!v12) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v7 = v10;
    sub_10003CEB8(&v11, (uint64_t)v9);
    uint64_t result = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    (*(void (**)(uint64_t, _OWORD *))(*(void *)v1 + 184))(result, v9);
    uint64_t result = sub_10000CCE8((uint64_t)v9);
    if (v2) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100064C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AFBE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100064C74()
{
  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_100064CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  return v8(a2, a1, a3, a4);
}

uint64_t sub_100064D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  return v8(a2, a1, a3, a4);
}

uint64_t sub_100064D9C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_100064DD0(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_100064E10())()
{
  return j__swift_endAccess;
}

uint64_t sub_100064E64(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 24) = 0;
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_100064E9C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if ((*(uint64_t (**)(void))(*(void *)v3 + 96))())
  {
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v6 = 1;
    *(void *)(v6 + 8) = 0xD00000000000001DLL;
    *(void *)(v6 + 16) = 0x8000000100093DE0;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = sub_100064FA4();
    if (!v4)
    {
      a3();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100064FA4()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if (*(unsigned char *)(v1 + 24))
  {
    sub_100064668();
    swift_allocError();
    unsigned char *v2 = 3;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v3 = sub_10008C030();
    unint64_t v4 = *(void *)(v3 + 16);
    if (v4 >> 31) {
      __break(1u);
    }
    int v5 = sqlite3_prepare_v2(*(sqlite3 **)(v1 + 16), (const char *)(v3 + 32), v4, &v9, 0);
    swift_release();
    uint64_t v6 = v9;
    if (v9 && !v5)
    {
      type metadata accessor for SQLiteDB.Statement();
      uint64_t result = swift_allocObject();
      *(unsigned char *)(result + 24) = 0;
      *(void *)(result + 16) = v6;
      return result;
    }
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = v5;
    *(void *)(v8 + 8) = 0xD00000000000001BLL;
    *(void *)(v8 + 16) = 0x8000000100094070;
  }
  return swift_willThrow();
}

sqlite3_int64 sub_1000650E8()
{
  return sqlite3_changes64(*(sqlite3 **)(*(void *)(*(void *)(v0 + 16) + 112) + 16));
}

uint64_t sub_1000650F8()
{
  return sub_100065214();
}

uint64_t sub_100065120()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if (*(unsigned char *)(v1 + 24))
  {
    sub_100064668();
    swift_allocError();
    unsigned char *v2 = 3;
  }
  else
  {
    uint64_t v3 = *(sqlite3 **)(v1 + 16);
    uint64_t v4 = sub_10008C030();
    int v5 = sqlite3_exec(v3, (const char *)(v4 + 32), 0, 0, 0);
    uint64_t result = swift_release();
    if (!v5) {
      return result;
    }
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = v5;
    *(void *)(v7 + 8) = 0;
    *(void *)(v7 + 16) = 0;
  }
  return swift_willThrow();
}

uint64_t sub_1000651E8()
{
  return sub_100065214();
}

uint64_t sub_100065214()
{
  if ((*(uint64_t (**)(void))(*(void *)v0 + 96))())
  {
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v2 = 1;
    *(void *)(v2 + 8) = 0xD00000000000001DLL;
    *(void *)(v2 + 16) = 0x8000000100093DE0;
    return swift_willThrow();
  }
  else
  {
    uint64_t result = sub_100065120();
    if (!v1) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v0 + 104))(1);
    }
  }
  return result;
}

uint64_t sub_100065314()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_10006534C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10006539C(a1);
  return v2;
}

uint64_t sub_10006539C(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for SQLiteDB.Location();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  sub_100063D00(a1, (uint64_t)v7);
  type metadata accessor for SQLiteDB.DBHandle();
  uint64_t v8 = swift_allocObject();
  sub_100063D64((uint64_t)v7);
  if (!v2)
  {
    uint64_t v9 = *(sqlite3 **)(v8 + 16);
    int v10 = sqlite3_exec(v9, "PRAGMA journal_mode=WAL;", 0, 0, 0);
    if (v10)
    {
      int v11 = v10;
      sub_100064390();
      swift_allocError();
      *(_DWORD *)uint64_t v12 = v11;
      unint64_t v13 = 0xD000000000000014;
      int v14 = "Failed to enable WAL";
    }
    else
    {
      int v15 = sqlite3_exec(v9, "PRAGMA foreign_keys=ON;", 0, 0, 0);
      if (!v15)
      {
        sub_1000655C0(a1);
        *(void *)(v3 + 112) = v8;
        return v3;
      }
      int v16 = v15;
      unint64_t v13 = 0xD000000000000013;
      sub_100064390();
      swift_allocError();
      *(_DWORD *)uint64_t v12 = v16;
      int v14 = "Failed to enable FK";
    }
    *(void *)(v12 + 8) = v13;
    *(void *)(v12 + 16) = (unint64_t)(v14 - 32) | 0x8000000000000000;
    swift_willThrow();
    swift_release();
  }
  swift_defaultActor_destroy();
  sub_1000655C0(a1);
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for SQLiteDB.DBHandle()
{
  return self;
}

uint64_t sub_1000655C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SQLiteDB.Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006561C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result = sub_100064FA4();
  if (!v3)
  {
    a3();
    return swift_release();
  }
  return result;
}

uint64_t sub_100065688(void (*a1)(uint64_t))
{
  type metadata accessor for SQLiteDB.Transaction();
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 24) = 0;
  *(void *)(v4 + 16) = v1;
  swift_retain();
  sub_100065120();
  if (!v2)
  {
    a1(v4);
    swift_beginAccess();
    if ((*(unsigned char *)(v4 + 24) & 1) == 0) {
      sub_100065120();
    }
  }
  return swift_release();
}

uint64_t type metadata accessor for SQLiteDB.Transaction()
{
  return self;
}

uint64_t sub_1000657F4()
{
  return sub_100065120();
}

uint64_t sub_10006580C()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if ((*(unsigned char *)(v1 + 24) & 1) == 0)
  {
    *(unsigned char *)(v1 + 24) = 1;
    return sqlite3_close_v2(*(sqlite3 **)(v1 + 16));
  }
  return result;
}

uint64_t sub_10006582C(uint64_t result, uint64_t a2, char a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = sqlite3_bind_int(*(sqlite3_stmt **)(result + 16), a2, a3 & 1);
  if (result)
  {
    int v3 = result;
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(void *)(v4 + 8) = 0xD000000000000012;
    *(void *)(v4 + 16) = 0x8000000100093EA0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1000658CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    int v4 = sqlite3_column_int(*(sqlite3_stmt **)(result + 16), a2);
    uint64_t result = swift_release();
    *a3 = v4 > 0;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100065938(uint64_t a1, uint64_t a2)
{
  return sub_10006582C(a1, a2, *v2);
}

uint64_t sub_100065954(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a2 < (uint64_t)0xFFFFFFFF80000000 || a3 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_9;
  }
  if (a3 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t result = sqlite3_bind_int(*(sqlite3_stmt **)(result + 16), a2, a3);
  if (result)
  {
    int v3 = result;
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(void *)(v4 + 8) = 0xD000000000000012;
    *(void *)(v4 + 16) = 0x8000000100093EA0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100065A08@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    int v4 = sqlite3_column_int(*(sqlite3_stmt **)(result + 16), a2);
    uint64_t result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100065A70(uint64_t a1, uint64_t a2)
{
  return sub_100065954(a1, a2, *v2);
}

uint64_t sub_100065A8C(uint64_t result, uint64_t a2, sqlite3_int64 a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = sqlite3_bind_int64(*(sqlite3_stmt **)(result + 16), a2, a3);
  if (result)
  {
    int v3 = result;
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(void *)(v4 + 8) = 0xD000000000000014;
    *(void *)(v4 + 16) = 0x8000000100093EC0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100065B28@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, sqlite3_int64 *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    sqlite3_int64 v4 = sqlite3_column_int64(*(sqlite3_stmt **)(result + 16), a2);
    uint64_t result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100065B8C(uint64_t a1, uint64_t a2)
{
  return sub_100065A8C(a1, a2, *v2);
}

uint64_t sub_100065BA8(uint64_t result, uint64_t a2, double a3)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = sqlite3_bind_double(*(sqlite3_stmt **)(result + 16), a2, a3);
  if (result)
  {
    int v3 = result;
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = v3;
    *(void *)(v4 + 8) = 0xD000000000000015;
    *(void *)(v4 + 16) = 0x8000000100093EE0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100065C44@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    double v4 = sqlite3_column_double(*(sqlite3_stmt **)(result + 16), a2);
    uint64_t result = swift_release();
    *a3 = v4;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100065CA8(uint64_t a1, uint64_t a2)
{
  return sub_100065BA8(a1, a2, *v2);
}

uint64_t sub_100065CC4(sqlite3_stmt *a1, uint64_t a2)
{
  uint64_t v6 = sub_10008C030();
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v2 = *(void *)(v6 + 16);
  if (!(v2 >> 31))
  {
    int v3 = (const char *)(v6 + 32);
    a1 = (sqlite3_stmt *)*((void *)a1 + 2);
    if (qword_1000B5BD0 == -1) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  swift_once();
LABEL_5:
  int v7 = sqlite3_bind_text(a1, a2, v3, v2, (void (__cdecl *)(void *))qword_1000B5BD8);
  uint64_t result = swift_release();
  if (v7)
  {
    sub_100064390();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = v7;
    *(void *)(v9 + 8) = 0xD000000000000015;
    *(void *)(v9 + 16) = 0x8000000100093F00;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100065DEC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (a2 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  if (sqlite3_column_text(*(sqlite3_stmt **)(result + 16), a2))
  {
    uint64_t v4 = sub_10008C0B0();
    uint64_t v6 = v5;
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *a3 = v4;
  a3[1] = v6;
  return result;
}

uint64_t sub_100065E70(sqlite3_stmt *a1, uint64_t a2)
{
  return sub_100065CC4(a1, a2);
}

void sub_100065E8C()
{
  qword_1000B5BD8 = -1;
}

unint64_t sub_100065EA4()
{
  unint64_t result = qword_1000AFBE8;
  if (!qword_1000AFBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000AFBE8);
  }
  return result;
}

uint64_t sub_100065F00(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SQLError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLError()
{
  return &type metadata for SQLError;
}

unsigned char *storeEnumTagSinglePayload for DBError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006614CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DBError()
{
  return &type metadata for DBError;
}

uint64_t type metadata accessor for SQLiteDB()
{
  return self;
}

uint64_t *sub_1000661A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10008BA60();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1000662F4(uint64_t a1)
{
  uint64_t v2 = sub_10008BA60();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_1000663C4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1000664D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_100066648(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100066758(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1000668CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000668E0);
}

uint64_t sub_1000668E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008BA60();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10006694C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100066960);
}

uint64_t sub_100066960(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10008BA60();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1000669E0(uint64_t a1)
{
  uint64_t v2 = sub_10008BA60();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_100066A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008BA60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t sub_100066AB8()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SQLiteDB.Statement()
{
  return self;
}

ValueMetadata *type metadata accessor for SQLiteDB.Row()
{
  return &type metadata for SQLiteDB.Row;
}

uint64_t variable initialization expression of StorebagCoordinator.pathMonitorQueue()
{
  uint64_t v11 = sub_10008BE40();
  uint64_t v0 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10008C340();
  uint64_t v3 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v9 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10008C330();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_10008BE70();
  __chkstk_darwin(v6 - 8);
  sub_10002CD68();
  sub_10008BE50();
  uint64_t v12 = _swiftEmptyArrayStorage;
  sub_100068F1C(&qword_1000AEE40, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A390((uint64_t *)&unk_1000B0100);
  sub_10000A95C((unint64_t *)&qword_1000AEE48, (uint64_t *)&unk_1000B0100);
  sub_10008C480();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v10);
  uint64_t v7 = v11;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for DispatchQoS.QoSClass.background(_:), v11);
  sub_10008C370();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v7);
  return sub_10008C360();
}

char *StorebagCoordinator.mockAvailability.unsafeMutableAddressor()
{
  return &static StorebagCoordinator.mockAvailability;
}

uint64_t static StorebagCoordinator.mockAvailability.getter()
{
  return static StorebagCoordinator.mockAvailability;
}

uint64_t static StorebagCoordinator.mockAvailability.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  static StorebagCoordinator.mockAvailability = a1;
  return result;
}

uint64_t (*static StorebagCoordinator.mockAvailability.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_100066F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10008BE30();
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10008BE70();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  __chkstk_darwin(v7);
  int v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A390((uint64_t *)&unk_1000B00D0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  v17[1] = *(void *)(a2 + 120);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(void *)(v14 + ((v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_100068E74;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000087B8;
  aBlock[3] = &unk_1000A8A68;
  int v15 = _Block_copy(aBlock);
  swift_retain();
  sub_10008BE60();
  Swift::String v21 = _swiftEmptyArrayStorage;
  sub_100068F1C(&qword_1000AE388, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A390(&qword_1000AE390);
  sub_10000A95C(&qword_1000AE398, &qword_1000AE390);
  sub_10008C480();
  sub_10008C350();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_1000672E8(uint64_t a1, uint64_t a2)
{
  v23[1] = a2;
  uint64_t v3 = sub_10008BE00();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v9 = (char *)v23 - v8;
  uint64_t v10 = sub_10008BE20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int v16 = (char *)v23 - v15;
  swift_beginAccess();
  if (static StorebagCoordinator.mockAvailability != 4)
  {
    char v24 = static StorebagCoordinator.mockAvailability;
    sub_10000A390((uint64_t *)&unk_1000B00D0);
    return sub_10008C1F0();
  }
  v23[0] = a1;
  sub_10008BD90();
  sub_10008BE10();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for NWPath.Status.unsatisfied(_:), v3);
  char v17 = sub_10008BDF0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v18(v7, v3);
  v18(v9, v3);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  if (v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    v19(v14, v10);
LABEL_6:
    char v24 = 0;
    sub_10000A390((uint64_t *)&unk_1000B00D0);
    sub_10008C1F0();
    return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
  }
  char v21 = sub_10008BDE0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  if (v21) {
    goto LABEL_6;
  }
  if (sub_10008BDD0()) {
    char v22 = 1;
  }
  else {
    char v22 = 2;
  }
  char v24 = v22;
  sub_10000A390((uint64_t *)&unk_1000B00D0);
  sub_10008C1F0();
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t sub_100067624(uint64_t a1)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = v1;
  return _swift_task_switch(sub_100067644, v1);
}

uint64_t sub_100067644()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = *(void *)(v0[10] + 128);
  v0[11] = v2;
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_10000A784(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v5 = v0[3];
  v0[12] = v0[2];
  v0[13] = v5;
  swift_bridgeObjectRetain();
  sub_10001A660((uint64_t)(v0 + 2));
  uint64_t v6 = (*(void *)v2 + 224) & 0xFFFFFFFFFFFFLL | 0x665A000000000000;
  v0[14] = *(void *)(*(void *)v2 + 224);
  v0[15] = v6;
  return _swift_task_switch(sub_100067724, v2);
}

uint64_t sub_100067724()
{
  char v1 = (*(uint64_t (**)(void, void))(v0 + 112))(*(void *)(v0 + 96), *(void *)(v0 + 104));
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v2(3);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 80);
    return _swift_task_switch(sub_1000677DC, v4);
  }
}

uint64_t sub_1000677DC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = sub_100068F1C(&qword_1000AFFA8, (void (*)(uint64_t))type metadata accessor for StorebagCoordinator);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000678FC;
  uint64_t v4 = *(void *)(v0 + 80);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 136, v1, v2, 0xD000000000000013, 0x80000001000940C0, sub_100067A70, v4, &type metadata for SessionConfiguration.Availability);
}

uint64_t sub_1000678FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  return _swift_task_switch(sub_100067A0C, v1);
}

uint64_t sub_100067A0C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 136));
}

uint64_t type metadata accessor for StorebagCoordinator()
{
  uint64_t result = qword_1000B6180;
  if (!qword_1000B6180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100067A70(uint64_t a1)
{
  return sub_100066F64(a1, v1);
}

uint64_t sub_100067A78(uint64_t a1, uint64_t a2)
{
  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  return _swift_task_switch(sub_100067A9C, v2);
}

uint64_t sub_100067A9C()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = *(void *)(v0[25] + 128);
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_10000A784(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  v0[26] = v6;
  swift_bridgeObjectRetain();
  sub_10001A660((uint64_t)(v0 + 2));
  int v9 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(*(void *)v2 + 232)
                                                          + **(int **)(*(void *)v2 + 232));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[27] = v7;
  void *v7 = v0;
  v7[1] = sub_100067C18;
  return v9(v0 + 14, v5, v6);
}

uint64_t sub_100067C18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = sub_100067DF8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 200);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100067D3C;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_100067D3C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  sub_1000512B4(*(void **)(v0 + 192), (_OWORD *)(v0 + 72));
  *(void *)(v0 + 168) = *(void *)(v0 + 112);
  sub_100032D88(v0 + 168);
  *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 128);
  sub_100032D5C(v0 + 152);
  *(void *)(v0 + 176) = *(void *)(v0 + 144);
  sub_100032D88(v0 + 176);
  long long v2 = *(_OWORD *)(v0 + 88);
  long long v3 = *(_OWORD *)(v0 + 72);
  *(void *)(v1 + 32) = *(void *)(v0 + 104);
  *(_OWORD *)uint64_t v1 = v3;
  *(_OWORD *)(v1 + 16) = v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100067DF8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100067E5C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_100067E80, v2);
}

uint64_t sub_100067E80()
{
  uint64_t v1 = *(void **)(v0[4] + 128);
  v0[5] = v1;
  uint64_t v2 = *v1 + 256;
  v0[6] = *(void *)v2;
  v0[7] = v2 & 0xFFFFFFFFFFFFLL | 0x7B8C000000000000;
  return _swift_task_switch(sub_100067EC8, v1);
}

uint64_t sub_100067EC8()
{
  (*(void (**)(void, void))(v0 + 48))(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100067F30(uint64_t a1)
{
  swift_allocObject();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100018CB4;
  return sub_100067FD8(a1);
}

uint64_t sub_100067FD8(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_10008BA60();
  v2[5] = v3;
  uint64_t v21 = *(void *)(v3 - 8);
  v2[6] = v21;
  uint64_t v19 = swift_task_alloc();
  v2[7] = v19;
  uint64_t v22 = sub_10008BE40();
  uint64_t v20 = *(void *)(v22 - 8);
  uint64_t v4 = swift_task_alloc();
  v2[8] = v4;
  uint64_t v5 = sub_10008C340();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  uint64_t v6 = swift_task_alloc();
  v2[9] = v6;
  sub_10008C330();
  v2[10] = swift_task_alloc();
  sub_10008BE70();
  v2[11] = swift_task_alloc();
  swift_defaultActor_initialize();
  sub_10002CD68();
  sub_10008BE50();
  v2[2] = _swiftEmptyArrayStorage;
  sub_100068F1C(&qword_1000AEE40, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A390((uint64_t *)&unk_1000B0100);
  sub_10000A95C((unint64_t *)&qword_1000AEE48, (uint64_t *)&unk_1000B0100);
  sub_10008C480();
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v18);
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v4, enum case for DispatchQoS.QoSClass.background(_:), v22);
  sub_10008C370();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v4, v22);
  v16[15] = sub_10008C360();
  type metadata accessor for StorebagCache(0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  uint64_t v23 = v3;
  v7(v19, a1, v3);
  unint64_t v8 = sub_1000428A8();
  v16[16] = sub_100042A94(v8, 0, 0, v19);
  sub_10000A390(&qword_1000AFFD0);
  uint64_t v9 = sub_10008BD80();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10008DC30;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, enum case for NWInterface.InterfaceType.loopback(_:), v9);
  sub_10008BDC0();
  swift_allocObject();
  v16[14] = sub_10008BDA0();
  uint64_t v13 = (void *)v16[15];
  swift_retain();
  id v14 = v13;
  sub_10008BDB0();
  swift_release();

  v7((uint64_t)v16 + OBJC_IVAR____TtC21CloudTelemetryService19StorebagCoordinator_rootCacheURL, a1, v23);
  return _swift_task_switch(sub_1000685B0, v16);
}

uint64_t sub_1000685B0()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[3], v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[4];
  return v1(v2);
}

uint64_t StorebagCoordinator.deinit()
{
  swift_release();

  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21CloudTelemetryService19StorebagCoordinator_rootCacheURL;
  uint64_t v2 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t StorebagCoordinator.__deallocating_deinit()
{
  swift_release();

  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21CloudTelemetryService19StorebagCoordinator_rootCacheURL;
  uint64_t v2 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100068784(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 128) + **(int **)(*(void *)v1 + 128));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100068888;
  return v6(a1);
}

uint64_t sub_100068888(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_100068984(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 56) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 136) + **(int **)(*(void *)v2 + 136));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v5;
  void *v5 = v3;
  v5[1] = sub_100068A98;
  return v7(v3 + 16, a2);
}

uint64_t sub_100068A98()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0)
  {
    uint64_t v4 = *(void *)(v2 + 56);
    long long v5 = *(_OWORD *)(v2 + 16);
    long long v6 = *(_OWORD *)(v2 + 32);
    *(void *)(v4 + 32) = *(void *)(v2 + 48);
    *(_OWORD *)uint64_t v4 = v5;
    *(_OWORD *)(v4 + 16) = v6;
  }
  uint64_t v7 = *(uint64_t (**)(void))(v3 + 8);
  return v7();
}

uint64_t sub_100068BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_10000AA94;
  return v8(a1, a2);
}

uint64_t sub_100068CB4(uint64_t a1)
{
  uint64_t result = sub_100068F1C(&qword_1000AFFA8, (void (*)(uint64_t))type metadata accessor for StorebagCoordinator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100068D0C()
{
  return type metadata accessor for StorebagCoordinator();
}

uint64_t sub_100068D14()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100068DCC()
{
  uint64_t v1 = sub_10000A390((uint64_t *)&unk_1000B00D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100068E74()
{
  uint64_t v1 = *(void *)(sub_10000A390((uint64_t *)&unk_1000B00D0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1000672E8(v0 + v2, v3);
}

uint64_t sub_100068F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100068F14()
{
  return swift_release();
}

uint64_t sub_100068F1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100068F64(char a1, char a2)
{
  if (a2) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return v2 & 0xFFFFFFFE | a1 & 1;
}

uint64_t sub_100068F84@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a5 & 1;
  *(unsigned char *)(a8 + 33) = HIBYTE(a5) & 1;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  return result;
}

uint64_t sub_100068FA4()
{
  long long v5 = *v0;
  uint64_t v4 = v5;
  sub_1000298C8((uint64_t)&v5);
  v6._countAndFlagsBits = 58;
  v6._object = (void *)0xE100000000000000;
  sub_10008C090(v6);
  uint64_t v2 = *((void *)v0 + 2);
  uint64_t v1 = (void *)*((void *)v0 + 3);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v2;
  v7._object = v1;
  sub_10008C090(v7);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100069020()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6198);
  sub_10000A358(v0, (uint64_t)qword_1000B6198);
  return sub_10008BD40();
}

uint64_t sub_100069094()
{
  if (qword_1000B6190 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10008BD50();
  return sub_10000A358(v0, (uint64_t)qword_1000B6198);
}

uint64_t sub_1000690F8()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100069128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  swift_allocObject();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_100068888;
  return sub_100069210(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100069210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v44 = v7;
  uint64_t v8 = v6;
  unint64_t v41 = a6;
  *(void *)(v7 + 88) = a6;
  *(void *)(v7 + 96) = v6;
  *(void *)(v7 + 72) = a4;
  *(void *)(v7 + 80) = a5;
  *(void *)(v7 + 56) = a2;
  *(void *)(v7 + 64) = a3;
  *(void *)(v7 + 48) = a1;
  uint64_t v39 = sub_10008BE40();
  uint64_t v14 = *(void *)(v39 - 8);
  uint64_t v38 = swift_task_alloc();
  *(void *)(v7 + 104) = v38;
  uint64_t v35 = sub_10008C340();
  uint64_t v40 = *(void *)(v35 - 8);
  uint64_t v37 = swift_task_alloc();
  *(void *)(v7 + 112) = v37;
  v33[2] = sub_10008C330();
  uint64_t v36 = swift_task_alloc();
  *(void *)(v7 + 120) = v36;
  sub_10008BE70();
  uint64_t v34 = swift_task_alloc();
  *(void *)(v7 + 128) = v34;
  swift_defaultActor_initialize();
  v8[14] = 0;
  v8[18] = a1;
  v8[19] = a2;
  v8[20] = a3;
  v8[21] = a4;
  v8[22] = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v15 = v14;
  uint64_t v16 = v40;
  *(void *)(v7 + 136) = XPCIncomingConnection.auditToken.getter();
  uint64_t v17 = (audit_token_t *)(v7 + 136);
  *(_DWORD *)(v7 + 144) = v18;
  *(_DWORD *)(v7 + 148) = v19;
  *(_DWORD *)(v7 + 152) = v20;
  *(_DWORD *)(v7 + 156) = v21;
  *(_DWORD *)(v7 + 160) = v22;
  *(_DWORD *)(v7 + 164) = v23;
  uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
  if (isStackAllocationSafe)
  {
    __chkstk_darwin(isStackAllocationSafe);
    sub_100069900(&v32, v17, (uint64_t)v33, &v42);
  }
  else
  {
    uint64_t v25 = (unsigned char *)swift_slowAlloc();
    sub_100069900(v25, v17, (uint64_t)(v25 + 4096), &v42);
    swift_slowDealloc();
  }
  unint64_t v26 = v43;
  v8[16] = v42;
  v8[17] = v26;
  unint64_t v41 = sub_10002CD68();
  uint64_t v42 = 0;
  unint64_t v43 = 0xE000000000000000;
  sub_10008C540(34);
  swift_bridgeObjectRelease();
  uint64_t v42 = 0xD000000000000020;
  unint64_t v43 = 0x8000000100094170;
  uint64_t v27 = v8[16];
  uint64_t v28 = (void *)v8[17];
  swift_bridgeObjectRetain();
  v46._countAndFlagsBits = v27;
  v46._object = v28;
  sub_10008C090(v46);
  swift_bridgeObjectRelease();
  uint64_t v40 = v42;
  v33[1] = v43;
  sub_10008BE50();
  *(void *)(v7 + 40) = _swiftEmptyArrayStorage;
  sub_100078FC4(&qword_1000AEE40, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A390((uint64_t *)&unk_1000B0100);
  sub_10002CDA8();
  sub_10008C480();
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v37, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v35);
  uint64_t v30 = v38;
  uint64_t v29 = v39;
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v38, enum case for DispatchQoS.QoSClass.background(_:), v39);
  sub_10008C370();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v30, v29);
  v8[15] = sub_10008C360();
  return _swift_task_switch(sub_10006977C, v8, 0);
}

uint64_t sub_10006977C()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = (_xpc_connection_s *)v0[11];
  id v3 = *(id *)(v1 + 120);
  swift_retain();
  uint64_t v4 = XPCIncomingConnection.makeConnection(targetQ:delegate:)(v3, v1, (uint64_t)&off_1000A8AB8, v2);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(void *)(v1 + 112) = v4;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v5 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v6 = v0[12];
  return v5(v6);
}

uint64_t sub_100069900@<X0>(unsigned char *buffer@<X0>, audit_token_t *audittoken@<X2>, uint64_t a3@<X1>, uint64_t *a4@<X8>)
{
  *buffer = 0;
  if (!buffer)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a3 - (uint64_t)buffer >= (uint64_t)&_mh_execute_header)
  {
LABEL_9:
    uint64_t result = sub_10008C630();
    __break(1u);
    return result;
  }
  uint64_t result = proc_pidpath_audittoken(audittoken, buffer, a3 - buffer);
  if ((int)result < 1)
  {
    unint64_t v8 = 0xE700000000000000;
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  else
  {
    uint64_t v6 = sub_10008C0B0();
    unint64_t v8 = v7;
    v15[0] = 47;
    v15[1] = 0xE100000000000000;
    __chkstk_darwin(v6);
    uint64_t v14 = v15;
    swift_bridgeObjectRetain();
    sub_100079B44(sub_100079D84, (uint64_t)v13, v6, v8);
    char v10 = v9;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_10008C060();
      swift_bridgeObjectRelease();
      sub_100079DDC(v11, v6, v8);
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_10008C040();
      unint64_t v8 = v12;
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  *a4 = v6;
  a4[1] = v8;
  return result;
}

uint64_t type metadata accessor for Client()
{
  return self;
}

void sub_100069B14()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A390(&qword_1000AE3A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  long long v5 = XPCMessage.init(fromXPC:)();
  if (v5)
  {
    unint64_t v7 = v5;
    char v8 = v6;
    uint64_t v9 = sub_10008C220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = 0;
    *(void *)(v10 + 24) = 0;
    *(void *)(v10 + 32) = v1;
    *(void *)(v10 + 40) = v7;
    *(unsigned char *)(v10 + 48) = v8;
    swift_retain();
    sub_1000198D0((uint64_t)v4, (uint64_t)&unk_1000B0128, v10);
    swift_release();
  }
  else
  {
    if (qword_1000B6190 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10008BD50();
    sub_10000A358(v11, (uint64_t)qword_1000B6198);
    swift_retain();
    int v18 = sub_10008BD30();
    os_log_type_t v12 = sub_10008C2F0();
    if (os_log_type_enabled(v18, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      uint64_t v14 = *(void *)(v1 + 128);
      unint64_t v15 = *(void *)(v1 + 136);
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_100009D00(v14, v15, &v20);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v18, v12, "received invalid XPC message from %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      uint64_t v16 = v18;
    }
  }
}

uint64_t sub_100069DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  void *v9 = v6;
  v9[1] = sub_10001F8C8;
  return sub_100069E88(a5, a6);
}

uint64_t sub_100069E88(uint64_t a1, char a2)
{
  *(void *)(v3 + 784) = v2;
  *(unsigned char *)(v3 + 1668) = a2;
  *(void *)(v3 + 776) = a1;
  *(void *)(v3 + 792) = *v2;
  uint64_t v4 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  *(void *)(v3 + 800) = v4;
  *(void *)(v3 + 808) = *(void *)(v4 + 64);
  *(void *)(v3 + 816) = swift_task_alloc();
  *(void *)(v3 + 824) = swift_task_alloc();
  uint64_t v5 = sub_10008BD50();
  *(void *)(v3 + 832) = v5;
  *(void *)(v3 + 840) = *(void *)(v5 - 8);
  *(void *)(v3 + 848) = swift_task_alloc();
  *(void *)(v3 + 856) = swift_task_alloc();
  *(void *)(v3 + 864) = swift_task_alloc();
  *(void *)(v3 + 872) = swift_task_alloc();
  *(void *)(v3 + 880) = swift_task_alloc();
  *(void *)(v3 + 888) = swift_task_alloc();
  *(void *)(v3 + 896) = swift_task_alloc();
  *(void *)(v3 + 904) = swift_task_alloc();
  *(void *)(v3 + 912) = swift_task_alloc();
  *(void *)(v3 + 920) = swift_task_alloc();
  *(void *)(v3 + 928) = swift_task_alloc();
  *(void *)(v3 + 936) = swift_task_alloc();
  *(void *)(v3 + 944) = swift_task_alloc();
  *(void *)(v3 + 952) = swift_task_alloc();
  *(void *)(v3 + 960) = swift_task_alloc();
  *(void *)(v3 + 968) = swift_task_alloc();
  *(void *)(v3 + 976) = swift_task_alloc();
  *(void *)(v3 + 984) = swift_task_alloc();
  *(void *)(v3 + 992) = swift_task_alloc();
  *(void *)(v3 + 1000) = swift_task_alloc();
  sub_10000A390(&qword_1000AEAA8);
  *(void *)(v3 + 1008) = swift_task_alloc();
  *(void *)(v3 + 1016) = swift_task_alloc();
  *(void *)(v3 + 1024) = swift_task_alloc();
  *(void *)(v3 + 1032) = swift_task_alloc();
  uint64_t v6 = sub_10008BBB0();
  *(void *)(v3 + 1040) = v6;
  *(void *)(v3 + 1048) = *(void *)(v6 - 8);
  *(void *)(v3 + 1056) = swift_task_alloc();
  *(void *)(v3 + 1064) = swift_task_alloc();
  *(void *)(v3 + 1072) = type metadata accessor for CachedSession();
  *(void *)(v3 + 1080) = swift_task_alloc();
  sub_10000A390((uint64_t *)&unk_1000AF140);
  *(void *)(v3 + 1088) = swift_task_alloc();
  *(void *)(v3 + 1096) = swift_task_alloc();
  *(void *)(v3 + 1104) = swift_task_alloc();
  *(void *)(v3 + 1112) = swift_task_alloc();
  *(void *)(v3 + 1120) = swift_task_alloc();
  *(void *)(v3 + 1128) = swift_task_alloc();
  *(void *)(v3 + 1136) = swift_task_alloc();
  *(void *)(v3 + 1144) = swift_task_alloc();
  *(void *)(v3 + 1152) = swift_task_alloc();
  return _swift_task_switch(sub_10006A258, v2);
}

uint64_t sub_10006A258()
{
  uint64_t v178 = v0;
  switch(*(unsigned char *)(v0 + 1668))
  {
    case 1:
      uint64_t v16 = *(void **)(v0 + 784);
      type metadata accessor for SubmitEventsActivity();
      uint64_t v17 = v16[18];
      uint64_t v18 = v16[19];
      uint64_t v19 = v16[20];
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v20 = sub_100020C40(v17, v18, v19);
      *(void *)(v0 + 1616) = v20;
      v173 = (uint64_t (*)(void))(*(void *)(*v20 + 120) + **(int **)(*v20 + 120));
      int v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 1624) = v21;
      void *v21 = v0;
      v21[1] = sub_100072058;
      os_log_type_t v12 = v173;
      return v12();
    case 2:
      type metadata accessor for PostInstallActivity();
      uint64_t v10 = sub_10000D9C0();
      *(void *)(v0 + 1632) = v10;
      v171 = (uint64_t (*)(void))(*(void *)(*(void *)v10 + 88) + **(int **)(*(void *)v10 + 88));
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 1640) = v11;
      void *v11 = v0;
      v11[1] = sub_100072620;
      os_log_type_t v12 = v171;
      return v12();
    case 3:
      type metadata accessor for CacheCleanupActivity();
      uint64_t v13 = swift_retain();
      uint64_t v14 = sub_10005B5D0(v13);
      *(void *)(v0 + 1648) = v14;
      v172 = (uint64_t (*)(void))(*(void *)(*(void *)v14 + 104) + **(int **)(*(void *)v14 + 104));
      unint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 1656) = v15;
      *unint64_t v15 = v0;
      v15[1] = sub_100072BE8;
      os_log_type_t v12 = v172;
      return v12();
    default:
      if (qword_1000B6190 != -1) {
        swift_once();
      }
      sub_10000A358(*(void *)(v0 + 832), (uint64_t)qword_1000B6198);
      uint64_t v1 = sub_10008BD30();
      os_log_type_t v2 = sub_10008C2D0();
      if (os_log_type_enabled(v1, v2))
      {
        uint64_t v3 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v3 = 0;
        _os_log_impl((void *)&_mh_execute_header, v1, v2, "SendOneMessage Request Received", v3, 2u);
        swift_slowDealloc();
      }
      uint64_t v4 = *(void *)(v0 + 1152);
      uint64_t v5 = *(void **)(v0 + 776);

      MessageKeys.sendOneMessageSessionInfo.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v5, v4);
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for XPCObject();
      unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
      int v8 = v7(v4, 1, v6);
      uint64_t v9 = *(void ***)(v0 + 1152);
      if (v8 == 1) {
        goto LABEL_7;
      }
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_24;
      }
      Swift::Int v163 = v7;
      uint64_t v23 = *(void *)(v0 + 1144);
      char v24 = *(void **)(v0 + 776);
      uint64_t v25 = *v9;
      *(void *)(v0 + 1160) = *v9;
      MessageKeys.sendOneMessageEvent.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v24, v23);
      swift_bridgeObjectRelease();
      int v26 = v163(v23, 1, v6);
      uint64_t v9 = *(void ***)(v0 + 1144);
      if (v26 == 1)
      {
        swift_unknownObjectRelease();
LABEL_7:
        sub_10000CC24((uint64_t)v9, (uint64_t *)&unk_1000AF140);
LABEL_25:
        uint64_t v31 = *(void *)(v0 + 912);
        uint64_t v32 = *(void *)(v0 + 840);
        uint64_t v33 = *(void *)(v0 + 784);
        uint64_t v34 = sub_100069094();
        v166 = *(void (**)(uint64_t))(v32 + 16);
        uint64_t v169 = v34;
        v166(v31);
        swift_retain();
        uint64_t v35 = sub_10008BD30();
        os_log_type_t v36 = sub_10008C2F0();
        uint64_t v37 = swift_allocObject();
        *(unsigned char *)(v37 + 16) = 34;
        uint64_t v38 = swift_allocObject();
        *(unsigned char *)(v38 + 16) = 8;
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = sub_100079F44;
        *(void *)(v39 + 24) = v33;
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = sub_100079390;
        *(void *)(v40 + 24) = v39;
        sub_10000A390(&qword_1000B0238);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_10008FA10;
        *(void *)(v41 + 32) = sub_10007936C;
        *(void *)(v41 + 40) = v37;
        *(void *)(v41 + 48) = sub_100079F40;
        *(void *)(v41 + 56) = v38;
        *(void *)(v41 + 64) = sub_1000793B8;
        *(void *)(v41 + 72) = v40;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v42 = v36;
        if (os_log_type_enabled(v35, v36))
        {
          unint64_t v43 = (uint8_t *)swift_slowAlloc();
          uint64_t v176 = 0;
          v177[0] = swift_slowAlloc();
          *(_WORD *)unint64_t v43 = 258;
          v43[2] = *(unsigned char *)(v37 + 16);
          swift_release();
          v43[3] = *(unsigned char *)(v38 + 16);
          v175 = v43 + 4;
          swift_release();
          sub_100078DC4((uint64_t *)&v175, (uint64_t)&v176, v177, *(uint64_t (**)(void))(v40 + 16));
          uint64_t v44 = *(void *)(v0 + 912);
          uint64_t v45 = *(void *)(v0 + 840);
          uint64_t v46 = *(void *)(v0 + 832);
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v35, v42, "missing required values for sendOneMessage from %{public}s", v43, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          int v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
          v47(v44, v46);
        }
        else
        {
          uint64_t v48 = *(void *)(v0 + 912);
          uint64_t v49 = *(void *)(v0 + 840);
          uint64_t v50 = *(void *)(v0 + 832);

          swift_release();
          swift_release();
          swift_release();
          int v47 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
          v47(v48, v50);
        }
        xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
        if (!reply) {
          goto LABEL_36;
        }
        uint64_t v52 = reply;
        uint64_t v53 = *(void *)(v0 + 784);
        xpc_dictionary_set_string(reply, "error", "missing required sendOneMessage fields");
        swift_beginAccess();
        uint64_t v54 = *(void *)(v53 + 112);
        if (v54)
        {
          swift_beginAccess();
          uint64_t v55 = *(_xpc_connection_s **)(v54 + 16);
          if (v55)
          {
            uint64_t v56 = *(void *)(v0 + 904);
            uint64_t v57 = *(void *)(v0 + 832);
            xpc_connection_send_message(v55, v52);
            ((void (*)(uint64_t, uint64_t, uint64_t))v166)(v56, v169, v57);
            int v58 = sub_10008BD30();
            os_log_type_t v59 = sub_10008C2D0();
            BOOL v60 = os_log_type_enabled(v58, v59);
            uint64_t v61 = *(void *)(v0 + 904);
            uint64_t v62 = *(void *)(v0 + 832);
            if (v60)
            {
              uint64_t v63 = (uint8_t *)swift_slowAlloc();
              uint64_t v176 = 0;
              v177[0] = 0;
              *(_WORD *)uint64_t v63 = 0;
              v175 = v63 + 2;
              sub_100078D2C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v175, (uint64_t)&v176, (uint64_t)v177);
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v58, v59, "SendOneMessage Error Reply Sent", v63, 2u);
              swift_slowDealloc();

              swift_unknownObjectRelease();
              uint64_t v64 = v61;
LABEL_35:
              v47(v64, v62);
LABEL_36:
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              uint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
              return v65();
            }

            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
LABEL_34:
            uint64_t v64 = v61;
            goto LABEL_35;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_91;
      }
      if (swift_getEnumCaseMultiPayload() != 12)
      {
        swift_unknownObjectRelease();
LABEL_24:
        sub_100079AE4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for XPCObject);
        goto LABEL_25;
      }
      uint64_t v27 = v25;
      uint64_t v28 = *(void *)(v0 + 1136);
      *(void *)(v0 + 1168) = *v9;
      MessageKeys.eventType.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v27, v28);
      swift_bridgeObjectRelease();
      int v29 = v163(v28, 1, v6);
      uint64_t v30 = *(uint64_t **)(v0 + 1136);
      if (v29 == 1)
      {
        sub_10000CC24((uint64_t)v30, (uint64_t *)&unk_1000AF140);
LABEL_56:
        uint64_t v85 = *(void *)(v0 + 928);
        uint64_t v86 = *(void *)(v0 + 840);
        uint64_t v87 = *(void *)(v0 + 784);
        uint64_t v88 = sub_100069094();
        uint64_t v164 = *(void (**)(uint64_t))(v86 + 16);
        uint64_t v167 = v88;
        v164(v85);
        swift_retain();
        uint64_t v89 = sub_10008BD30();
        os_log_type_t v90 = sub_10008C2F0();
        uint64_t v91 = swift_allocObject();
        *(unsigned char *)(v91 + 16) = 34;
        uint64_t v92 = swift_allocObject();
        *(unsigned char *)(v92 + 16) = 8;
        uint64_t v93 = swift_allocObject();
        *(void *)(v93 + 16) = sub_100079F44;
        *(void *)(v93 + 24) = v87;
        uint64_t v94 = swift_allocObject();
        *(void *)(v94 + 16) = sub_100079E2C;
        *(void *)(v94 + 24) = v93;
        sub_10000A390(&qword_1000B0238);
        uint64_t v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = xmmword_10008FA10;
        *(void *)(v95 + 32) = sub_100079F40;
        *(void *)(v95 + 40) = v91;
        *(void *)(v95 + 48) = sub_100079F40;
        *(void *)(v95 + 56) = v92;
        *(void *)(v95 + 64) = sub_100079E30;
        *(void *)(v95 + 72) = v94;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v96 = v90;
        if (os_log_type_enabled(v89, v90))
        {
          __int16 v97 = (uint8_t *)swift_slowAlloc();
          uint64_t v176 = 0;
          v177[0] = swift_slowAlloc();
          *(_WORD *)__int16 v97 = 258;
          v97[2] = *(unsigned char *)(v91 + 16);
          swift_release();
          v97[3] = *(unsigned char *)(v92 + 16);
          v175 = v97 + 4;
          swift_release();
          sub_100078DC4((uint64_t *)&v175, (uint64_t)&v176, v177, *(uint64_t (**)(void))(v94 + 16));
          uint64_t v98 = *(void *)(v0 + 928);
          uint64_t v99 = *(void *)(v0 + 840);
          uint64_t v100 = *(void *)(v0 + 832);
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v89, v96, "missing required values in create session from %{public}s", v97, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          int v47 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
          v47(v98, v100);
        }
        else
        {
          uint64_t v101 = *(void *)(v0 + 928);
          uint64_t v102 = *(void *)(v0 + 840);
          uint64_t v103 = *(void *)(v0 + 832);

          swift_release();
          swift_release();
          swift_release();
          int v47 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
          v47(v101, v103);
        }
        xpc_object_t v104 = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
        if (v104)
        {
          char v105 = v104;
          uint64_t v106 = *(void *)(v0 + 784);
          xpc_dictionary_set_string(v104, "error", "missing required sendOneMessage event fields");
          swift_beginAccess();
          uint64_t v107 = *(void *)(v106 + 112);
          if (!v107)
          {
LABEL_91:
            __break(1u);
            goto LABEL_92;
          }
          swift_beginAccess();
          __int16 v108 = *(_xpc_connection_s **)(v107 + 16);
          if (!v108)
          {
LABEL_92:
            __break(1u);
            goto LABEL_93;
          }
          uint64_t v109 = *(void *)(v0 + 920);
          uint64_t v110 = *(void *)(v0 + 832);
          xpc_connection_send_message(v108, v105);
          ((void (*)(uint64_t, uint64_t, uint64_t))v164)(v109, v167, v110);
          char v111 = sub_10008BD30();
          os_log_type_t v112 = sub_10008C2D0();
          BOOL v113 = os_log_type_enabled(v111, v112);
          uint64_t v61 = *(void *)(v0 + 920);
          uint64_t v62 = *(void *)(v0 + 832);
          if (v113)
          {
            uint64_t v114 = (uint8_t *)swift_slowAlloc();
            uint64_t v176 = 0;
            v177[0] = 0;
            *(_WORD *)uint64_t v114 = 0;
            v175 = v114 + 2;
            sub_100078D2C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v175, (uint64_t)&v176, (uint64_t)v177);
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v111, v112, "SendOneMessage Error Reply Sent", v114, 2u);
            swift_slowDealloc();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v64 = v61;
            goto LABEL_35;
          }

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
LABEL_67:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_34;
        }
        swift_unknownObjectRelease();
        goto LABEL_65;
      }
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        uint64_t v71 = (uint64_t)v30;
LABEL_55:
        sub_100079AE4(v71, (uint64_t (*)(void))type metadata accessor for XPCObject);
        goto LABEL_56;
      }
      uint64_t v66 = *(void *)(v0 + 1128);
      uint64_t v68 = *v30;
      uint64_t v67 = v30[1];
      *(void *)(v0 + 1176) = v67;
      MessageKeys.clientType.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v27, v66);
      swift_bridgeObjectRelease();
      int v69 = v163(v66, 1, v6);
      uint64_t v70 = *(void ***)(v0 + 1128);
      if (v69 == 1)
      {
LABEL_41:
        swift_bridgeObjectRelease();
        sub_10000CC24((uint64_t)v70, (uint64_t *)&unk_1000AF140);
        goto LABEL_56;
      }
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_54;
      }
      uint64_t v72 = *(void *)(v0 + 1120);
      v160 = *v70;
      *(void *)(v0 + 1184) = *v70;
      long long v73 = v70[1];
      *(void *)(v0 + 1192) = v73;
      MessageKeys.transportConfiguration.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v27, v72);
      swift_bridgeObjectRelease();
      int v74 = v163(v72, 1, v6);
      uint64_t v70 = *(void ***)(v0 + 1120);
      if (v74 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      uint64_t v159 = v73;
      if (swift_getEnumCaseMultiPayload() != 12)
      {
        swift_bridgeObjectRelease();
LABEL_54:
        swift_bridgeObjectRelease();
        uint64_t v71 = (uint64_t)v70;
        goto LABEL_55;
      }
      uint64_t v75 = *(void *)(v0 + 1112);
      long long v76 = *v70;
      *(void *)(v0 + 1200) = *v70;
      MessageKeys.tcAllowsCellularAccess.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      v170 = v76;
      XPCDictionary.subscript.getter(v76, v75);
      swift_bridgeObjectRelease();
      int v77 = v163(v75, 1, v6);
      uint64_t v78 = *(void *)(v0 + 1112);
      if (v77 == 1) {
        goto LABEL_52;
      }
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_71;
      }
      uint64_t v79 = *(void *)(v0 + 1104);
      char v80 = *(unsigned char *)v78;
      MessageKeys.tcAllowsExpensiveAccess.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v170, v79);
      swift_bridgeObjectRelease();
      int v81 = v163(v79, 1, v6);
      uint64_t v78 = *(void *)(v0 + 1104);
      if (v81 == 1)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10000CC24(v78, (uint64_t *)&unk_1000AF140);
LABEL_72:
        uint64_t v118 = *(void *)(v0 + 944);
        uint64_t v119 = *(void *)(v0 + 840);
        uint64_t v120 = *(void *)(v0 + 784);
        uint64_t v121 = sub_100069094();
        uint64_t v165 = *(void (**)(uint64_t))(v119 + 16);
        uint64_t v168 = v121;
        v165(v118);
        swift_retain();
        char v122 = sub_10008BD30();
        os_log_type_t v123 = sub_10008C2F0();
        uint64_t v124 = swift_allocObject();
        *(unsigned char *)(v124 + 16) = 34;
        uint64_t v125 = swift_allocObject();
        *(unsigned char *)(v125 + 16) = 8;
        uint64_t v126 = swift_allocObject();
        *(void *)(v126 + 16) = sub_100079F44;
        *(void *)(v126 + 24) = v120;
        uint64_t v127 = swift_allocObject();
        *(void *)(v127 + 16) = sub_100079E2C;
        *(void *)(v127 + 24) = v126;
        sub_10000A390(&qword_1000B0238);
        uint64_t v128 = swift_allocObject();
        *(_OWORD *)(v128 + 16) = xmmword_10008FA10;
        *(void *)(v128 + 32) = sub_100079F40;
        *(void *)(v128 + 40) = v124;
        *(void *)(v128 + 48) = sub_100079F40;
        *(void *)(v128 + 56) = v125;
        *(void *)(v128 + 64) = sub_100079E30;
        *(void *)(v128 + 72) = v127;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        os_log_type_t v129 = v123;
        if (os_log_type_enabled(v122, v123))
        {
          int v130 = (uint8_t *)swift_slowAlloc();
          uint64_t v176 = 0;
          v177[0] = swift_slowAlloc();
          *(_WORD *)int v130 = 258;
          v130[2] = *(unsigned char *)(v124 + 16);
          swift_release();
          v130[3] = *(unsigned char *)(v125 + 16);
          v175 = v130 + 4;
          swift_release();
          sub_100078DC4((uint64_t *)&v175, (uint64_t)&v176, v177, *(uint64_t (**)(void))(v127 + 16));
          uint64_t v131 = *(void *)(v0 + 944);
          uint64_t v132 = *(void *)(v0 + 840);
          uint64_t v133 = *(void *)(v0 + 832);
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v122, v129, "missing required values in transport configuration from %{public}s", v130, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          int v47 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
          v47(v131, v133);
        }
        else
        {
          uint64_t v134 = *(void *)(v0 + 944);
          uint64_t v135 = *(void *)(v0 + 840);
          uint64_t v136 = *(void *)(v0 + 832);

          swift_release();
          swift_release();
          swift_release();
          int v47 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
          v47(v134, v136);
        }
        xpc_object_t v137 = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
        if (v137)
        {
          __int16 v138 = v137;
          uint64_t v139 = *(void *)(v0 + 784);
          xpc_dictionary_set_string(v137, "error", "missing required sendOneMessage event fields");
          swift_beginAccess();
          uint64_t v140 = *(void *)(v139 + 112);
          if (!v140)
          {
LABEL_93:
            __break(1u);
            goto LABEL_94;
          }
          swift_beginAccess();
          char v141 = *(_xpc_connection_s **)(v140 + 16);
          if (!v141)
          {
LABEL_94:
            __break(1u);
            __break(1u);
            __break(1u);
            JUMPOUT(0x10006C25CLL);
          }
          uint64_t v142 = *(void *)(v0 + 936);
          uint64_t v143 = *(void *)(v0 + 832);
          xpc_connection_send_message(v141, v138);
          ((void (*)(uint64_t, uint64_t, uint64_t))v165)(v142, v168, v143);
          unint64_t v144 = sub_10008BD30();
          os_log_type_t v145 = sub_10008C2D0();
          BOOL v146 = os_log_type_enabled(v144, v145);
          uint64_t v61 = *(void *)(v0 + 936);
          uint64_t v62 = *(void *)(v0 + 832);
          if (v146)
          {
            uint64_t v147 = (uint8_t *)swift_slowAlloc();
            uint64_t v176 = 0;
            v177[0] = 0;
            *(_WORD *)uint64_t v147 = 0;
            v175 = v147 + 2;
            sub_100078D2C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v175, (uint64_t)&v176, (uint64_t)v177);
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v144, v145, "SendOneMessage Error Reply Sent", v147, 2u);
            swift_slowDealloc();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v64 = v61;
            goto LABEL_35;
          }

          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_67;
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
LABEL_65:
        swift_unknownObjectRelease();
        goto LABEL_36;
      }
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_71;
      }
      uint64_t v82 = *(void *)(v0 + 1096);
      char v83 = *(unsigned char *)v78;
      MessageKeys.tcBundleID.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v170, v82);
      swift_bridgeObjectRelease();
      int v84 = v163(v82, 1, v6);
      uint64_t v78 = *(void *)(v0 + 1096);
      if (v84 == 1) {
        goto LABEL_52;
      }
      if (swift_getEnumCaseMultiPayload() != 8)
      {
LABEL_71:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100079AE4(v78, (uint64_t (*)(void))type metadata accessor for XPCObject);
        goto LABEL_72;
      }
      uint64_t v115 = *(void *)(v0 + 1088);
      uint64_t v161 = *(void *)v78;
      uint64_t v162 = *(void *)(v78 + 8);
      *(void *)(v0 + 1208) = v162;
      MessageKeys.samplingUUID.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      XPCDictionary.subscript.getter(v27, v115);
      swift_bridgeObjectRelease();
      int v116 = v163(v115, 1, v6);
      int v117 = *(uint64_t **)(v0 + 1088);
      if (v116 == 1)
      {
        sub_10000CC24(*(void *)(v0 + 1088), (uint64_t *)&unk_1000AF140);
LABEL_85:
        uint64_t v148 = 0;
        uint64_t v149 = 0;
        goto LABEL_86;
      }
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        sub_100079AE4((uint64_t)v117, (uint64_t (*)(void))type metadata accessor for XPCObject);
        goto LABEL_85;
      }
      uint64_t v148 = *v117;
      uint64_t v149 = v117[1];
LABEL_86:
      type metadata accessor for Session();
      sub_10000D3AC(v148, v149);
      *(double *)(v0 + 1216) = v150;
      double v151 = v150;
      uint64_t v152 = *(void *)(v0 + 1080);
      uint64_t v153 = *(void *)(v0 + 1064);
      uint64_t v154 = *(void *)(v0 + 784);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 120) = v160;
      *(void *)(v0 + 128) = v159;
      *(void *)(v0 + 136) = v68;
      *(void *)(v0 + 144) = v67;
      *(unsigned char *)(v0 + 152) = v80;
      *(unsigned char *)(v0 + 153) = v83;
      *(void *)(v0 + 160) = v161;
      *(void *)(v0 + 168) = v162;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10008BB70();
      sub_10000D220(v0 + 120, 0x4D656E4F646E6553, 0xEE00656761737365, v153, v152, v151);
      uint64_t v155 = *(void *)(v154 + 152);
      *(void *)(v0 + 1224) = v155;
      v174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))(*(void *)(*(void *)v155 + 232)
                                                                            + **(int **)(*(void *)v155 + 232));
      unint64_t v156 = (void *)swift_task_alloc();
      *(void *)(v0 + 1232) = v156;
      void *v156 = v0;
      v156[1] = sub_10006C26C;
      uint64_t v157 = *(void *)(v0 + 1080);
      uint64_t v158 = *(void *)(v0 + 1072);
      return v174(v0 + 264, v157, v158, &off_1000A5E40);
  }
}

uint64_t sub_10006C26C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 784);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1000731B0;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 784);
    uint64_t v4 = sub_10006C394;
  }
  return _swift_task_switch(v4, v5);
}

uint64_t sub_10006C394()
{
  uint64_t v1 = (void *)v0[153];
  uint64_t v2 = v0[33];
  v0[156] = v0[34];
  v0[157] = v2;
  uint64_t v3 = *v1 + 248;
  v0[158] = *(void *)v3;
  v0[159] = v3 & 0xFFFFFFFFFFFFLL | 0x7F8D000000000000;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_10006C440, v1);
}

uint64_t sub_10006C440()
{
  uint64_t v1 = *(void *)(v0 + 784);
  (*(void (**)(void, void))(v0 + 1264))(*(void *)(v0 + 1184), *(void *)(v0 + 1192));
  return _swift_task_switch(sub_10006C4BC, v1);
}

uint64_t sub_10006C4BC()
{
  uint64_t v61 = v0;
  uint64_t v1 = *(void *)(v0[156] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v53 = (uint64_t (*)(void *, uint64_t, uint64_t, _UNKNOWN **))(*(void *)(**(void **)(v0[98] + 160)
                                                                                      + 136)
                                                                          + **(int **)(**(void **)(v0[98] + 160)
                                                                                     + 136));
    uint64_t v2 = (void *)swift_task_alloc();
    v0[160] = v2;
    void *v2 = v0;
    v2[1] = sub_10006CF94;
    uint64_t v3 = v0[135];
    uint64_t v4 = v0[134];
    return v53(v0 + 33, v3, v4, &off_1000A5E40);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_OWORD *)v0 + 42) = *((_OWORD *)v0 + 18);
  sub_100032D5C((uint64_t)(v0 + 84));
  uint64_t v54 = v0[155];
  *((_OWORD *)v0 + 82) = 0u;
  uint64_t v6 = (void *)v0[146];
  uint64_t v7 = v0[99];
  v0[92] = sub_1000352E4((uint64_t)_swiftEmptyArrayStorage);
  size_t count = xpc_dictionary_get_count(v6);
  sub_10000A390((uint64_t *)&unk_1000AF050);
  sub_10008BF30(count);
  uint64_t v9 = swift_allocObject();
  v0[166] = v9;
  *(void *)(v9 + 16) = v0 + 92;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100079568;
  *(void *)(v10 + 24) = v9;
  v0[26] = sub_100038F18;
  v0[27] = v10;
  v0[22] = _NSConcreteStackBlock;
  v0[23] = 1107296256;
  v0[24] = sub_100035900;
  v0[25] = &unk_1000A9090;
  uint64_t v11 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v6, v11);
  swift_unknownObjectRelease();
  _Block_release(v11);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
    return result;
  }
  uint64_t v12 = 4079420;
  uint64_t v13 = v0[129];
  sub_100078970(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v13);
  uint64_t v14 = type metadata accessor for ServiceEventValue();
  unint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  if (v15(v13, 1, v14) != 1)
  {
    sub_100079D20(v0[129], v0[128], &qword_1000AEAA8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(void *)v0[128];
      goto LABEL_11;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(void *)v0[128];
LABEL_11:
      uint64_t v17 = sub_10008C7A0();
      unint64_t v19 = v18;
      goto LABEL_14;
    }
    sub_100079AE4(v0[128], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v19 = 0xE300000000000000;
  uint64_t v17 = 4079420;
LABEL_14:
  v0[168] = v19;
  v0[167] = v17;
  uint64_t v20 = v0[127];
  sub_10000CC24(v0[129], &qword_1000AEAA8);
  sub_100078970(0x7375746174735FLL, 0xE700000000000000, v0[92], v20);
  if (v15(v20, 1, v14) != 1)
  {
    sub_100079D20(v0[127], v0[126], &qword_1000AEAA8);
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      v0[93] = *(void *)v0[126];
      goto LABEL_19;
    }
    if (v21 == 1)
    {
      v0[94] = *(void *)v0[126];
LABEL_19:
      uint64_t v12 = sub_10008C7A0();
      unint64_t v23 = v22;
      goto LABEL_22;
    }
    sub_100079AE4(v0[126], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v23 = 0xE300000000000000;
LABEL_22:
  v0[170] = v23;
  v0[169] = v12;
  uint64_t v24 = v0[125];
  uint64_t v25 = v0[105];
  uint64_t v26 = v0[104];
  sub_10000CC24(v0[127], &qword_1000AEAA8);
  uint64_t v27 = sub_100069094();
  v0[171] = v27;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
  v0[172] = v28;
  v0[173] = (v25 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v28(v24, v27, v26);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v17;
  *(void *)(v29 + 24) = v19;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v12;
  *(void *)(v30 + 24) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  oslog = sub_10008BD30();
  os_log_type_t v31 = sub_10008C310();
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = 34;
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = 8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_100079F48;
  *(void *)(v34 + 24) = v29;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_100079E2C;
  *(void *)(v35 + 24) = v34;
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 34;
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 16) = 8;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_100079F48;
  *(void *)(v38 + 24) = v30;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_100079E2C;
  *(void *)(v39 + 24) = v38;
  v0[174] = sub_10000A390(&qword_1000B0238);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_100090D80;
  *(void *)(v40 + 32) = sub_100079F40;
  *(void *)(v40 + 40) = v32;
  *(void *)(v40 + 48) = sub_100079F40;
  *(void *)(v40 + 56) = v33;
  *(void *)(v40 + 64) = sub_100079E30;
  *(void *)(v40 + 72) = v35;
  *(void *)(v40 + 80) = sub_100079F40;
  *(void *)(v40 + 88) = v36;
  *(void *)(v40 + 96) = sub_100079F40;
  *(void *)(v40 + 104) = v37;
  *(void *)(v40 + 112) = sub_100079E30;
  *(void *)(v40 + 120) = v39;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v31))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v59 = 0;
    uint64_t v60 = swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 514;
    v41[2] = *(unsigned char *)(v32 + 16);
    if (v54)
    {
      return swift_errorRelease();
    }
    swift_release();
    v41[3] = *(unsigned char *)(v33 + 16);
    int v58 = v41 + 4;
    swift_release();
    sub_100078DC4((uint64_t *)&v58, (uint64_t)&v59, &v60, *(uint64_t (**)(void))(v35 + 16));
    swift_release();
    uint64_t v45 = v58;
    *int v58 = *(unsigned char *)(v36 + 16);
    swift_release();
    v45[1] = *(unsigned char *)(v37 + 16);
    int v58 = v45 + 2;
    swift_release();
    sub_100078DC4((uint64_t *)&v58, (uint64_t)&v59, &v60, *(uint64_t (**)(void))(v39 + 16));
    uint64_t v46 = v0[125];
    uint64_t v47 = v0[105];
    uint64_t v48 = v0[104];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v31, "sending one message %{public}s:%{public}s", v41, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v44(v46, v48);
  }
  else
  {
    uint64_t v55 = v0[125];
    uint64_t v42 = v0[105];
    uint64_t v43 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v44(v55, v43);
  }
  v0[175] = v44;
  uint64_t v49 = v0[98];
  swift_bridgeObjectRetain();
  v0[77] = XPCIncomingConnection.init(conn:)(0x4D656E4F646E6553);
  v0[78] = v50;
  v0[79] = v51;
  uint64_t v56 = (uint64_t (*)(void *))(*(void *)(**(void **)(v49 + 160) + 152)
                                         + **(int **)(**(void **)(v49 + 160) + 152));
  uint64_t v52 = (void *)swift_task_alloc();
  v0[176] = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_10006DB24;
  return v56(v0 + 15);
}

uint64_t sub_10006CF94(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 1288) = v2;
  swift_task_dealloc();
  uint64_t v7 = (_OWORD *)(v6 + 288);
  uint64_t v8 = *(void *)(v6 + 784);
  if (v2)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v6 + 640) = *v7;
    sub_100032D5C(v6 + 640);
    uint64_t v9 = sub_100073B30;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v6 + 1296) = a2;
    *(void *)(v6 + 1304) = a1;
    *(_OWORD *)(v6 + 656) = *v7;
    sub_100032D5C(v6 + 656);
    uint64_t v9 = sub_10006D164;
  }
  return _swift_task_switch(v9, v8);
}

uint64_t sub_10006D164()
{
  uint64_t v57 = v0;
  uint64_t v1 = v0[163];
  uint64_t v49 = v0[161];
  v0[165] = v0[162];
  v0[164] = v1;
  uint64_t v2 = (void *)v0[146];
  uint64_t v3 = v0[99];
  v0[92] = sub_1000352E4((uint64_t)_swiftEmptyArrayStorage);
  size_t count = xpc_dictionary_get_count(v2);
  sub_10000A390((uint64_t *)&unk_1000AF050);
  sub_10008BF30(count);
  uint64_t v5 = swift_allocObject();
  v0[166] = v5;
  *(void *)(v5 + 16) = v0 + 92;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100079568;
  *(void *)(v6 + 24) = v5;
  v0[26] = sub_100038F18;
  v0[27] = v6;
  v0[22] = _NSConcreteStackBlock;
  v0[23] = 1107296256;
  v0[24] = sub_100035900;
  v0[25] = &unk_1000A9090;
  uint64_t v7 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v2, v7);
  swift_unknownObjectRelease();
  _Block_release(v7);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
    return result;
  }
  uint64_t v9 = 4079420;
  uint64_t v10 = v0[129];
  sub_100078970(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v10);
  uint64_t v11 = type metadata accessor for ServiceEventValue();
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v10, 1, v11) != 1)
  {
    sub_100079D20(v0[129], v0[128], &qword_1000AEAA8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(void *)v0[128];
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(void *)v0[128];
LABEL_7:
      uint64_t v14 = sub_10008C7A0();
      unint64_t v16 = v15;
      goto LABEL_10;
    }
    sub_100079AE4(v0[128], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v16 = 0xE300000000000000;
  uint64_t v14 = 4079420;
LABEL_10:
  v0[168] = v16;
  v0[167] = v14;
  uint64_t v17 = v0[127];
  sub_10000CC24(v0[129], &qword_1000AEAA8);
  sub_100078970(0x7375746174735FLL, 0xE700000000000000, v0[92], v17);
  if (v12(v17, 1, v11) != 1)
  {
    sub_100079D20(v0[127], v0[126], &qword_1000AEAA8);
    int v18 = swift_getEnumCaseMultiPayload();
    if (v18 == 2)
    {
      v0[93] = *(void *)v0[126];
      goto LABEL_15;
    }
    if (v18 == 1)
    {
      v0[94] = *(void *)v0[126];
LABEL_15:
      uint64_t v9 = sub_10008C7A0();
      unint64_t v20 = v19;
      goto LABEL_18;
    }
    sub_100079AE4(v0[126], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v20 = 0xE300000000000000;
LABEL_18:
  v0[170] = v20;
  v0[169] = v9;
  uint64_t v21 = v0[125];
  uint64_t v22 = v0[105];
  uint64_t v23 = v0[104];
  sub_10000CC24(v0[127], &qword_1000AEAA8);
  uint64_t v24 = sub_100069094();
  v0[171] = v24;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v0[172] = v25;
  v0[173] = (v22 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v25(v21, v24, v23);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v14;
  *(void *)(v26 + 24) = v16;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v9;
  *(void *)(v27 + 24) = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  log = sub_10008BD30();
  os_log_type_t v50 = sub_10008C310();
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = 34;
  uint64_t v29 = swift_allocObject();
  *(unsigned char *)(v29 + 16) = 8;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_100079F48;
  *(void *)(v30 + 24) = v26;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_100079E2C;
  *(void *)(v31 + 24) = v30;
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = 34;
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = 8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_100079F48;
  *(void *)(v34 + 24) = v27;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_100079E2C;
  *(void *)(v35 + 24) = v34;
  v0[174] = sub_10000A390(&qword_1000B0238);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_100090D80;
  *(void *)(v36 + 32) = sub_100079F40;
  *(void *)(v36 + 40) = v28;
  *(void *)(v36 + 48) = sub_100079F40;
  *(void *)(v36 + 56) = v29;
  *(void *)(v36 + 64) = sub_100079E30;
  *(void *)(v36 + 72) = v31;
  *(void *)(v36 + 80) = sub_100079F40;
  *(void *)(v36 + 88) = v32;
  *(void *)(v36 + 96) = sub_100079F40;
  *(void *)(v36 + 104) = v33;
  *(void *)(v36 + 112) = sub_100079E30;
  *(void *)(v36 + 120) = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(log, v50))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = 0;
    uint64_t v56 = swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 514;
    v37[2] = *(unsigned char *)(v28 + 16);
    if (v49)
    {
      swift_unknownObjectRelease();
      return swift_errorRelease();
    }
    swift_release();
    v37[3] = *(unsigned char *)(v29 + 16);
    uint64_t v54 = v37 + 4;
    swift_release();
    sub_100078DC4((uint64_t *)&v54, (uint64_t)&v55, &v56, *(uint64_t (**)(void))(v31 + 16));
    swift_release();
    uint64_t v41 = v54;
    unsigned char *v54 = *(unsigned char *)(v32 + 16);
    swift_release();
    v41[1] = *(unsigned char *)(v33 + 16);
    uint64_t v54 = v41 + 2;
    swift_release();
    sub_100078DC4((uint64_t *)&v54, (uint64_t)&v55, &v56, *(uint64_t (**)(void))(v35 + 16));
    uint64_t v42 = v0[125];
    uint64_t v43 = v0[105];
    uint64_t v44 = v0[104];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, v50, "sending one message %{public}s:%{public}s", v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v40(v42, v44);
  }
  else
  {
    uint64_t v51 = v0[125];
    uint64_t v38 = v0[105];
    uint64_t v39 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v40(v51, v39);
  }
  v0[175] = v40;
  uint64_t v45 = v0[98];
  swift_bridgeObjectRetain();
  v0[77] = XPCIncomingConnection.init(conn:)(0x4D656E4F646E6553);
  v0[78] = v46;
  v0[79] = v47;
  uint64_t v52 = (uint64_t (*)(void *))(*(void *)(**(void **)(v45 + 160) + 152)
                                         + **(int **)(**(void **)(v45 + 160) + 152));
  uint64_t v48 = (void *)swift_task_alloc();
  v0[176] = v48;
  void *v48 = v0;
  v48[1] = sub_10006DB24;
  return v52(v0 + 15);
}

uint64_t sub_10006DB24(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v3;
  uint64_t v6 = *v3;
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v6 + 784);
  if (v2)
  {
    swift_errorRelease();
    uint64_t v9 = sub_100074498;
  }
  else
  {
    *(void *)(v7 + 1416) = a2;
    *(void *)(v7 + 1424) = a1;
    uint64_t v9 = sub_10006DC70;
  }
  return _swift_task_switch(v9, v8);
}

uint64_t sub_10006DC70()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[179] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10006DD70;
  uint64_t v2 = v0[178];
  uint64_t v3 = v0[177];
  return sub_100040590((uint64_t)(v0 + 2), (uint64_t)(v0 + 15), v2, v3, 0x4D656E4F646E6553, 0xEE00656761737365);
}

uint64_t sub_10006DD70()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1440) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 784);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_100079E28;
  }
  else
  {
    uint64_t v4 = sub_10006DEA8;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_10006DEA8()
{
  uint64_t v138 = v0;
  *(void *)(v0 + 248) = &type metadata for AllEventFieldProvider;
  *(void *)(v0 + 256) = &off_1000A7470;
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 224) = v1;
  long long v2 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 96) = v2;
  *(void *)(v1 + 112) = *(void *)(v0 + 112);
  long long v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 32) = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 64) = v4;
  sub_1000339A0((void *)(v0 + 224));
  sub_10000CCE8(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 1440);
  uint64_t v6 = *(void *)(v0 + 624);
  *(void *)(v0 + 1448) = *(void *)(v0 + 616);
  *(void *)(v0 + 1456) = v6;
  *(void *)(v0 + 1464) = *(void *)(v0 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100048E38();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v0 + 1256);
  if (*v7 == 1)
  {
    uint64_t v9 = *(void *)(v8 + 16);
    *(void *)(v0 + 1472) = v9;
    if (v9)
    {
      uint64_t v10 = *(void *)(v0 + 800);
      LODWORD(v11) = *(_DWORD *)(v10 + 80);
      *(_DWORD *)(v0 + 1664) = v11;
      uint64_t v11 = v11;
      os_log_t logd = (os_log_t)((v11 + 16) & ~v11);
      *(void *)(v0 + 1480) = *(void *)(v10 + 72);
      *(void *)(v0 + 1496) = 0;
      *(void *)(v0 + 1488) = v5;
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
      uint64_t v13 = *(void *)(v0 + 1368);
      uint64_t v118 = *(void *)(v0 + 1360);
      uint64_t v115 = *(void *)(v0 + 1352);
      uint64_t v113 = *(void *)(v0 + 1344);
      uint64_t v111 = *(void *)(v0 + 1336);
      uint64_t v14 = *(void *)(v0 + 992);
      uint64_t v15 = *(void *)(v0 + 832);
      uint64_t v16 = *(void *)(v0 + 824);
      uint64_t v129 = v5;
      uint64_t v17 = *(void *)(v0 + 816);
      sub_100079C50(v8 + ((v11 + 32) & ~v11), v16, type metadata accessor for SessionConfiguration.Backend);
      v12(v14, v13, v15);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v111;
      *(void *)(v18 + 24) = v113;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v115;
      *(void *)(v19 + 24) = v118;
      sub_100079C50(v16, v17, type metadata accessor for SessionConfiguration.Backend);
      uint64_t v110 = swift_allocObject();
      sub_100079CB8(v17, (uint64_t)logd + v110, type metadata accessor for SessionConfiguration.Backend);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      osos_log_t log = sub_10008BD30();
      os_log_type_t v119 = sub_10008C310();
      os_log_t log = (os_log_t)swift_allocObject();
      LOBYTE(log[2].isa) = 34;
      uint64_t v122 = swift_allocObject();
      *(unsigned char *)(v122 + 16) = 8;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_100079F48;
      *(void *)(v20 + 24) = v18;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_100079E2C;
      *(void *)(v21 + 24) = v20;
      uint64_t v112 = swift_allocObject();
      *(unsigned char *)(v112 + 16) = 34;
      uint64_t v121 = swift_allocObject();
      *(unsigned char *)(v121 + 16) = 8;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_100079F48;
      *(void *)(v22 + 24) = v19;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_100079E2C;
      *(void *)(v23 + 24) = v22;
      uint64_t v24 = v23;
      uint64_t v116 = v23;
      uint64_t v25 = swift_allocObject();
      *(unsigned char *)(v25 + 16) = 34;
      uint64_t v114 = swift_allocObject();
      *(unsigned char *)(v114 + 16) = 8;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = sub_1000797A4;
      *(void *)(v26 + 24) = v110;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_100079E2C;
      *(void *)(v27 + 24) = v26;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_100090D90;
      *(void *)(v28 + 32) = sub_100079F40;
      *(void *)(v28 + 40) = log;
      *(void *)(v28 + 48) = sub_100079F40;
      *(void *)(v28 + 56) = v122;
      *(void *)(v28 + 64) = sub_100079E30;
      *(void *)(v28 + 72) = v21;
      *(void *)(v28 + 80) = sub_100079F40;
      *(void *)(v28 + 88) = v112;
      *(void *)(v28 + 96) = sub_100079F40;
      *(void *)(v28 + 104) = v121;
      *(void *)(v28 + 112) = sub_100079E30;
      *(void *)(v28 + 120) = v24;
      *(void *)(v28 + 128) = sub_100079F40;
      *(void *)(v28 + 136) = v25;
      *(void *)(v28 + 144) = sub_100079F40;
      *(void *)(v28 + 152) = v114;
      *(void *)(v28 + 160) = sub_100079E30;
      *(void *)(v28 + 168) = v27;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(oslog, v119))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(void *)(v0 + 720) = 0;
        *(void *)(v0 + 728) = v30;
        *(_WORD *)uint64_t v29 = 770;
        v29[2] = (uint8_t)log[2].isa;
        *(void *)(v0 + 712) = v29 + 3;
        if (v129) {
          goto LABEL_13;
        }
        swift_release();
        uint64_t v88 = *(unsigned char **)(v0 + 712);
        unsigned char *v88 = *(unsigned char *)(v122 + 16);
        *(void *)(v0 + 712) = v88 + 1;
        swift_release();
        sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v21 + 16));
        swift_release();
        uint64_t v89 = *(unsigned char **)(v0 + 712);
        *uint64_t v89 = *(unsigned char *)(v112 + 16);
        *(void *)(v0 + 712) = v89 + 1;
        swift_release();
        os_log_type_t v90 = *(unsigned char **)(v0 + 712);
        unsigned char *v90 = *(unsigned char *)(v121 + 16);
        *(void *)(v0 + 712) = v90 + 1;
        swift_release();
        sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v116 + 16));
        swift_release();
        uint64_t v91 = *(unsigned char **)(v0 + 712);
        unsigned char *v91 = *(unsigned char *)(v25 + 16);
        *(void *)(v0 + 712) = v91 + 1;
        swift_release();
        uint64_t v92 = *(unsigned char **)(v0 + 712);
        unsigned char *v92 = *(unsigned char *)(v114 + 16);
        *(void *)(v0 + 712) = v92 + 1;
        swift_release();
        sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v27 + 16));
        uint64_t v93 = *(void *)(v0 + 992);
        uint64_t v94 = *(void *)(v0 + 840);
        uint64_t v95 = *(void *)(v0 + 832);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, oslog, v119, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v29, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        int v74 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
        v74(v93, v95);
      }
      else
      {
        uint64_t v133 = *(void *)(v0 + 992);
        uint64_t v72 = *(void *)(v0 + 840);
        uint64_t v73 = *(void *)(v0 + 832);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        int v74 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        v74(v133, v73);
      }
      *(void *)(v0 + 1504) = v74;
      os_log_type_t v96 = *(uint64_t **)(*(void *)(v0 + 784) + 168);
      *(void *)(v0 + 1512) = v96;
      *(void *)(v0 + 1520) = sub_100079F4C();
      *(void *)(v0 + 1528) = v97;
      int v77 = sub_10006F298;
      uint64_t v75 = v96;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 1400);
  *(void *)(v0 + 1544) = v31;
  if (*(void *)(v0 + 1312))
  {
    int v117 = v31;
    uint64_t v130 = v5;
    uint64_t v32 = *(void *)(v0 + 1360);
    uint64_t v33 = *(void *)(v0 + 1352);
    uint64_t v34 = *(void *)(v0 + 1344);
    uint64_t v35 = *(void *)(v0 + 1336);
    uint64_t v120 = *(void *)(v0 + 1320);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 984), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v35;
    *(void *)(v36 + 24) = v34;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v33;
    *(void *)(v37 + 24) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    loga = sub_10008BD30();
    os_log_type_t v38 = sub_10008C310();
    uint64_t v39 = swift_allocObject();
    *(unsigned char *)(v39 + 16) = 34;
    uint64_t v40 = swift_allocObject();
    *(unsigned char *)(v40 + 16) = 8;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_100079F48;
    *(void *)(v41 + 24) = v36;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_100079E2C;
    *(void *)(v42 + 24) = v41;
    uint64_t v43 = swift_allocObject();
    *(unsigned char *)(v43 + 16) = 34;
    uint64_t v44 = swift_allocObject();
    *(unsigned char *)(v44 + 16) = 8;
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_100079F48;
    *(void *)(v45 + 24) = v37;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_100079E2C;
    *(void *)(v46 + 24) = v45;
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_100090D80;
    *(void *)(v47 + 32) = sub_100079F40;
    *(void *)(v47 + 40) = v39;
    *(void *)(v47 + 48) = sub_100079F40;
    *(void *)(v47 + 56) = v40;
    *(void *)(v47 + 64) = sub_100079E30;
    *(void *)(v47 + 72) = v42;
    *(void *)(v47 + 80) = sub_100079F40;
    *(void *)(v47 + 88) = v43;
    *(void *)(v47 + 96) = sub_100079F40;
    *(void *)(v47 + 104) = v44;
    *(void *)(v47 + 112) = sub_100079E30;
    *(void *)(v47 + 120) = v46;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    os_log_type_t v48 = v38;
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(loga, v38))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v136 = 0;
      uint64_t v137 = swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 514;
      v49[2] = *(unsigned char *)(v39 + 16);
      if (v130) {
        goto LABEL_13;
      }
      swift_release();
      v49[3] = *(unsigned char *)(v40 + 16);
      uint64_t v135 = v49 + 4;
      swift_release();
      sub_100078DC4((uint64_t *)&v135, (uint64_t)&v136, &v137, *(uint64_t (**)(void))(v42 + 16));
      swift_release();
      uint64_t v78 = v135;
      *uint64_t v135 = *(unsigned char *)(v43 + 16);
      swift_release();
      v78[1] = *(unsigned char *)(v44 + 16);
      uint64_t v135 = v78 + 2;
      swift_release();
      sub_100078DC4((uint64_t *)&v135, (uint64_t)&v136, &v137, *(uint64_t (**)(void))(v46 + 16));
      uint64_t v79 = *(void *)(v0 + 984);
      uint64_t v80 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, loga, v48, "processing sendOneMessage, immediate %{public}s:%{public}s", v49, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v70 = v79;
      uint64_t v71 = v80;
    }
    else
    {
      uint64_t v132 = *(void *)(v0 + 984);
      uint64_t v69 = *(void *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v70 = v132;
      uint64_t v71 = v69;
    }
    v117(v70, v71);
    uint64_t v81 = *(void *)(v0 + 1464);
    uint64_t v82 = *(void *)(v0 + 1456);
    uint64_t v83 = *(void *)(v0 + 1448);
    uint64_t ObjectType = swift_getObjectType();
    sub_10000A390(&qword_1000AE858);
    uint64_t v85 = swift_allocObject();
    *(void *)(v0 + 1552) = v85;
    *(_OWORD *)(v85 + 16) = xmmword_10008DC30;
    *(void *)(v85 + 32) = v83;
    *(void *)(v85 + 40) = v82;
    *(void *)(v85 + 48) = v81;
    os_log_t logc = (os_log_t)(*(void *)(v120 + 8) + **(int **)(v120 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v86 = (void *)swift_task_alloc();
    *(void *)(v0 + 1560) = v86;
    *uint64_t v86 = v0;
    v86[1] = sub_1000706A4;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))logc)(v85, ObjectType, v120);
  }
  else
  {
    uint64_t v50 = *(void *)(*(void *)(v0 + 1256) + 16);
    swift_bridgeObjectRelease();
    if (!v50)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1592) = v5;
      uint64_t v75 = *(uint64_t **)(v0 + 1224);
      uint64_t v76 = *v75;
      *(void *)(v0 + 1600) = *(void *)(*v75 + 256);
      *(void *)(v0 + 1608) = (v76 + 256) & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
      int v77 = sub_100071A60;
LABEL_26:
      return _swift_task_switch(v77, v75);
    }
    uint64_t v131 = v5;
    uint64_t v51 = *(void *)(v0 + 1360);
    uint64_t v52 = *(void *)(v0 + 1352);
    uint64_t v53 = *(void *)(v0 + 1344);
    uint64_t v54 = *(void *)(v0 + 1336);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 968), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v54;
    *(void *)(v55 + 24) = v53;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v52;
    *(void *)(v56 + 24) = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_10008BD30();
    os_log_type_t logb = sub_10008C310();
    uint64_t v58 = swift_allocObject();
    *(unsigned char *)(v58 + 16) = 34;
    uint64_t v59 = swift_allocObject();
    *(unsigned char *)(v59 + 16) = 8;
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = sub_100079F48;
    *(void *)(v60 + 24) = v55;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = sub_100079E2C;
    *(void *)(v61 + 24) = v60;
    uint64_t v62 = swift_allocObject();
    *(unsigned char *)(v62 + 16) = 34;
    uint64_t v63 = swift_allocObject();
    *(unsigned char *)(v63 + 16) = 8;
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = sub_100079F48;
    *(void *)(v64 + 24) = v56;
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = sub_100079E2C;
    *(void *)(v65 + 24) = v64;
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_100090D80;
    *(void *)(v66 + 32) = sub_100079F40;
    *(void *)(v66 + 40) = v58;
    *(void *)(v66 + 48) = sub_100079F40;
    *(void *)(v66 + 56) = v59;
    *(void *)(v66 + 64) = sub_100079E30;
    *(void *)(v66 + 72) = v61;
    *(void *)(v66 + 80) = sub_100079F40;
    *(void *)(v66 + 88) = v62;
    *(void *)(v66 + 96) = sub_100079F40;
    *(void *)(v66 + 104) = v63;
    *(void *)(v66 + 112) = sub_100079E30;
    *(void *)(v66 + 120) = v65;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v57, logb))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v136 = 0;
      uint64_t v137 = swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 514;
      v67[2] = *(unsigned char *)(v58 + 16);
      if (v131)
      {
LABEL_13:
        swift_unknownObjectRelease();
        return swift_errorRelease();
      }
      swift_release();
      v67[3] = *(unsigned char *)(v59 + 16);
      uint64_t v135 = v67 + 4;
      swift_release();
      sub_100078DC4((uint64_t *)&v135, (uint64_t)&v136, &v137, *(uint64_t (**)(void))(v61 + 16));
      swift_release();
      uint64_t v98 = v57;
      uint64_t v99 = v135;
      *uint64_t v135 = *(unsigned char *)(v62 + 16);
      swift_release();
      v99[1] = *(unsigned char *)(v63 + 16);
      uint64_t v135 = v99 + 2;
      swift_release();
      sub_100078DC4((uint64_t *)&v135, (uint64_t)&v136, &v137, *(uint64_t (**)(void))(v65 + 16));
      uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v101 = *(void *)(v0 + 968);
      uint64_t v102 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v98, logb, "caching sendOneMessage %{public}s:%{public}s", v67, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v100(v101, v102);
    }
    else
    {
      os_log_t loge = *(os_log_t *)(v0 + 968);
      uint64_t v134 = *(void (**)(os_log_t, uint64_t))(v0 + 1544);
      uint64_t v87 = *(void *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v134(loge, v87);
    }
    sub_10008BB70();
    uint64_t v103 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v103;
    void *v103 = v0;
    v103[1] = sub_1000712D0;
    uint64_t v104 = *(void *)(v0 + 1464);
    uint64_t v105 = *(void *)(v0 + 1456);
    uint64_t v106 = *(void *)(v0 + 1448);
    double v107 = *(double *)(v0 + 1216);
    uint64_t v108 = *(void *)(v0 + 1056);
    return sub_10002629C(v0 + 120, v108, v107, v106, v105, v104);
  }
}

uint64_t sub_10006F298()
{
  uint64_t v1 = *(void *)(v0 + 1488);
  sub_100008CA8(*(void *)(v0 + 1520), *(void **)(v0 + 1528), *(void *)(v0 + 1448), *(void *)(v0 + 1456), *(void *)(v0 + 1464));
  *(void *)(v0 + 1536) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 784);
    long long v3 = sub_100075790;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 784);
    swift_bridgeObjectRelease();
    long long v3 = sub_10006F34C;
    uint64_t v2 = v4;
  }
  return _swift_task_switch(v3, v2);
}

uint64_t sub_10006F34C()
{
  uint64_t v128 = v0;
  sub_100079AE4(*(void *)(v0 + 824), type metadata accessor for SessionConfiguration.Backend);
  uint64_t v1 = *(void *)(v0 + 1536);
  uint64_t v2 = *(void *)(v0 + 1496) + 1;
  if (v2 != *(void *)(v0 + 1472))
  {
    *(void *)(v0 + 1496) = v2;
    *(void *)(v0 + 1488) = v1;
    uint64_t v21 = *(unsigned __int8 *)(v0 + 1664);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
    uint64_t v23 = *(void *)(v0 + 1368);
    os_log_t logc = *(os_log_t *)(v0 + 1360);
    uint64_t v114 = *(void *)(v0 + 1352);
    uint64_t v106 = *(void *)(v0 + 1344);
    uint64_t v103 = v1;
    uint64_t v105 = *(void *)(v0 + 1336);
    uint64_t v24 = *(void *)(v0 + 992);
    uint64_t v25 = (v21 + 16) & ~v21;
    uint64_t v26 = *(void *)(v0 + 832);
    uint64_t v27 = *(void *)(v0 + 824);
    uint64_t v28 = *(void *)(v0 + 816);
    sub_100079C50(*(void *)(v0 + 1256) + ((v21 + 32) & ~v21) + *(void *)(v0 + 1480) * v2, v27, type metadata accessor for SessionConfiguration.Backend);
    v22(v24, v23, v26);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v105;
    *(void *)(v29 + 24) = v106;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v114;
    *(void *)(v30 + 24) = logc;
    sub_100079C50(v27, v28, type metadata accessor for SessionConfiguration.Backend);
    uint64_t v110 = swift_allocObject();
    sub_100079CB8(v28, v110 + v25, type metadata accessor for SessionConfiguration.Backend);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osos_log_t loga = sub_10008BD30();
    os_log_type_t v115 = sub_10008C310();
    os_log_t loga = (os_log_t)swift_allocObject();
    LOBYTE(loga[2].isa) = 34;
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = 8;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_100079F48;
    *(void *)(v32 + 24) = v29;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_100079E2C;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = swift_allocObject();
    *(unsigned char *)(v34 + 16) = 34;
    uint64_t v35 = swift_allocObject();
    *(unsigned char *)(v35 + 16) = 8;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_100079F48;
    *(void *)(v36 + 24) = v30;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_100079E2C;
    *(void *)(v37 + 24) = v36;
    uint64_t v38 = swift_allocObject();
    *(unsigned char *)(v38 + 16) = 34;
    uint64_t v39 = swift_allocObject();
    *(unsigned char *)(v39 + 16) = 8;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_1000797A4;
    *(void *)(v40 + 24) = v110;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_100079E2C;
    *(void *)(v41 + 24) = v40;
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_100090D90;
    *(void *)(v42 + 32) = sub_100079F40;
    *(void *)(v42 + 40) = loga;
    *(void *)(v42 + 48) = sub_100079F40;
    *(void *)(v42 + 56) = v31;
    *(void *)(v42 + 64) = sub_100079E30;
    *(void *)(v42 + 72) = v33;
    *(void *)(v42 + 80) = sub_100079F40;
    *(void *)(v42 + 88) = v34;
    *(void *)(v42 + 96) = sub_100079F40;
    *(void *)(v42 + 104) = v35;
    *(void *)(v42 + 112) = sub_100079E30;
    *(void *)(v42 + 120) = v37;
    *(void *)(v42 + 128) = sub_100079F40;
    *(void *)(v42 + 136) = v38;
    *(void *)(v42 + 144) = sub_100079F40;
    *(void *)(v42 + 152) = v39;
    *(void *)(v42 + 160) = sub_100079E30;
    *(void *)(v42 + 168) = v41;
    swift_retain();
    uint64_t v112 = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(osloga, v115))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(void *)(v0 + 720) = 0;
      *(void *)(v0 + 728) = v44;
      *(_WORD *)uint64_t v43 = 770;
      v43[2] = (uint8_t)loga[2].isa;
      *(void *)(v0 + 712) = v43 + 3;
      if (v103)
      {
LABEL_8:
        swift_unknownObjectRelease();
        return swift_errorRelease();
      }
      swift_release();
      uint64_t v69 = *(unsigned char **)(v0 + 712);
      *uint64_t v69 = *(unsigned char *)(v112 + 16);
      *(void *)(v0 + 712) = v69 + 1;
      swift_release();
      sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v33 + 16));
      swift_release();
      uint64_t v70 = *(unsigned char **)(v0 + 712);
      *uint64_t v70 = *(unsigned char *)(v34 + 16);
      *(void *)(v0 + 712) = v70 + 1;
      swift_release();
      uint64_t v71 = *(unsigned char **)(v0 + 712);
      *uint64_t v71 = *(unsigned char *)(v35 + 16);
      *(void *)(v0 + 712) = v71 + 1;
      swift_release();
      sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v37 + 16));
      swift_release();
      uint64_t v72 = *(unsigned char **)(v0 + 712);
      unsigned char *v72 = *(unsigned char *)(v38 + 16);
      *(void *)(v0 + 712) = v72 + 1;
      swift_release();
      uint64_t v73 = *(unsigned char **)(v0 + 712);
      *uint64_t v73 = *(unsigned char *)(v39 + 16);
      *(void *)(v0 + 712) = v73 + 1;
      swift_release();
      sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v41 + 16));
      uint64_t v74 = *(void *)(v0 + 992);
      uint64_t v75 = *(void *)(v0 + 840);
      uint64_t v76 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, osloga, v115, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v43, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v47(v74, v76);
    }
    else
    {
      uint64_t v116 = *(void *)(v0 + 992);
      uint64_t v46 = *(void *)(v0 + 840);
      uint64_t v111 = *(void *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v47(v116, v111);
    }
    *(void *)(v0 + 1504) = v47;
    int v77 = *(uint64_t **)(*(void *)(v0 + 784) + 168);
    *(void *)(v0 + 1512) = v77;
    *(void *)(v0 + 1520) = sub_100079F4C();
    *(void *)(v0 + 1528) = v78;
    uint64_t v79 = sub_10006F298;
    uint64_t v80 = v77;
    goto LABEL_19;
  }
  long long v3 = *(NSObject **)(v0 + 1504);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1544) = v3;
  if (!*(void *)(v0 + 1312))
  {
    uint64_t v48 = *(void *)(*(void *)(v0 + 1256) + 16);
    swift_bridgeObjectRelease();
    if (v48)
    {
      uint64_t v104 = v1;
      uint64_t v49 = *(void *)(v0 + 1360);
      uint64_t v50 = *(void *)(v0 + 1352);
      uint64_t v51 = *(void *)(v0 + 1344);
      uint64_t v52 = *(void *)(v0 + 1336);
      (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 968), *(void *)(v0 + 1368), *(void *)(v0 + 832));
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v52;
      *(void *)(v53 + 24) = v51;
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v50;
      *(void *)(v54 + 24) = v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_10008BD30();
      os_log_type_t logb = sub_10008C310();
      uint64_t v56 = swift_allocObject();
      *(unsigned char *)(v56 + 16) = 34;
      uint64_t v57 = swift_allocObject();
      *(unsigned char *)(v57 + 16) = 8;
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = sub_100079F48;
      *(void *)(v58 + 24) = v53;
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = sub_100079E2C;
      *(void *)(v59 + 24) = v58;
      uint64_t v60 = swift_allocObject();
      *(unsigned char *)(v60 + 16) = 34;
      uint64_t v61 = swift_allocObject();
      *(unsigned char *)(v61 + 16) = 8;
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = sub_100079F48;
      *(void *)(v62 + 24) = v54;
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = sub_100079E2C;
      *(void *)(v63 + 24) = v62;
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_100090D80;
      *(void *)(v64 + 32) = sub_100079F40;
      *(void *)(v64 + 40) = v56;
      *(void *)(v64 + 48) = sub_100079F40;
      *(void *)(v64 + 56) = v57;
      *(void *)(v64 + 64) = sub_100079E30;
      *(void *)(v64 + 72) = v59;
      *(void *)(v64 + 80) = sub_100079F40;
      *(void *)(v64 + 88) = v60;
      *(void *)(v64 + 96) = sub_100079F40;
      *(void *)(v64 + 104) = v61;
      *(void *)(v64 + 112) = sub_100079E30;
      *(void *)(v64 + 120) = v63;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v55, logb))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        uint64_t v126 = 0;
        uint64_t v127 = swift_slowAlloc();
        *(_WORD *)uint64_t v65 = 514;
        v65[2] = *(unsigned char *)(v56 + 16);
        if (v104) {
          goto LABEL_8;
        }
        swift_release();
        v65[3] = *(unsigned char *)(v57 + 16);
        uint64_t v125 = v65 + 4;
        swift_release();
        sub_100078DC4((uint64_t *)&v125, (uint64_t)&v126, &v127, *(uint64_t (**)(void))(v59 + 16));
        swift_release();
        uint64_t v92 = v55;
        uint64_t v93 = v125;
        *uint64_t v125 = *(unsigned char *)(v60 + 16);
        swift_release();
        v93[1] = *(unsigned char *)(v61 + 16);
        uint64_t v125 = v93 + 2;
        swift_release();
        sub_100078DC4((uint64_t *)&v125, (uint64_t)&v126, &v127, *(uint64_t (**)(void))(v63 + 16));
        uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
        uint64_t v95 = *(void *)(v0 + 968);
        uint64_t v96 = *(void *)(v0 + 832);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v92, logb, "caching sendOneMessage %{public}s:%{public}s", v65, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v94(v95, v96);
      }
      else
      {
        uint64_t v119 = *(void *)(v0 + 968);
        os_log_t logd = *(os_log_t *)(v0 + 1544);
        uint64_t v91 = *(void *)(v0 + 832);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(uint64_t, uint64_t))logd)(v119, v91);
      }
      sub_10008BB70();
      uint64_t v97 = (void *)swift_task_alloc();
      *(void *)(v0 + 1576) = v97;
      *uint64_t v97 = v0;
      v97[1] = sub_1000712D0;
      uint64_t v98 = *(void *)(v0 + 1464);
      uint64_t v99 = *(void *)(v0 + 1456);
      uint64_t v100 = *(void *)(v0 + 1448);
      double v101 = *(double *)(v0 + 1216);
      uint64_t v102 = *(void *)(v0 + 1056);
      return sub_10002629C(v0 + 120, v102, v101, v100, v99, v98);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1592) = v1;
    uint64_t v80 = *(uint64_t **)(v0 + 1224);
    uint64_t v81 = *v80;
    *(void *)(v0 + 1600) = *(void *)(*v80 + 256);
    *(void *)(v0 + 1608) = (v81 + 256) & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
    uint64_t v79 = sub_100071A60;
LABEL_19:
    return _swift_task_switch(v79, v80);
  }
  osos_log_t log = v3;
  uint64_t v4 = *(void *)(v0 + 1360);
  uint64_t v5 = *(void *)(v0 + 1352);
  uint64_t v6 = *(void *)(v0 + 1344);
  uint64_t v7 = *(void *)(v0 + 1336);
  uint64_t v109 = *(void *)(v0 + 1320);
  (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 984), *(void *)(v0 + 1368), *(void *)(v0 + 832));
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v6;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  os_log_t log = sub_10008BD30();
  os_log_type_t v10 = sub_10008C310();
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100079F48;
  *(void *)(v13 + 24) = v8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100079E2C;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 34;
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100079F48;
  *(void *)(v17 + 24) = v9;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100079E2C;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100090D80;
  *(void *)(v19 + 32) = sub_100079F40;
  *(void *)(v19 + 40) = v11;
  *(void *)(v19 + 48) = sub_100079F40;
  *(void *)(v19 + 56) = v12;
  *(void *)(v19 + 64) = sub_100079E30;
  *(void *)(v19 + 72) = v14;
  *(void *)(v19 + 80) = sub_100079F40;
  *(void *)(v19 + 88) = v15;
  *(void *)(v19 + 96) = sub_100079F40;
  *(void *)(v19 + 104) = v16;
  *(void *)(v19 + 112) = sub_100079E30;
  *(void *)(v19 + 120) = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(log, v10))
  {
    os_log_type_t v113 = v10;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v126 = 0;
    uint64_t v127 = swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 514;
    void v20[2] = *(unsigned char *)(v11 + 16);
    if (v1) {
      goto LABEL_8;
    }
    swift_release();
    v20[3] = *(unsigned char *)(v12 + 16);
    uint64_t v125 = v20 + 4;
    swift_release();
    sub_100078DC4((uint64_t *)&v125, (uint64_t)&v126, &v127, *(uint64_t (**)(void))(v14 + 16));
    swift_release();
    uint64_t v82 = v125;
    *uint64_t v125 = *(unsigned char *)(v15 + 16);
    swift_release();
    v82[1] = *(unsigned char *)(v16 + 16);
    uint64_t v125 = v82 + 2;
    swift_release();
    sub_100078DC4((uint64_t *)&v125, (uint64_t)&v126, &v127, *(uint64_t (**)(void))(v18 + 16));
    uint64_t v83 = *(void *)(v0 + 984);
    uint64_t v84 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, v113, "processing sendOneMessage, immediate %{public}s:%{public}s", v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v67 = v83;
    uint64_t v68 = v84;
  }
  else
  {
    uint64_t v117 = *(void *)(v0 + 984);
    uint64_t v66 = *(void *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v67 = v117;
    uint64_t v68 = v66;
  }
  ((void (*)(uint64_t, uint64_t))oslog)(v67, v68);
  uint64_t v85 = *(void *)(v0 + 1464);
  uint64_t v86 = *(void *)(v0 + 1456);
  uint64_t v87 = *(void *)(v0 + 1448);
  uint64_t ObjectType = swift_getObjectType();
  sub_10000A390(&qword_1000AE858);
  uint64_t v89 = swift_allocObject();
  *(void *)(v0 + 1552) = v89;
  *(_OWORD *)(v89 + 16) = xmmword_10008DC30;
  *(void *)(v89 + 32) = v87;
  *(void *)(v89 + 40) = v86;
  *(void *)(v89 + 48) = v85;
  uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 + 8) + **(int **)(v109 + 8));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v90 = (void *)swift_task_alloc();
  *(void *)(v0 + 1560) = v90;
  void *v90 = v0;
  v90[1] = sub_1000706A4;
  return v118(v89, ObjectType, v109);
}

uint64_t sub_1000706A4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 784);
    uint64_t v4 = sub_10007728C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 784);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1000707CC;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_1000707CC()
{
  uint64_t v74 = v0;
  uint64_t v1 = *(void *)(v0 + 1360);
  uint64_t v2 = *(void *)(v0 + 1352);
  uint64_t v3 = *(void *)(v0 + 1344);
  uint64_t v4 = *(void *)(v0 + 1336);
  (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 976), *(void *)(v0 + 1368), *(void *)(v0 + 832));
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  osos_log_t log = sub_10008BD30();
  os_log_type_t v7 = sub_10008C310();
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 34;
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100079F48;
  *(void *)(v10 + 24) = v5;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_100079E2C;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 34;
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100079F48;
  *(void *)(v14 + 24) = v6;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100079E2C;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100090D80;
  *(void *)(v16 + 32) = sub_100079F40;
  *(void *)(v16 + 40) = v8;
  *(void *)(v16 + 48) = sub_100079F40;
  *(void *)(v16 + 56) = v9;
  *(void *)(v16 + 64) = sub_100079E30;
  *(void *)(v16 + 72) = v11;
  *(void *)(v16 + 80) = sub_100079F40;
  *(void *)(v16 + 88) = v12;
  *(void *)(v16 + 96) = sub_100079F40;
  *(void *)(v16 + 104) = v13;
  *(void *)(v16 + 112) = sub_100079E30;
  *(void *)(v16 + 120) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v65 = v12;
    uint64_t v17 = *(void *)(v0 + 1568);
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = 0;
    uint64_t v73 = swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 514;
    void v18[2] = *(unsigned char *)(v8 + 16);
    uint64_t v19 = *(void *)(v0 + 1568);
    if (v17) {
      goto LABEL_21;
    }
    swift_release();
    v18[3] = *(unsigned char *)(v9 + 16);
    uint64_t v71 = v18 + 4;
    uint64_t v20 = *(void *)(v0 + 1568);
    if (v19) {
      goto LABEL_21;
    }
    swift_release();
    sub_100078DC4((uint64_t *)&v71, (uint64_t)&v72, &v73, *(uint64_t (**)(void))(v11 + 16));
    uint64_t v54 = *(void *)(v0 + 1568);
    if (v20) {
      goto LABEL_21;
    }
    swift_release();
    uint64_t v55 = v71;
    *uint64_t v71 = *(unsigned char *)(v65 + 16);
    uint64_t v56 = *(void *)(v0 + 1568);
    if (v54
      || (swift_release(), v55[1] = *(unsigned char *)(v13 + 16), v71 = v55 + 2, uint64_t v57 = *(void *)(v0 + 1568), v56)
      || (swift_release(), sub_100078DC4((uint64_t *)&v71, (uint64_t)&v72, &v73, *(uint64_t (**)(void))(v15 + 16)), v57))
    {
LABEL_21:
      swift_unknownObjectRelease();
      return swift_errorRelease();
    }
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v59 = *(void *)(v0 + 976);
    uint64_t v60 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, "processed sendOneMessage, immediate %{public}s:%{public}s", v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_unknownObjectRelease();
    v58(v59, v60);
  }
  else
  {
    uint64_t v63 = *(void *)(v0 + 976);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v62 = *(void *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
    v66(v63, v62);
  }
  uint64_t v21 = *(void *)(v0 + 1568);
  uint64_t v22 = *(void *)(*(void *)(v0 + 1256) + 16);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v0 + 1360);
  if (v22)
  {
    uint64_t v64 = v21;
    uint64_t v24 = *(void *)(v0 + 1352);
    uint64_t v25 = *(void *)(v0 + 1344);
    uint64_t v26 = *(void *)(v0 + 1336);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 968), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = v25;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v24;
    *(void *)(v28 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osos_log_t loga = sub_10008BD30();
    os_log_type_t v29 = sub_10008C310();
    uint64_t v30 = swift_allocObject();
    *(unsigned char *)(v30 + 16) = 34;
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = 8;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_100079F48;
    *(void *)(v32 + 24) = v27;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_100079E2C;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = swift_allocObject();
    *(unsigned char *)(v34 + 16) = 34;
    uint64_t v35 = swift_allocObject();
    *(unsigned char *)(v35 + 16) = 8;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_100079F48;
    *(void *)(v36 + 24) = v28;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_100079E2C;
    *(void *)(v37 + 24) = v36;
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_100090D80;
    *(void *)(v38 + 32) = sub_100079F40;
    *(void *)(v38 + 40) = v30;
    *(void *)(v38 + 48) = sub_100079F40;
    *(void *)(v38 + 56) = v31;
    *(void *)(v38 + 64) = sub_100079E30;
    *(void *)(v38 + 72) = v33;
    *(void *)(v38 + 80) = sub_100079F40;
    *(void *)(v38 + 88) = v34;
    *(void *)(v38 + 96) = sub_100079F40;
    *(void *)(v38 + 104) = v35;
    *(void *)(v38 + 112) = sub_100079E30;
    *(void *)(v38 + 120) = v37;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(osloga, v29))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v72 = 0;
      uint64_t v73 = v40;
      *(_WORD *)uint64_t v39 = 514;
      v39[2] = *(unsigned char *)(v30 + 16);
      if (v64) {
        goto LABEL_21;
      }
      swift_release();
      v39[3] = *(unsigned char *)(v31 + 16);
      uint64_t v71 = v39 + 4;
      swift_release();
      sub_100078DC4((uint64_t *)&v71, (uint64_t)&v72, &v73, *(uint64_t (**)(void))(v33 + 16));
      swift_release();
      uint64_t v41 = v71;
      *uint64_t v71 = *(unsigned char *)(v34 + 16);
      swift_release();
      v41[1] = *(unsigned char *)(v35 + 16);
      uint64_t v71 = v41 + 2;
      swift_release();
      sub_100078DC4((uint64_t *)&v71, (uint64_t)&v72, &v73, *(uint64_t (**)(void))(v37 + 16));
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v43 = *(void *)(v0 + 968);
      uint64_t v44 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, osloga, v29, "caching sendOneMessage %{public}s:%{public}s", v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v42(v43, v44);
    }
    else
    {
      uint64_t v67 = *(void *)(v0 + 968);
      uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v47 = *(void *)(v0 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v68(v67, v47);
    }
    sub_10008BB70();
    uint64_t v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v48;
    void *v48 = v0;
    v48[1] = sub_1000712D0;
    uint64_t v49 = *(void *)(v0 + 1464);
    uint64_t v50 = *(void *)(v0 + 1456);
    uint64_t v51 = *(void *)(v0 + 1448);
    double v52 = *(double *)(v0 + 1216);
    uint64_t v53 = *(void *)(v0 + 1056);
    return sub_10002629C(v0 + 120, v53, v52, v51, v50, v49);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1592) = v21;
    uint64_t v45 = *(uint64_t **)(v0 + 1224);
    uint64_t v46 = *v45;
    *(void *)(v0 + 1600) = *(void *)(*v45 + 256);
    *(void *)(v0 + 1608) = (v46 + 256) & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
    return _swift_task_switch(sub_100071A60, v45);
  }
}

uint64_t sub_1000712D0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1584) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = v2[132];
    uint64_t v3 = v2[131];
    uint64_t v4 = v2[130];
    uint64_t v5 = v2[98];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v4);
    uint64_t v6 = sub_100077B98;
  }
  else
  {
    uint64_t v7 = v2[132];
    uint64_t v8 = v2[131];
    uint64_t v9 = v2[130];
    uint64_t v5 = v2[98];
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1000714F8;
  }
  return _swift_task_switch(v6, v5);
}

uint64_t sub_1000714F8()
{
  uint64_t v38 = v0;
  uint64_t v1 = *(void *)(v0 + 1360);
  uint64_t v2 = *(void *)(v0 + 1352);
  uint64_t v3 = *(void *)(v0 + 1344);
  uint64_t v4 = *(void *)(v0 + 1336);
  (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 960), *(void *)(v0 + 1368), *(void *)(v0 + 832));
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  os_log_t log = sub_10008BD30();
  os_log_type_t v32 = sub_10008C310();
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100079F48;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100079E2C;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100079F48;
  *(void *)(v13 + 24) = v6;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100079E2C;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100090D80;
  *(void *)(v15 + 32) = sub_100079F40;
  *(void *)(v15 + 40) = v7;
  *(void *)(v15 + 48) = sub_100079F40;
  *(void *)(v15 + 56) = v8;
  *(void *)(v15 + 64) = sub_100079E30;
  *(void *)(v15 + 72) = v10;
  *(void *)(v15 + 80) = sub_100079F40;
  *(void *)(v15 + 88) = v11;
  *(void *)(v15 + 96) = sub_100079F40;
  *(void *)(v15 + 104) = v12;
  *(void *)(v15 + 112) = sub_100079E30;
  *(void *)(v15 + 120) = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(log, v32))
  {
    uint64_t v16 = *(void *)(v0 + 1584);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = 0;
    uint64_t v37 = swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 514;
    void v17[2] = *(unsigned char *)(v7 + 16);
    uint64_t v18 = *(void *)(v0 + 1584);
    if (v16) {
      goto LABEL_13;
    }
    swift_release();
    id v17[3] = *(unsigned char *)(v8 + 16);
    uint64_t v35 = v17 + 4;
    uint64_t v19 = *(void *)(v0 + 1584);
    if (v18) {
      goto LABEL_13;
    }
    swift_release();
    sub_100078DC4((uint64_t *)&v35, (uint64_t)&v36, &v37, *(uint64_t (**)(void))(v10 + 16));
    uint64_t v23 = *(void *)(v0 + 1584);
    if (v19) {
      goto LABEL_13;
    }
    swift_release();
    uint64_t v24 = v35;
    unsigned char *v35 = *(unsigned char *)(v11 + 16);
    uint64_t v25 = *(void *)(v0 + 1584);
    if (v23
      || (swift_release(), v24[1] = *(unsigned char *)(v12 + 16), v35 = v24 + 2, uint64_t v26 = *(void *)(v0 + 1584), v25)
      || (swift_release(), sub_100078DC4((uint64_t *)&v35, (uint64_t)&v36, &v37, *(uint64_t (**)(void))(v14 + 16)), v26))
    {
LABEL_13:
      swift_unknownObjectRelease();
      return swift_errorRelease();
    }
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v28 = *(void *)(v0 + 960);
    uint64_t v29 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, v32, "cached sendOneMessage %{public}s:%{public}s", v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v27(v28, v29);
  }
  else
  {
    uint64_t v31 = *(void *)(v0 + 960);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v20 = *(void *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v33(v31, v20);
  }
  *(void *)(v0 + 1592) = *(void *)(v0 + 1584);
  uint64_t v21 = *(void **)(v0 + 1224);
  uint64_t v22 = *v21 + 256;
  *(void *)(v0 + 1600) = *(void *)v22;
  *(void *)(v0 + 1608) = v22 & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
  return _swift_task_switch(sub_100071A60, v21);
}

uint64_t sub_100071A60()
{
  uint64_t v1 = *(void *)(v0 + 784);
  (*(void (**)(void, void, uint64_t))(v0 + 1600))(*(void *)(v0 + 1184), *(void *)(v0 + 1192), 1);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100071AF4, v1);
}

uint64_t sub_100071AF4()
{
  uint64_t v28 = v0;
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
  if (!reply)
  {
    uint64_t v14 = *(void *)(v0 + 1080);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v14;
    goto LABEL_8;
  }
  uint64_t v2 = reply;
  uint64_t v3 = *(void *)(v0 + 784);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 112);
  if (!v4)
  {
    swift_unknownObjectRelease();
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess();
  uint64_t v5 = *(_xpc_connection_s **)(v4 + 16);
  if (!v5)
  {
LABEL_12:
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
  uint64_t v7 = *(void *)(v0 + 1368);
  uint64_t v8 = *(void *)(v0 + 952);
  uint64_t v9 = *(void *)(v0 + 832);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  xpc_connection_send_message(v5, v2);
  swift_unknownObjectRelease();
  v6(v8, v7, v9);
  uint64_t v10 = sub_10008BD30();
  os_log_type_t v11 = sub_10008C2D0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v22 = *(void *)(v0 + 1080);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v21 = *(void *)(v0 + 952);
    uint64_t v20 = *(void *)(v0 + 832);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = 0;
    v27[0] = 0;
    *(_WORD *)uint64_t v12 = 0;
    uint64_t v25 = v12 + 2;
    sub_100078D2C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v25, (uint64_t)&v26, (uint64_t)v27);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "SendOneMessage Reply Sent", v12, 2u);
    swift_slowDealloc();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v23(v21, v20);
    uint64_t v13 = v22;
  }
  else
  {
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v15 = *(void *)(v0 + 1080);
    uint64_t v16 = *(void *)(v0 + 952);
    uint64_t v17 = *(void *)(v0 + 832);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v24(v16, v17);
    uint64_t v13 = v15;
  }
LABEL_8:
  sub_100079AE4(v13, (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100072058()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100072620()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100072BE8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

_xpc_connection_s *sub_1000731B0()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 1240);
  uint64_t v2 = *(void *)(v0 + 880);
  uint64_t v3 = *(void *)(v0 + 840);
  uint64_t v43 = sub_100069094();
  uint64_t v42 = *(void (**)(uint64_t))(v3 + 16);
  v42(v2);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v0 + 152);
  *(void *)(v4 + 64) = *(void *)(v0 + 168);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_10007946C;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  swift_errorRetain();
  uint64_t v8 = sub_10008BD30();
  os_log_type_t v44 = sub_10008C2F0();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 34;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_10007948C;
  *(void *)(v11 + 24) = v6;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100079E2C;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 32;
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100079400;
  *(void *)(v15 + 24) = v7;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100079E2C;
  *(void *)(v16 + 24) = v15;
  sub_10000A390(&qword_1000B0238);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100090D80;
  *(void *)(v17 + 32) = sub_100079F40;
  *(void *)(v17 + 40) = v9;
  *(void *)(v17 + 48) = sub_100079F40;
  *(void *)(v17 + 56) = v10;
  *(void *)(v17 + 64) = sub_100079E30;
  *(void *)(v17 + 72) = v12;
  *(void *)(v17 + 80) = sub_100079F40;
  *(void *)(v17 + 88) = v13;
  *(void *)(v17 + 96) = sub_100079F40;
  *(void *)(v17 + 104) = v14;
  *(void *)(v17 + 112) = sub_100079E30;
  *(void *)(v17 + 120) = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v18 = v44;
  uint64_t v45 = v8;
  if (os_log_type_enabled(v8, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = 0;
    v49[0] = swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 514;
    v19[2] = *(unsigned char *)(v9 + 16);
    swift_release();
    v19[3] = *(unsigned char *)(v10 + 16);
    uint64_t v47 = v19 + 4;
    swift_release();
    sub_100078DC4((uint64_t *)&v47, (uint64_t)&v48, v49, *(uint64_t (**)(void))(v12 + 16));
    swift_release();
    uint64_t v20 = v47;
    *uint64_t v47 = *(unsigned char *)(v13 + 16);
    swift_release();
    v20[1] = *(unsigned char *)(v14 + 16);
    uint64_t v47 = v20 + 2;
    swift_release();
    sub_100078DC4((uint64_t *)&v47, (uint64_t)&v48, v49, *(uint64_t (**)(void))(v16 + 16));
    uint64_t v21 = *(void *)(v0 + 880);
    uint64_t v22 = *(void *)(v0 + 840);
    uint64_t v23 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v45, v18, "unable to find config for identity %{public}s with error %s", v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v24(v21, v23);
  }
  else
  {
    uint64_t v25 = *(void *)(v0 + 880);
    uint64_t v26 = *(void *)(v0 + 840);
    uint64_t v27 = *(void *)(v0 + 832);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v24(v25, v27);
  }
  xpc_object_t reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 776));
  if (reply)
  {
    uint64_t v29 = reply;
    uint64_t v30 = *(void *)(v0 + 784);
    xpc_dictionary_set_string(reply, "error", "missing required sendOneMessage event fields");
    uint64_t result = (_xpc_connection_s *)swift_beginAccess();
    uint64_t v32 = *(void *)(v30 + 112);
    if (v32)
    {
      swift_beginAccess();
      uint64_t result = *(_xpc_connection_s **)(v32 + 16);
      if (result)
      {
        uint64_t v33 = *(void *)(v0 + 872);
        uint64_t v34 = *(void *)(v0 + 832);
        xpc_connection_send_message(result, v29);
        ((void (*)(uint64_t, uint64_t, uint64_t))v42)(v33, v43, v34);
        uint64_t v35 = sub_10008BD30();
        os_log_type_t v36 = sub_10008C2D0();
        BOOL v37 = os_log_type_enabled(v35, v36);
        uint64_t v38 = *(void *)(v0 + 1080);
        uint64_t v39 = *(void *)(v0 + 872);
        uint64_t v46 = *(NSObject **)(v0 + 832);
        if (v37)
        {
          uint64_t v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v48 = 0;
          v49[0] = 0;
          *(_WORD *)uint64_t v40 = 0;
          uint64_t v47 = v40 + 2;
          sub_100078D2C((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&v47, (uint64_t)&v48, (uint64_t)v49);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "SendOneMessage Error Reply Sent", v40, 2u);
          swift_slowDealloc();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }

        swift_unknownObjectRelease();
        swift_errorRelease();
        v24(v39, (uint64_t)v46);
        sub_100079AE4(v38, (uint64_t (*)(void))type metadata accessor for CachedSession);
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  sub_100079AE4(*(void *)(v0 + 1080), (uint64_t (*)(void))type metadata accessor for CachedSession);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_errorRelease();
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return (_xpc_connection_s *)v41();
}

uint64_t sub_100073B30()
{
  uint64_t v57 = v0;
  *((_OWORD *)v0 + 82) = 0u;
  uint64_t v1 = (void *)v0[146];
  uint64_t v2 = v0[99];
  v0[92] = sub_1000352E4((uint64_t)_swiftEmptyArrayStorage);
  size_t count = xpc_dictionary_get_count(v1);
  sub_10000A390((uint64_t *)&unk_1000AF050);
  sub_10008BF30(count);
  uint64_t v4 = swift_allocObject();
  v0[166] = v4;
  *(void *)(v4 + 16) = v0 + 92;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100079568;
  *(void *)(v5 + 24) = v4;
  v0[26] = sub_100038F18;
  v0[27] = v5;
  v0[22] = _NSConcreteStackBlock;
  v0[23] = 1107296256;
  v0[24] = sub_100035900;
  v0[25] = &unk_1000A9090;
  uint64_t v6 = _Block_copy(v0 + 22);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_dictionary_apply(v1, v6);
  swift_unknownObjectRelease();
  _Block_release(v6);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = 4079420;
  uint64_t v9 = v0[129];
  sub_100078970(0x646F6874656D5FLL, 0xE700000000000000, v0[92], v9);
  uint64_t v10 = type metadata accessor for ServiceEventValue();
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (v11(v9, 1, v10) != 1)
  {
    sub_100079D20(v0[129], v0[128], &qword_1000AEAA8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v0[95] = *(void *)v0[128];
      goto LABEL_7;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v0[96] = *(void *)v0[128];
LABEL_7:
      uint64_t v13 = sub_10008C7A0();
      unint64_t v15 = v14;
      goto LABEL_10;
    }
    sub_100079AE4(v0[128], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
  }
  unint64_t v15 = 0xE300000000000000;
  uint64_t v13 = 4079420;
LABEL_10:
  v0[168] = v15;
  v0[167] = v13;
  uint64_t v16 = v0[127];
  sub_10000CC24(v0[129], &qword_1000AEAA8);
  sub_100078970(0x7375746174735FLL, 0xE700000000000000, v0[92], v16);
  if (v11(v16, 1, v10) == 1)
  {
LABEL_17:
    unint64_t v19 = 0xE300000000000000;
    goto LABEL_18;
  }
  sub_100079D20(v0[127], v0[126], &qword_1000AEAA8);
  int v17 = swift_getEnumCaseMultiPayload();
  if (v17 == 2)
  {
    v0[93] = *(void *)v0[126];
    goto LABEL_15;
  }
  if (v17 != 1)
  {
    sub_100079AE4(v0[126], (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    goto LABEL_17;
  }
  v0[94] = *(void *)v0[126];
LABEL_15:
  uint64_t v8 = sub_10008C7A0();
  unint64_t v19 = v18;
LABEL_18:
  v0[170] = v19;
  v0[169] = v8;
  uint64_t v20 = v0[125];
  uint64_t v21 = v0[105];
  uint64_t v22 = v0[104];
  sub_10000CC24(v0[127], &qword_1000AEAA8);
  uint64_t v23 = sub_100069094();
  v0[171] = v23;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  v0[172] = v24;
  v0[173] = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v24(v20, v23, v22);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v13;
  *(void *)(v25 + 24) = v15;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v8;
  *(void *)(v26 + 24) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_10008BD30();
  os_log_type_t loga = sub_10008C310();
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 16) = 34;
  uint64_t v29 = swift_allocObject();
  *(unsigned char *)(v29 + 16) = 8;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_100079F48;
  *(void *)(v30 + 24) = v25;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_100079E2C;
  *(void *)(v31 + 24) = v30;
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = 34;
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = 8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_100079F48;
  *(void *)(v34 + 24) = v26;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_100079E2C;
  *(void *)(v35 + 24) = v34;
  v0[174] = sub_10000A390(&qword_1000B0238);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_100090D80;
  *(void *)(v36 + 32) = sub_100079F40;
  *(void *)(v36 + 40) = v28;
  *(void *)(v36 + 48) = sub_100079F40;
  *(void *)(v36 + 56) = v29;
  *(void *)(v36 + 64) = sub_100079E30;
  *(void *)(v36 + 72) = v31;
  *(void *)(v36 + 80) = sub_100079F40;
  *(void *)(v36 + 88) = v32;
  *(void *)(v36 + 96) = sub_100079F40;
  *(void *)(v36 + 104) = v33;
  *(void *)(v36 + 112) = sub_100079E30;
  *(void *)(v36 + 120) = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v37 = loga;
  os_log_t log = v27;
  if (os_log_type_enabled(v27, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = 0;
    uint64_t v56 = swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 514;
    v38[2] = *(unsigned char *)(v28 + 16);
    swift_release();
    v38[3] = *(unsigned char *)(v29 + 16);
    uint64_t v54 = v38 + 4;
    swift_release();
    sub_100078DC4((uint64_t *)&v54, (uint64_t)&v55, &v56, *(uint64_t (**)(void))(v31 + 16));
    swift_release();
    uint64_t v39 = v54;
    unsigned char *v54 = *(unsigned char *)(v32 + 16);
    swift_release();
    v39[1] = *(unsigned char *)(v33 + 16);
    uint64_t v54 = v39 + 2;
    swift_release();
    sub_100078DC4((uint64_t *)&v54, (uint64_t)&v55, &v56, *(uint64_t (**)(void))(v35 + 16));
    uint64_t v40 = v0[125];
    uint64_t v41 = v0[105];
    uint64_t v42 = v0[104];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, v37, "sending one message %{public}s:%{public}s", v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v43(v40, v42);
  }
  else
  {
    uint64_t v44 = v0[125];
    uint64_t v45 = v0[105];
    uint64_t v46 = v0[104];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v43(v44, v46);
  }
  v0[175] = v43;
  uint64_t v47 = v0[98];
  swift_bridgeObjectRetain();
  v0[77] = XPCIncomingConnection.init(conn:)(0x4D656E4F646E6553);
  v0[78] = v48;
  v0[79] = v49;
  uint64_t v51 = (uint64_t (*)(void *))(*(void *)(**(void **)(v47 + 160) + 152)
                                         + **(int **)(**(void **)(v47 + 160) + 152));
  uint64_t v50 = (void *)swift_task_alloc();
  v0[176] = v50;
  void *v50 = v0;
  v50[1] = sub_10006DB24;
  return v51(v0 + 15);
}

uint64_t sub_100074498()
{
  uint64_t v125 = v0;
  *(void *)(v0 + 1448) = *(void *)(v0 + 616);
  *(void *)(v0 + 1456) = *(void *)(v0 + 624);
  *(void *)(v0 + 1464) = *(void *)(v0 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_100048E38();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 1256);
  if (*v1 == 1)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    *(void *)(v0 + 1472) = v3;
    if (v3)
    {
      uint64_t v4 = *(void *)(v0 + 800);
      LODWORD(v5) = *(_DWORD *)(v4 + 80);
      *(_DWORD *)(v0 + 1664) = v5;
      uint64_t v5 = v5;
      osos_log_t logc = (os_log_t)((v5 + 16) & ~v5);
      *(void *)(v0 + 1480) = *(void *)(v4 + 72);
      *(_OWORD *)(v0 + 1488) = 0u;
      uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
      uint64_t v7 = *(void *)(v0 + 1368);
      uint64_t v107 = *(void *)(v0 + 1360);
      uint64_t v109 = *(void *)(v0 + 1352);
      uint64_t v105 = *(void *)(v0 + 1344);
      uint64_t v8 = *(void *)(v0 + 1336);
      uint64_t v9 = *(void *)(v0 + 992);
      uint64_t v10 = *(void *)(v0 + 832);
      uint64_t v11 = *(void *)(v0 + 824);
      uint64_t v12 = *(void *)(v0 + 816);
      sub_100079C50(v2 + ((v5 + 32) & ~v5), v11, type metadata accessor for SessionConfiguration.Backend);
      v6(v9, v7, v10);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v8;
      *(void *)(v13 + 24) = v105;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v109;
      *(void *)(v14 + 24) = v107;
      sub_100079C50(v11, v12, type metadata accessor for SessionConfiguration.Backend);
      uint64_t v110 = swift_allocObject();
      sub_100079CB8(v12, (uint64_t)oslogc + v110, type metadata accessor for SessionConfiguration.Backend);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      osos_log_t log = sub_10008BD30();
      os_log_type_t type = sub_10008C310();
      uint64_t v115 = swift_allocObject();
      *(unsigned char *)(v115 + 16) = 34;
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = 8;
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_100079F48;
      *(void *)(v16 + 24) = v13;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_100079E2C;
      *(void *)(v17 + 24) = v16;
      uint64_t v18 = swift_allocObject();
      *(unsigned char *)(v18 + 16) = 34;
      uint64_t v19 = swift_allocObject();
      *(unsigned char *)(v19 + 16) = 8;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_100079F48;
      *(void *)(v20 + 24) = v14;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_100079E2C;
      *(void *)(v21 + 24) = v20;
      uint64_t v22 = swift_allocObject();
      *(unsigned char *)(v22 + 16) = 34;
      uint64_t v23 = swift_allocObject();
      *(unsigned char *)(v23 + 16) = 8;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = sub_1000797A4;
      *(void *)(v24 + 24) = v110;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = sub_100079E2C;
      *(void *)(v25 + 24) = v24;
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_100090D90;
      *(void *)(v26 + 32) = sub_100079F40;
      *(void *)(v26 + 40) = v115;
      *(void *)(v26 + 48) = sub_100079F40;
      *(void *)(v26 + 56) = v15;
      *(void *)(v26 + 64) = sub_100079E30;
      *(void *)(v26 + 72) = v17;
      *(void *)(v26 + 80) = sub_100079F40;
      *(void *)(v26 + 88) = v18;
      *(void *)(v26 + 96) = sub_100079F40;
      *(void *)(v26 + 104) = v19;
      *(void *)(v26 + 112) = sub_100079E30;
      *(void *)(v26 + 120) = v21;
      *(void *)(v26 + 128) = sub_100079F40;
      *(void *)(v26 + 136) = v22;
      *(void *)(v26 + 144) = sub_100079F40;
      *(void *)(v26 + 152) = v23;
      *(void *)(v26 + 160) = sub_100079E30;
      *(void *)(v26 + 168) = v25;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(oslog, type))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v106 = swift_slowAlloc();
        *(void *)(v0 + 720) = 0;
        *(void *)(v0 + 728) = v106;
        *(_WORD *)uint64_t v27 = 770;
        v27[2] = *(unsigned char *)(v115 + 16);
        *(void *)(v0 + 712) = v27 + 3;
        swift_release();
        uint64_t v28 = *(unsigned char **)(v0 + 712);
        *uint64_t v28 = *(unsigned char *)(v15 + 16);
        *(void *)(v0 + 712) = v28 + 1;
        swift_release();
        sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v17 + 16));
        swift_release();
        uint64_t v29 = *(unsigned char **)(v0 + 712);
        *uint64_t v29 = *(unsigned char *)(v18 + 16);
        *(void *)(v0 + 712) = v29 + 1;
        swift_release();
        uint64_t v30 = *(unsigned char **)(v0 + 712);
        *uint64_t v30 = *(unsigned char *)(v19 + 16);
        *(void *)(v0 + 712) = v30 + 1;
        swift_release();
        sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v21 + 16));
        swift_release();
        uint64_t v31 = *(unsigned char **)(v0 + 712);
        *uint64_t v31 = *(unsigned char *)(v22 + 16);
        *(void *)(v0 + 712) = v31 + 1;
        swift_release();
        uint64_t v32 = *(unsigned char **)(v0 + 712);
        unsigned char *v32 = *(unsigned char *)(v23 + 16);
        *(void *)(v0 + 712) = v32 + 1;
        swift_release();
        sub_100078DC4((uint64_t *)(v0 + 712), v0 + 720, (uint64_t *)(v0 + 728), *(uint64_t (**)(void))(v25 + 16));
        uint64_t v33 = *(void *)(v0 + 992);
        uint64_t v34 = *(void *)(v0 + 840);
        uint64_t v35 = *(void *)(v0 + 832);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, oslog, type, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", v27, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v36(v33, v35);
      }
      else
      {
        uint64_t v89 = *(void *)(v0 + 992);
        uint64_t v90 = *(void *)(v0 + 840);
        uint64_t v91 = *(void *)(v0 + 832);

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
        v36(v89, v91);
      }
      *(void *)(v0 + 1504) = v36;
      uint64_t v92 = *(uint64_t **)(*(void *)(v0 + 784) + 168);
      *(void *)(v0 + 1512) = v92;
      *(void *)(v0 + 1520) = sub_100079F4C();
      *(void *)(v0 + 1528) = v93;
      uint64_t v94 = sub_10006F298;
      uint64_t v95 = v92;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  os_log_type_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1400);
  *(void *)(v0 + 1544) = v37;
  if (*(void *)(v0 + 1312))
  {
    typea = v37;
    uint64_t v38 = *(void *)(v0 + 1360);
    uint64_t v39 = *(void *)(v0 + 1352);
    uint64_t v40 = *(void *)(v0 + 1344);
    uint64_t v41 = *(void *)(v0 + 1336);
    uint64_t v114 = *(void *)(v0 + 1320);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 984), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v41;
    *(void *)(v42 + 24) = v40;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v39;
    *(void *)(v43 + 24) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    osos_log_type_t loga = sub_10008BD30();
    os_log_type_t v108 = sub_10008C310();
    uint64_t v44 = swift_allocObject();
    *(unsigned char *)(v44 + 16) = 34;
    uint64_t v45 = swift_allocObject();
    *(unsigned char *)(v45 + 16) = 8;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_100079F48;
    *(void *)(v46 + 24) = v42;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_100079E2C;
    *(void *)(v47 + 24) = v46;
    uint64_t v48 = swift_allocObject();
    *(unsigned char *)(v48 + 16) = 34;
    uint64_t v49 = swift_allocObject();
    *(unsigned char *)(v49 + 16) = 8;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = sub_100079F48;
    *(void *)(v50 + 24) = v43;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_100079E2C;
    *(void *)(v51 + 24) = v50;
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_100090D80;
    *(void *)(v52 + 32) = sub_100079F40;
    *(void *)(v52 + 40) = v44;
    *(void *)(v52 + 48) = sub_100079F40;
    *(void *)(v52 + 56) = v45;
    *(void *)(v52 + 64) = sub_100079E30;
    *(void *)(v52 + 72) = v47;
    *(void *)(v52 + 80) = sub_100079F40;
    *(void *)(v52 + 88) = v48;
    *(void *)(v52 + 96) = sub_100079F40;
    *(void *)(v52 + 104) = v49;
    *(void *)(v52 + 112) = sub_100079E30;
    *(void *)(v52 + 120) = v51;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(osloga, v108))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v123 = 0;
      uint64_t v124 = swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 514;
      v53[2] = *(unsigned char *)(v44 + 16);
      swift_release();
      v53[3] = *(unsigned char *)(v45 + 16);
      uint64_t v122 = v53 + 4;
      swift_release();
      sub_100078DC4((uint64_t *)&v122, (uint64_t)&v123, &v124, *(uint64_t (**)(void))(v47 + 16));
      swift_release();
      uint64_t v54 = v122;
      *uint64_t v122 = *(unsigned char *)(v48 + 16);
      swift_release();
      v54[1] = *(unsigned char *)(v49 + 16);
      uint64_t v122 = v54 + 2;
      swift_release();
      sub_100078DC4((uint64_t *)&v122, (uint64_t)&v123, &v124, *(uint64_t (**)(void))(v51 + 16));
      uint64_t v55 = *(void *)(v0 + 984);
      uint64_t v56 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, osloga, v108, "processing sendOneMessage, immediate %{public}s:%{public}s", v53, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v57 = v55;
      uint64_t v58 = v56;
    }
    else
    {
      uint64_t v80 = *(void *)(v0 + 984);
      uint64_t v81 = *(void *)(v0 + 832);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v57 = v80;
      uint64_t v58 = v81;
    }
    typea(v57, v58);
    uint64_t v82 = *(void *)(v0 + 1464);
    uint64_t v83 = *(void *)(v0 + 1456);
    uint64_t v84 = *(void *)(v0 + 1448);
    uint64_t ObjectType = swift_getObjectType();
    sub_10000A390(&qword_1000AE858);
    uint64_t v86 = swift_allocObject();
    *(void *)(v0 + 1552) = v86;
    *(_OWORD *)(v86 + 16) = xmmword_10008DC30;
    *(void *)(v86 + 32) = v84;
    *(void *)(v86 + 40) = v83;
    *(void *)(v86 + 48) = v82;
    typeb = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 + 8) + **(int **)(v114 + 8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v87 = (void *)swift_task_alloc();
    *(void *)(v0 + 1560) = v87;
    *uint64_t v87 = v0;
    v87[1] = sub_1000706A4;
    return typeb(v86, ObjectType, v114);
  }
  else
  {
    uint64_t v59 = *(void *)(*(void *)(v0 + 1256) + 16);
    swift_bridgeObjectRelease();
    if (!v59)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 1592) = 0;
      uint64_t v95 = *(uint64_t **)(v0 + 1224);
      uint64_t v96 = *v95;
      *(void *)(v0 + 1600) = *(void *)(*v95 + 256);
      *(void *)(v0 + 1608) = (v96 + 256) & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
      uint64_t v94 = sub_100071A60;
LABEL_18:
      return _swift_task_switch(v94, v95);
    }
    uint64_t v60 = *(void *)(v0 + 1360);
    uint64_t v61 = *(void *)(v0 + 1352);
    uint64_t v62 = *(void *)(v0 + 1344);
    uint64_t v63 = *(void *)(v0 + 1336);
    (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 968), *(void *)(v0 + 1368), *(void *)(v0 + 832));
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = v63;
    *(void *)(v64 + 24) = v62;
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v61;
    *(void *)(v65 + 24) = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osos_log_type_t logb = sub_10008BD30();
    os_log_type_t v116 = sub_10008C310();
    uint64_t v66 = swift_allocObject();
    *(unsigned char *)(v66 + 16) = 34;
    uint64_t v67 = swift_allocObject();
    *(unsigned char *)(v67 + 16) = 8;
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = sub_100079F48;
    *(void *)(v68 + 24) = v64;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = sub_100079E2C;
    *(void *)(v69 + 24) = v68;
    uint64_t v70 = swift_allocObject();
    *(unsigned char *)(v70 + 16) = 34;
    uint64_t v71 = swift_allocObject();
    *(unsigned char *)(v71 + 16) = 8;
    uint64_t v72 = swift_allocObject();
    *(void *)(v72 + 16) = sub_100079F48;
    *(void *)(v72 + 24) = v65;
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = sub_100079E2C;
    *(void *)(v73 + 24) = v72;
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_100090D80;
    *(void *)(v74 + 32) = sub_100079F40;
    *(void *)(v74 + 40) = v66;
    *(void *)(v74 + 48) = sub_100079F40;
    *(void *)(v74 + 56) = v67;
    *(void *)(v74 + 64) = sub_100079E30;
    *(void *)(v74 + 72) = v69;
    *(void *)(v74 + 80) = sub_100079F40;
    *(void *)(v74 + 88) = v70;
    *(void *)(v74 + 96) = sub_100079F40;
    *(void *)(v74 + 104) = v71;
    *(void *)(v74 + 112) = sub_100079E30;
    *(void *)(v74 + 120) = v73;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslogb, v116))
    {
      uint64_t v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v123 = 0;
      uint64_t v124 = swift_slowAlloc();
      *(_WORD *)uint64_t v75 = 514;
      v75[2] = *(unsigned char *)(v66 + 16);
      swift_release();
      v75[3] = *(unsigned char *)(v67 + 16);
      uint64_t v122 = v75 + 4;
      swift_release();
      sub_100078DC4((uint64_t *)&v122, (uint64_t)&v123, &v124, *(uint64_t (**)(void))(v69 + 16));
      swift_release();
      uint64_t v76 = v122;
      *uint64_t v122 = *(unsigned char *)(v70 + 16);
      swift_release();
      v76[1] = *(unsigned char *)(v71 + 16);
      uint64_t v122 = v76 + 2;
      swift_release();
      sub_100078DC4((uint64_t *)&v122, (uint64_t)&v123, &v124, *(uint64_t (**)(void))(v73 + 16));
      int v77 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v78 = *(void *)(v0 + 968);
      uint64_t v79 = *(void *)(v0 + 832);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, oslogb, v116, "caching sendOneMessage %{public}s:%{public}s", v75, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v77(v78, v79);
    }
    else
    {
      uint64_t v117 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
      uint64_t v97 = *(void *)(v0 + 968);
      uint64_t v98 = *(void *)(v0 + 832);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v117(v97, v98);
    }
    sub_10008BB70();
    uint64_t v99 = (void *)swift_task_alloc();
    *(void *)(v0 + 1576) = v99;
    void *v99 = v0;
    v99[1] = sub_1000712D0;
    uint64_t v100 = *(void *)(v0 + 1464);
    uint64_t v101 = *(void *)(v0 + 1456);
    uint64_t v102 = *(void *)(v0 + 1448);
    double v103 = *(double *)(v0 + 1216);
    uint64_t v104 = *(void *)(v0 + 1056);
    return sub_10002629C(v0 + 120, v104, v103, v102, v101, v100);
  }
}

uint64_t sub_100075790()
{
  uint64_t v189 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 1664);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1376);
  uint64_t v3 = *(void *)(v0 + 1368);
  os_log_t logc = *(os_log_t *)(v0 + 1352);
  *(void *)v171 = *(void *)(v0 + 1360);
  uint64_t v155 = *(void *)(v0 + 1344);
  uint64_t v156 = *(void *)(v0 + 1336);
  uint64_t v4 = *(void *)(v0 + 864);
  os_log_t v180 = *(os_log_t *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 832);
  osos_log_t logb = *(os_log_t *)(v0 + 824);
  uint64_t v6 = *(void *)(v0 + 816);
  swift_bridgeObjectRelease();
  uint64_t v7 = (v1 + 16) & ~v1;
  v2(v4, v3, v5);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v156;
  *(void *)(v8 + 24) = v155;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = logc;
  *(void *)(v9 + 24) = *(void *)v171;
  sub_100079C50((uint64_t)oslogb, v6, type metadata accessor for SessionConfiguration.Backend);
  uint64_t v10 = swift_allocObject();
  sub_100079CB8(v6, v10 + v7, type metadata accessor for SessionConfiguration.Backend);
  uint64_t v157 = swift_allocObject();
  *(void *)(v157 + 16) = v180;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  osos_log_t log = sub_10008BD30();
  os_log_type_t v153 = sub_10008C2F0();
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = v11;
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 8;
  uint64_t v14 = v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100079808;
  *(void *)(v15 + 24) = v8;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100079E2C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  os_log_t log = (os_log_t)swift_allocObject();
  LOBYTE(log[2].isa) = 34;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100079F48;
  *(void *)(v18 + 24) = v9;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100079E2C;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = 34;
  os_log_t v181 = (os_log_t)swift_allocObject();
  LOBYTE(v181[2].isa) = 8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1000797A4;
  *(void *)(v22 + 24) = v10;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_100079E2C;
  *(void *)(v23 + 24) = v22;
  uint64_t v24 = v23;
  uint64_t v150 = v23;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 34;
  uint64_t v151 = swift_allocObject();
  *(unsigned char *)(v151 + 16) = 8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_100079400;
  *(void *)(v25 + 24) = v157;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_100079E2C;
  *(void *)(v26 + 24) = v25;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10008FA20;
  *(void *)(v27 + 32) = sub_100079F40;
  *(void *)(v27 + 40) = v12;
  *(void *)(v27 + 48) = sub_100079F40;
  *(void *)(v27 + 56) = v14;
  *(void *)(v27 + 64) = sub_100079E30;
  *(void *)(v27 + 72) = v17;
  *(void *)(v27 + 80) = sub_100079F40;
  *(void *)(v27 + 88) = log;
  *(void *)(v27 + 96) = sub_100079F40;
  *(void *)(v27 + 104) = v172;
  *(void *)(v27 + 112) = sub_100079E30;
  *(void *)(v27 + 120) = v20;
  *(void *)(v27 + 128) = sub_100079F40;
  *(void *)(v27 + 136) = v21;
  *(void *)(v27 + 144) = sub_100079F40;
  *(void *)(v27 + 152) = v181;
  *(void *)(v27 + 160) = sub_100079E30;
  *(void *)(v27 + 168) = v24;
  *(void *)(v27 + 176) = sub_100079F40;
  *(void *)(v27 + 184) = v177;
  *(void *)(v27 + 192) = sub_100079F40;
  *(void *)(v27 + 200) = v151;
  *(void *)(v27 + 208) = sub_100079E30;
  *(void *)(v27 + 216) = v26;
  swift_retain();
  uint64_t v158 = v14;
  swift_retain();
  uint64_t v152 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v28 = v153;
  if (os_log_type_enabled(oslog, v153))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v154 = swift_slowAlloc();
    *(void *)(v185 + 696) = 0;
    *(void *)(v185 + 704) = v154;
    *(_WORD *)uint64_t v29 = 1026;
    v29[2] = *(unsigned char *)(v12 + 16);
    *(void *)(v185 + 688) = v29 + 3;
    swift_release();
    uint64_t v30 = *(unsigned char **)(v185 + 688);
    *uint64_t v30 = *(unsigned char *)(v158 + 16);
    *(void *)(v185 + 688) = v30 + 1;
    swift_release();
    os_log_type_t type = v28;
    sub_100078DC4((uint64_t *)(v185 + 688), v185 + 696, (uint64_t *)(v185 + 704), *(uint64_t (**)(void))(v152 + 16));
    swift_release();
    uint64_t v31 = *(unsigned char **)(v185 + 688);
    *uint64_t v31 = log[2].isa;
    *(void *)(v185 + 688) = v31 + 1;
    swift_release();
    uint64_t v32 = *(unsigned char **)(v185 + 688);
    unsigned char *v32 = *(unsigned char *)(v172 + 16);
    *(void *)(v185 + 688) = v32 + 1;
    swift_release();
    sub_100078DC4((uint64_t *)(v185 + 688), v185 + 696, (uint64_t *)(v185 + 704), *(uint64_t (**)(void))(v20 + 16));
    swift_release();
    uint64_t v33 = *(unsigned char **)(v185 + 688);
    *uint64_t v33 = *(unsigned char *)(v21 + 16);
    *(void *)(v185 + 688) = v33 + 1;
    swift_release();
    uint64_t v34 = *(unsigned char **)(v185 + 688);
    *uint64_t v34 = v181[2].isa;
    *(void *)(v185 + 688) = v34 + 1;
    swift_release();
    sub_100078DC4((uint64_t *)(v185 + 688), v185 + 696, (uint64_t *)(v185 + 704), *(uint64_t (**)(void))(v150 + 16));
    swift_release();
    uint64_t v35 = *(unsigned char **)(v185 + 688);
    unsigned char *v35 = *(unsigned char *)(v177 + 16);
    *(void *)(v185 + 688) = v35 + 1;
    swift_release();
    uint64_t v36 = *(unsigned char **)(v185 + 688);
    unsigned char *v36 = *(unsigned char *)(v151 + 16);
    *(void *)(v185 + 688) = v36 + 1;
    swift_release();
    sub_100078DC4((uint64_t *)(v185 + 688), v185 + 696, (uint64_t *)(v185 + 704), *(uint64_t (**)(void))(v26 + 16));
    uint64_t v37 = *(void *)(v185 + 864);
    uint64_t v38 = *(void *)(v185 + 840);
    uint64_t v39 = *(void *)(v185 + 832);
    uint64_t v40 = *(void *)(v185 + 824);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, type, "failed writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s with error %{public}s", v29, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v41(v37, v39);
    uint64_t v42 = v40;
  }
  else
  {
    uint64_t v43 = *(void *)(v185 + 864);
    uint64_t v44 = *(void *)(v185 + 840);
    uint64_t v45 = *(void *)(v185 + 832);
    uint64_t v46 = *(void *)(v185 + 824);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_errorRelease();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v41(v43, v45);
    uint64_t v42 = v46;
  }
  sub_100079AE4(v42, type metadata accessor for SessionConfiguration.Backend);
  uint64_t v47 = *(void *)(v185 + 1496) + 1;
  if (v47 == *(void *)(v185 + 1472))
  {
    swift_bridgeObjectRelease();
    *(void *)(v185 + 1544) = v41;
    if (*(void *)(v185 + 1312))
    {
      v173 = v41;
      uint64_t v48 = *(void *)(v185 + 1360);
      uint64_t v49 = *(void *)(v185 + 1352);
      uint64_t v50 = *(void *)(v185 + 1344);
      uint64_t v51 = *(void *)(v185 + 1336);
      uint64_t v178 = *(void *)(v185 + 1320);
      (*(void (**)(void, void, void))(v185 + 1376))(*(void *)(v185 + 984), *(void *)(v185 + 1368), *(void *)(v185 + 832));
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v51;
      *(void *)(v52 + 24) = v50;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v49;
      *(void *)(v53 + 24) = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v54 = sub_10008BD30();
      osos_log_type_t loga = sub_10008C310();
      uint64_t v55 = swift_allocObject();
      *(unsigned char *)(v55 + 16) = 34;
      uint64_t v56 = swift_allocObject();
      *(unsigned char *)(v56 + 16) = 8;
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = sub_100079F48;
      *(void *)(v57 + 24) = v52;
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = sub_100079E2C;
      *(void *)(v58 + 24) = v57;
      uint64_t v59 = swift_allocObject();
      *(unsigned char *)(v59 + 16) = 34;
      uint64_t v60 = swift_allocObject();
      *(unsigned char *)(v60 + 16) = 8;
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = sub_100079F48;
      *(void *)(v61 + 24) = v53;
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = sub_100079E2C;
      *(void *)(v62 + 24) = v61;
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_100090D80;
      *(void *)(v63 + 32) = sub_100079F40;
      *(void *)(v63 + 40) = v55;
      *(void *)(v63 + 48) = sub_100079F40;
      *(void *)(v63 + 56) = v56;
      *(void *)(v63 + 64) = sub_100079E30;
      *(void *)(v63 + 72) = v58;
      *(void *)(v63 + 80) = sub_100079F40;
      *(void *)(v63 + 88) = v59;
      *(void *)(v63 + 96) = sub_100079F40;
      *(void *)(v63 + 104) = v60;
      *(void *)(v63 + 112) = sub_100079E30;
      *(void *)(v63 + 120) = v62;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      os_log_type_t loga = v54;
      if (os_log_type_enabled(v54, osloga))
      {
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        uint64_t v187 = 0;
        uint64_t v188 = swift_slowAlloc();
        *(_WORD *)uint64_t v64 = 514;
        v64[2] = *(unsigned char *)(v55 + 16);
        swift_release();
        v64[3] = *(unsigned char *)(v56 + 16);
        v186 = v64 + 4;
        swift_release();
        sub_100078DC4((uint64_t *)&v186, (uint64_t)&v187, &v188, *(uint64_t (**)(void))(v58 + 16));
        swift_release();
        uint64_t v65 = v186;
        unsigned char *v186 = *(unsigned char *)(v59 + 16);
        swift_release();
        v65[1] = *(unsigned char *)(v60 + 16);
        v186 = v65 + 2;
        swift_release();
        sub_100078DC4((uint64_t *)&v186, (uint64_t)&v187, &v188, *(uint64_t (**)(void))(v62 + 16));
        uint64_t v66 = *(void *)(v185 + 984);
        uint64_t v67 = *(void *)(v185 + 832);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, loga, osloga, "processing sendOneMessage, immediate %{public}s:%{public}s", v64, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v68 = v66;
        uint64_t v69 = v67;
      }
      else
      {
        uint64_t v132 = *(void *)(v185 + 984);
        uint64_t v133 = *(void *)(v185 + 832);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v68 = v132;
        uint64_t v69 = v133;
      }
      v173(v68, v69);
      uint64_t v134 = *(void *)(v185 + 1464);
      uint64_t v135 = *(void *)(v185 + 1456);
      uint64_t v136 = *(void *)(v185 + 1448);
      uint64_t ObjectType = swift_getObjectType();
      sub_10000A390(&qword_1000AE858);
      uint64_t v138 = swift_allocObject();
      *(void *)(v185 + 1552) = v138;
      *(_OWORD *)(v138 + 16) = xmmword_10008DC30;
      *(void *)(v138 + 32) = v136;
      *(void *)(v138 + 40) = v135;
      *(void *)(v138 + 48) = v134;
      os_log_t logb = (os_log_t)(*(void *)(v178 + 8) + **(int **)(v178 + 8));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v139 = (void *)swift_task_alloc();
      *(void *)(v185 + 1560) = v139;
      *uint64_t v139 = v185;
      v139[1] = sub_1000706A4;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))logb)(v138, ObjectType, v178);
    }
    uint64_t v109 = *(void *)(*(void *)(v185 + 1256) + 16);
    swift_bridgeObjectRelease();
    uint64_t v110 = *(void *)(v185 + 1360);
    if (v109)
    {
      uint64_t v111 = *(void *)(v185 + 1352);
      uint64_t v112 = *(void *)(v185 + 1344);
      uint64_t v113 = *(void *)(v185 + 1336);
      (*(void (**)(void, void, void))(v185 + 1376))(*(void *)(v185 + 968), *(void *)(v185 + 1368), *(void *)(v185 + 832));
      uint64_t v114 = swift_allocObject();
      *(void *)(v114 + 16) = v113;
      *(void *)(v114 + 24) = v112;
      uint64_t v115 = swift_allocObject();
      *(void *)(v115 + 16) = v111;
      *(void *)(v115 + 24) = v110;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v184 = sub_10008BD30();
      os_log_type_t v179 = sub_10008C310();
      uint64_t v116 = swift_allocObject();
      *(unsigned char *)(v116 + 16) = 34;
      uint64_t v117 = swift_allocObject();
      *(unsigned char *)(v117 + 16) = 8;
      uint64_t v118 = swift_allocObject();
      *(void *)(v118 + 16) = sub_100079F48;
      *(void *)(v118 + 24) = v114;
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = sub_100079E2C;
      *(void *)(v119 + 24) = v118;
      uint64_t v120 = swift_allocObject();
      *(unsigned char *)(v120 + 16) = 34;
      uint64_t v121 = swift_allocObject();
      *(unsigned char *)(v121 + 16) = 8;
      uint64_t v122 = swift_allocObject();
      *(void *)(v122 + 16) = sub_100079F48;
      *(void *)(v122 + 24) = v115;
      uint64_t v123 = swift_allocObject();
      *(void *)(v123 + 16) = sub_100079E2C;
      *(void *)(v123 + 24) = v122;
      uint64_t v124 = swift_allocObject();
      *(_OWORD *)(v124 + 16) = xmmword_100090D80;
      *(void *)(v124 + 32) = sub_100079F40;
      *(void *)(v124 + 40) = v116;
      *(void *)(v124 + 48) = sub_100079F40;
      *(void *)(v124 + 56) = v117;
      *(void *)(v124 + 64) = sub_100079E30;
      *(void *)(v124 + 72) = v119;
      *(void *)(v124 + 80) = sub_100079F40;
      *(void *)(v124 + 88) = v120;
      *(void *)(v124 + 96) = sub_100079F40;
      *(void *)(v124 + 104) = v121;
      *(void *)(v124 + 112) = sub_100079E30;
      *(void *)(v124 + 120) = v123;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v184, v179))
      {
        uint64_t v125 = (uint8_t *)swift_slowAlloc();
        uint64_t v187 = 0;
        uint64_t v188 = swift_slowAlloc();
        *(_WORD *)uint64_t v125 = 514;
        v125[2] = *(unsigned char *)(v116 + 16);
        swift_release();
        v125[3] = *(unsigned char *)(v117 + 16);
        v186 = v125 + 4;
        swift_release();
        sub_100078DC4((uint64_t *)&v186, (uint64_t)&v187, &v188, *(uint64_t (**)(void))(v119 + 16));
        swift_release();
        uint64_t v126 = v186;
        unsigned char *v186 = *(unsigned char *)(v120 + 16);
        swift_release();
        v126[1] = *(unsigned char *)(v121 + 16);
        v186 = v126 + 2;
        swift_release();
        sub_100078DC4((uint64_t *)&v186, (uint64_t)&v187, &v188, *(uint64_t (**)(void))(v123 + 16));
        uint64_t v127 = *(void (**)(uint64_t, uint64_t))(v185 + 1544);
        uint64_t v128 = *(void *)(v185 + 968);
        uint64_t v129 = *(void *)(v185 + 832);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v184, v179, "caching sendOneMessage %{public}s:%{public}s", v125, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v130 = v128;
        uint64_t v131 = v129;
      }
      else
      {
        uint64_t v127 = *(void (**)(uint64_t, uint64_t))(v185 + 1544);
        uint64_t v141 = *(void *)(v185 + 968);
        uint64_t v142 = *(void *)(v185 + 832);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        uint64_t v130 = v141;
        uint64_t v131 = v142;
      }
      v127(v130, v131);
      sub_10008BB70();
      uint64_t v143 = (void *)swift_task_alloc();
      *(void *)(v185 + 1576) = v143;
      void *v143 = v185;
      v143[1] = sub_1000712D0;
      uint64_t v144 = *(void *)(v185 + 1464);
      uint64_t v145 = *(void *)(v185 + 1456);
      uint64_t v146 = *(void *)(v185 + 1448);
      double v147 = *(double *)(v185 + 1216);
      uint64_t v148 = *(void *)(v185 + 1056);
      return sub_10002629C(v185 + 120, v148, v147, v146, v145, v144);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v185 + 1592) = 0;
    os_log_type_t v108 = *(uint64_t **)(v185 + 1224);
    uint64_t v140 = *v108;
    *(void *)(v185 + 1600) = *(void *)(*v108 + 256);
    *(void *)(v185 + 1608) = (v140 + 256) & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
    uint64_t v107 = sub_100071A60;
  }
  else
  {
    *(void *)(v185 + 1496) = v47;
    *(void *)(v185 + 1488) = 0;
    uint64_t v70 = *(unsigned __int8 *)(v185 + 1664);
    uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v185 + 1376);
    uint64_t v72 = *(void *)(v185 + 1368);
    os_log_t v182 = *(os_log_t *)(v185 + 1360);
    *(void *)v174 = *(void *)(v185 + 1352);
    *(void *)typea = *(void *)(v185 + 1344);
    uint64_t v73 = *(void *)(v185 + 1336);
    uint64_t v74 = *(void *)(v185 + 992);
    uint64_t v75 = (v70 + 16) & ~v70;
    uint64_t v76 = *(void *)(v185 + 832);
    uint64_t v77 = *(void *)(v185 + 824);
    uint64_t v78 = *(void *)(v185 + 816);
    sub_100079C50(*(void *)(v185 + 1256) + ((v70 + 32) & ~v70) + *(void *)(v185 + 1480) * v47, v77, type metadata accessor for SessionConfiguration.Backend);
    v71(v74, v72, v76);
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = v73;
    *(void *)(v79 + 24) = *(void *)typea;
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = *(void *)v174;
    *(void *)(v80 + 24) = v182;
    sub_100079C50(v77, v78, type metadata accessor for SessionConfiguration.Backend);
    os_log_t logd = (os_log_t)swift_allocObject();
    sub_100079CB8(v78, (uint64_t)logd + v75, type metadata accessor for SessionConfiguration.Backend);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v183 = sub_10008BD30();
    os_log_type_t v175 = sub_10008C310();
    uint64_t v81 = swift_allocObject();
    *(unsigned char *)(v81 + 16) = 34;
    uint64_t v82 = swift_allocObject();
    *(unsigned char *)(v82 + 16) = 8;
    uint64_t v83 = swift_allocObject();
    *(void *)(v83 + 16) = sub_100079F48;
    *(void *)(v83 + 24) = v79;
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = sub_100079E2C;
    *(void *)(v84 + 24) = v83;
    uint64_t v85 = swift_allocObject();
    *(unsigned char *)(v85 + 16) = 34;
    uint64_t v86 = swift_allocObject();
    *(unsigned char *)(v86 + 16) = 8;
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = sub_100079F48;
    *(void *)(v87 + 24) = v80;
    uint64_t v88 = swift_allocObject();
    *(void *)(v88 + 16) = sub_100079E2C;
    *(void *)(v88 + 24) = v87;
    uint64_t v89 = swift_allocObject();
    *(unsigned char *)(v89 + 16) = 34;
    uint64_t v90 = swift_allocObject();
    *(unsigned char *)(v90 + 16) = 8;
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = sub_1000797A4;
    *(void *)(v91 + 24) = logd;
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = sub_100079E2C;
    *(void *)(v92 + 24) = v91;
    uint64_t v93 = swift_allocObject();
    *(_OWORD *)(v93 + 16) = xmmword_100090D90;
    *(void *)(v93 + 32) = sub_100079F40;
    *(void *)(v93 + 40) = v81;
    *(void *)(v93 + 48) = sub_100079F40;
    *(void *)(v93 + 56) = v82;
    *(void *)(v93 + 64) = sub_100079E30;
    *(void *)(v93 + 72) = v84;
    *(void *)(v93 + 80) = sub_100079F40;
    *(void *)(v93 + 88) = v85;
    *(void *)(v93 + 96) = sub_100079F40;
    *(void *)(v93 + 104) = v86;
    *(void *)(v93 + 112) = sub_100079E30;
    *(void *)(v93 + 120) = v88;
    *(void *)(v93 + 128) = sub_100079F40;
    *(void *)(v93 + 136) = v89;
    *(void *)(v93 + 144) = sub_100079F40;
    *(void *)(v93 + 152) = v90;
    *(void *)(v93 + 160) = sub_100079E30;
    *(void *)(v93 + 168) = v92;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v183, v175))
    {
      osos_log_t logc = (uint8_t *)swift_slowAlloc();
      os_log_t loge = (os_log_t)swift_slowAlloc();
      *(void *)(v185 + 720) = 0;
      *(void *)(v185 + 728) = loge;
      *(_WORD *)osos_log_t logc = 770;
      oslogc[2] = *(unsigned char *)(v81 + 16);
      *(void *)(v185 + 712) = oslogc + 3;
      swift_release();
      uint64_t v94 = *(unsigned char **)(v185 + 712);
      *uint64_t v94 = *(unsigned char *)(v82 + 16);
      *(void *)(v185 + 712) = v94 + 1;
      swift_release();
      sub_100078DC4((uint64_t *)(v185 + 712), v185 + 720, (uint64_t *)(v185 + 728), *(uint64_t (**)(void))(v84 + 16));
      swift_release();
      uint64_t v95 = *(unsigned char **)(v185 + 712);
      *uint64_t v95 = *(unsigned char *)(v85 + 16);
      *(void *)(v185 + 712) = v95 + 1;
      swift_release();
      uint64_t v96 = *(unsigned char **)(v185 + 712);
      *uint64_t v96 = *(unsigned char *)(v86 + 16);
      *(void *)(v185 + 712) = v96 + 1;
      swift_release();
      sub_100078DC4((uint64_t *)(v185 + 712), v185 + 720, (uint64_t *)(v185 + 728), *(uint64_t (**)(void))(v88 + 16));
      swift_release();
      uint64_t v97 = *(unsigned char **)(v185 + 712);
      *uint64_t v97 = *(unsigned char *)(v89 + 16);
      *(void *)(v185 + 712) = v97 + 1;
      swift_release();
      uint64_t v98 = *(unsigned char **)(v185 + 712);
      unsigned char *v98 = *(unsigned char *)(v90 + 16);
      *(void *)(v185 + 712) = v98 + 1;
      swift_release();
      sub_100078DC4((uint64_t *)(v185 + 712), v185 + 720, (uint64_t *)(v185 + 728), *(uint64_t (**)(void))(v92 + 16));
      uint64_t v99 = *(void *)(v185 + 992);
      uint64_t v100 = *(void *)(v185 + 840);
      uint64_t v101 = *(void *)(v185 + 832);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v183, v175, "writing sendOneMessage to transparency log %{public}s:%{public}s for backend %{public}s", oslogc, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v102(v99, v101);
    }
    else
    {
      *(void *)uint64_t v176 = *(void *)(v185 + 992);
      uint64_t v103 = *(void *)(v185 + 840);
      uint64_t v104 = *(void *)(v185 + 832);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
      v102(*(void *)v176, v104);
    }
    *(void *)(v185 + 1504) = v102;
    uint64_t v105 = *(uint64_t **)(*(void *)(v185 + 784) + 168);
    *(void *)(v185 + 1512) = v105;
    *(void *)(v185 + 1520) = sub_100079F4C();
    *(void *)(v185 + 1528) = v106;
    uint64_t v107 = sub_10006F298;
    os_log_type_t v108 = v105;
  }
  return _swift_task_switch(v107, v108);
}

uint64_t sub_10007728C()
{
  uint64_t v60 = v0;
  uint64_t v1 = *((void *)v0 + 196);
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))*((void *)v0 + 172);
  uint64_t v3 = *((void *)v0 + 171);
  uint64_t v4 = *((void *)v0 + 107);
  uint64_t v5 = *((void *)v0 + 104);
  swift_bridgeObjectRelease();
  v2(v4, v3, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  swift_errorRetain();
  uint64_t v7 = sub_10008BD30();
  os_log_type_t v8 = sub_10008C2F0();
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 34;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_100079400;
  *(void *)(v11 + 24) = v6;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100079E2C;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10008FA10;
  *(void *)(v13 + 32) = sub_100079F40;
  *(void *)(v13 + 40) = v9;
  *(void *)(v13 + 48) = sub_100079F40;
  *(void *)(v13 + 56) = v10;
  *(void *)(v13 + 64) = sub_100079E30;
  *(void *)(v13 + 72) = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = 0;
    uint64_t v59 = swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 258;
    v14[2] = *(unsigned char *)(v9 + 16);
    swift_release();
    v14[3] = *(unsigned char *)(v10 + 16);
    uint64_t v57 = v14 + 4;
    swift_release();
    sub_100078DC4((uint64_t *)&v57, (uint64_t)&v58, &v59, *(uint64_t (**)(void))(v12 + 16));
    uint64_t v52 = *((void *)v0 + 107);
    osos_log_type_t loga = (os_log_t)*((void *)v0 + 193);
    uint64_t v15 = *((void *)v0 + 104);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "immediate backend failed to send events: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();

    swift_errorRelease();
    ((void (*)(uint64_t, uint64_t))osloga)(v52, v15);
  }
  else
  {
    uint64_t v16 = (void (*)(uint64_t, uint64_t))*((void *)v0 + 193);
    uint64_t v17 = *((void *)v0 + 107);
    uint64_t v18 = *((void *)v0 + 104);
    swift_unknownObjectRelease();
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    v16(v17, v18);
  }
  uint64_t v19 = *(void *)(*((void *)v0 + 157) + 16);
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v0 + 170);
  if (v19)
  {
    uint64_t v21 = *((void *)v0 + 169);
    uint64_t v22 = *((void *)v0 + 168);
    uint64_t v23 = *((void *)v0 + 167);
    (*((void (**)(void, void, void))v0 + 172))(*((void *)v0 + 121), *((void *)v0 + 171), *((void *)v0 + 104));
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = v22;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v21;
    *(void *)(v25 + 24) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    osos_log_t log = sub_10008BD30();
    os_log_type_t v53 = sub_10008C310();
    uint64_t v26 = swift_allocObject();
    *(unsigned char *)(v26 + 16) = 34;
    uint64_t v27 = swift_allocObject();
    *(unsigned char *)(v27 + 16) = 8;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_100079F48;
    *(void *)(v28 + 24) = v24;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_100079E2C;
    *(void *)(v29 + 24) = v28;
    uint64_t v30 = swift_allocObject();
    *(unsigned char *)(v30 + 16) = 34;
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = 8;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_100079F48;
    *(void *)(v32 + 24) = v25;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_100079E2C;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_100090D80;
    *(void *)(v34 + 32) = sub_100079F40;
    *(void *)(v34 + 40) = v26;
    *(void *)(v34 + 48) = sub_100079F40;
    *(void *)(v34 + 56) = v27;
    *(void *)(v34 + 64) = sub_100079E30;
    *(void *)(v34 + 72) = v29;
    *(void *)(v34 + 80) = sub_100079F40;
    *(void *)(v34 + 88) = v30;
    *(void *)(v34 + 96) = sub_100079F40;
    *(void *)(v34 + 104) = v31;
    *(void *)(v34 + 112) = sub_100079E30;
    *(void *)(v34 + 120) = v33;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslog, v53))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v58 = 0;
      uint64_t v59 = v36;
      *(_WORD *)uint64_t v35 = 514;
      _OWORD v35[2] = *(unsigned char *)(v26 + 16);
      swift_release();
      v35[3] = *(unsigned char *)(v27 + 16);
      uint64_t v57 = v35 + 4;
      swift_release();
      sub_100078DC4((uint64_t *)&v57, (uint64_t)&v58, &v59, *(uint64_t (**)(void))(v29 + 16));
      swift_release();
      uint64_t v37 = v57;
      *uint64_t v57 = *(unsigned char *)(v30 + 16);
      swift_release();
      v37[1] = *(unsigned char *)(v31 + 16);
      uint64_t v57 = v37 + 2;
      swift_release();
      sub_100078DC4((uint64_t *)&v57, (uint64_t)&v58, &v59, *(uint64_t (**)(void))(v33 + 16));
      uint64_t v38 = (void (*)(uint64_t, uint64_t))*((void *)v0 + 193);
      uint64_t v39 = *((void *)v0 + 121);
      uint64_t v40 = *((void *)v0 + 104);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, oslog, v53, "caching sendOneMessage %{public}s:%{public}s", v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v38(v39, v40);
    }
    else
    {
      uint64_t v54 = (void (*)(uint64_t, uint64_t))*((void *)v0 + 193);
      uint64_t v43 = *((void *)v0 + 121);
      uint64_t v44 = *((void *)v0 + 104);

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v54(v43, v44);
    }
    sub_10008BB70();
    uint64_t v45 = (void *)swift_task_alloc();
    *((void *)v0 + 197) = v45;
    *uint64_t v45 = v0;
    v45[1] = sub_1000712D0;
    uint64_t v46 = *((void *)v0 + 183);
    uint64_t v47 = *((void *)v0 + 182);
    uint64_t v48 = *((void *)v0 + 181);
    double v49 = v0[152];
    uint64_t v50 = *((void *)v0 + 132);
    return sub_10002629C((uint64_t)(v0 + 15), v50, v49, v48, v47, v46);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[199] = 0.0;
    uint64_t v41 = (uint64_t *)*((void *)v0 + 153);
    uint64_t v42 = *v41;
    v0[200] = *(double *)(*v41 + 256);
    *((void *)v0 + 201) = (v42 + 256) & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
    return _swift_task_switch(sub_100071A60, v41);
  }
}

uint64_t sub_100077B98()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void *)(v0 + 1584);
  (*(void (**)(void, void, void))(v0 + 1376))(*(void *)(v0 + 848), *(void *)(v0 + 1368), *(void *)(v0 + 832));
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  swift_errorRetain();
  uint64_t v3 = sub_10008BD30();
  os_log_type_t v4 = sub_10008C2F0();
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 34;
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 8;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100079400;
  *(void *)(v7 + 24) = v2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100079E2C;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10008FA10;
  *(void *)(v9 + 32) = sub_100079F40;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = sub_100079F40;
  *(void *)(v9 + 56) = v6;
  *(void *)(v9 + 64) = sub_100079E30;
  *(void *)(v9 + 72) = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = 0;
    uint64_t v22 = swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 258;
    void v10[2] = *(unsigned char *)(v5 + 16);
    swift_release();
    v10[3] = *(unsigned char *)(v6 + 16);
    uint64_t v20 = v10 + 4;
    swift_release();
    sub_100078DC4((uint64_t *)&v20, (uint64_t)&v21, &v22, *(uint64_t (**)(void))(v8 + 16));
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v11 = *(void *)(v0 + 848);
    uint64_t v12 = *(void *)(v0 + 832);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "failed to cache sendOneMessage event: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v19(v11, v12);
  }
  else
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 1544);
    uint64_t v14 = *(void *)(v0 + 848);
    uint64_t v15 = *(void *)(v0 + 832);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    v13(v14, v15);
  }
  *(void *)(v0 + 1592) = 0;
  uint64_t v16 = *(void **)(v0 + 1224);
  uint64_t v17 = *v16 + 256;
  *(void *)(v0 + 1600) = *(void *)v17;
  *(void *)(v0 + 1608) = v17 & 0xFFFFFFFFFFFFLL | 0x1AEB000000000000;
  return _swift_task_switch(sub_100071A60, v16);
}

void sub_100077F24(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10008BD60();
  swift_unknownObjectRelease();
  if ((void *)v4 == a1)
  {
    if (qword_1000B6190 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_10008BD50();
    sub_10000A358(v14, (uint64_t)qword_1000B6198);
    swift_retain();
    uint64_t v15 = sub_10008BD30();
    os_log_type_t v16 = sub_10008C2D0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446210;
      uint64_t v18 = *(void *)(v2 + 128);
      unint64_t v19 = *(void *)(v2 + 136);
      swift_bridgeObjectRetain();
      sub_100009D00(v18, v19, &v26);
      sub_10008C440();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "XPC client %{public}s closed connection", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    sub_10002DFD8();
  }
  else
  {
    uint64_t v5 = sub_10008BD70();
    swift_unknownObjectRelease();
    if ((void *)v5 == a1)
    {
      if (qword_1000B6190 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_10008BD50();
      sub_10000A358(v20, (uint64_t)qword_1000B6198);
      swift_retain();
      uint64_t v21 = sub_10008BD30();
      os_log_type_t v22 = sub_10008C2D0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136446210;
        uint64_t v24 = *(void *)(v2 + 128);
        unint64_t v25 = *(void *)(v2 + 136);
        swift_bridgeObjectRetain();
        sub_100009D00(v24, v25, &v26);
        sub_10008C440();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "XPC client %{public}s interrupted connection", v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release();
      }
    }
    else
    {
      uint64_t v6 = xpc_copy_description(a1);
      uint64_t v7 = sub_10008C0A0();
      unint64_t v9 = v8;
      if (qword_1000B6190 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_10008BD50();
      sub_10000A358(v10, (uint64_t)qword_1000B6198);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_10008BD30();
      os_log_type_t v12 = sub_10008C2D0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315138;
        swift_bridgeObjectRetain();
        sub_100009D00(v7, v9, &v26);
        sub_10008C440();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "XPC connection triggered error: %s", v13, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_10002DFD8();
      free(v6);
    }
  }
}

void sub_100078428(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v4 = sub_10000A390(&qword_1000AEAA8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for ServiceEventValue();
  uint64_t v40 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for XPCObject();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v37 = sub_10008C0A0();
  uint64_t v23 = v22;
  uint64_t v24 = (void *)swift_unknownObjectRetain();
  XPCObject.init(_:)(v24, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    swift_bridgeObjectRelease();
    unint64_t v25 = (uint64_t *)&unk_1000AF140;
    uint64_t v26 = (uint64_t)v14;
  }
  else
  {
    sub_100079CB8((uint64_t)v14, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for XPCObject);
    sub_100079C50((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for XPCObject);
    sub_1000349A0((uint64_t)v19, (uint64_t)v8);
    uint64_t v27 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v8, 1, v9) != 1)
    {
      sub_100079CB8((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      uint64_t v36 = v38;
      sub_100079C50((uint64_t)v11, v38, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v36, 0, 1, v9);
      sub_100035744(v36, v37, v23);
      sub_100079AE4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
      sub_100079AE4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for XPCObject);
      return;
    }
    sub_100079AE4((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for XPCObject);
    swift_bridgeObjectRelease();
    unint64_t v25 = &qword_1000AEAA8;
    uint64_t v26 = (uint64_t)v8;
  }
  sub_10000CC24(v26, v25);
  os_log_type_t type = xpc_get_type(a2);
  xpc_type_get_name(type);
  uint64_t v29 = sub_10008C0A0();
  unint64_t v31 = v30;
  if (qword_1000B6190 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_10008BD50();
  sub_10000A358(v32, (uint64_t)qword_1000B6198);
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_10008BD30();
  os_log_type_t v34 = sub_10008C2F0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_100009D00(v29, v31, &v42);
    sub_10008C440();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "skipping invalid payload value of type %{public}s", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100078970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_100011F50(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = type metadata accessor for ServiceEventValue();
    uint64_t v17 = *(void *)(v10 - 8);
    sub_100079C50(v9 + *(void *)(v17 + 72) * v8, a4, (uint64_t (*)(void))type metadata accessor for ServiceEventValue);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    uint64_t v12 = a4;
    uint64_t v13 = 0;
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v15 = type metadata accessor for ServiceEventValue();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v14 = v15;
    uint64_t v12 = a4;
    uint64_t v13 = 1;
  }
  return v11(v12, v13, 1, v14);
}

uint64_t sub_100078A98()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100078AF8()
{
  sub_100078A98();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100078B24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10008C560();
  *a1 = result;
  return result;
}

Swift::Int sub_100078B50()
{
  return sub_10008C920();
}

void sub_100078BB4(uint64_t a1, uint64_t a2)
{
  sub_100078FC4((unint64_t *)&unk_1000B0110, a2, (void (*)(uint64_t))type metadata accessor for Client);
  Swift::UInt v2 = sub_10008C560();
  sub_10008C900(v2);
}

Swift::Int sub_100078C2C()
{
  return sub_10008C920();
}

BOOL sub_100078C94(uint64_t a1, uint64_t a2)
{
  sub_100078FC4((unint64_t *)&unk_1000B0110, a2, (void (*)(uint64_t))type metadata accessor for Client);
  uint64_t v2 = sub_10008C560();
  return v2 == sub_10008C560();
}

uint64_t sub_100078D2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100078DC4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_100009D00(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_10008C440();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_100078E3C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100078E84()
{
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10000AA94;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  void *v5 = v4;
  v5[1] = sub_10001F8C8;
  return sub_100069E88(v2, v3);
}

void *sub_100078F70()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_100078F7C(uint64_t a1, uint64_t a2)
{
  return sub_100078FC4(&qword_1000AEF38, a2, (void (*)(uint64_t))type metadata accessor for Client);
}

uint64_t sub_100078FC4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100079010(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServiceTransportConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ServiceTransportConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ServiceTransportConfiguration()
{
  return &type metadata for ServiceTransportConfiguration;
}

uint64_t destroy for ClientIdentity()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientIdentity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ClientIdentity(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ClientIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientIdentity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientIdentity()
{
  return &type metadata for ClientIdentity;
}

uint64_t sub_10007935C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char **sub_10007936C(unsigned char **result)
{
  unint64_t v2 = *result;
  unsigned char *v2 = *(unsigned char *)(v1 + 16);
  *__n128 result = v2 + 1;
  return result;
}

uint64_t sub_100079380()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079390()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000793B8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_100078DC4(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1000793C0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000793D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000793E0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000793F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079404()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079414()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079424()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10007946C@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(void *)(a1 + 48) = *(void *)(v1 + 64);
  return sub_10002483C(v1 + 16);
}

uint64_t sub_10007948C()
{
  (*(void (**)(void *__return_ptr))(v0 + 16))(v3);
  uint64_t v1 = sub_100068FA4();
  sub_10001A660((uint64_t)v3);
  return v1;
}

uint64_t sub_1000794E0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000794F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079500()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100079538()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079548()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079558()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100079568(uint64_t a1, void *a2)
{
  sub_100078428(a1, a2, *(void *)(v2 + 16));
  return 1;
}

uint64_t sub_100079588()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100079598(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000795A8()
{
  return swift_release();
}

uint64_t sub_1000795B0()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000795E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000795F8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079608()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079618()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079628()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079638()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079648()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079658()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079668()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000796A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000796B0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000796C0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000796D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000796E0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000796F0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079700()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079710()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079720()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079730()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079740()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079750()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079760()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079770()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079780()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079790()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000797A8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000797B8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000797C8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000797D8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000797E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000797F8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079808()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10007983C()
{
  uint64_t v1 = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v0 + v3 + *(int *)(type metadata accessor for SessionConfiguration.BackendHTTP(0) + 24);
    uint64_t v6 = sub_10008BA60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100079970()
{
  return sub_100079F4C();
}

uint64_t sub_1000799CC()
{
  return sub_10008C890();
}

uint64_t sub_100079A0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079A1C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079A2C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079A3C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079A4C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079A5C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079A6C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079A7C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079A8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100079AE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100079B44(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  while (1)
  {
    unint64_t v7 = sub_10008C070();
    v12[0] = sub_10008C0F0();
    v12[1] = v8;
    char v9 = a1(v12);
    if (v4) {
      break;
    }
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10) {
      return v7;
    }
    if (v7 < 0x4000) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100079C50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100079CB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100079D20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000A390(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100079D84(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_10008C7D0() & 1;
  }
}

uint64_t sub_100079DDC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 < a1 >> 14) {
    __break(1u);
  }
  return String.subscript.getter();
}

uint64_t sub_100079F4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SessionConfiguration.Backend(0);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007A0D4(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10007A19C((uint64_t)v7, type metadata accessor for SessionConfiguration.Backend);
    return 0x6C61636F6CLL;
  }
  else
  {
    sub_10007A138((uint64_t)v7, (uint64_t)v4);
    uint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_10007A19C((uint64_t)v4, type metadata accessor for SessionConfiguration.BackendHTTP);
  }
  return v8;
}

uint64_t type metadata accessor for SessionConfiguration.BackendHTTP(uint64_t a1)
{
  return sub_100046C34(a1, (uint64_t *)&unk_1000B6540);
}

uint64_t type metadata accessor for SessionConfiguration.Backend(uint64_t a1)
{
  return sub_100046C34(a1, (uint64_t *)&unk_1000B6530);
}

uint64_t sub_10007A0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration.Backend(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007A138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007A19C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007A1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(double *)(a7 + 16) = a8;
  uint64_t v13 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
  uint64_t v14 = a7 + v13[6];
  uint64_t v15 = sub_10008BA60();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a3, v15);
  *(void *)(a7 + v13[7]) = a4;
  *(unsigned char *)(a7 + v13[8]) = a5;
  *(unsigned char *)(a7 + v13[9]) = a6;
  return result;
}

uint64_t variable initialization expression of SessionConfiguration.version()
{
  return 1701736302;
}

uint64_t sub_10007A2C4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  return result;
}

void sub_10007A2D4(uint64_t a1@<X8>)
{
  *(void *)a1 = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 8) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = 1701736302;
  *(void *)(a1 + 32) = 0xE400000000000000;
}

unint64_t sub_10007A300()
{
  unint64_t result = qword_1000B0248;
  if (!qword_1000B0248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B0248);
  }
  return result;
}

uint64_t destroy for SessionConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SessionConfiguration()
{
  return &type metadata for SessionConfiguration;
}

unsigned char *storeEnumTagSinglePayload for SessionConfiguration.Availability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007A5ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionConfiguration.Availability()
{
  return &type metadata for SessionConfiguration.Availability;
}

void *sub_10007A5E4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      uint64_t v8 = a2[2];
      a1[1] = v7;
      a1[2] = v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = a2[2];
      a1[1] = a2[1];
      a1[2] = v10;
      uint64_t v11 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      uint64_t v12 = v11[6];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_10008BA60();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
      *((unsigned char *)a1 + v11[8]) = *((unsigned char *)a2 + v11[8]);
      *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007A760(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for SessionConfiguration.BackendHTTP(0) + 24);
    uint64_t v3 = sub_10008BA60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  }
  return swift_bridgeObjectRelease();
}

void *sub_10007A814(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10008BA60();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
    *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
    *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10007A938(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10007A19C((uint64_t)a1, type metadata accessor for SessionConfiguration.Backend);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v5 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      uint64_t v6 = v5[6];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_10008BA60();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
      *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
      *((unsigned char *)a1 + v5[9]) = *((unsigned char *)a2 + v5[9]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10007AA90(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v6 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10008BA60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10007AB98(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10007A19C((uint64_t)a1, type metadata accessor for SessionConfiguration.Backend);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v6 = (int *)type metadata accessor for SessionConfiguration.BackendHTTP(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_10008BA60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10007ACC4()
{
  uint64_t result = type metadata accessor for SessionConfiguration.BackendHTTP(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_10007AD54(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10008BA60();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10007AE78(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

void *sub_10007AF04(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008BA60();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10007AFD8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10008BA60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_10007B0B8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

void *sub_10007B16C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10008BA60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t sub_10007B230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007B244);
}

uint64_t sub_10007B244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10008BA60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10007B2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007B308);
}

uint64_t sub_10007B308(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10008BA60();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10007B3B0()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *assignWithCopy for SessionConfiguration.BackendLocal(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SessionConfiguration.BackendLocal(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SessionConfiguration.BackendLocal()
{
  return &type metadata for SessionConfiguration.BackendLocal;
}

id sub_10007B52C()
{
  id result = [objc_allocWithZone((Class)CKSoftLinkAssetFetch) init];
  qword_1000B6E68 = (uint64_t)result;
  return result;
}

uint64_t sub_10007B560()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6E70);
  sub_10000A358(v0, (uint64_t)qword_1000B6E70);
  return sub_10008BD40();
}

uint64_t sub_10007B5DC(uint64_t a1, void *a2)
{
  unint64_t v2 = 0xD000000000000010;
  if (a2)
  {
    if (a2 == (void *)1)
    {
      return 0x64616F6C6E776F64;
    }
    else
    {
      sub_10008C540(33);
      swift_bridgeObjectRelease();
      v6._countAndFlagsBits = a1;
      v6._object = a2;
      sub_10008C090(v6);
      return 0xD00000000000001FLL;
    }
  }
  return v2;
}

uint64_t sub_10007B6A8()
{
  return sub_10007B5DC(*(void *)v0, *(void **)(v0 + 8));
}

uint64_t sub_10007B6B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10007B6FC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC21CloudTelemetryService22StorebagCloudKitSource_throttlesByName);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_10007B750())()
{
  return j__swift_endAccess;
}

uint64_t sub_10007B7AC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10007B7FC(a1);
  return v2;
}

uint64_t sub_10007B7FC(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10008BA60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v16 - v12;
  type metadata accessor for Throttle();
  sub_10005DB40(a1, (uint64_t)v13);
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    type metadata accessor for StorebagCloudKitSource();
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v1 + OBJC_IVAR____TtC21CloudTelemetryService22StorebagCloudKitSource_throttleCacheURL, v13, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
    sub_10000E60C((uint64_t)v11, (uint64_t)v6);
    sub_10007BAD4((uint64_t)v6, v1 + OBJC_IVAR____TtC21CloudTelemetryService22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
    unint64_t v15 = sub_10007BB38((uint64_t)_swiftEmptyArrayStorage);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    *(void *)(v1 + OBJC_IVAR____TtC21CloudTelemetryService22StorebagCloudKitSource_throttlesByName) = v15;
  }
  return v1;
}

uint64_t type metadata accessor for StorebagCloudKitSource()
{
  uint64_t result = qword_1000B6660;
  if (!qword_1000B6660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007BAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007BB38(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000A390(&qword_1000B0460);
  uint64_t v2 = (void *)sub_10008C680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_100011F50(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id static StorebagCloudKitSource.setContainerPtr(object:)(uint64_t a1)
{
  if (qword_1000B6550 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1000B6E68;
  return [v2 setContainerPtr:a1];
}

uint64_t sub_10007BCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[57] = a3;
  v4[58] = v3;
  v4[55] = a1;
  v4[56] = a2;
  uint64_t v5 = sub_10008C000();
  v4[59] = v5;
  v4[60] = *(void *)(v5 - 8);
  v4[61] = swift_task_alloc();
  sub_10008BA60();
  v4[62] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v4[63] = v6;
  void *v6 = v4;
  v6[1] = sub_10007BE28;
  return sub_1000111D4();
}

uint64_t sub_10007BE28(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[64] = a1;
  v3[65] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10007BFC0, 0);
  }
}

uint64_t sub_10007BFC0()
{
  unint64_t v1 = *(void *)(v0 + 512);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_10008C650();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    sub_10007EC4C();
    swift_allocError();
    *uint64_t v24 = 0xD000000000000043;
    unint64_t v23 = 0x8000000100094480;
    goto LABEL_13;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_3:
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + 464) + 104);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = v2(v3);
  if (*(void *)(v4 + 16))
  {
    unint64_t v5 = sub_100011F50(*(void *)(v0 + 440), *(void *)(v0 + 448));
    if (v6) {
      goto LABEL_7;
    }
  }
  uint64_t v7 = *(void *)(v0 + 496);
  uint64_t v8 = *(void *)(v0 + 464);
  uint64_t v10 = *(void *)(v0 + 440);
  char v9 = *(void **)(v0 + 448);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10008C540(32);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = v10;
  v30._object = v9;
  sub_10008C090(v30);
  type metadata accessor for Throttle();
  v31._countAndFlagsBits = 0x7473696C702ELL;
  v31._object = (void *)0xE600000000000000;
  sub_10008C090(v31);
  sub_10008B9E0();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_10005DAA8(v7);
  BOOL v12 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t))(*(void *)v8 + 120))(v0 + 184);
  uint64_t v14 = v13;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = *v14;
  *uint64_t v14 = 0x8000000000000000;
  sub_10007EADC(v11, v10, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v14 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12(v0 + 184, 0);
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v4 = v2(v16);
  if (*(void *)(v4 + 16))
  {
    unint64_t v5 = sub_100011F50(*(void *)(v0 + 440), *(void *)(v0 + 448));
    if (v17)
    {
LABEL_7:
      uint64_t v18 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 528) = v18;
      uint64_t v27 = (uint64_t (*)(void))(*(void *)(*(void *)v18 + 160) + **(int **)(*(void *)v18 + 160));
      swift_retain();
      unint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 536) = v19;
      *unint64_t v19 = v0;
      v19[1] = sub_10007C4B4;
      uint64_t v20 = v27;
      return v20();
    }
  }
  uint64_t v22 = *(void *)(v0 + 440);
  uint64_t v21 = *(void **)(v0 + 448);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10008C540(32);
  swift_bridgeObjectRelease();
  v32._countAndFlagsBits = v22;
  v32._object = v21;
  sub_10008C090(v32);
  unint64_t v23 = 0x80000001000942E0;
  sub_10007EC4C();
  swift_allocError();
  *uint64_t v24 = 0xD00000000000001ELL;
LABEL_13:
  v24[1] = v23;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_10007C4B4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 712) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10007C5E0, 0);
}

uint64_t sub_10007C5E0()
{
  if (*(unsigned char *)(v0 + 712))
  {
    if (qword_1000B6550 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1000B6E68;
    NSString v2 = sub_10008BF80();
    *(void *)(v0 + 544) = v2;
    RequestOptions.globalRequestOptions.unsafeMutableAddressor();
    swift_beginAccess();
    uint64_t v3 = self;
    swift_retain();
    id v4 = [v3 mainBundle];
    id v5 = [v4 bundleIdentifier];

    if (v5)
    {
      sub_10008BFB0();

      __int16 v7 = sub_100068F64(1, 1);
      id v8 = sub_10005D8C4(v7 & 0x101);
      *(void *)(v0 + 552) = v8;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 152;
      *(void *)(v0 + 24) = sub_10007C938;
      uint64_t v9 = swift_continuation_init();
      *(void *)(v0 + 80) = _NSConcreteStackBlock;
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_10007E280;
      *(void *)(v0 + 104) = &unk_1000AA158;
      *(void *)(v0 + 112) = v9;
      [v1 fetchAssetWithTeamID:v2 options:v8 completionHandler:v0 + 80];
      uint64_t v6 = v0 + 16;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_await(v6);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 440);
    uint64_t v10 = *(void **)(v0 + 448);
    swift_bridgeObjectRelease();
    sub_10008C540(31);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = v11;
    v16._object = v10;
    sub_10008C090(v16);
    sub_10007EC4C();
    swift_allocError();
    *BOOL v12 = 0xD00000000000001DLL;
    v12[1] = 0x8000000100094300;
    swift_willThrow();
    swift_release_n();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_10007C938()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 560) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    NSString v2 = sub_10007E134;
  }
  else
  {
    NSString v2 = sub_10007CA7C;
  }
  return _swift_task_switch(v2, 0);
}

uint64_t sub_10007CA7C()
{
  uint64_t v1 = *(void **)(v0 + 552);
  NSString v2 = *(void **)(v0 + 544);
  CFDataRef isa = *(const __CFData **)(v0 + 152);
  unint64_t v3 = *(void *)(v0 + 160);
  *(void *)(v0 + 568) = isa;
  *(void *)(v0 + 576) = v3;
  uint64_t v5 = *(void *)(v0 + 176);

  if (!v5)
  {
    uint64_t v14 = *(void *)(v0 + 440);
    uint64_t v13 = *(void **)(v0 + 448);
    swift_bridgeObjectRelease();
    sub_10008C540(58);
    v116._object = (void *)0x8000000100094350;
    v116._countAndFlagsBits = 0xD000000000000019;
    sub_10008C090(v116);
    v117._countAndFlagsBits = v14;
    v117._object = v13;
    sub_10008C090(v117);
    v11._countAndFlagsBits = 0xD00000000000001FLL;
    BOOL v12 = ", failed to read data signature";
    goto LABEL_5;
  }
  uint64_t v6 = sub_10008BA90();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 584) = v6;
  *(void *)(v0 + 592) = v8;
  if (v8 >> 60 == 15)
  {
    uint64_t v10 = *(void *)(v0 + 440);
    uint64_t v9 = *(void **)(v0 + 448);
    swift_bridgeObjectRelease();
    sub_10008C540(55);
    v114._object = (void *)0x8000000100094350;
    v114._countAndFlagsBits = 0xD000000000000019;
    sub_10008C090(v114);
    v115._countAndFlagsBits = v10;
    v115._object = v9;
    sub_10008C090(v115);
    v11._countAndFlagsBits = 0xD00000000000001CLL;
    BOOL v12 = ", failed to decode signature";
LABEL_5:
    v11._object = (void *)((unint64_t)(v12 - 32) | 0x8000000000000000);
    sub_10008C090(v11);
    sub_10007EC4C();
    uint64_t v15 = swift_allocError();
    void *v16 = 0;
    v16[1] = 0xE000000000000000;
    swift_willThrow();
    uint64_t v17 = (uint64_t)isa;
    unint64_t v18 = v3;
LABEL_6:
    sub_10000A428(v17, v18);
    goto LABEL_7;
  }
  unint64_t v22 = *(void *)(v0 + 512);
  if (v3 >> 60 == 15)
  {
    uint64_t v24 = *(void *)(v0 + 440);
    unint64_t v23 = *(void **)(v0 + 448);
    sub_10000A494(v6, v8);
    swift_bridgeObjectRelease();
    sub_10008C540(59);
    v118._object = (void *)0x8000000100094350;
    v118._countAndFlagsBits = 0xD000000000000019;
    sub_10008C090(v118);
    v119._countAndFlagsBits = v24;
    v119._object = v23;
    sub_10008C090(v119);
    v120._countAndFlagsBits = 0xD000000000000020;
    v120._object = (void *)0x80000001000943B0;
    sub_10008C090(v120);
    sub_10007EC4C();
    uint64_t v15 = swift_allocError();
    *uint64_t v25 = 0;
    v25[1] = 0xE000000000000000;
    swift_willThrow();
    sub_10000A428(v6, v8);
    uint64_t v17 = v6;
    unint64_t v18 = v8;
    goto LABEL_6;
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_10000DAA8(v6, v8);
    sub_10000DAA8((uint64_t)isa, v3);
    uint64_t v26 = (__SecKey *)sub_10008C650();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(__SecKey **)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_10000DAA8(v6, v8);
    sub_10000DAA8((uint64_t)isa, v3);
  }
  uint64_t v27 = *(void *)(v0 + 512);
  uint64_t v112 = v6;
  if (!v26)
  {
LABEL_39:
    uint64_t v75 = *(void *)(v0 + 440);
    uint64_t v74 = *(void **)(v0 + 448);
    swift_bridgeObjectRelease();
    sub_10008C540(55);
    v126._object = (void *)0x8000000100094350;
    v126._countAndFlagsBits = 0xD000000000000019;
    sub_10008C090(v126);
    v127._countAndFlagsBits = v75;
    v127._object = v74;
    sub_10008C090(v127);
    v128._countAndFlagsBits = 0xD00000000000001CLL;
    v128._object = (void *)0x8000000100094460;
    sub_10008C090(v128);
    sub_10007EC4C();
    uint64_t v15 = swift_allocError();
    void *v76 = 0;
    v76[1] = 0xE000000000000000;
    swift_willThrow();
    sub_10000A428(v112, v8);
    sub_10000A428((uint64_t)isa, v3);
    sub_10000A428((uint64_t)isa, v3);
    uint64_t v17 = v112;
    unint64_t v18 = v8;
    goto LABEL_6;
  }
  unint64_t v28 = v27 & 0xC000000000000001;
  if ((v27 & 0xC000000000000001) != 0) {
    goto LABEL_51;
  }
  if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    __break(1u);
  }
  for (unint64_t i = (__SecKey *)*(id *)(v27 + 32); ; unint64_t i = (__SecKey *)sub_10008C570())
  {
    Swift::String v30 = i;
    uint64_t v110 = (uint64_t)isa;
    CFDataRef isa = sub_10008BAC0().super.isa;
    unint64_t v108 = v8;
    CFDataRef v31 = sub_10008BAC0().super.isa;
    int v32 = SecKeyVerifySignature(v30, kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA256, isa, v31, 0);

    if (v32) {
      break;
    }
    unint64_t v8 = 0;
    uint64_t v33 = *(void *)(v0 + 512);
    uint64_t v104 = v33 + 40;
    uint64_t v106 = v33 & 0xFFFFFFFFFFFFFF8;
    os_log_type_t v34 = (char *)v26 - 1;
    while (1)
    {
      if (v34 == (char *)v8)
      {
        unint64_t v8 = v108;
        CFDataRef isa = (const __CFData *)v110;
        goto LABEL_39;
      }
      unint64_t v35 = v8 + 1;
      if (v28)
      {
        uint64_t v36 = (__SecKey *)sub_10008C570();
      }
      else
      {
        if (v35 >= *(void *)(v106 + 16)) {
          goto LABEL_50;
        }
        uint64_t v36 = (__SecKey *)*(id *)(v104 + 8 * v8);
      }
      uint64_t v26 = v36;
      if (__OFADD__(v35, 1)) {
        break;
      }
      CFDataRef v37 = sub_10008BAC0().super.isa;
      CFDataRef v38 = sub_10008BAC0().super.isa;
      CFDataRef isa = (const __CFData *)SecKeyVerifySignature(v26, kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA256, v37, v38, 0);

      ++v8;
      if (isa) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    ;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v39 = self;
  uint64_t v40 = v110;
  Class v41 = sub_10008BAC0().super.isa;
  id v42 = [v39 gzipDecode:v41];

  if (!v42)
  {
    uint64_t v68 = *(void *)(v0 + 440);
    uint64_t v67 = *(void **)(v0 + 448);
    sub_10008C540(55);
    v121._object = (void *)0x8000000100094350;
    v121._countAndFlagsBits = 0xD000000000000019;
    sub_10008C090(v121);
    v122._countAndFlagsBits = v68;
    v122._object = v67;
    sub_10008C090(v122);
    v123._countAndFlagsBits = 0xD00000000000001CLL;
    v123._object = (void *)0x80000001000943E0;
    sub_10008C090(v123);
    sub_10007EC4C();
    uint64_t v15 = swift_allocError();
    *uint64_t v69 = 0;
    v69[1] = 0xE000000000000000;
    swift_willThrow();
    sub_10000A428(v112, v108);
    sub_10000A428(v110, v3);
    sub_10000A428(v110, v3);
    uint64_t v17 = v112;
    unint64_t v18 = v108;
    goto LABEL_6;
  }
  uint64_t v43 = sub_10008BAE0();
  unint64_t v45 = v44;

  *(void *)(v0 + 600) = v43;
  *(void *)(v0 + 608) = v45;
  uint64_t v46 = self;
  sub_10000A494(v43, v45);
  Class v47 = sub_10008BAC0().super.isa;
  *(void *)(v0 + 416) = 0;
  id v48 = [v46 JSONObjectWithData:v47 options:0 error:v0 + 416];

  double v49 = *(void **)(v0 + 416);
  if (!v48)
  {
    id v70 = v49;
    sub_10008B960();

    swift_willThrow();
    swift_errorRelease();
    goto LABEL_36;
  }
  id v50 = v49;
  sub_10008C470();
  swift_unknownObjectRelease();
  sub_10007ECA0();
  uint64_t v40 = v110;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_36:
    uint64_t v72 = *(void *)(v0 + 440);
    uint64_t v71 = *(void **)(v0 + 448);
    sub_10008C540(49);
    swift_bridgeObjectRelease();
    v124._countAndFlagsBits = v72;
    v124._object = v71;
    sub_10008C090(v124);
    v125._countAndFlagsBits = 0xD000000000000016;
    v125._object = (void *)0x8000000100094400;
    sub_10008C090(v125);
    sub_10007EC4C();
    uint64_t v15 = swift_allocError();
    *uint64_t v73 = 0xD000000000000019;
    v73[1] = 0x8000000100094350;
    swift_willThrow();
    sub_10000A428(v112, v108);
    sub_10000A428(v40, v3);
    sub_10000A428(v40, v3);
    sub_10000A428(v112, v108);
LABEL_37:
    sub_10000A43C(v43, v45);
    sub_10000A43C(v43, v45);
    goto LABEL_7;
  }
  uint64_t v51 = *(void **)(v0 + 408);
  *(void *)(v0 + 616) = v51;
  uint64_t v52 = self;
  *(void *)(v0 + 432) = 0;
  id v53 = v51;
  id v54 = [v52 dataWithPropertyList:v53 format:100 options:0 error:v0 + 432];
  id v55 = *(id *)(v0 + 432);
  if (!v54)
  {
    uint64_t v77 = v55;
    uint64_t v79 = *(void *)(v0 + 440);
    uint64_t v78 = *(void **)(v0 + 448);
    sub_10008B960();

    swift_willThrow();
    swift_errorRelease();
    sub_10008C540(57);
    v129._object = (void *)0x8000000100094350;
    v129._countAndFlagsBits = 0xD000000000000019;
    sub_10008C090(v129);
    v130._countAndFlagsBits = v79;
    v130._object = v78;
    sub_10008C090(v130);
    v131._countAndFlagsBits = 0xD00000000000001ELL;
    v131._object = (void *)0x8000000100094420;
    sub_10008C090(v131);
    sub_10007EC4C();
    uint64_t v15 = swift_allocError();
    *uint64_t v80 = 0;
    v80[1] = 0xE000000000000000;
    swift_willThrow();
    sub_10000A428(v112, v108);
    sub_10000A428(v110, v3);
    sub_10000A428(v110, v3);
    sub_10000A428(v112, v108);

    goto LABEL_37;
  }
  uint64_t v102 = v52;
  uint64_t v103 = v53;
  uint64_t v107 = (id *)(v0 + 424);
  uint64_t v57 = *(void *)(v0 + 480);
  uint64_t v56 = *(void *)(v0 + 488);
  uint64_t v105 = *(void *)(v0 + 472);
  uint64_t v58 = sub_10008BAE0();
  unint64_t v60 = v59;

  *(void *)(v0 + 624) = v58;
  *(void *)(v0 + 632) = v60;
  sub_10000A494(v58, v60);
  uint64_t v101 = v58;
  uint64_t v61 = sub_10008BAD0(0);
  *(void *)(v0 + 336) = &type metadata for String;
  *(void *)(v0 + 312) = v61;
  *(void *)(v0 + 320) = v62;
  sub_100039CE0((_OWORD *)(v0 + 312), (_OWORD *)(v0 + 344));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10005EF2C((_OWORD *)(v0 + 344), 6775138, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 400) = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  sub_10008BFF0();
  uint64_t v64 = sub_10008BFC0();
  unint64_t v66 = v65;
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v105);
  if (v66 >> 60 == 15)
  {
    sub_10007E4E8(0x727574616E676973, 0xE900000000000065, (_OWORD *)(v0 + 216));
    sub_10005F2D4(v0 + 216);
  }
  else
  {
    uint64_t v81 = sub_10008BAD0(0);
    uint64_t v83 = v82;
    sub_10000A428(v64, v66);
    *(void *)(v0 + 304) = &type metadata for String;
    *(void *)(v0 + 280) = v81;
    *(void *)(v0 + 288) = v83;
    sub_100039CE0((_OWORD *)(v0 + 280), (_OWORD *)(v0 + 120));
    uint64_t v84 = *(void *)(v0 + 400);
    char v85 = swift_isUniquelyReferenced_nonNull_native();
    sub_10005EF2C((_OWORD *)(v0 + 120), 0x727574616E676973, 0xE900000000000065, v85);
    *(void *)(v0 + 400) = v84;
    swift_bridgeObjectRelease();
  }
  Class v86 = sub_10008BEE0().super.isa;
  swift_bridgeObjectRelease();
  id *v107 = 0;
  id v87 = [v102 dataWithPropertyList:v86 format:100 options:0 error:v107];

  id v88 = *v107;
  if (!v87)
  {
    uint64_t v96 = v88;
    uint64_t v98 = *(void *)(v0 + 440);
    uint64_t v97 = *(void **)(v0 + 448);
    sub_10008B960();

    swift_willThrow();
    swift_errorRelease();
    sub_10008C540(57);
    v132._object = (void *)0x8000000100094350;
    v132._countAndFlagsBits = 0xD000000000000019;
    sub_10008C090(v132);
    v133._countAndFlagsBits = v98;
    v133._object = v97;
    sub_10008C090(v133);
    v134._countAndFlagsBits = 0xD00000000000001ELL;
    v134._object = (void *)0x8000000100094440;
    sub_10008C090(v134);
    sub_10007EC4C();
    uint64_t v15 = swift_allocError();
    void *v99 = 0;
    v99[1] = 0xE000000000000000;
    swift_willThrow();
    sub_10000A428(v112, v108);
    sub_10000A428(v110, v3);
    sub_10000A428(v110, v3);
    sub_10000A428(v112, v108);
    sub_10000A43C(v43, v45);
    sub_10000A43C(v43, v45);

    sub_10000A43C(v101, v60);
    sub_10000A43C(v101, v60);
LABEL_7:
    *(void *)(v0 + 696) = v15;
    uint64_t v109 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 528) + 168) + **(int **)(**(void **)(v0 + 528) + 168));
    unint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 704) = v19;
    *unint64_t v19 = v0;
    v19[1] = sub_10007DF54;
    uint64_t v20 = v109;
    return v20();
  }
  uint64_t v89 = *(void *)(v0 + 520);
  uint64_t v90 = sub_10008BAE0();
  unint64_t v92 = v91;

  *(void *)(v0 + 640) = v90;
  *(void *)(v0 + 648) = v92;
  sub_10000A494(v90, v92);
  uint64_t v15 = v89;
  *(void *)(v0 + 656) = sub_10002B9CC(v90, v92);
  *(void *)(v0 + 664) = v93;
  *(void *)(v0 + 672) = v94;
  *(void *)(v0 + 680) = v95;
  if (v89)
  {
    sub_10000A428(v112, v108);
    sub_10000A428(v110, v3);
    sub_10000A428(v110, v3);
    sub_10000A428(v112, v108);
    sub_10000A43C(v43, v45);
    sub_10000A43C(v43, v45);

    sub_10000A43C(v101, v60);
    sub_10000A43C(v101, v60);
    sub_10000A43C(v90, v92);
    sub_10000A43C(v90, v92);
    goto LABEL_7;
  }
  sub_10002BBEC();
  uint64_t v111 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 528) + 152) + **(int **)(**(void **)(v0 + 528) + 152));
  uint64_t v100 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v100;
  *uint64_t v100 = v0;
  v100[1] = sub_10007DBB0;
  uint64_t v20 = v111;
  return v20();
}

uint64_t sub_10007DBB0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10007DCD8, 0);
}

uint64_t sub_10007DCD8()
{
  if (qword_1000B6558 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10008BD50();
  sub_10000A358(v1, (uint64_t)qword_1000B6E70);
  NSString v2 = sub_10008BD30();
  os_log_type_t v3 = sub_10008C310();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "sucessfully fetched storebag from server", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v18 = v0[84];
  unint64_t v19 = v0[85];
  uint64_t v16 = v0[82];
  unint64_t v17 = v0[83];
  unint64_t v5 = v0[81];
  uint64_t v6 = v0[80];
  unint64_t v20 = v0[79];
  uint64_t v21 = v2;
  uint64_t v7 = v0[78];
  unint64_t v8 = v0[76];
  uint64_t v9 = v0[75];
  unint64_t v10 = v0[74];
  uint64_t v11 = v0[73];
  unint64_t v12 = v0[72];
  unint64_t v22 = (void *)v0[77];
  uint64_t v13 = v0[71];
  swift_release();
  sub_10000A428(v13, v12);
  sub_10000A428(v11, v10);
  sub_10000A43C(v9, v8);
  sub_10000A43C(v16, v17);
  sub_10000A43C(v18, v19);
  sub_10000A43C(v6, v5);
  sub_10000A43C(v7, v20);

  sub_10000A43C(v6, v5);
  sub_10000A43C(v7, v20);

  sub_10000A43C(v9, v8);
  sub_10000A428(v13, v12);
  sub_10000A428(v11, v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_10007DF54()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10007E07C, 0);
}

uint64_t sub_10007E07C()
{
  swift_willThrow();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007E134()
{
  uint64_t v1 = *(void **)(v0 + 552);
  NSString v2 = *(void **)(v0 + 544);
  swift_willThrow();

  *(void *)(v0 + 696) = *(void *)(v0 + 560);
  unint64_t v5 = (uint64_t (*)(void))(*(void *)(**(void **)(v0 + 528) + 168) + **(int **)(**(void **)(v0 + 528) + 168));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 704) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10007DF54;
  return v5();
}

uint64_t sub_10007E280(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_10000A390(&qword_1000B0870);
    uint64_t v6 = swift_allocError();
    void *v7 = a4;
    id v8 = a4;
    return _swift_continuation_throwingResumeWithError(v4, v6);
  }
  if (!a2)
  {
    id v18 = a3;
    uint64_t v12 = 0;
    unint64_t v14 = 0xF000000000000000;
    if (a3) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    goto LABEL_10;
  }
  id v10 = a2;
  id v11 = a3;
  uint64_t v12 = sub_10008BAE0();
  unint64_t v14 = v13;

  if (!a3) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v15 = sub_10008BFB0();
  uint64_t v17 = v16;

LABEL_10:
  unint64_t v19 = *(uint64_t **)(*(void *)(v4 + 64) + 40);
  *unint64_t v19 = v12;
  v19[1] = v14;
  v19[2] = v15;
  v19[3] = v17;
  return _swift_continuation_throwingResume(v4);
}

uint64_t StorebagCloudKitSource.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21CloudTelemetryService22StorebagCloudKitSource_throttleCacheURL;
  uint64_t v2 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10007ECE0(v0 + OBJC_IVAR____TtC21CloudTelemetryService22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StorebagCloudKitSource.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21CloudTelemetryService22StorebagCloudKitSource_throttleCacheURL;
  uint64_t v2 = sub_10008BA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10007ECE0(v0 + OBJC_IVAR____TtC21CloudTelemetryService22StorebagCloudKitSource_storebagCloudKitSigningConfiguration);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_10007E4E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100011F50(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10005F0EC();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_100039CE0((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_10007E904(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_10007E5EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10000A390(&qword_1000B0460);
  char v36 = a2;
  uint64_t v6 = sub_10008C670();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_10008C8F0();
    sub_10008C050();
    uint64_t result = sub_10008C920();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    id v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *id v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_10007E904(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_10008C490();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_10008C8F0();
        swift_bridgeObjectRetain();
        sub_10008C050();
        Swift::Int v10 = sub_10008C920();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          int64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            _OWORD *v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            _OWORD *v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    id v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    id v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *id v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10007EADC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100011F50(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10007F088();
LABEL_7:
    id v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10007E5EC(v15, a4 & 1);
  unint64_t v21 = sub_100011F50(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_10008C880();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  id v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

unint64_t sub_10007EC4C()
{
  unint64_t result = qword_1000B0380;
  if (!qword_1000B0380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B0380);
  }
  return result;
}

unint64_t sub_10007ECA0()
{
  unint64_t result = qword_1000B0388;
  if (!qword_1000B0388)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000B0388);
  }
  return result;
}

uint64_t sub_10007ECE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StorebagCloudKitSigningConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007ED40()
{
  return type metadata accessor for StorebagCloudKitSource();
}

uint64_t sub_10007ED48()
{
  uint64_t result = sub_10008BA60();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StorebagCloudKitSigningConfiguration();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

unint64_t destroy for StorebagCloudKitSource.Error(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s21CloudTelemetryService22StorebagCloudKitSourceC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for StorebagCloudKitSource.Error(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StorebagCloudKitSource.Error(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorebagCloudKitSource.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StorebagCloudKitSource.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_10007F040(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10007F058(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StorebagCloudKitSource.Error()
{
  return &type metadata for StorebagCloudKitSource.Error;
}

void *sub_10007F088()
{
  unint64_t v1 = v0;
  sub_10000A390(&qword_1000B0460);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10008C660();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10007F240()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6EA0);
  sub_10000A358(v0, (uint64_t)qword_1000B6EA0);
  return sub_10008BD40();
}

uint64_t sub_10007F2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  return _swift_task_switch(sub_10007F2EC, v3);
}

uint64_t sub_10007F2EC()
{
  uint64_t v6 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)(v0[18] + 112) + 232)
                                                                   + **(int **)(**(void **)(v0[18] + 112) + 232));
  unint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_10007F404;
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[15];
  return v6(v0 + 2, v4, v2, v3);
}

uint64_t sub_10007F404()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(**(void **)(v2 + 144) + 128)
                                                                     + **(int **)(**(void **)(v2 + 144) + 128));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 160) = v6;
    void *v6 = v3;
    v6[1] = sub_10007F5E8;
    uint64_t v7 = *(void *)(v2 + 136);
    uint64_t v8 = *(void *)(v2 + 120);
    uint64_t v9 = *(void *)(v2 + 128);
    return v10(v2 + 16, v8, v9, v7);
  }
}

uint64_t sub_10007F5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[21] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[18];
  if (v2)
  {
    uint64_t v8 = sub_10007F7BC;
  }
  else
  {
    v6[22] = a2;
    v6[23] = a1;
    uint64_t v8 = sub_10007F728;
  }
  return _swift_task_switch(v8, v7);
}

uint64_t sub_10007F728()
{
  *(void *)(v0 + 112) = *(void *)(v0 + 16);
  sub_100032D88(v0 + 112);
  *(void *)(v0 + 96) = *(void *)(v0 + 24);
  sub_100032D88(v0 + 96);
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 40);
  sub_100032D5C(v0 + 56);
  unint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  return v1(v2, v3);
}

uint64_t sub_10007F7BC()
{
  *(void *)(v0 + 88) = *(void *)(v0 + 16);
  sub_100032D88(v0 + 88);
  *(void *)(v0 + 104) = *(void *)(v0 + 24);
  sub_100032D88(v0 + 104);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 40);
  sub_100032D5C(v0 + 72);
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007F84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[30] = a4;
  v5[31] = v4;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  v5[32] = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  return _swift_task_switch(sub_10007F920, v4);
}

uint64_t sub_10007F920()
{
  uint64_t v1 = **(void **)(v0 + 216);
  *(void *)(v0 + 208) = v1;
  *(void *)(v0 + 280) = v1;
  int64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 288) = v2;
  if (v2)
  {
    if (v2 == 1)
    {
      uint64_t v3 = *(void *)(v0 + 272);
      uint64_t v5 = *(void *)(v0 + 248);
      uint64_t v4 = *(void *)(v0 + 256);
      uint64_t v7 = *(void *)(v0 + 232);
      uint64_t v6 = *(void *)(v0 + 240);
      uint64_t v8 = *(void *)(v0 + 224);
      *(void *)(v0 + 192) = v7;
      *(void *)(v0 + 200) = v6;
      uint64_t v9 = sub_10001A5FC((uint64_t *)(v0 + 168));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v9, v8, v7);
      sub_10008224C(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3, type metadata accessor for SessionConfiguration.Backend);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6);
      uint64_t v29 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v5 + 152) + **(int **)(*(void *)v5 + 152));
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_10007FD30;
      uint64_t v11 = v0 + 72;
      unint64_t v12 = v29;
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 248);
      uint64_t v16 = *(void *)(v0 + 256);
      uint64_t v17 = *(void *)(v0 + 240);
      uint64_t v18 = sub_10005D06C(0, v2, 0, _swiftEmptyArrayStorage);
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      *(void *)(v0 + 328) = v30;
      *(void *)(v0 + 336) = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x1E72000000000000;
      BOOL v27 = *(int **)(*(void *)v15 + 152);
      uint64_t v28 = *(void *)v15 + 152;
      *(void *)(v0 + 344) = v27;
      *(void *)(v0 + 352) = v28 & 0xFFFFFFFFFFFFLL | 0xDE1D000000000000;
      int v19 = *(_DWORD *)(v16 + 80);
      *(_DWORD *)(v0 + 408) = v19;
      *(void *)(v0 + 360) = v18;
      *(void *)(v0 + 368) = 1;
      uint64_t v20 = *(void *)(v0 + 264);
      uint64_t v22 = *(void *)(v0 + 232);
      uint64_t v21 = *(void *)(v0 + 240);
      uint64_t v23 = *(void *)(v0 + 224);
      uint64_t v24 = *(void *)(v0 + 280) + ((v19 + 32) & ~(unint64_t)v19);
      swift_bridgeObjectRetain();
      sub_10008224C(v24, v20, type metadata accessor for SessionConfiguration.Backend);
      *(void *)(v0 + 152) = v22;
      *(void *)(v0 + 160) = v21;
      BOOL v25 = sub_10001A5FC((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v25, v23, v22);
      v30(v22, v21);
      uint64_t v31 = (uint64_t (*)(uint64_t))((char *)v27 + *v27);
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_10007FF90;
      uint64_t v11 = v0 + 16;
      unint64_t v12 = v31;
    }
    return v12(v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v13 = *(uint64_t (**)(void, void))(v0 + 8);
    return v13(0, 0);
  }
}

uint64_t sub_10007FD30(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)v3 + 72;
  *(void *)(*(void *)v3 + 304) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = v6[31];
    sub_10007A19C(v6[34], type metadata accessor for SessionConfiguration.Backend);
    sub_10001A660(v7);
    uint64_t v9 = sub_1000803DC;
  }
  else
  {
    uint64_t v8 = v6[31];
    v6[39] = a2;
    unsigned char v6[40] = a1;
    sub_10001A660(v7);
    uint64_t v9 = sub_10007FE98;
  }
  return _swift_task_switch(v9, v8);
}

uint64_t sub_10007FE98()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(**(void **)(v0 + 248) + 144))(v0 + 168, v1, *(void *)(v0 + 320), *(void *)(v0 + 312));
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_10007A19C(v1, type metadata accessor for SessionConfiguration.Backend);
  sub_10000CCE8(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v5(v2, v4);
}

uint64_t sub_10007FF90(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)v3 + 16;
  *(void *)(*(void *)v3 + 384) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = (uint64_t)(v6 + 26);
    uint64_t v9 = v6[31];
    sub_10001A660(v7);
    sub_100032D88(v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_100080450;
    uint64_t v11 = v9;
  }
  else
  {
    uint64_t v12 = v6[31];
    v6[49] = a2;
    v6[50] = a1;
    sub_10001A660(v7);
    uint64_t v10 = sub_1000800FC;
    uint64_t v11 = v12;
  }
  return _swift_task_switch(v10, v11);
}

uint64_t sub_1000800FC()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, void, void, void))(**(void **)(v0 + 248) + 144))(v0 + 128, *(void *)(v0 + 264), *(void *)(v0 + 400), *(void *)(v0 + 392));
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_10000CCE8(v0 + 128);
  unint64_t v6 = *(void *)(v1 + 16);
  unint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void **)(v0 + 360);
  if (v6 >= v5 >> 1) {
    uint64_t v7 = sub_10005D06C((void *)(v5 > 1), v6 + 1, 1, *(void **)(v0 + 360));
  }
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 264);
  v7[2] = v6 + 1;
  uint64_t v11 = &v7[2 * v6];
  v11[4] = v2;
  v11[5] = v4;
  uint64_t result = sub_10007A19C(v10, type metadata accessor for SessionConfiguration.Backend);
  if (v8 == v9)
  {
    sub_100032D88(v0 + 208);
    type metadata accessor for BackendGroup();
    uint64_t v13 = sub_10005B5D0((uint64_t)v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 8);
    return v14(v13, &off_1000A8058);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 368);
    *(void *)(v0 + 360) = v7;
    *(void *)(v0 + 368) = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(int **)(v0 + 344);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
      uint64_t v19 = *(void *)(v0 + 232);
      uint64_t v18 = *(void *)(v0 + 240);
      uint64_t v20 = *(void *)(v0 + 224);
      sub_10008224C(*(void *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 408) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 408))+ *(void *)(*(void *)(v0 + 256) + 72) * v15, *(void *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
      *(void *)(v0 + 152) = v19;
      *(void *)(v0 + 160) = v18;
      uint64_t v21 = sub_10001A5FC((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v21, v20, v19);
      v17(v19, v18);
      uint64_t v23 = (uint64_t (*)(uint64_t))((char *)v16 + *v16);
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_10007FF90;
      return v23(v0 + 16);
    }
  }
  return result;
}

uint64_t sub_1000803DC()
{
  sub_10000CCE8(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100080450()
{
  sub_10007A19C(*(void *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
  sub_10000CCE8(v0 + 128);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000804E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[30] = a4;
  v5[31] = v4;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  v5[32] = *(void *)(type metadata accessor for SessionConfiguration.Backend(0) - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  return _swift_task_switch(sub_1000805B8, v4);
}

uint64_t sub_1000805B8()
{
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = v1[1];
  *(void *)(v0 + 208) = v2;
  *(void *)(v0 + 280) = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 288) = v3;
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v4 = *(void *)(v0 + 272);
      uint64_t v6 = *(void *)(v0 + 248);
      uint64_t v5 = *(void *)(v0 + 256);
      uint64_t v8 = *(void *)(v0 + 232);
      uint64_t v7 = *(void *)(v0 + 240);
      uint64_t v9 = *(void *)(v0 + 224);
      *(void *)(v0 + 192) = v8;
      *(void *)(v0 + 200) = v7;
      uint64_t v10 = sub_10001A5FC((uint64_t *)(v0 + 168));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v10, v9, v8);
      sub_10008224C(v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4, type metadata accessor for SessionConfiguration.Backend);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
      uint64_t v30 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v6 + 152) + **(int **)(*(void *)v6 + 152));
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v11;
      void *v11 = v0;
      v11[1] = sub_10007FD30;
      uint64_t v12 = v0 + 72;
      uint64_t v13 = v30;
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 248);
      uint64_t v17 = *(void *)(v0 + 256);
      uint64_t v18 = *(void *)(v0 + 240);
      uint64_t v19 = sub_10005D06C(0, *(void *)(*v1 + 16), 0, _swiftEmptyArrayStorage);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      *(void *)(v0 + 328) = v31;
      *(void *)(v0 + 336) = (v18 + 8) & 0xFFFFFFFFFFFFLL | 0x1E72000000000000;
      uint64_t v28 = *(int **)(*(void *)v16 + 152);
      uint64_t v29 = *(void *)v16 + 152;
      *(void *)(v0 + 344) = v28;
      *(void *)(v0 + 352) = v29 & 0xFFFFFFFFFFFFLL | 0xDE1D000000000000;
      int v20 = *(_DWORD *)(v17 + 80);
      *(_DWORD *)(v0 + 408) = v20;
      *(void *)(v0 + 360) = v19;
      *(void *)(v0 + 368) = 1;
      uint64_t v21 = *(void *)(v0 + 264);
      uint64_t v23 = *(void *)(v0 + 232);
      uint64_t v22 = *(void *)(v0 + 240);
      uint64_t v24 = *(void *)(v0 + 224);
      uint64_t v25 = *(void *)(v0 + 280) + ((v20 + 32) & ~(unint64_t)v20);
      swift_bridgeObjectRetain();
      sub_10008224C(v25, v21, type metadata accessor for SessionConfiguration.Backend);
      *(void *)(v0 + 152) = v23;
      *(void *)(v0 + 160) = v22;
      uint64_t v26 = sub_10001A5FC((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v26, v24, v23);
      v31(v23, v22);
      uint64_t v32 = (uint64_t (*)(uint64_t))((char *)v28 + *v28);
      BOOL v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v27;
      *BOOL v27 = v0;
      v27[1] = sub_1000809D0;
      uint64_t v12 = v0 + 16;
      uint64_t v13 = v32;
    }
    return v13(v12);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void, void))(v0 + 8);
    return v14(0, 0);
  }
}

uint64_t sub_1000809D0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)v3 + 16;
  *(void *)(*(void *)v3 + 384) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = (uint64_t)(v6 + 26);
    uint64_t v9 = v6[31];
    sub_10001A660(v7);
    sub_100032D88(v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_100080450;
    uint64_t v11 = v9;
  }
  else
  {
    uint64_t v12 = v6[31];
    v6[49] = a2;
    v6[50] = a1;
    sub_10001A660(v7);
    uint64_t v10 = sub_100080B3C;
    uint64_t v11 = v12;
  }
  return _swift_task_switch(v10, v11);
}

uint64_t sub_100080B3C()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, void, void, void))(**(void **)(v0 + 248) + 144))(v0 + 128, *(void *)(v0 + 264), *(void *)(v0 + 400), *(void *)(v0 + 392));
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_10000CCE8(v0 + 128);
  unint64_t v6 = *(void *)(v1 + 16);
  unint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void **)(v0 + 360);
  if (v6 >= v5 >> 1) {
    uint64_t v7 = sub_10005D06C((void *)(v5 > 1), v6 + 1, 1, *(void **)(v0 + 360));
  }
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 264);
  v7[2] = v6 + 1;
  uint64_t v11 = &v7[2 * v6];
  v11[4] = v2;
  v11[5] = v4;
  uint64_t result = sub_10007A19C(v10, type metadata accessor for SessionConfiguration.Backend);
  if (v8 == v9)
  {
    sub_100032D88(v0 + 208);
    type metadata accessor for BackendGroup();
    uint64_t v13 = sub_10005B5D0((uint64_t)v7);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(uint64_t, _UNKNOWN **))(v0 + 8);
    return v14(v13, &off_1000A8058);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 368);
    *(void *)(v0 + 360) = v7;
    *(void *)(v0 + 368) = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = *(int **)(v0 + 344);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
      uint64_t v19 = *(void *)(v0 + 232);
      uint64_t v18 = *(void *)(v0 + 240);
      uint64_t v20 = *(void *)(v0 + 224);
      sub_10008224C(*(void *)(v0 + 280)+ ((*(unsigned __int8 *)(v0 + 408) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 408))+ *(void *)(*(void *)(v0 + 256) + 72) * v15, *(void *)(v0 + 264), type metadata accessor for SessionConfiguration.Backend);
      *(void *)(v0 + 152) = v19;
      *(void *)(v0 + 160) = v18;
      uint64_t v21 = sub_10001A5FC((uint64_t *)(v0 + 128));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v21, v20, v19);
      v17(v19, v18);
      uint64_t v23 = (uint64_t (*)(uint64_t))((char *)v16 + *v16);
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_1000809D0;
      return v23(v0 + 16);
    }
  }
  return result;
}

uint64_t sub_100080E1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v25)(void *__return_ptr, uint64_t, uint64_t);
  unsigned int v26;
  int v27;
  int v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  void v35[5];
  void v36[4];
  unsigned __int8 v37;
  unsigned __int8 v38;

  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for SessionConfiguration.BackendHTTP(0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = type metadata accessor for SessionConfiguration.Backend(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008224C(a2, (uint64_t)v18, type metadata accessor for SessionConfiguration.Backend);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = *((void *)v18 + 1);
    uint64_t v20 = *((void *)v18 + 2);
    type metadata accessor for BackendLocal();
    sub_1000181B0((uint64_t)a1, (uint64_t)v36);
    return sub_1000300D8(v19, v20, v36);
  }
  else
  {
    sub_10007A138((uint64_t)v18, (uint64_t)v15);
    int64_t v34 = type metadata accessor for BackendHTTP();
    uint64_t v22 = *(void *)(v5 + 128);
    sub_1000181B0((uint64_t)a1, (uint64_t)v35);
    uint64_t v33 = type metadata accessor for SessionConfiguration.BackendHTTP;
    sub_10008224C((uint64_t)v15, (uint64_t)v13, type metadata accessor for SessionConfiguration.BackendHTTP);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    RequestOptions.globalRequestOptions.unsafeMutableAddressor();
    swift_beginAccess();
    uint64_t v31 = a3;
    uint64_t v32 = a4;
    uint64_t v24 = a1[3];
    uint64_t v23 = a1[4];
    sub_10000A784(a1, v24);
    uint64_t v25 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 8);
    swift_retain();
    v25(v36, v24, v23);
    uint64_t v26 = v37;
    BOOL v27 = v38;
    swift_bridgeObjectRetain();
    sub_10001A660((uint64_t)v36);
    if (v27) {
      uint64_t v28 = 256;
    }
    else {
      uint64_t v28 = 0;
    }
    uint64_t v29 = sub_10005D8C4(v28 | v26);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_100013558(v22, v35, v5, v13, v31, v32, v29);
    sub_10007A19C((uint64_t)v15, v33);
  }
  return v21;
}

uint64_t sub_1000810F4(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  uint64_t v3 = sub_10008BC20();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  sub_10000A390(&qword_1000AEC38);
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_10008BBB0();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_100081268, v1);
}

uint64_t sub_100081268()
{
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(**(void **)(*(void *)(v0 + 88) + 112) + 264)
                         + **(int **)(**(void **)(*(void *)(v0 + 88) + 112) + 264));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10008136C;
  return v3();
}

uint64_t sub_10008136C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  return _swift_task_switch(sub_10008147C, v1);
}

uint64_t sub_10008147C()
{
  v0[23] = *(void *)(v0[11] + 120);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[24] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100081524;
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[10];
  return sub_100027644(v2, v3);
}

uint64_t sub_100081524()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v4 = sub_100082050;
  }
  else {
    uint64_t v4 = sub_100081650;
  }
  return _swift_task_switch(v4, v3);
}

uint64_t sub_100081650()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(char **)(v0 + 120);
  uint64_t v3 = sub_10000A390(&qword_1000AED20);
  int v4 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v6 = *(void *)(v0 + 128);
  if (v4 == 1)
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v10 = *(void *)(v0 + 96);
    sub_1000822B4((uint64_t)v2);
    sub_10008BC10();
    uint64_t v11 = sub_10008BBC0();
    uint64_t v13 = v12;
    *(void *)(v0 + 256) = v11;
    *(void *)(v0 + 264) = v12;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_bridgeObjectRetain();
    sub_10008BB70();
    sub_10008BB20();
    uint64_t v14 = *v5;
    *(void *)(v0 + 272) = *v5;
    *(void *)(v0 + 280) = (unint64_t)v5 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v14(v7, v6);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100081E28;
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v18 = v11;
    uint64_t v19 = v13;
LABEL_13:
    return sub_100027910(v17, v18, v19, v16);
  }
  uint64_t v20 = *(void *)(v0 + 160);
  uint64_t v22 = *(void *)v2;
  uint64_t v21 = *((void *)v2 + 1);
  (*(void (**)(void, char *, void))(v1 + 32))(*(void *)(v0 + 168), &v2[*(int *)(v3 + 48)], *(void *)(v0 + 128));
  sub_10008BB70();
  char v23 = sub_10008BB40();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  *(void *)(v0 + 208) = v24;
  *(void *)(v0 + 216) = (unint64_t)v5 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v24(v20, v6);
  if ((v23 & 1) == 0)
  {
    id v48 = v24;
    swift_bridgeObjectRelease();
    if (qword_1000B6670 != -1) {
      swift_once();
    }
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v28 = sub_10008BD50();
    sub_10000A358(v28, (uint64_t)qword_1000B6EA0);
    sub_10002483C(v27);
    sub_10002483C(v27);
    uint64_t v29 = sub_10008BD30();
    os_log_type_t v30 = sub_10008C310();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 80);
    if (v31)
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136446210;
      long long v35 = *(_OWORD *)(v32 + 16);
      long long v34 = *(_OWORD *)(v32 + 32);
      long long v36 = *(_OWORD *)v32;
      *(void *)(v0 + 64) = *(void *)(v32 + 48);
      *(_OWORD *)(v0 + 32) = v35;
      *(_OWORD *)(v0 + 48) = v34;
      *(_OWORD *)(v0 + 16) = v36;
      sub_100082314();
      uint64_t v37 = sub_10008C7A0();
      *(void *)(v0 + 72) = sub_100009D00(v37, v38, &v49);
      sub_10008C440();
      swift_bridgeObjectRelease();
      sub_10001A660(v32);
      sub_10001A660(v32);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "CID expired for %{public}s, refreshing", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001A660(*(void *)(v0 + 80));
      sub_10001A660(v32);
    }

    uint64_t v39 = *(void *)(v0 + 160);
    uint64_t v40 = *(void *)(v0 + 128);
    uint64_t v42 = *(void *)(v0 + 104);
    uint64_t v41 = *(void *)(v0 + 112);
    uint64_t v43 = *(void *)(v0 + 96);
    sub_10008BC10();
    uint64_t v44 = sub_10008BBC0();
    uint64_t v46 = v45;
    *(void *)(v0 + 224) = v44;
    *(void *)(v0 + 232) = v45;
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    swift_bridgeObjectRetain();
    sub_10008BB70();
    sub_10008BB20();
    v48(v39, v40);
    Class v47 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v47;
    *Class v47 = v0;
    v47[1] = sub_100081BA8;
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v18 = v44;
    uint64_t v19 = v46;
    goto LABEL_13;
  }
  v24(*(void *)(v0 + 168), *(void *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v25(v22, v21);
}

uint64_t sub_100081BA8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 208);
  uint64_t v4 = *(void *)(*v1 + 152);
  uint64_t v5 = *(void *)(*v1 + 128);
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v6 = *(void *)(v2 + 88);
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1000820F4;
    uint64_t v8 = v6;
  }
  else
  {
    uint64_t v8 = *(void *)(v2 + 88);
    uint64_t v7 = sub_100081D60;
  }
  return _swift_task_switch(v7, v8);
}

uint64_t sub_100081D60()
{
  (*(void (**)(void, void))(v0 + 208))(*(void *)(v0 + 168), *(void *)(v0 + 128));
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_100081E28()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 272);
  uint64_t v3 = *(void *)(*(void *)v1 + 144);
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  uint64_t v5 = *(void **)v1;
  v5[37] = v0;
  swift_task_dealloc();
  v2(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5[33];
  if (v0)
  {
    uint64_t v7 = v5[11];
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_1000821A8, v7);
  }
  else
  {
    uint64_t v8 = v5[32];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v5[1];
    return v9(v8, v6);
  }
}

uint64_t sub_100082050()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000820F4()
{
  (*(void (**)(void, void))(v0 + 208))(*(void *)(v0 + 168), *(void *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000821A8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008224C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000822B4(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000AEC38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100082314()
{
  unint64_t result = qword_1000B0488;
  if (!qword_1000B0488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B0488);
  }
  return result;
}

uint64_t type metadata accessor for SubmissionCoordinator()
{
  return self;
}

void *XPCTypeConnection.getter()
{
  return &_xpc_type_connection;
}

void *XPCTypeEndpoint.getter()
{
  return &_xpc_type_endpoint;
}

void *XPCTypeNull.getter()
{
  return &_xpc_type_null;
}

void *XPCTypeBool.getter()
{
  return &_xpc_type_BOOL;
}

void *XPCTypeInt64.getter()
{
  return &_xpc_type_int64;
}

void *XPCTypeUInt64.getter()
{
  return &_xpc_type_uint64;
}

void *XPCTypeDouble.getter()
{
  return &_xpc_type_double;
}

void *XPCTypeData.getter()
{
  return &_xpc_type_data;
}

void *XPCTypeDate.getter()
{
  return &_xpc_type_date;
}

void *XPCTypeString.getter()
{
  return &_xpc_type_string;
}

void *XPCTypeUUID.getter()
{
  return &_xpc_type_uuid;
}

void *XPCTypeShmem.getter()
{
  return &_xpc_type_shmem;
}

void *XPCTypeArray.getter()
{
  return &_xpc_type_array;
}

void *XPCTypeDictionary.getter()
{
  return &_xpc_type_dictionary;
}

void *XPCTypeError.getter()
{
  return &_xpc_type_error;
}

void *XPCTypeActivity.getter()
{
  return &_xpc_type_activity;
}

const char *SubmitEventsActivityConfig.identifier.unsafeMutableAddressor()
{
  return "submit";
}

uint64_t static SubmitEventsActivityConfig.identifier.getter()
{
  return 0x74696D627573;
}

uint64_t sub_10008246C()
{
  sub_10000A390(&qword_1000B0570);
  uint64_t v0 = sub_10000A390(&qword_1000B0578);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v0 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100091160;
  uint64_t v4 = (const char **)(v3 + v2);
  uint64_t v5 = (char *)v4 + *(int *)(v0 + 48);
  *uint64_t v4 = XPC_ACTIVITY_REPEATING;
  unsigned char *v5 = 1;
  type metadata accessor for XPCObject();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (const char **)((char *)v4 + v1 + *(int *)(v0 + 48));
  *(const char **)((char *)v4 + v1) = XPC_ACTIVITY_DELAY;
  void *v6 = 86400;
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (const char **)((char *)v4 + 2 * v1);
  uint64_t v8 = (const char **)((char *)v7 + *(int *)(v0 + 48));
  void *v7 = XPC_ACTIVITY_GRACE_PERIOD;
  *uint64_t v8 = 43200;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (const char **)((char *)v4 + 3 * v1);
  uint64_t v10 = (uint64_t *)((char *)v9 + *(int *)(v0 + 48));
  uint64_t *v9 = XPC_ACTIVITY_PRIORITY;
  *uint64_t v10 = sub_10008C0A0();
  v10[1] = v11;
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (const char **)((char *)v4 + 4 * v1);
  uint64_t v13 = (char *)v12 + *(int *)(v0 + 48);
  *uint64_t v12 = XPC_ACTIVITY_ALLOW_BATTERY;
  unsigned char *v13 = 0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_POWER_NAP)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v15 = (const char **)((char *)v4 + 5 * v1);
  uint64_t v16 = (char *)v15 + *(int *)(v0 + 48);
  *uint64_t v15 = XPC_ACTIVITY_POWER_NAP;
  unsigned char *v16 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_RANDOM_INITIAL_DELAY)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = (const char **)((char *)v4 + 6 * v1);
  uint64_t v18 = (void *)((char *)v17 + *(int *)(v0 + 48));
  *uint64_t v17 = XPC_ACTIVITY_RANDOM_INITIAL_DELAY;
  *uint64_t v18 = 43200;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v19 = (const char **)((char *)&v4[v1] - v1);
  uint64_t v20 = (char *)v19 + *(int *)(v0 + 48);
  *uint64_t v19 = XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY;
  unsigned char *v20 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v21 = &v4[v1];
  uint64_t v22 = (char *)v21 + *(int *)(v0 + 48);
  uint64_t *v21 = (const char *)XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY;
  *uint64_t v22 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_NETWORK_UPLOAD_SIZE)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v23 = (const char **)((char *)v4 + 9 * v1);
  uint64_t v24 = (void *)((char *)v23 + *(int *)(v0 + 48));
  *char v23 = XPC_ACTIVITY_NETWORK_UPLOAD_SIZE;
  *uint64_t v24 = 5242880;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_EXPECTED_DURATION)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v25 = (const char **)((char *)v4 + 10 * v1);
  uint64_t v26 = (void *)((char *)v25 + *(int *)(v0 + 48));
  *uint64_t v25 = XPC_ACTIVITY_EXPECTED_DURATION;
  *uint64_t v26 = XPC_ACTIVITY_INTERVAL_5_MIN;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_GROUP_NAME)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v27 = (const char **)((char *)v4 + 11 * v1);
  uint64_t v28 = (void *)((char *)v27 + *(int *)(v0 + 48));
  *uint64_t v27 = XPC_ACTIVITY_GROUP_NAME;
  *uint64_t v28 = 0xD000000000000025;
  v28[1] = 0x80000001000945D0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (XPC_ACTIVITY_GROUP_CONCURRENCY_LIMIT)
  {
    uint64_t v29 = (const char **)((char *)v4 + 12 * v1);
    os_log_type_t v30 = (void *)((char *)v29 + *(int *)(v0 + 48));
    *uint64_t v29 = XPC_ACTIVITY_GROUP_CONCURRENCY_LIMIT;
    *os_log_type_t v30 = 1;
    swift_storeEnumTagMultiPayload();
    unint64_t v31 = sub_100082B34(v3);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t result = swift_deallocClassInstance();
    static SubmitEventsActivityConfig.activityFlags = v31;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t *SubmitEventsActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_1000B6700 != -1) {
    swift_once();
  }
  return &static SubmitEventsActivityConfig.activityFlags;
}

uint64_t static SubmitEventsActivityConfig.activityFlags.getter()
{
  if (qword_1000B6700 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SubmitEventsActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_1000B6700 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static SubmitEventsActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SubmitEventsActivityConfig.activityFlags.modify())()
{
  if (qword_1000B6700 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for SubmitEventsActivityConfig()
{
  return &type metadata for SubmitEventsActivityConfig;
}

unint64_t sub_100082A54(uint64_t a1)
{
  uint64_t v2 = sub_10008C8E0();
  return sub_100082A98(a1, v2);
}

unint64_t sub_100082A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100082B34(uint64_t a1)
{
  uint64_t v2 = sub_10000A390(&qword_1000B0578);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_10000A390(&qword_1000B0580);
    uint64_t v7 = (void *)sub_10008C680();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_100082CDC(v9, (uint64_t)v5);
      uint64_t v11 = *v5;
      unint64_t result = sub_100082A54(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for XPCObject();
      unint64_t result = sub_10002FAEC(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_100082CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000B0578);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *XPCObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (uint64_t *)((char *)&v33 - v9);
  __chkstk_darwin(v8);
  char v13 = (uint64_t *)((char *)&v33 - v12);
  if (a1)
  {
    uint64_t v34 = v11;
    unint64_t v14 = (void *)swift_unknownObjectRetain();
    xpc_type_t type = xpc_get_type(v14);
    if (XPCTypeNull.getter() == type)
    {
      swift_unknownObjectRelease_n();
    }
    else
    {
      if (XPCTypeConnection.getter() == type || XPCTypeEndpoint.getter() == type)
      {
LABEL_37:
        swift_unknownObjectRelease();
        void *v13 = a1;
        goto LABEL_28;
      }
      if (XPCTypeBool.getter() == type)
      {
        BOOL value = xpc_BOOL_get_value(a1);
        swift_unknownObjectRelease_n();
        *(unsigned char *)char v13 = value;
      }
      else if (XPCTypeInt64.getter() == type)
      {
        int64_t v20 = xpc_int64_get_value(a1);
        swift_unknownObjectRelease_n();
        void *v13 = v20;
      }
      else if (XPCTypeUInt64.getter() == type)
      {
        uint64_t v21 = xpc_uint64_get_value(a1);
        swift_unknownObjectRelease_n();
        void *v13 = v21;
      }
      else if (XPCTypeDouble.getter() == type)
      {
        double v22 = xpc_double_get_value(a1);
        swift_unknownObjectRelease_n();
        *(double *)char v13 = v22;
      }
      else
      {
        if (XPCTypeDate.getter() != type)
        {
          if (XPCTypeData.getter() == type)
          {
            unint64_t result = xpc_data_get_bytes_ptr(a1);
            if (result)
            {
              uint64_t v24 = result;
              size_t length = xpc_data_get_length(a1);
              uint64_t v26 = sub_1000840B4(v24, length);
              uint64_t v28 = v27;
              swift_unknownObjectRelease_n();
              *uint64_t v10 = v26;
              v10[1] = v28;
              swift_storeEnumTagMultiPayload();
              uint64_t v29 = (uint64_t)v10;
LABEL_34:
              sub_10002FAEC(v29, (uint64_t)v13);
              goto LABEL_29;
            }
            __break(1u);
          }
          else
          {
            if (XPCTypeString.getter() != type)
            {
              if (XPCTypeUUID.getter() != type)
              {
                if (XPCTypeShmem.getter() != type && XPCTypeArray.getter() != type)
                {
                  xpc_type_t v16 = (xpc_type_t)XPCTypeDictionary.getter();
                  swift_unknownObjectRelease();
                  if (v16 != type)
                  {
                    swift_unknownObjectRelease();
                    uint64_t v11 = v34;
                    goto LABEL_17;
                  }
                  void *v13 = a1;
                  goto LABEL_28;
                }
                goto LABEL_37;
              }
              unint64_t result = xpc_uuid_get_bytes(a1);
              if (result)
              {
                sub_10008BBF0();
                swift_unknownObjectRelease_n();
                goto LABEL_28;
              }
LABEL_41:
              __break(1u);
              return result;
            }
            unint64_t result = xpc_string_get_string_ptr(a1);
            if (result)
            {
              uint64_t v30 = sub_10008C0A0();
              uint64_t v32 = v31;
              swift_unknownObjectRelease_n();
              uint64_t *v7 = v30;
              v7[1] = v32;
              swift_storeEnumTagMultiPayload();
              uint64_t v29 = (uint64_t)v7;
              goto LABEL_34;
            }
          }
          __break(1u);
          goto LABEL_41;
        }
        int64_t v23 = xpc_date_get_value(a1);
        swift_unknownObjectRelease_n();
        void *v13 = v23;
      }
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
LABEL_29:
    sub_10002FAEC((uint64_t)v13, a2);
    return (unsigned char *)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(a2, 0, 1, v4);
  }
LABEL_17:
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  return (unsigned char *)v17(a2, 1, 1, v4);
}

uint64_t type metadata accessor for XPCObject()
{
  uint64_t result = qword_1000B6810;
  if (!qword_1000B6810) {
    return swift_getSingletonMetadata();
  }
  return result;
}

xpc_object_t XPCObject.obj.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10008BC20();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &uuid[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = type metadata accessor for XPCObject();
  __chkstk_darwin(v6);
  uint64_t v8 = &uuid[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10002FB50(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      return xpc_BOOL_create(*v8);
    case 3u:
      return xpc_int64_create(*(void *)v8);
    case 4u:
      return xpc_uint64_create(*(void *)v8);
    case 5u:
      return xpc_double_create(*(double *)v8);
    case 6u:
      return xpc_date_create(*(void *)v8);
    case 7u:
      uint64_t v12 = *(void *)v8;
      unint64_t v11 = *((void *)v8 + 1);
      switch(v11 >> 62)
      {
        case 1uLL:
          if (v12 >> 32 < (int)v12)
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          sub_10000A494(v12, v11);
          double v22 = (char *)sub_10008B830();
          if (!v22) {
            goto LABEL_18;
          }
          uint64_t v23 = sub_10008B860();
          if (__OFSUB__((int)v12, v23))
          {
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
          }
          v22 += (int)v12 - v23;
LABEL_18:
          uint64_t v24 = sub_10008B850();
          if (v24 >= (v12 >> 32) - (int)v12) {
            uint64_t v25 = (v12 >> 32) - (int)v12;
          }
          else {
            uint64_t v25 = v24;
          }
          if (v22) {
            size_t v26 = v25;
          }
          else {
            size_t v26 = 0;
          }
          xpc_object_t v9 = xpc_data_create(v22, v26);
          sub_10000A43C(v12, v11);
LABEL_38:
          sub_10000A43C(v12, v11);
          return v9;
        case 2uLL:
          uint64_t v27 = *(void *)(v12 + 16);
          uint64_t v28 = *(void *)(v12 + 24);
          swift_retain();
          swift_retain();
          uint64_t v29 = (char *)sub_10008B830();
          if (!v29) {
            goto LABEL_28;
          }
          uint64_t v30 = sub_10008B860();
          if (__OFSUB__(v27, v30)) {
            goto LABEL_42;
          }
          v29 += v27 - v30;
LABEL_28:
          BOOL v31 = __OFSUB__(v28, v27);
          uint64_t v32 = v28 - v27;
          if (v31) {
            goto LABEL_40;
          }
          uint64_t v33 = sub_10008B850();
          if (v33 >= v32) {
            size_t v34 = v32;
          }
          else {
            size_t v34 = v33;
          }
          if (v29) {
            size_t v35 = v34;
          }
          else {
            size_t v35 = 0;
          }
          xpc_object_t v9 = xpc_data_create(v29, v35);
          swift_release();
          swift_release();
          goto LABEL_38;
        case 3uLL:
          memset(uuid, 0, 14);
          size_t v13 = 0;
          goto LABEL_37;
        default:
          *(void *)uuid = *(void *)v8;
          *(_WORD *)&uuid[8] = v11;
          uuid[10] = BYTE2(v11);
          uuid[11] = BYTE3(v11);
          uuid[12] = BYTE4(v11);
          size_t v13 = BYTE6(v11);
          uuid[13] = BYTE5(v11);
LABEL_37:
          xpc_object_t v9 = xpc_data_create(uuid, v13);
          goto LABEL_38;
      }
    case 8u:
      uint64_t v14 = sub_10008C030();
      swift_bridgeObjectRelease();
      xpc_object_t v9 = xpc_string_create((const char *)(v14 + 32));
      swift_release();
      return v9;
    case 9u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v3 + 32))(v5, v8, v2);
      *(void *)uuid = sub_10008BC00();
      *(_WORD *)&uuid[8] = v15;
      uuid[10] = v16;
      uuid[11] = v17;
      uuid[12] = v18;
      uuid[13] = v19;
      uuid[14] = v20;
      uuid[15] = v21;
      xpc_object_t v9 = xpc_uuid_create(uuid);
      (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(v5, v2);
      return v9;
    case 0xDu:
      return xpc_null_create();
    default:
      return *(xpc_object_t *)v8;
  }
}

BOOL static XPCObject.== infix(_:_:)()
{
  xpc_object_t v0 = XPCObject.obj.getter();
  xpc_object_t v1 = XPCObject.obj.getter();
  BOOL v2 = xpc_equal(v0, v1);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v2;
}

xpc_object_t XPCDictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  xpc_object_t v1 = sub_100084168(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t XPCDictionary.subscript.setter(uint64_t a1)
{
  uint64_t v3 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  sub_100079D20(a1, (uint64_t)v5, (uint64_t *)&unk_1000AF140);
  uint64_t v7 = type metadata accessor for XPCObject();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_10000CC24((uint64_t)v5, (uint64_t *)&unk_1000AF140);
    xpc_object_t v8 = 0;
  }
  else
  {
    xpc_object_t v8 = XPCObject.obj.getter();
    sub_10002FBB4((uint64_t)v5);
  }
  uint64_t v9 = sub_10008C030();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_value(v6, (const char *)(v9 + 32), v8);
  swift_unknownObjectRelease();
  sub_10000CC24(a1, (uint64_t *)&unk_1000AF140);
  return swift_release();
}

uint64_t XPCDictionary.keys.getter(void *a1)
{
  int64_t count = xpc_dictionary_get_count(a1);
  uint64_t v3 = _swiftEmptyArrayStorage;
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || count > _swiftEmptyArrayStorage[3] >> 1)
  {
    if (_swiftEmptyArrayStorage[2] <= count) {
      int64_t v5 = count;
    }
    else {
      int64_t v5 = _swiftEmptyArrayStorage[2];
    }
    uint64_t v3 = sub_10002863C(isUniquelyReferenced_nonNull_native, v5, 0, _swiftEmptyArrayStorage);
  }
  size_t v13 = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &v13;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100084518;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_100038F18;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100035900;
  aBlock[3] = &unk_1000AA300;
  xpc_object_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_dictionary_apply(a1, v8);
  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    swift_release();
    return (uint64_t)v11;
  }
  return result;
}

unsigned char *XPCDictionary.subscript.getter@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10008C030();
  xpc_object_t v5 = xpc_dictionary_get_value(a1, (const char *)(v4 + 32));
  swift_release();
  return XPCObject.init(_:)(v5, a2);
}

void (*XPCDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  void *v7 = a2;
  size_t v8 = *(void *)(*(void *)(sub_10000A390((uint64_t *)&unk_1000AF140) - 8) + 64);
  v7[3] = malloc(v8);
  v7[4] = malloc(v8);
  _OWORD v7[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v7[6] = v9;
  uint64_t v10 = *v3;
  uint64_t v11 = sub_10008C030();
  xpc_object_t v12 = xpc_dictionary_get_value(v10, (const char *)(v11 + 32));
  swift_release();
  XPCObject.init(_:)(v12, (uint64_t)v9);
  return sub_100083C24;
}

void sub_100083C24(uint64_t a1, char a2)
{
  BOOL v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 48);
  if (a2)
  {
    uint64_t v5 = v2[3];
    uint64_t v4 = v2[4];
    uint64_t v6 = (void **)v2[2];
    sub_100079D20(v3, v4, (uint64_t *)&unk_1000AF140);
    uint64_t v7 = *v6;
    sub_100079D20(v4, v5, (uint64_t *)&unk_1000AF140);
    uint64_t v8 = type metadata accessor for XPCObject();
    LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8);
    swift_bridgeObjectRetain();
    uint64_t v9 = v2[3];
    if (v5 == 1)
    {
      sub_10000CC24(v2[3], (uint64_t *)&unk_1000AF140);
      xpc_object_t v10 = 0;
    }
    else
    {
      xpc_object_t v10 = XPCObject.obj.getter();
      sub_10002FBB4(v9);
    }
    unsigned __int8 v18 = (void *)v2[5];
    unsigned __int8 v17 = (void *)v2[6];
    unsigned __int8 v20 = (void *)v2[3];
    unsigned __int8 v19 = (void *)v2[4];
    uint64_t v21 = sub_10008C030();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v7, (const char *)(v21 + 32), v10);
    swift_unknownObjectRelease();
    sub_10000CC24((uint64_t)v19, (uint64_t *)&unk_1000AF140);
    swift_release();
    sub_10000CC24((uint64_t)v17, (uint64_t *)&unk_1000AF140);
  }
  else
  {
    uint64_t v11 = v2[5];
    xpc_object_t v12 = *(void **)v2[2];
    sub_100079D20(v3, v11, (uint64_t *)&unk_1000AF140);
    uint64_t v13 = type metadata accessor for XPCObject();
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13);
    swift_bridgeObjectRetain();
    uint64_t v15 = v2[5];
    if (v14 == 1)
    {
      sub_10000CC24(v2[5], (uint64_t *)&unk_1000AF140);
      xpc_object_t v16 = 0;
    }
    else
    {
      xpc_object_t v16 = XPCObject.obj.getter();
      sub_10002FBB4(v15);
    }
    unsigned __int8 v18 = (void *)v2[5];
    unsigned __int8 v17 = (void *)v2[6];
    unsigned __int8 v20 = (void *)v2[3];
    unsigned __int8 v19 = (void *)v2[4];
    uint64_t v22 = sub_10008C030();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v12, (const char *)(v22 + 32), v16);
    swift_unknownObjectRelease();
    sub_10000CC24((uint64_t)v17, (uint64_t *)&unk_1000AF140);
    swift_release();
  }
  free(v17);
  free(v18);
  free(v19);
  free(v20);
  free(v2);
}

Swift::Bool __swiftcall XPCDictionary.contains(key:)(Swift::String key)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10008C030();
  xpc_object_t v7 = xpc_dictionary_get_value(v2, (const char *)(v6 + 32));
  swift_release();
  XPCObject.init(_:)(v7, (uint64_t)v5);
  uint64_t v8 = type metadata accessor for XPCObject();
  LOBYTE(v7) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  sub_10000CC24((uint64_t)v5, (uint64_t *)&unk_1000AF140);
  return (char)v7;
}

uint64_t sub_100083FB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  xpc_object_t v3 = sub_100084168(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_100083FF0(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1000840B4(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_100083FF0(__src, &__src[a2]);
  }
  sub_10008B870();
  swift_allocObject();
  sub_10008B820();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_10008BAA0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

xpc_object_t sub_100084168(uint64_t a1)
{
  uint64_t v2 = sub_10000A390((uint64_t *)&unk_1000AF140);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  xpc_object_t v7 = (char *)&v37 - v6;
  uint64_t v44 = sub_10000A390(&qword_1000B0628);
  uint64_t v8 = *(void *)(v44 - 8);
  uint64_t v9 = __chkstk_darwin(v44);
  uint64_t v42 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v41 = (uint64_t *)((char *)&v37 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  __chkstk_darwin(v13);
  uint64_t v43 = (uint64_t *)((char *)&v37 - v16);
  xpc_object_t empty = xpc_dictionary_create_empty();
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v40 = (uint64_t)v43 + *(int *)(v44 + 48);
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v19 = *(void *)(v8 + 72);
    unint64_t v38 = v15;
    uint64_t v39 = v19;
    do
    {
      uint64_t v22 = v43;
      sub_100079D20(v18, (uint64_t)v43, &qword_1000B0628);
      uint64_t v23 = v44;
      uint64_t v24 = (uint64_t)&v15[*(int *)(v44 + 48)];
      uint64_t v25 = (uint64_t *)v15;
      uint64_t v26 = *v22;
      uint64_t v27 = v22[1];
      *uint64_t v25 = *v22;
      v25[1] = v27;
      sub_10002FAEC(v40, v24);
      uint64_t v28 = *(int *)(v23 + 48);
      uint64_t v29 = v41;
      uint64_t v30 = (uint64_t)v41 + v28;
      *uint64_t v41 = v26;
      v29[1] = v27;
      uint64_t v46 = (uint64_t)v29 + v28;
      sub_10002FB50(v24, v30);
      uint64_t v31 = *(int *)(v23 + 48);
      uint64_t v32 = v42;
      uint64_t v33 = (uint64_t)v42 + v31;
      *uint64_t v42 = v26;
      v32[1] = v27;
      sub_10002FB50(v24, (uint64_t)v32 + v31);
      sub_10002FAEC(v33, (uint64_t)v7);
      uint64_t v34 = type metadata accessor for XPCObject();
      uint64_t v35 = *(void *)(v34 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v7, 0, 1, v34);
      sub_100079D20((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1000AF140);
      LODWORD(v34) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v5, 1, v34);
      swift_bridgeObjectRetain();
      if (v34 == 1)
      {
        sub_10000CC24((uint64_t)v5, (uint64_t *)&unk_1000AF140);
        xpc_object_t v20 = 0;
      }
      else
      {
        xpc_object_t v20 = XPCObject.obj.getter();
        sub_10002FBB4((uint64_t)v5);
      }
      uint64_t v21 = sub_10008C030();
      swift_bridgeObjectRelease();
      xpc_dictionary_set_value(empty, (const char *)(v21 + 32), v20);
      swift_unknownObjectRelease();
      sub_10000CC24((uint64_t)v7, (uint64_t *)&unk_1000AF140);
      swift_release();
      uint64_t v15 = v38;
      sub_10000CC24((uint64_t)v38, &qword_1000B0628);
      sub_10002FBB4(v46);
      v18 += v39;
      --v17;
    }
    while (v17);
  }
  return empty;
}

uint64_t sub_100084508()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100084518()
{
  xpc_object_t v1 = *(void ***)(v0 + 16);
  uint64_t v2 = sub_10008C0A0();
  uint64_t v4 = v3;
  char v5 = *v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *xpc_object_t v1 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v5 = sub_10002863C(0, v5[2] + 1, 1, v5);
    *xpc_object_t v1 = v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    char v5 = sub_10002863C((void *)(v7 > 1), v8 + 1, 1, v5);
    *xpc_object_t v1 = v5;
  }
  v5[2] = v8 + 1;
  uint64_t v9 = &v5[2 * v8];
  void v9[4] = v2;
  v9[5] = v4;
  return 1;
}

uint64_t sub_1000845D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000845E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000845F0()
{
  return swift_release();
}

uint64_t *initializeBufferWithCopyOfBuffer for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        swift_unknownObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v10 = *a2;
        unint64_t v9 = a2[1];
        sub_10000A494(v10, v9);
        *a1 = v10;
        a1[1] = v9;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v12 = sub_10008BC20();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for XPCObject(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 10:
    case 11:
    case 12:
      uint64_t result = swift_unknownObjectRelease();
      break;
    case 7:
      uint64_t v3 = *a1;
      unint64_t v4 = a1[1];
      uint64_t result = sub_10000A43C(v3, v4);
      break;
    case 8:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 9:
      uint64_t v5 = sub_10008BC20();
      uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t result = v6(a1, v5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
      *a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_7;
    case 7u:
      uint64_t v7 = *a2;
      unint64_t v6 = a2[1];
      sub_10000A494(v7, v6);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_7;
    case 8u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 9u:
      uint64_t v9 = sub_10008BC20();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for XPCObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002FBB4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_8;
      case 7u:
        uint64_t v7 = *a2;
        unint64_t v6 = a2[1];
        sub_10000A494(v7, v6);
        *a1 = v7;
        a1[1] = v6;
        goto LABEL_8;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 9u:
        uint64_t v8 = sub_10008BC20();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for XPCObject(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    uint64_t v6 = sub_10008BC20();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for XPCObject(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002FBB4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      uint64_t v6 = sub_10008BC20();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100084EB8()
{
  uint64_t result = sub_10008BC20();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCDictionary()
{
  return &type metadata for XPCDictionary;
}

uint64_t sub_100084F94(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_100084FC8()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B6828);
  sub_10000A358(v0, (uint64_t)qword_1000B6828);
  return sub_10008BD40();
}

uint64_t sub_100085040()
{
  return swift_retain();
}

uint64_t sub_100085078(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return swift_release();
}

uint64_t (*sub_1000850C0())()
{
  return j__swift_endAccess;
}

uint64_t sub_100085114()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_100085148(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 136) = a1;
  return result;
}

uint64_t *XPCActivity.makeHandler.unsafeMutableAddressor()
{
  return &static XPCActivity.makeHandler;
}

uint64_t static XPCActivity.makeHandler.getter()
{
  swift_beginAccess();
  uint64_t v0 = static XPCActivity.makeHandler;
  sub_1000851EC(static XPCActivity.makeHandler);
  return v0;
}

uint64_t sub_1000851EC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t static XPCActivity.makeHandler.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = static XPCActivity.makeHandler;
  static XPCActivity.makeHandler = a1;
  qword_1000B6EC8 = a2;
  sub_1000851EC(a1);
  sub_1000300C8(v4);
  return sub_1000300C8(a1);
}

uint64_t (*static XPCActivity.makeHandler.modify())()
{
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall XPCActivity.register(disabled:)(Swift::Bool_optional disabled)
{
  uint64_t v2 = v1;
  id v4 = [self mainBundle];
  id v5 = [v4 bundleIdentifier];

  if (v5)
  {
    uint64_t v6 = sub_10008BFB0();
    uint64_t v8 = v7;

    if (disabled.value != 2) {
      (*(void (**)(Swift::Bool))(*v2 + 144))(disabled.value);
    }
    sub_10008C540(20);
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0x6C655464756F6C43;
    unint64_t v22 = 0xEF2E797274656D65;
    v29._countAndFlagsBits = v6;
    v29._object = v8;
    sub_10008C090(v29);
    swift_bridgeObjectRelease();
    v30._countAndFlagsBits = 46;
    v30._object = (void *)0xE100000000000000;
    sub_10008C090(v30);
    v31._countAndFlagsBits = (*(uint64_t (**)(void))(v2[15] + 32))();
    sub_10008C090(v31);
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_1000870CC;
    uint64_t v26 = v2;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v22 = 1107296256;
    uint64_t v23 = sub_100085804;
    uint64_t v24 = &unk_1000AA350;
    uint64_t v9 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v10 = sub_10008C030();
    xpc_activity_register((const char *)(v10 + 32), XPC_ACTIVITY_CHECK_IN, v9);
    swift_release();
    _Block_release(v9);
    if (qword_1000B6820 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10008BD50();
    sub_10000A358(v11, (uint64_t)qword_1000B6828);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10008BD30();
    os_log_type_t v13 = sub_10008C2E0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_100009D00(0x6C655464756F6C43, 0xEF2E797274656D65, &aBlock);
      sub_10008C440();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "registered: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_1000B6820 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_10008BD50();
    sub_10000A358(v15, (uint64_t)qword_1000B6828);
    swift_retain_n();
    osos_log_t log = sub_10008BD30();
    os_log_type_t v16 = sub_10008C2E0();
    if (os_log_type_enabled(oslog, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v18 = (*(uint64_t (**)(void))(v2[15] + 32))();
      uint64_t v27 = sub_100009D00(v18, v19, &aBlock);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, "unable to register: %s, nil bundleIdentifier", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }
  }
}

uint64_t sub_100085804(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_100085864()
{
  uint64_t v1 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for XPCObject();
  uint64_t v4 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A390(&qword_1000B0890);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (int64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 24);
  uint64_t v16 = *(void *)(v15(v13, v14) + 16);
  swift_bridgeObjectRelease();
  if (!v16) {
    return 0;
  }
  xpc_object_t v40 = XPCDictionary.init()();
  uint64_t result = v15(v13, v14);
  int64_t v39 = 0;
  uint64_t v18 = *(void *)(result + 64);
  uint64_t v34 = result + 64;
  uint64_t v19 = 1 << *(unsigned char *)(result + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  unint64_t v22 = (void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
  int64_t v35 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v36 = result;
  int64_t v33 = v35 - 1;
  uint64_t v37 = v4;
  if ((v20 & v18) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v23 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v24 = v23 | (v39 << 6);
  while (2)
  {
    uint64_t v25 = *(void *)(v36 + 56);
    *uint64_t v10 = *(void *)(*(void *)(v36 + 48) + 8 * v24);
    uint64_t v26 = v25 + *(void *)(v4 + 72) * v24;
    uint64_t v27 = sub_10000A390(&qword_1000B0898);
    sub_10002FB50(v26, (uint64_t)v10 + *(int *)(v27 + 48));
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 0, 1, v27);
    while (1)
    {
      sub_100087640((uint64_t)v10, (uint64_t)v12);
      uint64_t v32 = sub_10000A390(&qword_1000B0898);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v12, 1, v32) == 1)
      {
        swift_release();
        return (uint64_t)v40;
      }
      sub_10002FAEC((uint64_t)&v12[*(int *)(v32 + 48)], (uint64_t)v6);
      sub_10008C0A0();
      sub_10002FB50((uint64_t)v6, (uint64_t)v3);
      (*v22)(v3, 0, 1, v38);
      XPCDictionary.subscript.setter((uint64_t)v3);
      uint64_t result = sub_10002FBB4((uint64_t)v6);
      uint64_t v4 = v37;
      if (v21) {
        goto LABEL_7;
      }
LABEL_9:
      int64_t v28 = v39 + 1;
      if (__OFADD__(v39, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v28 < v35)
      {
        unint64_t v29 = *(void *)(v34 + 8 * v28);
        if (v29) {
          goto LABEL_12;
        }
        int64_t v30 = v39 + 2;
        ++v39;
        if (v28 + 1 < v35)
        {
          unint64_t v29 = *(void *)(v34 + 8 * v30);
          if (v29) {
            goto LABEL_15;
          }
          int64_t v39 = v28 + 1;
          if (v28 + 2 < v35)
          {
            unint64_t v29 = *(void *)(v34 + 8 * (v28 + 2));
            if (v29)
            {
              v28 += 2;
              goto LABEL_12;
            }
            int64_t v30 = v28 + 3;
            int64_t v39 = v28 + 2;
            if (v28 + 3 < v35) {
              break;
            }
          }
        }
      }
LABEL_26:
      uint64_t v31 = sub_10000A390(&qword_1000B0898);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 1, 1, v31);
      unint64_t v21 = 0;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v30);
    if (v29)
    {
LABEL_15:
      int64_t v28 = v30;
LABEL_12:
      unint64_t v21 = (v29 - 1) & v29;
      unint64_t v24 = __clz(__rbit64(v29)) + (v28 << 6);
      int64_t v39 = v28;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v35)
    {
      int64_t v39 = v33;
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_100085D0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A390(&qword_1000AE3A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for XPCActivityHandle();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  uint64_t v8 = (_xpc_activity_s *)swift_unknownObjectRetain();
  xpc_activity_state_t state = xpc_activity_get_state(v8);
  if (state == 2)
  {
    if (qword_1000B6820 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10008BD50();
    sub_10000A358(v16, (uint64_t)qword_1000B6828);
    swift_retain_n();
    uint64_t v17 = sub_10008BD30();
    os_log_type_t v18 = sub_10008C310();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v20 = (*(uint64_t (**)(void))(*(void *)(v2 + 120) + 32))();
      uint64_t v37 = sub_100009D00(v20, v21, &v38);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "run: %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v31 = *(_xpc_activity_s **)(v7 + 16);
    if (xpc_activity_should_defer(v31))
    {
      xpc_activity_set_state(v31, 3);
    }
    else
    {
      xpc_activity_set_state(v31, 4);
      uint64_t v33 = sub_10008C220();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v6, 1, 1, v33);
      uint64_t v34 = (void *)swift_allocObject();
      id v34[2] = 0;
      v34[3] = 0;
      v34[4] = v2;
      v34[5] = v7;
      swift_retain();
      sub_1000198D0((uint64_t)v6, (uint64_t)&unk_1000B0880, (uint64_t)v34);
    }
    goto LABEL_28;
  }
  if (!state)
  {
    if (qword_1000B6820 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10008BD50();
    sub_10000A358(v10, (uint64_t)qword_1000B6828);
    swift_retain_n();
    uint64_t v11 = sub_10008BD30();
    os_log_type_t v12 = sub_10008C2E0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v14 = (*(uint64_t (**)(void))(*(void *)(v2 + 120) + 32))();
      uint64_t v37 = sub_100009D00(v14, v15, &v38);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "checkin: %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v28 = sub_100085864();
    if (v28)
    {
      unint64_t v29 = (void *)v28;
      xpc_object_t v30 = xpc_activity_copy_criteria(*(xpc_activity_t *)(v7 + 16));
      swift_unknownObjectRelease();
      if (!v30) {
        xpc_activity_set_criteria(*(xpc_activity_t *)(v7 + 16), v29);
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_28;
  }
  if (qword_1000B6820 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_10008BD50();
  sub_10000A358(v22, (uint64_t)qword_1000B6828);
  swift_retain_n();
  swift_retain_n();
  uint64_t v36 = sub_10008BD30();
  os_log_type_t v23 = sub_10008C2F0();
  if (os_log_type_enabled(v36, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v25 = (*(uint64_t (**)(void))(*(void *)(v2 + 120) + 32))();
    uint64_t v37 = sub_100009D00(v25, v26, &v38);
    sub_10008C440();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v24 + 12) = 2048;
    xpc_activity_state_t v27 = xpc_activity_get_state(*(xpc_activity_t *)(v7 + 16));
    swift_release();
    uint64_t v37 = v27;
    sub_10008C440();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v36, v23, "activity: %s, encountered unrecognized XPC activity state: %ld", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_28:
    swift_release();
    return;
  }
  swift_release_n();
  swift_release_n();
  uint64_t v32 = v36;
}

uint64_t sub_1000863B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1000863D4, a4);
}

uint64_t sub_1000863D4()
{
  sub_100086434(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100086434(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_10000A390(&qword_1000AE3A0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t))(v4 + 136))(v6))
  {
    xpc_activity_set_state(*(xpc_activity_t *)(a1 + 16), 5);
    if (qword_1000B6820 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10008BD50();
    sub_10000A358(v9, (uint64_t)qword_1000B6828);
    swift_retain_n();
    v21[0] = (id)sub_10008BD30();
    os_log_type_t v10 = sub_10008C2F0();
    if (os_log_type_enabled((os_log_t)v21[0], v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v12 = (*(uint64_t (**)(void))(v1[15] + 32))();
      v21[1] = (id)sub_100009D00(v12, v13, aBlock);
      sub_10008C440();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v21[0], v10, "disabled: skipping %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      id v20 = v21[0];
    }
  }
  else
  {
    aBlock[4] = (uint64_t)sub_100087130;
    aBlock[5] = (uint64_t)v1;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100085804;
    aBlock[3] = (uint64_t)&unk_1000AA378;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v15 = xpc_activity_add_eligibility_changed_handler();
    _Block_release(v14);
    uint64_t v16 = sub_10008C220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
    unint64_t v17 = sub_100087138();
    os_log_type_t v18 = (void *)swift_allocObject();
    void v18[2] = v2;
    v18[3] = v17;
    v18[4] = v15;
    v18[5] = a1;
    v18[6] = v2;
    v18[7] = v4;
    swift_retain_n();
    swift_retain();
    uint64_t v19 = sub_100008630((uint64_t)v8, (uint64_t)&unk_1000B0858, (uint64_t)v18);
    (*(void (**)(uint64_t))(*v2 + 120))(v19);
  }
}

uint64_t sub_100086814(_xpc_activity_s *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000AE3A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = xpc_activity_should_defer(a1);
  if (result)
  {
    uint64_t v8 = sub_10008C220();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = 0;
    _OWORD v9[3] = 0;
    void v9[4] = a2;
    swift_retain();
    sub_1000198D0((uint64_t)v6, (uint64_t)&unk_1000B0868, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_100086924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100086944, a4);
}

uint64_t sub_100086944()
{
  if ((*(uint64_t (**)(void))(**(void **)(v0 + 16) + 112))())
  {
    uint64_t v1 = *(void *)(v0 + 16);
    sub_10000A390(&qword_1000B0870);
    sub_10008C240();
    (*(void (**)(void))(*(void *)v1 + 120))(0);
    swift_release();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100086A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  return _swift_task_switch(sub_100086A50, a6);
}

uint64_t sub_100086A50()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = (int *)static XPCActivity.makeHandler;
  v0[11] = static XPCActivity.makeHandler;
  if (v2)
  {
    uint64_t v3 = v0[10];
    v0[12] = qword_1000B6EC8;
    uint64_t v4 = *(void *)(v3 + 112);
    uint64_t v5 = *(void *)(v3 + 120);
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v2 + *v2);
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[13] = v6;
    void *v6 = v0;
    v6[1] = sub_100086B78;
    uint64_t v7 = v0[10];
    return v8(v4, v5, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100086B78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[5] = v2;
  v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = v3[11];
  uint64_t v6 = v3[10];
  v4[14] = a1;
  swift_task_dealloc();
  sub_1000300C8(v5);
  return _swift_task_switch(sub_100086CD4, v6);
}

uint64_t sub_100086CD4()
{
  sub_10008C270();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100086E40;
  return v5(ObjectType, v1);
}

uint64_t sub_100086E40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  return _swift_task_switch(sub_100086F50, v1);
}

uint64_t sub_100086F50()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  swift_unknownObjectRelease();
  sub_100087290(v3, v1, v2);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t XPCActivity.__allocating_init(handlerType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 120) = a2;
  *(void *)(v4 + 128) = 0;
  *(unsigned char *)(v4 + 136) = 0;
  *(void *)(v4 + 112) = a1;
  return v4;
}

uint64_t XPCActivity.init(handlerType:)(uint64_t a1, uint64_t a2)
{
  swift_defaultActor_initialize();
  *(void *)(v2 + 120) = a2;
  *(void *)(v2 + 128) = 0;
  *(unsigned char *)(v2 + 136) = 0;
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t XPCActivity.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t XPCActivity.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1000870D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000870E0()
{
  return swift_release();
}

uint64_t type metadata accessor for XPCActivityHandle()
{
  return self;
}

uint64_t type metadata accessor for XPCActivity()
{
  return self;
}

uint64_t sub_100087130(_xpc_activity_s *a1)
{
  return sub_100086814(a1, v1);
}

unint64_t sub_100087138()
{
  unint64_t result = qword_1000B0850;
  if (!qword_1000B0850)
  {
    type metadata accessor for XPCActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B0850);
  }
  return result;
}

uint64_t sub_10008718C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000871D4()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_10000AA94;
  v5[9] = v3;
  v5[10] = v4;
  v5[8] = v2;
  return _swift_task_switch(sub_100086A50, v4);
}

void sub_100087290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    xpc_activity_remove_eligibility_changed_handler();
  }
  xpc_activity_set_state(*(xpc_activity_t *)(a2 + 16), 5);
  if (qword_1000B6820 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10008BD50();
  sub_10000A358(v5, (uint64_t)qword_1000B6828);
  swift_retain_n();
  uint64_t v6 = sub_10008BD30();
  os_log_type_t v7 = sub_10008C310();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = (*(uint64_t (**)(void))(*(void *)(a3 + 120) + 32))();
    sub_100009D00(v9, v10, &v11);
    sub_10008C440();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "done: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_100087464()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000874A4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10001F8C8;
  v3[2] = v2;
  return _swift_task_switch(sub_100086944, v2);
}

uint64_t sub_10008754C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100087594()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000AA94;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_1000863D4, v3);
}

uint64_t sub_100087640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390(&qword_1000B0890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

const char *MessageKeys.eventType.unsafeMutableAddressor()
{
  return "et";
}

uint64_t static MessageKeys.eventType.getter()
{
  return 29797;
}

void *MessageKeys.clientType.unsafeMutableAddressor()
{
  return &static MessageKeys.clientType;
}

uint64_t static MessageKeys.clientType.getter()
{
  return 29795;
}

void *MessageKeys.legacyClient.unsafeMutableAddressor()
{
  return &static MessageKeys.legacyClient;
}

uint64_t static MessageKeys.legacyClient.getter()
{
  return 31084;
}

void *MessageKeys.payload.unsafeMutableAddressor()
{
  return &static MessageKeys.payload;
}

uint64_t static MessageKeys.payload.getter()
{
  return 27760;
}

void *MessageKeys.sessionID.unsafeMutableAddressor()
{
  return &static MessageKeys.sessionID;
}

uint64_t static MessageKeys.sessionID.getter()
{
  return 25705;
}

const char *MessageKeys.hierarchyLevel.unsafeMutableAddressor()
{
  return "hlvl";
}

uint64_t static MessageKeys.hierarchyLevel.getter()
{
  return 1819700328;
}

const char *MessageKeys.hierarchyToken.unsafeMutableAddressor()
{
  return "hktn";
}

uint64_t static MessageKeys.hierarchyToken.getter()
{
  return 1853123432;
}

const char *MessageKeys.samplingUUID.unsafeMutableAddressor()
{
  return "suuid";
}

uint64_t static MessageKeys.samplingUUID.getter()
{
  return 0x6469757573;
}

void *MessageKeys.transportConfiguration.unsafeMutableAddressor()
{
  return &static MessageKeys.transportConfiguration;
}

uint64_t static MessageKeys.transportConfiguration.getter()
{
  return 25460;
}

const char *MessageKeys.allowed.unsafeMutableAddressor()
{
  return "allowed";
}

uint64_t static MessageKeys.allowed.getter()
{
  return 0x6465776F6C6C61;
}

const char *MessageKeys.denied.unsafeMutableAddressor()
{
  return "denied";
}

uint64_t static MessageKeys.denied.getter()
{
  return 0x6465696E6564;
}

const char *MessageKeys.overrideSampling.unsafeMutableAddressor()
{
  return "orsf";
}

uint64_t static MessageKeys.overrideSampling.getter()
{
  return 1718841967;
}

void *MessageKeys.sendOneMessageSessionInfo.unsafeMutableAddressor()
{
  return &static MessageKeys.sendOneMessageSessionInfo;
}

uint64_t static MessageKeys.sendOneMessageSessionInfo.getter()
{
  return 7549299;
}

void *MessageKeys.sendOneMessageEvent.unsafeMutableAddressor()
{
  return &static MessageKeys.sendOneMessageEvent;
}

uint64_t static MessageKeys.sendOneMessageEvent.getter()
{
  return 6631795;
}

void *MessageKeys.tcAllowsCellularAccess.unsafeMutableAddressor()
{
  return &static MessageKeys.tcAllowsCellularAccess;
}

uint64_t static MessageKeys.tcAllowsCellularAccess.getter()
{
  return 97;
}

void *MessageKeys.tcAllowsExpensiveAccess.unsafeMutableAddressor()
{
  return &static MessageKeys.tcAllowsExpensiveAccess;
}

uint64_t static MessageKeys.tcAllowsExpensiveAccess.getter()
{
  return 101;
}

void *MessageKeys.tcBundleID.unsafeMutableAddressor()
{
  return &static MessageKeys.tcBundleID;
}

uint64_t static MessageKeys.tcBundleID.getter()
{
  return 98;
}

ValueMetadata *type metadata accessor for MessageKeys()
{
  return &type metadata for MessageKeys;
}

uint64_t XPCError.errorDescription.getter(void *a1)
{
  if (xpc_dictionary_get_string(a1, "XPCErrorDescription")) {
    return sub_10008C0A0();
  }
  else {
    return 0x64696C61766E693CLL;
  }
}

uint64_t sub_1000878D0()
{
  return XPCError.errorDescription.getter(*v0);
}

uint64_t XPCIncomingConnection.auditToken.getter()
{
  return 0;
}

unsigned char *XPCIncomingConnection.entitlementValue(forKey:)@<X0>(uint64_t a1@<X8>)
{
  sub_10008C030();
  uint64_t v2 = (void *)xpc_connection_copy_entitlement_value();
  swift_release();
  return XPCObject.init(_:)(v2, a1);
}

void *XPCIncomingConnection.makeConnection(targetQ:delegate:)(void *a1, uint64_t a2, uint64_t a3, _xpc_connection_s *a4)
{
  type metadata accessor for XPCConnection();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v8 = a1;
  uint64_t v9 = sub_100089474(a4, v8, a2, a3);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v9;
}

void *XPCConnection.__allocating_init(conn:targetQ:delegate:)(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  id v8 = sub_100089474(a1, a2, a3, a4);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v8;
}

uint64_t type metadata accessor for XPCConnection()
{
  return self;
}

uint64_t XPCConnection.conn.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t XPCConnection.conn.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*XPCConnection.conn.modify())()
{
  return j__swift_endAccess;
}

uint64_t XPCConnection.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t XPCConnection.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*XPCConnection.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 32);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_100087CDC;
}

void sub_100087CDC(uint64_t a1, char a2)
{
  long long v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 32) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id XPCConnection.targetQ.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t sub_100087D68()
{
  uint64_t v0 = sub_10008BD50();
  sub_10000CC84(v0, qword_1000B68C8);
  sub_10000A358(v0, (uint64_t)qword_1000B68C8);
  return sub_10008BD40();
}

uint64_t XPCConnection.__allocating_init(targetQ:delegate:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  XPCConnection.init(targetQ:delegate:)(a1, a2, a3);
  return v6;
}

void *XPCConnection.init(targetQ:delegate:)(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v4[2] = 0;
  void v4[4] = 0;
  swift_unknownObjectWeakInit();
  os_log_type_t v7 = xpc_connection_create(0, a1);
  swift_beginAccess();
  void v4[4] = a3;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v4[2] = v7;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4[5] = a1;
  uint64_t v8 = qword_1000B68C0;
  uint64_t v9 = a1;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10008BD50();
  sub_10000A358(v10, (uint64_t)qword_1000B68C8);
  uint64_t v11 = sub_10008BD30();
  os_log_type_t v12 = sub_10008C310();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "A.", v13, 2u);
    swift_slowDealloc();
  }

  xpc_connection_set_target_queue(v7, v9);
  uint64_t v16[4] = j___s20CloudTelemetryShared13XPCConnectionC12eventHandler3objySo13OS_xpc_object_p_tF;
  v16[5] = v4;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  void v16[2] = sub_100085804;
  v16[3] = &unk_1000AA438;
  uint64_t v14 = _Block_copy(v16);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v7, v14);
  _Block_release(v14);
  xpc_connection_activate(v7);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v4;
}

uint64_t XPCConnection.eventHandler(obj:)(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 32);
    xpc_type_t type = xpc_get_type(a1);
    xpc_type_t v6 = (xpc_type_t)XPCTypeError.getter();
    uint64_t ObjectType = swift_getObjectType();
    if (type == v6) {
      (*(void (**)(void *, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    }
    else {
      (*(void (**)(void *, uint64_t, uint64_t))(v4 + 16))(a1, ObjectType, v4);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t XPCConnection.__allocating_init(machService:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, _xpc_connection_s *a6)
{
  uint64_t v12 = swift_allocObject();
  XPCConnection.init(machService:targetQ:listen:delegate:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t XPCConnection.init(machService:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, _xpc_connection_s *a6)
{
  uint64_t v7 = v6;
  *(void *)(v6 + 16) = 0;
  uint64_t v11 = (_xpc_connection_s **)(v6 + 16);
  v11[2] = 0;
  swift_unknownObjectWeakInit();
  if (a4) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = 2;
  }
  uint64_t v13 = sub_10008C030();
  uint64_t v14 = a3;
  swift_bridgeObjectRelease();
  mach_service = xpc_connection_create_mach_service((const char *)(v13 + 32), v14, v12);

  swift_release();
  swift_beginAccess();
  v11[2] = a6;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  NSObject *v11 = mach_service;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  void v11[3] = (_xpc_connection_s *)v14;
  uint64_t v16 = qword_1000B68C0;
  unint64_t v17 = v14;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_10008BD50();
  sub_10000A358(v18, (uint64_t)qword_1000B68C8);
  uint64_t v19 = sub_10008BD30();
  os_log_type_t v20 = sub_10008C310();
  if (os_log_type_enabled(v19, v20))
  {
    unint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "B.", v21, 2u);
    swift_slowDealloc();
  }

  xpc_connection_set_target_queue(mach_service, v17);
  v24[4] = j___s20CloudTelemetryShared13XPCConnectionC12eventHandler3objySo13OS_xpc_object_p_tF;
  v24[5] = v7;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  void v24[2] = sub_100085804;
  v24[3] = &unk_1000AA460;
  uint64_t v22 = _Block_copy(v24);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(mach_service, v22);
  _Block_release(v22);
  xpc_connection_activate(mach_service);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v7;
}

uint64_t XPCConnection.__allocating_init(serviceName:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  XPCConnection.init(serviceName:targetQ:listen:delegate:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

void XPCConnection.init(serviceName:targetQ:listen:delegate:)(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  v7[2] = 0;
  uint64_t v11 = (xpc_connection_t *)(v7 + 2);
  v7[4] = 0;
  swift_unknownObjectWeakInit();
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v7[4] = a6;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v7[2] = 0;
    swift_unknownObjectRelease();
    _OWORD v7[5] = a3;
    return;
  }
  uint64_t v12 = sub_10008C030();
  uint64_t v13 = a3;
  swift_bridgeObjectRelease();
  xpc_connection_t v14 = xpc_connection_create((const char *)(v12 + 32), v13);

  swift_release();
  swift_beginAccess();
  v7[4] = a6;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v7[2] = v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  _OWORD v7[5] = v13;
  uint64_t v15 = qword_1000B68C0;
  uint64_t v16 = v13;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10008BD50();
  sub_10000A358(v17, (uint64_t)qword_1000B68C8);
  uint64_t v18 = sub_10008BD30();
  os_log_type_t v19 = sub_10008C310();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "C.", v20, 2u);
    swift_slowDealloc();
  }

  if (!*v11)
  {
    __break(1u);
    goto LABEL_12;
  }
  xpc_connection_set_target_queue(*v11, v16);
  unint64_t v21 = *v11;
  if (!*v11)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v24[4] = j___s20CloudTelemetryShared13XPCConnectionC12eventHandler3objySo13OS_xpc_object_p_tF;
  v24[5] = v7;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  void v24[2] = sub_100085804;
  v24[3] = &unk_1000AA488;
  uint64_t v22 = _Block_copy(v24);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  xpc_connection_set_event_handler(v21, v22);
  _Block_release(v22);
  swift_unknownObjectRelease();
  if (v7[2])
  {
    os_log_type_t v23 = (_xpc_connection_s *)swift_unknownObjectRetain();
    xpc_connection_activate(v23);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    return;
  }
LABEL_13:
  __break(1u);
}

void *XPCConnection.init(conn:targetQ:delegate:)(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_100089474(a1, a2, a3, a4);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return v5;
}

uint64_t XPCConnection.__allocating_init(listener:targetQ:delegate:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  XPCConnection.init(listener:targetQ:delegate:)(a1, a2, a3, a4);
  return v8;
}

_xpc_connection_s *XPCConnection.init(listener:targetQ:delegate:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v5[2] = 0;
  v5[4] = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  uint64_t result = *(_xpc_connection_s **)(a1 + 16);
  if (result)
  {
    uint64_t v10 = xpc_endpoint_create(result);
    uint64_t v11 = xpc_connection_create_from_endpoint(v10);
    swift_beginAccess();
    v5[2] = v11;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    swift_beginAccess();
    v5[4] = a4;
    swift_unknownObjectWeakAssign();
    v5[5] = a2;
    uint64_t v12 = qword_1000B68C0;
    uint64_t v13 = a2;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_10008BD50();
    sub_10000A358(v14, (uint64_t)qword_1000B68C8);
    uint64_t v15 = sub_10008BD30();
    os_log_type_t v16 = sub_10008C310();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "E.", v17, 2u);
      swift_slowDealloc();
    }

    xpc_connection_set_target_queue(v11, v13);
    aBlock[4] = j___s20CloudTelemetryShared13XPCConnectionC12eventHandler3objySo13OS_xpc_object_p_tF;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100085804;
    aBlock[3] = &unk_1000AA4B0;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_set_event_handler(v11, v18);
    _Block_release(v18);
    xpc_connection_activate(v11);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();

    swift_unknownObjectRelease();
    return (_xpc_connection_s *)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_xpc_connection_s *XPCConnection.endpoint()()
{
  swift_beginAccess();
  uint64_t result = *(_xpc_connection_s **)(v0 + 16);
  if (result) {
    return xpc_endpoint_create(result);
  }
  __break(1u);
  return result;
}

uint64_t XPCConnection.send(_:)(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(_xpc_connection_s **)(v1 + 16);
  if (v4)
  {
    swift_unknownObjectRetain();
    uint64_t v5 = (void *)XPCIncomingConnection.conn.getter(a1);
    xpc_connection_send_message(v4, v5);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t XPCConnection.sendWithReply(_:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 96) = a2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v2;
  return _swift_task_switch(sub_100088C20, 0);
}

uint64_t sub_100088C20()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_beginAccess();
  uint64_t v10 = *(void *)(v1 + 16);
  *(void *)(v0 + 64) = v10;
  if (v10)
  {
    char v11 = *(unsigned char *)(v0 + 96);
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v13 = *(void *)(*(void *)(v0 + 56) + 40);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 72) = v14;
    *(void *)(v14 + 16) = v10;
    *(void *)(v14 + 24) = v12;
    *(unsigned char *)(v14 + 32) = v11;
    *(void *)(v14 + 40) = v13;
    swift_unknownObjectRetain();
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100088D68;
    unint64_t v6 = 0x80000001000946D0;
    uint64_t v9 = &type metadata for XPCDictionary;
    uint64_t v7 = sub_1000896B0;
    uint64_t v2 = v0 + 40;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0xD000000000000011;
    uint64_t v8 = v14;
  }
  else
  {
    __break(1u);
  }
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100088D68()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100088EEC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100088E84;
  }
  return _swift_task_switch(v2, 0);
}

uint64_t sub_100088E84()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100088EEC()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100088F58(uint64_t a1, _xpc_connection_s *a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8 = sub_10000A390((uint64_t *)&unk_1000B0980);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  char v11 = (void *)XPCIncomingConnection.conn.getter(a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_1000897F0;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100085804;
  aBlock[3] = &unk_1000AA550;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  xpc_connection_send_message_with_reply(a2, v11, a4, v14);
  _Block_release(v14);
  return swift_unknownObjectRelease();
}

Swift::Bool __swiftcall OS_xpc_object.isError()()
{
  xpc_type_t type = xpc_get_type(v0);
  return type == XPCTypeError.getter();
}

uint64_t XPCConnection.auditToken.getter()
{
  swift_beginAccess();
  if (!*(void *)(v0 + 16)) {
    __break(1u);
  }
  xpc_connection_get_audit_token();
  return 0;
}

_xpc_connection_s *XPCConnection.remoteUID.getter()
{
  swift_beginAccess();
  uint64_t result = *(_xpc_connection_s **)(v0 + 16);
  if (result) {
    return (_xpc_connection_s *)xpc_connection_get_euid(result);
  }
  __break(1u);
  return result;
}

uint64_t XPCConnection.deinit()
{
  uint64_t v1 = v0;
  if (qword_1000B68C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10008BD50();
  sub_10000A358(v2, (uint64_t)qword_1000B68C8);
  uint64_t v3 = sub_10008BD30();
  os_log_type_t v4 = sub_10008C2F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "connection released", v5, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  unint64_t v6 = *(_xpc_connection_s **)(v1 + 16);
  if (v6) {
    xpc_connection_cancel(v6);
  }
  swift_unknownObjectRelease();
  sub_1000896BC(v1 + 24);

  return v1;
}

uint64_t XPCConnection.__deallocating_deinit()
{
  uint64_t v1 = v0;
  if (qword_1000B68C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10008BD50();
  sub_10000A358(v2, (uint64_t)qword_1000B68C8);
  uint64_t v3 = sub_10008BD30();
  os_log_type_t v4 = sub_10008C2F0();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "connection released", v5, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  unint64_t v6 = *(_xpc_connection_s **)(v1 + 16);
  if (v6) {
    xpc_connection_cancel(v6);
  }
  swift_unknownObjectRelease();
  sub_1000896BC(v1 + 24);

  return swift_deallocClassInstance();
}

Swift::OpaquePointer __swiftcall OS_xpc_object.type()()
{
  return (Swift::OpaquePointer)xpc_get_type(v0);
}

void *sub_100089474(_xpc_connection_s *a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  v5[2] = 0;
  v5[4] = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  v5[2] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_beginAccess();
  v5[4] = a4;
  swift_unknownObjectWeakAssign();
  v5[5] = a2;
  uint64_t v9 = qword_1000B68C0;
  uint64_t v10 = a2;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_10008BD50();
  sub_10000A358(v11, (uint64_t)qword_1000B68C8);
  unint64_t v12 = sub_10008BD30();
  os_log_type_t v13 = sub_10008C310();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "D.", v14, 2u);
    swift_slowDealloc();
  }

  xpc_connection_set_target_queue(a1, v10);
  v17[4] = j___s20CloudTelemetryShared13XPCConnectionC12eventHandler3objySo13OS_xpc_object_p_tF;
  v17[5] = v5;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_100085804;
  id v17[3] = &unk_1000AA578;
  uint64_t v15 = _Block_copy(v17);
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(a1, v15);
  _Block_release(v15);
  xpc_connection_activate(a1);
  return v5;
}

uint64_t sub_100089698(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000896A8()
{
  return swift_release();
}

uint64_t sub_1000896B0(uint64_t a1)
{
  return sub_100088F58(a1, *(_xpc_connection_s **)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 40));
}

uint64_t sub_1000896BC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000896E8()
{
  unint64_t result = qword_1000B08A8;
  if (!qword_1000B08A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B08A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCError()
{
  return &type metadata for XPCError;
}

ValueMetadata *type metadata accessor for XPCIncomingConnection()
{
  return &type metadata for XPCIncomingConnection;
}

uint64_t sub_10008975C()
{
  uint64_t v1 = sub_10000A390((uint64_t *)&unk_1000B0980);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000897F0(void *a1)
{
  sub_10000A390((uint64_t *)&unk_1000B0980);
  xpc_type_t type = xpc_get_type(a1);
  if (type == XPCTypeError.getter())
  {
    sub_1000896E8();
    swift_allocError();
    void *v5 = a1;
    swift_unknownObjectRetain();
    sub_10000A390((uint64_t *)&unk_1000B0980);
    return sub_10008C1E0();
  }
  else
  {
    uint64_t v3 = swift_unknownObjectRetain();
    XPCIncomingConnection.init(conn:)(v3);
    sub_10000A390((uint64_t *)&unk_1000B0980);
    return sub_10008C1F0();
  }
}

uint64_t getTimeIntervalSince1970(Date:)()
{
  uint64_t result = sub_10008BB60();
  if (v1 < 0.0 || (*(void *)&v1 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    return 0;
  }
  if (v1 <= -9.22337204e18)
  {
    __break(1u);
  }
  else if (v1 < 9.22337204e18)
  {
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

const char *PostInstallActivityConfig.identifier.unsafeMutableAddressor()
{
  return "postinstall";
}

uint64_t static PostInstallActivityConfig.identifier.getter()
{
  return 0x74736E6974736F70;
}

uint64_t sub_1000899B0()
{
  sub_10000A390(&qword_1000B0570);
  uint64_t v0 = sub_10000A390(&qword_1000B0578);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v0 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10008FA10;
  uint64_t v4 = (const char **)(v3 + v2);
  uint64_t v5 = (uint64_t *)((char *)v4 + *(int *)(v0 + 48));
  *uint64_t v4 = XPC_ACTIVITY_PRIORITY;
  uint64_t *v5 = sub_10008C0A0();
  v5[1] = v6;
  type metadata accessor for XPCObject();
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (XPC_ACTIVITY_POWER_NAP)
  {
    uint64_t v8 = (char *)v4 + v1 + *(int *)(v0 + 48);
    *(const char **)((char *)v4 + v1) = (const char *)XPC_ACTIVITY_POWER_NAP;
    *uint64_t v8 = 1;
    uint64_t result = swift_storeEnumTagMultiPayload();
    if (XPC_ACTIVITY_POST_INSTALL)
    {
      uint64_t v9 = (const char **)((char *)v4 + 2 * v1);
      uint64_t v10 = (char *)v9 + *(int *)(v0 + 48);
      void *v9 = XPC_ACTIVITY_POST_INSTALL;
      *uint64_t v10 = 1;
      swift_storeEnumTagMultiPayload();
      unint64_t v11 = sub_100082B34(v3);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t result = swift_deallocClassInstance();
      static PostInstallActivityConfig.activityFlags = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *PostInstallActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_1000B6A60 != -1) {
    swift_once();
  }
  return &static PostInstallActivityConfig.activityFlags;
}

uint64_t static PostInstallActivityConfig.activityFlags.getter()
{
  if (qword_1000B6A60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static PostInstallActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_1000B6A60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static PostInstallActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static PostInstallActivityConfig.activityFlags.modify())()
{
  if (qword_1000B6A60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for PostInstallActivityConfig()
{
  return &type metadata for PostInstallActivityConfig;
}

const char *CacheCleanupActivityConfig.identifier.unsafeMutableAddressor()
{
  return "db-cleanup";
}

uint64_t static CacheCleanupActivityConfig.identifier.getter()
{
  return 0x6E61656C632D6264;
}

uint64_t sub_100089D68()
{
  sub_10000A390(&qword_1000B0570);
  uint64_t v0 = sub_10000A390(&qword_1000B0578);
  uint64_t v1 = *(void *)(*(void *)(v0 - 8) + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v0 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 - 8) + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100091620;
  uint64_t v4 = (const char **)(v3 + v2);
  uint64_t v5 = (char *)v4 + *(int *)(v0 + 48);
  *uint64_t v4 = XPC_ACTIVITY_REPEATING;
  unsigned char *v5 = 1;
  type metadata accessor for XPCObject();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (const char **)((char *)v4 + v1 + *(int *)(v0 + 48));
  *(const char **)((char *)v4 + v1) = XPC_ACTIVITY_DELAY;
  void *v6 = 86400;
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (const char **)((char *)v4 + 2 * v1);
  uint64_t v8 = (const char **)((char *)v7 + *(int *)(v0 + 48));
  void *v7 = XPC_ACTIVITY_GRACE_PERIOD;
  *uint64_t v8 = 43200;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (const char **)((char *)v4 + 3 * v1);
  uint64_t v10 = (uint64_t *)((char *)v9 + *(int *)(v0 + 48));
  void *v9 = XPC_ACTIVITY_PRIORITY;
  *uint64_t v10 = sub_10008C0A0();
  v10[1] = v11;
  swift_storeEnumTagMultiPayload();
  unint64_t v12 = (const char **)((char *)v4 + 4 * v1);
  os_log_type_t v13 = (char *)v12 + *(int *)(v0 + 48);
  *unint64_t v12 = XPC_ACTIVITY_ALLOW_BATTERY;
  unsigned char *v13 = 0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_POWER_NAP)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v15 = (const char **)((char *)v4 + 5 * v1);
  os_log_type_t v16 = (char *)v15 + *(int *)(v0 + 48);
  *uint64_t v15 = XPC_ACTIVITY_POWER_NAP;
  unsigned char *v16 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_RANDOM_INITIAL_DELAY)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v17 = (const char **)((char *)v4 + 6 * v1);
  uint64_t v18 = (void *)((char *)v17 + *(int *)(v0 + 48));
  *uint64_t v17 = XPC_ACTIVITY_RANDOM_INITIAL_DELAY;
  *uint64_t v18 = 43200;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_EXPECTED_DURATION)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  os_log_type_t v19 = (const char **)((char *)&v4[v1] - v1);
  os_log_type_t v20 = (void *)((char *)v19 + *(int *)(v0 + 48));
  *os_log_type_t v19 = XPC_ACTIVITY_EXPECTED_DURATION;
  int64_t *v20 = XPC_ACTIVITY_INTERVAL_1_MIN;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_GROUP_NAME)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v21 = &v4[v1];
  uint64_t v22 = (const char **)((char *)v21 + *(int *)(v0 + 48));
  _xpc_connection_s *v21 = (const char *)XPC_ACTIVITY_GROUP_NAME;
  *uint64_t v22 = 0xD000000000000025;
  v22[1] = 0x80000001000945D0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (!XPC_ACTIVITY_GROUP_CONCURRENCY_LIMIT)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  os_log_type_t v23 = (const char **)((char *)v4 + 9 * v1);
  uint64_t v24 = (void *)((char *)v23 + *(int *)(v0 + 48));
  *os_log_type_t v23 = XPC_ACTIVITY_GROUP_CONCURRENCY_LIMIT;
  *uint64_t v24 = 1;
  uint64_t result = swift_storeEnumTagMultiPayload();
  if (XPC_ACTIVITY_DISK_INTENSIVE)
  {
    uint64_t v25 = (const char **)((char *)v4 + 10 * v1);
    unint64_t v26 = (char *)v25 + *(int *)(v0 + 48);
    *uint64_t v25 = XPC_ACTIVITY_DISK_INTENSIVE;
    *unint64_t v26 = 1;
    swift_storeEnumTagMultiPayload();
    unint64_t v27 = sub_100082B34(v3);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t result = swift_deallocClassInstance();
    static CacheCleanupActivityConfig.activityFlags = v27;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t *CacheCleanupActivityConfig.activityFlags.unsafeMutableAddressor()
{
  if (qword_1000B6A68 != -1) {
    swift_once();
  }
  return &static CacheCleanupActivityConfig.activityFlags;
}

uint64_t static CacheCleanupActivityConfig.activityFlags.getter()
{
  if (qword_1000B6A68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static CacheCleanupActivityConfig.activityFlags.setter(uint64_t a1)
{
  if (qword_1000B6A68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static CacheCleanupActivityConfig.activityFlags = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CacheCleanupActivityConfig.activityFlags.modify())()
{
  if (qword_1000B6A68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for CacheCleanupActivityConfig()
{
  return &type metadata for CacheCleanupActivityConfig;
}

uint64_t XPCMessage.MessageType.rawValue.getter(uint64_t result)
{
  return result;
}

Swift::Int sub_10008A2E4()
{
  Swift::UInt64 v1 = *v0;
  sub_10008C8F0();
  sub_10008C910(v1);
  return sub_10008C920();
}

void sub_10008A32C()
{
  sub_10008C910(*v0);
}

Swift::Int sub_10008A358()
{
  Swift::UInt64 v1 = *v0;
  sub_10008C8F0();
  sub_10008C910(v1);
  return sub_10008C920();
}

unint64_t sub_10008A39C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s20CloudTelemetryShared10XPCMessageV11MessageTypeO8rawValueAESgs5Int64V_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10008A3C8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t XPCMessage.ty.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t XPCMessage.init(ty:payload:)(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2;
  swift_unknownObjectRetain();
  xpc_object_t v7 = xpc_int64_create(a1);
  XPCObject.init(_:)(v7, (uint64_t)v6);
  XPCDictionary.subscript.setter((uint64_t)v6);
  swift_unknownObjectRelease();
  return v10;
}

void *XPCMessage.init(fromXPC:)()
{
  uint64_t v0 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (uint64_t *)((char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getObjectType();
  rawValue = OS_xpc_object.type()()._rawValue;
  if (rawValue != XPCTypeDictionary.getter()) {
    goto LABEL_2;
  }
  uint64_t v4 = swift_unknownObjectRetain();
  uint64_t v5 = (void *)XPCIncomingConnection.init(conn:)(v4);
  XPCDictionary.subscript.getter(v5, (uint64_t)v2);
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for XPCObject();
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v2, 1, v6) == 1)
  {
    swift_unknownObjectRelease();
    sub_10008AFD0((uint64_t)v2);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    swift_unknownObjectRelease();
    sub_10002FBB4((uint64_t)v2);
    return 0;
  }
  if (*v2 >= 4uLL)
  {
LABEL_2:
    swift_unknownObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t XPCMessage.description.getter(void *a1, char a2)
{
  uint64_t v39 = type metadata accessor for XPCObject();
  uint64_t v4 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A390((uint64_t *)&unk_1000AF140);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  LOBYTE(v40) = a2;
  sub_10008C620();
  v43._countAndFlagsBits = 2683;
  v43._object = (void *)0xE200000000000000;
  sub_10008C090(v43);
  uint64_t v38 = a1;
  uint64_t v10 = XPCDictionary.keys.getter(a1);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v35 = v10;
  if (!v11)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_10008BF10();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    v44._countAndFlagsBits = v31;
    v44._object = v33;
    sub_10008C090(v44);
    swift_bridgeObjectRelease();
    v45._countAndFlagsBits = 125;
    v45._object = (void *)0xE100000000000000;
    sub_10008C090(v45);
    return v41;
  }
  uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  unint64_t v12 = (uint64_t *)(v10 + 40);
  os_log_type_t v13 = &_swiftEmptyDictionarySingleton;
  uint64_t v36 = v9;
  while (1)
  {
    uint64_t v15 = *(v12 - 1);
    uint64_t v14 = *v12;
    swift_bridgeObjectRetain();
    XPCDictionary.subscript.getter(v38, (uint64_t)v9);
    if ((*v37)(v9, 1, v39) == 1) {
      break;
    }
    uint64_t v16 = (uint64_t)v9;
    uint64_t v17 = (uint64_t)v6;
    sub_10002FAEC(v16, (uint64_t)v6);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    xpc_object_t v40 = v13;
    unint64_t v20 = sub_100011F50(v15, v14);
    uint64_t v21 = v13[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_19:
      __break(1u);
      break;
    }
    char v24 = v19;
    if (v13[3] >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        os_log_type_t v13 = v40;
        if (v19) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_10008AD54();
        os_log_type_t v13 = v40;
        if (v24) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_10008A9B0(v23, isUniquelyReferenced_nonNull_native);
      unint64_t v25 = sub_100011F50(v15, v14);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_21;
      }
      unint64_t v20 = v25;
      os_log_type_t v13 = v40;
      if (v24)
      {
LABEL_3:
        uint64_t v6 = (char *)v17;
        sub_10008B030(v17, v13[7] + *(void *)(v4 + 72) * v20);
        goto LABEL_4;
      }
    }
    v13[(v20 >> 6) + 8] |= 1 << v20;
    unint64_t v27 = (uint64_t *)(v13[6] + 16 * v20);
    *unint64_t v27 = v15;
    v27[1] = v14;
    uint64_t v6 = (char *)v17;
    sub_10002FAEC(v17, v13[7] + *(void *)(v4 + 72) * v20);
    uint64_t v28 = v13[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_19;
    }
    void v13[2] = v30;
    swift_bridgeObjectRetain();
LABEL_4:
    v12 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v11;
    uint64_t v9 = v36;
    if (!v11) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_21:
  uint64_t result = sub_10008C880();
  __break(1u);
  return result;
}

uint64_t sub_10008A9A4()
{
  return XPCMessage.description.getter(*(void **)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_10008A9B0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for XPCObject();
  uint64_t v42 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10000A390(&qword_1000B0998);
  int v43 = a2;
  uint64_t v9 = sub_10008C670();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    char v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_10002FAEC(v30, (uint64_t)v7);
    }
    else
    {
      sub_10002FB50(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_10008C8F0();
    sub_10008C050();
    uint64_t result = sub_10008C920();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    char v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *char v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_10002FAEC((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void *sub_10008AD54()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for XPCObject();
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A390(&qword_1000B0998);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_10008C660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_10002FB50(*(void *)(v5 + 56) + v21, (uint64_t)v4);
    int64_t v22 = (void *)(*(void *)(v7 + 48) + v17);
    *int64_t v22 = v19;
    v22[1] = v20;
    sub_10002FAEC((uint64_t)v4, *(void *)(v7 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t _s20CloudTelemetryShared10XPCMessageV11MessageTypeO8rawValueAESgs5Int64V_tcfC_0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_10008AFD0(uint64_t a1)
{
  uint64_t v2 = sub_10000A390((uint64_t *)&unk_1000AF140);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008B030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for XPCObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008B098()
{
  unint64_t result = qword_1000B0990;
  if (!qword_1000B0990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000B0990);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for XPCMessage()
{
  return swift_unknownObjectRelease();
}

uint64_t assignWithCopy for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for XPCMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCMessage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCMessage()
{
  return &type metadata for XPCMessage;
}

unsigned char *storeEnumTagSinglePayload for XPCMessage.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008B320);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCMessage.MessageType()
{
  return &type metadata for XPCMessage.MessageType;
}

void sub_10008B35C()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"NSString *getCKCurrentUserDefaultName(void)"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 16, @"%s", dlerror());

  __break(1u);
}

void sub_10008B3D4()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"Class getCKOperationConfigurationClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 11, @"Unable to find class %s", "CKOperationConfiguration");

  __break(1u);
}

void sub_10008B450(void *a1)
{
  uint64_t v2 = +[NSAssertionHandler currentHandler];
  int v3 = +[NSString stringWithUTF8String:"void *CloudKitLibrary(void)"];
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, @"CKSoftLinkAssetFetch.m", 9, @"%s", *a1);

  __break(1u);
}

void sub_10008B4D0()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"Class getCKContainerClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 10, @"Unable to find class %s", "CKContainer");

  __break(1u);
}

void sub_10008B54C()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"Class getCKRecordZoneIDClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 13, @"Unable to find class %s", "CKRecordZoneID");

  __break(1u);
}

void sub_10008B5C8()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"Class getCKRecordIDClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 14, @"Unable to find class %s", "CKRecordID");

  __break(1u);
}

void sub_10008B644()
{
  uint64_t v0 = +[NSAssertionHandler currentHandler];
  uint64_t v1 = +[NSString stringWithUTF8String:"Class getCKFetchRecordsOperationClass(void)_block_invoke"];
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, @"CKSoftLinkAssetFetch.m", 15, @"Unable to find class %s", "CKFetchRecordsOperation");

  __break(1u);
  sub_10008B6C0();
}

uint64_t sub_10008B6C0()
{
  return CocoaError._nsError.getter();
}

uint64_t sub_10008B6D0()
{
  return CocoaError.isCoderError.getter();
}

uint64_t sub_10008B6E0()
{
  return static CocoaError.fileWriteUnknown.getter();
}

uint64_t sub_10008B6F0()
{
  return static CocoaError.fileWriteOutOfSpace.getter();
}

uint64_t sub_10008B700()
{
  return static CocoaError.fileWriteNoPermission.getter();
}

uint64_t sub_10008B710()
{
  return type metadata accessor for CocoaError.Code();
}

uint64_t sub_10008B720()
{
  return type metadata accessor for CocoaError();
}

uint64_t sub_10008B730()
{
  return URLRequest.httpMethod.setter();
}

uint64_t sub_10008B740()
{
  return URLRequest.init(url:cachePolicy:timeoutInterval:)();
}

uint64_t sub_10008B750()
{
  return URLRequest.httpBody.getter();
}

uint64_t sub_10008B760()
{
  return URLRequest.httpBody.setter();
}

void sub_10008B770(Swift::String_optional _, Swift::String forHTTPHeaderField)
{
}

uint64_t sub_10008B780()
{
  return type metadata accessor for URLRequest();
}

uint64_t sub_10008B790()
{
  return static JSONEncoder.OutputFormatting.prettyPrinted.getter();
}

uint64_t sub_10008B7A0()
{
  return type metadata accessor for JSONEncoder.OutputFormatting();
}

uint64_t sub_10008B7B0()
{
  return dispatch thunk of JSONEncoder.outputFormatting.setter();
}

uint64_t sub_10008B7C0()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_10008B7D0()
{
  return JSONEncoder.init()();
}

uint64_t sub_10008B7E0()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_10008B7F0()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008B800()
{
  return type metadata accessor for Notification();
}

uint64_t sub_10008B810()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_10008B820()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_10008B830()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_10008B840()
{
  return __DataStorage.init(length:)();
}

uint64_t sub_10008B850()
{
  return __DataStorage._length.getter();
}

uint64_t sub_10008B860()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_10008B870()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_10008B880()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_10008B890()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_10008B8A0()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_10008B8B0()
{
  return URLResourceValues.isDirectory.getter();
}

uint64_t sub_10008B8C0()
{
  return URLResourceValues.creationDate.getter();
}

uint64_t sub_10008B8D0()
{
  return URLResourceValues.isExcludedFromBackup.setter();
}

uint64_t sub_10008B8E0()
{
  return URLResourceValues.contentModificationDate.getter();
}

uint64_t sub_10008B8F0()
{
  return URLResourceValues.fileSize.getter();
}

uint64_t sub_10008B900()
{
  return URLResourceValues.init()();
}

uint64_t sub_10008B910()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t sub_10008B920()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:format:)();
}

uint64_t sub_10008B930()
{
  return PropertyListDecoder.init()();
}

uint64_t sub_10008B940()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t sub_10008B950()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t sub_10008B960()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_10008B970()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_10008B980()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t sub_10008B990()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

uint64_t sub_10008B9A0()
{
  return URL.lastPathComponent.getter();
}

uint64_t sub_10008B9B0()
{
  return URL.setResourceValues(_:)();
}

void sub_10008B9C0(NSURL *retstr@<X8>)
{
}

uint64_t sub_10008B9D0()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t sub_10008B9E0()
{
  return URL.appendingPathComponent(_:)();
}

BOOL sub_10008B9F0()
{
  return URL.checkResourceIsReachable()();
}

uint64_t sub_10008BA00()
{
  return URL.deletingLastPathComponent()();
}

uint64_t sub_10008BA10(Swift::Bool percentEncoded)
{
  return URL.host(percentEncoded:)(percentEncoded).value._countAndFlagsBits;
}

uint64_t sub_10008BA20(Swift::Bool percentEncoded)
{
  return URL.path(percentEncoded:)(percentEncoded)._countAndFlagsBits;
}

uint64_t sub_10008BA30()
{
  return URL.path.getter();
}

uint64_t sub_10008BA40()
{
  return URL.init(string:)();
}

uint64_t sub_10008BA50()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t sub_10008BA60()
{
  return type metadata accessor for URL();
}

void sub_10008BA70()
{
}

uint64_t sub_10008BA80()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_10008BA90()
{
  return Data.init(base64Encoded:options:)();
}

uint64_t sub_10008BAA0()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t sub_10008BAB0()
{
  return Data._Representation.count.setter();
}

NSData sub_10008BAC0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_10008BAD0(NSDataBase64EncodingOptions options)
{
  return Data.base64EncodedString(options:)(options)._countAndFlagsBits;
}

uint64_t sub_10008BAE0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008BAF0()
{
  return Data.write(to:options:)();
}

uint64_t sub_10008BB00()
{
  return Data.append(_:)();
}

uint64_t sub_10008BB10()
{
  return Date.description.getter();
}

uint64_t sub_10008BB20()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_10008BB30()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_10008BB40()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_10008BB50()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t sub_10008BB60()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_10008BB70()
{
  return static Date.now.getter();
}

uint64_t sub_10008BB80()
{
  return Date.advanced(by:)();
}

uint64_t sub_10008BB90()
{
  return Date.distance(to:)();
}

uint64_t sub_10008BBA0()
{
  return Date.init()();
}

uint64_t sub_10008BBB0()
{
  return type metadata accessor for Date();
}

uint64_t sub_10008BBC0()
{
  return UUID.uuidString.getter();
}

NSUUID sub_10008BBD0()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_10008BBE0()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_10008BBF0()
{
  return UUID.init(uuid:)();
}

uint64_t sub_10008BC00()
{
  return UUID.uuid.getter();
}

uint64_t sub_10008BC10()
{
  return UUID.init()();
}

uint64_t sub_10008BC20()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10008BC30()
{
  return Locale.Region.identifier.getter();
}

uint64_t sub_10008BC40()
{
  return type metadata accessor for Locale.Region();
}

uint64_t sub_10008BC50()
{
  return static Locale.current.getter();
}

uint64_t sub_10008BC60()
{
  return Locale.Language.region.getter();
}

uint64_t sub_10008BC70()
{
  return type metadata accessor for Locale.Language();
}

uint64_t sub_10008BC80()
{
  return Locale.language.getter();
}

uint64_t sub_10008BC90()
{
  return type metadata accessor for Locale();
}

uint64_t sub_10008BCA0()
{
  return TimeZone.secondsFromGMT(for:)();
}

uint64_t sub_10008BCB0()
{
  return static TimeZone.current.getter();
}

uint64_t sub_10008BCC0()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_10008BCD0()
{
  return static URLError.Code.cancelled.getter();
}

uint64_t sub_10008BCE0()
{
  return type metadata accessor for URLError.Code();
}

uint64_t sub_10008BCF0()
{
  return type metadata accessor for URLError();
}

uint64_t sub_10008BD00()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_10008BD10()
{
  return _CFObject.hash(into:)();
}

uint64_t sub_10008BD20()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_10008BD30()
{
  return Logger.logObject.getter();
}

uint64_t sub_10008BD40()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10008BD50()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10008BD60()
{
  return XPC_ERROR_CONNECTION_INVALID.getter();
}

uint64_t sub_10008BD70()
{
  return XPC_ERROR_CONNECTION_INTERRUPTED.getter();
}

uint64_t sub_10008BD80()
{
  return type metadata accessor for NWInterface.InterfaceType();
}

uint64_t sub_10008BD90()
{
  return NWPathMonitor.currentPath.getter();
}

uint64_t sub_10008BDA0()
{
  return NWPathMonitor.init(prohibitedInterfaceTypes:)();
}

uint64_t sub_10008BDB0()
{
  return NWPathMonitor.start(queue:)();
}

uint64_t sub_10008BDC0()
{
  return type metadata accessor for NWPathMonitor();
}

uint64_t sub_10008BDD0()
{
  return NWPath.isExpensive.getter();
}

uint64_t sub_10008BDE0()
{
  return NWPath.isConstrained.getter();
}

uint64_t sub_10008BDF0()
{
  return static NWPath.Status.== infix(_:_:)();
}

uint64_t sub_10008BE00()
{
  return type metadata accessor for NWPath.Status();
}

uint64_t sub_10008BE10()
{
  return NWPath.status.getter();
}

uint64_t sub_10008BE20()
{
  return type metadata accessor for NWPath();
}

uint64_t sub_10008BE30()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_10008BE40()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_10008BE50()
{
  return static DispatchQoS.background.getter();
}

uint64_t sub_10008BE60()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_10008BE70()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_10008BE80()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t sub_10008BE90()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t sub_10008BEA0()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t sub_10008BEB0()
{
  return SHA256Digest.withUnsafeBytes<A>(_:)();
}

uint64_t sub_10008BEC0()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t sub_10008BED0()
{
  return type metadata accessor for SHA256();
}

NSDictionary sub_10008BEE0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_10008BEF0()
{
  return static Dictionary._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10008BF00()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008BF10()
{
  return Dictionary.description.getter();
}

uint64_t sub_10008BF20()
{
  return Dictionary.init(minimumCapacity:)();
}

void sub_10008BF30(Swift::Int a1)
{
}

uint64_t sub_10008BF40()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_10008BF50()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_10008BF60()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10008BF70()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_10008BF80()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10008BF90()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10008BFA0()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10008BFB0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008BFC0()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_10008BFD0()
{
  return String.init(data:encoding:)();
}

uint64_t sub_10008BFE0()
{
  return String.init(format:_:)();
}

uint64_t sub_10008BFF0()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_10008C000()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_10008C010()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10008C020()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_10008C030()
{
  return String.utf8CString.getter();
}

uint64_t sub_10008C040()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_10008C050()
{
  return String.hash(into:)();
}

uint64_t sub_10008C060()
{
  return String.index(after:)();
}

uint64_t sub_10008C070()
{
  return String.index(before:)();
}

uint64_t sub_10008C080()
{
  return String.append<A>(contentsOf:)();
}

void sub_10008C090(Swift::String a1)
{
}

uint64_t sub_10008C0A0()
{
  return String.init(cString:)();
}

uint64_t sub_10008C0B0()
{
  return String.init(cString:)();
}

uint64_t sub_10008C0C0()
{
  return String.Iterator.next()().value._countAndFlagsBits;
}

Swift::Int sub_10008C0D0()
{
  return String.UTF8View._foreignCount()();
}

BOOL sub_10008C0E0(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

uint64_t sub_10008C0F0()
{
  return String.subscript.getter();
}

uint64_t sub_10008C100()
{
  return String.init<A>(_:)();
}

uint64_t sub_10008C120()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_10008C130()
{
  return Sequence<>.joined(separator:)();
}

uint64_t sub_10008C140()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_10008C150()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_10008C160()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10008C170()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10008C180()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10008C190()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10008C1A0()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_10008C1B0()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10008C1C0()
{
  return Array<A>.init(from:)();
}

uint64_t sub_10008C1D0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_10008C1E0()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_10008C1F0()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10008C210()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_10008C220()
{
  return type metadata accessor for TaskPriority();
}

void sub_10008C240()
{
}

uint64_t sub_10008C260()
{
  return static Task<>.isCancelled.getter();
}

uint64_t sub_10008C270()
{
  return static Task<>.checkCancellation()();
}

uint64_t sub_10008C290()
{
  return dispatch thunk of Decodable.init(from:)();
}

uint64_t sub_10008C2A0()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_10008C2B0()
{
  return NSFileHandle.write<A>(contentsOf:)();
}

Swift::UInt64 sub_10008C2C0()
{
  return NSFileHandle.seekToEnd()();
}

uint64_t sub_10008C2D0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_10008C2E0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_10008C2F0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10008C300()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_10008C310()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10008C330()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_10008C340()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_10008C350()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_10008C360()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_10008C370()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_10008C380()
{
  return static OS_dispatch_source.FileSystemEvent.delete.getter();
}

uint64_t sub_10008C390()
{
  return static OS_dispatch_source.FileSystemEvent.rename.getter();
}

uint64_t sub_10008C3A0()
{
  return type metadata accessor for OS_dispatch_source.FileSystemEvent();
}

uint64_t sub_10008C3B0()
{
  return static OS_dispatch_source.makeFileSystemObjectSource(fileDescriptor:eventMask:queue:)();
}

uint64_t sub_10008C3C0()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

void sub_10008C3D0()
{
}

void sub_10008C3E0()
{
}

void sub_10008C3F0()
{
}

Swift::Int sub_10008C400()
{
  return OS_dispatch_semaphore.signal()();
}

NSNumber sub_10008C410(Swift::Bool BOOLeanLiteral)
{
  return NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

uint64_t sub_10008C420()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10008C430()
{
  return type metadata accessor for Optional();
}

uint64_t sub_10008C440()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10008C450()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10008C460()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t sub_10008C470()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10008C480()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_10008C490()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_10008C4A0()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_10008C4B0()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_10008C4C0()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_10008C4D0()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_10008C4E0()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_10008C4F0()
{
  return __CocoaSet.contains(_:)();
}

uint64_t sub_10008C500()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_10008C510()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_10008C520()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_10008C530()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_10008C540(Swift::Int a1)
{
}

uint64_t sub_10008C550()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10008C560()
{
  return Identifiable<>.id.getter();
}

uint64_t sub_10008C570()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10008C580()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10008C590()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_10008C5A0()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_10008C5B0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10008C5D0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_10008C5E0()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_10008C5F0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_10008C600()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_10008C610()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10008C620()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_10008C630()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10008C640()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10008C650()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10008C660()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_10008C670()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_10008C680()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10008C690()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_10008C6B0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_10008C6C0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10008C6D0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10008C6E0()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_10008C6F0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10008C700()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_10008C710()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10008C720()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10008C730()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_10008C740()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_10008C750()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_10008C760()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10008C770()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_10008C780()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_10008C790(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_10008C7A0()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10008C7C0()
{
  return dispatch thunk of UnkeyedEncodingContainer.encode<A>(_:)();
}

uint64_t sub_10008C7D0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10008C7E0()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_10008C7F0()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_10008C800()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_10008C810()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_10008C820()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_10008C830()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_10008C840()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_10008C850()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_10008C870()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10008C880()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10008C890()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_10008C8A0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_10008C8B0()
{
  return Error._code.getter();
}

uint64_t sub_10008C8C0()
{
  return Error._domain.getter();
}

uint64_t sub_10008C8D0()
{
  return Error._userInfo.getter();
}

uint64_t sub_10008C8E0()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_10008C8F0()
{
  return Hasher.init(_seed:)();
}

void sub_10008C900(Swift::UInt a1)
{
}

void sub_10008C910(Swift::UInt64 a1)
{
}

Swift::Int sub_10008C920()
{
  return Hasher._finalize()();
}

uint64_t sub_10008C930()
{
  return dispatch thunk of Decoder.codingPath.getter();
}

uint64_t sub_10008C940()
{
  return dispatch thunk of Decoder.singleValueContainer()();
}

uint64_t sub_10008C950()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_10008C960()
{
  return dispatch thunk of Encoder.unkeyedContainer()();
}

uint64_t sub_10008C970()
{
  return dispatch thunk of Encoder.singleValueContainer()();
}

uint64_t sub_10008C980()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_10008C990()
{
  return dispatch thunk of CodingKey.stringValue.getter();
}

uint64_t DiagnosticLogSubmissionEnabled()
{
  return _DiagnosticLogSubmissionEnabled();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MobileGestalt_copy_buildVersion_obj()
{
  return _MobileGestalt_copy_buildVersion_obj();
}

uint64_t MobileGestalt_copy_deviceName_obj()
{
  return _MobileGestalt_copy_deviceName_obj();
}

uint64_t MobileGestalt_copy_marketingProductName_obj()
{
  return _MobileGestalt_copy_marketingProductName_obj();
}

uint64_t MobileGestalt_copy_productType_obj()
{
  return _MobileGestalt_copy_productType_obj();
}

uint64_t MobileGestalt_copy_productVersion_obj()
{
  return _MobileGestalt_copy_productVersion_obj();
}

uint64_t MobileGestalt_copy_serialNumber_obj()
{
  return _MobileGestalt_copy_serialNumber_obj();
}

uint64_t MobileGestalt_get_current_device()
{
  return _MobileGestalt_get_current_device();
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return _SecKeyCreateWithData(keyData, attributes, error);
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return _SecKeyVerifySignature(key, algorithm, signedData, signature, error);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return _SecTaskCopyValueForEntitlement(task, entitlement, error);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return _SecTaskCreateWithAuditToken(allocator, token);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

int deflate(z_streamp strm, int flush)
{
  return _deflate(strm, flush);
}

uLong deflateBound(z_streamp strm, uLong sourceLen)
{
  return _deflateBound(strm, sourceLen);
}

int deflateEnd(z_streamp strm)
{
  return _deflateEnd(strm);
}

int deflateInit2_(z_streamp strm, int level, int method, int windowBits, int memLevel, int strategy, const char *version, int stream_size)
{
  return _deflateInit2_(strm, level, method, windowBits, memLevel, strategy, version, stream_size);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_diagnostics()
{
  return _os_variant_has_internal_diagnostics();
}

int proc_pidpath_audittoken(audit_token_t *audittoken, void *buffer, uint32_t buffersize)
{
  return _proc_pidpath_audittoken(audittoken, buffer, buffersize);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return _sqlite3_bind_double(a1, a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return _sqlite3_bind_int(a1, a2, a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return _sqlite3_bind_int64(a1, a2, a3);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return _sqlite3_bind_text(a1, a2, a3, a4, a5);
}

sqlite3_int64 sqlite3_changes64(sqlite3 *a1)
{
  return _sqlite3_changes64(a1);
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return _sqlite3_close_v2(a1);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return _sqlite3_column_count(pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_double(a1, iCol);
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_int(a1, iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_int64(a1, iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_text(a1, iCol);
}

const char *__cdecl sqlite3_errstr(int a1)
{
  return _sqlite3_errstr(a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return _sqlite3_exec(a1, sql, callback, a4, errmsg);
}

char *__cdecl sqlite3_expanded_sql(sqlite3_stmt *pStmt)
{
  return _sqlite3_expanded_sql(pStmt);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return _sqlite3_finalize(pStmt);
}

void sqlite3_free(void *a1)
{
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return _sqlite3_open_v2(filename, ppDb, flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return _sqlite3_prepare_v2(db, zSql, nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return _sqlite3_step(a1);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return _swift_dynamicCastUnknownClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t xpc_activity_add_eligibility_changed_handler()
{
  return _xpc_activity_add_eligibility_changed_handler();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return _xpc_activity_copy_criteria(activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return _xpc_activity_get_state(activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

uint64_t xpc_activity_remove_eligibility_changed_handler()
{
  return _xpc_activity_remove_eligibility_changed_handler();
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return _xpc_activity_set_state(activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return _xpc_activity_should_defer(activity);
}

BOOL xpc_array_apply(xpc_object_t xarray, xpc_array_applier_t applier)
{
  return _xpc_array_apply(xarray, applier);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return _xpc_array_get_count(xarray);
}

xpc_object_t xpc_BOOL_create(BOOL value)
{
  return _xpc_BOOL_create(value);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return _xpc_BOOL_get_value(xBOOL);
}

void xpc_connection_activate(xpc_connection_t connection)
{
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

uint64_t xpc_connection_copy_entitlement_value()
{
  return _xpc_connection_copy_entitlement_value();
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return _xpc_connection_create(name, targetq);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return _xpc_connection_create_from_endpoint(endpoint);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return _xpc_connection_create_mach_service(name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return _xpc_connection_get_audit_token();
}

uid_t xpc_connection_get_euid(xpc_connection_t connection)
{
  return _xpc_connection_get_euid(connection);
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return _xpc_connection_get_pid(connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return _xpc_copy_description(object);
}

xpc_object_t xpc_data_create(const void *bytes, size_t length)
{
  return _xpc_data_create(bytes, length);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return _xpc_data_get_bytes_ptr(xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return _xpc_data_get_length(xdata);
}

xpc_object_t xpc_date_create(int64_t interval)
{
  return _xpc_date_create(interval);
}

int64_t xpc_date_get_value(xpc_object_t xdate)
{
  return _xpc_date_get_value(xdate);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return _xpc_dictionary_apply(xdict, applier);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return _xpc_dictionary_create_empty();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return _xpc_dictionary_create_reply(original);
}

size_t xpc_dictionary_get_count(xpc_object_t xdict)
{
  return _xpc_dictionary_get_count(xdict);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_value(xdict, key);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}

xpc_object_t xpc_double_create(double value)
{
  return _xpc_double_create(value);
}

double xpc_double_get_value(xpc_object_t xdouble)
{
  return _xpc_double_get_value(xdouble);
}

xpc_endpoint_t xpc_endpoint_create(xpc_connection_t connection)
{
  return _xpc_endpoint_create(connection);
}

BOOL xpc_equal(xpc_object_t object1, xpc_object_t object2)
{
  return _xpc_equal(object1, object2);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

xpc_object_t xpc_int64_create(int64_t value)
{
  return _xpc_int64_create(value);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return _xpc_int64_get_value(xint);
}

void xpc_main(xpc_connection_handler_t handler)
{
}

xpc_object_t xpc_null_create(void)
{
  return _xpc_null_create();
}

xpc_object_t xpc_string_create(const char *string)
{
  return _xpc_string_create(string);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return _xpc_string_get_string_ptr(xstring);
}

const char *__cdecl xpc_type_get_name(xpc_type_t type)
{
  return _xpc_type_get_name(type);
}

xpc_object_t xpc_uint64_create(uint64_t value)
{
  return _xpc_uint64_create(value);
}

uint64_t xpc_uint64_get_value(xpc_object_t xuint)
{
  return _xpc_uint64_get_value(xuint);
}

xpc_object_t xpc_uuid_create(const unsigned __int8 *uuid)
{
  return _xpc_uuid_create(uuid);
}

const uint8_t *__cdecl xpc_uuid_get_bytes(xpc_object_t xuuid)
{
  return _xpc_uuid_get_bytes(xuuid);
}

id objc_msgSend__allowsExpensiveAccess(void *a1, const char *a2, ...)
{
  return _[a1 _allowsExpensiveAccess];
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_allowsCellularAccess(void *a1, const char *a2, ...)
{
  return _[a1 allowsCellularAccess];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_assetContent(void *a1, const char *a2, ...)
{
  return _[a1 assetContent];
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _[a1 container];
}

id objc_msgSend_containerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerWithIdentifier:");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_initWithRecordIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordIDs:");
}

id objc_msgSend_initWithRecordName_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordName:zoneID:");
}

id objc_msgSend_initWithZoneName_ownerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:ownerName:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_publicCloudDatabase(void *a1, const char *a2, ...)
{
  return _[a1 publicCloudDatabase];
}

id objc_msgSend_setAllowsCellularAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsCellularAccess:");
}

id objc_msgSend_setAllowsExpensiveNetworkAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsExpensiveNetworkAccess:");
}

id objc_msgSend_setApplicationBundleIdentifierOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationBundleIdentifierOverride:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setDropInMemoryAssetContentASAP_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDropInMemoryAssetContentASAP:");
}

id objc_msgSend_setFetchRecordsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordsCompletionBlock:");
}

id objc_msgSend_setPreferAnonymousRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferAnonymousRequests:");
}

id objc_msgSend_setShouldFetchAssetContentInMemory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldFetchAssetContentInMemory:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}