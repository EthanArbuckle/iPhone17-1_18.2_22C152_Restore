uint64_t sub_1001A5A20()
{
  unsigned char *v0;

  if (*v0) {
    return 0x656E654774696465;
  }
  else {
    return 0x6174614473796164;
  }
}

uint64_t sub_1001A5A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001AD1A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001A5A90(uint64_t a1)
{
  unint64_t v2 = sub_1001AC2BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A5ACC(uint64_t a1)
{
  unint64_t v2 = sub_1001AC2BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t _ReadingHistoryUpdateProperties.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_10007DC14(&qword_100296858);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1001AC2BC();
  sub_1001ED1F0();
  uint64_t v11 = a2;
  v10[15] = 0;
  sub_10007DC14(&qword_100296868);
  sub_1001AC310();
  sub_1001ED020();
  if (!v2)
  {
    v10[14] = 1;
    sub_1001ED010();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t _ReadingHistoryUpdateProperties.init(from:)(void *a1)
{
  return sub_1001AD2C0(a1);
}

uint64_t sub_1001A5CAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001AD2C0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1001A5CD8(void *a1)
{
  return _ReadingHistoryUpdateProperties.encode(to:)(a1, *v1);
}

uint64_t ReadingHistoryUpdate.value.getter()
{
  return swift_bridgeObjectRetain();
}

id ReadingHistoryUpdate.__allocating_init(value:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  uint64_t v6 = &v5[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, "init");
}

id ReadingHistoryUpdate.init(value:)(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  uint64_t v6 = &v2[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "init");
}

uint64_t ReadingHistoryUpdate.__allocating_init(days:crdtContext:editGeneration:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v77 = a3;
  id v96 = a2;
  uint64_t v104 = sub_1001EBF80();
  uint64_t v4 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v86 = *(void *)(v99 - 8);
  uint64_t v7 = __chkstk_darwin(v99 - 8);
  v101 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v73 - v9;
  uint64_t v11 = sub_1001EB0C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  v97 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  v76 = (char *)&v73 - v16;
  __chkstk_darwin(v15);
  v106 = (char *)&v73 - v17;
  uint64_t v18 = sub_10007DC14(&qword_100296838);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v73 - v22;
  sub_1001ADA20((unint64_t *)&qword_100295B60, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v79 = sub_1001EC290();
  unint64_t v25 = 0;
  uint64_t v88 = a1;
  uint64_t v28 = *(void *)(a1 + 64);
  uint64_t v27 = a1 + 64;
  uint64_t v26 = v28;
  uint64_t v29 = 1 << *(unsigned char *)(v27 - 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v31 = v30 & v26;
  unint64_t v32 = (unint64_t)(v29 + 63) >> 6;
  v100 = (void (**)(char *, char *, uint64_t))(v12 + 16);
  v94 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  unsigned int v93 = enum case for CRCodableVersion.version3(_:);
  v92 = (void (**)(char *, void, uint64_t))(v4 + 104);
  v95 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v87 = v12;
  v91 = (void (**)(uint64_t, uint64_t))(v12 + 8);
  unint64_t v73 = v32 - 1;
  int64_t v81 = v32;
  unint64_t v74 = v32 - 5;
  uint64_t v80 = v27;
  uint64_t v75 = v27 + 40;
  *(void *)&long long v24 = 136315394;
  long long v83 = v24;
  v82 = (char *)&type metadata for Any + 8;
  v85 = v6;
  uint64_t v105 = v11;
  v98 = v10;
  v84 = v23;
  if (!v31) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v103 = (v31 - 1) & v31;
  unint64_t v33 = __clz(__rbit64(v31)) | (v25 << 6);
LABEL_5:
  uint64_t v34 = v88;
  (*(void (**)(char *, unint64_t, uint64_t))(v87 + 16))(v21, *(void *)(v88 + 48) + *(void *)(v87 + 72) * v33, v11);
  uint64_t v35 = *(void *)(v34 + 56) + *(void *)(v86 + 72) * v33;
  uint64_t v36 = sub_10007DC14((uint64_t *)&unk_100296840);
  sub_1001AD850(v35, (uint64_t)&v21[*(int *)(v36 + 48)], type metadata accessor for ReadingHistoryDay);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v21, 0, 1, v36);
  while (1)
  {
    sub_1000935F8((uint64_t)v21, (uint64_t)v23, &qword_100296838);
    uint64_t v40 = sub_10007DC14((uint64_t *)&unk_100296840);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v23, 1, v40) == 1)
    {
      swift_release();
      v67 = v78;
      v68 = (char *)objc_allocWithZone(v78);
      *(void *)&v68[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
      v69 = (uint64_t *)&v68[OBJC_IVAR___BDSReadingHistoryUpdate_value];
      uint64_t v70 = v77;
      uint64_t *v69 = v79;
      v69[1] = v70;
      v108.receiver = v68;
      v108.super_class = v67;
      id v71 = objc_msgSendSuper2(&v108, "init");

      return (uint64_t)v71;
    }
    uint64_t v41 = (uint64_t)&v23[*(int *)(v40 + 48)];
    (*v94)(v106, v23, v105);
    sub_1001AD8B8(v41, (uint64_t)v10, type metadata accessor for ReadingHistoryDay);
    (*v92)(v6, v93, v104);
    sub_1001ADA20((unint64_t *)&unk_100296890, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
    uint64_t v42 = sub_1001EBFF0();
    unint64_t v102 = v25;
    uint64_t v43 = v42;
    unint64_t v45 = v44;
    (*v95)(v6, v104);
    v46 = *v100;
    uint64_t v47 = (uint64_t)v76;
    (*v100)(v76, v106, v105);
    sub_100093680(v43, v45);
    uint64_t v48 = v79;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v107 = (void *)v48;
    unint64_t v49 = sub_1001A8708(v47);
    unint64_t v51 = v49;
    uint64_t v52 = *(void *)(v48 + 16);
    BOOL v53 = (v50 & 1) == 0;
    uint64_t v54 = v52 + v53;
    if (__OFADD__(v52, v53)) {
      goto LABEL_43;
    }
    if (*(void *)(v48 + 24) >= v54)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        int v89 = v50;
        sub_1001ABEBC();
        LOBYTE(v50) = v89;
      }
    }
    else
    {
      int v89 = v50;
      sub_1001A9CD0(v54, isUniquelyReferenced_nonNull_native);
      unint64_t v55 = sub_1001A8708(v47);
      int v56 = v50 & 1;
      LOBYTE(v50) = v89;
      if ((v89 & 1) != v56) {
        goto LABEL_45;
      }
      unint64_t v51 = v55;
    }
    v57 = v107;
    uint64_t v79 = (uint64_t)v107;
    if (v50)
    {
      uint64_t v58 = v107[7] + 16 * v51;
      sub_100081714(*(void *)v58, *(void *)(v58 + 8));
      *(void *)uint64_t v58 = v43;
      *(void *)(v58 + 8) = v45;
    }
    else
    {
      v107[(v51 >> 6) + 8] |= 1 << v51;
      v46((char *)(v57[6] + *(void *)(v87 + 72) * v51), (char *)v47, v105);
      v59 = (uint64_t *)(v57[7] + 16 * v51);
      uint64_t *v59 = v43;
      v59[1] = v45;
      uint64_t v60 = v57[2];
      BOOL v61 = __OFADD__(v60, 1);
      uint64_t v62 = v60 + 1;
      if (v61) {
        goto LABEL_44;
      }
      v57[2] = v62;
    }
    swift_bridgeObjectRelease();
    v63 = *v91;
    uint64_t v64 = v47;
    uint64_t v65 = v105;
    (*v91)(v64, v105);
    unint64_t v66 = v45;
    uint64_t v11 = v65;
    sub_100081714(v43, v66);
    v10 = v98;
    sub_1001AC260((uint64_t)v98);
    v63((uint64_t)v106, v65);
    uint64_t v6 = v85;
    unint64_t v25 = v102;
    unint64_t v31 = v103;
    if (v103) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v37 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v37 < v81)
    {
      unint64_t v38 = *(void *)(v80 + 8 * v37);
      if (v38) {
        goto LABEL_9;
      }
      if ((uint64_t)(v25 + 2) >= v81)
      {
        ++v25;
      }
      else
      {
        unint64_t v38 = *(void *)(v80 + 8 * (v25 + 2));
        if (v38)
        {
          int64_t v37 = v25 + 2;
LABEL_9:
          uint64_t v103 = (v38 - 1) & v38;
          unint64_t v33 = __clz(__rbit64(v38)) + (v37 << 6);
          unint64_t v25 = v37;
          goto LABEL_5;
        }
        if ((uint64_t)(v25 + 3) >= v81)
        {
          v25 += 2;
        }
        else
        {
          unint64_t v38 = *(void *)(v80 + 8 * (v25 + 3));
          if (v38)
          {
            int64_t v37 = v25 + 3;
            goto LABEL_9;
          }
          int64_t v37 = v25 + 4;
          if ((uint64_t)(v25 + 4) >= v81)
          {
            v25 += 3;
          }
          else
          {
            unint64_t v38 = *(void *)(v80 + 8 * v37);
            if (v38) {
              goto LABEL_9;
            }
            while (v74 != v25)
            {
              unint64_t v38 = *(void *)(v75 + 8 * v25++);
              if (v38)
              {
                int64_t v37 = v25 + 4;
                goto LABEL_9;
              }
            }
            unint64_t v25 = v73;
          }
        }
      }
    }
    uint64_t v39 = sub_10007DC14((uint64_t *)&unk_100296840);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v21, 1, 1, v39);
    uint64_t v103 = 0;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_1001ED0E0();
  __break(1u);
  return result;
}

uint64_t sub_1001A6B0C(uint64_t a1)
{
  uint64_t v109 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v2 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v92 = (uint64_t)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007DC14(&qword_100296830);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v90 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v94 = (uint64_t)&v86 - v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v86 - v9;
  uint64_t v11 = sub_1001EB0C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v14 = __chkstk_darwin(v13);
  v95 = (char *)&v86 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v86 - v16;
  uint64_t v18 = sub_10007DC14(&qword_100296820);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v110 = (char *)&v86 - v22;
  uint64_t v23 = *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryUpdate_value);
  sub_1001ADA20((unint64_t *)&qword_100295B60, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v96 = sub_1001EC290();
  uint64_t v24 = *(void *)(v23 + 64);
  uint64_t v97 = v23 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(v23 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  unint64_t v28 = (unint64_t)(v25 + 63) >> 6;
  v111 = (void (**)(char *, char *, uint64_t))(v12 + 16);
  v107 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  objc_super v108 = (void (**)(char *, void, uint64_t, uint64_t))(v2 + 56);
  uint64_t v101 = v12;
  uint64_t v104 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v91 = v2;
  unsigned int v93 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  unint64_t v87 = v28 - 1;
  swift_bridgeObjectRetain();
  unint64_t v29 = 0;
  int64_t v98 = v28;
  unint64_t v30 = v28 - 5;
  unint64_t v31 = v27;
  unint64_t v88 = v30;
  uint64_t v102 = v23;
  uint64_t v89 = v23 + 104;
  *(void *)&long long v32 = 136315138;
  long long v100 = v32;
  uint64_t v99 = (char *)&type metadata for Any + 8;
  uint64_t v105 = v10;
  uint64_t v106 = v11;
  uint64_t v103 = v21;
  v116 = v17;
  if (!v27) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v114 = (v31 - 1) & v31;
  unint64_t v115 = v29;
  unint64_t v33 = __clz(__rbit64(v31)) | (v29 << 6);
LABEL_5:
  uint64_t v34 = v102;
  (*(void (**)(char *, unint64_t, uint64_t))(v101 + 16))(v21, *(void *)(v102 + 48) + *(void *)(v101 + 72) * v33, v11);
  uint64_t v35 = (uint64_t *)(*(void *)(v34 + 56) + 16 * v33);
  uint64_t v36 = sub_10007DC14(&qword_100296828);
  int64_t v37 = (uint64_t *)&v21[*(int *)(v36 + 48)];
  uint64_t v38 = *v35;
  unint64_t v39 = v35[1];
  *int64_t v37 = v38;
  v37[1] = v39;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v21, 0, 1, v36);
  sub_100093680(v38, v39);
  uint64_t v40 = (uint64_t)v110;
  while (1)
  {
    sub_1000935F8((uint64_t)v21, v40, &qword_100296820);
    uint64_t v44 = sub_10007DC14(&qword_100296828);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v40, 1, v44) == 1)
    {
      swift_release();
      return v96;
    }
    unint64_t v45 = (uint64_t *)(v40 + *(int *)(v44 + 48));
    uint64_t v47 = *v45;
    unint64_t v46 = v45[1];
    (*v107)(v17, v40, v11);
    sub_100093680(v47, v46);
    sub_1001ADA20((unint64_t *)&unk_100296890, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
    uint64_t v112 = v47;
    unint64_t v113 = v46;
    uint64_t v48 = v109;
    sub_1001EC000();
    uint64_t v49 = v48;
    uint64_t v50 = v11;
    unint64_t v51 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v108;
    (*v108)(v10, 0, 1, v49);
    uint64_t v52 = *v111;
    uint64_t v53 = (uint64_t)v95;
    (*v111)(v95, v116, v50);
    uint64_t v54 = v94;
    sub_1001AC198((uint64_t)v10, v94);
    int v55 = (*v93)(v54, 1, v49);
    if (v55 != 1)
    {
      sub_1001AD8B8(v54, v92, type metadata accessor for ReadingHistoryDay);
      uint64_t v66 = v96;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v117 = (void *)v66;
      unint64_t v69 = sub_1001A8708(v53);
      uint64_t v70 = *(void *)(v66 + 16);
      BOOL v71 = (v68 & 1) == 0;
      uint64_t v72 = v70 + v71;
      if (__OFADD__(v70, v71)) {
        goto LABEL_52;
      }
      unint64_t v73 = (void (*)(unint64_t, char *, uint64_t))v52;
      if (*(void *)(v66 + 24) < v72)
      {
        char v74 = v68;
        sub_1001A948C(v72, isUniquelyReferenced_nonNull_native);
        unint64_t v75 = sub_1001A8708(v53);
        int v77 = v76 & 1;
        char v78 = v74;
        int v79 = v74 & 1;
        uint64_t v11 = v106;
        if (v79 != v77) {
          goto LABEL_54;
        }
        unint64_t v69 = v75;
        uint64_t v17 = v116;
        uint64_t v80 = v117;
        if ((v78 & 1) == 0) {
          goto LABEL_45;
        }
LABEL_35:
        uint64_t v96 = (uint64_t)v80;
        sub_1001ADA68(v92, v80[7] + *(void *)(v91 + 72) * v69);
LABEL_47:
        unint64_t v31 = v114;
        swift_bridgeObjectRelease();
        BOOL v61 = *v104;
        (*v104)(v95, v11);
        goto LABEL_48;
      }
      uint64_t v17 = v116;
      uint64_t v11 = v106;
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v80 = v117;
        if (v68) {
          goto LABEL_35;
        }
      }
      else
      {
        char v81 = v68;
        sub_1001AB990();
        uint64_t v80 = v117;
        if (v81) {
          goto LABEL_35;
        }
      }
LABEL_45:
      v80[(v69 >> 6) + 8] |= 1 << v69;
      v73(v80[6] + *(void *)(v101 + 72) * v69, v95, v11);
      sub_1001AD8B8(v92, v80[7] + *(void *)(v91 + 72) * v69, type metadata accessor for ReadingHistoryDay);
      uint64_t v82 = v80[2];
      BOOL v83 = __OFADD__(v82, 1);
      uint64_t v84 = v82 + 1;
      if (v83) {
        goto LABEL_53;
      }
      v80[2] = v84;
      uint64_t v96 = (uint64_t)v117;
      goto LABEL_47;
    }
    sub_1001AC200(v54);
    uint64_t v56 = v96;
    swift_bridgeObjectRetain();
    unint64_t v57 = sub_1001A8708(v53);
    char v59 = v58;
    swift_bridgeObjectRelease();
    if (v59)
    {
      uint64_t v86 = v51;
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      v117 = (void *)v56;
      uint64_t v17 = v116;
      if ((v60 & 1) == 0)
      {
        sub_1001AB990();
        uint64_t v56 = (uint64_t)v117;
      }
      BOOL v61 = *(void (**)(char *, uint64_t))(v101 + 8);
      uint64_t v62 = v106;
      v61((char *)(*(void *)(v56 + 48) + *(void *)(v101 + 72) * v57), v106);
      int64_t v63 = v57;
      uint64_t v64 = (uint64_t)v117;
      uint64_t v65 = v90;
      sub_1001AD8B8(v117[7] + *(void *)(v91 + 72) * v63, v90, type metadata accessor for ReadingHistoryDay);
      uint64_t v96 = v64;
      sub_100152280(v63, v64);
      swift_bridgeObjectRelease();
      v86(v65, 0, 1, v109);
    }
    else
    {
      uint64_t v65 = v90;
      v51(v90, 1, 1, v109);
      BOOL v61 = *v104;
      uint64_t v17 = v116;
      uint64_t v62 = v106;
    }
    v61(v95, v62);
    sub_1001AC200(v65);
    uint64_t v11 = v62;
    v21 = v103;
    unint64_t v31 = v114;
LABEL_48:
    sub_100081714(v112, v113);
    v61(v17, v11);
    v10 = v105;
    sub_1001AC200((uint64_t)v105);
    unint64_t v29 = v115;
    if (v31) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v41 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v41 >= v98)
    {
      unint64_t v115 = v29;
      uint64_t v40 = (uint64_t)v110;
    }
    else
    {
      unint64_t v42 = *(void *)(v97 + 8 * v41);
      uint64_t v40 = (uint64_t)v110;
      if (v42) {
        goto LABEL_9;
      }
      if ((uint64_t)(v29 + 2) >= v98)
      {
        unint64_t v115 = v29 + 1;
      }
      else
      {
        unint64_t v42 = *(void *)(v97 + 8 * (v29 + 2));
        if (v42)
        {
          int64_t v41 = v29 + 2;
LABEL_9:
          uint64_t v114 = (v42 - 1) & v42;
          unint64_t v115 = v41;
          unint64_t v33 = __clz(__rbit64(v42)) + (v41 << 6);
          goto LABEL_5;
        }
        if ((uint64_t)(v29 + 3) >= v98)
        {
          unint64_t v115 = v29 + 2;
        }
        else
        {
          unint64_t v42 = *(void *)(v97 + 8 * (v29 + 3));
          if (v42)
          {
            int64_t v41 = v29 + 3;
            goto LABEL_9;
          }
          int64_t v41 = v29 + 4;
          if ((uint64_t)(v29 + 4) >= v98)
          {
            unint64_t v115 = v29 + 3;
          }
          else
          {
            unint64_t v42 = *(void *)(v97 + 8 * v41);
            if (v42) {
              goto LABEL_9;
            }
            while (v88 != v29)
            {
              unint64_t v42 = *(void *)(v89 + 8 * v29++);
              if (v42)
              {
                int64_t v41 = v29 + 4;
                goto LABEL_9;
              }
            }
            unint64_t v115 = v87;
          }
        }
      }
    }
    uint64_t v43 = sub_10007DC14(&qword_100296828);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v21, 1, 1, v43);
    uint64_t v114 = 0;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_1001ED0E0();
  __break(1u);
  return result;
}

uint64_t ReadingHistoryUpdate.days.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ReadingHistoryUpdate.days.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = ReadingHistoryUpdate.days.getter();
  return sub_1001A78BC;
}

uint64_t sub_1001A78BC(void *a1)
{
  *(void *)(a1[1] + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t ReadingHistoryUpdate.description.getter()
{
  sub_1001ECD20(28);
  swift_bridgeObjectRelease();
  ReadingHistoryUpdate.days.getter();
  sub_1001EB0C0();
  type metadata accessor for ReadingHistoryDay(0);
  sub_1001ADA20((unint64_t *)&qword_100295B60, (void (*)(uint64_t))&type metadata accessor for Date);
  v1._countAndFlagsBits = sub_1001EC270();
  sub_1001EC490(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2._object = (void *)0x8000000100227710;
  v2._countAndFlagsBits = 0xD000000000000011;
  sub_1001EC490(v2);
  v3._countAndFlagsBits = sub_1001ED040();
  sub_1001EC490(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 125;
  v4._object = (void *)0xE100000000000000;
  sub_1001EC490(v4);
  return 0x3A737961647BLL;
}

void ReadingHistoryUpdate.init()()
{
}

uint64_t sub_1001A7B44@<X0>(void *a1@<X8>)
{
  Swift::String v2 = (uint64_t *)(*v1 + OBJC_IVAR___BDSReadingHistoryUpdate_value);
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  *a1 = v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_1001A7B60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = (char *)objc_allocWithZone(v2);
  *(void *)&v6[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  uint64_t v7 = &v6[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(void *)uint64_t v7 = v4;
  *((void *)v7 + 1) = v5;
  v9.receiver = v6;
  v9.super_class = v2;
  id result = objc_msgSendSuper2(&v9, "init");
  *a2 = result;
  return result;
}

id BDSReadingHistoryUpdateInfo.update.getter()
{
  return *(id *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdateInfo_update);
}

void __swiftcall BDSReadingHistoryUpdateInfo.init(coder:)(BDSReadingHistoryUpdateInfo_optional *__return_ptr retstr, NSCoder coder)
{
}

id BDSReadingHistoryUpdateInfo.init(coder:)(void *a1)
{
  uint64_t v3 = v1;
  id v4 = a1;
  id result = sub_10012838C(v4);
  if (result)
  {
    *(void *)&v3[OBJC_IVAR___BDSReadingHistoryUpdateInfo_update] = result;

    v7.receiver = v3;
    v7.super_class = (Class)BDSReadingHistoryUpdateInfo;
    id v6 = objc_msgSendSuper2(&v7, "init");

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall BDSReadingHistoryUpdateInfo.encode(with:)(NSCoder with)
{
  id v3 = [v1 update];
  sub_10012868C(with.super.isa);
}

id BDSReadingHistoryUpdateInfo.init(update:)(void *a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithUpdate:a1];

  return v2;
}

id BDSReadingHistoryUpdateInfo.init(update:)(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdateInfo_update) = a1;
  v3.super_class = (Class)BDSReadingHistoryUpdateInfo;
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t BDSReadingHistoryUpdateInfo.description.getter()
{
  id v1 = [v0 update];
  uint64_t v2 = ReadingHistoryUpdate.description.getter();

  return v2;
}

void __swiftcall BDSReadingHistoryUpdateInfo.init()(BDSReadingHistoryUpdateInfo *__return_ptr retstr)
{
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  [v1 init];
}

void BDSReadingHistoryUpdateInfo.init()()
{
}

uint64_t sub_1001A8090(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1001A8164(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100087AE8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100087AE8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1000947F0((uint64_t)v12);
  return v7;
}

uint64_t sub_1001A8164(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1001ECBD0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1001A8320(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1001ECD90();
  if (!v8)
  {
    sub_1001ECE80();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1001ECEF0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1001A8320(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1001A83B8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001A8530(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1001A8530(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1001A83B8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000D5EC4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1001ECD30();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1001ECE80();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1001EC4B0();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_1001ECEF0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1001ECE80();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1001A8530(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100292F10);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

unint64_t sub_1001A8680(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1001ECCB0(*(void *)(v2 + 40));
  return sub_1001A8A40(a1, v4);
}

unint64_t sub_1001A86C4(uint64_t a1)
{
  uint64_t v2 = sub_1001ED160();
  return sub_1001A8B08(a1, v2);
}

unint64_t sub_1001A8708(uint64_t a1)
{
  sub_1001EB0C0();
  sub_1001ADA20((unint64_t *)&qword_100295B60, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v2 = sub_1001EC2E0();
  return sub_1001A8BA4(a1, v2);
}

unint64_t sub_1001A87A0(uint64_t a1, uint64_t a2)
{
  sub_1001ED170();
  sub_1001EC440();
  Swift::Int v4 = sub_1001ED1A0();
  return sub_1001A8D64(a1, a2, v4);
}

unint64_t sub_1001A8818(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1001ECAF0(*(void *)(v2 + 40));
  return sub_1001A90AC(a1, v4, (unint64_t *)&unk_100293740);
}

unint64_t sub_1001A8868(uint64_t a1)
{
  sub_1001EC370();
  sub_1001ED170();
  sub_1001EC440();
  Swift::Int v2 = sub_1001ED1A0();
  swift_bridgeObjectRelease();
  return sub_1001A8E48(a1, v2);
}

unint64_t sub_1001A88FC(uint64_t a1, uint64_t a2, int a3)
{
  sub_1001ED170();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  sub_1001ED190(a3 & 1);
  Swift::Int v6 = sub_1001ED1A0();
  return sub_1001A8FC0(a1, a2, a3, v6);
}

unint64_t sub_1001A89A0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1001ECAF0(*(void *)(v2 + 40));
  return sub_1001A90AC(a1, v4, (unint64_t *)&unk_100296550);
}

unint64_t sub_1001A89F0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1001ECAF0(*(void *)(v2 + 40));
  return sub_1001A90AC(a1, v4, (unint64_t *)&qword_100296978);
}

unint64_t sub_1001A8A40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100170D9C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1001ECCC0();
      sub_100087A68((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1001A8B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1001A8BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    size_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1001ADA20(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
      char v15 = sub_1001EC330();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1001A8D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1001ED080() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1001ED080() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1001A8E48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1001EC370();
    uint64_t v8 = v7;
    if (v6 == sub_1001EC370() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1001ED080();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1001EC370();
          uint64_t v15 = v14;
          if (v13 == sub_1001EC370() && v15 == v16) {
            break;
          }
          char v18 = sub_1001ED080();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1001A8FC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      uint64_t v13 = v12 + 24 * v7;
      int v14 = *(unsigned __int8 *)(v13 + 16);
      if (*(void *)v13 == a1 && *(void *)(v13 + 8) == a2)
      {
        if (v14 == (a3 & 1)) {
          return v7;
        }
      }
      else if ((sub_1001ED080() & 1) != 0 && ((v14 ^ a3) & 1) == 0)
      {
        return v7;
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1001A90AC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100081668(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1001ECB00();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1001ECB00();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_1001A91C0(uint64_t a1, char a2)
{
  return sub_1001A91E4(a1, a2, &qword_1002969E8);
}

uint64_t sub_1001A91CC(uint64_t a1, char a2)
{
  return sub_1001A91E4(a1, a2, &qword_1002969D0);
}

uint64_t sub_1001A91D8(uint64_t a1, char a2)
{
  return sub_1001A91E4(a1, a2, &qword_100296980);
}

uint64_t sub_1001A91E4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10007DC14(a3);
  uint64_t result = sub_1001ECEC0();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    unint64_t v31 = v4;
    int64_t v9 = 0;
    id v10 = (void *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        if (__OFADD__(v9++, 1)) {
          goto LABEL_40;
        }
        if (v9 >= v14)
        {
LABEL_31:
          if ((a2 & 1) == 0)
          {
            uint64_t result = swift_release();
            uint64_t v4 = v31;
            goto LABEL_38;
          }
          uint64_t v30 = 1 << *(unsigned char *)(v6 + 32);
          if (v30 >= 64) {
            bzero((void *)(v6 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            void *v10 = -1 << v30;
          }
          uint64_t v4 = v31;
          *(void *)(v6 + 16) = 0;
          break;
        }
        unint64_t v23 = v10[v9];
        if (!v23)
        {
          int64_t v24 = v9 + 1;
          if (v9 + 1 >= v14) {
            goto LABEL_31;
          }
          unint64_t v23 = v10[v24];
          if (!v23)
          {
            while (1)
            {
              int64_t v9 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                break;
              }
              if (v9 >= v14) {
                goto LABEL_31;
              }
              unint64_t v23 = v10[v9];
              ++v24;
              if (v23) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            return result;
          }
          ++v9;
        }
LABEL_20:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v25 = *(void *)(*(void *)(v6 + 48) + 8 * v21);
      long long v32 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v21);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_1001ED160();
      uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v15 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v15 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v15 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v8 + 48) + 8 * v19) = v25;
      *(_OWORD *)(*(void *)(v8 + 56) + 16 * v19) = v32;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1001A948C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v49 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EB0C0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10007DC14(&qword_1002969E0);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1001ECEC0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  unint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  unint64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    char v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    unint64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1001AD8B8(v32 + v33 * v24, v54, type metadata accessor for ReadingHistoryDay);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1001AD850(v34 + v33 * v24, v54, type metadata accessor for ReadingHistoryDay);
    }
    sub_1001ADA20((unint64_t *)&qword_100295B60, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_1001EC2E0();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      unint64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_1001AD8B8(v54, *(void *)(v13 + 56) + v33 * v22, type metadata accessor for ReadingHistoryDay);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  char v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1001A99A4(uint64_t a1, char a2)
{
  return sub_1001A99BC(a1, a2, &qword_100295C68);
}

uint64_t sub_1001A99B0(uint64_t a1, char a2)
{
  return sub_1001A99BC(a1, a2, (uint64_t *)&unk_100296940);
}

uint64_t sub_1001A99BC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10007DC14(a3);
  char v37 = a2;
  uint64_t v7 = sub_1001ECEC0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1001ED170();
    sub_1001EC440();
    uint64_t result = sub_1001ED1A0();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1001A9CD0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10007DC14(&qword_1002969D8);
  int v47 = a2;
  uint64_t v10 = sub_1001ECEC0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v41 = v2;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v49 = v8;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  uint64_t v50 = v5;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    unint64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v30 = *v29;
      unint64_t v31 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v30 = *v32;
      unint64_t v31 = v32[1];
      sub_100093680(*v32, v31);
    }
    sub_1001ADA20((unint64_t *)&qword_100295B60, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = sub_1001EC2E0();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    unint64_t v20 = (uint64_t *)(*(void *)(v11 + 56) + 16 * v19);
    *unint64_t v20 = v30;
    v20[1] = v31;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  unint64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1001AA118(uint64_t a1, char a2)
{
  return sub_1001AA130(a1, a2, (uint64_t *)&unk_100296730);
}

uint64_t sub_1001AA124(uint64_t a1, char a2)
{
  return sub_1001AA130(a1, a2, &qword_100296768);
}

uint64_t sub_1001AA130(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10007DC14(a3);
  uint64_t v7 = sub_1001ECEC0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  unint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_1001ECAF0(*(void *)(v8 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  unint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1001AA400(uint64_t a1, int a2)
{
  return sub_1001AB400(a1, a2, (uint64_t (*)(void))_s11TrackedItemVMa, &qword_100294308, (uint64_t (*)(void))_s11TrackedItemVMa);
}

uint64_t sub_1001AA434(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10007DC14((uint64_t *)&unk_100296950);
  char v43 = a2;
  uint64_t v6 = sub_1001ECEC0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v41 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v21 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v22 = v21 | (v13 << 6);
      }
      else
      {
        int64_t v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v40) {
          goto LABEL_33;
        }
        unint64_t v24 = v41[v23];
        ++v13;
        if (!v24)
        {
          int64_t v13 = v23 + 1;
          if (v23 + 1 >= v40) {
            goto LABEL_33;
          }
          unint64_t v24 = v41[v13];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v43)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
                if (v39 >= 64) {
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v41 = -1 << v39;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v13 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v40) {
                  goto LABEL_33;
                }
                unint64_t v24 = v41[v13];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v25;
          }
        }
LABEL_30:
        unint64_t v10 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      uint64_t v30 = 24 * v22;
      uint64_t v31 = *(void *)(v5 + 48) + v30;
      uint64_t v33 = *(void *)v31;
      uint64_t v32 = *(void *)(v31 + 8);
      Swift::UInt8 v34 = *(unsigned char *)(v31 + 16);
      id v35 = (uint64_t *)(*(void *)(v5 + 56) + v30);
      uint64_t v36 = *v35;
      uint64_t v37 = v35[1];
      uint64_t v38 = v35[2];
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1001ED170();
      swift_bridgeObjectRetain();
      sub_1001EC440();
      swift_bridgeObjectRelease();
      sub_1001ED190(v34);
      uint64_t result = sub_1001ED1A0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 24 * v17;
      uint64_t v19 = *(void *)(v7 + 48) + v18;
      *(void *)uint64_t v19 = v33;
      *(void *)(v19 + 8) = v32;
      *(unsigned char *)(v19 + 16) = v34;
      uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
      *uint64_t v20 = v36;
      v20[1] = v37;
      v20[2] = v38;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1001AA78C(uint64_t a1, char a2)
{
  return sub_1001AA7A4(a1, a2, &qword_1002969B8);
}

uint64_t sub_1001AA798(uint64_t a1, char a2)
{
  return sub_1001AA7A4(a1, a2, (uint64_t *)&unk_1002969C0);
}

uint64_t sub_1001AA7A4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10007DC14(a3);
  char v37 = a2;
  uint64_t v7 = sub_1001ECEC0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1001ED170();
    sub_1001EC440();
    uint64_t result = sub_1001ED1A0();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1001AAAB8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10007DC14(&qword_1002969B0);
  char v37 = a2;
  uint64_t v6 = sub_1001ECEC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1001ED170();
    sub_1001EC440();
    uint64_t result = sub_1001ED1A0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1001AADC4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10007DC14(&qword_100294320);
  char v42 = a2;
  uint64_t v6 = sub_1001ECEC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    int64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1001ED170();
    sub_1001EC440();
    uint64_t result = sub_1001ED1A0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1001AB0EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10007DC14(&qword_100296970);
  uint64_t v6 = sub_1001ECEC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    unint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v17);
    int64_t v23 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (a2)
    {
      sub_10010080C(v23, (uint64_t)v34);
    }
    else
    {
      sub_1000AF9BC((uint64_t)v23, (uint64_t)v34);
      id v24 = v22;
    }
    uint64_t result = sub_1001ECAF0(*(void *)(v7 + 40));
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v7 + 48) + 8 * v15) = v22;
    uint64_t result = sub_10010080C(v34, *(void *)(v7 + 56) + 40 * v15);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1001AB3CC(uint64_t a1, int a2)
{
  return sub_1001AB400(a1, a2, _s14PricingServiceV12FetchedPriceVMa, (uint64_t *)&unk_100296960, _s14PricingServiceV12FetchedPriceVMa);
}

uint64_t sub_1001AB400(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  unint64_t v51 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a3(0);
  uint64_t v48 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v50 = (uint64_t)&v45 - v10;
  uint64_t v11 = *v5;
  sub_10007DC14(a4);
  int v49 = a2;
  uint64_t v12 = sub_1001ECEC0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int v47 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v45 = v5;
  int64_t v46 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46) {
      break;
    }
    unint64_t v26 = v47;
    unint64_t v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v27 = v47[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v45;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v46) {
              goto LABEL_34;
            }
            unint64_t v27 = v47[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v11 + 56);
    uint64_t v30 = v11;
    uint64_t v31 = *(void *)(v11 + 48) + 24 * v24;
    uint64_t v33 = *(void *)v31;
    uint64_t v32 = *(void *)(v31 + 8);
    Swift::UInt8 v34 = *(unsigned char *)(v31 + 16);
    uint64_t v35 = *(void *)(v48 + 72);
    uint64_t v36 = v29 + v35 * v24;
    if (v49)
    {
      sub_1001AD8B8(v36, v50, v51);
    }
    else
    {
      sub_1001AD850(v36, v50, v51);
      swift_bridgeObjectRetain();
    }
    sub_1001ED170();
    swift_bridgeObjectRetain();
    sub_1001EC440();
    swift_bridgeObjectRelease();
    sub_1001ED190(v34);
    uint64_t result = sub_1001ED1A0();
    uint64_t v37 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v18 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v38) & ~*(void *)(v18 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v18 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v21 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v22 = *(void *)(v13 + 48) + 24 * v21;
    *(void *)uint64_t v22 = v33;
    *(void *)(v22 + 8) = v32;
    *(unsigned char *)(v22 + 16) = v34;
    uint64_t result = sub_1001AD8B8(v50, *(void *)(v13 + 56) + v35 * v21, v51);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v30;
  }
  swift_release();
  uint64_t v7 = v45;
  unint64_t v26 = v47;
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v11 + 32);
  if (v44 >= 64) {
    bzero(v26, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v44;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v7 = v13;
  return result;
}

void *sub_1001AB7E0()
{
  return sub_1001AB804(&qword_1002969E8);
}

void *sub_1001AB7EC()
{
  return sub_1001AB804(&qword_1002969D0);
}

void *sub_1001AB7F8()
{
  return sub_1001AB804(&qword_100296980);
}

void *sub_1001AB804(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10007DC14(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1001ECEB0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_26;
    }
    if (v10 >= v14) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    if (!v22) {
      break;
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 16 * v16;
    long long v20 = *(_OWORD *)(*(void *)(v3 + 56) + v19);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(_OWORD *)(*(void *)(v5 + 56) + v19) = v20;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v23 = v10 + 1;
  if (v10 + 1 >= v14) {
    goto LABEL_24;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    ++v10;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

char *sub_1001AB990()
{
  uint64_t v1 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v40 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  unint64_t v39 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1001EB0C0();
  uint64_t v3 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14(&qword_1002969E0);
  uint64_t v32 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1001ECEB0();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v42 = v6;
  if (!v7)
  {
    uint64_t result = (char *)swift_release();
    uint64_t v30 = v42;
    uint64_t v29 = v32;
LABEL_25:
    *uint64_t v29 = v30;
    return result;
  }
  uint64_t v8 = v6;
  uint64_t result = (char *)(v6 + 64);
  int64_t v10 = (char *)(v5 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v33 = v5 + 64;
  if (v8 != v5 || result >= &v10[8 * v11])
  {
    uint64_t result = (char *)memmove(result, v10, 8 * v11);
    uint64_t v8 = v42;
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5;
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  uint64_t v36 = v3 + 16;
  int64_t v34 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v35 = v3 + 32;
  uint64_t v17 = v37;
  uint64_t v16 = v38;
  uint64_t v18 = (uint64_t)v39;
  for (uint64_t i = v42;
        ;
        uint64_t result = (char *)sub_1001AD8B8(v18, *(void *)(i + 56) + v25, type metadata accessor for ReadingHistoryDay))
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v12 << 6);
      uint64_t v22 = v41;
      goto LABEL_9;
    }
    int64_t v26 = v12 + 1;
    uint64_t v22 = v41;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v12;
    if (!v27)
    {
      int64_t v12 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v12);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v27 - 1) & v27;
    unint64_t v21 = __clz(__rbit64(v27)) + (v12 << 6);
LABEL_9:
    unint64_t v23 = *(void *)(v3 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v17, *(void *)(v22 + 48) + v23, v16);
    uint64_t v24 = *(void *)(v22 + 56);
    unint64_t v25 = *(void *)(v40 + 72) * v21;
    sub_1001AD850(v24 + v25, v18, type metadata accessor for ReadingHistoryDay);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(i + 48) + v23, v17, v16);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    uint64_t result = (char *)swift_release();
    uint64_t v29 = v32;
    uint64_t v30 = v42;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v12 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v12 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v12);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1001ABD04()
{
  uint64_t v1 = v0;
  sub_10007DC14((uint64_t *)&unk_100296940);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECEB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1001ABEBC()
{
  uint64_t v39 = sub_1001EB0C0();
  uint64_t v1 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14(&qword_1002969D8);
  uint64_t v33 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1001ECEB0();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v41 = v4;
  if (!v5)
  {
    uint64_t result = (char *)swift_release();
    uint64_t v31 = v41;
    uint64_t v30 = v33;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (char *)(v4 + 64);
  uint64_t v8 = (char *)(v3 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    uint64_t result = (char *)memmove(result, v8, 8 * v9);
    uint64_t v6 = v41;
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v40 = v3;
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  uint64_t v37 = v1 + 16;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v36 = v1 + 32;
  unint64_t v15 = v38;
  uint64_t v14 = v39;
  uint64_t v16 = v41;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v10 << 6);
      uint64_t v19 = v40;
      goto LABEL_9;
    }
    int64_t v27 = v10 + 1;
    uint64_t v19 = v40;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v27);
    ++v10;
    if (!v28)
    {
      int64_t v10 = v27 + 1;
      if (v27 + 1 >= v35) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v34 + 8 * v10);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(void *)(v19 + 48) + v20, v14);
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v22 = 16 * v18;
    unint64_t v23 = (uint64_t *)(v21 + 16 * v18);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v16 + 48) + v20, v15, v14);
    int64_t v26 = (uint64_t *)(*(void *)(v16 + 56) + v22);
    *int64_t v26 = v24;
    v26[1] = v25;
    uint64_t result = (char *)sub_100093680(v24, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v35)
  {
LABEL_23:
    uint64_t result = (char *)swift_release();
    uint64_t v30 = v33;
    uint64_t v31 = v41;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v34 + 8 * v29);
  if (v28)
  {
    int64_t v10 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1001AC198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100296830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AC200(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100296830);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001AC260(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001AC2BC()
{
  unint64_t result = qword_100296860;
  if (!qword_100296860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296860);
  }
  return result;
}

unint64_t sub_1001AC310()
{
  unint64_t result = qword_100296870;
  if (!qword_100296870)
  {
    sub_10008155C(&qword_100296868);
    sub_1001ADA20(&qword_100292138, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001AC3BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296870);
  }
  return result;
}

unint64_t sub_1001AC3BC()
{
  unint64_t result = qword_100296880;
  if (!qword_100296880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296880);
  }
  return result;
}

id sub_1001AC410()
{
  return sub_1001AC428((uint64_t *)&unk_100296730);
}

id sub_1001AC41C()
{
  return sub_1001AC428(&qword_100296768);
}

id sub_1001AC428(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10007DC14(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1001ECEB0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001AC5C8()
{
  return sub_1001ACF00((uint64_t (*)(void))_s11TrackedItemVMa, &qword_100294308, (uint64_t (*)(void))_s11TrackedItemVMa);
}

void *sub_1001AC5FC()
{
  uint64_t v1 = v0;
  sub_10007DC14((uint64_t *)&unk_100296950);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECEB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    LOBYTE(v17) = *(unsigned char *)(v17 + 16);
    id v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v23 = v20[1];
    uint64_t v22 = v20[2];
    uint64_t v24 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v24 = v18;
    *(void *)(v24 + 8) = v19;
    *(unsigned char *)(v24 + 16) = v17;
    unint64_t v25 = (void *)(*(void *)(v4 + 56) + v16);
    *unint64_t v25 = v21;
    v25[1] = v23;
    v25[2] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001AC7CC()
{
  return sub_1001AC7E4(&qword_1002969B8);
}

void *sub_1001AC7D8()
{
  return sub_1001AC7E4((uint64_t *)&unk_1002969C0);
}

void *sub_1001AC7E4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10007DC14(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1001ECEB0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001AC994()
{
  uint64_t v1 = v0;
  sub_10007DC14(&qword_1002969B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECEB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001ACB44()
{
  uint64_t v1 = v0;
  sub_10007DC14(&qword_100294320);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECEB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *unint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001ACD00()
{
  uint64_t v1 = v0;
  sub_10007DC14(&qword_100296970);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECEB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    sub_1000AF9BC(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_10010080C(v22, *(void *)(v4 + 56) + v18);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001ACECC()
{
  return sub_1001ACF00(_s14PricingServiceV12FetchedPriceVMa, (uint64_t *)&unk_100296960, _s14PricingServiceV12FetchedPriceVMa);
}

void *sub_1001ACF00(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v39 = a3;
  uint64_t v5 = a1(0);
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v35 - v6;
  sub_10007DC14(a2);
  int64_t v35 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1001ECEB0();
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v40 = v9;
  if (!v10)
  {
    id result = (void *)swift_release();
    uint64_t v34 = v40;
    uint64_t v33 = v35;
LABEL_28:
    *uint64_t v33 = v34;
    return result;
  }
  uint64_t v11 = v9;
  id result = (void *)(v9 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    uint64_t v11 = v40;
  }
  uint64_t v36 = v8 + 64;
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v8 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v16 + 63) >> 6;
  int64_t v19 = v39;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v30 >= v37) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v30);
    ++v15;
    if (!v31)
    {
      int64_t v15 = v30 + 1;
      if (v30 + 1 >= v37) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v36 + 8 * v15);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v18 = (v31 - 1) & v31;
    unint64_t v21 = __clz(__rbit64(v31)) + (v15 << 6);
LABEL_12:
    uint64_t v22 = 24 * v21;
    uint64_t v23 = *(void *)(v8 + 48) + 24 * v21;
    uint64_t v24 = *(void *)v23;
    uint64_t v25 = *(void *)(v23 + 8);
    char v26 = *(unsigned char *)(v23 + 16);
    unint64_t v27 = *(void *)(v38 + 72) * v21;
    sub_1001AD850(*(void *)(v8 + 56) + v27, (uint64_t)v7, v19);
    uint64_t v28 = v40;
    uint64_t v29 = *(void *)(v40 + 48) + v22;
    *(void *)uint64_t v29 = v24;
    *(void *)(v29 + 8) = v25;
    *(unsigned char *)(v29 + 16) = v26;
    sub_1001AD8B8((uint64_t)v7, *(void *)(v28 + 56) + v27, v19);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v37)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v33 = v35;
    uint64_t v34 = v40;
    goto LABEL_28;
  }
  unint64_t v31 = *(void *)(v36 + 8 * v32);
  if (v31)
  {
    int64_t v15 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v15 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v15 >= v37) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v36 + 8 * v15);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1001AD1A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6174614473796164 && a2 == 0xE800000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E654774696465 && a2 == 0xEE006E6F69746172)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001AD2C0(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100296988);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_100094758(a1, v7);
  sub_1001AC2BC();
  sub_1001ED1D0();
  if (v1)
  {
    sub_1000947F0((uint64_t)a1);
  }
  else
  {
    sub_10007DC14(&qword_100296868);
    v9[7] = 0;
    sub_1001AD920();
    sub_1001ECFA0();
    uint64_t v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    sub_1001ECF90();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1000947F0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *initializeBufferWithCopyOfBuffer for _ReadingHistoryUpdateProperties(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for _ReadingHistoryUpdateProperties()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for _ReadingHistoryUpdateProperties(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for _ReadingHistoryUpdateProperties(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for _ReadingHistoryUpdateProperties(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _ReadingHistoryUpdateProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)id result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ReadingHistoryUpdateProperties()
{
  return &type metadata for _ReadingHistoryUpdateProperties;
}

uint64_t type metadata accessor for ReadingHistoryUpdate()
{
  return self;
}

uint64_t type metadata accessor for BDSReadingHistoryUpdateInfo(uint64_t a1)
{
  return sub_100081668(a1, &qword_100296920);
}

unsigned char *storeEnumTagSinglePayload for _ReadingHistoryUpdateProperties.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001AD710);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ReadingHistoryUpdateProperties.CodingKeys()
{
  return &type metadata for _ReadingHistoryUpdateProperties.CodingKeys;
}

unint64_t sub_1001AD74C()
{
  unint64_t result = qword_100296928;
  if (!qword_100296928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296928);
  }
  return result;
}

unint64_t sub_1001AD7A4()
{
  unint64_t result = qword_100296930;
  if (!qword_100296930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296930);
  }
  return result;
}

unint64_t sub_1001AD7FC()
{
  unint64_t result = qword_100296938;
  if (!qword_100296938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296938);
  }
  return result;
}

uint64_t sub_1001AD850(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001AD8B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1001AD920()
{
  unint64_t result = qword_100296990;
  if (!qword_100296990)
  {
    sub_10008155C(&qword_100296868);
    sub_1001ADA20(&qword_100292148, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001AD9CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296990);
  }
  return result;
}

unint64_t sub_1001AD9CC()
{
  unint64_t result = qword_1002969A0;
  if (!qword_1002969A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002969A0);
  }
  return result;
}

uint64_t sub_1001ADA20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001ADA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001ADAD0()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_1001ADBA0(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return sub_1001B0D34(a1, a2, a3, a4);
}

void sub_1001ADBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_isaMask & *v2;
  unsigned int v6 = *(void **)((char *)v2 + qword_100296A00);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v5 + 80);
  *(void *)(v8 + 32) = *(void *)(v5 + 96);
  *(void *)(v8 + 40) = v7;
  *(void *)(v8 + 48) = a1;
  *(void *)(v8 + 56) = a2;
  v10[4] = sub_1001B4A14;
  v10[5] = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100090AB4;
  v10[3] = &unk_10026B4A0;
  id v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  [v6 cloudDataWithPredicate:0 sortDescriptors:0 completion:v9];
  _Block_release(v9);
}

void sub_1001ADD84(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + qword_1002A4310);
  *(unsigned char *)(v1 + qword_1002A4310) = a1;
  int v3 = *(unsigned __int8 *)(v1 + qword_1002A4310);
  if (v2 != v3) {
    sub_1001B0A98(v3);
  }
}

id sub_1001ADDAC()
{
  sub_1001AE3EC();
  uint64_t v1 = v0;
  sub_1001AE2D8();
  id v2 = objc_allocWithZone((Class)BCCloudDataSource);
  NSString v3 = sub_1001EC340();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithManagedObjectModel:v1 nameOnDisk:v3];

  return v4;
}

void sub_1001ADE34(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  id v8 = [*(id *)&v4[qword_100296A30] createTransactionWithName:"com.apple.ibooks.CRDTModelSyncManager.setCloudData"];
  aBlock[0] = *(void *)(ObjectType + 80);
  swift_getMetatypeMetadata();
  uint64_t v9 = sub_1001EC3D0();
  uint64_t v11 = v10;
  unint64_t v12 = (objc_class *)type metadata accessor for CRDTModelSync();
  unint64_t v13 = (char *)objc_allocWithZone(v12);
  unint64_t v14 = &v13[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type];
  *(void *)unint64_t v14 = 0;
  *((void *)v14 + 1) = 0xE000000000000000;
  *(_OWORD *)&v13[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData] = xmmword_100215AF0;
  sub_100093680(a1, a2);
  v30.receiver = v13;
  v30.super_class = v12;
  int64_t v15 = (char *)objc_msgSendSuper2(&v30, "init");
  uint64_t v16 = (uint64_t *)&v15[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type];
  *uint64_t v16 = v9;
  v16[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t *)&v15[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
  uint64_t v18 = *(void *)&v15[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
  unint64_t v19 = *(void *)&v15[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8];
  *uint64_t v17 = a1;
  v17[1] = a2;
  sub_100081700(v18, v19);
  unint64_t v20 = *(void **)&v4[qword_100296A00];
  unint64_t v21 = v15;
  sub_1001AE570();
  sub_10007DC14(&qword_1002924D0);
  Class isa = sub_1001EC250().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v4;
  v23[3] = a3;
  v23[4] = a4;
  v23[5] = v8;
  aBlock[4] = sub_1001B49A0;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BF040;
  aBlock[3] = &unk_10026B450;
  uint64_t v24 = _Block_copy(aBlock);
  uint64_t v25 = v4;
  swift_retain();
  id v26 = v8;
  swift_release();
  [v20 setCloudData:v21 predicate:0 mergers:isa completion:v24];
  _Block_release(v24);
}

uint64_t sub_1001AE098(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_1001AE0C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, id))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, v6);
  swift_release();
}

void sub_1001AE138(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1001EAE50();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

void sub_1001AE1A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1001AE220(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_1001AE22C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  sub_10007DC14(&qword_100292708);
  uint64_t v7 = sub_1001EC5E0();
  swift_retain();
  id v8 = a4;
  v6(a2, v7, a4);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1001AE2D8()
{
  uint64_t v1 = sub_1001ECD40();
  v2._countAndFlagsBits = 45;
  v2._object = (void *)0xE100000000000000;
  sub_1001EC490(v2);
  swift_getMetatypeMetadata();
  v3._countAndFlagsBits = sub_1001EC3D0();
  sub_1001EC490(v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1001AE358()
{
  return sub_1001EC3D0();
}

NSString sub_1001AE398()
{
  swift_getMetatypeMetadata();
  sub_1001EC3D0();
  NSString v0 = sub_1001EC340();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1001AE3EC()
{
  uint64_t v0 = sub_1001EAF60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = [self bundleForClass:ObjCClassFromMetadata];
  sub_1001ECAE0();

  sub_1001EAEA0();
  swift_bridgeObjectRelease();
  id v6 = objc_allocWithZone((Class)NSManagedObjectModel);
  sub_1001EAEC0(v7);
  uint64_t v9 = v8;
  id v10 = [v6 initWithContentsOfURL:v8];

  if (v10) {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else {
    __break(1u);
  }
}

unint64_t sub_1001AE570()
{
  uint64_t v1 = qword_100296A28;
  if (*(void *)((char *)v0 + qword_100296A28))
  {
    unint64_t v2 = *(void *)((char *)v0 + qword_100296A28);
  }
  else
  {
    unint64_t v2 = sub_1001AE5D8(v0);
    *(void *)((char *)v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t sub_1001AE5D8(void *a1)
{
  swift_getObjectType();
  uint64_t v2 = swift_isaMask & *a1;
  Swift::Int v3 = sub_1000B72E4();
  uint64_t v5 = v4;
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v2 + 80);
  *(void *)(v7 + 32) = *(void *)(v2 + 96);
  *(void *)(v7 + 40) = v6;
  *(void *)(v7 + 48) = v3;
  *(void *)(v7 + 56) = v5;
  int64_t v15 = sub_1001B47E8;
  uint64_t v16 = v7;
  aBlock = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  unint64_t v13 = sub_1001B08A8;
  unint64_t v14 = &unk_10026B1F8;
  id v8 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  sub_10007DC14((uint64_t *)&unk_1002924E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215320;
  aBlock = (void **)v3;
  uint64_t v12 = v5;
  sub_1001ECCD0();
  *(void *)(inited + 72) = v8;
  return sub_100121104(inited);
}

void sub_1001AE784(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9)
{
  unint64_t v240 = a7;
  v243 = (char *)a4;
  v238 = (char *)a3;
  uint64_t v237 = a2;
  uint64_t v239 = a9;
  uint64_t v13 = sub_1001EB560();
  unint64_t v242 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int64_t v15 = (char *)v211 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_1001EBF80();
  uint64_t v225 = *(void *)(v222 - 8);
  uint64_t v16 = __chkstk_darwin(v222);
  v224 = (char *)v211 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = *(void *)(a6 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  v227 = (void (*)(char *, uint64_t))((char *)v211 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v18);
  v226 = (void (*)(char *, char *, uint64_t))((char *)v211 - v21);
  uint64_t v22 = __chkstk_darwin(v20);
  v220 = (char *)v211 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v219 = (char *)v211 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v221 = (char *)v211 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  os_log_t v228 = (os_log_t)((char *)v211 - v29);
  uint64_t v30 = __chkstk_darwin(v28);
  v217 = (char *)v211 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v223 = (char *)v211 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  os_log_t v218 = (os_log_t)((char *)v211 - v35);
  uint64_t v36 = __chkstk_darwin(v34);
  v229 = (char *)v211 - v37;
  __chkstk_darwin(v36);
  v230 = (char *)v211 - v38;
  uint64_t v241 = a6;
  uint64_t v234 = sub_1001ECB50();
  uint64_t v232 = *(void *)(v234 - 8);
  uint64_t v39 = __chkstk_darwin(v234);
  uint64_t v41 = (char *)v211 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v44 = (char *)v211 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  v233 = (char *)v211 - v46;
  __chkstk_darwin(v45);
  v231 = (char *)v211 - v47;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_7:
    swift_beginAccess();
    uint64_t v50 = swift_unknownObjectWeakLoadStrong();
    if (v50)
    {
      unint64_t v51 = (void *)v50;
      unint64_t v52 = v242;
      (*(void (**)(char *, uint64_t, uint64_t))(v242 + 16))(v15, v50 + qword_1002A4300, v13);

      sub_100087AE8(a1, (uint64_t)v249);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v53 = sub_1001EB540();
      os_log_type_t v54 = sub_1001EC910();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        v238 = (char *)swift_slowAlloc();
        v246 = v238;
        *(_DWORD *)uint64_t v55 = 136315650;
        v236 = a8;
        swift_beginAccess();
        v253[0] = swift_unknownObjectWeakLoadStrong();
        type metadata accessor for CRDTModelCloudDataManager();
        sub_1001ECB50();
        uint64_t v241 = v13;
        uint64_t v56 = sub_1001EC3D0();
        v253[0] = sub_1001A8090(v56, v57, (uint64_t *)&v246);
        sub_1001ECBC0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v55 + 12) = 2080;
        sub_100087AE8((uint64_t)v249, (uint64_t)v253);
        uint64_t v58 = sub_1001EC3D0();
        v253[0] = sub_1001A8090(v58, v59, (uint64_t *)&v246);
        sub_1001ECBC0();
        a8 = v236;
        swift_bridgeObjectRelease();
        sub_1000947F0((uint64_t)v249);
        *(_WORD *)(v55 + 22) = 2080;
        swift_bridgeObjectRetain();
        v253[0] = sub_1001A8090((uint64_t)v243, a5, (uint64_t *)&v246);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "CloudSyncConflictResolver: self=%s key=%s is not equal to recordType=%s", (uint8_t *)v55, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v241);
      }
      else
      {
        swift_release_n();
        sub_1000947F0((uint64_t)v249);

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v13);
      }
    }
    goto LABEL_35;
  }
  int v49 = (char *)Strong;
  sub_100087AE8(a1, (uint64_t)v249);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_7;
  }
  v216 = v49;
  v236 = a8;
  if ((char *)v253[0] == v243 && v253[1] == a5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v60 = sub_1001ED080();
  swift_bridgeObjectRelease();
  if ((v60 & 1) == 0)
  {

    a8 = v236;
    goto LABEL_7;
  }
LABEL_12:
  sub_1001B4818(v237, (uint64_t)v249);
  sub_1001B4818((uint64_t)v238, (uint64_t)v251);
  a8 = v236;
  if (v250)
  {
    sub_1001B4818((uint64_t)v249, (uint64_t)v253);
    if (swift_dynamicCast())
    {
      uint64_t v62 = v253[4];
      unint64_t v61 = v253[5];
      int64_t v63 = v216;
      if (!v252)
      {
        char v74 = sub_1001EB540();
        os_log_type_t v75 = sub_1001EC910();
        if (os_log_type_enabled(v74, v75))
        {
          char v76 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v76 = 0;
          _os_log_impl((void *)&_mh_execute_header, v74, v75, "CloudSyncConflictResolver: no incoming data", v76, 2u);
          swift_slowDealloc();
        }

        sub_1000947F0((uint64_t)v253);
        sub_1000816A4((uint64_t)v251, &qword_100295B50);
        sub_1000816A4((uint64_t)v249, &qword_100295B50);
        sub_100093680(v62, v61);
        goto LABEL_30;
      }
      sub_1001B4818((uint64_t)v251, (uint64_t)v248);
      if (swift_dynamicCast())
      {
        unint64_t v64 = v247;
        v243 = v246;
        if (sub_1001578E8(v62, v61, (uint64_t)v246, v247))
        {
          uint64_t v65 = sub_1001EB540();
          os_log_type_t v66 = sub_1001EC910();
          if (os_log_type_enabled(v65, v66))
          {
            v67 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v67 = 0;
            _os_log_impl((void *)&_mh_execute_header, v65, v66, "CloudSyncConflictResolver: incoming data and existing data are identical", v67, 2u);
            swift_slowDealloc();
          }

          a8[3] = (uint64_t)&type metadata for Data;
          sub_100081714((uint64_t)v243, v64);

          *a8 = v62;
          a8[1] = v61;
          sub_1000947F0((uint64_t)v248);
          sub_1000947F0((uint64_t)v253);
          char v68 = v251;
          goto LABEL_52;
        }
        unint64_t v242 = v64;
        v214 = v251;
        uint64_t v237 = qword_100296A20;
        int v77 = *(void **)&v63[qword_100296A20];
        sub_100093680(v62, v61);
        uint64_t v78 = *(void *)(v240 + 8);
        id v79 = v77;
        uint64_t v80 = v231;
        uint64_t v213 = v62;
        unint64_t v240 = v61;
        uint64_t v81 = v241;
        v238 = (char *)v78;
        sub_1001EC020();
        v215 = *(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56);
        v215(v80, 0, 1, v81);
        id v82 = *(id *)&v63[v237];
        sub_100093680((uint64_t)v243, v242);
        BOOL v83 = v233;
        sub_1001EC020();
        uint64_t v212 = 0;
        uint64_t v84 = v235;
        v215(v83, 0, 1, v81);
        uint64_t v85 = v232;
        uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v232 + 16);
        v86(v44, v80, v234);
        unint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
        if (v87(v44, 1, v81) == 1)
        {
          uint64_t v90 = *(void (**)(void, void))(v85 + 8);
          uint64_t v89 = v85 + 8;
          unint64_t v88 = v90;
          uint64_t v91 = v44;
          uint64_t v92 = v234;
          v90(v91, v234);
          uint64_t v93 = v213;
          unint64_t v94 = v240;
          sub_100093680(v213, v240);
          sub_100093680(v93, v94);
          v95 = sub_1001EB540();
          os_log_type_t v96 = sub_1001EC910();
          if (os_log_type_enabled(v95, v96))
          {
            uint64_t v232 = v89;
            uint64_t v97 = (uint8_t *)swift_slowAlloc();
            uint64_t v241 = swift_slowAlloc();
            v245 = (char *)v241;
            *(_DWORD *)uint64_t v97 = 136315138;
            sub_100093680(v93, v240);
            uint64_t v98 = sub_1001EAF90();
            uint64_t v99 = v88;
            unint64_t v101 = v100;
            sub_100081714(v93, v240);
            uint64_t v102 = v98;
            uint64_t v92 = v234;
            uint64_t v244 = sub_1001A8090(v102, v101, (uint64_t *)&v245);
            unint64_t v94 = v240;
            sub_1001ECBC0();
            unint64_t v88 = v99;
            swift_bridgeObjectRelease();
            sub_100081714(v93, v94);
            sub_100081714(v93, v94);
            _os_log_impl((void *)&_mh_execute_header, v95, v96, "CloudSyncConflictResolver: failed to deserialize either existingModel from %s", v97, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100081714(v93, v94);
            sub_100081714(v93, v94);
          }
          v117 = v214;
          v118 = v231;
          unint64_t v119 = v242;
          uint64_t v120 = (uint64_t)v243;
          a8[3] = (uint64_t)&type metadata for Data;

          sub_100081714(v120, v119);
          *a8 = v93;
          a8[1] = v94;
          v88(v233, v92);
          v88(v118, v92);
LABEL_51:
          sub_1000947F0((uint64_t)v248);
          sub_1000947F0((uint64_t)v253);
          char v68 = v117;
LABEL_52:
          sub_1000816A4((uint64_t)v68, &qword_100295B50);
          sub_1000816A4((uint64_t)v249, &qword_100295B50);
          return;
        }
        uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v84 + 32);
        uint64_t v104 = v230;
        v103(v230, v44, v81);
        uint64_t v105 = v234;
        v86(v41, v233, v234);
        if (v87(v41, 1, v81) == 1)
        {
          uint64_t v106 = v232 + 8;
          v107 = *(void (**)(char *, uint64_t))(v232 + 8);
          v107(v41, v105);
          uint64_t v108 = (uint64_t)v243;
          unint64_t v109 = v242;
          sub_100093680((uint64_t)v243, v242);
          sub_100093680(v108, v109);
          v110 = sub_1001EB540();
          os_log_type_t v111 = sub_1001EC910();
          if (os_log_type_enabled(v110, v111))
          {
            uint64_t v232 = v106;
            uint64_t v112 = (uint8_t *)swift_slowAlloc();
            v245 = (char *)swift_slowAlloc();
            *(_DWORD *)uint64_t v112 = 136315138;
            sub_100093680(v108, v109);
            uint64_t v113 = sub_1001EAF90();
            unint64_t v115 = v114;
            sub_100081714((uint64_t)v243, v109);
            uint64_t v116 = v113;
            uint64_t v105 = v234;
            uint64_t v244 = sub_1001A8090(v116, v115, (uint64_t *)&v245);
            sub_1001ECBC0();
            uint64_t v108 = (uint64_t)v243;
            swift_bridgeObjectRelease();
            sub_100081714(v108, v109);
            sub_100081714(v108, v109);
            _os_log_impl((void *)&_mh_execute_header, v110, v111, "CloudSyncConflictResolver: failed to deserialize either incomingModel from %s", v112, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100081714(v108, v109);
            sub_100081714(v108, v109);
          }
          v146 = v236;
          v117 = v214;
          uint64_t v147 = v241;
          unint64_t v148 = v240;
          v149 = v231;
          v236[3] = (uint64_t)&type metadata for Data;

          sub_100081714(v108, v109);
          uint64_t *v146 = v213;
          v146[1] = v148;
          (*(void (**)(char *, uint64_t))(v235 + 8))(v230, v147);
          v107(v233, v105);
          v107(v149, v105);
          goto LABEL_51;
        }
        v121 = v103;
        v122 = v229;
        v121(v229, v41, v81);
        v123 = v104;
        if (sub_1001EBFE0())
        {
          char v124 = sub_1001EBFE0();
          v125 = &v216[qword_1002A4300];
          uint64_t v126 = v235;
          uint64_t v127 = v81;
          v128 = *(void (**)(os_log_t, char *, uint64_t))(v235 + 16);
          if (v124)
          {
            os_log_t v129 = v218;
            v128(v218, v104, v127);
            v130 = v223;
            v128((os_log_t)v223, v122, v127);
            v220 = v125;
            v131 = sub_1001EB540();
            os_log_type_t v132 = sub_1001EC910();
            int v133 = v132;
            BOOL v134 = os_log_type_enabled(v131, v132);
            v226 = (void (*)(char *, char *, uint64_t))v128;
            if (v134)
            {
              uint64_t v135 = swift_slowAlloc();
              v219 = (char *)swift_slowAlloc();
              v245 = v219;
              *(_DWORD *)uint64_t v135 = 136315394;
              v227 = (void (*)(char *, uint64_t))(v135 + 4);
              LODWORD(v215) = v133;
              v136 = v217;
              v128((os_log_t)v217, (char *)v129, v127);
              v137 = *(void (**)(os_log_t, uint64_t))(v126 + 8);
              v137(v129, v127);
              os_log_t v218 = v131;
              uint64_t v138 = sub_1001ED040();
              unint64_t v140 = v139;
              v137(v136, v127);
              uint64_t v244 = sub_1001A8090(v138, v140, (uint64_t *)&v245);
              sub_1001ECBC0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v135 + 12) = 2080;
              v211[1] = v135 + 14;
              v141 = v223;
              v226((char *)v136, v223, v127);
              v137(v141, v127);
              uint64_t v142 = sub_1001ED040();
              unint64_t v144 = v143;
              v227 = (void (*)(char *, uint64_t))v137;
              v137(v136, v127);
              uint64_t v244 = sub_1001A8090(v142, v144, (uint64_t *)&v245);
              sub_1001ECBC0();
              swift_bridgeObjectRelease();
              os_log_t v145 = v218;
              _os_log_impl((void *)&_mh_execute_header, v218, (os_log_type_t)v215, "CloudSyncConflictResolver: merging existing=%s with incoming=%s", (uint8_t *)v135, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              v181 = *(void (**)(char *, uint64_t))(v126 + 8);
              v181(v130, v127);
              v227 = v181;
              v181((char *)v129, v127);
            }
            uint64_t v182 = v222;
            os_log_t v183 = v228;
            sub_1001EC010();
            v184 = v221;
            v185 = v226;
            v226(v221, (char *)v183, v127);
            v186 = sub_1001EB540();
            os_log_type_t v187 = sub_1001EC910();
            if (os_log_type_enabled(v186, v187))
            {
              v188 = (uint8_t *)swift_slowAlloc();
              v223 = (char *)swift_slowAlloc();
              v245 = v223;
              *(_DWORD *)v188 = 136315138;
              v220 = (char *)(v188 + 4);
              v189 = v217;
              v185(v217, v184, v127);
              v190 = v227;
              v227(v184, v127);
              uint64_t v191 = sub_1001ED040();
              unint64_t v193 = v192;
              v190(v189, v127);
              uint64_t v244 = sub_1001A8090(v191, v193, (uint64_t *)&v245);
              sub_1001ECBC0();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v186, v187, "CloudSyncConflictResolver: merged=%s", v188, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              uint64_t v182 = v222;
              swift_slowDealloc();
            }
            else
            {
              v227(v184, v127);
            }

            a8 = v236;
            int64_t v63 = v216;
            uint64_t v199 = v232;
            uint64_t v200 = v234;
            (*(void (**)(char *, void, uint64_t))(v225 + 104))(v224, enum case for CRCodableVersion.version1(_:), v182);
            uint64_t v201 = v212;
            uint64_t v202 = sub_1001EBE50();
            if (v201)
            {
              sub_100081714((uint64_t)v243, v242);
              sub_100081714(v213, v240);
              swift_errorRelease();
              uint64_t v204 = 0;
              unint64_t v205 = 0xF000000000000000;
            }
            else
            {
              uint64_t v206 = v202;
              unint64_t v207 = v203;
              sub_100081714((uint64_t)v243, v242);
              sub_100081714(v213, v240);
              uint64_t v204 = v206;
              unint64_t v205 = v207;
            }
            uint64_t v208 = (uint64_t)v214;
            (*(void (**)(char *, uint64_t))(v225 + 8))(v224, v182);
            v209 = v227;
            v227((char *)v228, v127);
            v209(v229, v127);
            v209(v230, v127);
            v210 = *(void (**)(char *, uint64_t))(v199 + 8);
            v210(v233, v200);
            v210(v231, v200);
            sub_1000947F0((uint64_t)v248);
            sub_1000947F0((uint64_t)v253);
            sub_1000816A4(v208, &qword_100295B50);
            sub_1000816A4((uint64_t)v249, &qword_100295B50);
            if (v205 >> 60 != 15)
            {
              unint64_t v61 = v205;
              uint64_t v62 = v204;
              sub_100093680(v204, v205);
LABEL_30:
              a8[3] = (uint64_t)&type metadata for Data;
              sub_100081700(v62, v61);

              *a8 = v62;
              a8[1] = v61;
              return;
            }
            goto LABEL_34;
          }
          v164 = v219;
          v128((os_log_t)v219, v104, v127);
          v165 = v220;
          v128((os_log_t)v220, v122, v127);
          v166 = sub_1001EB540();
          os_log_type_t v167 = sub_1001EC910();
          int v168 = v167;
          if (os_log_type_enabled(v166, v167))
          {
            uint64_t v169 = swift_slowAlloc();
            v238 = (char *)swift_slowAlloc();
            v245 = v238;
            *(_DWORD *)uint64_t v169 = 136315394;
            LODWORD(v237) = v168;
            os_log_t v228 = v166;
            uint64_t v170 = sub_1001ED040();
            uint64_t v244 = sub_1001A8090(v170, v171, (uint64_t *)&v245);
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            v172 = v164;
            v173 = *(void (**)(char *, uint64_t))(v126 + 8);
            v173(v172, v127);
            *(_WORD *)(v169 + 12) = 2080;
            uint64_t v174 = sub_1001ED040();
            uint64_t v244 = sub_1001A8090(v174, v175, (uint64_t *)&v245);
            uint64_t v105 = v234;
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            v173(v165, v127);
            os_log_t v176 = v228;
            _os_log_impl((void *)&_mh_execute_header, v228, (os_log_type_t)v237, "CloudSyncConflictResolver: no delta on existing=%s from incoming=%s", (uint8_t *)v169, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            v194 = v164;
            v173 = *(void (**)(char *, uint64_t))(v126 + 8);
            v173(v194, v127);
            v173(v165, v127);
          }
          v195 = v236;
          uint64_t v180 = v232;
          uint64_t v196 = v213;
          v236[3] = (uint64_t)&type metadata for Data;

          sub_100081714(v196, v240);
          unint64_t v197 = v242;
          void *v195 = v243;
          v195[1] = v197;
          v173(v229, v127);
          v173(v230, v127);
        }
        else
        {
          uint64_t v150 = v235;
          v151 = v122;
          v152 = *(void (**)(char *, char *, uint64_t))(v235 + 16);
          v153 = (char *)v226;
          v152((char *)v226, v151, v81);
          v154 = (char *)v227;
          v152((char *)v227, v123, v81);
          v155 = sub_1001EB540();
          os_log_type_t v156 = sub_1001EC910();
          int v157 = v156;
          if (os_log_type_enabled(v155, v156))
          {
            uint64_t v158 = swift_slowAlloc();
            v238 = (char *)swift_slowAlloc();
            v245 = v238;
            *(_DWORD *)uint64_t v158 = 136315394;
            LODWORD(v237) = v157;
            uint64_t v159 = sub_1001ED040();
            uint64_t v244 = sub_1001A8090(v159, v160, (uint64_t *)&v245);
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            v161 = *(void (**)(char *, uint64_t))(v150 + 8);
            v161(v153, v241);
            *(_WORD *)(v158 + 12) = 2080;
            uint64_t v162 = sub_1001ED040();
            uint64_t v244 = sub_1001A8090(v162, v163, (uint64_t *)&v245);
            uint64_t v105 = v234;
            uint64_t v81 = v241;
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            v161(v154, v81);
            _os_log_impl((void *)&_mh_execute_header, v155, (os_log_type_t)v237, "CloudSyncConflictResolver: no delta on incoming=%s from existing=%s", (uint8_t *)v158, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            v161 = *(void (**)(char *, uint64_t))(v150 + 8);
            v161(v153, v81);
            v161(v154, v81);
          }
          v177 = v236;
          unint64_t v178 = v240;
          unint64_t v179 = v242;
          v236[3] = (uint64_t)&type metadata for Data;

          sub_100081714((uint64_t)v243, v179);
          uint64_t *v177 = v213;
          v177[1] = v178;
          v161(v229, v81);
          v161(v230, v81);
          uint64_t v180 = v232;
        }
        v198 = *(void (**)(char *, uint64_t))(v180 + 8);
        v198(v233, v105);
        v198(v231, v105);
        sub_1000947F0((uint64_t)v248);
        sub_1000947F0((uint64_t)v253);
        char v68 = v214;
        goto LABEL_52;
      }
      sub_100081714(v62, v61);
      sub_1000947F0((uint64_t)v248);
      goto LABEL_32;
    }
    sub_1000947F0((uint64_t)v253);
    int64_t v63 = v216;
LABEL_33:
    sub_1000816A4((uint64_t)v249, &qword_100292500);
LABEL_34:

LABEL_35:
    *(_OWORD *)a8 = 0u;
    *((_OWORD *)a8 + 1) = 0u;
    return;
  }
  int64_t v63 = v216;
  if (!v252) {
    goto LABEL_33;
  }
  sub_1001B4818((uint64_t)v251, (uint64_t)v253);
  if (!swift_dynamicCast())
  {
LABEL_32:
    sub_1000947F0((uint64_t)v253);
    goto LABEL_33;
  }
  uint64_t v69 = v248[0];
  uint64_t v70 = v248[1];
  BOOL v71 = sub_1001EB540();
  os_log_type_t v72 = sub_1001EC910();
  if (os_log_type_enabled(v71, v72))
  {
    unint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v73 = 0;
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "CloudSyncConflictResolver: no existing data", v73, 2u);
    swift_slowDealloc();
  }

  sub_1000947F0((uint64_t)v253);
  sub_1000816A4((uint64_t)v251, &qword_100295B50);
  sub_1000816A4((uint64_t)v249, &qword_100295B50);
  a8[3] = (uint64_t)&type metadata for Data;

  *a8 = v69;
  a8[1] = v70;
}

id sub_1001B08A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(void *__return_ptr, void *, long long *, long long *);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void v15[3];
  uint64_t v16;
  long long v17;
  long long v18;
  long long v19;
  long long v20;
  void v21[4];
  uint64_t vars8;

  uint64_t v7 = *(void (**)(void *__return_ptr, void *, long long *, long long *))(a1 + 32);
  v21[3] = swift_getObjectType();
  v21[0] = a2;
  if (a3)
  {
    *((void *)&v20 + 1) = swift_getObjectType();
    *(void *)&uint64_t v19 = a3;
    if (a4)
    {
LABEL_3:
      *((void *)&v18 + 1) = swift_getObjectType();
      *(void *)&uint64_t v17 = a4;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v19 = 0u;
    uint64_t v20 = 0u;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v17 = 0u;
  uint64_t v18 = 0u;
LABEL_6:
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7(v15, v21, &v19, &v17);
  swift_release();
  sub_1000816A4((uint64_t)&v17, &qword_100295B50);
  sub_1000816A4((uint64_t)&v19, &qword_100295B50);
  id v8 = v16;
  if (v16)
  {
    uint64_t v9 = sub_100094758(v15, v16);
    id v10 = *(void *)(v8 - 8);
    __chkstk_darwin(v9);
    uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = (void *)sub_1001ED070();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    sub_1000947F0((uint64_t)v15);
  }
  else
  {
    uint64_t v13 = 0;
  }
  sub_1000947F0((uint64_t)v21);
  return v13;
}

void sub_1001B0A98(char a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  [*(id *)(v1 + qword_100296A08) setEnableCloudSync:a1 & 1];
  uint64_t v4 = *(void **)(v1 + qword_100296A10);
  id v15 = [v4 privateCloudDatabaseController];
  uint64_t v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC910();
  BOOL v7 = os_log_type_enabled(v5, v6);
  if (a1)
  {
    if (v7)
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "CRDTModelCloudDataManager updateWithSyncEnabled: enabled sync to CK", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = *(void *)(v2 + qword_1002969F8);
    sub_1000B72E4();
    NSString v10 = sub_1001EC340();
    swift_bridgeObjectRelease();
    [v15 addObserver:v9 recordType:v10];

    id v11 = [v4 transactionManager];
    type metadata accessor for CRDTModelCloudDataManager();
    sub_1000B72E4();
    NSString v12 = sub_1001EC340();
    swift_bridgeObjectRelease();
    [v11 signalSyncToCKTransactionForEntityName:v12 syncManager:v9];
  }
  else
  {
    if (v7)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "CRDTModelCloudDataManager updateWithSyncEnabled: disabled sync to CK", v13, 2u);
      swift_slowDealloc();
    }

    uint64_t v14 = *(void *)(v2 + qword_1002969F8);
    sub_1000B72E4();
    NSString v12 = sub_1001EC340();
    swift_bridgeObjectRelease();
    [v15 removeObserver:v14 recordType:v12];
  }
}

char *sub_1001B0D34(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  NSString v10 = v4;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy(v41, "CRDTModelSync.");
  v41[15] = -18;
  v42._countAndFlagsBits = sub_1000B72E4();
  sub_1001EC490(v42);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  *(void *)&v10[qword_100296A18] = 0;
  *(void *)&v10[qword_100296A28] = 0;
  *(void *)&v10[qword_1002A4308 + 8] = 0;
  swift_unknownObjectWeakInit();
  v10[qword_1002A4310] = 0;
  *(void *)&v10[qword_100296A20] = a2;
  *(void *)&v10[qword_100296A30] = a4;
  id v39 = a2;
  swift_unknownObjectRetain();
  id v11 = [a3 managedObjectContext];
  *(void *)&v10[qword_1002969F0] = a3;
  *(void *)&v10[qword_100296A10] = a1;
  type metadata accessor for CRDTModelSyncMapper();
  swift_allocObject();
  id v12 = a3;
  id v13 = a1;
  uint64_t v37 = CRDTModelSyncMapper.init()();
  id v14 = [objc_allocWithZone((Class)BCCloudDataSyncManager) initWithCloudKitController:v13 dataMapper:v37];
  *(void *)&v10[qword_1002969F8] = v14;
  id v15 = v14;
  id v38 = v11;
  NSString v16 = sub_1001AE398();
  id v17 = [objc_allocWithZone((Class)BCCloudChangeTokenController) initWithMOC:v38 zoneName:v16 cloudKitController:v13];

  *(void *)&v10[qword_100296A08] = v17;
  id v18 = v12;
  sub_1001AE358();
  type metadata accessor for CRDTModelSyncEntity();
  type metadata accessor for CRDTModelSync();
  id v19 = objc_allocWithZone((Class)BCCloudDataManager);
  id v20 = v13;
  id v21 = v15;
  swift_retain();
  NSString v22 = sub_1001EC340();
  swift_bridgeObjectRelease();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v24 = [v19 initWithCloudDataSource:v18 entityName:v22 notificationName:0 immutableClass:ObjCClassFromMetadata mutableClass:swift_getObjCClassFromMetadata() syncManager:v21 cloudKitController:v20 dataMapper:v37];

  swift_release();
  *(void *)&v10[qword_100296A00] = v24;

  v40.receiver = v10;
  v40.super_class = ObjectType;
  uint64_t v25 = (char *)objc_msgSendSuper2(&v40, "init");
  sub_100081668(0, (unint64_t *)&unk_100296AC0);
  uint64_t v26 = *(void **)&v25[qword_100296A08];
  uint64_t v27 = *(void **)&v25[qword_100296A10];
  uint64_t v28 = v25;
  id v29 = v26;
  id v30 = [v27 privateCloudDatabaseController];
  id v31 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithZoneDataManager:v28 tokenController:v29 databaseController:v30];

  uint64_t v32 = *(void **)&v28[qword_100296A18];
  *(void *)&v28[qword_100296A18] = v31;

  uint64_t v33 = *(void **)&v28[qword_1002969F8];
  uint64_t v34 = v28;
  id v35 = v33;
  [v35 setDelegate:v34];

  swift_release();
  swift_unknownObjectRelease();
  return v34;
}

id sub_1001B1190()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = [*(id *)&v0[qword_100296A10] privateCloudDatabaseController];
  uint64_t v3 = qword_1002969F8;
  [v2 removeObserver:*(void *)&v0[qword_1002969F8]];

  [*(id *)&v0[v3] setDelegate:0];
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

id sub_1001B1230(void *a1)
{
  id v1 = a1;
  return sub_1001B1190();
}

uint64_t sub_1001B1258(uint64_t a1)
{
  uint64_t v2 = a1 + qword_1002A4300;
  uint64_t v3 = sub_1001EB560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_bridgeObjectRelease();
  sub_1000CA710(a1 + qword_1002A4308);
  return swift_unknownObjectRelease();
}

void sub_1001B1368(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a4();
    return;
  }
  id v8 = (void *)Strong;
  if (a2)
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC8F0();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)id v11 = 136315138;
      swift_getErrorValue();
      uint64_t v12 = sub_1001ED110();
      sub_1001A8090(v12, v13, &v20);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "CRDTModelCloudDataManager cloudData: couldn't load existing data: %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_16;
  }
  if (a1)
  {
    type metadata accessor for CRDTModelSync();
    uint64_t v14 = swift_dynamicCastClass();
    if (v14)
    {
      uint64_t v15 = v14;
      swift_unknownObjectRetain();
      ((void (*)(uint64_t))a4)(v15);

      swift_unknownObjectRelease();
      return;
    }
    NSString v16 = sub_1001EB540();
    os_log_type_t v17 = sub_1001EC8F0();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_15;
    }
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    id v19 = "CRDTModelCloudDataManager cloudData: loaded existing data with the wrong type";
    goto LABEL_14;
  }
  NSString v16 = sub_1001EB540();
  os_log_type_t v17 = sub_1001EC910();
  if (os_log_type_enabled(v16, v17))
  {
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    id v19 = "CRDTModelCloudDataManager cloudData: no existing data";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v16, v17, v19, v18, 2u);
    swift_slowDealloc();
  }
LABEL_15:

LABEL_16:
  ((void (*)(void))a4)(0);
}

id sub_1001B1678(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, void *a7)
{
  swift_errorRetain();
  swift_errorRetain();
  id v11 = sub_1001EB540();
  os_log_type_t v12 = sub_1001EC910();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v17 = a5;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134218498;
    sub_1001ECBC0();
    *(_WORD *)(v13 + 12) = 2048;
    sub_1001ECBC0();
    *(_WORD *)(v13 + 22) = 2080;
    if (a3)
    {
      swift_getErrorValue();
      sub_1001ED110();
    }
    sub_10007DC14(&qword_1002924D8);
    uint64_t v14 = sub_1001EC3D0();
    sub_1001A8090(v14, v15, &v18);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "CRDTModelCloudDataManager q_sync: BCCloudDataManager is done: success=%ld hasChanges=%ld error=%s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a5 = v17;
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  a5(a1 & 1);
  return [a7 endTransaction];
}

void sub_1001B18C0(uint64_t a1, uint64_t a2)
{
  objc_super v5 = *(void **)(v2 + qword_100296A00);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[4] = sub_1001B4A24;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1001AE0C0;
  v8[3] = &unk_10026B400;
  BOOL v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  [v5 hasSaltChangedWithCompletion:v7];
  _Block_release(v7);
}

uint64_t sub_1001B19AC(void *a1, int a2, void *aBlock)
{
  uint64_t v4 = _Block_copy(aBlock);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  id v6 = a1;
  sub_1001B18C0((uint64_t)sub_1000C6638, v5);

  return swift_release();
}

void sub_1001B1A38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  id v6 = sub_1001EB540();
  os_log_type_t v7 = sub_1001EC910();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v15 = a2;
    id v8 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v8 = 136315138;
    Swift::Int v9 = sub_1000B72E4();
    sub_1001A8090(v9, v10, aBlock);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "CRDTModelCloudDataManager dissociateCloudDataFromSyncWithCompletion for: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v15;
    swift_slowDealloc();
  }

  id v11 = *(void **)&v2[qword_100296A00];
  os_log_type_t v12 = (void *)swift_allocObject();
  v12[2] = v2;
  uint64_t v12[3] = a1;
  v12[4] = a2;
  aBlock[4] = (uint64_t)sub_1001B48F4;
  aBlock[5] = (uint64_t)v12;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001AE1A8;
  aBlock[3] = (uint64_t)&unk_10026B338;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v3;
  sub_100170B28(a1);
  swift_release();
  [v11 dissociateCloudDataFromSyncWithCompletion:v13];
  _Block_release(v13);
}

void sub_1001B1C60(char a1, uint64_t a2, char *a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  if (a1)
  {
    id v8 = *(void **)&a3[qword_100296A08];
    Swift::Int v9 = (void *)swift_allocObject();
    v9[2] = a3;
    v9[3] = a4;
    v9[4] = a5;
    aBlock[4] = (uint64_t)sub_1001B494C;
    aBlock[5] = (uint64_t)v9;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001AE1A8;
    aBlock[3] = (uint64_t)&unk_10026B388;
    unint64_t v10 = _Block_copy(aBlock);
    id v11 = a3;
    sub_100170B28((uint64_t)a4);
    swift_release();
    [v8 dissociateCloudDataFromSyncWithCompletion:v10];
    _Block_release(v10);
    return;
  }
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v13 = sub_1001EB540();
  os_log_type_t v14 = sub_1001EC8F0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    NSString v16 = (void *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    type metadata accessor for CRDTModelCloudDataManager();
    Swift::Int v17 = sub_1000B72E4();
    uint64_t v22 = sub_1001A8090(v17, v18, aBlock);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2112;
    if (a2)
    {
      uint64_t v19 = sub_1001EAE50();
    }
    else
    {
      sub_100081668(0, (unint64_t *)&qword_100296978);
      uint64_t v19 = sub_1001ECB20();
    }
    uint64_t v20 = v19;
    uint64_t v22 = v19;
    sub_1001ECBC0();
    *NSString v16 = v20;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "CRDTModelCloudDataManager failed to dissociate data for: %s %@", (uint8_t *)v15, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a4) {
      goto LABEL_10;
    }
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    if (a4) {
LABEL_10:
    }
      a4(0, a2);
  }
}

void sub_1001B1FBC(char a1, uint64_t a2, uint64_t a3, void (*a4)(void, void))
{
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v7 = sub_1001EB540();
  os_log_type_t v8 = sub_1001EC910();
  if (os_log_type_enabled(v7, v8))
  {
    NSString v16 = a4;
    char v9 = a1;
    uint64_t v10 = swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315650;
    type metadata accessor for CRDTModelCloudDataManager();
    Swift::Int v12 = sub_1000B72E4();
    sub_1001A8090(v12, v13, &v17);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 1024;
    sub_1001ECBC0();
    *(_WORD *)(v10 + 18) = 2112;
    if (a2)
    {
      uint64_t v14 = sub_1001EAE50();
    }
    else
    {
      sub_100081668(0, (unint64_t *)&qword_100296978);
      uint64_t v14 = sub_1001ECB20();
    }
    uint64_t v15 = v14;
    sub_1001ECBC0();
    *id v11 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "CRDTModelCloudDataManager dissociateCloudDataFromSyncWithCompletion for: %s finish with success:%{BOOL}d error: %@", (uint8_t *)v10, 0x1Cu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v9;
    a4 = v16;
    if (v16) {
      goto LABEL_8;
    }
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    if (a4) {
LABEL_8:
    }
      a4(a1 & 1, a2);
  }
}

void sub_1001B228C(void *a1, int a2, void *aBlock)
{
  uint64_t v4 = _Block_copy(aBlock);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    os_log_type_t v7 = sub_1000C6638;
  }
  else
  {
    os_log_type_t v7 = 0;
    uint64_t v6 = 0;
  }
  id v8 = a1;
  sub_1001B1A38((uint64_t)v7, v6);
  sub_1000B0100((uint64_t)v7);
}

void sub_1001B2344(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  if (*(unsigned char *)(v3 + qword_1002A4310) == 1)
  {
    uint64_t v6 = v3;
    id v8 = sub_1001EB540();
    os_log_type_t v9 = sub_1001EC910();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "CRDTModelCloudDataManager startSyncToCKWithCompletion: starting syncing to CK", v10, 2u);
      swift_slowDealloc();
    }

    id v11 = *(void **)(v6 + qword_100296A00);
    v13[4] = a2;
    v13[5] = a3;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1000DB998;
    v13[3] = &unk_10026B2C0;
    Swift::Int v12 = _Block_copy(v13);
    swift_retain();
    swift_release();
    [v11 startSyncToCKWithSyncManager:a1 completion:v12];
    _Block_release(v12);
  }
  else
  {
    a2();
  }
}

uint64_t sub_1001B24C0(void *a1, int a2, void *a3, void *aBlock)
{
  uint64_t v6 = _Block_copy(aBlock);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  id v8 = a3;
  id v9 = a1;
  sub_1001B2344((uint64_t)v8, (void (*)(void))sub_1001B48E0, v7);

  return swift_release();
}

void sub_1001B2560(uint64_t a1)
{
  id v3 = [*(id *)(v1 + qword_100296A10) transactionManager];
  type metadata accessor for CRDTModelCloudDataManager();
  sub_1000B72E4();
  id v4 = sub_1001EC340();
  swift_bridgeObjectRelease();
  [v3 signalSyncToCKTransactionForEntityName:v4 syncManager:a1];
}

void sub_1001B2658(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1001B2560((uint64_t)v4);
}

uint64_t sub_1001B26C0(void *a1, int a2, void *a3, int a4, void *aBlock)
{
  uint64_t v7 = _Block_copy(aBlock);
  sub_100081668(0, (unint64_t *)&unk_100293740);
  sub_1001EC5E0();
  id v8 = a3;
  id v9 = a1;
  sub_1001B32D8();
  _Block_release(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001B2768(void *a1, int a2, void *a3, int a4, void *aBlock)
{
  uint64_t v7 = _Block_copy(aBlock);
  sub_10007DC14(&qword_100292708);
  unint64_t v8 = sub_1001EC5E0();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  id v10 = a3;
  id v11 = a1;
  sub_1001B34A4(v8, (uint64_t (*)(void, void))sub_1000C6638, v9);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1001B2838(char a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a4(a1 & 1, a3);
  }
  uint64_t v9 = (char *)Strong;
  if (!(a2 >> 62))
  {
    uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1001ECEA0();
  if (!result) {
    goto LABEL_15;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = sub_1001ECD50();
    goto LABEL_7;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v12 = *(void *)(a2 + 32);
    swift_unknownObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    id v13 = [objc_allocWithZone((Class)type metadata accessor for CRDTModelSync()) initWithCloudData:v12];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = &v9[qword_1002A4308];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v16 = *((void *)v15 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v16 + 8))(v14, ObjectType, v16);

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        unint64_t v18 = sub_1001EB540();
        os_log_type_t v19 = sub_1001EC8F0();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v20 = 0;
          _os_log_impl((void *)&_mh_execute_header, v18, v19, "CRDTModelCloudDataManager resolveConflictsFor: delegate is nil", v20, 2u);
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
      }
      return a4(a1 & 1, a3);
    }
    swift_unknownObjectRelease();
LABEL_16:
    id v21 = sub_1001EB540();
    os_log_type_t v22 = sub_1001EC8F0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "CRDTModelCloudDataManager resolveConflictsFor: couldn't obtain cloudData", v23, 2u);
      swift_slowDealloc();
    }

    return a4(a1 & 1, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B2AEC(void *a1, int a2, void *a3, int a4, void *aBlock)
{
  uint64_t v7 = _Block_copy(aBlock);
  sub_100081668(0, (unint64_t *)&unk_1002915B0);
  unint64_t v8 = sub_1001EC5E0();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  id v10 = a3;
  id v11 = a1;
  sub_1001B3B8C(v8, (void (*)(void, void))sub_1000C6638, v9);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1001B2BC8(void *a1, int a2, void *a3, int a4, void *aBlock)
{
  uint64_t v7 = _Block_copy(aBlock);
  sub_100081668(0, (unint64_t *)&unk_100293740);
  uint64_t v8 = sub_1001EC5E0();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  id v10 = a3;
  id v11 = a1;
  sub_1001B4400(v8, (void (*)(void, void))sub_1000C5324, v9);

  swift_bridgeObjectRelease();
  return swift_release();
}

id sub_1001B2CA4()
{
  sub_1001B32A0();
  NSString v0 = sub_1001EC340();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1001B2D40()
{
}

uint64_t type metadata accessor for CRDTModelCloudDataManager()
{
  return sub_1000C08A4();
}

char *sub_1001B2DB0(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = a5;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v52, "CRDTModelSync.");
  HIBYTE(v52[1]) = -18;
  uint64_t v51 = type metadata accessor for ReadingHistoryModel(0);
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  uint64_t v9 = sub_1001EC3D0();
  unint64_t v11 = v10;
  sub_1001EC530();
  uint64_t v12 = sub_1001EC3E0();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  Swift::Int v15 = sub_100152E34(15, v12, v14, v9, v11);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v53._countAndFlagsBits = v15;
  v53._object = v17;
  sub_1001EC490(v53);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  *(void *)&v8[qword_100296A18] = 0;
  *(void *)&v8[qword_100296A28] = 0;
  *(void *)&v8[qword_1002A4308 + 8] = 0;
  swift_unknownObjectWeakInit();
  v8[qword_1002A4310] = 0;
  *(void *)&v8[qword_100296A20] = a2;
  *(void *)&v8[qword_100296A30] = a4;
  id v47 = a2;
  swift_unknownObjectRetain();
  id v18 = [a3 managedObjectContext];
  *(void *)&v8[qword_1002969F0] = a3;
  *(void *)&v8[qword_100296A10] = a1;
  type metadata accessor for CRDTModelSyncMapper();
  swift_allocObject();
  id v19 = a3;
  id v20 = a1;
  uint64_t v21 = CRDTModelSyncMapper.init()();
  id v22 = [objc_allocWithZone((Class)BCCloudDataSyncManager) initWithCloudKitController:v20 dataMapper:v21];
  *(void *)&v8[qword_1002969F8] = v22;
  id v23 = v22;
  id v46 = v18;
  sub_1001EC3D0();
  NSString v24 = sub_1001EC340();
  swift_bridgeObjectRelease();
  id v25 = [objc_allocWithZone((Class)BCCloudChangeTokenController) initWithMOC:v46 zoneName:v24 cloudKitController:v20];

  *(void *)&v8[qword_100296A08] = v25;
  v52[0] = type metadata accessor for CRDTModelSyncEntity();
  id v26 = v19;
  sub_10007DC14((uint64_t *)&unk_100291C00);
  sub_1001EC3D0();
  type metadata accessor for CRDTModelSync();
  id v27 = objc_allocWithZone((Class)BCCloudDataManager);
  id v28 = v20;
  id v29 = v23;
  swift_retain();
  NSString v30 = sub_1001EC340();
  swift_bridgeObjectRelease();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v32 = [v27 initWithCloudDataSource:v26 entityName:v30 notificationName:0 immutableClass:ObjCClassFromMetadata mutableClass:swift_getObjCClassFromMetadata() syncManager:v29 cloudKitController:v28 dataMapper:v21];

  swift_release();
  *(void *)&v8[qword_100296A00] = v32;

  v50.receiver = v8;
  v50.super_class = ObjectType;
  uint64_t v33 = (char *)objc_msgSendSuper2(&v50, "init");
  uint64_t v34 = *(void **)&v33[qword_100296A08];
  id v35 = *(void **)&v33[qword_100296A10];
  uint64_t v36 = v33;
  id v37 = v34;
  id v38 = [v35 privateCloudDatabaseController];
  id v39 = [objc_allocWithZone((Class)BDSSaltVersionIdentifierManager) initWithZoneDataManager:v36 tokenController:v37 databaseController:v38];

  objc_super v40 = *(void **)&v36[qword_100296A18];
  *(void *)&v36[qword_100296A18] = v39;

  uint64_t v41 = *(void **)&v36[qword_1002969F8];
  Swift::String v42 = v36;
  id v43 = v41;
  [v43 setDelegate:v42];

  swift_release();
  swift_unknownObjectRelease();
  return v42;
}

Swift::Int sub_1001B32A0()
{
  return sub_1000B72E4();
}

void sub_1001B32D8()
{
  swift_bridgeObjectRetain_n();
  oslog = sub_1001EB540();
  os_log_type_t v0 = sub_1001EC8F0();
  if (os_log_type_enabled(oslog, v0))
  {
    uint64_t v1 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v1 = 136315138;
    sub_100081668(0, (unint64_t *)&unk_100293740);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1001EC5F0();
    unint64_t v4 = v3;
    swift_bridgeObjectRelease();
    sub_1001A8090(v2, v4, &v6);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v0, "CRDTModelCloudDataManager removeCloudDataFor: asked to remove cloud data: %s", v1, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1001B34A4(unint64_t a1, uint64_t (*a2)(void, void), uint64_t a3)
{
  uint64_t v4 = v3;
  if (*(unsigned char *)(v3 + qword_1002A4310) != 1) {
    return a2(0, 0);
  }
  char v68 = &_swiftEmptyDictionarySingleton;
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v65 = a2;
    uint64_t v66 = a3;
    if (v8) {
      goto LABEL_4;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    unint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v27 = _swiftEmptyArrayStorage[2];
    if (!v27)
    {
LABEL_55:
      swift_bridgeObjectRelease();
      uint64_t v51 = sub_1001EB540();
      os_log_type_t v52 = sub_1001EC910();
      if (os_log_type_enabled(v51, v52))
      {
        Swift::String v53 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)Swift::String v53 = 136315138;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_10007DC14(&qword_100292708);
        uint64_t v54 = v4;
        uint64_t v55 = sub_1001EC270();
        unint64_t v57 = v56;
        swift_bridgeObjectRelease();
        uint64_t v58 = v55;
        uint64_t v4 = v54;
        uint64_t aBlock[6] = sub_1001A8090(v58, v57, aBlock);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "CRDTModelCloudDataManager updateSyncGenerationFromCloudData: updating sync generation for %s", v53, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      unint64_t v59 = *(void **)(v4 + qword_100296A00);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_10007DC14(&qword_100292708);
      Class isa = sub_1001EC250().super.isa;
      swift_bridgeObjectRelease();
      NSString v61 = sub_1001EC340();
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = v65;
      *(void *)(v62 + 24) = v66;
      aBlock[4] = (uint64_t)sub_1001B48B8;
      aBlock[5] = v62;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1001AE0C0;
      aBlock[3] = (uint64_t)&unk_10026B270;
      int64_t v63 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v59 updateSyncGenerationFromCloudData:isa predicate:0 propertyIDKey:v61 completion:v63];
      _Block_release(v63);

      return swift_bridgeObjectRelease();
    }
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1001ECEA0();
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  if (!v8) {
    goto LABEL_39;
  }
LABEL_4:
  if (v8 < 1) {
    goto LABEL_60;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v9 = 0;
    unint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v11 = sub_1001ECD50();
      swift_getObjectType();
      uint64_t v12 = swift_conformsToProtocol2();
      if (v12) {
        uint64_t v13 = v11;
      }
      else {
        uint64_t v13 = 0;
      }
      if (v12) {
        uint64_t v14 = v12;
      }
      else {
        uint64_t v14 = 0;
      }
      if (v13)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v10 = sub_1000A7668(0, v10[2] + 1, 1, v10);
        }
        unint64_t v16 = v10[2];
        unint64_t v15 = v10[3];
        if (v16 >= v15 >> 1) {
          unint64_t v10 = sub_1000A7668((void *)(v15 > 1), v16 + 1, 1, v10);
        }
        v10[2] = v16 + 1;
        uint64_t v17 = &v10[2 * v16];
        v17[4] = v13;
        v17[5] = v14;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v21 = *(void *)(a1 + 8 * v19 + 32);
      swift_getObjectType();
      uint64_t v22 = swift_conformsToProtocol2();
      if (v22) {
        uint64_t v23 = v21;
      }
      else {
        uint64_t v23 = 0;
      }
      if (v22) {
        uint64_t v24 = v22;
      }
      else {
        uint64_t v24 = 0;
      }
      if (v23)
      {
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v10 = sub_1000A7668(0, v10[2] + 1, 1, v10);
        }
        unint64_t v26 = v10[2];
        unint64_t v25 = v10[3];
        if (v26 >= v25 >> 1) {
          unint64_t v10 = sub_1000A7668((void *)(v25 > 1), v26 + 1, 1, v10);
        }
        v10[2] = v26 + 1;
        id v20 = &v10[2 * v26];
        v20[4] = v23;
        v20[5] = v24;
      }
      ++v19;
    }
    while (v8 != v19);
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v10[2];
  if (!v27) {
    goto LABEL_55;
  }
LABEL_40:
  uint64_t v64 = v4;
  swift_bridgeObjectRetain();
  id v28 = v10 + 5;
  while (1)
  {
    uint64_t v31 = *(v28 - 1);
    uint64_t v30 = *v28;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8);
    swift_unknownObjectRetain();
    uint64_t v34 = v33(ObjectType, v30);
    uint64_t v36 = v35;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = (uint64_t)v68;
    unint64_t v39 = sub_1001A87A0(v34, v36);
    uint64_t v40 = v68[2];
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      break;
    }
    char v43 = v38;
    if (v68[3] >= v42)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        id v46 = (void *)aBlock[0];
        if (v38) {
          goto LABEL_41;
        }
      }
      else
      {
        sub_1001ABD04();
        id v46 = (void *)aBlock[0];
        if (v43) {
          goto LABEL_41;
        }
      }
    }
    else
    {
      sub_1001A99B0(v42, isUniquelyReferenced_nonNull_native);
      unint64_t v44 = sub_1001A87A0(v34, v36);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_61;
      }
      unint64_t v39 = v44;
      id v46 = (void *)aBlock[0];
      if (v43)
      {
LABEL_41:
        uint64_t v29 = v46[7];
        swift_unknownObjectRelease();
        *(void *)(v29 + 8 * v39) = v31;
        goto LABEL_42;
      }
    }
    v46[(v39 >> 6) + 8] |= 1 << v39;
    id v47 = (uint64_t *)(v46[6] + 16 * v39);
    *id v47 = v34;
    v47[1] = v36;
    *(void *)(v46[7] + 8 * v39) = v31;
    uint64_t v48 = v46[2];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_59;
    }
    v46[2] = v50;
    swift_bridgeObjectRetain();
LABEL_42:
    char v68 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 += 2;
    if (!--v27)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v64;
      goto LABEL_55;
    }
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  uint64_t result = sub_1001ED0E0();
  __break(1u);
  return result;
}

void sub_1001B3B8C(unint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = swift_isaMask & *v3;
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v69 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v60 - v12;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (v59 < 2) {
      goto LABEL_6;
    }
  }
  else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2)
  {
    goto LABEL_6;
  }
  uint64_t v14 = sub_1001EB540();
  os_log_type_t v15 = sub_1001EC8F0();
  if (os_log_type_enabled(v14, v15))
  {
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "CRDTModelCloudDataManager resolveConflictsFor: received changes for more than 1 record. This shouldn't be possible", v16, 2u);
    swift_slowDealloc();
  }

LABEL_6:
  if (*((unsigned char *)v4 + qword_1002A4310) != 1)
  {
    a2(0, 0);
    return;
  }
  uint64_t v68 = a3;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v17 = (id)sub_1001ECD50();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v17 = *(id *)(a1 + 32);
  }
  uint64_t v66 = v8;
  v67 = a2;
  id v18 = v17;
  uint64_t v19 = sub_1001EB540();
  int v20 = sub_1001EC910();
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    v60[0] = v13;
    int v62 = v20;
    uint64_t v64 = v9;
    os_log_t v65 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v70 = v23;
    id aBlock = (uint64_t)v18;
    *(_DWORD *)uint64_t v21 = 138544387;
    id v24 = v18;
    sub_1001ECBC0();
    id v61 = v18;
    *uint64_t v22 = v18;

    *(_WORD *)(v21 + 12) = 2114;
    id v25 = [v24 recordID];
    id aBlock = (uint64_t)v25;
    sub_1001ECBC0();
    v60[1] = v22;
    v22[1] = v25;

    *(_WORD *)(v21 + 22) = 2082;
    id v26 = [v24 creationDate];
    uint64_t v63 = v23;
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = v60[0];
      sub_1001EB0A0();

      uint64_t v29 = sub_1001EB0C0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
    }
    else
    {
      uint64_t v30 = sub_1001EB0C0();
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v60[0], 1, 1, v30);
    }
    uint64_t v31 = sub_1001EC3D0();
    id aBlock = sub_1001A8090(v31, v32, &v70);
    sub_1001ECBC0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 2082;
    id v33 = [v24 modificationDate];
    id v18 = v61;
    if (v33)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v69;
      sub_1001EB0A0();

      uint64_t v36 = sub_1001EB0C0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    }
    else
    {
      uint64_t v37 = sub_1001EB0C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v69, 1, 1, v37);
    }
    uint64_t v38 = sub_1001EC3D0();
    id aBlock = sub_1001A8090(v38, v39, &v70);
    sub_1001ECBC0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 42) = 2081;
    id v40 = [v24 modifiedByDevice];
    if (v40)
    {
      BOOL v41 = v40;
      uint64_t v42 = sub_1001EC370();
      uint64_t v44 = v43;
    }
    else
    {
      uint64_t v42 = 0;
      uint64_t v44 = 0;
    }
    id aBlock = v42;
    uint64_t v72 = v44;
    sub_10007DC14(&qword_1002924D8);
    uint64_t v45 = sub_1001EC3D0();
    id aBlock = sub_1001A8090(v45, v46, &v70);
    sub_1001ECBC0();

    swift_bridgeObjectRelease();
    os_log_t v47 = v65;
    _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v62, "CRDTModelCloudDataManager resolveConflictsFor: resolving conflicts for record: %{public}@ id: %{public}@ created: %{public}s modified: %{public}s modifiedByDevice:%{private}s", (uint8_t *)v21, 0x34u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v48 = *(void **)((char *)v4 + qword_100296A00);
  sub_100081668(0, (unint64_t *)&unk_1002915B0);
  Class isa = sub_1001EC5D0().super.isa;
  sub_1001AE570();
  sub_10007DC14(&qword_1002924D0);
  Class v50 = sub_1001EC250().super.isa;
  swift_bridgeObjectRelease();
  sub_1001AE570();
  Class v51 = sub_1001EC250().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v52 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v53 = swift_allocObject();
  uint64_t v54 = v66;
  *(_OWORD *)(v53 + 16) = *(_OWORD *)(v66 + 80);
  uint64_t v55 = *(void *)(v54 + 96);
  unint64_t v56 = v67;
  uint64_t v57 = v68;
  *(void *)(v53 + 32) = v55;
  *(void *)(v53 + 40) = v56;
  *(void *)(v53 + 48) = v57;
  *(void *)(v53 + 56) = v52;
  os_log_type_t v75 = sub_1001B47A0;
  uint64_t v76 = v53;
  id aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v72 = 1107296256;
  unint64_t v73 = sub_1001AE22C;
  char v74 = &unk_10026B1A8;
  uint64_t v58 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v48 resolveConflictsForRecords:isa withResolvers:v50 mergers:v51 completion:v58];
  _Block_release(v58);
}

void sub_1001B4400(uint64_t a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v5 = (uint64_t)a2;
  if (*(unsigned char *)(v3 + qword_1002A4310) == 1)
  {
    uint64_t v6 = v3;
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_1001EB540();
    os_log_type_t v8 = sub_1001EC910();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v16 = v5;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      sub_100081668(0, (unint64_t *)&unk_100293740);
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1001EC5F0();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      sub_1001A8090(v10, v12, aBlock);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "CRDTModelCloudDataManager failedRecordIDs: failed records %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v5 = v16;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v13 = *(void **)(v6 + qword_100296A00);
    sub_100081668(0, (unint64_t *)&unk_100293740);
    Class isa = sub_1001EC5D0().super.isa;
    aBlock[4] = v5;
    aBlock[5] = a3;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001AE1A8;
    aBlock[3] = (uint64_t)&unk_10026B108;
    os_log_type_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v13 failedRecordIDs:isa completion:v15];
    _Block_release(v15);
  }
  else
  {
    a2(0, 0);
  }
}

void sub_1001B46A8()
{
}

uint64_t sub_1001B46D8()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B4710(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001B4720()
{
  return swift_release();
}

uint64_t sub_1001B4728()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B4760()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001B47A0(char a1, unint64_t a2, uint64_t a3)
{
  return sub_1001B2838(a1, a2, a3, *(uint64_t (**)(void, uint64_t))(v3 + 40));
}

uint64_t sub_1001B47D0()
{
  return sub_1001B49C4((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1001B47E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1001AE784(a1, a2, a3, *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 16), *(void *)(v4 + 24), a4, *(void *)(v4 + 32));
}

uint64_t sub_1001B4818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100295B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B4880()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B48B8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001B48E0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1001B48F4(char a1, uint64_t a2)
{
  sub_1001B1C60(a1, a2, *(char **)(v2 + 16), *(void (**)(void, uint64_t))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1001B4904()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001B494C(char a1, uint64_t a2)
{
  sub_1001B1FBC(a1, a2, *(void *)(v2 + 16), *(void (**)(void, void))(v2 + 24));
}

uint64_t sub_1001B4958()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

id sub_1001B49A0(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B1678(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(void))(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1001B49AC()
{
  return sub_1001B49C4((void (*)(void))&_swift_release);
}

uint64_t sub_1001B49C4(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 56));
  return _swift_deallocObject(v1, 64, 7);
}

void sub_1001B4A14(uint64_t a1, uint64_t a2)
{
  sub_1001B1368(a1, a2, *(void *)(v2 + 40), *(void (**)(void))(v2 + 48));
}

uint64_t *sub_1001B4A88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001EB0C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001B4B58(uint64_t a1)
{
  uint64_t v2 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001B4BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001B4C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001B4CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001B4D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B4D70);
}

uint64_t sub_1001B4D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001B4E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B4E44);
}

uint64_t sub_1001B4E44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001EB0C0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t _s14UpdateScheduleVMa()
{
  uint64_t result = qword_100296B28;
  if (!qword_100296B28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001B4F4C()
{
  uint64_t result = sub_1001EB0C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1001B4FE4(uint64_t x0_0)
{
  int64_t v1 = *(void *)(x0_0 + 16);
  if (v1)
  {
    sub_1000CF7D0(0, v1, 0);
    for (uint64_t i = (double *)(x0_0 + 56); ; i += 4)
    {
      double v4 = round(*(i - 3));
      if ((~*(void *)&v4 & 0x7FF0000000000000) == 0) {
        break;
      }
      if (v4 <= -9.22337204e18) {
        goto LABEL_14;
      }
      if (v4 >= 9.22337204e18) {
        goto LABEL_15;
      }
      double v6 = *(i - 2);
      double v5 = *(i - 1);
      double v7 = *i;
      uint64_t v13 = sub_1001ED040();
      uint64_t v14 = v8;
      v15._countAndFlagsBits = 58;
      v15._object = (void *)0xE100000000000000;
      sub_1001EC490(v15);
      double v9 = round(v6);
      if ((~*(void *)&v9 & 0x7FF0000000000000) == 0) {
        goto LABEL_16;
      }
      if (v9 <= -9.22337204e18) {
        goto LABEL_17;
      }
      if (v9 >= 9.22337204e18) {
        goto LABEL_18;
      }
      v16._countAndFlagsBits = sub_1001ED040();
      sub_1001EC490(v16);
      swift_bridgeObjectRelease();
      v17._countAndFlagsBits = 58;
      v17._object = (void *)0xE100000000000000;
      sub_1001EC490(v17);
      sub_1000DB2AC(v5, v7);
      sub_1001EC490(v18);
      swift_bridgeObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_1000CF7D0(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      unint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v13;
      v12[5] = v14;
      if (!--v1) {
        return;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
}

uint64_t sub_1001B5200(uint64_t a1, uint64_t a2)
{
  os_log_type_t v96 = (char *)a1;
  uint64_t v97 = sub_1001EB300();
  uint64_t v87 = *(void *)(v97 - 8);
  uint64_t v3 = __chkstk_darwin(v97);
  double v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  double v7 = (char *)&v73 - v6;
  uint64_t v8 = type metadata accessor for PBPropertyValue(0);
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v73 - v12;
  uint64_t v14 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v94 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  Swift::String v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10007DC14(&qword_100292E48);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10007DC14(&qword_100295B00);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for PBPropertyBundle(0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v73 - v28;
  uint64_t v30 = (uint64_t)v96;
  uint64_t v31 = *((void *)v96 + 2);
  if (v31 != *(void *)(a2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v84 = v14;
  uint64_t v85 = v25;
  uint64_t v82 = v20;
  BOOL v83 = v22;
  unint64_t v88 = v29;
  uint64_t v89 = v27;
  uint64_t v80 = v16;
  uint64_t v81 = v19;
  v95 = v11;
  if (!v31 || v96 == (char *)a2)
  {
    char v70 = 1;
    return v70 & 1;
  }
  uint64_t v32 = 0;
  unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v34 = &v96[v33];
  uint64_t v35 = a2 + v33;
  uint64_t v36 = *(void *)(v26 + 72);
  uint64_t v37 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  uint64_t v92 = v87 + 16;
  uint64_t v93 = v5;
  uint64_t v91 = (void (**)(char *, uint64_t))(v87 + 8);
  uint64_t v38 = (uint64_t)v95;
  os_log_type_t v96 = v13;
  id v40 = v88;
  unint64_t v39 = v89;
  uint64_t v41 = v85;
  char v74 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  unint64_t v77 = v30 + v33;
  uint64_t v78 = v31;
  uint64_t v76 = v35;
  uint64_t v75 = v36;
  while (1)
  {
    uint64_t v42 = v36 * v32;
    sub_1001B9F3C((uint64_t)&v34[v36 * v32], (uint64_t)v40, type metadata accessor for PBPropertyBundle);
    sub_1001B9F3C(v35 + v42, (uint64_t)v39, type metadata accessor for PBPropertyBundle);
    uint64_t v43 = *(int *)(v41 + 28);
    uint64_t v44 = (uint64_t)v39 + v43;
    uint64_t v45 = (uint64_t)v83;
    uint64_t v46 = (uint64_t)&v83[*(int *)(v82 + 48)];
    sub_1001B9ED4((uint64_t)v40 + v43, (uint64_t)v83);
    sub_1001B9ED4(v44, v46);
    os_log_t v47 = *v37;
    uint64_t v48 = v84;
    unsigned int v49 = (*v37)(v45, 1, v84);
    uint64_t v79 = v32;
    if (v49 == 1)
    {
      if (v47(v46, 1, v48) == 1)
      {
        sub_1000816A4(v45, &qword_100292E48);
        goto LABEL_16;
      }
      BOOL v71 = &qword_100295B00;
LABEL_36:
      sub_1000816A4(v45, v71);
      goto LABEL_37;
    }
    Class v50 = v81;
    sub_1001B9ED4(v45, (uint64_t)v81);
    if (v47(v46, 1, v48) == 1)
    {
      BOOL v71 = &qword_100295B00;
      goto LABEL_35;
    }
    Class v51 = v80;
    sub_1001BA04C(v46, (uint64_t)v80, type metadata accessor for PBPropertyConfiguration);
    if (*v50 != *v51
      || v50[1] != v51[1]
      || (v50[2] != v51[2] || v50[3] != v51[3]) && (sub_1001ED080() & 1) == 0
      || v50[4] != v51[4])
    {
      sub_1001B9FEC((uint64_t)v51, type metadata accessor for PBPropertyConfiguration);
      BOOL v71 = &qword_100292E48;
LABEL_35:
      sub_1001B9FEC((uint64_t)v50, type metadata accessor for PBPropertyConfiguration);
      goto LABEL_36;
    }
    sub_1001EB330();
    sub_1001B9FA4(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v52 = sub_1001EC330();
    sub_1001B9FEC((uint64_t)v51, type metadata accessor for PBPropertyConfiguration);
    sub_1001B9FEC((uint64_t)v50, type metadata accessor for PBPropertyConfiguration);
    sub_1000816A4(v45, &qword_100292E48);
    if ((v52 & 1) == 0) {
      goto LABEL_37;
    }
LABEL_16:
    uint64_t v53 = *v88;
    uint64_t v54 = *v89;
    uint64_t v55 = *(void *)(*v88 + 16);
    if (v55 != *(void *)(*v89 + 16)) {
      goto LABEL_37;
    }
    if (v55 && v53 != v54) {
      break;
    }
LABEL_22:
    uint64_t v60 = v89[1];
    uint64_t v94 = v88[1];
    uint64_t v61 = *(void *)(v94 + 16);
    if (v61 != *(void *)(v60 + 16)) {
      goto LABEL_37;
    }
    if (v61 && v94 != v60)
    {
      unint64_t v62 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
      uint64_t v90 = *(void *)(v87 + 72);
      uint64_t v63 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
      do
      {
        uint64_t v64 = v97;
        v63(v7, v94 + v62, v97);
        os_log_t v65 = v7;
        uint64_t v66 = v93;
        v63(v93, v60 + v62, v64);
        sub_1001B9FA4(&qword_100294BD8, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
        char v67 = sub_1001EC330();
        uint64_t v68 = *v91;
        uint64_t v69 = v66;
        double v7 = v65;
        (*v91)(v69, v64);
        v68(v65, v64);
        uint64_t v38 = (uint64_t)v95;
        if ((v67 & 1) == 0) {
          goto LABEL_37;
        }
        v62 += v90;
      }
      while (--v61);
    }
    uint64_t v41 = v85;
    id v40 = v88;
    unint64_t v39 = v89;
    sub_1001EB330();
    sub_1001B9FA4(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v70 = sub_1001EC330();
    sub_1001B9FEC((uint64_t)v39, type metadata accessor for PBPropertyBundle);
    sub_1001B9FEC((uint64_t)v40, type metadata accessor for PBPropertyBundle);
    if (v70)
    {
      uint64_t v32 = v79 + 1;
      uint64_t v34 = (char *)v77;
      uint64_t v35 = v76;
      uint64_t v36 = v75;
      uint64_t v37 = v74;
      if (v79 + 1 != v78) {
        continue;
      }
    }
    return v70 & 1;
  }
  unint64_t v56 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  uint64_t v57 = *(void *)(v86 + 72);
  while (1)
  {
    uint64_t v58 = (uint64_t)v96;
    sub_1001B9F3C(v53 + v56, (uint64_t)v96, type metadata accessor for PBPropertyValue);
    sub_1001B9F3C(v54 + v56, v38, type metadata accessor for PBPropertyValue);
    char v59 = static PBPropertyValue.== infix(_:_:)(v58, v38);
    sub_1001B9FEC(v38, type metadata accessor for PBPropertyValue);
    sub_1001B9FEC(v58, type metadata accessor for PBPropertyValue);
    if ((v59 & 1) == 0) {
      break;
    }
    v56 += v57;
    if (!--v55) {
      goto LABEL_22;
    }
  }
LABEL_37:
  sub_1001B9FEC((uint64_t)v89, type metadata accessor for PBPropertyBundle);
  sub_1001B9FEC((uint64_t)v88, type metadata accessor for PBPropertyBundle);
LABEL_38:
  char v70 = 0;
  return v70 & 1;
}

uint64_t sub_1001B5B28(uint64_t a1, uint64_t a2)
{
  return sub_1001B61B8(a1, a2, type metadata accessor for PBPropertyValue, type metadata accessor for PBPropertyValue, (uint64_t (*)(char *, char *))static PBPropertyValue.== infix(_:_:), type metadata accessor for PBPropertyValue);
}

uint64_t sub_1001B5B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB300();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      uint64_t v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(char *, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v9;
        uint64_t v20 = v9;
        uint64_t v21 = v32;
        v32(v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_1001B9FA4(&qword_100294BD8, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
        char v23 = sub_1001EC330();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24(v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1001B5D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  int v7 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  int v10 = *(unsigned __int8 *)(a2 + 64);
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
  {
    uint64_t result = 0;
  }
  else
  {
    char v12 = sub_1001ED080();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (v6 == v9 && v5 == v8 && ((v7 ^ v10) & 1) == 0)
  {
    uint64_t v13 = v2 - 1;
    if (v13)
    {
      uint64_t v14 = (unsigned __int8 *)(a2 + 104);
      uint64_t v15 = (unsigned __int8 *)(a1 + 104);
      while (1)
      {
        uint64_t v17 = *((void *)v15 - 2);
        uint64_t v16 = *((void *)v15 - 1);
        int v18 = *v15;
        uint64_t v20 = *((void *)v14 - 2);
        uint64_t v19 = *((void *)v14 - 1);
        int v21 = *v14;
        if (*((void *)v15 - 4) == *((void *)v14 - 4) && *((void *)v15 - 3) == *((void *)v14 - 3))
        {
          uint64_t result = 0;
          if (v17 != v20 || v16 != v19) {
            return result;
          }
        }
        else
        {
          char v23 = sub_1001ED080();
          uint64_t result = 0;
          if ((v23 & 1) == 0 || v17 != v20 || v16 != v19) {
            return result;
          }
        }
        if (((v18 ^ v21) & 1) == 0)
        {
          v14 += 40;
          v15 += 40;
          uint64_t result = 1;
          if (--v13) {
            continue;
          }
        }
        return result;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1001B5EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8CardItemVMa();
  uint64_t v5 = __chkstk_darwin(v4);
  int v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v10 = (char *)&v22 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1001B9F3C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))_s8CardItemVMa);
      sub_1001B9F3C(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))_s8CardItemVMa);
      BOOL v14 = *(void *)v10 == *(void *)v7 && *((void *)v10 + 1) == *((void *)v7 + 1);
      if (!v14 && (sub_1001ED080() & 1) == 0
        || v10[16] != v7[16]
        || (sub_1001EB090() & 1) == 0
        || *(double *)&v10[*(int *)(v4 + 28)] != *(double *)&v7[*(int *)(v4 + 28)])
      {
        break;
      }
      uint64_t v15 = *(int *)(v4 + 32);
      uint64_t v16 = *(void *)&v10[v15];
      uint64_t v17 = *(void *)&v10[v15 + 8];
      int v18 = &v7[v15];
      if (v16 == *(void *)v18 && v17 == *((void *)v18 + 1))
      {
        sub_1001B9FEC((uint64_t)v7, (uint64_t (*)(void))_s8CardItemVMa);
        sub_1001B9FEC((uint64_t)v10, (uint64_t (*)(void))_s8CardItemVMa);
      }
      else
      {
        char v20 = sub_1001ED080();
        sub_1001B9FEC((uint64_t)v7, (uint64_t (*)(void))_s8CardItemVMa);
        sub_1001B9FEC((uint64_t)v10, (uint64_t (*)(void))_s8CardItemVMa);
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      v12 += v13;
      if (!--v11) {
        return 1;
      }
    }
    sub_1001B9FEC((uint64_t)v7, (uint64_t (*)(void))_s8CardItemVMa);
    sub_1001B9FEC((uint64_t)v10, (uint64_t (*)(void))_s8CardItemVMa);
  }
  return 0;
}

uint64_t sub_1001B6164(uint64_t a1, uint64_t a2)
{
  return sub_1001B61B8(a1, a2, (uint64_t (*)(void))_s11TrackedItemVMa, (uint64_t (*)(void))_s11TrackedItemVMa, (uint64_t (*)(char *, char *))sub_1001BBB38, (uint64_t (*)(void))_s11TrackedItemVMa);
}

uint64_t sub_1001B61B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  uint64_t v12 = __chkstk_darwin(v11);
  BOOL v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v28 = a2;
      uint64_t v19 = a5;
      unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = v18 - 1;
      do
      {
        sub_1001B9F3C(a1 + v20, (uint64_t)v17, a4);
        sub_1001B9F3C(v28 + v20, (uint64_t)v14, a4);
        char v23 = v19(v17, v14);
        sub_1001B9FEC((uint64_t)v14, a6);
        sub_1001B9FEC((uint64_t)v17, a6);
        BOOL v25 = v22-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v20 += v21;
      }
      while (v25);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1001B6354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s4DealVMa();
  uint64_t v5 = __chkstk_darwin(v4);
  int v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v10 = (char *)&v25 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1001B9F3C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))_s4DealVMa);
      sub_1001B9F3C(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))_s4DealVMa);
      int v14 = v10[16];
      int v15 = v7[16];
      if (*(void *)v10 == *(void *)v7 && *((void *)v10 + 1) == *((void *)v7 + 1))
      {
        if (v14 != v15) {
          break;
        }
      }
      else if (sub_1001ED080() & 1) == 0 || ((v14 ^ v15))
      {
        break;
      }
      BOOL v17 = *((void *)v10 + 3) == *((void *)v7 + 3) && *((void *)v10 + 4) == *((void *)v7 + 4);
      if (!v17 && (sub_1001ED080() & 1) == 0
        || (sub_1001EAF00() & 1) == 0
        || (sub_1001EB090() & 1) == 0
        || *(double *)&v10[*(int *)(v4 + 32)] != *(double *)&v7[*(int *)(v4 + 32)])
      {
        break;
      }
      uint64_t v18 = *(int *)(v4 + 36);
      uint64_t v19 = *(void *)&v10[v18];
      uint64_t v20 = *(void *)&v10[v18 + 8];
      uint64_t v21 = &v7[v18];
      if (v19 == *(void *)v21 && v20 == *((void *)v21 + 1))
      {
        sub_1001B9FEC((uint64_t)v7, (uint64_t (*)(void))_s4DealVMa);
        sub_1001B9FEC((uint64_t)v10, (uint64_t (*)(void))_s4DealVMa);
      }
      else
      {
        char v23 = sub_1001ED080();
        sub_1001B9FEC((uint64_t)v7, (uint64_t (*)(void))_s4DealVMa);
        sub_1001B9FEC((uint64_t)v10, (uint64_t (*)(void))_s4DealVMa);
        if ((v23 & 1) == 0) {
          return 0;
        }
      }
      v12 += v13;
      if (!--v11) {
        return 1;
      }
    }
    sub_1001B9FEC((uint64_t)v7, (uint64_t (*)(void))_s4DealVMa);
    sub_1001B9FEC((uint64_t)v10, (uint64_t (*)(void))_s4DealVMa);
  }
  return 0;
}

unsigned __int16 sub_1001B6600@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (v2)
    {
      if (a1 != a2)
      {
        unsigned __int16 result = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)))), 0xFuLL)));
        if (result)
        {
          uint64_t v4 = (float64x2_t *)(a1 + 64);
          uint64_t v5 = (float64x2_t *)(a2 + 64);
          uint64_t v6 = v2 - 1;
          do
          {
            if (!v6) {
              break;
            }
            float64x2_t v7 = *v4;
            float64x2_t v8 = v4[1];
            v4 += 2;
            float64x2_t v9 = *v5;
            float64x2_t v10 = v5[1];
            v5 += 2;
            unsigned __int16 result = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v7, v9), (int32x4_t)vceqq_f64(v8, v10))), 0xFuLL)));
            --v6;
          }
          while ((result & 1) != 0);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1001B66A4(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = _s21PriceDropNotificationVMa();
  uint64_t v4 = __chkstk_darwin(v25);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  float64x2_t v9 = (uint64_t *)((char *)&v24 - v8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v26 = a2;
  if (v10 != *(void *)(a2 + 16))
  {
LABEL_29:
    char v20 = 0;
    return v20 & 1;
  }
  if (v10 && a1 != v26)
  {
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v24 = *(void *)(v7 + 72);
    uint64_t v12 = v10 - 1;
    while (1)
    {
      sub_1001B9F3C(a1 + v11, (uint64_t)v9, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
      sub_1001B9F3C(v26 + v11, (uint64_t)v6, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
      uint64_t v13 = *v6;
      uint64_t v27 = *v9;
      sub_100086354();
      uint64_t v14 = sub_1001EC520();
      uint64_t v16 = v15;
      uint64_t v27 = v13;
      if (v14 == sub_1001EC520() && v16 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v19 = sub_1001ED080();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0) {
          break;
        }
      }
      if ((v9[1] != v6[1] || v9[2] != v6[2]) && (sub_1001ED080() & 1) == 0
        || (v9[3] != v6[3] || v9[4] != v6[4]) && (sub_1001ED080() & 1) == 0
        || (v9[5] != v6[5] || v9[6] != v6[6]) && (sub_1001ED080() & 1) == 0)
      {
        break;
      }
      char v20 = sub_1001EAF00();
      sub_1001B9FEC((uint64_t)v6, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
      sub_1001B9FEC((uint64_t)v9, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
      BOOL v22 = v12-- != 0;
      if (v20)
      {
        v11 += v24;
        if (v22) {
          continue;
        }
      }
      return v20 & 1;
    }
    sub_1001B9FEC((uint64_t)v6, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
    sub_1001B9FEC((uint64_t)v9, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
    goto LABEL_29;
  }
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_1001B69AC(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 14;
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (a2 >> 14 == a1 >> 14)
  {
LABEL_24:
    int64_t v24 = v3[2];
    if (!v24) {
      goto LABEL_50;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _swiftEmptyArrayStorage;
  unint64_t v5 = a1;
  unint64_t v6 = a1;
  unint64_t v7 = a1;
  do
  {
    uint64_t v9 = sub_1001ECB80();
    uint64_t v10 = v8;
    if (v9 == 47 && v8 == 0xE100000000000000 || (sub_1001ED080() & 1) != 0 || v9 == 58 && v10 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = sub_1001ED080();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0)
      {
        unint64_t v5 = sub_1001ECB60();
        continue;
      }
    }
    if (v6 >> 14 != v5 >> 14)
    {
      if (v5 >> 14 < v6 >> 14) {
        goto LABEL_66;
      }
      uint64_t v11 = sub_1001ECB90();
      uint64_t v13 = v12;
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1000A6FB0(0, v3[2] + 1, 1, v3);
      }
      uint64_t v18 = v3;
      unint64_t v19 = v3[2];
      char v20 = v18;
      unint64_t v21 = v18[3];
      if (v19 >= v21 >> 1) {
        char v20 = sub_1000A6FB0((void *)(v21 > 1), v19 + 1, 1, v20);
      }
      v20[2] = v19 + 1;
      BOOL v22 = &v20[4 * v19];
      uint64_t v3 = v20;
      v22[4] = v11;
      v22[5] = v13;
      v22[6] = v15;
      v22[7] = v17;
    }
    unint64_t v5 = sub_1001ECB60();
    unint64_t v6 = v5;
    unint64_t v7 = v5;
  }
  while (v2 != v5 >> 14);
  if (v2 == v6 >> 14)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (v2 < v7 >> 14)
  {
LABEL_66:
    uint64_t result = sub_1001ECE80();
    __break(1u);
    return result;
  }
  id v40 = v3;
  uint64_t v41 = sub_1001ECB90();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v40 = sub_1000A6FB0(0, v40[2] + 1, 1, v40);
  }
  unint64_t v49 = v40[2];
  unint64_t v48 = v40[3];
  if (v49 >= v48 >> 1) {
    id v40 = sub_1000A6FB0((void *)(v48 > 1), v49 + 1, 1, v40);
  }
  v40[2] = v49 + 1;
  Class v50 = &v40[4 * v49];
  v50[4] = v41;
  v50[5] = v43;
  uint64_t v3 = v40;
  v50[6] = v45;
  v50[7] = v47;
  int64_t v24 = v40[2];
  if (v24)
  {
LABEL_25:
    uint64_t v68 = (double *)_swiftEmptyArrayStorage;
    uint64_t v25 = v3;
    sub_1000CF960(0, v24, 0);
    unint64_t v26 = v3[4];
    unint64_t v27 = v3[5];
    unint64_t v29 = v3[6];
    unint64_t v28 = v3[7];
    if ((v27 ^ v26) < 0x4000)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = v25 + 11;
      int64_t v31 = v24 - 1;
      if ((v28 & 0x1000000000000000) == 0) {
        goto LABEL_29;
      }
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v32 = (uint64_t)sub_1000D60A8(v26, v27, v29, v28, 10);
      char v34 = v33;
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        while (1)
        {
          swift_bridgeObjectRelease();
          uint64_t v37 = v68;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000CF960(0, *((void *)v37 + 2) + 1, 1);
            uint64_t v37 = v68;
          }
          unint64_t v39 = *((void *)v37 + 2);
          unint64_t v38 = *((void *)v37 + 3);
          if (v39 >= v38 >> 1)
          {
            sub_1000CF960(v38 > 1, v39 + 1, 1);
            uint64_t v37 = v68;
          }
          *((void *)v37 + 2) = v39 + 1;
          v37[v39 + 4] = (double)v32;
          if (!v31)
          {
            swift_bridgeObjectRelease();
            goto LABEL_51;
          }
          unint64_t v26 = *(v30 - 3);
          unint64_t v27 = *(v30 - 2);
          unint64_t v29 = *(v30 - 1);
          unint64_t v28 = *v30;
          if ((v27 ^ v26) < 0x4000) {
            break;
          }
          swift_bridgeObjectRetain();
          v30 += 4;
          --v31;
          if ((v28 & 0x1000000000000000) != 0) {
            goto LABEL_27;
          }
LABEL_29:
          if ((v28 & 0x2000000000000000) != 0)
          {
            unint64_t v63 = v29;
            uint64_t v64 = v28 & 0xFFFFFFFFFFFFFFLL;
            uint64_t v35 = &v63;
          }
          else if ((v29 & 0x1000000000000000) != 0)
          {
            uint64_t v35 = (void *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else
          {
            uint64_t v35 = (void *)sub_1001ECD90();
          }
          uint64_t v32 = sub_1001B9AAC((uint64_t)v35, v26, v27, v29, v28, 10);
          char v67 = v36 & 1;
          if (v36) {
            goto LABEL_64;
          }
        }
        swift_bridgeObjectRetain();
      }
    }
LABEL_64:
    unint64_t v63 = v26;
    uint64_t v64 = v27;
    unint64_t v65 = v29;
    unint64_t v66 = v28;
    sub_1000D6CE8();
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1001EC540();
    uint64_t v61 = v60;
    sub_1001B9A58();
    swift_allocError();
    *unint64_t v62 = v59;
    v62[1] = v61;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_50:
  swift_bridgeObjectRelease();
  uint64_t v37 = (double *)_swiftEmptyArrayStorage;
LABEL_51:
  uint64_t v51 = *((void *)v37 + 2);
  if (v51 == 2)
  {
    double v53 = v37[4];
    double v52 = v37[5];
    swift_bridgeObjectRelease();
    if (v53 < 300.0)
    {
      sub_100127984();
      swift_allocError();
      *(double *)uint64_t v54 = v53;
      char v55 = 2;
      goto LABEL_61;
    }
    if (v52 >= 300.0 && v52 <= v53) {
      return swift_bridgeObjectRelease();
    }
    sub_100127984();
    swift_allocError();
    *(double *)uint64_t v54 = v52;
    char v55 = 1;
LABEL_61:
    *(unsigned char *)(v54 + 8) = v55;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100127984();
    swift_allocError();
    *(void *)uint64_t v56 = v51;
    *(unsigned char *)(v56 + 8) = 0;
  }
  swift_willThrow();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001B706C(unint64_t a1)
{
  return sub_1001B77D8(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1001B95F0);
}

uint64_t sub_1001B7084(uint64_t result)
{
  uint64_t v4 = v2;
  unint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_1001ECE50();
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1001ECEA0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v18 + v6;
    if (!__OFADD__(v18, v6)) {
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6)) {
    goto LABEL_21;
  }
LABEL_6:
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1001ECEA0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1001ECD60();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v12;
    uint64_t v11 = v12 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = (*(void *)(v11 + 24) >> 1) - v13;
  uint64_t result = sub_10013C17C((uint64_t)&v40, (uint64_t *)(v11 + 8 * v13 + 32), v14, v5);
  if (result < v6) {
    goto LABEL_22;
  }
  if (result >= 1)
  {
    uint64_t v15 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
LABEL_29:
      if (!sub_1001ECE70()) {
        goto LABEL_18;
      }
      swift_unknownObjectRelease();
      sub_100081668(0, (unint64_t *)&unk_1002915B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      BOOL v22 = v39;
      swift_unknownObjectRelease();
LABEL_31:
      if (!v22) {
        goto LABEL_18;
      }
      while (1)
      {
        uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
        if (v3 + 1 > *(void *)(v24 + 0x18) >> 1)
        {
          sub_1001EC610();
          uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
        }
        uint64_t v25 = *(void *)(v24 + 24) >> 1;
        if (v3 < v25) {
          break;
        }
LABEL_33:
        *(void *)(v24 + 16) = v3;
      }
      uint64_t v26 = v24 + 32;
      while (1)
      {
        *(void *)(v26 + 8 * v3++) = v22;
        int64_t v27 = v43;
        if (v40 < 0)
        {
          if (!sub_1001ECE70()) {
            goto LABEL_68;
          }
          swift_unknownObjectRelease();
          sub_100081668(0, (unint64_t *)&unk_1002915B0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          BOOL v22 = v39;
          swift_unknownObjectRelease();
          goto LABEL_45;
        }
        if (v44)
        {
          unint64_t v28 = (v44 - 1) & v44;
          unint64_t v29 = __clz(__rbit64(v44)) | (v43 << 6);
        }
        else
        {
          int64_t v31 = v43 + 1;
          if (__OFADD__(v43, 1))
          {
            __break(1u);
LABEL_90:
            BOOL v22 = 0;
            unint64_t v20 = 0;
            int64_t v19 = v1;
LABEL_27:
            int64_t v43 = v19;
            unint64_t v44 = v20;
            goto LABEL_31;
          }
          int64_t v32 = (unint64_t)(v42 + 64) >> 6;
          if (v31 >= v32)
          {
            BOOL v22 = 0;
            unint64_t v28 = 0;
            goto LABEL_42;
          }
          unint64_t v33 = *(void *)(v41 + 8 * v31);
          if (!v33)
          {
            if (v43 + 2 >= v32) {
              goto LABEL_66;
            }
            unint64_t v33 = *(void *)(v41 + 8 * (v43 + 2));
            if (v33)
            {
              int64_t v31 = v43 + 2;
            }
            else
            {
              int64_t v1 = v43 + 3;
              if (v43 + 3 >= v32)
              {
                BOOL v22 = 0;
                unint64_t v28 = 0;
                int64_t v27 = v43 + 2;
                goto LABEL_42;
              }
              unint64_t v33 = *(void *)(v41 + 8 * v1);
              if (v33)
              {
                int64_t v31 = v43 + 3;
              }
              else
              {
                int64_t v31 = v43 + 4;
                if (v43 + 4 >= v32)
                {
                  BOOL v22 = 0;
                  unint64_t v28 = 0;
                  int64_t v27 = v43 + 3;
                  goto LABEL_42;
                }
                unint64_t v33 = *(void *)(v41 + 8 * v31);
                if (!v33)
                {
                  int64_t v31 = v32 - 1;
                  uint64_t v34 = v43 + 5;
                  while (v32 != v34)
                  {
                    unint64_t v33 = *(void *)(v41 + 8 * v34++);
                    if (v33)
                    {
                      int64_t v31 = v34 - 1;
                      goto LABEL_51;
                    }
                  }
LABEL_66:
                  BOOL v22 = 0;
                  unint64_t v28 = 0;
                  int64_t v27 = v31;
                  goto LABEL_42;
                }
              }
            }
          }
LABEL_51:
          unint64_t v28 = (v33 - 1) & v33;
          unint64_t v29 = __clz(__rbit64(v33)) + (v31 << 6);
          int64_t v27 = v31;
        }
        BOOL v22 = *(void **)(*(void *)(v40 + 56) + 8 * v29);
        id v30 = v22;
LABEL_42:
        int64_t v43 = v27;
        unint64_t v44 = v28;
LABEL_45:
        if (!v22)
        {
LABEL_68:
          *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v3;
          goto LABEL_18;
        }
        if (v3 >= v25)
        {
          uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          goto LABEL_33;
        }
      }
    }
    *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v17;
  }
  if (result != v14)
  {
LABEL_18:
    sub_1000B251C();
    return sub_1001EC600();
  }
LABEL_23:
  uint64_t v3 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  int64_t v19 = v43;
  if (v40 < 0) {
    goto LABEL_29;
  }
  if (v44)
  {
    unint64_t v20 = (v44 - 1) & v44;
    unint64_t v21 = __clz(__rbit64(v44)) | (v43 << 6);
    goto LABEL_26;
  }
  int64_t v35 = v43 + 1;
  if (!__OFADD__(v43, 1))
  {
    int64_t v36 = (unint64_t)(v42 + 64) >> 6;
    if (v35 >= v36)
    {
      BOOL v22 = 0;
      unint64_t v20 = 0;
      goto LABEL_27;
    }
    unint64_t v37 = *(void *)(v41 + 8 * v35);
    if (!v37)
    {
      if (v43 + 2 >= v36)
      {
LABEL_88:
        BOOL v22 = 0;
        unint64_t v20 = 0;
        int64_t v19 = v35;
        goto LABEL_27;
      }
      unint64_t v37 = *(void *)(v41 + 8 * (v43 + 2));
      if (v37)
      {
        int64_t v35 = v43 + 2;
      }
      else
      {
        int64_t v1 = v43 + 3;
        if (v43 + 3 >= v36)
        {
          BOOL v22 = 0;
          unint64_t v20 = 0;
          int64_t v19 = v43 + 2;
          goto LABEL_27;
        }
        unint64_t v37 = *(void *)(v41 + 8 * v1);
        if (v37)
        {
          int64_t v35 = v43 + 3;
        }
        else
        {
          int64_t v35 = v43 + 4;
          if (v43 + 4 >= v36) {
            goto LABEL_90;
          }
          unint64_t v37 = *(void *)(v41 + 8 * v35);
          if (!v37)
          {
            int64_t v35 = v36 - 1;
            uint64_t v38 = v43 + 5;
            do
            {
              if (v36 == v38) {
                goto LABEL_88;
              }
              unint64_t v37 = *(void *)(v41 + 8 * v38++);
            }
            while (!v37);
            int64_t v35 = v38 - 1;
          }
        }
      }
    }
    unint64_t v20 = (v37 - 1) & v37;
    unint64_t v21 = __clz(__rbit64(v37)) + (v35 << 6);
    int64_t v19 = v35;
LABEL_26:
    BOOL v22 = *(void **)(*(void *)(v40 + 56) + 8 * v21);
    id v23 = v22;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B7664(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1000A7204(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1001B77C0(unint64_t a1)
{
  return sub_1001B77D8(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1001B9824);
}

uint64_t sub_1001B77D8(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1001ECEA0();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001ECD60();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1001EC600();
}

uint64_t sub_1001B79AC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1000A7798(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  sub_10007DC14(&qword_100291E70);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1001B7B24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1000A6B10(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1001B7C78(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  int64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    int64_t v4 = sub_1000A6B10(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_10013C650((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_1000B251C();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  int64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = v4[3];
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_1000A6B10((void *)(v22 > 1), v2 + 1, 1, v4);
  int64_t v4 = (void *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    uint64_t v24 = &v4[2 * v2 + 4];
    *uint64_t v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    int64_t v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

BOOL sub_1001B8044(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  if (a1[3] == a2[3]) {
    return a1[2] == a2[2];
  }
  return 0;
}

void sub_1001B807C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_1001EB090())
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = *(void *)(a1 + v6);
    uint64_t v8 = *(void *)(a2 + v6);
    sub_1001B6600(v7, v8);
  }
}

uint64_t sub_1001B80E4()
{
  uint64_t v0 = sub_1001EB0C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = _s14UpdateScheduleVMa();
  sub_10008176C(updated, qword_1002A4318);
  uint64_t v5 = sub_10007CFF8(updated, (uint64_t)qword_1002A4318);
  sub_1001EB000();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  *(void *)(v5 + *(int *)(updated + 20)) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1001B81F0@<X0>(uint64_t a1@<X8>)
{
  sub_1001EB050();
  double v4 = v3;
  uint64_t result = _s14UpdateScheduleVMa();
  uint64_t v6 = *(void *)(v1 + *(int *)(result + 20));
  uint64_t v7 = *(void *)(v6 + 16);
  double v8 = 0.0;
  if (!v7)
  {
LABEL_7:
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    char v18 = 1;
    goto LABEL_10;
  }
  double v9 = *(double *)(v6 + 32);
  double v10 = v4 - v9;
  if (v4 - v9 > 0.0)
  {
    uint64_t v11 = v6 + 40;
    while (--v7)
    {
      uint64_t v12 = (uint64_t *)(v11 + 32);
      double v9 = *(double *)(v11 + 24);
      double v10 = v10 - v9;
      v11 += 32;
      if (v10 <= 0.0)
      {
        uint64_t v13 = v12 + 2;
        uint64_t v14 = v12 + 1;
        goto LABEL_9;
      }
    }
    goto LABEL_7;
  }
  uint64_t v13 = (uint64_t *)(v6 + 56);
  uint64_t v14 = (uint64_t *)(v6 + 48);
  uint64_t v12 = (uint64_t *)(v6 + 40);
LABEL_9:
  char v18 = 0;
  uint64_t v17 = *v13;
  uint64_t v16 = *v14;
  double v8 = v9;
  uint64_t v15 = *v12;
LABEL_10:
  *(double *)a1 = v8;
  *(void *)(a1 + 8) = v15;
  *(void *)(a1 + 16) = v16;
  *(void *)(a1 + 24) = v17;
  *(unsigned char *)(a1 + 32) = v18;
  return result;
}

uint64_t sub_1001B82D4()
{
  if (*v0) {
    return 0x7370657473;
  }
  else {
    return 0x7472617473;
  }
}

uint64_t sub_1001B8300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001BA338(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001B8328(uint64_t a1)
{
  unint64_t v2 = sub_1001B92DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001B8364(uint64_t a1)
{
  unint64_t v2 = sub_1001B92DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001B83A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t updated = _s14UpdateScheduleVMa();
  __chkstk_darwin(updated - 8);
  uint64_t v36 = (uint64_t)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  double v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v38 = (char *)v30 - v9;
  uint64_t v10 = sub_10007DC14(&qword_100296B60);
  uint64_t v39 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  unint64_t v13 = sub_1001B92DC();
  uint64_t v14 = v40;
  sub_1001ED1D0();
  if (!v14)
  {
    unint64_t v34 = v13;
    int64_t v40 = v8;
    uint64_t v15 = v37;
    LOBYTE(v41) = 0;
    sub_1001B9FA4(&qword_100292148, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v16 = v38;
    sub_1001ECFA0();
    LOBYTE(v41) = 1;
    uint64_t v17 = sub_1001ECF30();
    if (v18) {
      uint64_t v20 = v17;
    }
    else {
      uint64_t v20 = 0;
    }
    uint64_t v32 = v20;
    uint64_t v33 = v10;
    unint64_t v21 = 0xE000000000000000;
    if (v18) {
      unint64_t v21 = v18;
    }
    unint64_t v31 = v21;
    uint64_t v22 = v15;
    int64_t v23 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v24 = (uint64_t)v40;
    v23(v40, v16, v5);
    uint64_t v25 = a1[3];
    v30[1] = a1[4];
    sub_100094758(a1, v25);
    uint64_t v26 = sub_1001ED1B0();
    sub_10007DC14(&qword_100291E68);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100215320;
    unint64_t v28 = v34;
    *(void *)(inited + 56) = &_s14UpdateScheduleV10CodingKeysON;
    *(void *)(inited + 64) = v28;
    *(unsigned char *)(inited + 32) = 1;
    uint64_t v41 = v26;
    sub_1001B79AC(inited);
    uint64_t v29 = v36;
    sub_1001B8818(v24, v32, v31, v36);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v5);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v33);
    sub_1001BA04C(v29, v35, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  }
  return sub_1000947F0((uint64_t)a1);
}

uint64_t sub_1001B8818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRelease();
  v31[0] = 44;
  v31[1] = 0xE100000000000000;
  int64_t v30 = v31;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001A3F9C, (uint64_t)v29, a2, a3);
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v32 = a1;
    v31[0] = _swiftEmptyArrayStorage;
    sub_1000CF940(0, v10, 0);
    uint64_t v11 = (void *)v31[0];
    uint64_t v12 = v9 + 56;
    while (1)
    {
      unint64_t v14 = *(void *)(v12 - 24);
      unint64_t v13 = *(void *)(v12 - 16);
      swift_bridgeObjectRetain_n();
      sub_1001B8D00(v14, v13);
      if (v4) {
        break;
      }
      uint64_t v19 = v15;
      uint64_t v20 = v16;
      uint64_t v21 = v17;
      uint64_t v22 = v18;
      swift_bridgeObjectRelease();
      v31[0] = v11;
      unint64_t v24 = v11[2];
      unint64_t v23 = v11[3];
      if (v24 >= v23 >> 1)
      {
        sub_1000CF940(v23 > 1, v24 + 1, 1);
        uint64_t v11 = (void *)v31[0];
      }
      v11[2] = v24 + 1;
      uint64_t v25 = &v11[4 * v24];
      v25[4] = v19;
      v25[5] = v20;
      v25[6] = v21;
      v25[7] = v22;
      v12 += 32;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v32;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v32, v26);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
LABEL_10:
    uint64_t v28 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(a4, a1, v28);
    uint64_t result = _s14UpdateScheduleVMa();
    *(void *)(a4 + *(int *)(result + 20)) = v11;
  }
  return result;
}

uint64_t sub_1001B8A98(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100296B78);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_1001B92DC();
  sub_1001ED1F0();
  LOBYTE(v11) = 0;
  sub_1001EB0C0();
  sub_1001B9FA4(&qword_100292138, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001ED020();
  if (v1) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  _s14UpdateScheduleVMa();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1001B4FE4(v8);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = v10;
  sub_10007DC14(&qword_100292710);
  sub_1000815A4((unint64_t *)&qword_100291F60, &qword_100292710);
  sub_1001EC300();
  swift_bridgeObjectRelease();
  LOBYTE(v11) = 1;
  sub_1001ECFE0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001B8D00(unint64_t a1, unint64_t a2)
{
  uint64_t v34 = 58;
  uint64_t v35 = 0xE100000000000000;
  v33[2] = &v34;
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1000F3F74(2, 1, sub_1001006EC, (uint64_t)v33, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5[2];
  if (v6 != 3)
  {
    swift_bridgeObjectRelease();
    sub_1001279D8();
    swift_allocError();
    *(void *)uint64_t v20 = v6;
    *(unsigned char *)(v20 + 8) = 0;
    return swift_willThrow();
  }
  uint64_t v39 = (double *)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_1000CF960(0, 2, 0);
  unint64_t v7 = v5[4];
  unint64_t v8 = v5[5];
  unint64_t v10 = v5[6];
  unint64_t v9 = v5[7];
  if ((v8 ^ v7) >= 0x4000)
  {
    char v11 = 0;
    while (1)
    {
      swift_bridgeObjectRetain();
      if ((v9 & 0x1000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = (uint64_t)sub_1000D60A8(v7, v8, v10, v9, 10);
        char v19 = v18;
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_33;
        }
      }
      else
      {
        if ((v9 & 0x2000000000000000) != 0)
        {
          uint64_t v34 = v10;
          uint64_t v35 = v9 & 0xFFFFFFFFFFFFFFLL;
          uint64_t v12 = &v34;
        }
        else if ((v10 & 0x1000000000000000) != 0)
        {
          uint64_t v12 = (uint64_t *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          uint64_t v12 = (uint64_t *)sub_1001ECD90();
        }
        uint64_t v13 = sub_1001B9AAC((uint64_t)v12, v7, v8, v10, v9, 10);
        char v38 = v14 & 1;
        if (v14) {
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v15 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000CF960(0, *((void *)v15 + 2) + 1, 1);
        uint64_t v15 = v39;
      }
      unint64_t v17 = *((void *)v15 + 2);
      unint64_t v16 = *((void *)v15 + 3);
      if (v17 >= v16 >> 1)
      {
        sub_1000CF960(v16 > 1, v17 + 1, 1);
        uint64_t v15 = v39;
      }
      *((void *)v15 + 2) = v17 + 1;
      v15[v17 + 4] = (double)v13;
      if (v11) {
        break;
      }
      unint64_t v7 = v5[8];
      unint64_t v8 = v5[9];
      unint64_t v10 = v5[10];
      unint64_t v9 = v5[11];
      char v11 = 1;
      if ((v8 ^ v7) < 0x4000) {
        goto LABEL_32;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v5[2] < 3uLL)
    {
      __break(1u);
    }
    else
    {
      unint64_t v22 = v5[12];
      unint64_t v23 = v5[13];
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v24 = *((void *)v15 + 2);
      if (v24)
      {
        if (v24 != 1)
        {
          double v25 = v15[4];
          double v26 = v15[5];
          swift_release();
          swift_bridgeObjectRetain();
          sub_1001B69AC(v22, v23);
          if (v2) {
            return swift_bridgeObjectRelease();
          }
          if (v25 <= 0.0)
          {
            sub_1001279D8();
            swift_allocError();
            *(double *)uint64_t v27 = v25;
            char v28 = 1;
          }
          else
          {
            if (v26 > 0.0) {
              return swift_bridgeObjectRelease();
            }
            sub_1001279D8();
            swift_allocError();
            *(double *)uint64_t v27 = v26;
            char v28 = 2;
          }
          *(unsigned char *)(v27 + 8) = v28;
          swift_willThrow();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
LABEL_32:
  swift_bridgeObjectRetain();
LABEL_33:
  uint64_t v34 = v7;
  uint64_t v35 = v8;
  unint64_t v36 = v10;
  unint64_t v37 = v9;
  sub_1000D6CE8();
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1001EC540();
  uint64_t v31 = v30;
  sub_1001B9A58();
  swift_allocError();
  *uint64_t v32 = v29;
  v32[1] = v31;
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return swift_release();
}

void sub_1001B913C(double d0_0, double a2, double a3, double a4)
{
  double v4 = round(d0_0);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001ED040();
  v9._countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  sub_1001EC490(v9);
  double v8 = round(a2);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v8 < 9.22337204e18)
  {
    v10._countAndFlagsBits = sub_1001ED040();
    sub_1001EC490(v10);
    swift_bridgeObjectRelease();
    v11._countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    sub_1001EC490(v11);
    sub_1000DB2AC(a3, a4);
    sub_1001EC490(v12);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1001B92A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001B83A0(a1, a2);
}

uint64_t sub_1001B92B8(void *a1)
{
  return sub_1001B8A98(a1);
}

void sub_1001B92D0()
{
  sub_1001B913C(*v0, v0[1], v0[2], v0[3]);
}

unint64_t sub_1001B92DC()
{
  unint64_t result = qword_100296B68;
  if (!qword_100296B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296B68);
  }
  return result;
}

uint64_t sub_1001B9330(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1001EC550();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    char v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v14 = sub_1000A6FB0(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      char v14 = sub_1000A6FB0((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1001ECE80();
  __break(1u);
  return result;
}

uint64_t sub_1001B948C(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1001ECB90();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    char v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v14 = sub_1000A6FB0(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      char v14 = sub_1000A6FB0((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1001ECE80();
  __break(1u);
  return result;
}

uint64_t sub_1001B95F0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000815A4(&qword_100296B88, &qword_100296B80);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10007DC14(&qword_100296B80);
          uint64_t v12 = sub_10019BC04(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100081668(0, (unint64_t *)&unk_100293740);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1001B9824(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000815A4(&qword_100296B98, &qword_100296B90);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10007DC14(&qword_100296B90);
          uint64_t v12 = sub_10019BC70(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100081668(0, &qword_100294388);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

unint64_t sub_1001B9A58()
{
  unint64_t result = qword_100296B70;
  if (!qword_100296B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296B70);
  }
  return result;
}

uint64_t sub_1001B9AAC(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_1000D5F2C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  unint64_t result = sub_1001EC4E0();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_1000D5F2C(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_1000D5F2C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unint64_t result = sub_1001EC4E0();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  char v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    char v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        double v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_1001B9ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100292E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B9F3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B9FA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B9FEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001BA04C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *_s19UpdateScheduleErrorOMa()
{
  return &_s19UpdateScheduleErrorON;
}

unsigned char *_s14UpdateScheduleV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BA190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14UpdateScheduleV10CodingKeysOMa()
{
  return &_s14UpdateScheduleV10CodingKeysON;
}

__n128 _s14UpdateScheduleV4StepVwcp(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s14UpdateScheduleV4StepVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s14UpdateScheduleV4StepVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *_s14UpdateScheduleV4StepVMa()
{
  return &_s14UpdateScheduleV4StepVN;
}

unint64_t sub_1001BA234()
{
  unint64_t result = qword_100296BA0;
  if (!qword_100296BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296BA0);
  }
  return result;
}

unint64_t sub_1001BA28C()
{
  unint64_t result = qword_100296BA8;
  if (!qword_100296BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296BA8);
  }
  return result;
}

unint64_t sub_1001BA2E4()
{
  unint64_t result = qword_100296BB0;
  if (!qword_100296BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296BB0);
  }
  return result;
}

uint64_t sub_1001BA338(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7370657473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static Logger.engagementSync.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100291198 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1001EB560();
  uint64_t v3 = sub_10007CFF8(v2, (uint64_t)qword_100296BB8);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1001BA4C4()
{
  uint64_t v0 = sub_1001EB560();
  sub_10008176C(v0, qword_100296BB8);
  sub_10007CFF8(v0, (uint64_t)qword_100296BB8);
  return sub_1001EB550();
}

double sub_1001BA540()
{
  uint64_t v1 = sub_10007DC14(&qword_100294D80);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s11RecentPriceVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (double *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v16 - v9;
  double v11 = 0.0;
  if (*(void *)(v0 + 40) != 1)
  {
    double v12 = *(double *)(v0 + 24);
    uint64_t v13 = _s11TrackedItemVMa();
    sub_1001BBFF8(v0 + *(int *)(v13 + 24), (uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_1000816A4((uint64_t)v3, &qword_100294D80);
    }
    else
    {
      sub_100126698((uint64_t)v3, (uint64_t)v10);
      sub_1001BCF48((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))_s11RecentPriceVMa);
      double v14 = *v8;
      sub_1001BCFB0((uint64_t)v8, (uint64_t (*)(void))_s11RecentPriceVMa);
      if (v12 > 0.0) {
        double v11 = v12 - v14;
      }
      sub_1001BCFB0((uint64_t)v10, (uint64_t (*)(void))_s11RecentPriceVMa);
    }
  }
  return v11;
}

uint64_t sub_1001BA748(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_100296C98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_1001BCE38();
  sub_1001ED1F0();
  uint64_t v9 = *(void *)(v3 + 8);
  char v10 = *(unsigned char *)(v3 + 16);
  *(void *)&long long v13 = *(void *)v3;
  *((void *)&v13 + 1) = v9;
  LOBYTE(v14) = v10;
  char v15 = 0;
  sub_100144CD8();
  sub_1001ED020();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 40);
    long long v13 = *(_OWORD *)(v3 + 24);
    uint64_t v14 = v11;
    char v15 = 1;
    sub_1001BD010();
    sub_1001ECFD0();
    _s11TrackedItemVMa();
    LOBYTE(v13) = 2;
    _s11RecentPriceVMa();
    sub_1001BD064(&qword_100296CA8);
    sub_1001ECFD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1001BA954@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_10007DC14(&qword_100294D80);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100296C78);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s11TrackedItemVMa();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  long long v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 4) = 0;
  *((void *)v13 + 5) = 1;
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 32)];
  uint64_t v15 = _s11RecentPriceVMa();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v27 = v14;
  v16(v14, 1, 1, v15);
  sub_100094758(a1, a1[3]);
  sub_1001BCE38();
  sub_1001ED1D0();
  if (v2)
  {
    uint64_t v19 = v27;
    sub_1000947F0((uint64_t)a1);
    sub_100144114(*((void *)v13 + 3), *((void *)v13 + 4), *((void *)v13 + 5));
    return sub_1000816A4(v19, &qword_100294D80);
  }
  else
  {
    uint64_t v17 = v25;
    char v30 = 0;
    sub_100144BBC();
    uint64_t v18 = v26;
    sub_1001ECFA0();
    uint64_t v20 = *((void *)&v28 + 1);
    char v21 = v29;
    *(void *)long long v13 = v28;
    *((void *)v13 + 1) = v20;
    v13[16] = v21;
    char v30 = 1;
    sub_1001BCE8C();
    sub_1001ECF50();
    uint64_t v22 = v29;
    *(_OWORD *)(v13 + 24) = v28;
    *((void *)v13 + 5) = v22;
    LOBYTE(v28) = 2;
    sub_1001BD064(&qword_100296C90);
    sub_1001ECF50();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v18);
    sub_1001BCEE0((uint64_t)v6, v27);
    sub_1001BCF48((uint64_t)v13, v24, (uint64_t (*)(void))_s11TrackedItemVMa);
    sub_1000947F0((uint64_t)a1);
    return sub_1001BCFB0((uint64_t)v13, (uint64_t (*)(void))_s11TrackedItemVMa);
  }
}

uint64_t sub_1001BAD10()
{
  uint64_t v1 = 0x636E657265666572;
  if (*v0 != 1) {
    uint64_t v1 = 0x7250746E65636572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1001BAD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001BD2B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001BAD9C(uint64_t a1)
{
  unint64_t v2 = sub_1001BCE38();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BADD8(uint64_t a1)
{
  unint64_t v2 = sub_1001BCE38();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BAE14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001BA954(a1, a2);
}

uint64_t sub_1001BAE2C(void *a1)
{
  return sub_1001BA748(a1);
}

uint64_t sub_1001BAE48(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  double v103 = *(double *)&a3;
  uint64_t v111 = a2;
  uint64_t v99 = a1;
  uint64_t v104 = _s11RecentPriceVMa();
  uint64_t v7 = *(void *)(v104 - 8);
  uint64_t v8 = __chkstk_darwin(v104);
  os_log_t v98 = (os_log_t)((char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v11 = (double *)((char *)&v92 - v10);
  uint64_t v12 = sub_10007DC14(&qword_100294D80);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  v95 = (double *)((char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v94 = (double *)((char *)&v92 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v101 = (char *)&v92 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v100 = (char *)&v92 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v102 = (uint64_t)&v92 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v92 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  long long v28 = (char *)&v92 - v27;
  __chkstk_darwin(v26);
  char v30 = (char *)&v92 - v29;
  uint64_t v97 = *(void *)v5;
  unsigned __int8 v31 = *(void **)(v5 + 8);
  int v96 = *(unsigned __int8 *)(v5 + 16);
  uint64_t v32 = *(void *)(v5 + 24);
  uint64_t v33 = *(void *)(v5 + 32);
  unint64_t v109 = v31;
  uint64_t v110 = v32;
  uint64_t v34 = *(void *)(v5 + 40);
  uint64_t v35 = (double *)(v5 + *(int *)(_s11TrackedItemVMa() + 24));
  v107 = v30;
  sub_1001BBFF8((uint64_t)v35, (uint64_t)v30);
  uint64_t v108 = v34;
  BOOL v36 = v34 == 1;
  if (v34 == 1)
  {
    *(double *)(v5 + 24) = a4;
    uint64_t v37 = v111;
    *(void *)(v5 + 32) = v99;
    *(void *)(v5 + 40) = v37;
    swift_bridgeObjectRetain();
  }
  sub_1001BBFF8((uint64_t)v35, (uint64_t)v28);
  uint64_t v38 = v104;
  uint64_t v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v106 = v7 + 48;
  if (v105(v28, 1, v104) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1001BC060(v110, v33, v108);
    sub_1000816A4((uint64_t)v28, &qword_100294D80);
    sub_1000816A4((uint64_t)v35, &qword_100294D80);
    unsigned __int8 v39 = (char *)v35 + *(int *)(v38 + 20);
    uint64_t v40 = sub_1001EB0C0();
    (*(void (**)(char *, double, uint64_t))(*(void *)(v40 - 8) + 16))(v39, COERCE_DOUBLE(*(void *)&v103), v40);
    *uint64_t v35 = a4;
    BOOL v36 = 1;
  }
  else
  {
    sub_100126698((uint64_t)v28, (uint64_t)v11);
    double v41 = *v11;
    *uint64_t v11 = a4;
    if (v41 > a4) {
      double v42 = v41;
    }
    else {
      double v42 = a4;
    }
    if (v42 <= 0.0) {
      goto LABEL_13;
    }
    if (v41 > a4) {
      double v41 = a4;
    }
    double v43 = v42 - v41;
    if (v43 >= 0.005 && v43 / v42 >= 0.0)
    {
      uint64_t v90 = (char *)v11 + *(int *)(v38 + 20);
      swift_bridgeObjectRetain();
      sub_1001BC060(v110, v33, v108);
      uint64_t v91 = sub_1001EB0C0();
      (*(void (**)(char *, double, uint64_t))(*(void *)(v91 - 8) + 24))(v90, COERCE_DOUBLE(*(void *)&v103), v91);
      BOOL v36 = 1;
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRetain();
      sub_1001BC060(v110, v33, v108);
    }
    sub_1000816A4((uint64_t)v35, &qword_100294D80);
    sub_100126698((uint64_t)v11, (uint64_t)v35);
  }
  (*(void (**)(double *, void, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v38);
  sub_1001BBFF8((uint64_t)v35, (uint64_t)v25);
  if (v105(v25, 1, v38) == 1)
  {
    sub_1000816A4((uint64_t)v25, &qword_100294D80);
    uint64_t v44 = (uint64_t)v107;
    uint64_t v45 = v110;
    if (v36) {
      goto LABEL_17;
    }
LABEL_27:
    sub_1000816A4(v44, &qword_100294D80);
    swift_bridgeObjectRelease();
    return sub_100144114(v45, v33, v108);
  }
  os_log_t v48 = v98;
  sub_100126698((uint64_t)v25, (uint64_t)v98);
  sub_1001EB050();
  uint64_t v44 = (uint64_t)v107;
  if (v49 > 3888000.0)
  {
    double v103 = *(double *)&v33;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1001EB560();
    sub_10007CFF8(v50, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain_n();
    uint64_t v51 = v109;
    swift_bridgeObjectRetain_n();
    double v52 = sub_1001EB540();
    os_log_type_t v53 = sub_1001EC910();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      v114[0] = v93;
      *(_DWORD *)uint64_t v54 = 141558530;
      uint64_t v112 = 1752392040;
      sub_1001ECBC0();
      *(_WORD *)(v54 + 12) = 2080;
      uint64_t v112 = 0;
      unint64_t v113 = 0xE000000000000000;
      if (v96) {
        uint64_t v55 = 65;
      }
      else {
        uint64_t v55 = 66;
      }
      uint64_t v92 = v54 + 14;
      swift_bridgeObjectRetain();
      v115._countAndFlagsBits = v55;
      v115._object = (void *)0xE100000000000000;
      sub_1001EC490(v115);
      swift_bridgeObjectRelease();
      v116._countAndFlagsBits = 46;
      v116._object = (void *)0xE100000000000000;
      sub_1001EC490(v116);
      swift_bridgeObjectRetain();
      v117._countAndFlagsBits = v97;
      v117._object = v51;
      sub_1001EC490(v117);
      swift_bridgeObjectRelease_n();
      uint64_t v112 = sub_1001A8090(v112, v113, v114);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 22) = 2048;
      uint64_t v112 = *(void *)&a4;
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "[TrackedItem] Price of %{mask.hash}s has stabalized at %f; updating reference price",
        (uint8_t *)v54,
        0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    sub_1001BCFB0((uint64_t)v48, (uint64_t (*)(void))_s11RecentPriceVMa);
    uint64_t v57 = *(void *)(v5 + 24);
    uint64_t v58 = *(void *)(v5 + 32);
    uint64_t v59 = *(void *)(v5 + 40);
    uint64_t v60 = v111;
    swift_bridgeObjectRetain();
    sub_100144114(v57, v58, v59);
    *(double *)(v5 + 24) = a4;
    uint64_t v46 = *(void *)&a4;
    uint64_t v47 = v99;
    *(void *)(v5 + 32) = v99;
    *(void *)(v5 + 40) = v60;
    uint64_t v33 = *(void *)&v103;
    goto LABEL_30;
  }
  sub_1001BCFB0((uint64_t)v48, (uint64_t (*)(void))_s11RecentPriceVMa);
  uint64_t v45 = v110;
  if (!v36) {
    goto LABEL_27;
  }
LABEL_17:
  uint64_t v46 = *(void *)(v5 + 24);
  uint64_t v47 = *(void *)(v5 + 32);
  uint64_t v111 = *(void *)(v5 + 40);
LABEL_30:
  double v103 = *(double *)&v46;
  uint64_t v61 = v33;
  uint64_t v62 = v102;
  sub_1001BBFF8((uint64_t)v35, v102);
  sub_1001BC060(v46, v47, v111);
  uint64_t v64 = (uint64_t)v100;
  uint64_t v63 = (uint64_t)v101;
  uint64_t v65 = v108;
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v66 = sub_1001EB560();
  sub_10007CFF8(v66, (uint64_t)qword_1002A4198);
  uint64_t v67 = (uint64_t)v107;
  sub_1001BBFF8((uint64_t)v107, v64);
  sub_1001BBFF8(v62, v63);
  uint64_t v68 = v109;
  swift_bridgeObjectRetain();
  uint64_t v69 = v110;
  sub_1001BC060(v110, v61, v65);
  sub_1001BC060(*(uint64_t *)&v103, v47, v111);
  char v70 = sub_1001EB540();
  LODWORD(v99) = sub_1001EC910();
  if (os_log_type_enabled(v70, (os_log_type_t)v99))
  {
    os_log_t v98 = v70;
    uint64_t v71 = swift_slowAlloc();
    v114[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v71 = 141559298;
    uint64_t v112 = 1752392040;
    sub_1001ECBC0();
    *(_WORD *)(v71 + 12) = 2080;
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
    if (v96) {
      uint64_t v72 = 65;
    }
    else {
      uint64_t v72 = 66;
    }
    swift_bridgeObjectRetain();
    v118._countAndFlagsBits = v72;
    v118._object = (void *)0xE100000000000000;
    sub_1001EC490(v118);
    swift_bridgeObjectRelease();
    v119._countAndFlagsBits = 46;
    v119._object = (void *)0xE100000000000000;
    sub_1001EC490(v119);
    swift_bridgeObjectRetain();
    v120._countAndFlagsBits = v97;
    v120._object = v68;
    sub_1001EC490(v120);
    swift_bridgeObjectRelease_n();
    uint64_t v112 = sub_1001A8090(v112, v113, v114);
    uint64_t v73 = (uint64_t)v100;
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 22) = 2048;
    double v74 = *(double *)&v69;
    double v75 = -1.0;
    if (v65 == 1) {
      double v74 = -1.0;
    }
    uint64_t v112 = *(void *)&v74;
    sub_1001ECBC0();
    sub_100144114(v69, v61, v65);
    sub_100144114(v69, v61, v65);
    *(_WORD *)(v71 + 32) = 2048;
    uint64_t v76 = *(void *)&v103;
    double v77 = v103;
    uint64_t v78 = v111;
    if (v111 == 1) {
      double v77 = -1.0;
    }
    uint64_t v112 = *(void *)&v77;
    sub_1001ECBC0();
    sub_100144114(v76, v47, v78);
    sub_100144114(v76, v47, v78);
    *(_WORD *)(v71 + 42) = 2048;
    uint64_t v79 = v94;
    sub_1001BBFF8(v73, (uint64_t)v94);
    uint64_t v80 = v104;
    if (v105((char *)v79, 1, v104) == 1)
    {
      sub_1000816A4((uint64_t)v79, &qword_100294D80);
    }
    else
    {
      double v75 = *v79;
      sub_1001BCFB0((uint64_t)v79, (uint64_t (*)(void))_s11RecentPriceVMa);
    }
    uint64_t v84 = (uint64_t)v101;
    uint64_t v85 = v95;
    uint64_t v112 = *(void *)&v75;
    sub_1001ECBC0();
    sub_1000816A4(v73, &qword_100294D80);
    *(_WORD *)(v71 + 52) = 2048;
    sub_1001BBFF8(v84, (uint64_t)v85);
    unsigned int v86 = v105((char *)v85, 1, v80);
    uint64_t v87 = (uint64_t)v107;
    if (v86 == 1)
    {
      sub_1000816A4((uint64_t)v85, &qword_100294D80);
      double v88 = -1.0;
    }
    else
    {
      double v88 = *v85;
      sub_1001BCFB0((uint64_t)v85, (uint64_t (*)(void))_s11RecentPriceVMa);
    }
    uint64_t v112 = *(void *)&v88;
    sub_1001ECBC0();
    sub_1000816A4(v84, &qword_100294D80);
    os_log_t v89 = v98;
    _os_log_impl((void *)&_mh_execute_header, v98, (os_log_type_t)v99, "[TrackedItem] Pricing for %{mask.hash}s changed; reference: (%f → %f) recent: (%f → %f)",
      (uint8_t *)v71,
      0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000816A4(v102, &qword_100294D80);
    uint64_t v83 = v87;
  }
  else
  {

    sub_1000816A4(v63, &qword_100294D80);
    sub_1000816A4(v64, &qword_100294D80);
    uint64_t v81 = *(void *)&v103;
    uint64_t v82 = v111;
    sub_100144114(*(uint64_t *)&v103, v47, v111);
    sub_100144114(v81, v47, v82);
    sub_100144114(v69, v61, v65);
    sub_100144114(v69, v61, v65);
    swift_bridgeObjectRelease_n();
    sub_1000816A4(v62, &qword_100294D80);
    uint64_t v83 = v67;
  }
  return sub_1000816A4(v83, &qword_100294D80);
}

BOOL sub_1001BBB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11RecentPriceVMa();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned __int8 v31 = (double *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10007DC14(&qword_100296BD0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100294D80);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (double *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v31 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v31 - v16;
  int v18 = *(unsigned __int8 *)(a1 + 16);
  int v19 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v18 != v19) {
      return 0;
    }
  }
  else
  {
    char v20 = sub_1001ED080();
    BOOL result = 0;
    if (v20 & 1) == 0 || ((v18 ^ v19)) {
      return result;
    }
  }
  uint64_t v22 = *(void *)(a1 + 40);
  uint64_t v23 = *(void *)(a2 + 40);
  if (v22 == 1)
  {
    if (v23 != 1) {
      return 0;
    }
    goto LABEL_9;
  }
  BOOL result = 0;
  if (v23 != 1 && *(double *)(a1 + 24) == *(double *)(a2 + 24))
  {
    if (v22)
    {
      if (!v23) {
        return 0;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v22 != v23)
      {
        char v27 = sub_1001ED080();
        BOOL result = 0;
        if ((v27 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v23)
    {
      return 0;
    }
LABEL_9:
    uint64_t v24 = _s11TrackedItemVMa();
    sub_1001BBFF8(a1 + *(int *)(v24 + 24), (uint64_t)v17);
    sub_1001BBFF8(a2 + *(int *)(v24 + 24), (uint64_t)v15);
    uint64_t v25 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_1001BBFF8((uint64_t)v17, (uint64_t)v8);
    sub_1001BBFF8((uint64_t)v15, v25);
    uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
    if (v26((uint64_t)v8, 1, v4) == 1)
    {
      sub_1000816A4((uint64_t)v15, &qword_100294D80);
      sub_1000816A4((uint64_t)v17, &qword_100294D80);
      if (v26(v25, 1, v4) == 1)
      {
        sub_1000816A4((uint64_t)v8, &qword_100294D80);
        return 1;
      }
      long long v28 = &qword_100296BD0;
    }
    else
    {
      sub_1001BBFF8((uint64_t)v8, (uint64_t)v12);
      if (v26(v25, 1, v4) == 1)
      {
        long long v28 = &qword_100296BD0;
      }
      else
      {
        uint64_t v29 = v31;
        sub_100126698(v25, (uint64_t)v31);
        if (*v12 == *v29)
        {
          char v30 = sub_1001EB090();
          sub_1001BCFB0((uint64_t)v29, (uint64_t (*)(void))_s11RecentPriceVMa);
          sub_1000816A4((uint64_t)v15, &qword_100294D80);
          sub_1000816A4((uint64_t)v17, &qword_100294D80);
          sub_1001BCFB0((uint64_t)v12, (uint64_t (*)(void))_s11RecentPriceVMa);
          sub_1000816A4((uint64_t)v8, &qword_100294D80);
          return (v30 & 1) != 0;
        }
        sub_1001BCFB0((uint64_t)v29, (uint64_t (*)(void))_s11RecentPriceVMa);
        long long v28 = &qword_100294D80;
      }
      sub_1000816A4((uint64_t)v15, &qword_100294D80);
      sub_1000816A4((uint64_t)v17, &qword_100294D80);
      sub_1001BCFB0((uint64_t)v12, (uint64_t (*)(void))_s11RecentPriceVMa);
    }
    sub_1000816A4((uint64_t)v8, v28);
    return 0;
  }
  return result;
}

uint64_t _s11TrackedItemVMa()
{
  uint64_t result = qword_100296C30;
  if (!qword_100296C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001BBFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100294D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BC060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001BC074(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2 + 3;
    uint64_t v9 = a2[5];
    swift_bridgeObjectRetain();
    *(_OWORD *)(a1 + 24) = *v8;
    if (v9 == 1)
    {
      *(void *)(a1 + 40) = a2[5];
    }
    else
    {
      *(void *)(a1 + 40) = v9;
      swift_bridgeObjectRetain();
    }
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = _s11RecentPriceVMa();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10007DC14(&qword_100294D80);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      *uint64_t v12 = *v13;
      uint64_t v17 = *(int *)(v14 + 20);
      int v18 = (char *)v12 + v17;
      int v19 = (char *)v13 + v17;
      uint64_t v20 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

uint64_t sub_1001BC26C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = _s11RecentPriceVMa();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_1001EB0C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  return result;
}

uint64_t sub_1001BC34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a2 + 24;
  uint64_t v8 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
  if (v8 == 1)
  {
    *(void *)(a1 + 40) = *(void *)(v7 + 16);
  }
  else
  {
    *(void *)(a1 + 40) = v8;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = _s11RecentPriceVMa();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_10007DC14(&qword_100294D80);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    void *v10 = *v11;
    uint64_t v15 = *(int *)(v12 + 20);
    uint64_t v16 = (char *)v10 + v15;
    uint64_t v17 = (char *)v11 + v15;
    uint64_t v18 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1001BC4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = (long long *)(a1 + 24);
  uint64_t v7 = (long long *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) == 1)
  {
    if (v8 == 1)
    {
      long long v9 = *v7;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *uint64_t v6 = v9;
    }
    else
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1001BC7AC(a1 + 24);
    uint64_t v10 = *(void *)(a2 + 40);
    *uint64_t v6 = *v7;
    *(void *)(a1 + 40) = v10;
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = _s11RecentPriceVMa();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      *uint64_t v12 = *v13;
      uint64_t v25 = *(int *)(v14 + 20);
      uint64_t v26 = (char *)v12 + v25;
      char v27 = (char *)v13 + v25;
      uint64_t v28 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
      return a1;
    }
    sub_1001BCFB0((uint64_t)v12, (uint64_t (*)(void))_s11RecentPriceVMa);
    goto LABEL_13;
  }
  if (v18)
  {
LABEL_13:
    uint64_t v23 = sub_10007DC14(&qword_100294D80);
    memcpy(v12, v13, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  *uint64_t v12 = *v13;
  uint64_t v19 = *(int *)(v14 + 20);
  uint64_t v20 = (char *)v12 + v19;
  uint64_t v21 = (char *)v13 + v19;
  uint64_t v22 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1001BC7AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001BC800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = _s11RecentPriceVMa();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10007DC14(&qword_100294D80);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    *uint64_t v5 = *v6;
    uint64_t v10 = *(int *)(v7 + 20);
    uint64_t v11 = (char *)v5 + v10;
    uint64_t v12 = (char *)v6 + v10;
    uint64_t v13 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1001BC95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (*(void *)(a1 + 40) == 1) {
    goto LABEL_4;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  if (v7 == 1)
  {
    sub_1001BC7AC(a1 + 24);
LABEL_4:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    goto LABEL_6;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = _s11RecentPriceVMa();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      *uint64_t v9 = *v10;
      uint64_t v22 = *(int *)(v11 + 20);
      uint64_t v23 = (char *)v9 + v22;
      uint64_t v24 = (char *)v10 + v22;
      uint64_t v25 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
      return a1;
    }
    sub_1001BCFB0((uint64_t)v9, (uint64_t (*)(void))_s11RecentPriceVMa);
    goto LABEL_11;
  }
  if (v15)
  {
LABEL_11:
    uint64_t v20 = sub_10007DC14(&qword_100294D80);
    memcpy(v9, v10, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  *uint64_t v9 = *v10;
  uint64_t v16 = *(int *)(v11 + 20);
  int v17 = (char *)v9 + v16;
  int v18 = (char *)v10 + v16;
  uint64_t v19 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1001BCBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BCBCC);
}

uint64_t sub_1001BCBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10007DC14(&qword_100294D80);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001BCC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BCC94);
}

uint64_t sub_1001BCC94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10007DC14(&qword_100294D80);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1001BCD40()
{
  sub_1001BCDE0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001BCDE0()
{
  if (!qword_100296C40)
  {
    _s11RecentPriceVMa();
    unint64_t v0 = sub_1001ECB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100296C40);
    }
  }
}

unint64_t sub_1001BCE38()
{
  unint64_t result = qword_100296C80;
  if (!qword_100296C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296C80);
  }
  return result;
}

unint64_t sub_1001BCE8C()
{
  unint64_t result = qword_100296C88;
  if (!qword_100296C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296C88);
  }
  return result;
}

uint64_t sub_1001BCEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100294D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BCF48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001BCFB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001BD010()
{
  unint64_t result = qword_100296CA0;
  if (!qword_100296CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296CA0);
  }
  return result;
}

uint64_t sub_1001BD064(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s11RecentPriceVMa();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s11TrackedItemV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BD174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11TrackedItemV10CodingKeysOMa()
{
  return &_s11TrackedItemV10CodingKeysON;
}

unint64_t sub_1001BD1B0()
{
  unint64_t result = qword_100296CB0;
  if (!qword_100296CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296CB0);
  }
  return result;
}

unint64_t sub_1001BD208()
{
  unint64_t result = qword_100296CB8;
  if (!qword_100296CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296CB8);
  }
  return result;
}

unint64_t sub_1001BD260()
{
  unint64_t result = qword_100296CC0;
  if (!qword_100296CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296CC0);
  }
  return result;
}

uint64_t sub_1001BD2B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xEE00656369725065 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7250746E65636572 && a2 == 0xEB00000000656369)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *_s14PricingServiceVwCP(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  id v4 = v3;
  return a1;
}

void _s14PricingServiceVwxx(uint64_t a1)
{
  swift_unknownObjectRelease();
  BOOL v2 = *(void **)(a1 + 8);
}

void *_s14PricingServiceVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t _s14PricingServiceVwta(uint64_t a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *_s14PricingServiceVMa()
{
  return &_s14PricingServiceVN;
}

uint64_t sub_1001BD54C(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_10010080C((long long *)a1, (uint64_t)v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v2;
    *BOOL v2 = 0x8000000000000000;
    uint64_t v5 = sub_100095C78((uint64_t)v11, v12);
    __chkstk_darwin(v5);
    uint64_t v7 = (uint64_t *)&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    sub_1001C0EB8(*v7, a2, isUniquelyReferenced_nonNull_native, &v10);
    sub_1000947F0((uint64_t)v11);
    *BOOL v2 = v10;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000816A4(a1, (uint64_t *)&unk_100296D80);
    sub_1001C0B7C((uint64_t)a2, (uint64_t)v11);

    return sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_100296D80);
  }
}

uint64_t sub_1001BD6B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_10007DC14(&qword_100296D60);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s14PricingServiceV12FetchedPriceVMa(0);
  __chkstk_darwin(v13);
  int v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(a1, 1) == 1)
  {
    sub_1000816A4(a1, &qword_100296D60);
    sub_1001C0C7C(a2, a3, a4 & 1, (uint64_t)v12);
    swift_bridgeObjectRelease();
    return sub_1000816A4((uint64_t)v12, &qword_100296D60);
  }
  else
  {
    sub_1001A3EEC(a1, (uint64_t)v15);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_10019ADB8((uint64_t)v15, a2, a3, a4 & 1, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001BD884(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v2 = sub_1001EB200();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v3 = sub_1001EB270();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  uint64_t v4 = sub_1001EB1F0();
  v1[17] = v4;
  v1[18] = *(void *)(v4 - 8);
  v1[19] = swift_task_alloc();
  return _swift_task_switch(sub_1001BD9FC, 0, 0);
}

uint64_t sub_1001BD9FC()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[10];
  uint64_t v5 = (int *)_s14PricingServiceV16_MCatalogRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + v5[5], v3);
  sub_1001EB1E0();
  uint64_t v6 = *(void *)(v4 + v5[6]);
  uint64_t v7 = *(void *)(v4 + v5[7]);
  sub_10007DC14((uint64_t *)&unk_100296D70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215320;
  *(void *)(inited + 32) = 0x73646C656966;
  *(void *)(inited + 40) = 0xE600000000000000;
  sub_1001EB2C0();
  uint64_t v9 = sub_1001BDE90((uint64_t)&off_100262340);
  uint64_t v11 = v10;
  swift_arrayDestroy();
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v11;
  unint64_t v12 = sub_100121230(inited);
  v0[20] = v12;
  uint64_t v13 = *(void *)(v4 + v5[8]);
  sub_1001EB210();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[21] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1001BDBD4;
  uint64_t v15 = v0[13];
  return MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)(v6, v7, 0, 0, v12, v13, v15);
}

uint64_t sub_1001BDBD4(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[22] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v6 = v4[19];
  uint64_t v7 = v4[18];
  uint64_t v8 = v4[17];
  if (v1)
  {
    (*(void (**)(void, void))(v4[12] + 8))(v4[13], v4[11]);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    return _swift_task_switch(sub_1001BDE14, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v4[12] + 8))(v4[13], v4[11]);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(uint64_t))v5[1];
    return v9(a1);
  }
}

uint64_t sub_1001BDE14()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BDE90(uint64_t a1)
{
  uint64_t v2 = sub_1001EB280();
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v2 + 16);
  BOOL v5 = __OFADD__(v3, v4);
  uint64_t v6 = v3 + v4;
  if (v5)
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v13 = sub_1000A6B10(0, v6 & ~(v6 >> 63), 0, _swiftEmptyArrayStorage);
    uint64_t v7 = swift_bridgeObjectRetain();
    sub_1001B7C78(v7);
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1001B7B24(v8);
    swift_bridgeObjectRelease();
    sub_100170C18((uint64_t)v13);
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_10013AC7C(v9);
    swift_bridgeObjectRelease();
    uint64_t v13 = v10;
    sub_10013A654((uint64_t *)&v13);
    swift_bridgeObjectRelease();
    sub_10007DC14(&qword_100292710);
    sub_1000D1780();
    uint64_t v11 = sub_1001EC300();
    swift_release();
    return v11;
  }
  return result;
}

uint64_t sub_1001BDFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  uint64_t v4 = _s14PricingServiceV12FetchedPriceVMa(0);
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = _s14PricingServiceV16_MCatalogRequestVMa(0);
  v3[23] = swift_task_alloc();
  uint64_t v5 = sub_1001EB250();
  v3[24] = v5;
  v3[25] = *(void *)(v5 - 8);
  v3[26] = swift_task_alloc();
  uint64_t v6 = sub_1001EB270();
  v3[27] = v6;
  v3[28] = *(void *)(v6 - 8);
  v3[29] = swift_task_alloc();
  return _swift_task_switch(sub_1001BE19C, 0, 0);
}

uint64_t sub_1001BE19C()
{
  unint64_t v12 = v0;
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1001EB560();
  v0[30] = sub_10007CFF8(v1, (uint64_t)qword_1002A4198);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[16];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[13] = *(void *)(v5 + 16);
    sub_1001ECBC0();
    *(_WORD *)(v6 + 12) = 2080;
    v0[14] = v5;
    swift_bridgeObjectRetain();
    sub_10007DC14(&qword_100296D58);
    uint64_t v7 = sub_1001EC3D0();
    v0[15] = sub_1001A8090(v7, v8, &v11);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[PricingService] Fetching prices for %ld items: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (void *)swift_task_alloc();
  v0[31] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1001BE44C;
  v9[17] = v0[18];
  return _swift_task_switch(sub_1001BF710, 0, 0);
}

uint64_t sub_1001BE44C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 256) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    *(unsigned char *)(v4 + 344) = a1 & 1;
    return _swift_task_switch(sub_1001BE614, 0, 0);
  }
}

uint64_t sub_1001BE614()
{
  uint64_t v59 = v0;
  if (*(unsigned char *)(v0 + 344) != 1)
  {
    sub_1001C0898();
    swift_allocError();
    *uint64_t v17 = 0;
LABEL_13:
    swift_willThrow();
    goto LABEL_16;
  }
  id v1 = [*(id *)(v0 + 136) activeStoreAccount];
  *(void *)(v0 + 264) = v1;
  if (!v1)
  {
    sub_1001C0898();
    swift_allocError();
    *int v18 = 1;
    goto LABEL_13;
  }
  uint64_t v2 = v1;
  id v3 = [*(id *)(v0 + 136) currentStorefront];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1001EC370();
    unint64_t v7 = v6;

    *(void *)(v0 + 272) = v5;
    *(void *)(v0 + 280) = v7;
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      if (*(void *)(*(void *)(v0 + 128) + 16))
      {
        uint64_t v56 = *(void *)(v0 + 128);
        uint64_t v57 = v5;
        id v9 = v2;
        swift_bridgeObjectRetain_n();
        id v10 = v9;
        uint64_t v11 = sub_1001EB540();
        os_log_type_t v12 = sub_1001EC910();
        unint64_t v54 = v7;
        uint64_t v55 = v10;
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          double v49 = (void *)swift_slowAlloc();
          v58[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v13 = 141558786;
          *(void *)(v0 + 64) = 1752392040;
          sub_1001ECBC0();
          *(_WORD *)(v13 + 12) = 2112;
          uint64_t v14 = v10;
          id v15 = [v10 identifier];
          id v16 = v15;
          if (v15) {
            *(void *)(v0 + 96) = v15;
          }
          else {
            *(void *)(v0 + 72) = 0;
          }
          sub_1001ECBC0();
          *double v49 = v16;

          *(_WORD *)(v13 + 22) = 2160;
          *(void *)(v0 + 80) = 1752392040;
          sub_1001ECBC0();
          *(_WORD *)(v13 + 32) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 88) = sub_1001A8090(v57, v7, v58);
          sub_1001ECBC0();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "[PricingService] Using account: %{mask.hash}@, store front: %{mask.hash}s", (uint8_t *)v13, 0x2Au);
          sub_10007DC14(&qword_100293190);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }

        uint64_t v51 = *(void *)(v0 + 232);
        uint64_t v52 = *(void *)(v0 + 224);
        uint64_t v53 = *(void *)(v0 + 216);
        uint64_t v46 = *(void *)(v0 + 200);
        uint64_t v26 = *(uint64_t **)(v0 + 184);
        uint64_t v47 = *(void *)(v0 + 208);
        uint64_t v48 = *(void *)(v0 + 192);
        uint64_t v50 = *(int **)(v0 + 176);
        uint64_t v27 = swift_bridgeObjectRetain();
        uint64_t v28 = sub_10013AB84(v27);
        swift_bridgeObjectRelease();
        uint64_t v29 = sub_100102FEC(v58, v28);
        unsigned __int8 v31 = v30;
        uint64_t v33 = v32;
        unint64_t v35 = v34;
        swift_release();
        uint64_t v36 = v58[0];
        uint64_t v37 = (void *)v58[1];
        *(void *)(v0 + 288) = v29;
        *(void *)(v0 + 296) = v36;
        uint64_t v38 = v58[2];
        unint64_t v39 = v58[3];
        uint64_t v40 = sub_1001C109C(v31, v33, v35);
        *(void *)(v0 + 304) = v40;
        double v41 = sub_1001C109C(v37, v38, v39);
        *(void *)(v0 + 312) = v41;
        (*(void (**)(uint64_t, void, uint64_t))(v46 + 104))(v47, enum case for MClientIdentifier.booksPriceTracking(_:), v48);
        id v42 = v55;
        sub_1001EB260();
        (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))((char *)v26 + v50[5], v51, v53);
        uint64_t v43 = *(void *)(v56 + 16);
        *uint64_t v26 = v57;
        v26[1] = v54;
        *(uint64_t *)((char *)v26 + v50[6]) = (uint64_t)v40;
        *(uint64_t *)((char *)v26 + v50[7]) = (uint64_t)v41;
        *(uint64_t *)((char *)v26 + v50[8]) = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v44 = (void *)swift_task_alloc();
        *(void *)(v0 + 320) = v44;
        *uint64_t v44 = v0;
        v44[1] = sub_1001BECE4;
        uint64_t v45 = *(void *)(v0 + 184);
        return sub_1001BD884(v45);
      }
      else
      {
        unint64_t v22 = sub_1001214A0((uint64_t)_swiftEmptyArrayStorage);

        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v0 + 8);
        uint64_t v24 = *(void *)(v0 + 272);
        uint64_t v25 = *(void *)(v0 + 280);
        return v23(v24, v25, v22);
      }
    }
    swift_bridgeObjectRelease();
  }
  sub_1001C0898();
  swift_allocError();
  *uint64_t v19 = 2;
  swift_willThrow();

LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1001BECE4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 328) = a1;
  *(void *)(v3 + 336) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1001BF5CC;
  }
  else
  {
    uint64_t v4 = sub_1001BEE48;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001BEE48()
{
  uint64_t v78 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[39];
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_10016D0C4(v4);
  uint64_t v6 = sub_1001CF2FC(v2, v5);
  swift_bridgeObjectRelease();
  unint64_t v7 = sub_1001CF2FC(v3, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if (v7[2])
  {
    swift_retain_n();
    uint64_t v8 = sub_1001EB540();
    os_log_type_t v9 = sub_1001EC8F0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134218242;
      v0[6] = v7[2];
      sub_1001ECBC0();
      swift_release();
      *(_WORD *)(v10 + 12) = 2080;
      swift_retain();
      uint64_t v11 = sub_1001EC760();
      unint64_t v13 = v12;
      swift_release();
      uint64_t v14 = v11;
      uint64_t v1 = v0;
      v0[7] = sub_1001A8090(v14, v13, v77);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[PricingService] Received assets for %ld unrequested adamIDs: %s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v1[41];
  uint64_t v16 = v1[16];
  unint64_t v17 = sub_1001214A0((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1001C11D8(v17, v16, v15);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1001EB540();
  os_log_type_t v20 = sub_1001EC910();
  uint64_t v76 = v18;
  if (!os_log_type_enabled(v19, v20))
  {
    uint64_t v47 = (void *)v1[33];
    uint64_t v49 = v1[28];
    uint64_t v48 = v1[29];
    uint64_t v50 = v1[27];
    uint64_t v51 = v1[23];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease_n();
    sub_1001C140C(v51, _s14PricingServiceV16_MCatalogRequestVMa);
    uint64_t v52 = v50;
    uint64_t v53 = v76;
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v52);
    goto LABEL_34;
  }
  os_log_type_t v64 = v20;
  uint64_t v72 = v1[19];
  uint64_t v74 = v1[20];
  uint64_t v21 = swift_slowAlloc();
  v77[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v21 = 134218242;
  v1[4] = *(void *)(v18 + 16);
  sub_1001ECBC0();
  swift_bridgeObjectRelease();
  uint64_t v65 = (uint8_t *)v21;
  *(_WORD *)(v21 + 12) = 2080;
  sub_10007DC14(&qword_100296D50);
  uint64_t v22 = sub_1001ECEB0();
  uint64_t v23 = (void *)v22;
  int64_t v24 = 0;
  uint64_t v27 = *(void *)(v18 + 64);
  uint64_t v26 = v18 + 64;
  uint64_t v25 = v27;
  uint64_t v28 = 1 << *(unsigned char *)(v26 - 32);
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  unint64_t v30 = v29 & v25;
  uint64_t v66 = v26;
  int64_t v67 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v68 = v19;
  uint64_t v70 = v22 + 64;
  if ((v29 & v25) == 0) {
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v31 = __clz(__rbit64(v30));
  v30 &= v30 - 1;
  for (unint64_t i = v31 | (v24 << 6); ; unint64_t i = __clz(__rbit64(v34)) + (v24 << 6))
  {
    uint64_t v36 = v1;
    uint64_t v37 = v1[21];
    uint64_t v38 = *(void *)(v76 + 48) + 24 * i;
    uint64_t v40 = *(void *)v38;
    uint64_t v39 = *(void *)(v38 + 8);
    char v41 = *(unsigned char *)(v38 + 16);
    sub_1001C13A8(*(void *)(v76 + 56) + *(void *)(v74 + 72) * i, v37);
    uint64_t v42 = *(void *)(v37 + *(int *)(v72 + 24));
    swift_bridgeObjectRetain();
    sub_1001C140C(v37, _s14PricingServiceV12FetchedPriceVMa);
    *(void *)(v70 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v43 = v23[6] + 24 * i;
    *(void *)uint64_t v43 = v40;
    *(void *)(v43 + 8) = v39;
    *(unsigned char *)(v43 + 16) = v41;
    *(void *)(v23[7] + 8 * i) = v42;
    uint64_t v44 = v23[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45)
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v23[2] = v46;
    uint64_t v1 = v36;
    uint64_t v19 = v68;
    if (v30) {
      goto LABEL_12;
    }
LABEL_13:
    int64_t v33 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      goto LABEL_38;
    }
    if (v33 >= v67) {
      break;
    }
    unint64_t v34 = *(void *)(v66 + 8 * v33);
    ++v24;
    if (!v34)
    {
      int64_t v24 = v33 + 1;
      if (v33 + 1 >= v67) {
        break;
      }
      unint64_t v34 = *(void *)(v66 + 8 * v24);
      if (!v34)
      {
        int64_t v24 = v33 + 2;
        if (v33 + 2 >= v67) {
          break;
        }
        unint64_t v34 = *(void *)(v66 + 8 * v24);
        if (!v34)
        {
          int64_t v24 = v33 + 3;
          if (v33 + 3 >= v67) {
            break;
          }
          unint64_t v34 = *(void *)(v66 + 8 * v24);
          if (!v34)
          {
            int64_t v35 = v33 + 4;
            if (v35 >= v67) {
              break;
            }
            unint64_t v34 = *(void *)(v66 + 8 * v35);
            if (v34)
            {
              int64_t v24 = v35;
              goto LABEL_28;
            }
            while (1)
            {
              int64_t v24 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                break;
              }
              if (v24 >= v67) {
                goto LABEL_33;
              }
              unint64_t v34 = *(void *)(v66 + 8 * v24);
              ++v35;
              if (v34) {
                goto LABEL_28;
              }
            }
LABEL_39:
            __break(1u);
          }
        }
      }
    }
LABEL_28:
    unint64_t v30 = (v34 - 1) & v34;
  }
LABEL_33:
  uint64_t v75 = v1[29];
  unint64_t v54 = v19;
  uint64_t v55 = v1[28];
  uint64_t v71 = (void *)v1[33];
  uint64_t v73 = v1[27];
  uint64_t v69 = v1[23];
  sub_100112224();
  uint64_t v56 = sub_1001EC270();
  uint64_t v57 = v1;
  unint64_t v59 = v58;
  swift_release();
  v57[5] = sub_1001A8090(v56, v59, v77);
  sub_1001ECBC0();
  uint64_t v1 = v57;
  swift_bridgeObjectRelease();
  uint64_t v53 = v76;
  swift_bridgeObjectRelease_n();
  _os_log_impl((void *)&_mh_execute_header, v54, v64, "[PricingService] Received %ld prices: %s", v65, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  sub_1001C140C(v69, _s14PricingServiceV16_MCatalogRequestVMa);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v75, v73);
LABEL_34:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v60 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v1[1];
  uint64_t v61 = v1[34];
  uint64_t v62 = v1[35];
  return v60(v61, v62, v53);
}

uint64_t sub_1001BF5CC()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v3 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[23];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  sub_1001C140C(v5, _s14PricingServiceV16_MCatalogRequestVMa);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1001BF6F0()
{
  *(void *)(v1 + 136) = v0;
  return _swift_task_switch(sub_1001BF710, 0, 0);
}

uint64_t sub_1001BF710()
{
  id v1 = [*(id *)(v0 + 136) priceTrackingEnabled];
  *(void *)(v0 + 144) = v1;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_1001BF82C;
  uint64_t v2 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1001C0794;
  *(void *)(v0 + 104) = &unk_10026B780;
  *(void *)(v0 + 112) = v2;
  [v1 valueWithCompletion:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1001BF82C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1001BF9C8;
  }
  else {
    uint64_t v2 = sub_1001BF93C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001BF93C()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (void *)v0[15];
  id v3 = [v2 BOOLValue];

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

uint64_t sub_1001BF9C8()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

void sub_1001BFA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v97 = a1;
  uint64_t v5 = sub_10007DC14(&qword_100296D60);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (uint64_t *)&v85[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1001EAF60();
  uint64_t v95 = *(void *)(v8 - 8);
  uint64_t v96 = v8;
  __chkstk_darwin(v8);
  os_log_t v98 = &v85[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1001EB1B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = &v85[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = &v85[-v16];
  uint64_t v18 = __chkstk_darwin(v15);
  os_log_type_t v20 = &v85[-v19];
  uint64_t v22 = *(void *)a2;
  uint64_t v21 = *(void **)(a2 + 8);
  int v23 = *(unsigned __int8 *)(a2 + 16);
  if (!*(void *)(a3 + 16)) {
    goto LABEL_11;
  }
  uint64_t v99 = v18;
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1001A87A0(v22, (uint64_t)v21);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    int v37 = v23;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1001EB560();
    sub_10007CFF8(v38, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain_n();
    uint64_t v39 = sub_1001EB540();
    os_log_type_t v40 = sub_1001EC910();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = v22;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v102 = (unsigned char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 141558274;
      uint64_t v100 = 1752392040;
      sub_1001ECBC0();
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v100 = 0;
      unint64_t v101 = 0xE000000000000000;
      if (v37) {
        uint64_t v43 = 65;
      }
      else {
        uint64_t v43 = 66;
      }
      swift_bridgeObjectRetain();
      v103._countAndFlagsBits = v43;
      v103._object = (void *)0xE100000000000000;
      sub_1001EC490(v103);
      swift_bridgeObjectRelease();
      v104._countAndFlagsBits = 46;
      v104._object = (void *)0xE100000000000000;
      sub_1001EC490(v104);
      swift_bridgeObjectRetain();
      v105._countAndFlagsBits = v41;
      v105._object = v21;
      sub_1001EC490(v105);
      swift_bridgeObjectRelease_n();
      uint64_t v100 = sub_1001A8090(v100, v101, (uint64_t *)&v102);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[PricingService] Missing asset for: %{mask.hash}s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  uint64_t v90 = v22;
  id v26 = *(id *)(*(void *)(a3 + 56) + 8 * v24);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  sub_1001EB2D0();
  uint64_t v27 = *(void (**)(unsigned char *, void, uint64_t))(v11 + 104);
  uint64_t v28 = (unsigned int *)&enum case for MResourceType.audiobooks(_:);
  int v91 = v23;
  if (!v23) {
    uint64_t v28 = (unsigned int *)&enum case for MResourceType.books(_:);
  }
  uint64_t v29 = v20;
  uint64_t v30 = v99;
  v27(v17, *v28, v99);
  sub_1001C146C();
  uint64_t v92 = v29;
  sub_1001EC590();
  sub_1001EC590();
  uint64_t v31 = v100;
  uint64_t v32 = (uint64_t)v102;
  uint64_t v93 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
  uint64_t v94 = v11 + 8;
  v93(v17, v30);
  if (v31 == v32)
  {
    double v33 = COERCE_DOUBLE(sub_1001EB2B0());
    if (v34)
    {
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_1001EB560();
      sub_10007CFF8(v56, (uint64_t)qword_1002A4198);
      swift_bridgeObjectRetain_n();
      uint64_t v57 = sub_1001EB540();
      os_log_type_t v58 = sub_1001EC8F0();
      BOOL v59 = os_log_type_enabled(v57, v58);
      int v60 = v91;
      if (v59)
      {
        uint64_t v61 = swift_slowAlloc();
        uint64_t v102 = (unsigned char *)swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 141558274;
        uint64_t v100 = 1752392040;
        sub_1001ECBC0();
        *(_WORD *)(v61 + 12) = 2080;
        uint64_t v100 = 0;
        unint64_t v101 = 0xE000000000000000;
        if (v60) {
          uint64_t v62 = 65;
        }
        else {
          uint64_t v62 = 66;
        }
        swift_bridgeObjectRetain();
        v109._countAndFlagsBits = v62;
        v109._object = (void *)0xE100000000000000;
        sub_1001EC490(v109);
        swift_bridgeObjectRelease();
        v110._countAndFlagsBits = 46;
        v110._object = (void *)0xE100000000000000;
        sub_1001EC490(v110);
        swift_bridgeObjectRetain();
        v111._countAndFlagsBits = v90;
        v111._object = v21;
        sub_1001EC490(v111);
        swift_bridgeObjectRelease_n();
        uint64_t v100 = sub_1001A8090(v100, v101, (uint64_t *)&v102);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "[PricingService] Missing asset price for: %{mask.hash}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      uint64_t v35 = *(void *)&v33;
      if (v33 > 0.0)
      {
        id v36 = objc_msgSend(v26, "priceFormatted", v33);
        if (v36)
        {
        }
        else
        {
          if (qword_1002910B8 != -1) {
            swift_once();
          }
          uint64_t v64 = sub_1001EB560();
          sub_10007CFF8(v64, (uint64_t)qword_1002A4198);
          swift_bridgeObjectRetain_n();
          uint64_t v65 = sub_1001EB540();
          os_log_type_t v66 = sub_1001EC8F0();
          int v67 = v66;
          if (os_log_type_enabled(v65, v66))
          {
            uint64_t v68 = swift_slowAlloc();
            uint64_t v88 = swift_slowAlloc();
            uint64_t v102 = (unsigned char *)v88;
            *(_DWORD *)uint64_t v68 = 134218498;
            uint64_t v100 = v35;
            os_log_t v87 = v65;
            sub_1001ECBC0();
            *(_WORD *)(v68 + 12) = 2160;
            uint64_t v100 = 1752392040;
            sub_1001ECBC0();
            *(_WORD *)(v68 + 22) = 2080;
            uint64_t v100 = 0;
            unint64_t v101 = 0xE000000000000000;
            if (v91) {
              uint64_t v69 = 65;
            }
            else {
              uint64_t v69 = 66;
            }
            int v86 = v67;
            swift_bridgeObjectRetain();
            v112._countAndFlagsBits = v69;
            v112._object = (void *)0xE100000000000000;
            sub_1001EC490(v112);
            swift_bridgeObjectRelease();
            v113._countAndFlagsBits = 46;
            v113._object = (void *)0xE100000000000000;
            sub_1001EC490(v113);
            swift_bridgeObjectRetain();
            v114._countAndFlagsBits = v90;
            v114._object = v21;
            sub_1001EC490(v114);
            swift_bridgeObjectRelease_n();
            uint64_t v100 = sub_1001A8090(v100, v101, (uint64_t *)&v102);
            sub_1001ECBC0();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            os_log_t v70 = v87;
            _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v86, "[PricingService] Missing formatted value for non-zero price %f for: %{mask.hash}s", (uint8_t *)v68, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
        }
      }
      uint64_t v71 = sub_1001EB2A0();
      os_log_t v87 = v72;
      uint64_t v88 = v71;
      sub_1001EB290();
      id v73 = [v26 priceFormatted];
      id v89 = v26;
      if (v73)
      {
        uint64_t v74 = v73;
        uint64_t v75 = v35;
        uint64_t v76 = sub_1001EC370();
        uint64_t v78 = v77;
      }
      else
      {
        uint64_t v75 = v35;
        uint64_t v76 = 0;
        uint64_t v78 = 0;
      }
      uint64_t v79 = _s14PricingServiceV12FetchedPriceVMa(0);
      uint64_t v80 = v95;
      uint64_t v81 = v96;
      uint64_t v82 = v98;
      (*(void (**)(char *, unsigned char *, uint64_t))(v95 + 16))((char *)v7 + *(int *)(v79 + 20), v98, v96);
      os_log_t v83 = v87;
      *unint64_t v7 = v88;
      v7[1] = (uint64_t)v83;
      uint64_t v84 = (uint64_t *)((char *)v7 + *(int *)(v79 + 24));
      uint64_t *v84 = v75;
      v84[1] = v76;
      v84[2] = v78;
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v7, 0, 1, v79);
      swift_bridgeObjectRetain();
      sub_1001BD6B4((uint64_t)v7, v90, (uint64_t)v21, v91);

      (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v82, v81);
    }
    unint64_t v54 = v92;
    uint64_t v55 = v99;
  }
  else
  {
    id v89 = v26;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1001EB560();
    sub_10007CFF8(v44, (uint64_t)qword_1002A4198);
    BOOL v45 = v92;
    uint64_t v46 = v99;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v14, v92, v99);
    swift_bridgeObjectRetain_n();
    uint64_t v47 = sub_1001EB540();
    os_log_type_t v48 = sub_1001EC8F0();
    if (!os_log_type_enabled(v47, v48))
    {

      swift_bridgeObjectRelease_n();
      uint64_t v63 = v93;
      v93(v14, v46);
      v63(v45, v46);
      return;
    }
    uint64_t v49 = swift_slowAlloc();
    os_log_t v98 = (unsigned char *)swift_slowAlloc();
    uint64_t v102 = v98;
    *(_DWORD *)uint64_t v49 = 136446978;
    uint64_t v50 = sub_1001EB1A0();
    uint64_t v100 = sub_1001A8090(v50, v51, (uint64_t *)&v102);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    v93(v14, v46);
    *(_WORD *)(v49 + 12) = 2160;
    uint64_t v100 = 1752392040;
    sub_1001ECBC0();
    *(_WORD *)(v49 + 22) = 2080;
    uint64_t v100 = 0;
    unint64_t v101 = 0xE000000000000000;
    int v52 = v91;
    if (v91) {
      uint64_t v53 = 65;
    }
    else {
      uint64_t v53 = 66;
    }
    swift_bridgeObjectRetain();
    v106._countAndFlagsBits = v53;
    v106._object = (void *)0xE100000000000000;
    sub_1001EC490(v106);
    swift_bridgeObjectRelease();
    v107._countAndFlagsBits = 46;
    v107._object = (void *)0xE100000000000000;
    sub_1001EC490(v107);
    swift_bridgeObjectRetain();
    v108._countAndFlagsBits = v90;
    v108._object = v21;
    sub_1001EC490(v108);
    swift_bridgeObjectRelease_n();
    uint64_t v100 = sub_1001A8090(v100, v101, (uint64_t *)&v102);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 32) = 1024;
    swift_bridgeObjectRelease();
    LODWORD(v100) = v52;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "[PricingService] Incorrect asset type: %{public}s for: %{mask.hash}s (isAudiobook? %{BOOL}d)", (uint8_t *)v49, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v54 = v92;
    uint64_t v55 = v46;
  }
  v93(v54, v55);
}

uint64_t sub_1001C0794(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_10007DC14(&qword_1002929F0);
    uint64_t v6 = swift_allocError();
    *unint64_t v7 = a4;
    id v8 = a4;
    return _swift_continuation_throwingResumeWithError(v4, v6);
  }
  else
  {
    if (a2)
    {
      uint64_t v9 = *(void *)(*(void *)(v4 + 64) + 40);
      *(void *)uint64_t v9 = a2;
      *(unsigned char *)(v9 + 8) = a3;
      id v10 = a2;
      a1 = v4;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

uint64_t _s14PricingServiceV12FetchedPriceVMa(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100296E88);
}

uint64_t _s14PricingServiceV16_MCatalogRequestVMa(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100296DE8);
}

unint64_t sub_1001C0898()
{
  unint64_t result = qword_100296D40;
  if (!qword_100296D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100296D40);
  }
  return result;
}

uint64_t sub_1001C08EC(uint64_t a1)
{
  return sub_1001C0970(a1, (void (*)(unint64_t, uint64_t))sub_1001520E4, (void (*)(void))sub_1001AB7E0);
}

uint64_t sub_1001C0918(uint64_t a1)
{
  return sub_1001C0970(a1, (void (*)(unint64_t, uint64_t))sub_1001520E4, (void (*)(void))sub_1001AB7EC);
}

uint64_t sub_1001C0944(uint64_t a1)
{
  return sub_1001C0970(a1, (void (*)(unint64_t, uint64_t))sub_1001520E4, (void (*)(void))sub_1001AB7F8);
}

uint64_t sub_1001C0970(uint64_t a1, void (*a2)(unint64_t, uint64_t), void (*a3)(void))
{
  uint64_t v6 = v3;
  unint64_t v7 = sub_1001A86C4(a1);
  if ((v8 & 1) == 0) {
    return 0;
  }
  unint64_t v9 = v7;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v3;
  uint64_t v14 = *v6;
  *uint64_t v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 56) + 16 * v9);
  a2(v9, v11);
  *uint64_t v6 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1001C0A2C(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1001A8818(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v9 = *v2;
      Swift::Int v17 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1001AC410();
        Swift::Int v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = sub_1001ECE60();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1001ECE50();
  Swift::Int v9 = sub_10019A3D4(v5, v8);
  swift_retain();
  a1 = sub_1001A8818((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_100152570(a1, v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

double sub_1001C0B7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1001A89F0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001ACD00();
      uint64_t v9 = v11;
    }

    sub_10010080C((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_1001528FC(v6, v9);
    *id v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1001C0C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1001A88FC(a1, a2, a3);
  LOBYTE(a3) = v11;
  swift_bridgeObjectRelease();
  if (a3)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v5;
    uint64_t v23 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1001ACECC();
      uint64_t v13 = v23;
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 56);
    uint64_t v15 = _s14PricingServiceV12FetchedPriceVMa(0);
    uint64_t v22 = *(void *)(v15 - 8);
    sub_1001A3EEC(v14 + *(void *)(v22 + 72) * v10, a4);
    sub_100152AC4(v10, v13);
    *uint64_t v5 = v13;
    swift_bridgeObjectRelease();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
    uint64_t v17 = a4;
    uint64_t v18 = 0;
    uint64_t v19 = v15;
  }
  else
  {
    uint64_t v20 = _s14PricingServiceV12FetchedPriceVMa(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v19 = v20;
    uint64_t v17 = a4;
    uint64_t v18 = 1;
  }
  return v16(v17, v18, 1, v19);
}

uint64_t sub_1001C0E18(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v13 = type metadata accessor for BDSSyncEnginePipeline();
  uint64_t v14 = &off_1002671D0;
  *(void *)&long long v12 = a3;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_10010080C(&v12, a4[7] + 40 * a1);
  uint64_t v9 = a4[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a4[2] = v11;
  }
  return result;
}

uint64_t sub_1001C0EB8(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v8 = type metadata accessor for BDSSyncEnginePipeline();
  uint64_t v29 = v8;
  uint64_t v30 = &off_1002671D0;
  *(void *)&long long v28 = a1;
  uint64_t v9 = (void *)*a4;
  unint64_t v11 = sub_1001A89F0((uint64_t)a2);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 >= v14 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v17 = (void *)*a4;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = v17[7] + 40 * v11;
      sub_1000947F0(v18);
      return sub_10010080C(&v28, v18);
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_1001ACD00();
    goto LABEL_7;
  }
  sub_1001AB0EC(v14, a3 & 1);
  unint64_t v20 = sub_1001A89F0((uint64_t)a2);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_1001C14C4();
    uint64_t result = sub_1001ED0E0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  uint64_t v17 = (void *)*a4;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_100095C78((uint64_t)&v28, v8);
  __chkstk_darwin(v22);
  unint64_t v24 = (uint64_t *)((char *)&v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  sub_1001C0E18(v11, (uint64_t)a2, *v24, v17);
  id v26 = a2;
  return sub_1000947F0((uint64_t)&v28);
}

void *sub_1001C109C(void *result, uint64_t a2, unint64_t a3)
{
  int64_t v13 = a3 >> 1;
  uint64_t v3 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = result;
  uint64_t result = (void *)sub_1000CF7D0(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    for (unint64_t i = &v4[3 * a2 + 1]; ; i += 3)
    {
      uint64_t v7 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (a2 + v5 >= v13 || v5 >= v3) {
        goto LABEL_13;
      }
      uint64_t v9 = *(i - 1);
      uint64_t v8 = *i;
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1) {
        uint64_t result = (void *)sub_1000CF7D0(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v9;
      v12[5] = v8;
      ++v5;
      if (v7 == v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1001C11D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a1;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(a2 + 48) + 24 * i;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    LOBYTE(v18) = *(unsigned char *)(v18 + 16);
    v21[0] = v19;
    v21[1] = v20;
    char v22 = v18;
    swift_bridgeObjectRetain();
    sub_1001BFA3C((uint64_t)&v23, (uint64_t)v21, a3);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_26:
    swift_release();
    return v23;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1001C13A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14PricingServiceV12FetchedPriceVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C140C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001C146C()
{
  unint64_t result = qword_100296D68;
  if (!qword_100296D68)
  {
    sub_1001EB1B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296D68);
  }
  return result;
}

unint64_t sub_1001C14C4()
{
  unint64_t result = qword_100296978;
  if (!qword_100296978)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100296978);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PricingServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C15D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PricingServiceError()
{
  return &type metadata for PricingServiceError;
}

uint64_t *sub_1001C1608(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    int64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001EB270();
    int64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1001C172C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001EB270();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1001C17C4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001EB270();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1001C1898(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB270();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_1001C1980(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB270();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_1001C1A2C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001EB270();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1001C1AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C1B08);
}

uint64_t sub_1001C1B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C20D4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for MCatalogServiceConfig);
}

uint64_t sub_1001C1B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C1B34);
}

uint64_t sub_1001C1B34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001C21B4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for MCatalogServiceConfig);
}

uint64_t sub_1001C1B4C()
{
  uint64_t result = sub_1001EB270();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001C1C00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001EAF60();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    char v15 = (char *)a2 + v13;
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((void *)v14 + 2) = *((void *)v15 + 2);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1001C1D18(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

void *sub_1001C1DA8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001EAF60();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((void *)v13 + 2) = *((void *)v14 + 2);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1001C1E70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EAF60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1001C1F48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EAF60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((void *)v11 + 2) = *((void *)v12 + 2);
  return a1;
}

void *sub_1001C1FF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001EAF60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v14 = v13[2];
  v12[1] = v15;
  v12[2] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001C20A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C20BC);
}

uint64_t sub_1001C20BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C20D4(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_1001C20D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v5 = *(void *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = a4(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1001C2188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C219C);
}

uint64_t sub_1001C219C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001C21B4(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_1001C21B4(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = a5(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v10 = v8;
    uint64_t v11 = v6 + *(int *)(a4 + 20);
    return v9(v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1001C2260()
{
  uint64_t result = sub_1001EAF60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1001C2304()
{
  unint64_t result = qword_100296EC8;
  if (!qword_100296EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296EC8);
  }
  return result;
}

uint64_t sub_1001C235C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C2370);
}

uint64_t sub_1001C2370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001C2430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C2444);
}

uint64_t sub_1001C2444(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001EB0C0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t _s6UpdateVMa()
{
  uint64_t result = qword_100296F28;
  if (!qword_100296F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001C254C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_100296F78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1001C2EB0();
  sub_1001ED1F0();
  char v12 = 0;
  sub_1001EB0C0();
  sub_1000B4468(&qword_100292138);
  sub_1001ED020();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(_s6UpdateVMa() + 20));
    v10[15] = 1;
    sub_10007DC14(&qword_100296D58);
    sub_1001C2FC4(&qword_100296F80, (void (*)(void))sub_100144CD8);
    sub_1001ED020();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1001C2740@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v18 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v16 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10007DC14(&qword_100296F60);
  uint64_t v15 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = _s6UpdateVMa();
  __chkstk_darwin(updated);
  unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EB0B0();
  sub_100094758(a1, a1[3]);
  sub_1001C2EB0();
  sub_1001ED1D0();
  if (v2)
  {
    uint64_t v11 = v18;
    sub_1000947F0((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v10, v4);
  }
  else
  {
    uint64_t v12 = v15;
    char v21 = 0;
    sub_1000B4468(&qword_100292148);
    sub_1001ECFA0();
    (*(void (**)(char *, char *, uint64_t))(v18 + 40))(v10, v16, v4);
    sub_10007DC14(&qword_100296D58);
    char v20 = 1;
    sub_1001C2FC4(&qword_100296F70, (void (*)(void))sub_100144BBC);
    sub_1001ECFA0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v17);
    *(void *)&v10[*(int *)(updated + 20)] = v19;
    sub_1001C2F04((uint64_t)v10, v14);
    sub_1000947F0((uint64_t)a1);
    return sub_1001C2F68((uint64_t)v10);
  }
}

uint64_t sub_1001C2AB4()
{
  if (*v0) {
    return 0x7344496D657469;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1001C2AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C3240(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001C2B10(uint64_t a1)
{
  unint64_t v2 = sub_1001C2EB0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001C2B4C(uint64_t a1)
{
  unint64_t v2 = sub_1001C2EB0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001C2B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1001EB090() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);
  return sub_1001C2C20(v7, v8);
}

uint64_t sub_1001C2BF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001C2740(a1, a2);
}

uint64_t sub_1001C2C08(void *a1)
{
  return sub_1001C254C(a1);
}

uint64_t sub_1001C2C20(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v25 = result;
  uint64_t v26 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v27 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  if (v6) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v9 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v9 >= v27) {
    return 1;
  }
  unint64_t v10 = *(void *)(v26 + 8 * v9);
  int64_t v11 = v3 + 1;
  if (!v10)
  {
    int64_t v11 = v9 + 1;
    if (v9 + 1 >= v27) {
      return 1;
    }
    unint64_t v10 = *(void *)(v26 + 8 * v11);
    if (!v10)
    {
      int64_t v11 = v9 + 2;
      if (v9 + 2 >= v27) {
        return 1;
      }
      unint64_t v10 = *(void *)(v26 + 8 * v11);
      if (!v10)
      {
        int64_t v12 = v9 + 3;
        if (v12 < v27)
        {
          unint64_t v10 = *(void *)(v26 + 8 * v12);
          if (v10)
          {
            int64_t v11 = v12;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v11 = v12 + 1;
            if (__OFADD__(v12, 1)) {
              break;
            }
            if (v11 >= v27) {
              return 1;
            }
            unint64_t v10 = *(void *)(v26 + 8 * v11);
            ++v12;
            if (v10) {
              goto LABEL_21;
            }
          }
LABEL_38:
          __break(1u);
          return result;
        }
        return 1;
      }
    }
  }
LABEL_21:
  uint64_t v28 = (v10 - 1) & v10;
  int64_t v29 = v11;
  for (unint64_t i = __clz(__rbit64(v10)) + (v11 << 6); ; unint64_t i = __clz(__rbit64(v6)) | (v3 << 6))
  {
    uint64_t v13 = *(void *)(result + 48) + 24 * i;
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *(void *)(v13 + 8);
    int v16 = *(unsigned __int8 *)(v13 + 16);
    sub_1001ED170();
    swift_bridgeObjectRetain_n();
    sub_1001EC440();
    swift_bridgeObjectRelease();
    sub_1001ED190(v16);
    Swift::Int v17 = sub_1001ED1A0();
    uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v7 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      break;
    }
    uint64_t v20 = ~v18;
    uint64_t v21 = *(void *)(a2 + 48);
    while (1)
    {
      uint64_t v22 = v21 + 24 * v19;
      int v23 = *(unsigned __int8 *)(v22 + 16);
      if (*(void *)v22 != v15 || *(void *)(v22 + 8) != v14) {
        break;
      }
      if (v16 == v23) {
        goto LABEL_32;
      }
LABEL_25:
      unint64_t v19 = (v19 + 1) & v20;
      if (((*(void *)(v7 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        goto LABEL_35;
      }
    }
    if (sub_1001ED080() & 1) == 0 || ((v16 ^ v23)) {
      goto LABEL_25;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    uint64_t result = v25;
    unint64_t v6 = v28;
    int64_t v3 = v29;
    if (!v28) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v28 = (v6 - 1) & v6;
    int64_t v29 = v3;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1001C2EB0()
{
  unint64_t result = qword_100296F68;
  if (!qword_100296F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296F68);
  }
  return result;
}

uint64_t sub_1001C2F04(uint64_t a1, uint64_t a2)
{
  uint64_t updated = _s6UpdateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_1001C2F68(uint64_t a1)
{
  uint64_t updated = _s6UpdateVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_1001C2FC4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10008155C(&qword_100296D58);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6UpdateV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C3100);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6UpdateV10CodingKeysOMa()
{
  return &_s6UpdateV10CodingKeysON;
}

unint64_t sub_1001C313C()
{
  unint64_t result = qword_100296F88;
  if (!qword_100296F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296F88);
  }
  return result;
}

unint64_t sub_1001C3194()
{
  unint64_t result = qword_100296F90;
  if (!qword_100296F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296F90);
  }
  return result;
}

unint64_t sub_1001C31EC()
{
  unint64_t result = qword_100296F98;
  if (!qword_100296F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296F98);
  }
  return result;
}

uint64_t sub_1001C3240(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7344496D657469 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t *sub_1001C3324(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    int64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001EB0C0();
    int64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t updated = _s14UpdateScheduleVMa();
    *(void *)&v9[*(int *)(updated + 20)] = *(void *)&v10[*(int *)(updated + 20)];
    uint64_t v14 = a3[7];
    __dst = (char *)v7 + v14;
    uint64_t v15 = (char *)a2 + v14;
    uint64_t v16 = _s6UpdateVMa();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    uint64_t v46 = v18;
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_10007DC14(&qword_100293BD8);
      memcpy(__dst, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      v12(__dst, v15, v11);
      *(void *)&__dst[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
      uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
      swift_bridgeObjectRetain();
      v20(__dst, 0, 1, v16);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v7 + v21;
    int v23 = (char *)a2 + v21;
    if (v46((char *)a2 + v21, 1, v16))
    {
      uint64_t v24 = sub_10007DC14(&qword_100293BD8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v12(v22, v23, v11);
      *(void *)&v22[*(int *)(v16 + 20)] = *(void *)&v23[*(int *)(v16 + 20)];
      uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
      swift_bridgeObjectRetain();
      v25(v22, 0, 1, v16);
    }
    uint64_t v26 = a3[9];
    uint64_t v27 = a3[10];
    uint64_t v28 = (uint64_t *)((char *)v7 + v26);
    int64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    *(_OWORD *)((char *)v7 + v27) = *(_OWORD *)((char *)a2 + v27);
    uint64_t v31 = a3[11];
    uint64_t v32 = (uint64_t *)((char *)v7 + v31);
    double v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = *(uint64_t *)((char *)a2 + v31 + 8);
    swift_bridgeObjectRetain();
    if (v34)
    {
      *uint64_t v32 = *v33;
      v32[1] = v34;
      uint64_t v35 = v33[3];
      v32[2] = v33[2];
      v32[3] = v35;
      uint64_t v36 = v33[5];
      v32[4] = v33[4];
      v32[5] = v36;
      uint64_t v37 = v33[7];
      v32[6] = v33[6];
      v32[7] = v37;
      uint64_t v38 = v33[9];
      v32[8] = v33[8];
      v32[9] = v38;
      uint64_t v39 = v33[10];
      uint64_t v40 = v33[11];
      v32[10] = v39;
      v32[11] = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v41 = *((_OWORD *)v33 + 3);
      *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
      *((_OWORD *)v32 + 3) = v41;
      long long v42 = *((_OWORD *)v33 + 5);
      *((_OWORD *)v32 + 4) = *((_OWORD *)v33 + 4);
      *((_OWORD *)v32 + 5) = v42;
      long long v43 = *((_OWORD *)v33 + 1);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v43;
    }
    *(uint64_t *)((char *)v7 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  }
  return v7;
}

uint64_t sub_1001C36B4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1001EB0C0();
  char v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  _s14UpdateScheduleVMa();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[7];
  uint64_t updated = _s6UpdateVMa();
  int64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 48);
  if (!v9(v7, 1, updated))
  {
    v6(v7, v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = a1 + a2[8];
  if (!v9(v10, 1, updated))
  {
    v6(v10, v5);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[11] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1001C3884(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  int64_t v9 = &a2[v7];
  uint64_t v10 = sub_1001EB0C0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t updated = _s14UpdateScheduleVMa();
  *(void *)&v8[*(int *)(updated + 20)] = *(void *)&v9[*(int *)(updated + 20)];
  uint64_t v47 = a3;
  uint64_t v13 = a3[7];
  __dst = (char *)a1 + v13;
  uint64_t v14 = &a2[v13];
  uint64_t v15 = _s6UpdateVMa();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  BOOL v45 = v11;
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_10007DC14(&qword_100293BD8);
    memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v11(__dst, v14, v10);
    *(void *)&__dst[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
    uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
    swift_bridgeObjectRetain();
    v19(__dst, 0, 1, v15);
  }
  uint64_t v20 = v16;
  uint64_t v21 = v47[8];
  uint64_t v22 = (char *)a1 + v21;
  int v23 = &a2[v21];
  if (v17(&a2[v21], 1, v15))
  {
    uint64_t v24 = sub_10007DC14(&qword_100293BD8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v45(v22, v23, v10);
    *(void *)&v22[*(int *)(v15 + 20)] = *(void *)&v23[*(int *)(v15 + 20)];
    uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
    swift_bridgeObjectRetain();
    v25(v22, 0, 1, v15);
  }
  uint64_t v26 = v47[9];
  uint64_t v27 = v47[10];
  uint64_t v28 = (void *)((char *)a1 + v26);
  int64_t v29 = &a2[v26];
  uint64_t v30 = *((void *)v29 + 1);
  *uint64_t v28 = *(void *)v29;
  v28[1] = v30;
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)&a2[v27];
  uint64_t v31 = v47[11];
  uint64_t v32 = (void *)((char *)a1 + v31);
  double v33 = &a2[v31];
  uint64_t v34 = *(void *)&a2[v31 + 8];
  swift_bridgeObjectRetain();
  if (v34)
  {
    *uint64_t v32 = *(void *)v33;
    v32[1] = v34;
    uint64_t v35 = *((void *)v33 + 3);
    v32[2] = *((void *)v33 + 2);
    v32[3] = v35;
    uint64_t v36 = *((void *)v33 + 5);
    v32[4] = *((void *)v33 + 4);
    v32[5] = v36;
    uint64_t v37 = *((void *)v33 + 7);
    v32[6] = *((void *)v33 + 6);
    v32[7] = v37;
    uint64_t v38 = *((void *)v33 + 9);
    v32[8] = *((void *)v33 + 8);
    v32[9] = v38;
    uint64_t v39 = *((void *)v33 + 10);
    uint64_t v40 = *((void *)v33 + 11);
    v32[10] = v39;
    v32[11] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v41 = *((_OWORD *)v33 + 3);
    *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
    *((_OWORD *)v32 + 3) = v41;
    long long v42 = *((_OWORD *)v33 + 5);
    *((_OWORD *)v32 + 4) = *((_OWORD *)v33 + 4);
    *((_OWORD *)v32 + 5) = v42;
    long long v43 = *((_OWORD *)v33 + 1);
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    *((_OWORD *)v32 + 1) = v43;
  }
  *(void *)((char *)a1 + v47[12]) = *(void *)&a2[v47[12]];
  return a1;
}

char *sub_1001C3BC0(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB0C0();
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v49 + 24);
  v47(v7, v8, v9);
  uint64_t updated = _s14UpdateScheduleVMa();
  *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = a3;
  uint64_t v11 = a3[7];
  int64_t v12 = &a1[v11];
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = _s6UpdateVMa();
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  int v16 = v15(v12, 1, v14);
  int v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v12, v13, v9);
      *(void *)&v12[*(int *)(v14 + 20)] = *(void *)&v13[*(int *)(v14 + 20)];
      uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56);
      swift_bridgeObjectRetain();
      v18(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1001D0904((uint64_t)v12, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_6:
    uint64_t v19 = sub_10007DC14(&qword_100293BD8);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v47(v12, v13, v9);
  *(void *)&v12[*(int *)(v14 + 20)] = *(void *)&v13[*(int *)(v14 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v20 = v50[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = (char *)a2 + v20;
  int v23 = v15(&a1[v20], 1, v14);
  int v24 = v15(v22, 1, v14);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v21, v22, v9);
      *(void *)&v21[*(int *)(v14 + 20)] = *(void *)&v22[*(int *)(v14 + 20)];
      uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56);
      swift_bridgeObjectRetain();
      v25(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_1001D0904((uint64_t)v21, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_12:
    uint64_t v26 = sub_10007DC14(&qword_100293BD8);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  v47(v21, v22, v9);
  *(void *)&v21[*(int *)(v14 + 20)] = *(void *)&v22[*(int *)(v14 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v27 = v50[9];
  uint64_t v28 = &a1[v27];
  int64_t v29 = (void *)((char *)a2 + v27);
  *(void *)uint64_t v28 = *v29;
  *((void *)v28 + 1) = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v50[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (void *)((char *)a2 + v30);
  *(void *)uint64_t v31 = *v32;
  *((void *)v31 + 1) = v32[1];
  uint64_t v33 = v50[11];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v36 = *(void *)&a1[v33 + 8];
  uint64_t v37 = *(void *)((char *)a2 + v33 + 8);
  if (v36)
  {
    if (v37)
    {
      *(void *)uint64_t v34 = *v35;
      *((void *)v34 + 1) = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v34 + 2) = v35[2];
      *((void *)v34 + 3) = v35[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v34 + 4) = v35[4];
      *((void *)v34 + 5) = v35[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v34 + 6) = v35[6];
      *((void *)v34 + 7) = v35[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v34 + 8) = v35[8];
      *((void *)v34 + 9) = v35[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v34 + 10) = v35[10];
      *((void *)v34 + 11) = v35[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100114694((uint64_t)v34);
      long long v38 = *((_OWORD *)v35 + 1);
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v38;
      long long v39 = *((_OWORD *)v35 + 5);
      long long v41 = *((_OWORD *)v35 + 2);
      long long v40 = *((_OWORD *)v35 + 3);
      *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
      *((_OWORD *)v34 + 5) = v39;
      *((_OWORD *)v34 + 2) = v41;
      *((_OWORD *)v34 + 3) = v40;
    }
  }
  else if (v37)
  {
    *(void *)uint64_t v34 = *v35;
    *((void *)v34 + 1) = v35[1];
    *((void *)v34 + 2) = v35[2];
    *((void *)v34 + 3) = v35[3];
    *((void *)v34 + 4) = v35[4];
    *((void *)v34 + 5) = v35[5];
    *((void *)v34 + 6) = v35[6];
    *((void *)v34 + 7) = v35[7];
    *((void *)v34 + 8) = v35[8];
    *((void *)v34 + 9) = v35[9];
    *((void *)v34 + 10) = v35[10];
    *((void *)v34 + 11) = v35[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v42 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v42;
    long long v43 = *((_OWORD *)v35 + 2);
    long long v44 = *((_OWORD *)v35 + 3);
    long long v45 = *((_OWORD *)v35 + 5);
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    *((_OWORD *)v34 + 5) = v45;
    *((_OWORD *)v34 + 2) = v43;
    *((_OWORD *)v34 + 3) = v44;
  }
  *(void *)&a1[v50[12]] = *(void *)((char *)a2 + v50[12]);
  return a1;
}

_OWORD *sub_1001C4170(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1001EB0C0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t updated = _s14UpdateScheduleVMa();
  *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
  uint64_t v12 = a3[7];
  __dst = (char *)a1 + v12;
  uint64_t v13 = &a2[v12];
  uint64_t v14 = _s6UpdateVMa();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v32 = v9;
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_10007DC14(&qword_100293BD8);
    memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v10(__dst, v13, v9);
    *(void *)&__dst[*(int *)(v14 + 20)] = *(void *)&v13[*(int *)(v14 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  uint64_t v18 = v15;
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = &a2[v19];
  if (v16(&a2[v19], 1, v14))
  {
    uint64_t v22 = sub_10007DC14(&qword_100293BD8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v10(v20, v21, v32);
    *(void *)&v20[*(int *)(v14 + 20)] = *(void *)&v21[*(int *)(v14 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v14);
  }
  uint64_t v23 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)&a2[v23];
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = (_OWORD *)((char *)a1 + v24);
  uint64_t v27 = &a2[v24];
  long long v28 = *((_OWORD *)v27 + 1);
  *uint64_t v26 = *(_OWORD *)v27;
  v26[1] = v28;
  long long v29 = *((_OWORD *)v27 + 5);
  v26[4] = *((_OWORD *)v27 + 4);
  v26[5] = v29;
  long long v30 = *((_OWORD *)v27 + 3);
  v26[2] = *((_OWORD *)v27 + 2);
  v26[3] = v30;
  *(void *)((char *)a1 + v25) = *(void *)&a2[v25];
  return a1;
}

char *sub_1001C4410(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB0C0();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  long long v43 = *(void (**)(char *, char *))(v45 + 40);
  v43(v7, v8);
  uint64_t updated = _s14UpdateScheduleVMa();
  *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = _s6UpdateVMa();
  uint64_t v44 = *(void *)(v14 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  int v16 = v15(v12, 1, v14);
  int v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v12, v13, v46);
      *(void *)&v12[*(int *)(v14 + 20)] = *(void *)&v13[*(int *)(v14 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1001D0904((uint64_t)v12, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_6:
    uint64_t v18 = sub_10007DC14(&qword_100293BD8);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v43)(v12, v13, v46);
  *(void *)&v12[*(int *)(v14 + 20)] = *(void *)&v13[*(int *)(v14 + 20)];
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = (char *)a2 + v19;
  int v22 = v15(&a1[v19], 1, v14);
  int v23 = v15(v21, 1, v14);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v20, v21, v46);
      *(void *)&v20[*(int *)(v14 + 20)] = *(void *)&v21[*(int *)(v14 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v20, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_1001D0904((uint64_t)v20, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_12:
    uint64_t v24 = sub_10007DC14(&qword_100293BD8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v43)(v20, v21, v46);
  *(void *)&v20[*(int *)(v14 + 20)] = *(void *)&v21[*(int *)(v14 + 20)];
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *(void *)uint64_t v26 = v29;
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (char *)a2 + v30;
  if (!*(void *)&a1[v30 + 8])
  {
LABEL_17:
    long long v39 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v39;
    long long v40 = *((_OWORD *)v32 + 5);
    *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
    *((_OWORD *)v31 + 5) = v40;
    long long v41 = *((_OWORD *)v32 + 1);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v41;
    goto LABEL_18;
  }
  uint64_t v33 = *((void *)v32 + 1);
  if (!v33)
  {
    sub_100114694((uint64_t)&a1[v30]);
    goto LABEL_17;
  }
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *((void *)v32 + 3);
  *((void *)v31 + 2) = *((void *)v32 + 2);
  *((void *)v31 + 3) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *((void *)v32 + 5);
  *((void *)v31 + 4) = *((void *)v32 + 4);
  *((void *)v31 + 5) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *((void *)v32 + 7);
  *((void *)v31 + 6) = *((void *)v32 + 6);
  *((void *)v31 + 7) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *((void *)v32 + 9);
  *((void *)v31 + 8) = *((void *)v32 + 8);
  *((void *)v31 + 9) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *((void *)v32 + 11);
  *((void *)v31 + 10) = *((void *)v32 + 10);
  *((void *)v31 + 11) = v38;
  swift_bridgeObjectRelease();
LABEL_18:
  *(void *)&a1[a3[12]] = *(void *)((char *)a2 + a3[12]);
  return a1;
}

uint64_t sub_1001C4840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C4854);
}

uint64_t sub_1001C4854(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t updated = _s14UpdateScheduleVMa();
    uint64_t v9 = *(void *)(updated - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = updated;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10007DC14(&qword_100293BD8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1001C4984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C4998);
}

void *sub_1001C4998(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t updated = _s14UpdateScheduleVMa();
    uint64_t v9 = *(void *)(updated - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = updated;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10007DC14(&qword_100293BD8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s5StateVMa()
{
  uint64_t result = qword_100296FF8;
  if (!qword_100296FF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001C4B14()
{
  _s14UpdateScheduleVMa();
  if (v0 <= 0x3F)
  {
    sub_1001154B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_1001C4C18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_1000CF8A8(0, v3, 0);
    uint64_t v6 = *(void *)(a3(0) - 8);
    uint64_t v7 = *(void *)(v6 + 72);
    uint64_t v8 = (unsigned char *)(((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + a1 + 16);
    do
    {
      uint64_t v10 = *((void *)v8 - 2);
      uint64_t v9 = *((void *)v8 - 1);
      char v11 = *v8;
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1) {
        sub_1000CF8A8(v12 > 1, v13 + 1, 1);
      }
      v8 += v7;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[3 * v13];
      v14[4] = v10;
      v14[5] = v9;
      *((unsigned char *)v14 + 48) = v11;
      --v3;
    }
    while (v3);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1001C4D64(uint64_t a1)
{
  uint64_t v40 = sub_10007DC14(&qword_100291EC0);
  uint64_t v3 = *(void *)(v40 - 8);
  uint64_t v4 = __chkstk_darwin(v40);
  uint64_t v39 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v34 - v6;
  uint64_t v7 = _s4DealVMa();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  char v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v34 = v1;
    uint64_t v44 = _swiftEmptyArrayStorage;
    sub_1000CF8C8(0, v10, 0);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v35 = *(void *)(v3 + 72);
    uint64_t v36 = v9;
    uint64_t v13 = v40;
    uint64_t v14 = (uint64_t)v38;
    do
    {
      int64_t v43 = v10;
      uint64_t v15 = *(int *)(v13 + 48);
      uint64_t v16 = v14 + v15;
      uint64_t v17 = sub_10007DC14(&qword_100297060);
      uint64_t v18 = (uint64_t *)(v14 + v15 + *(int *)(v17 + 48));
      uint64_t v19 = v12 + v15;
      long long v41 = _s4DealVMa;
      uint64_t v42 = v12;
      sub_1001D089C(v12, v14, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v20 = (uint64_t *)(v19 + *(int *)(v17 + 48));
      uint64_t v21 = sub_1001EB0C0();
      uint64_t v22 = *(void *)(v21 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v16, v19, v21);
      uint64_t v23 = *v20;
      uint64_t v24 = v20[1];
      *uint64_t v18 = *v20;
      v18[1] = v24;
      uint64_t v25 = (uint64_t)v36;
      uint64_t v26 = v39;
      uint64_t v27 = v39 + *(int *)(v13 + 48);
      sub_1001D0834(v14, v39, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v28 = (void *)(v27 + *(int *)(v17 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v27, v16, v21);
      *uint64_t v28 = v23;
      v28[1] = v24;
      sub_1001D089C(v26, v25, (uint64_t (*)(void))v41);
      sub_1000816A4(v26, &qword_100291EC0);
      char v11 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000CF8C8(0, v11[2] + 1, 1);
        char v11 = v44;
      }
      unint64_t v30 = v11[2];
      unint64_t v29 = v11[3];
      uint64_t v32 = v42;
      int64_t v31 = v43;
      if (v30 >= v29 >> 1)
      {
        sub_1000CF8C8(v29 > 1, v30 + 1, 1);
        char v11 = v44;
      }
      v11[2] = v30 + 1;
      sub_1001D0834(v25, (uint64_t)v11+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v30, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v12 = v32 + v35;
      int64_t v10 = v31 - 1;
    }
    while (v10);
  }
  return v11;
}

void *sub_1001C5100(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000CF888(0, v1, 0);
    uint64_t v3 = *(void *)(_s11TrackedItemVMa() - 8);
    uint64_t v4 = *(void *)(v3 + 72);
    uint64_t v5 = (uint64_t *)(((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + a1 + 8);
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_1000CF888(v8 > 1, v9 + 1, 1);
      }
      uint64_t v5 = (uint64_t *)((char *)v5 + v4);
      _swiftEmptyArrayStorage[2] = v9 + 1;
      int64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v7;
      v10[5] = v6;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001C5230(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (v4)
  {
    unint64_t v8 = (unsigned __int8 *)(a4 + 48);
    do
    {
      int v9 = *v8;
      if (*((void *)v8 - 2) == a1 && *((void *)v8 - 1) == a2)
      {
        if (v9 == (a3 & 1)) {
          return 1;
        }
      }
      else if ((sub_1001ED080() & 1) != 0 && ((v9 ^ a3) & 1) == 0)
      {
        return 1;
      }
      v8 += 24;
      --v4;
    }
    while (v4);
  }
  return 0;
}

void *sub_1001C52CC()
{
  uint64_t v75 = sub_1001EB0C0();
  uint64_t v1 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v74 = (char *)v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = _s4DealVMa();
  uint64_t v3 = *(void *)(v73 - 8);
  uint64_t v4 = __chkstk_darwin(v73);
  uint64_t v72 = (uint64_t)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v71 = (uint64_t)v64 - v6;
  uint64_t v70 = _s8CardItemVMa();
  uint64_t v76 = *(void *)(v70 - 8);
  uint64_t v7 = __chkstk_darwin(v70);
  os_log_type_t v66 = (void *)((char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  int64_t v10 = (char *)v64 - v9;
  uint64_t v11 = *(void *)(v0 + 8);
  int64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (v12)
  {
    uint64_t v65 = v0;
    v81[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000CF84C(0, v12, 0);
    unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v64[1] = v11;
    uint64_t v15 = v11 + v14;
    uint64_t v16 = *(void *)(v3 + 72);
    uint64_t v68 = (void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    uint64_t v69 = v16;
    int v67 = (void (**)(char *, char *, uint64_t))(v1 + 32);
    uint64_t v18 = v74;
    uint64_t v17 = v75;
    do
    {
      uint64_t v79 = (uint64_t *)v12;
      uint64_t v19 = v71;
      sub_1001D089C(v15, v71, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v20 = v72;
      sub_1001D089C(v19, v72, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v21 = *(void *)(v20 + 8);
      uint64_t v78 = *(NSObject **)v20;
      int v77 = *(unsigned __int8 *)(v20 + 16);
      uint64_t v22 = v73;
      (*v68)(v18, v20 + *(int *)(v73 + 28), v17);
      uint64_t v23 = *(int *)(v22 + 36);
      uint64_t v24 = *(void *)(v20 + *(int *)(v22 + 32));
      uint64_t v25 = *(void *)(v20 + v23);
      uint64_t v26 = *(void *)(v20 + v23 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001D0904(v20, (uint64_t (*)(void))_s4DealVMa);
      *(void *)int64_t v10 = v78;
      *((void *)v10 + 1) = v21;
      unsigned char v10[16] = v77;
      uint64_t v27 = v70;
      (*v67)(&v10[*(int *)(v70 + 24)], v18, v17);
      *(void *)&v10[*(int *)(v27 + 28)] = v24;
      uint64_t v28 = &v10[*(int *)(v27 + 32)];
      *(void *)uint64_t v28 = v25;
      *((void *)v28 + 1) = v26;
      sub_1001D0904(v19, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v13 = (void *)v81[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000CF84C(0, v13[2] + 1, 1);
        uint64_t v13 = (void *)v81[0];
      }
      unint64_t v30 = v13[2];
      unint64_t v29 = v13[3];
      int64_t v31 = v79;
      if (v30 >= v29 >> 1)
      {
        sub_1000CF84C(v29 > 1, v30 + 1, 1);
        uint64_t v13 = (void *)v81[0];
      }
      v13[2] = v30 + 1;
      sub_1001D0834((uint64_t)v10, (uint64_t)v13+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v30, (uint64_t (*)(void))_s8CardItemVMa);
      v15 += v69;
      int64_t v12 = (int64_t)v31 - 1;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v0 = v65;
  }
  uint64_t v32 = *(int *)(_s5StateVMa() + 48);
  uint64_t v33 = *(void **)(v0 + v32);
  uint64_t v34 = (void *)v13[2];
  if ((uint64_t)v33 >= (uint64_t)v34) {
    return v13;
  }
  uint64_t v35 = sub_1001C9FD0(*(void *)(v0 + v32), (uint64_t)v13);
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  unint64_t v41 = v40;
  if (v40)
  {
    sub_1001ED0B0();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    int64_t v43 = (void *)swift_dynamicCastClass();
    if (!v43)
    {
      swift_unknownObjectRelease();
      int64_t v43 = _swiftEmptyArrayStorage;
    }
    uint64_t v44 = v43[2];
    swift_release();
    if (__OFSUB__(v41 >> 1, v39))
    {
      __break(1u);
    }
    else if (v44 == (v41 >> 1) - v39)
    {
      uint64_t v42 = (void *)swift_dynamicCastClass();
      if (!v42)
      {
        swift_unknownObjectRelease();
        uint64_t v42 = _swiftEmptyArrayStorage;
      }
      goto LABEL_20;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v42 = sub_10013A8FC(v35, v37, v39, v41);
LABEL_20:
  swift_unknownObjectRelease();
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_1001EB560();
  sub_10007CFF8(v45, (uint64_t)qword_1002A4198);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1001EB540();
  int v47 = sub_1001EC910();
  if (os_log_type_enabled(v46, (os_log_type_t)v47))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    v81[0] = v49;
    *(_DWORD *)uint64_t v48 = 134218498;
    swift_bridgeObjectRelease();
    uint64_t v80 = v34;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2048;
    uint64_t v79 = v81;
    uint64_t v80 = v33;
    sub_1001ECBC0();
    *(_WORD *)(v48 + 22) = 2080;
    int64_t v50 = v42[2];
    if (v50)
    {
      uint64_t v75 = v49;
      int v77 = v47;
      uint64_t v78 = v46;
      uint64_t v80 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1000CF888(0, v50, 0);
      uint64_t v51 = (uint64_t)v42 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
      uint64_t v52 = *(void *)(v76 + 72);
      do
      {
        uint64_t v53 = v66;
        sub_1001D089C(v51, (uint64_t)v66, (uint64_t (*)(void))_s8CardItemVMa);
        uint64_t v54 = *v53;
        uint64_t v55 = v53[1];
        swift_bridgeObjectRetain();
        sub_1001D0904((uint64_t)v53, (uint64_t (*)(void))_s8CardItemVMa);
        uint64_t v56 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000CF888(0, v56[2] + 1, 1);
          uint64_t v56 = v80;
        }
        unint64_t v58 = v56[2];
        unint64_t v57 = v56[3];
        if (v58 >= v57 >> 1)
        {
          sub_1000CF888(v57 > 1, v58 + 1, 1);
          uint64_t v56 = v80;
        }
        v56[2] = v58 + 1;
        BOOL v59 = &v56[2 * v58];
        v59[4] = v54;
        v59[5] = v55;
        v51 += v52;
        --v50;
      }
      while (v50);
      swift_release();
      uint64_t v46 = v78;
      LOBYTE(v47) = v77;
    }
    uint64_t v60 = sub_1001EC5F0();
    unint64_t v62 = v61;
    swift_bridgeObjectRelease();
    uint64_t v80 = (void *)sub_1001A8090(v60, v62, v81);
    sub_1001ECBC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v47, "[State] Number of deals (%ld) exceeds limit (%ld), trimmed to: %s", (uint8_t *)v48, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  return v42;
}

uint64_t sub_1001C5B10@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  LODWORD(v121) = a1;
  uint64_t v122 = a3;
  uint64_t v120 = sub_1001EB0C0();
  uint64_t v118 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  Swift::String v117 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100293BD8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v113 = (uint64_t)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v116 = (uint64_t)&v106 - v11;
  __chkstk_darwin(v10);
  uint64_t v112 = (uint64_t)&v106 - v12;
  uint64_t updated = _s6UpdateVMa();
  uint64_t v14 = *(void *)(updated - 8);
  uint64_t v15 = __chkstk_darwin(updated);
  uint64_t v110 = (uint64_t)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  Swift::String v114 = (char *)&v106 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v111 = (uint64_t)&v106 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v109 = (uint64_t)&v106 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  Swift::String v119 = (char *)&v106 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v107 = (uint64_t)&v106 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v108 = (uint64_t)&v106 - v28;
  __chkstk_darwin(v27);
  unint64_t v30 = (char *)&v106 - v29;
  uint64_t v31 = _s5StateVMa();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v106 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v106 - v35;
  sub_1001D089C(v3, (uint64_t)&v106 - v35, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v37 = a2;
  sub_1001B81F0((uint64_t)v126);
  sub_1000935F8((uint64_t)v126, (uint64_t)v127, &qword_100293BE8);
  if (v129)
  {
    uint64_t v38 = v122;
    sub_1001D0904((uint64_t)v36, (uint64_t (*)(void))_s5StateVMa);
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1001EB560();
    sub_10007CFF8(v39, (uint64_t)qword_1002A4198);
    unint64_t v40 = sub_1001EB540();
    os_log_type_t v41 = sub_1001EC910();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "[State] Skipping tracked-prices update because there is no min update interval", v42, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v38, 1, 1, updated);
  }
  double v44 = v128;
  sub_1001D0904((uint64_t)v36, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v45 = v3 + *(int *)(v31 + 28);
  uint64_t v106 = v14;
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t))(v14 + 48);
  uint64_t v47 = updated;
  char v48 = 1;
  uint64_t v115 = v47;
  if (!v46(v45, 1))
  {
    sub_1001D089C(v45, (uint64_t)v30, (uint64_t (*)(void))_s6UpdateVMa);
    sub_1001EB050();
    char v48 = v44 <= v49;
    sub_1001D0904((uint64_t)v30, (uint64_t (*)(void))_s6UpdateVMa);
  }
  sub_1001D089C(v3, (uint64_t)v34, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v50 = sub_1001CA934(v121, v48);
  sub_1001D0904((uint64_t)v34, (uint64_t (*)(void))_s5StateVMa);
  if (!*(void *)(v50 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v61 = v112;
    sub_1000936F8(v45, v112, &qword_100293BD8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v46)(v61, 1, v115) == 1)
    {
      sub_1000816A4(v61, &qword_100293BD8);
      uint64_t v62 = v122;
    }
    else
    {
      uint64_t v74 = v108;
      sub_1001D0834(v61, v108, (uint64_t (*)(void))_s6UpdateVMa);
      uint64_t v62 = v122;
      if ((v48 & 1) == 0)
      {
        if (qword_1002910B8 != -1) {
          swift_once();
        }
        uint64_t v98 = sub_1001EB560();
        sub_10007CFF8(v98, (uint64_t)qword_1002A4198);
        uint64_t v99 = v107;
        sub_1001D089C(v74, v107, (uint64_t (*)(void))_s6UpdateVMa);
        uint64_t v100 = sub_1001EB540();
        os_log_type_t v101 = sub_1001EC910();
        BOOL v102 = os_log_type_enabled(v100, v101);
        uint64_t v75 = v115;
        if (v102)
        {
          Swift::String v103 = (uint8_t *)swift_slowAlloc();
          uint64_t v124 = swift_slowAlloc();
          *(_DWORD *)Swift::String v103 = 136446210;
          sub_1000B4468(&qword_100293430);
          uint64_t v104 = sub_1001ED040();
          uint64_t v123 = sub_1001A8090(v104, v105, &v124);
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          sub_1001D0904(v99, (uint64_t (*)(void))_s6UpdateVMa);
          _os_log_impl((void *)&_mh_execute_header, v100, v101, "[State] Skipping tracked-prices update because the last update (at %{public}s) was recent enough", v103, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1001D0904(v108, (uint64_t (*)(void))_s6UpdateVMa);
        }
        else
        {

          sub_1001D0904(v99, (uint64_t (*)(void))_s6UpdateVMa);
          sub_1001D0904(v74, (uint64_t (*)(void))_s6UpdateVMa);
        }
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v62, 1, 1, v75);
      }
      sub_1001D0904(v74, (uint64_t (*)(void))_s6UpdateVMa);
    }
    uint64_t v75 = v115;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v76 = sub_1001EB560();
    sub_10007CFF8(v76, (uint64_t)qword_1002A4198);
    int v77 = sub_1001EB540();
    os_log_type_t v78 = sub_1001EC910();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "[State] Skipping tracked-prices update because there are no items that need updating", v79, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v62, 1, 1, v75);
  }
  uint64_t v51 = v118;
  uint64_t v52 = v117;
  uint64_t v53 = v37;
  uint64_t v54 = v120;
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, v53, v120);
  uint64_t v55 = sub_1001C4C18(v50, (uint64_t)v125, (uint64_t (*)(void))_s11TrackedItemVMa);
  swift_bridgeObjectRelease();
  uint64_t v56 = sub_100170B7C((uint64_t)v55);
  swift_bridgeObjectRelease();
  uint64_t v57 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v119, v52, v54);
  uint64_t v58 = v115;
  *(void *)(v57 + *(int *)(v115 + 20)) = v56;
  uint64_t v59 = v4 + *(int *)(v31 + 32);
  uint64_t v60 = v116;
  sub_1000936F8(v59, v116, &qword_100293BD8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v46)(v60, 1, v58) == 1)
  {
    sub_1000816A4(v60, &qword_100293BD8);
LABEL_29:
    uint64_t v80 = v113;
    sub_1000936F8(v59, v113, &qword_100293BD8);
    int v81 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v46)(v80, 1, v58);
    uint64_t v82 = (uint64_t)v114;
    if (v81 == 1)
    {
      sub_1000816A4(v80, &qword_100293BD8);
    }
    else
    {
      uint64_t v83 = v111;
      sub_1001D0834(v80, v111, (uint64_t (*)(void))_s6UpdateVMa);
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v84 = sub_1001EB560();
      sub_10007CFF8(v84, (uint64_t)qword_1002A4198);
      sub_1001D089C(v83, v82, (uint64_t (*)(void))_s6UpdateVMa);
      uint64_t v85 = v110;
      sub_1001D089C(v57, v110, (uint64_t (*)(void))_s6UpdateVMa);
      int v86 = sub_1001EB540();
      os_log_type_t v87 = sub_1001EC8F0();
      int v88 = v87;
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v89 = swift_slowAlloc();
        uint64_t v121 = swift_slowAlloc();
        uint64_t v124 = v121;
        *(_DWORD *)uint64_t v89 = 136446466;
        sub_1000B4468(&qword_100293430);
        LODWORD(v118) = v88;
        uint64_t v90 = sub_1001ED040();
        uint64_t v123 = sub_1001A8090(v90, v91, &v124);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1001D0904(v82, (uint64_t (*)(void))_s6UpdateVMa);
        *(_WORD *)(v89 + 12) = 2082;
        uint64_t v92 = sub_1001ED040();
        uint64_t v123 = sub_1001A8090(v92, v93, &v124);
        uint64_t v57 = (uint64_t)v119;
        uint64_t v58 = v115;
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1001D0904(v110, (uint64_t (*)(void))_s6UpdateVMa);
        _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v118, "[State] Replacing update from: %{public}s with update from: %{public}s", (uint8_t *)v89, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v94 = v111;
      }
      else
      {

        sub_1001D0904(v85, (uint64_t (*)(void))_s6UpdateVMa);
        sub_1001D0904(v82, (uint64_t (*)(void))_s6UpdateVMa);
        uint64_t v94 = v83;
      }
      sub_1001D0904(v94, (uint64_t (*)(void))_s6UpdateVMa);
    }
    uint64_t v95 = v122;
    uint64_t v96 = v106;
    sub_1000816A4(v59, &qword_100293BD8);
    sub_1001D089C(v57, v59, (uint64_t (*)(void))_s6UpdateVMa);
    uint64_t v97 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56);
    v97(v59, 0, 1, v58);
    sub_1001D0834(v57, v95, (uint64_t (*)(void))_s6UpdateVMa);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v97)(v95, 0, 1, v58);
  }
  uint64_t v63 = v46;
  uint64_t v64 = v109;
  sub_1001D0834(v60, v109, (uint64_t (*)(void))_s6UpdateVMa);
  uint64_t v65 = *(void *)(v64 + *(int *)(v58 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v66 = sub_1001C2C20(v65, v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v66 & 1) == 0)
  {
    sub_1001D0904(v64, (uint64_t (*)(void))_s6UpdateVMa);
    uint64_t v46 = v63;
    goto LABEL_29;
  }
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v67 = sub_1001EB560();
  sub_10007CFF8(v67, (uint64_t)qword_1002A4198);
  uint64_t v68 = sub_1001EB540();
  os_log_type_t v69 = sub_1001EC910();
  BOOL v70 = os_log_type_enabled(v68, v69);
  uint64_t v71 = v122;
  uint64_t v72 = v106;
  if (v70)
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v73 = 0;
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "[State] Skipping tracked-prices update because there is an in-progress update for the same items", v73, 2u);
    swift_slowDealloc();
  }

  sub_1001D0904(v64, (uint64_t (*)(void))_s6UpdateVMa);
  sub_1001D0904(v57, (uint64_t (*)(void))_s6UpdateVMa);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v71, 1, 1, v58);
}

void sub_1001C6A90(uint64_t a1, int a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v63 = a3;
  uint64_t v64 = a5;
  uint64_t v66 = a4;
  int v70 = a2;
  uint64_t updated = _s6UpdateVMa();
  uint64_t v8 = *(void *)(updated - 8);
  uint64_t v9 = __chkstk_darwin(updated);
  uint64_t v71 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v68 = (uint64_t)&v63 - v11;
  uint64_t v12 = sub_10007DC14(&qword_100294780);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007DC14(&qword_100293BD8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v63 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v63 - v23;
  uint64_t v65 = _s5StateVMa();
  uint64_t v25 = *(int *)(v65 + 32);
  uint64_t v67 = v5;
  uint64_t v69 = (uint64_t)v5 + v25;
  sub_1000936F8((uint64_t)v5 + v25, (uint64_t)v24, &qword_100293BD8);
  uint64_t v72 = a1;
  sub_1001D089C(a1, (uint64_t)v22, (uint64_t (*)(void))_s6UpdateVMa);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v26(v22, 0, 1, updated);
  uint64_t v27 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1000936F8((uint64_t)v24, (uint64_t)v15, &qword_100293BD8);
  sub_1000936F8((uint64_t)v22, v27, &qword_100293BD8);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v28((uint64_t)v15, 1, updated) != 1)
  {
    sub_1000936F8((uint64_t)v15, (uint64_t)v19, &qword_100293BD8);
    if (v28(v27, 1, updated) == 1)
    {
      uint64_t v35 = &qword_100294780;
    }
    else
    {
      uint64_t v36 = v68;
      sub_1001D0834(v27, v68, (uint64_t (*)(void))_s6UpdateVMa);
      if (sub_1001EB090())
      {
        char v37 = sub_1001C2C20(*(void *)&v19[*(int *)(updated + 20)], *(void *)(v36 + *(int *)(updated + 20)));
        sub_1001D0904(v36, (uint64_t (*)(void))_s6UpdateVMa);
        sub_1000816A4((uint64_t)v22, &qword_100293BD8);
        sub_1000816A4((uint64_t)v24, &qword_100293BD8);
        sub_1001D0904((uint64_t)v19, (uint64_t (*)(void))_s6UpdateVMa);
        sub_1000816A4((uint64_t)v15, &qword_100293BD8);
        if (v37) {
          goto LABEL_4;
        }
LABEL_20:
        if (qword_1002910B8 != -1) {
          swift_once();
        }
        uint64_t v56 = sub_1001EB560();
        sub_10007CFF8(v56, (uint64_t)qword_1002A4198);
        uint64_t v57 = v71;
        sub_1001D089C(v72, v71, (uint64_t (*)(void))_s6UpdateVMa);
        uint64_t v31 = sub_1001EB540();
        os_log_type_t v58 = sub_1001EC8F0();
        if (os_log_type_enabled(v31, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          uint64_t v74 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v59 = 136446210;
          sub_1001EB0C0();
          sub_1000B4468(&qword_100293430);
          uint64_t v60 = sub_1001ED040();
          uint64_t v73 = sub_1001A8090(v60, v61, (uint64_t *)&v74);
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          sub_1001D0904(v57, (uint64_t (*)(void))_s6UpdateVMa);
          _os_log_impl((void *)&_mh_execute_header, v31, v58, "[State] Skipping finish for old update from: %{public}s", v59, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
LABEL_30:
          swift_slowDealloc();
          goto LABEL_31;
        }
        sub_1001D0904(v57, (uint64_t (*)(void))_s6UpdateVMa);
        goto LABEL_31;
      }
      sub_1001D0904(v36, (uint64_t (*)(void))_s6UpdateVMa);
      uint64_t v35 = &qword_100293BD8;
    }
    sub_1000816A4((uint64_t)v22, &qword_100293BD8);
    sub_1000816A4((uint64_t)v24, &qword_100293BD8);
    sub_1001D0904((uint64_t)v19, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_19:
    sub_1000816A4((uint64_t)v15, v35);
    goto LABEL_20;
  }
  sub_1000816A4((uint64_t)v22, &qword_100293BD8);
  sub_1000816A4((uint64_t)v24, &qword_100293BD8);
  if (v28(v27, 1, updated) != 1)
  {
    uint64_t v35 = &qword_100294780;
    goto LABEL_19;
  }
  sub_1000816A4((uint64_t)v15, &qword_100293BD8);
LABEL_4:
  uint64_t v29 = v69;
  sub_1000816A4(v69, &qword_100293BD8);
  v26((char *)v29, 1, 1, updated);
  if (v70)
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1001EB560();
    sub_10007CFF8(v30, (uint64_t)qword_1002A4198);
    uint64_t v31 = sub_1001EB540();
    os_log_type_t v32 = sub_1001EC910();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_31;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    uint64_t v34 = "[State] Skipping finish because task was cancelled";
    goto LABEL_29;
  }
  uint64_t v38 = v65;
  uint64_t v39 = v26;
  unint64_t v40 = v67;
  uint64_t v41 = (uint64_t)v67 + *(int *)(v65 + 28);
  sub_1000816A4(v41, &qword_100293BD8);
  uint64_t v42 = v72;
  sub_1001D089C(v72, v41, (uint64_t (*)(void))_s6UpdateVMa);
  v39((char *)v41, 0, 1, updated);
  if (v66)
  {
    unint64_t v43 = v64;
    unint64_t v44 = sub_1001CAB94(v42, v63, v66, v64);
    unint64_t v45 = v42;
    unint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v50 = (unint64_t *)((char *)v40 + *(int *)(v38 + 36));
    swift_bridgeObjectRelease();
    *uint64_t v50 = v44;
    v50[1] = v47;
    sub_1001C90B0(v49);
    uint64_t v51 = swift_bridgeObjectRelease();
    uint64_t v52 = *v40;
    __chkstk_darwin(v51);
    *(&v63 - 4) = v43;
    *(&v63 - 3) = (unint64_t)v40;
    *(&v63 - 2) = v45;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_10010382C((void (*)(void))sub_1001D0814, (uint64_t)(&v63 - 6), v52);
    swift_bridgeObjectRelease();
    uint64_t v74 = v53;
    swift_bridgeObjectRetain();
    sub_1001CC1EC(&v74);
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1001C4D64((uint64_t)v74);
    swift_release();
    uint64_t v55 = v40[1];
    v40[1] = (uint64_t)v54;
    sub_1001C83EC(v55, (uint64_t)v54);
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v62 = sub_1001EB560();
  sub_10007CFF8(v62, (uint64_t)qword_1002A4198);
  uint64_t v31 = sub_1001EB540();
  os_log_type_t v32 = sub_1001EC910();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    uint64_t v34 = "[State] Skipping finish because there was no result (request failed?)";
LABEL_29:
    _os_log_impl((void *)&_mh_execute_header, v31, v32, v34, v33, 2u);
    goto LABEL_30;
  }
LABEL_31:
}

uint64_t sub_1001C7390(uint64_t a1)
{
  uint64_t v22 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    if (v19 >= v5) {
      goto LABEL_21;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v19);
    ++v7;
    if (!v20)
    {
      int64_t v7 = v19 + 1;
      if (v19 + 1 >= v5) {
        goto LABEL_21;
      }
      unint64_t v20 = *(void *)(v22 + 8 * v7);
      if (!v20)
      {
        int64_t v7 = v19 + 2;
        if (v19 + 2 >= v5) {
          goto LABEL_21;
        }
        unint64_t v20 = *(void *)(v22 + 8 * v7);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v20 - 1) & v20;
    unint64_t v9 = __clz(__rbit64(v20)) + (v7 << 6);
LABEL_5:
    uint64_t v10 = 24 * v9;
    uint64_t v11 = *(void *)(a1 + 48) + v10;
    uint64_t v12 = *(unint64_t **)v11;
    uint64_t v13 = *(void **)(v11 + 8);
    int v14 = *(unsigned __int8 *)(v11 + 16);
    uint64_t v15 = (double *)(*(void *)(a1 + 56) + v10);
    double v16 = *v15;
    uint64_t v17 = *((void *)v15 + 1);
    uint64_t v18 = (void *)*((void *)v15 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001CA064(v17, v18, v12, v13, v14, v16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v21 = v19 + 3;
  if (v21 < v5)
  {
    unint64_t v20 = *(void *)(v22 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v7 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          goto LABEL_25;
        }
        if (v7 >= v5) {
          goto LABEL_21;
        }
        unint64_t v20 = *(void *)(v22 + 8 * v7);
        ++v21;
        if (v20) {
          goto LABEL_20;
        }
      }
    }
    int64_t v7 = v21;
    goto LABEL_20;
  }
LABEL_21:
  return swift_release();
}

void sub_1001C755C(uint64_t a1, void *a2, int a3)
{
  uint64_t v6 = swift_bridgeObjectRetain();
  int64_t v7 = sub_1001C4C18(v6, (uint64_t)v21, (uint64_t (*)(void))_s11TrackedItemVMa);
  swift_bridgeObjectRelease();
  if (sub_1001C5230(a1, (uint64_t)a2, a3, (uint64_t)v7))
  {
    swift_bridgeObjectRelease();
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1001EB560();
    sub_10007CFF8(v8, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain_n();
    unint64_t v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC910();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v20 = v12;
      if (a3) {
        uint64_t v13 = 65;
      }
      else {
        uint64_t v13 = 66;
      }
      swift_bridgeObjectRetain();
      v22._countAndFlagsBits = v13;
      v22._object = (void *)0xE100000000000000;
      sub_1001EC490(v22);
      swift_bridgeObjectRelease();
      v23._countAndFlagsBits = 46;
      v23._object = (void *)0xE100000000000000;
      sub_1001EC490(v23);
      swift_bridgeObjectRetain();
      v24._countAndFlagsBits = a1;
      v24._object = a2;
      sub_1001EC490(v24);
      swift_bridgeObjectRelease_n();
      sub_1001A8090(0, 0xE000000000000000, &v20);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      int v14 = "[State] Item '%s' is already being tracked";
LABEL_16:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v14, v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
  else
  {
    sub_10007DC14(&qword_100291E90);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100215320;
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    *(unsigned char *)(inited + 48) = a3 & 1;
    uint64_t v19 = inited;
    swift_bridgeObjectRetain();
    sub_1001B7664((uint64_t)v7);
    sub_1001C9484(v19);
    swift_bridgeObjectRelease();
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1001EB560();
    sub_10007CFF8(v16, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain_n();
    unint64_t v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC910();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v20 = v17;
      if (a3) {
        uint64_t v18 = 65;
      }
      else {
        uint64_t v18 = 66;
      }
      swift_bridgeObjectRetain();
      v25._countAndFlagsBits = v18;
      v25._object = (void *)0xE100000000000000;
      sub_1001EC490(v25);
      swift_bridgeObjectRelease();
      v26._countAndFlagsBits = 46;
      v26._object = (void *)0xE100000000000000;
      sub_1001EC490(v26);
      swift_bridgeObjectRetain();
      v27._countAndFlagsBits = a1;
      v27._object = a2;
      sub_1001EC490(v27);
      swift_bridgeObjectRelease_n();
      sub_1001A8090(0, 0xE000000000000000, &v20);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      int v14 = "[State] Item '%s' is now being tracked";
      goto LABEL_16;
    }
  }

  swift_bridgeObjectRelease_n();
}

uint64_t sub_1001C799C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12)
{
  uint64_t v18 = (int *)_s5StateVMa();
  uint64_t v19 = (uint64_t)a9 + v18[7];
  uint64_t updated = _s6UpdateVMa();
  int64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
  v21(v19, 1, 1, updated);
  uint64_t v22 = (uint64_t)a9 + v18[8];
  v21(v22, 1, 1, updated);
  Swift::String v23 = (void *)((char *)a9 + v18[9]);
  void *v23 = 0;
  v23[1] = 0;
  Swift::String v24 = (_OWORD *)((char *)a9 + v18[11]);
  v24[4] = 0u;
  v24[5] = 0u;
  v24[2] = 0u;
  v24[3] = 0u;
  *Swift::String v24 = 0u;
  v24[1] = 0u;
  *a9 = _swiftEmptyArrayStorage;
  a9[1] = a2;
  sub_1001D089C(a3, (uint64_t)a9 + v18[6], (uint64_t (*)(void))_s14UpdateScheduleVMa);
  sub_100113200(a4, v19);
  sub_100113200(a5, v22);
  swift_bridgeObjectRelease();
  void *v23 = a6;
  v23[1] = a7;
  Swift::String v25 = (double *)((char *)a9 + v18[10]);
  *Swift::String v25 = a10;
  v25[1] = a11;
  sub_1000AF3B4(a8, (uint64_t)v24, &qword_100293C70);
  *(void *)((char *)a9 + v18[12]) = a12;
  sub_1001C90B0(a1);
  swift_bridgeObjectRelease();
  sub_1000816A4(a5, &qword_100293BD8);
  sub_1000816A4(a4, &qword_100293BD8);
  return sub_1001D0904(a3, (uint64_t (*)(void))_s14UpdateScheduleVMa);
}

void sub_1001C7B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11TrackedItemVMa();
  uint64_t v54 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = sub_1001C4C18(a1, (uint64_t)v59, (uint64_t (*)(void))_s11TrackedItemVMa);
  uint64_t v8 = sub_100170B7C((uint64_t)v7);
  swift_bridgeObjectRelease();
  uint64_t v55 = a2;
  unint64_t v9 = sub_1001C4C18(a2, (uint64_t)v58, (uint64_t (*)(void))_s11TrackedItemVMa);
  uint64_t v10 = sub_100170B7C((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (*(void *)(v8 + 16) <= *(void *)(v10 + 16) >> 3)
  {
    uint64_t v57 = (unint64_t *)v10;
    swift_bridgeObjectRetain();
    sub_1001CFB0C(v8);
    uint64_t v11 = v57;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1001CEE88(v8, v10);
  }
  if (*(void *)(v10 + 16) <= *(void *)(v8 + 16) >> 3)
  {
    uint64_t v57 = (unint64_t *)v8;
    sub_1001CFB0C(v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = v57;
  }
  else
  {
    uint64_t v12 = sub_1001CEE88(v10, v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v57 = v11;
  sub_10007DC14(&qword_100296D58);
  sub_1001D0754();
  uint64_t v13 = &unk_100291000;
  if (sub_1001EC7B0())
  {
    uint64_t v53 = (uint8_t *)a1;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1001EB560();
    sub_10007CFF8(v14, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1001EB540();
    os_log_type_t v16 = sub_1001EC910();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v57 = (unint64_t *)v52;
      uint64_t v51 = v17;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v50 = (v17 + 4);
      sub_100112224();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1001EC760();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      uint64_t v21 = v18;
      uint64_t v13 = (void *)&unk_100291000;
      uint64_t v56 = (void *)sub_1001A8090(v21, v20, (uint64_t *)&v57);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[State] Added tracked item(s): %s", v51, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a1 = (uint64_t)v53;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v57 = v12;
  if (sub_1001EC7B0())
  {
    if (v13[23] != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1001EB560();
    sub_10007CFF8(v22, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain();
    Swift::String v23 = sub_1001EB540();
    os_log_type_t v24 = sub_1001EC910();
    if (os_log_type_enabled(v23, v24))
    {
      Swift::String v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = (unint64_t *)swift_slowAlloc();
      *(_DWORD *)Swift::String v25 = 136315138;
      uint64_t v53 = v25 + 4;
      sub_100112224();
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1001EC760();
      uint64_t v27 = a1;
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      uint64_t v56 = (void *)sub_1001A8090(v26, v29, (uint64_t *)&v57);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      a1 = v27;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[State] Removed tracked item(s): %s", v25, 0xCu);
      swift_arrayDestroy();
      uint64_t v13 = (void *)&unk_100291000;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = v55;
  if (v13[23] != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1001EB560();
  sub_10007CFF8(v31, (uint64_t)qword_1002A4198);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  os_log_type_t v32 = sub_1001EB540();
  int v33 = sub_1001EC910();
  if (os_log_type_enabled(v32, (os_log_type_t)v33))
  {
    LODWORD(v53) = v33;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v52 = v35;
    *(_DWORD *)uint64_t v34 = 134218498;
    uint64_t v56 = *(void **)(a1 + 16);
    uint64_t v57 = (unint64_t *)v35;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2048;
    uint64_t v56 = *(void **)(v30 + 16);
    int64_t v36 = (int64_t)v56;
    uint64_t v51 = (uint8_t *)&v57;
    sub_1001ECBC0();
    *(_WORD *)(v34 + 22) = 2080;
    if (v36)
    {
      uint64_t v49 = v34;
      uint64_t v50 = v32;
      uint64_t v56 = _swiftEmptyArrayStorage;
      sub_1000CF8A8(0, v36, 0);
      uint64_t v37 = v30 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
      uint64_t v38 = *(void *)(v54 + 72);
      uint64_t v39 = v56;
      do
      {
        sub_1001D089C(v37, (uint64_t)v6, (uint64_t (*)(void))_s11TrackedItemVMa);
        uint64_t v41 = *(void *)v6;
        uint64_t v40 = *((void *)v6 + 1);
        char v42 = v6[16];
        swift_bridgeObjectRetain();
        sub_1001D0904((uint64_t)v6, (uint64_t (*)(void))_s11TrackedItemVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000CF8A8(0, v39[2] + 1, 1);
          uint64_t v39 = v56;
        }
        unint64_t v44 = v39[2];
        unint64_t v43 = v39[3];
        if (v44 >= v43 >> 1)
        {
          sub_1000CF8A8(v43 > 1, v44 + 1, 1);
          uint64_t v39 = v56;
        }
        v39[2] = v44 + 1;
        unint64_t v45 = &v39[3 * v44];
        v45[4] = v41;
        v45[5] = v40;
        *((unsigned char *)v45 + 48) = v42;
        v37 += v38;
        --v36;
      }
      while (v36);
      uint64_t v34 = v49;
      os_log_type_t v32 = v50;
    }
    uint64_t v46 = sub_1001EC5F0();
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v56 = (void *)sub_1001A8090(v46, v48, (uint64_t *)&v57);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v53, "[State] Tracked items (%ld) → (%ld) %s", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
}

void sub_1001C83EC(uint64_t a1, uint64_t a2)
{
  uint64_t v94 = a2;
  uint64_t v104 = _s4DealVMa();
  uint64_t v96 = *(void *)(v104 - 8);
  uint64_t v4 = __chkstk_darwin(v104);
  uint64_t v100 = (uint64_t)v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v107 = ((char *)v92 - v7);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v106 = (uint64_t)v92 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v92 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v92 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  os_log_type_t v101 = (char *)v92 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v105 = (void *)((char *)v92 - v19);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v108 = (uint64_t)v92 - v21;
  __chkstk_darwin(v20);
  Swift::String v23 = (char *)v92 - v22;
  os_log_type_t v24 = sub_1001C4C18(a1, (uint64_t)v114, (uint64_t (*)(void))_s4DealVMa);
  uint64_t v25 = sub_100170B7C((uint64_t)v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1001CFDD0(v26, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v28 = sub_1001C4C18(a2, (uint64_t)v113, (uint64_t (*)(void))_s4DealVMa);
  uint64_t v29 = sub_100170B7C((uint64_t)v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v95 = sub_1001CFDD0(v30, v29);
  uint64_t v93 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v27[2];
  int v33 = "[State] Skipping tracked-prices update because there are no items that need updating";
  uint64_t v109 = v12;
  if (v32)
  {
    unint64_t v34 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
    v92[1] = v27;
    uint64_t v35 = (uint64_t)v27 + v34;
    *(void *)&long long v102 = *(void *)(v96 + 72);
    *(void *)&long long v31 = 136315650;
    long long v99 = v31;
    uint64_t v97 = v23;
    uint64_t v98 = (char *)&type metadata for Any + 8;
    uint64_t v36 = (uint64_t)v101;
    uint64_t v37 = (uint64_t)v105;
    uint64_t v38 = v108;
    Swift::String v103 = v15;
    do
    {
      sub_1001D089C(v35, (uint64_t)v23, (uint64_t (*)(void))_s4DealVMa);
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_1001EB560();
      sub_10007CFF8(v39, (uint64_t)qword_1002A4198);
      sub_1001D089C((uint64_t)v23, v38, (uint64_t (*)(void))_s4DealVMa);
      sub_1001D089C((uint64_t)v23, v37, (uint64_t (*)(void))_s4DealVMa);
      sub_1001D089C((uint64_t)v23, v36, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v40 = sub_1001EB540();
      uint64_t v41 = (uint64_t)v23;
      os_log_type_t v42 = sub_1001EC910();
      if (os_log_type_enabled(v40, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        unint64_t v44 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = v99;
        uint64_t v45 = *(void *)v108;
        uint64_t v46 = *(void **)(v108 + 8);
        int v47 = *(unsigned __int8 *)(v108 + 16);
        uint64_t v110 = 0;
        unint64_t v111 = 0xE000000000000000;
        uint64_t v112 = v44;
        if (v47) {
          uint64_t v48 = 65;
        }
        else {
          uint64_t v48 = 66;
        }
        swift_bridgeObjectRetain();
        v115._countAndFlagsBits = v48;
        v115._object = (void *)0xE100000000000000;
        sub_1001EC490(v115);
        swift_bridgeObjectRelease();
        v116._countAndFlagsBits = 46;
        v116._object = (void *)0xE100000000000000;
        sub_1001EC490(v116);
        swift_bridgeObjectRetain();
        v117._countAndFlagsBits = v45;
        v117._object = v46;
        sub_1001EC490(v117);
        swift_bridgeObjectRelease_n();
        *(void *)(v43 + 4) = sub_1001A8090((uint64_t)v110, v111, (uint64_t *)&v112);
        swift_bridgeObjectRelease();
        sub_1001D0904(v108, (uint64_t (*)(void))_s4DealVMa);
        *(_WORD *)(v43 + 12) = 2082;
        uint64_t v49 = v104;
        sub_1001EB0C0();
        sub_1000B4468(&qword_100293430);
        uint64_t v36 = (uint64_t)v101;
        uint64_t v50 = sub_1001ED040();
        *(void *)(v43 + 14) = sub_1001A8090(v50, v51, (uint64_t *)&v112);
        swift_bridgeObjectRelease();
        sub_1001D0904((uint64_t)v105, (uint64_t (*)(void))_s4DealVMa);
        *(_WORD *)(v43 + 22) = 2048;
        uint64_t v52 = *(int *)(v49 + 32);
        uint64_t v37 = (uint64_t)v105;
        *(void *)(v43 + 24) = *(void *)(v36 + v52);
        sub_1001D0904(v36, (uint64_t (*)(void))_s4DealVMa);
        _os_log_impl((void *)&_mh_execute_header, v40, v42, "[State] Added deal: %s, date: %{public}s, reference price: %f", (uint8_t *)v43, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v12 = v109;
        swift_slowDealloc();

        Swift::String v23 = v97;
        uint64_t v38 = v108;
        sub_1001D0904((uint64_t)v97, (uint64_t (*)(void))_s4DealVMa);
      }
      else
      {

        sub_1001D0904(v36, (uint64_t (*)(void))_s4DealVMa);
        sub_1001D0904(v37, (uint64_t (*)(void))_s4DealVMa);
        sub_1001D0904(v38, (uint64_t (*)(void))_s4DealVMa);
        sub_1001D0904(v41, (uint64_t (*)(void))_s4DealVMa);
        Swift::String v23 = (char *)v41;
      }
      v35 += v102;
      --v32;
      uint64_t v15 = v103;
    }
    while (v32);
    swift_bridgeObjectRelease();
    int v33 = "[State] Skipping tracked-prices update because there are no items that need updating";
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v54 = v95[2];
  uint64_t v56 = v106;
  uint64_t v55 = (uint64_t)v107;
  if (v54)
  {
    uint64_t v57 = (uint64_t)v95 + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80));
    uint64_t v108 = *(void *)(v96 + 72);
    *(void *)&long long v53 = *((void *)v33 + 265);
    long long v102 = v53;
    os_log_type_t v101 = (char *)&type metadata for Any + 8;
    do
    {
      sub_1001D089C(v57, (uint64_t)v15, (uint64_t (*)(void))_s4DealVMa);
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_1001EB560();
      sub_10007CFF8(v59, (uint64_t)qword_1002A4198);
      sub_1001D089C((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))_s4DealVMa);
      sub_1001D089C((uint64_t)v15, v56, (uint64_t (*)(void))_s4DealVMa);
      sub_1001D089C((uint64_t)v15, v55, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v60 = v15;
      unint64_t v61 = sub_1001EB540();
      os_log_type_t v62 = sub_1001EC910();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = swift_slowAlloc();
        uint64_t v64 = (void *)swift_slowAlloc();
        unint64_t v105 = v64;
        *(_DWORD *)uint64_t v63 = v102;
        uint64_t v65 = *(void *)v109;
        uint64_t v66 = (void *)*((void *)v109 + 1);
        int v67 = v109[16];
        uint64_t v110 = 0;
        unint64_t v111 = 0xE000000000000000;
        uint64_t v112 = v64;
        if (v67) {
          uint64_t v68 = 65;
        }
        else {
          uint64_t v68 = 66;
        }
        swift_bridgeObjectRetain();
        v118._countAndFlagsBits = v68;
        v118._object = (void *)0xE100000000000000;
        sub_1001EC490(v118);
        swift_bridgeObjectRelease();
        v119._countAndFlagsBits = 46;
        v119._object = (void *)0xE100000000000000;
        sub_1001EC490(v119);
        swift_bridgeObjectRetain();
        v120._countAndFlagsBits = v65;
        v120._object = v66;
        sub_1001EC490(v120);
        swift_bridgeObjectRelease_n();
        *(void *)(v63 + 4) = sub_1001A8090((uint64_t)v110, v111, (uint64_t *)&v112);
        swift_bridgeObjectRelease();
        sub_1001D0904((uint64_t)v109, (uint64_t (*)(void))_s4DealVMa);
        *(_WORD *)(v63 + 12) = 2082;
        uint64_t v69 = v104;
        sub_1001EB0C0();
        sub_1000B4468(&qword_100293430);
        uint64_t v70 = sub_1001ED040();
        *(void *)(v63 + 14) = sub_1001A8090(v70, v71, (uint64_t *)&v112);
        swift_bridgeObjectRelease();
        sub_1001D0904(v106, (uint64_t (*)(void))_s4DealVMa);
        *(_WORD *)(v63 + 22) = 2048;
        *(v63 + 24) = *((char *)v107 + *(int *)(v69 + 32));
        sub_1001D0904((uint64_t)v107, (uint64_t (*)(void))_s4DealVMa);
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "[State] Removed deal: %s, date: %{public}s, reference price: %f", (uint8_t *)v63, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v12 = v109;
        swift_slowDealloc();

        uint64_t v58 = (uint64_t)v60;
        uint64_t v56 = v106;
        uint64_t v55 = (uint64_t)v107;
      }
      else
      {

        sub_1001D0904(v55, (uint64_t (*)(void))_s4DealVMa);
        sub_1001D0904(v56, (uint64_t (*)(void))_s4DealVMa);
        sub_1001D0904((uint64_t)v12, (uint64_t (*)(void))_s4DealVMa);
        uint64_t v58 = (uint64_t)v60;
      }
      sub_1001D0904(v58, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v15 = v60;
      v57 += v108;
      --v54;
    }
    while (v54);
  }
  swift_bridgeObjectRelease();
  uint64_t v72 = v94;
  uint64_t v73 = v93;
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v74 = sub_1001EB560();
  sub_10007CFF8(v74, (uint64_t)qword_1002A4198);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v75 = sub_1001EB540();
  int v76 = sub_1001EC910();
  if (os_log_type_enabled(v75, (os_log_type_t)v76))
  {
    uint64_t v77 = swift_slowAlloc();
    uint64_t v109 = (char *)swift_slowAlloc();
    uint64_t v110 = v109;
    *(_DWORD *)uint64_t v77 = 134218498;
    uint64_t v112 = *(void **)(v73 + 16);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v77 + 12) = 2048;
    uint64_t v112 = *(void **)(v72 + 16);
    int64_t v78 = (int64_t)v112;
    uint64_t v108 = (uint64_t)v113;
    sub_1001ECBC0();
    *(_WORD *)(v77 + 22) = 2080;
    if (v78)
    {
      LODWORD(v105) = v76;
      uint64_t v106 = v77;
      uint64_t v107 = v75;
      uint64_t v112 = _swiftEmptyArrayStorage;
      sub_1000CF8A8(0, v78, 0);
      uint64_t v79 = v72 + ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80));
      uint64_t v80 = *(void *)(v96 + 72);
      int v81 = v112;
      do
      {
        uint64_t v82 = v100;
        sub_1001D089C(v79, v100, (uint64_t (*)(void))_s4DealVMa);
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = *(void *)(v82 + 8);
        char v85 = *(unsigned char *)(v82 + 16);
        swift_bridgeObjectRetain();
        sub_1001D0904(v82, (uint64_t (*)(void))_s4DealVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000CF8A8(0, v81[2] + 1, 1);
          int v81 = v112;
        }
        unint64_t v87 = v81[2];
        unint64_t v86 = v81[3];
        if (v87 >= v86 >> 1)
        {
          sub_1000CF8A8(v86 > 1, v87 + 1, 1);
          int v81 = v112;
        }
        uint64_t v81[2] = v87 + 1;
        int v88 = &v81[3 * v87];
        v88[4] = v83;
        v88[5] = v84;
        *((unsigned char *)v88 + 48) = v85;
        v79 += v80;
        --v78;
      }
      while (v78);
      uint64_t v77 = v106;
      uint64_t v75 = v107;
      LOBYTE(v76) = (_BYTE)v105;
    }
    uint64_t v89 = sub_1001EC5F0();
    unint64_t v91 = v90;
    swift_bridgeObjectRelease();
    uint64_t v112 = (void *)sub_1001A8090(v89, v91, (uint64_t *)&v110);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v75, (os_log_type_t)v76, "[State] Deals (%ld) → (%ld) %s", (uint8_t *)v77, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
}

void sub_1001C90B0(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(void *)(a1 + 16) < 0x33uLL)
  {
    uint64_t v12 = *v1;
    *uint64_t v2 = a1;
    swift_bridgeObjectRetain();
    sub_1001C7B94(v12, a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1001EB560();
    sub_10007CFF8(v4, (uint64_t)qword_1002A4198);
    uint64_t v5 = sub_1001EB540();
    os_log_type_t v6 = sub_1001EC8F0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134218240;
      sub_1001ECBC0();
      *(_WORD *)(v7 + 12) = 2048;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "[State] Tracked items (%ld) exceed the limit (%ld)", (uint8_t *)v7, 0x16u);
      swift_slowDealloc();
    }

    sub_1001ED0B0();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v8 = (void *)swift_dynamicCastClass();
    if (!v8)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
    uint64_t v9 = v8[2];
    swift_release();
    if (v9 == 50)
    {
      uint64_t v10 = (void *)swift_dynamicCastClass();
      if (!v10)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(_s11TrackedItemVMa() - 8);
      uint64_t v10 = sub_10013A91C(a1, a1 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)), 0, 0x65uLL);
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = *v2;
    *uint64_t v2 = (uint64_t)v10;
    sub_1001C7B94(v11, (uint64_t)v10);
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1001C4C18(v13, (uint64_t)v25, (uint64_t (*)(void))_s11TrackedItemVMa);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_100170B7C((uint64_t)v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = v2[1];
  uint64_t v17 = *(void *)(v16 + 16);
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1001D0118(v18, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2[1] = (uint64_t)v19;
  sub_1001C83EC(v16, (uint64_t)v19);
  swift_bridgeObjectRelease();
  if (v17 != v19[2])
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1001EB560();
    sub_10007CFF8(v20, (uint64_t)qword_1002A4198);
    uint64_t v21 = sub_1001EB540();
    os_log_type_t v22 = sub_1001EC910();
    if (os_log_type_enabled(v21, v22))
    {
      Swift::String v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)Swift::String v23 = 134217984;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[State] Removed %ld deals because their items are no longer tracked", v23, 0xCu);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1001C9484(uint64_t a1)
{
  uint64_t v3 = _s11TrackedItemVMa();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  os_log_type_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1001214DC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v9 = *(void *)(v7 + 16);
  if (!v9)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v32 = swift_bridgeObjectRetain();
    int v33 = sub_1001C5100(v32);
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_100170CB0((uint64_t)v33);
    swift_bridgeObjectRelease();
    os_log_type_t v42 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1001D0458(a1, (uint64_t)&v42, (uint64_t)v8, v34);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1001C90B0((uint64_t)v35);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v38 = a1;
  uint64_t v39 = v1;
  uint64_t v10 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = *(void *)(v4 + 72);
  uint64_t v37 = v7;
  swift_bridgeObjectRetain();
  uint64_t v40 = v11;
  while (1)
  {
    uint64_t v41 = v9;
    uint64_t v15 = *(void *)v10;
    uint64_t v14 = *(void *)(v10 + 8);
    int v16 = *(unsigned __int8 *)(v10 + 16);
    uint64_t v17 = (uint64_t)v6;
    sub_1001D089C(v10, (uint64_t)v6, (uint64_t (*)(void))_s11TrackedItemVMa);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    os_log_type_t v42 = v8;
    unint64_t v20 = sub_1001A88FC(v15, v14, v16);
    uint64_t v21 = v8[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (v8[3] >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v8 = v42;
        if (v19) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1001AC5C8();
        uint64_t v8 = v42;
        if (v24) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1001AA400(v23, isUniquelyReferenced_nonNull_native);
      unint64_t v25 = sub_1001A88FC(v15, v14, v16);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_20;
      }
      unint64_t v20 = v25;
      uint64_t v8 = v42;
      if (v24)
      {
LABEL_3:
        uint64_t v12 = v40;
        uint64_t v13 = v8[7] + v20 * v40;
        os_log_type_t v6 = (char *)v17;
        sub_1001D07B0(v17, v13);
        goto LABEL_4;
      }
    }
    v8[(v20 >> 6) + 8] |= 1 << v20;
    uint64_t v27 = v8[6] + 24 * v20;
    *(void *)uint64_t v27 = v15;
    *(void *)(v27 + 8) = v14;
    *(unsigned char *)(v27 + 16) = v16;
    uint64_t v12 = v40;
    uint64_t v28 = v8[7] + v20 * v40;
    os_log_type_t v6 = (char *)v17;
    sub_1001D0834(v17, v28, (uint64_t (*)(void))_s11TrackedItemVMa);
    uint64_t v29 = v8[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_19;
    }
    v8[2] = v31;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 += v12;
    uint64_t v9 = v41 - 1;
    if (v41 == 1)
    {
      swift_bridgeObjectRelease();
      a1 = v38;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1001ED0E0();
  __break(1u);
  return result;
}

uint64_t sub_1001C97EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10007DC14(&qword_100297058);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s11TrackedItemVMa();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  uint64_t v48 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v16 = *(void *)a1;
  uint64_t v15 = *(void **)(a1 + 8);
  int v17 = *(unsigned __int8 *)(a1 + 16);
  swift_bridgeObjectRetain();
  char v18 = sub_100197C08((uint64_t)&v49, v16, (uint64_t)v15, v17);
  swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v19 = *(void *)(a2 + 16);
    int v46 = v17;
    if (v19)
    {
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1001A88FC(v16, (uint64_t)v15, v17);
      uint64_t v21 = v47;
      uint64_t v23 = v48;
      if (v22)
      {
        sub_1001D089C(*(void *)(a2 + 56) + *(void *)(v48 + 72) * v20, (uint64_t)v10, (uint64_t (*)(void))_s11TrackedItemVMa);
        char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
        v24(v10, 0, 1, v21);
      }
      else
      {
        char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
        v24(v10, 1, 1, v47);
      }
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v21) != 1)
      {
        sub_1001D0834((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))_s11TrackedItemVMa);
        sub_1001D0834((uint64_t)v14, a4, (uint64_t (*)(void))_s11TrackedItemVMa);
        return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v24)(a4, 0, 1, v21);
      }
    }
    else
    {
      uint64_t v21 = v47;
      char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
      v24(v10, 1, 1, v47);
    }
    sub_1000816A4((uint64_t)v10, &qword_100297058);
    swift_bridgeObjectRetain();
    char v31 = sub_1000F3988(v16, (uint64_t)v15, a3);
    swift_bridgeObjectRelease();
    if (v31)
    {
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1001EB560();
      sub_10007CFF8(v32, (uint64_t)qword_1002A4198);
      swift_bridgeObjectRetain_n();
      int v33 = sub_1001EB540();
      os_log_type_t v34 = sub_1001EC8F0();
      int v35 = v34;
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v51 = v45;
        *(_DWORD *)uint64_t v36 = 141558530;
        uint64_t v49 = 1752392040;
        sub_1001ECBC0();
        *(_WORD *)(v36 + 12) = 2080;
        uint64_t v49 = 0;
        unint64_t v50 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        if (v46) {
          v37._countAndFlagsBits = 65;
        }
        else {
          v37._countAndFlagsBits = 66;
        }
        uint64_t v38 = 1802465122;
        if (v46) {
          uint64_t v38 = 0x6F6F626F69647561;
        }
        v42[1] = v36 + 14;
        uint64_t v43 = v38;
        int v44 = v35;
        if (v46) {
          unint64_t v39 = 0xE90000000000006BLL;
        }
        else {
          unint64_t v39 = 0xE400000000000000;
        }
        v37._object = (void *)0xE100000000000000;
        sub_1001EC490(v37);
        swift_bridgeObjectRelease();
        v55._countAndFlagsBits = 46;
        v55._object = (void *)0xE100000000000000;
        sub_1001EC490(v55);
        swift_bridgeObjectRetain();
        v56._countAndFlagsBits = v16;
        v56._object = v15;
        sub_1001EC490(v56);
        swift_bridgeObjectRelease_n();
        uint64_t v49 = sub_1001A8090(v49, v50, &v51);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 22) = 2082;
        uint64_t v49 = sub_1001A8090(v43, v39, &v51);
        uint64_t v21 = v47;
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v44, "[State] Type for item %{mask.hash}s changed to %{public}s", (uint8_t *)v36, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    uint64_t v40 = a4 + *(int *)(v21 + 24);
    uint64_t v41 = _s11RecentPriceVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
    *(void *)a4 = v16;
    *(void *)(a4 + 8) = v15;
    *(unsigned char *)(a4 + 16) = v46;
    *(void *)(a4 + 24) = 0;
    *(void *)(a4 + 32) = 0;
    *(void *)(a4 + 40) = 1;
    v24((char *)a4, 0, 1, v21);
    return swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1001EB560();
    sub_10007CFF8(v25, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain_n();
    char v26 = sub_1001EB540();
    os_log_type_t v27 = sub_1001EC8F0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 141558274;
      uint64_t v49 = 1752392040;
      sub_1001ECBC0();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      if (v17) {
        uint64_t v29 = 65;
      }
      else {
        uint64_t v29 = 66;
      }
      swift_bridgeObjectRetain();
      v52._countAndFlagsBits = v29;
      v52._object = (void *)0xE100000000000000;
      sub_1001EC490(v52);
      swift_bridgeObjectRelease();
      v53._countAndFlagsBits = 46;
      v53._object = (void *)0xE100000000000000;
      sub_1001EC490(v53);
      swift_bridgeObjectRetain();
      v54._countAndFlagsBits = v16;
      v54._object = v15;
      sub_1001EC490(v54);
      swift_bridgeObjectRelease_n();
      uint64_t v49 = sub_1001A8090(v49, v50, &v51);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[State] Ignoring duplicate tracked item ID %{mask.hash}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(a4, 1, 1, v47);
  }
}

uint64_t sub_1001C9FD0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      _s8CardItemVMa();
      return a2;
    }
  }
  __break(1u);
  return result;
}

void sub_1001CA064(uint64_t a1, void *a2, unint64_t *a3, void *a4, int a5, double a6)
{
  LODWORD(v7) = a5;
  uint64_t v57 = a1;
  uint64_t v12 = sub_10007DC14(&qword_100294D80);
  __chkstk_darwin(v12 - 8);
  uint64_t v58 = v6;
  uint64_t v59 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *v6;
  uint64_t v15 = *(void *)(*v6 + 16);
  if (v15)
  {
    unint64_t v16 = 0;
    uint64_t v56 = _s11TrackedItemVMa();
    uint64_t v17 = *(void *)(*(void *)(v56 - 8) + 72);
    unint64_t v18 = ((*(unsigned __int8 *)(*(void *)(v56 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v56 - 8) + 80))
        + 40;
    do
    {
      uint64_t v19 = *(unsigned __int8 *)(v14 + v18 - 24);
      if (*(unint64_t **)(v14 + v18 - 40) == a3 && *(void *)(v14 + v18 - 32) == (void)a4)
      {
        if (v19 == (v7 & 1)) {
          goto LABEL_11;
        }
      }
      else if ((sub_1001ED080() & 1) != 0 && ((v19 ^ v7) & 1) == 0)
      {
LABEL_11:
        uint64_t v21 = qword_1002910B8;
        swift_bridgeObjectRetain();
        if (a6 >= 0.0)
        {
          if (v21 != -1) {
            swift_once();
          }
          uint64_t v32 = sub_1001EB560();
          sub_10007CFF8(v32, (uint64_t)qword_1002A4198);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          int v33 = sub_1001EB540();
          os_log_type_t v34 = sub_1001EC910();
          int v35 = v34;
          if (os_log_type_enabled(v33, v34))
          {
            uint64_t v36 = swift_slowAlloc();
            uint64_t v37 = swift_slowAlloc();
            uint64_t v55 = v37;
            *(_DWORD *)uint64_t v36 = 136315394;
            uint64_t v60 = 0;
            unint64_t v61 = 0xE000000000000000;
            uint64_t v62 = v37;
            if (v7) {
              uint64_t v38 = 65;
            }
            else {
              uint64_t v38 = 66;
            }
            v52[1] = v36 + 4;
            swift_bridgeObjectRetain();
            LODWORD(v54) = v35;
            os_log_t v53 = v33;
            v69._countAndFlagsBits = v38;
            v69._object = (void *)0xE100000000000000;
            sub_1001EC490(v69);
            swift_bridgeObjectRelease();
            v70._countAndFlagsBits = 46;
            v70._object = (void *)0xE100000000000000;
            sub_1001EC490(v70);
            swift_bridgeObjectRetain();
            v71._countAndFlagsBits = (uint64_t)a3;
            v71._object = a4;
            sub_1001EC490(v71);
            swift_bridgeObjectRelease_n();
            uint64_t v60 = sub_1001A8090(v60, v61, &v62);
            a3 = &v61;
            sub_1001ECBC0();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v36 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v19 = v57;
            uint64_t v39 = sub_10014CFE4(v57, a2);
            uint64_t v7 = v40;
            swift_bridgeObjectRelease();
            uint64_t v60 = sub_1001A8090(v39, v7, &v62);
            sub_1001ECBC0();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            os_log_t v41 = v53;
            _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v54, "[State] Setting reference price for %s → %s", (uint8_t *)v36, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            uint64_t v19 = v57;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_48;
          }
          goto LABEL_40;
        }
        if (v21 != -1) {
          goto LABEL_46;
        }
        while (1)
        {
          uint64_t v22 = sub_1001EB560();
          sub_10007CFF8(v22, (uint64_t)qword_1002A4198);
          swift_bridgeObjectRetain_n();
          uint64_t v23 = sub_1001EB540();
          os_log_type_t v24 = sub_1001EC910();
          int v25 = v24;
          if (os_log_type_enabled(v23, v24))
          {
            LODWORD(v57) = v25;
            uint64_t v19 = swift_slowAlloc();
            uint64_t v26 = swift_slowAlloc();
            uint64_t v55 = v26;
            *(_DWORD *)uint64_t v19 = 136315138;
            a2 = (void *)(v19 + 12);
            uint64_t v60 = 0;
            unint64_t v61 = 0xE000000000000000;
            uint64_t v62 = v26;
            if (v7) {
              uint64_t v7 = 65;
            }
            else {
              uint64_t v7 = 66;
            }
            uint64_t v54 = v19 + 4;
            swift_bridgeObjectRetain();
            v63._countAndFlagsBits = v7;
            v63._object = (void *)0xE100000000000000;
            sub_1001EC490(v63);
            swift_bridgeObjectRelease();
            v64._countAndFlagsBits = 46;
            v64._object = (void *)0xE100000000000000;
            sub_1001EC490(v64);
            swift_bridgeObjectRetain();
            v65._countAndFlagsBits = (uint64_t)a3;
            v65._object = a4;
            sub_1001EC490(v65);
            swift_bridgeObjectRelease_n();
            uint64_t v60 = sub_1001A8090(v60, v61, &v62);
            sub_1001ECBC0();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v57, "[State] Removing reference price for %s", (uint8_t *)v19, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v42 = (uint64_t)v59;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v14 = sub_1001CFD1C(v14);
          }
          if (v16 >= *(void *)(v14 + 16))
          {
            __break(1u);
LABEL_48:
            unint64_t v14 = sub_1001CFD1C(v14);
LABEL_40:
            if (v16 >= *(void *)(v14 + 16))
            {
              __break(1u);
              return;
            }
            uint64_t v47 = (double *)(v14 + v18);
            uint64_t v48 = *(void *)(v14 + v18 - 16);
            uint64_t v49 = *(void *)(v14 + v18 - 8);
            a4 = *(void **)(v14 + v18);
            *(v47 - 2) = a6;
            *((void *)v47 - 1) = v19;
            *(void *)uint64_t v47 = a2;
            swift_bridgeObjectRetain();
            sub_100144114(v48, v49, (uint64_t)a4);
            uint64_t v42 = (uint64_t)v59;
          }
          else
          {
            uint64_t v43 = (void *)(v14 + v18);
            uint64_t v44 = *(void *)(v14 + v18 - 16);
            uint64_t v45 = *(void *)(v14 + v18 - 8);
            uint64_t v46 = *(void *)(v14 + v18);
            *(v43 - 2) = 0;
            *(v43 - 1) = 0;
            *uint64_t v43 = 1;
            sub_100144114(v44, v45, v46);
          }
          uint64_t v50 = _s11RecentPriceVMa();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v42, 1, 1, v50);
          if (v16 < *(void *)(v14 + 16))
          {
            sub_1000AF3B4(v42, v14 + v18 + *(int *)(v56 + 24) - 40, &qword_100294D80);
            uint64_t v51 = swift_bridgeObjectRetain();
            sub_1001C90B0(v51);
            goto LABEL_44;
          }
          __break(1u);
LABEL_46:
          swift_once();
        }
      }
      ++v16;
      v18 += v17;
    }
    while (v15 != v16);
  }
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1001EB560();
  sub_10007CFF8(v27, (uint64_t)qword_1002A4198);
  swift_bridgeObjectRetain_n();
  uint64_t v28 = sub_1001EB540();
  os_log_type_t v29 = sub_1001EC8F0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 141558274;
    uint64_t v60 = 1752392040;
    sub_1001ECBC0();
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    if (v7) {
      uint64_t v31 = 65;
    }
    else {
      uint64_t v31 = 66;
    }
    swift_bridgeObjectRetain();
    v66._countAndFlagsBits = v31;
    v66._object = (void *)0xE100000000000000;
    sub_1001EC490(v66);
    swift_bridgeObjectRelease();
    v67._countAndFlagsBits = 46;
    v67._object = (void *)0xE100000000000000;
    sub_1001EC490(v67);
    swift_bridgeObjectRetain();
    v68._countAndFlagsBits = (uint64_t)a3;
    v68._object = a4;
    sub_1001EC490(v68);
    swift_bridgeObjectRelease_n();
    uint64_t v60 = sub_1001A8090(v60, v61, &v62);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[State] Unable to find item with id: %{mask.hash}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

LABEL_44:
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1001CA934(char a1, char a2)
{
  uint64_t v5 = _s11TrackedItemVMa();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5 - 8);
  uint64_t v21 = (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - v9;
  if (a2) {
    goto LABEL_4;
  }
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (!a1) {
    return (uint64_t)v11;
  }
  if (a1 == 1)
  {
LABEL_4:
    uint64_t v11 = *v2;
    swift_bridgeObjectRetain();
    return (uint64_t)v11;
  }
  uint64_t v13 = *v2;
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v14 = v13[2];
  uint64_t result = swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  unint64_t v15 = 0;
  unint64_t v16 = _swiftEmptyArrayStorage;
  while (v15 < v13[2])
  {
    unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v18 = *(void *)(v6 + 72);
    sub_1001D089C((uint64_t)v13 + v17 + v18 * v15, (uint64_t)v10, (uint64_t (*)(void))_s11TrackedItemVMa);
    if (*((void *)v10 + 5) == 1)
    {
      sub_1001D0834((uint64_t)v10, v21, (uint64_t (*)(void))_s11TrackedItemVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1000CF904(0, v16[2] + 1, 1);
      }
      unint64_t v16 = v22;
      unint64_t v20 = v22[2];
      unint64_t v19 = v22[3];
      if (v20 >= v19 >> 1)
      {
        sub_1000CF904(v19 > 1, v20 + 1, 1);
        unint64_t v16 = v22;
      }
      v16[2] = v20 + 1;
      uint64_t result = sub_1001D0834(v21, (uint64_t)v16 + v17 + v20 * v18, (uint64_t (*)(void))_s11TrackedItemVMa);
    }
    else
    {
      uint64_t result = sub_1001D0904((uint64_t)v10, (uint64_t (*)(void))_s11TrackedItemVMa);
    }
    if (v14 == ++v15)
    {
      uint64_t v11 = v22;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1001CAB94(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a1;
  uint64_t v9 = sub_10007DC14(&qword_100296D60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (unint64_t *)((char *)v4 + *(int *)(_s5StateVMa() + 36));
  unint64_t v13 = v12[1];
  unint64_t v14 = *v4;
  uint64_t v58 = v11;
  if (!v13)
  {
    unint64_t v56 = a2;
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  unint64_t v15 = *v12;
  BOOL v16 = *v12 == a2 && v13 == a3;
  if (!v16 && (sub_1001ED080() & 1) == 0)
  {
    unint64_t v43 = v14;
    uint64_t v44 = qword_1002910B8;
    uint64_t v5 = v43;
    swift_bridgeObjectRetain();
    if (v44 == -1) {
      goto LABEL_27;
    }
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v56 = v15;
LABEL_10:
  v55[1] = v17;
  uint64_t v18 = *(void *)(v14 + 16);
  if (v18)
  {
    a2 = 0;
    unint64_t v19 = &qword_100296D60;
    while (1)
    {
      if (a2 >= *(void *)(v14 + 16))
      {
        __break(1u);
LABEL_37:
        __break(1u);
        while (1)
        {
          __break(1u);
LABEL_39:
          swift_once();
LABEL_27:
          uint64_t v45 = sub_1001EB560();
          sub_10007CFF8(v45, (uint64_t)qword_1002A4198);
          uint64_t v46 = sub_1001EB540();
          os_log_type_t v47 = sub_1001EC8F0();
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v48 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v48 = 0;
            _os_log_impl((void *)&_mh_execute_header, v46, v47, "[State] Store-front has changed; discarding previous price information",
              v48,
              2u);
            swift_slowDealloc();
          }
          unint64_t v56 = a2;

          unint64_t v14 = v5;
          uint64_t v49 = *(void *)(v5 + 16);
          if (!v49) {
            break;
          }
          unint64_t v50 = 0;
          a2 = 1;
          while (1)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v14 = sub_1001CFD1C(v14);
            }
            if (v50 >= *(void *)(v14 + 16)) {
              break;
            }
            uint64_t v51 = (int *)(_s11TrackedItemVMa() - 8);
            uint64_t v5 = v14;
            Swift::String v52 = (uint64_t *)(v14
                            + ((*(unsigned __int8 *)(*(void *)v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v51 + 80))
                            + *(void *)(*(void *)v51 + 72) * v50);
            sub_100144114(v52[3], v52[4], v52[5]);
            v52[3] = 0;
            v52[4] = 0;
            v52[5] = 1;
            uint64_t v53 = (uint64_t)v52 + v51[8];
            unint64_t v14 = v5;
            sub_1000816A4(v53, &qword_100294D80);
            uint64_t v54 = _s11RecentPriceVMa();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 1, 1, v54);
            ++v50;
            uint64_t v11 = v58;
            if (v49 == v50) {
              goto LABEL_9;
            }
          }
        }
LABEL_9:
        uint64_t v17 = swift_bridgeObjectRetain();
        goto LABEL_10;
      }
      uint64_t v21 = *(void *)(_s11TrackedItemVMa() - 8);
      uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
      uint64_t v23 = *(void *)(v21 + 72);
      if (!*(void *)(a4 + 16)) {
        break;
      }
      uint64_t v24 = (v22 + 32) & ~v22;
      unint64_t v60 = v23 * a2;
      unint64_t v61 = v14;
      unint64_t v25 = v14 + v24 + v23 * a2;
      int v26 = *(unsigned __int8 *)(v25 + 16);
      uint64_t v5 = *(void *)v25;
      uint64_t v27 = *(void *)(v25 + 8);
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_1001A88FC(v5, v27, v26);
      if (v29)
      {
        uint64_t v5 = v28;
        uint64_t v30 = *(void *)(a4 + 56);
        uint64_t v31 = _s14PricingServiceV12FetchedPriceVMa(0);
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v59 = v24;
        int v33 = v19;
        uint64_t v34 = v18;
        uint64_t v35 = a4;
        uint64_t v36 = v32;
        uint64_t v37 = v30 + *(void *)(v32 + 72) * v5;
        uint64_t v11 = v58;
        sub_1001D089C(v37, (uint64_t)v58, _s14PricingServiceV12FetchedPriceVMa);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v11, 0, 1, v31);
        a4 = v35;
        uint64_t v18 = v34;
        unint64_t v19 = v33;
      }
      else
      {
        uint64_t v31 = _s14PricingServiceV12FetchedPriceVMa(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 1, 1, v31);
      }
      swift_bridgeObjectRelease();
      _s14PricingServiceV12FetchedPriceVMa(0);
      int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v11, 1, v31);
      unint64_t v14 = v61;
      if (v38 == 1) {
        goto LABEL_13;
      }
      uint64_t v39 = (double *)&v11[*(int *)(v31 + 24)];
      double v40 = *v39;
      uint64_t v5 = *((void *)v39 + 1);
      uint64_t v41 = *((void *)v39 + 2);
      swift_bridgeObjectRetain();
      sub_1001D0904((uint64_t)v11, _s14PricingServiceV12FetchedPriceVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_1001CFD1C(v14);
      }
      if (a2 >= *(void *)(v14 + 16)) {
        goto LABEL_37;
      }
      sub_1001BAE48(v5, v41, v57, v40);
      swift_bridgeObjectRelease();
LABEL_14:
      if (v18 == ++a2) {
        return v56;
      }
    }
    uint64_t v20 = _s14PricingServiceV12FetchedPriceVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 1, 1, v20);
LABEL_13:
    sub_1000816A4((uint64_t)v11, v19);
    goto LABEL_14;
  }
  return v56;
}

uint64_t sub_1001CB1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v135 = a4;
  uint64_t v140 = a3;
  uint64_t v9 = _s11TrackedItemVMa();
  __chkstk_darwin(v9 - 8);
  uint64_t v130 = (uint64_t)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100295230);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v136 = (uint64_t)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  BOOL v134 = (char *)&v120 - v14;
  uint64_t v15 = _s4DealVMa();
  uint64_t v145 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v120 - v19;
  uint64_t v21 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v21 - 8);
  v141 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = sub_1001EB0C0();
  uint64_t v126 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 - 8);
  uint64_t v23 = __chkstk_darwin(v137);
  v125 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v139 = (uint64_t)&v120 - v25;
  uint64_t v26 = sub_10007DC14(&qword_100297070);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  char v129 = (char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v121 = (uint64_t)&v120 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v128 = (uint64_t)&v120 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v123 = (uint64_t)&v120 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v127 = (uint64_t)&v120 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v120 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v138 = (uint64_t)&v120 - v41;
  __chkstk_darwin(v40);
  uint64_t v143 = (uint64_t)&v120 - v42;
  uint64_t v43 = sub_10007DC14(&qword_100296D60);
  uint64_t v44 = __chkstk_darwin(v43 - 8);
  uint64_t v124 = (uint64_t)&v120 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v120 - v47;
  uint64_t v49 = *(void *)(a2 + 16);
  uint64_t v131 = a5;
  uint64_t v132 = v5;
  uint64_t v122 = v18;
  uint64_t v144 = (uint64_t)&v120 - v47;
  int v133 = (uint64_t *)v50;
  if (v49)
  {
    int v51 = *(unsigned __int8 *)(a1 + 16);
    uint64_t v52 = *(void *)a1;
    uint64_t v53 = *(void *)(a1 + 8);
    swift_bridgeObjectRetain();
    unint64_t v54 = sub_1001A88FC(v52, v53, v51);
    if (v55)
    {
      unint64_t v56 = v54;
      uint64_t v57 = *(void *)(a2 + 56);
      uint64_t v58 = _s14PricingServiceV12FetchedPriceVMa(0);
      uint64_t v59 = *(void *)(v58 - 8);
      uint64_t v60 = v57 + *(void *)(v59 + 72) * v56;
      uint64_t v61 = v144;
      sub_1001D089C(v60, v144, _s14PricingServiceV12FetchedPriceVMa);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v58);
    }
    else
    {
      uint64_t v63 = _s14PricingServiceV12FetchedPriceVMa(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v144, 1, 1, v63);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v62 = _s14PricingServiceV12FetchedPriceVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v48, 1, 1, v62);
  }
  uint64_t v64 = v143;
  uint64_t v65 = *(void *)(v140 + 8);
  uint64_t v66 = *(void *)(v65 + 16);
  uint64_t v142 = v15;
  if (v66)
  {
    uint64_t v67 = v65 + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    uint64_t v68 = *(void *)(v145 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1001D089C(v67, (uint64_t)v20, (uint64_t (*)(void))_s4DealVMa);
      int v69 = v20[16];
      int v70 = *(unsigned __int8 *)(a1 + 16);
      if (*(void *)v20 == *(void *)a1 && *((void *)v20 + 1) == *(void *)(a1 + 8))
      {
        if (v69 == v70) {
          goto LABEL_17;
        }
      }
      else if ((sub_1001ED080() & 1) != 0 && ((v69 ^ v70) & 1) == 0)
      {
LABEL_17:
        uint64_t v64 = v143;
        sub_1001D0834((uint64_t)v20, v143, (uint64_t (*)(void))_s4DealVMa);
        uint64_t v72 = 0;
        uint64_t v15 = v142;
        goto LABEL_20;
      }
      sub_1001D0904((uint64_t)v20, (uint64_t (*)(void))_s4DealVMa);
      v67 += v68;
      --v66;
    }
    while (v66);
    uint64_t v72 = 1;
    uint64_t v15 = v142;
    uint64_t v64 = v143;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = 1;
  }
LABEL_20:
  uint64_t v73 = (uint64_t)v141;
  uint64_t v74 = v145;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v145 + 56))(v64, v72, 1, v15);
  swift_bridgeObjectRelease();
  sub_1000936F8(v64, (uint64_t)v39, &qword_100297070);
  uint64_t v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  uint64_t v145 = v74 + 48;
  v141 = v75;
  if (v75((uint64_t)v39, 1, v15) == 1)
  {
    sub_1000816A4((uint64_t)v39, &qword_100297070);
    int v76 = v126;
    uint64_t v77 = v137;
    v126[7](v73, 1, 1, v137);
    int64_t v78 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v76[2];
  }
  else
  {
    uint64_t v79 = &v39[*(int *)(v15 + 28)];
    int v76 = v126;
    int64_t v78 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v126[2];
    uint64_t v77 = v137;
    ((void (*)(uint64_t, char *, uint64_t))v78)(v73, v79, v137);
    sub_1001D0904((uint64_t)v39, (uint64_t (*)(void))_s4DealVMa);
    v76[7](v73, 0, 1, v77);
  }
  uint64_t v80 = v125;
  ((void (*)(char *, uint64_t, uint64_t))v78)(v125, v135, v77);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v76[6])(v73, 1, v77) == 1)
  {
    ((void (*)(uint64_t, char *, uint64_t))v76[4])(v139, v80, v77);
    sub_1000816A4(v73, (uint64_t *)&unk_1002924C0);
  }
  else
  {
    ((void (*)(char *, uint64_t))v76[1])(v80, v77);
    ((void (*)(uint64_t, uint64_t, uint64_t))v76[4])(v139, v73, v77);
  }
  uint64_t v81 = v136;
  uint64_t v82 = v133;
  sub_1000936F8(v144, (uint64_t)v133, &qword_100296D60);
  uint64_t v83 = _s14PricingServiceV12FetchedPriceVMa(0);
  uint64_t v84 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48);
  int v85 = v84(v82, 1, v83);
  uint64_t v126 = v78;
  if (v85 == 1)
  {
    sub_1000816A4((uint64_t)v82, &qword_100296D60);
    uint64_t v86 = v64;
    uint64_t v87 = v127;
    sub_1000936F8(v86, v127, &qword_100297070);
    goto LABEL_30;
  }
  uint64_t v88 = v82[1];
  uint64_t v135 = *v82;
  swift_bridgeObjectRetain();
  sub_1001D0904((uint64_t)v82, _s14PricingServiceV12FetchedPriceVMa);
  uint64_t v89 = v64;
  uint64_t v87 = v127;
  sub_1000936F8(v89, v127, &qword_100297070);
  if (!v88)
  {
LABEL_30:
    uint64_t v90 = v87;
    uint64_t v91 = v123;
    sub_1000935F8(v90, v123, &qword_100297070);
    if (v141(v91, 1, v142) == 1)
    {
      sub_1000816A4(v91, &qword_100297070);
      uint64_t v135 = 0;
      uint64_t v88 = 0;
    }
    else
    {
      uint64_t v88 = *(void *)(v91 + 32);
      uint64_t v135 = *(void *)(v91 + 24);
      swift_bridgeObjectRetain();
      sub_1001D0904(v91, (uint64_t (*)(void))_s4DealVMa);
    }
    goto LABEL_33;
  }
  sub_1000816A4(v87, &qword_100297070);
LABEL_33:
  uint64_t v92 = v124;
  sub_1000936F8(v144, v124, &qword_100296D60);
  if (v84((uint64_t *)v92, 1, v83) == 1)
  {
    sub_1000816A4(v92, &qword_100296D60);
    uint64_t v93 = sub_1001EAF60();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v81, 1, 1, v93);
  }
  else
  {
    uint64_t v94 = v92 + *(int *)(v83 + 20);
    uint64_t v93 = sub_1001EAF60();
    uint64_t v95 = *(void *)(v93 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v81, v94, v93);
    sub_1001D0904(v92, _s14PricingServiceV12FetchedPriceVMa);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v81, 0, 1, v93);
  }
  uint64_t v96 = v142;
  uint64_t v97 = v128;
  sub_1000936F8(v143, v128, &qword_100297070);
  sub_1001EAF60();
  uint64_t v98 = *(void *)(v93 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v81, 1, v93) == 1)
  {
    uint64_t v99 = v121;
    sub_1000935F8(v97, v121, &qword_100297070);
    if (v141(v99, 1, v96) == 1)
    {
      sub_1000816A4(v99, &qword_100297070);
      uint64_t v100 = 1;
      uint64_t v101 = (uint64_t)v134;
    }
    else
    {
      uint64_t v101 = (uint64_t)v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v134, v99 + *(int *)(v96 + 24), v93);
      sub_1001D0904(v99, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v100 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v101, v100, 1, v93);
    sub_1000816A4(v136, &qword_100295230);
  }
  else
  {
    sub_1000816A4(v97, &qword_100297070);
    uint64_t v102 = v81;
    uint64_t v101 = (uint64_t)v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v134, v102, v93);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v101, 0, 1, v93);
  }
  uint64_t v104 = (uint64_t)v129;
  uint64_t v103 = v130;
  uint64_t v105 = v135;
  sub_1001D089C(a1, v130, (uint64_t (*)(void))_s11TrackedItemVMa);
  uint64_t v106 = _s5StateVMa();
  uint64_t v107 = v88;
  uint64_t v108 = v138;
  sub_100143860(v139, v105, v107, v101, v103, v138, *(double *)(v140 + *(int *)(v106 + 40)), *(double *)(v140 + *(int *)(v106 + 40) + 8));
  sub_1000936F8(v108, v104, &qword_100297070);
  if (v141(v104, 1, v96) == 1)
  {
    sub_1000816A4(v108, &qword_100297070);
    sub_1000816A4(v143, &qword_100297070);
    sub_1000816A4(v144, &qword_100296D60);
    sub_1000816A4(v104, &qword_100297070);
    uint64_t v109 = sub_10007DC14(&qword_100291EC0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v131, 1, 1, v109);
  }
  else
  {
    uint64_t v111 = v96;
    uint64_t v112 = (uint64_t)v122;
    sub_1001D0834(v104, (uint64_t)v122, (uint64_t (*)(void))_s4DealVMa);
    uint64_t v113 = sub_10007DC14(&qword_100291EC0);
    uint64_t v114 = v131;
    uint64_t v115 = v131 + *(int *)(v113 + 48);
    sub_1001D089C(v112, v131, (uint64_t (*)(void))_s4DealVMa);
    Swift::String v116 = (double *)(v115 + *(int *)(sub_10007DC14(&qword_100297060) + 48));
    ((void (*)(uint64_t, uint64_t, uint64_t))v126)(v115, v112 + *(int *)(v111 + 28), v137);
    double v117 = sub_1001BA540();
    uint64_t v119 = v118;
    sub_1001D0904(v112, (uint64_t (*)(void))_s4DealVMa);
    sub_1000816A4(v138, &qword_100297070);
    sub_1000816A4(v143, &qword_100297070);
    sub_1000816A4(v144, &qword_100296D60);
    double *v116 = v117;
    *((void *)v116 + 1) = v119;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v114, 0, 1, v113);
  }
}

uint64_t sub_1001CC120@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  if (*(void *)(a2 + *(int *)(_s5StateVMa() + 44) + 8)) {
    return sub_100189BB0(*a1, a3);
  }
  uint64_t v6 = _s21PriceDropNotificationVMa();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a3, 1, 1, v6);
}

Swift::Int sub_1001CC1EC(void **a1)
{
  uint64_t v2 = *(void *)(sub_10007DC14(&qword_100291EC0) - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = (void *)sub_1001CFD80(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1001CC298(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1001CC298(uint64_t *a1)
{
  uint64_t v256 = sub_10007DC14(&qword_100297060);
  uint64_t v3 = __chkstk_darwin(v256);
  v251 = (char *)&v226 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v250 = (char *)&v226 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v226 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v226 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  v229 = (char *)&v226 - v14;
  __chkstk_darwin(v13);
  os_log_t v228 = (char *)&v226 - v15;
  uint64_t v269 = sub_10007DC14(&qword_100291EC0);
  uint64_t v246 = *(void *)(v269 - 8);
  uint64_t v16 = __chkstk_darwin(v269);
  uint64_t v239 = (uint64_t)&v226 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v258 = (uint64_t)&v226 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v268 = (uint64_t)&v226 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v267 = (uint64_t)&v226 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v266 = (uint64_t)&v226 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v265 = (uint64_t)&v226 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v244 = (uint64_t)&v226 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v243 = (uint64_t)&v226 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v242 = (uint64_t)&v226 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v241 = (uint64_t)&v226 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v233 = (uint64_t)&v226 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v232 = (uint64_t)&v226 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v231 = (uint64_t)&v226 - v41;
  __chkstk_darwin(v40);
  uint64_t v230 = (uint64_t)&v226 - v42;
  Swift::Int v43 = a1[1];
  Swift::Int result = sub_1001ED030(v43);
  if (result >= v43)
  {
    if (v43 < 0) {
      goto LABEL_162;
    }
    if (v43) {
      return sub_1001CD760(0, v43, 1, a1);
    }
    return result;
  }
  if (v43 >= 0) {
    uint64_t v45 = v43;
  }
  else {
    uint64_t v45 = v43 + 1;
  }
  if (v43 < -1) {
    goto LABEL_170;
  }
  Swift::Int v227 = result;
  uint64_t v247 = v1;
  if (v43 < 2)
  {
    unint64_t v245 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v246 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80));
    v226 = _swiftEmptyArrayStorage;
    if (v43 != 1)
    {
      unint64_t v51 = _swiftEmptyArrayStorage[2];
      uint64_t v50 = (char *)_swiftEmptyArrayStorage;
LABEL_125:
      if (v51 >= 2)
      {
        uint64_t v218 = *a1;
        v217 = v226;
        while (1)
        {
          unint64_t v219 = v51 - 2;
          if (v51 < 2) {
            goto LABEL_157;
          }
          if (!v218) {
            goto LABEL_169;
          }
          v248 = v50;
          uint64_t v220 = *(void *)&v50[16 * v219 + 32];
          uint64_t v221 = *(void *)&v50[16 * v51 + 24];
          uint64_t v222 = v247;
          sub_1001CDD74(v218 + *(void *)(v246 + 72) * v220, v218 + *(void *)(v246 + 72) * *(void *)&v50[16 * v51 + 16], v218 + *(void *)(v246 + 72) * v221, v245);
          uint64_t v247 = v222;
          if (v222) {
            goto LABEL_139;
          }
          if (v221 < v220) {
            goto LABEL_158;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            v223 = v248;
          }
          else {
            v223 = sub_1001CEE74((uint64_t)v248);
          }
          if (v219 >= *((void *)v223 + 2)) {
            goto LABEL_159;
          }
          v224 = &v223[16 * v219 + 32];
          *(void *)v224 = v220;
          *((void *)v224 + 1) = v221;
          unint64_t v225 = *((void *)v223 + 2);
          if (v51 > v225) {
            goto LABEL_160;
          }
          memmove(&v223[16 * v51 + 16], &v223[16 * v51 + 32], 16 * (v225 - v51));
          uint64_t v50 = v223;
          *((void *)v223 + 2) = v225 - 1;
          unint64_t v51 = v225 - 1;
          if (v225 <= 2) {
            goto LABEL_139;
          }
        }
      }
      v217 = v226;
LABEL_139:
      swift_bridgeObjectRelease();
      v217[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v46 = v45 >> 1;
    uint64_t v47 = sub_1001EC630();
    *(void *)(v47 + 16) = v46;
    uint64_t v48 = *(unsigned __int8 *)(v246 + 80);
    v226 = (void *)v47;
    unint64_t v245 = v47 + ((v48 + 32) & ~v48);
  }
  Swift::Int v49 = 0;
  uint64_t v50 = (char *)_swiftEmptyArrayStorage;
  uint64_t v252 = a1;
  v238 = v9;
  uint64_t v237 = v12;
  while (1)
  {
    Swift::Int v52 = v49++;
    v248 = v50;
    Swift::Int v240 = v52;
    if (v49 < v43)
    {
      Swift::Int v260 = v43;
      uint64_t v53 = *a1;
      uint64_t v54 = *(void *)(v246 + 72);
      Swift::Int v257 = v49;
      uint64_t v55 = v230;
      sub_1000936F8(v53 + v54 * v49, v230, &qword_100291EC0);
      uint64_t v234 = (uint64_t (*)())v53;
      uint64_t v264 = v54;
      uint64_t v56 = v53 + v54 * v52;
      uint64_t v57 = v231;
      sub_1000936F8(v56, v231, &qword_100291EC0);
      uint64_t v58 = *(int *)(v269 + 48);
      uint64_t v59 = v232 + v58;
      uint64_t v60 = v256;
      uint64_t v61 = v232 + v58 + *(int *)(v256 + 48);
      uint64_t v62 = v55 + v58;
      v262 = _s4DealVMa;
      v263 = (uint64_t (*)())(v232 + v58);
      sub_1001D089C(v55, v232, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v63 = (double *)(v62 + *(int *)(v60 + 48));
      uint64_t v64 = sub_1001EB0C0();
      Swift::Int v261 = *(void *)(v64 - 8);
      uint64_t v65 = v261 + 16;
      uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v261 + 16);
      v66(v59, v62, v64);
      double v68 = *v63;
      double v67 = v63[1];
      *(double *)uint64_t v61 = *v63;
      *(double *)(v61 + 8) = v67;
      uint64_t v69 = *(int *)(v269 + 48);
      uint64_t v70 = v64;
      uint64_t v71 = v233 + v69;
      uint64_t v72 = v233 + v69 + *(int *)(v60 + 48);
      uint64_t v73 = v57 + v69;
      sub_1001D089C(v57, v233, (uint64_t (*)(void))v262);
      uint64_t v74 = (double *)(v73 + *(int *)(v60 + 48));
      v66(v71, v73, v70);
      double v76 = *v74;
      double v75 = v74[1];
      *(double *)uint64_t v72 = *v74;
      *(double *)(v72 + 8) = v75;
      uint64_t v77 = (uint64_t)v228;
      v66((uint64_t)v228, (uint64_t)v263, v70);
      int64_t v78 = (double *)(v77 + *(int *)(v60 + 48));
      *int64_t v78 = v68;
      v78[1] = v67;
      uint64_t v79 = (uint64_t)v229;
      v254 = v66;
      uint64_t v255 = v65;
      v66((uint64_t)v229, v71, v70);
      uint64_t v80 = (double *)(v79 + *(int *)(v60 + 48));
      *uint64_t v80 = v76;
      v80[1] = v75;
      uint64_t v253 = sub_1000B4468(&qword_100291250);
      if (sub_1001EC330())
      {
        BOOL v81 = v76 < v68;
        if (v76 == v68) {
          BOOL v81 = v75 < v67;
        }
        int v82 = v81;
        LODWORD(v259) = v82;
      }
      else
      {
        sub_1000B4468(&qword_100291C88);
        LODWORD(v259) = sub_1001EC310();
      }
      Swift::Int v43 = v260;
      uint64_t v83 = v263;
      sub_1000816A4(v79, &qword_100297060);
      sub_1000816A4(v77, &qword_100297060);
      Swift::Int v84 = v261 + 8;
      int v85 = *(void (**)(uint64_t, uint64_t))(v261 + 8);
      v85(v71, v70);
      sub_1001D0904(v233, (uint64_t (*)(void))_s4DealVMa);
      Swift::Int v261 = v84;
      v249 = v85;
      v85((uint64_t)v83, v70);
      sub_1001D0904(v232, (uint64_t (*)(void))_s4DealVMa);
      sub_1000816A4(v231, &qword_100291EC0);
      sub_1000816A4(v230, &qword_100291EC0);
      Swift::Int v52 = v240;
      Swift::Int v49 = v240 + 2;
      if (v240 + 2 < v43)
      {
        Swift::Int v236 = v264 * v257;
        uint64_t v86 = v234;
        Swift::Int v235 = v264 * v49;
        while (1)
        {
          Swift::Int v257 = v49;
          uint64_t v87 = v241;
          sub_1000936F8((uint64_t)v86 + v235, v241, &qword_100291EC0);
          v262 = v86;
          uint64_t v88 = v242;
          sub_1000936F8((uint64_t)v86 + v236, v242, &qword_100291EC0);
          uint64_t v89 = v269;
          uint64_t v90 = *(int *)(v269 + 48);
          uint64_t v91 = v243 + v90;
          uint64_t v92 = v70;
          uint64_t v93 = v256;
          uint64_t v94 = v243 + v90 + *(int *)(v256 + 48);
          uint64_t v95 = v87 + v90;
          v263 = _s4DealVMa;
          sub_1001D089C(v87, v243, (uint64_t (*)(void))_s4DealVMa);
          uint64_t v96 = (double *)(v95 + *(int *)(v93 + 48));
          uint64_t v97 = v95;
          uint64_t v98 = v254;
          v254(v91, v97, v92);
          double v99 = *v96;
          double v100 = v96[1];
          *(double *)uint64_t v94 = *v96;
          *(double *)(v94 + 8) = v100;
          uint64_t v101 = *(int *)(v89 + 48);
          uint64_t v102 = v244 + v101;
          uint64_t v103 = v244 + v101 + *(int *)(v93 + 48);
          uint64_t v104 = v88 + v101;
          sub_1001D089C(v88, v244, (uint64_t (*)(void))v263);
          uint64_t v105 = (double *)(v104 + *(int *)(v93 + 48));
          v98(v102, v104, v92);
          double v106 = *v105;
          double v107 = v105[1];
          *(double *)uint64_t v103 = *v105;
          *(double *)(v103 + 8) = v107;
          uint64_t v108 = (uint64_t)v237;
          v98((uint64_t)v237, v91, v92);
          uint64_t v109 = (double *)(v108 + *(int *)(v93 + 48));
          *uint64_t v109 = v99;
          v109[1] = v100;
          uint64_t v110 = (uint64_t)v238;
          v98((uint64_t)v238, v102, v92);
          uint64_t v111 = *(int *)(v93 + 48);
          uint64_t v70 = v92;
          uint64_t v112 = (double *)(v110 + v111);
          *uint64_t v112 = v106;
          v112[1] = v107;
          if (sub_1001EC330())
          {
            uint64_t v113 = v110;
            BOOL v114 = v106 == v99 ? v107 < v100 : v106 < v99;
          }
          else
          {
            sub_1000B4468(&qword_100291C88);
            int v115 = sub_1001EC310();
            uint64_t v113 = v110;
            BOOL v114 = v115;
          }
          sub_1000816A4(v113, &qword_100297060);
          sub_1000816A4(v108, &qword_100297060);
          uint64_t v116 = v102;
          double v117 = v249;
          v249(v116, v92);
          sub_1001D0904(v244, (uint64_t (*)(void))_s4DealVMa);
          v117(v91, v92);
          sub_1001D0904(v243, (uint64_t (*)(void))_s4DealVMa);
          sub_1000816A4(v242, &qword_100291EC0);
          sub_1000816A4(v241, &qword_100291EC0);
          Swift::Int v49 = v257;
          Swift::Int v43 = v260;
          if ((v259 ^ v114)) {
            break;
          }
          Swift::Int v49 = v257 + 1;
          uint64_t v86 = (uint64_t (*)())((char *)v262 + v264);
          if (v260 == v257 + 1)
          {
            Swift::Int v49 = v260;
            break;
          }
        }
        Swift::Int v52 = v240;
      }
      a1 = v252;
      if (v259)
      {
        if (v49 < v52) {
          goto LABEL_163;
        }
        if (v52 < v49)
        {
          Swift::Int v118 = v52;
          uint64_t v119 = 0;
          uint64_t v120 = v264 * (v49 - 1);
          Swift::Int v121 = v49 * v264;
          Swift::Int v122 = v118;
          uint64_t v123 = v118 * v264;
          do
          {
            if (v122 != v49 + v119 - 1)
            {
              v125 = v234;
              if (!v234) {
                goto LABEL_168;
              }
              uint64_t v126 = (char *)v234 + v123;
              v263 = (uint64_t (*)())((char *)v234 + v120);
              sub_1000935F8((uint64_t)v234 + v123, v239, &qword_100291EC0);
              if (v123 < v120 || v126 >= (char *)v125 + v121)
              {
                uint64_t v124 = v263;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v124 = v263;
                if (v123 != v120) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_1000935F8(v239, (uint64_t)v124, &qword_100291EC0);
            }
            ++v122;
            --v119;
            v120 -= v264;
            v121 -= v264;
            v123 += v264;
          }
          while (v122 < v49 + v119);
          Swift::Int v52 = v240;
          Swift::Int v43 = v260;
        }
      }
    }
    if (v49 < v43)
    {
      if (__OFSUB__(v49, v52)) {
        goto LABEL_161;
      }
      if (v49 - v52 < v227) {
        break;
      }
    }
LABEL_73:
    if (v49 < v52) {
      goto LABEL_156;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v50 = v248;
    }
    else {
      uint64_t v50 = sub_1001CE928(0, *((void *)v248 + 2) + 1, 1, v248);
    }
    unint64_t v166 = *((void *)v50 + 2);
    unint64_t v165 = *((void *)v50 + 3);
    unint64_t v51 = v166 + 1;
    if (v166 >= v165 >> 1) {
      uint64_t v50 = sub_1001CE928((char *)(v165 > 1), v166 + 1, 1, v50);
    }
    *((void *)v50 + 2) = v51;
    os_log_type_t v167 = v50 + 32;
    int v168 = &v50[16 * v166 + 32];
    *(void *)int v168 = v52;
    *((void *)v168 + 1) = v49;
    if (v166)
    {
      v248 = v50;
      while (1)
      {
        unint64_t v169 = v51 - 1;
        if (v51 >= 4)
        {
          uint64_t v174 = &v167[16 * v51];
          uint64_t v175 = *((void *)v174 - 8);
          uint64_t v176 = *((void *)v174 - 7);
          BOOL v180 = __OFSUB__(v176, v175);
          uint64_t v177 = v176 - v175;
          if (v180) {
            goto LABEL_145;
          }
          uint64_t v179 = *((void *)v174 - 6);
          uint64_t v178 = *((void *)v174 - 5);
          BOOL v180 = __OFSUB__(v178, v179);
          uint64_t v172 = v178 - v179;
          char v173 = v180;
          if (v180) {
            goto LABEL_146;
          }
          unint64_t v181 = v51 - 2;
          uint64_t v182 = &v167[16 * v51 - 32];
          uint64_t v184 = *(void *)v182;
          uint64_t v183 = *((void *)v182 + 1);
          BOOL v180 = __OFSUB__(v183, v184);
          uint64_t v185 = v183 - v184;
          if (v180) {
            goto LABEL_148;
          }
          BOOL v180 = __OFADD__(v172, v185);
          uint64_t v186 = v172 + v185;
          if (v180) {
            goto LABEL_151;
          }
          if (v186 >= v177)
          {
            uint64_t v204 = &v167[16 * v169];
            uint64_t v206 = *(void *)v204;
            uint64_t v205 = *((void *)v204 + 1);
            BOOL v180 = __OFSUB__(v205, v206);
            uint64_t v207 = v205 - v206;
            if (v180) {
              goto LABEL_155;
            }
            BOOL v197 = v172 < v207;
            goto LABEL_111;
          }
        }
        else
        {
          if (v51 != 3)
          {
            uint64_t v198 = *((void *)v50 + 4);
            uint64_t v199 = *((void *)v50 + 5);
            BOOL v180 = __OFSUB__(v199, v198);
            uint64_t v191 = v199 - v198;
            char v192 = v180;
            goto LABEL_105;
          }
          uint64_t v171 = *((void *)v50 + 4);
          uint64_t v170 = *((void *)v50 + 5);
          BOOL v180 = __OFSUB__(v170, v171);
          uint64_t v172 = v170 - v171;
          char v173 = v180;
        }
        if (v173) {
          goto LABEL_147;
        }
        unint64_t v181 = v51 - 2;
        os_log_type_t v187 = &v167[16 * v51 - 32];
        uint64_t v189 = *(void *)v187;
        uint64_t v188 = *((void *)v187 + 1);
        BOOL v190 = __OFSUB__(v188, v189);
        uint64_t v191 = v188 - v189;
        char v192 = v190;
        if (v190) {
          goto LABEL_150;
        }
        unint64_t v193 = &v167[16 * v169];
        uint64_t v195 = *(void *)v193;
        uint64_t v194 = *((void *)v193 + 1);
        BOOL v180 = __OFSUB__(v194, v195);
        uint64_t v196 = v194 - v195;
        if (v180) {
          goto LABEL_153;
        }
        if (__OFADD__(v191, v196)) {
          goto LABEL_154;
        }
        if (v191 + v196 >= v172)
        {
          BOOL v197 = v172 < v196;
LABEL_111:
          if (v197) {
            unint64_t v169 = v181;
          }
          goto LABEL_113;
        }
LABEL_105:
        if (v192) {
          goto LABEL_149;
        }
        uint64_t v200 = &v167[16 * v169];
        uint64_t v202 = *(void *)v200;
        uint64_t v201 = *((void *)v200 + 1);
        BOOL v180 = __OFSUB__(v201, v202);
        uint64_t v203 = v201 - v202;
        if (v180) {
          goto LABEL_152;
        }
        if (v203 < v191) {
          goto LABEL_14;
        }
LABEL_113:
        unint64_t v208 = v169 - 1;
        if (v169 - 1 >= v51)
        {
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
          goto LABEL_165;
        }
        if (!*a1) {
          goto LABEL_167;
        }
        v209 = &v167[16 * v208];
        uint64_t v210 = *(void *)v209;
        unint64_t v211 = v169;
        uint64_t v212 = &v167[16 * v169];
        uint64_t v213 = *((void *)v212 + 1);
        uint64_t v214 = v247;
        sub_1001CDD74(*a1 + *(void *)(v246 + 72) * *(void *)v209, *a1 + *(void *)(v246 + 72) * *(void *)v212, *a1 + *(void *)(v246 + 72) * v213, v245);
        uint64_t v247 = v214;
        if (v214)
        {
          v217 = v226;
          goto LABEL_139;
        }
        if (v213 < v210) {
          goto LABEL_142;
        }
        v215 = v248;
        if (v211 > *((void *)v248 + 2)) {
          goto LABEL_143;
        }
        *(void *)v209 = v210;
        *(void *)&v167[16 * v208 + 8] = v213;
        unint64_t v216 = *((void *)v215 + 2);
        if (v211 >= v216) {
          goto LABEL_144;
        }
        unint64_t v51 = v216 - 1;
        memmove(v212, v212 + 16, 16 * (v216 - 1 - v211));
        uint64_t v50 = v248;
        *((void *)v248 + 2) = v216 - 1;
        if (v216 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v51 = 1;
LABEL_14:
    Swift::Int v43 = a1[1];
    if (v49 >= v43) {
      goto LABEL_125;
    }
  }
  if (__OFADD__(v52, v227)) {
    goto LABEL_164;
  }
  if (v52 + v227 >= v43) {
    Swift::Int v127 = v43;
  }
  else {
    Swift::Int v127 = v52 + v227;
  }
  if (v127 >= v52)
  {
    if (v49 != v127)
    {
      uint64_t v128 = sub_1001EB0C0();
      uint64_t v129 = *(void *)(v246 + 72);
      v249 = (void (*)(uint64_t, uint64_t))(v128 - 8);
      uint64_t v130 = v129 * (v49 - 1);
      uint64_t v253 = v129;
      Swift::Int v131 = v49 * v129;
      Swift::Int v236 = v127;
      do
      {
        int v133 = 0;
        Swift::Int v257 = v49;
        v254 = (void (*)(uint64_t, uint64_t, uint64_t))v131;
        uint64_t v255 = v130;
        while (1)
        {
          uint64_t v134 = *a1;
          Swift::Int v260 = (Swift::Int)v133 + v131;
          Swift::Int v261 = v52;
          uint64_t v135 = (uint64_t)v133 + v131 + v134;
          uint64_t v136 = v133;
          uint64_t v137 = v265;
          sub_1000936F8(v135, v265, &qword_100291EC0);
          v262 = v136;
          v259 = (char *)v136 + v130;
          uint64_t v138 = (uint64_t)v136 + v130 + v134;
          uint64_t v139 = v266;
          sub_1000936F8(v138, v266, &qword_100291EC0);
          uint64_t v140 = *(int *)(v269 + 48);
          uint64_t v141 = v267 + v140;
          uint64_t v142 = v256;
          uint64_t v143 = v267 + v140 + *(int *)(v256 + 48);
          uint64_t v144 = v137 + v140;
          v263 = _s4DealVMa;
          sub_1001D089C(v137, v267, (uint64_t (*)(void))_s4DealVMa);
          uint64_t v145 = (double *)(v144 + *(int *)(v142 + 48));
          uint64_t v264 = *(void *)(v128 - 8);
          v146 = *(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 16);
          v146(v141, v144, v128);
          double v147 = *v145;
          double v148 = v145[1];
          *(double *)uint64_t v143 = *v145;
          *(double *)(v143 + 8) = v148;
          uint64_t v149 = *(int *)(v269 + 48);
          uint64_t v150 = v268 + v149;
          uint64_t v151 = v268 + v149 + *(int *)(v142 + 48);
          uint64_t v152 = v139 + v149;
          sub_1001D089C(v139, v268, (uint64_t (*)(void))v263);
          v153 = (double *)(v152 + *(int *)(v142 + 48));
          v146(v150, v152, v128);
          double v154 = *v153;
          double v155 = v153[1];
          *(double *)uint64_t v151 = *v153;
          *(double *)(v151 + 8) = v155;
          uint64_t v156 = (uint64_t)v250;
          v146((uint64_t)v250, v141, v128);
          int v157 = (double *)(v156 + *(int *)(v142 + 48));
          *int v157 = v147;
          v157[1] = v148;
          uint64_t v158 = (uint64_t)v251;
          v146((uint64_t)v251, v150, v128);
          uint64_t v159 = (double *)(v158 + *(int *)(v142 + 48));
          *uint64_t v159 = v154;
          v159[1] = v155;
          sub_1000B4468(&qword_100291250);
          if (sub_1001EC330())
          {
            char v160 = v154 == v147 ? v155 < v148 : v154 < v147;
          }
          else
          {
            sub_1000B4468(&qword_100291C88);
            char v160 = sub_1001EC310();
          }
          sub_1000816A4(v158, &qword_100297060);
          sub_1000816A4(v156, &qword_100297060);
          v161 = *(void (**)(uint64_t, uint64_t))(v264 + 8);
          v161(v150, v128);
          sub_1001D0904(v268, (uint64_t (*)(void))_s4DealVMa);
          v161(v141, v128);
          sub_1001D0904(v267, (uint64_t (*)(void))_s4DealVMa);
          sub_1000816A4(v266, &qword_100291EC0);
          sub_1000816A4(v265, &qword_100291EC0);
          a1 = v252;
          uint64_t v130 = v255;
          if ((v160 & 1) == 0) {
            break;
          }
          uint64_t v162 = *v252;
          Swift::Int v132 = v257;
          Swift::Int v131 = (Swift::Int)v254;
          if (!*v252) {
            goto LABEL_166;
          }
          unint64_t v163 = v262;
          v164 = (char *)v262 + v162 + v255;
          sub_1000935F8((uint64_t)v262 + (void)v254 + v162, v258, &qword_100291EC0);
          swift_arrayInitWithTakeFrontToBack();
          sub_1000935F8(v258, (uint64_t)v164, &qword_100291EC0);
          int v133 = (uint64_t (*)())((char *)v163 - v253);
          Swift::Int v52 = v261 + 1;
          if (v132 == v261 + 1) {
            goto LABEL_61;
          }
        }
        Swift::Int v132 = v257;
        Swift::Int v131 = (Swift::Int)v254;
LABEL_61:
        Swift::Int v49 = v132 + 1;
        v130 += v253;
        v131 += v253;
        Swift::Int v52 = v240;
      }
      while (v49 != v236);
      Swift::Int v49 = v236;
    }
    goto LABEL_73;
  }
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  Swift::Int result = sub_1001ECE80();
  __break(1u);
  return result;
}

uint64_t sub_1001CD760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v71 = a4;
  uint64_t v58 = a1;
  uint64_t v64 = sub_10007DC14(&qword_100297060);
  uint64_t v6 = __chkstk_darwin(v64);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (uint64_t (*)())((char *)&v56 - v9);
  uint64_t v78 = sub_10007DC14(&qword_100291EC0);
  uint64_t v11 = *(void *)(v78 - 8);
  uint64_t v12 = __chkstk_darwin(v78);
  uint64_t v68 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v76 = (uint64_t)&v56 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v56 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v75 = (uint64_t)&v56 - v20;
  uint64_t result = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v56 - v22;
  uint64_t v67 = a3;
  uint64_t v57 = a2;
  if (a3 != a2)
  {
    uint64_t v24 = sub_1001EB0C0();
    uint64_t v25 = *(void *)(v11 + 72);
    uint64_t v59 = v24 - 8;
    uint64_t v26 = v25 * (v67 - 1);
    uint64_t v65 = v25;
    uint64_t v77 = v25 * v67;
    uint64_t v62 = v10;
    uint64_t v63 = v8;
    uint64_t v61 = v18;
    uint64_t v60 = v23;
LABEL_5:
    uint64_t v79 = 0;
    uint64_t v72 = v58;
    uint64_t v66 = v26;
    while (1)
    {
      uint64_t v27 = *v71;
      uint64_t v28 = v79;
      uint64_t v70 = v77 + v79;
      sub_1000936F8(v77 + v79 + v27, (uint64_t)v23, &qword_100291EC0);
      uint64_t v69 = v26 + v28;
      uint64_t v29 = v24;
      uint64_t v30 = v75;
      sub_1000936F8(v26 + v28 + v27, v75, &qword_100291EC0);
      uint64_t v31 = *(int *)(v78 + 48);
      uint64_t v32 = (uint64_t (*)())&v18[v31];
      uint64_t v33 = v64;
      uint64_t v34 = (double *)&v18[v31 + *(int *)(v64 + 48)];
      uint64_t v35 = &v23[v31];
      uint64_t v74 = _s4DealVMa;
      sub_1001D089C((uint64_t)v23, (uint64_t)v18, (uint64_t (*)(void))_s4DealVMa);
      uint64_t v36 = (double *)&v35[*(int *)(v33 + 48)];
      uint64_t v73 = *(void *)(v29 - 8);
      uint64_t v37 = *(void (**)(uint64_t (*)(), char *, uint64_t))(v73 + 16);
      v37(v32, v35, v29);
      double v38 = *v36;
      double v39 = v36[1];
      *uint64_t v34 = *v36;
      v34[1] = v39;
      uint64_t v40 = *(int *)(v78 + 48);
      uint64_t v41 = (uint64_t (*)())(v76 + v40);
      uint64_t v42 = v76 + v40 + *(int *)(v33 + 48);
      Swift::Int v43 = (char *)(v30 + v40);
      uint64_t v44 = v30;
      uint64_t v24 = v29;
      sub_1001D089C(v44, v76, (uint64_t (*)(void))v74);
      uint64_t v45 = (double *)&v43[*(int *)(v33 + 48)];
      v37(v41, v43, v24);
      double v46 = *v45;
      double v47 = v45[1];
      *(double *)uint64_t v42 = *v45;
      *(double *)(v42 + 8) = v47;
      uint64_t v49 = (uint64_t)v62;
      uint64_t v48 = (uint64_t)v63;
      uint64_t v74 = v32;
      v37(v62, (char *)v32, v24);
      uint64_t v50 = (double *)(v49 + *(int *)(v33 + 48));
      *uint64_t v50 = v38;
      v50[1] = v39;
      v37((uint64_t (*)())v48, (char *)v41, v24);
      unint64_t v51 = (double *)(v48 + *(int *)(v33 + 48));
      *unint64_t v51 = v46;
      v51[1] = v47;
      sub_1000B4468(&qword_100291250);
      if (sub_1001EC330())
      {
        if (v46 == v38) {
          char v52 = v47 < v39;
        }
        else {
          char v52 = v46 < v38;
        }
      }
      else
      {
        sub_1000B4468(&qword_100291C88);
        char v52 = sub_1001EC310();
      }
      sub_1000816A4(v48, &qword_100297060);
      sub_1000816A4(v49, &qword_100297060);
      uint64_t v53 = *(void (**)(uint64_t (*)(), uint64_t))(v73 + 8);
      v53(v41, v24);
      sub_1001D0904(v76, (uint64_t (*)(void))_s4DealVMa);
      v53(v74, v24);
      uint64_t v18 = v61;
      sub_1001D0904((uint64_t)v61, (uint64_t (*)(void))_s4DealVMa);
      sub_1000816A4(v75, &qword_100291EC0);
      uint64_t v23 = v60;
      uint64_t result = sub_1000816A4((uint64_t)v60, &qword_100291EC0);
      uint64_t v26 = v66;
      if ((v52 & 1) == 0)
      {
LABEL_4:
        v26 += v65;
        v77 += v65;
        if (++v67 == v57) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v54 = *v71;
      if (!*v71) {
        break;
      }
      uint64_t v55 = v54 + v66 + v79;
      sub_1000935F8(v54 + v77 + v79, v68, &qword_100291EC0);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1000935F8(v68, v55, &qword_100291EC0);
      v79 -= v65;
      if (v67 == ++v72) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001CDD74(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v125 = sub_10007DC14(&qword_100297060);
  uint64_t v8 = __chkstk_darwin(v125);
  Swift::Int v118 = (uint64_t (*)())&v110[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v8);
  double v117 = (uint64_t (*)())&v110[-v11];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t (*)())&v110[-v13];
  __chkstk_darwin(v12);
  uint64_t v116 = (uint64_t (*)())&v110[-v15];
  uint64_t v129 = sub_10007DC14(&qword_100291EC0);
  uint64_t v16 = __chkstk_darwin(v129);
  uint64_t v124 = (uint64_t (*)())&v110[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v110[-v19];
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v123 = &v110[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  Swift::Int v122 = &v110[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  Swift::Int v121 = (uint64_t (*)())&v110[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v120 = &v110[-v29];
  __chkstk_darwin(v28);
  uint64_t v119 = &v110[-v31];
  uint64_t v33 = *(void *)(v32 + 72);
  if (!v33)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if (a2 - a1 == 0x8000000000000000 && v33 == -1) {
    goto LABEL_72;
  }
  int64_t v34 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v33 == -1) {
    goto LABEL_73;
  }
  uint64_t v35 = (uint64_t)(a2 - a1) / v33;
  unint64_t v132 = a1;
  unint64_t v131 = a4;
  uint64_t v36 = v34 / v33;
  if (v35 >= v34 / v33)
  {
    if ((v36 & 0x8000000000000000) == 0)
    {
      uint64_t v38 = v36 * v33;
      if (a4 < a2 || a2 + v38 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v73 = a4 + v38;
      unint64_t v130 = a4 + v38;
      unint64_t v132 = a2;
      if (v38 >= 1 && a1 < a2)
      {
        uint64_t v75 = -v33;
        uint64_t v126 = sub_1001EB0C0();
        int v115 = (uint64_t (*)())(v126 - 8);
        unint64_t v111 = a4;
        unint64_t v114 = a1;
        uint64_t v112 = v20;
        uint64_t v116 = (uint64_t (*)())v75;
        do
        {
          unint64_t v127 = a3;
          uint64_t v76 = v122;
          sub_1000936F8(v73 + v75, (uint64_t)v122, &qword_100291EC0);
          unint64_t v128 = a2;
          uint64_t v119 = (unsigned char *)(a2 + v75);
          uint64_t v77 = v123;
          sub_1000936F8(a2 + v75, (uint64_t)v123, &qword_100291EC0);
          uint64_t v78 = *(int *)(v129 + 48);
          uint64_t v79 = (uint64_t (*)())&v20[v78];
          uint64_t v80 = v125;
          BOOL v81 = (double *)&v20[v78 + *(int *)(v125 + 48)];
          int v82 = (uint64_t (*)())&v76[v78];
          Swift::Int v121 = _s4DealVMa;
          sub_1001D089C((uint64_t)v76, (uint64_t)v20, (uint64_t (*)(void))_s4DealVMa);
          uint64_t v83 = (double *)((char *)v82 + *(int *)(v80 + 48));
          uint64_t v84 = v126;
          uint64_t v120 = *(unsigned char **)(v126 - 8);
          int v85 = (void (*)(uint64_t (*)(), uint64_t (*)(), uint64_t))*((void *)v120 + 2);
          v85(v79, v82, v126);
          double v86 = *v83;
          double v87 = v83[1];
          *BOOL v81 = *v83;
          v81[1] = v87;
          uint64_t v88 = *(int *)(v129 + 48);
          uint64_t v89 = (uint64_t (*)())((char *)v124 + v88);
          uint64_t v90 = (double *)((char *)v124 + v88 + *(int *)(v80 + 48));
          uint64_t v91 = (uint64_t (*)())&v77[v88];
          sub_1001D089C((uint64_t)v77, (uint64_t)v124, (uint64_t (*)(void))v121);
          uint64_t v92 = (double *)((char *)v91 + *(int *)(v80 + 48));
          v85(v89, v91, v84);
          double v93 = *v92;
          double v94 = v92[1];
          *uint64_t v90 = *v92;
          v90[1] = v94;
          uint64_t v95 = (uint64_t)v117;
          Swift::Int v121 = v79;
          v85(v117, v79, v84);
          uint64_t v96 = (double *)(v95 + *(int *)(v80 + 48));
          *uint64_t v96 = v86;
          v96[1] = v87;
          uint64_t v97 = (uint64_t)v118;
          v85(v118, v89, v84);
          uint64_t v98 = (double *)(v97 + *(int *)(v80 + 48));
          double *v98 = v93;
          v98[1] = v94;
          sub_1000B4468(&qword_100291250);
          if (sub_1001EC330())
          {
            if (v93 == v86) {
              char v99 = v94 < v87;
            }
            else {
              char v99 = v93 < v86;
            }
          }
          else
          {
            sub_1000B4468(&qword_100291C88);
            char v99 = sub_1001EC310();
          }
          unint64_t v100 = v127;
          uint64_t v75 = (uint64_t)v116;
          uint64_t v101 = (char *)v116 + v127;
          sub_1000816A4(v97, &qword_100297060);
          sub_1000816A4(v95, &qword_100297060);
          uint64_t v102 = (void (*)(char *, uint64_t))*((void *)v120 + 1);
          uint64_t v103 = v126;
          v102((char *)v89, v126);
          sub_1001D0904((uint64_t)v124, (uint64_t (*)(void))_s4DealVMa);
          v102((char *)v121, v103);
          uint64_t v20 = v112;
          sub_1001D0904((uint64_t)v112, (uint64_t (*)(void))_s4DealVMa);
          sub_1000816A4((uint64_t)v123, &qword_100291EC0);
          sub_1000816A4((uint64_t)v122, &qword_100291EC0);
          uint64_t v104 = (unsigned char *)v128;
          unint64_t v105 = v114;
          if (v99)
          {
            if (v100 < v128 || (unint64_t)v101 >= v128)
            {
              uint64_t v104 = v119;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v107 = v111;
            }
            else
            {
              BOOL v106 = v100 == v128;
              unint64_t v107 = v111;
              uint64_t v104 = v119;
              if (!v106) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v132 += v75;
          }
          else
          {
            unint64_t v108 = v130;
            v130 += v75;
            if (v100 < v108 || (unint64_t)v101 >= v108)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v100 != v108)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v107 = v111;
          }
          unint64_t v73 = v130;
          if (v130 <= v107) {
            break;
          }
          a2 = (unint64_t)v104;
          a3 = (unint64_t)v101;
        }
        while ((unint64_t)v104 > v105);
      }
      goto LABEL_70;
    }
  }
  else
  {
    Swift::Int v122 = v30;
    if ((v35 & 0x8000000000000000) == 0)
    {
      uint64_t v37 = v35 * v33;
      int v115 = v14;
      if (a4 < a1 || a1 + v37 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      Swift::Int v118 = (uint64_t (*)())(a4 + v37);
      unint64_t v130 = a4 + v37;
      BOOL v39 = v37 < 1 || a2 >= a3;
      uint64_t v40 = v122;
      if (!v39)
      {
        uint64_t v126 = sub_1001EB0C0();
        unint64_t v127 = a3;
        double v117 = (uint64_t (*)())(v126 - 8);
        uint64_t v113 = v33;
        do
        {
          unint64_t v128 = a2;
          uint64_t v41 = v119;
          sub_1000936F8(a2, (uint64_t)v119, &qword_100291EC0);
          uint64_t v42 = v120;
          sub_1000936F8(a4, (uint64_t)v120, &qword_100291EC0);
          uint64_t v43 = *(int *)(v129 + 48);
          uint64_t v44 = (uint64_t (*)())&v40[v43];
          uint64_t v45 = v125;
          double v46 = (double *)&v40[v43 + *(int *)(v125 + 48)];
          double v47 = (uint64_t (*)())&v41[v43];
          uint64_t v124 = _s4DealVMa;
          sub_1001D089C((uint64_t)v41, (uint64_t)v40, (uint64_t (*)(void))_s4DealVMa);
          uint64_t v48 = (double *)((char *)v47 + *(int *)(v45 + 48));
          uint64_t v49 = v126;
          uint64_t v123 = *(unsigned char **)(v126 - 8);
          uint64_t v50 = (void (*)(uint64_t (*)(), uint64_t (*)(), uint64_t))*((void *)v123 + 2);
          v50(v44, v47, v126);
          double v51 = *v48;
          double v52 = v48[1];
          *double v46 = *v48;
          v46[1] = v52;
          uint64_t v53 = *(int *)(v129 + 48);
          uint64_t v54 = (uint64_t (*)())((char *)v121 + v53);
          uint64_t v55 = (double *)((char *)v121 + v53 + *(int *)(v45 + 48));
          uint64_t v56 = (uint64_t (*)())&v42[v53];
          sub_1001D089C((uint64_t)v42, (uint64_t)v121, (uint64_t (*)(void))v124);
          uint64_t v57 = (double *)((char *)v56 + *(int *)(v45 + 48));
          v50(v54, v56, v49);
          double v58 = *v57;
          double v59 = v57[1];
          *uint64_t v55 = *v57;
          v55[1] = v59;
          uint64_t v60 = (uint64_t)v116;
          uint64_t v124 = v44;
          v50(v116, v44, v49);
          uint64_t v61 = (double *)(v60 + *(int *)(v45 + 48));
          *uint64_t v61 = v51;
          v61[1] = v52;
          uint64_t v62 = (uint64_t)v115;
          v50(v115, v54, v49);
          uint64_t v63 = (double *)(v62 + *(int *)(v45 + 48));
          *uint64_t v63 = v58;
          v63[1] = v59;
          sub_1000B4468(&qword_100291250);
          if (sub_1001EC330())
          {
            if (v58 == v51) {
              char v64 = v59 < v52;
            }
            else {
              char v64 = v58 < v51;
            }
          }
          else
          {
            sub_1000B4468(&qword_100291C88);
            char v64 = sub_1001EC310();
          }
          sub_1000816A4(v62, &qword_100297060);
          sub_1000816A4(v60, &qword_100297060);
          uint64_t v65 = (void (*)(char *, uint64_t))*((void *)v123 + 1);
          uint64_t v66 = v126;
          v65((char *)v54, v126);
          sub_1001D0904((uint64_t)v121, (uint64_t (*)(void))_s4DealVMa);
          v65((char *)v124, v66);
          uint64_t v40 = v122;
          sub_1001D0904((uint64_t)v122, (uint64_t (*)(void))_s4DealVMa);
          sub_1000816A4((uint64_t)v120, &qword_100291EC0);
          sub_1000816A4((uint64_t)v119, &qword_100291EC0);
          unint64_t v67 = v132;
          if (v64)
          {
            uint64_t v68 = v113;
            unint64_t v69 = v128 + v113;
            if (v132 < v128 || v132 >= v69)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v70 = v127;
            }
            else
            {
              unint64_t v70 = v127;
              if (v132 == v128) {
                unint64_t v67 = v128;
              }
              else {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          else
          {
            uint64_t v68 = v113;
            unint64_t v71 = v131 + v113;
            if (v132 < v131 || v132 >= v71)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v70 = v127;
              unint64_t v72 = v128;
            }
            else
            {
              unint64_t v70 = v127;
              unint64_t v72 = v128;
              if (v132 != v131) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v131 = v71;
            unint64_t v69 = v72;
          }
          unint64_t v132 = v67 + v68;
          a4 = v131;
          if (v131 >= (unint64_t)v118) {
            break;
          }
          a2 = v69;
        }
        while (v69 < v70);
      }
LABEL_70:
      sub_1001CED34(&v132, &v131, (uint64_t *)&v130, &qword_100291EC0);
      return 1;
    }
  }
LABEL_74:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

char *sub_1001CE928(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100297068);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001CEA24(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1001CEBD8(a1, a2, a3, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
}

uint64_t sub_1001CEA3C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1001CED34(a1, a2, a3, &qword_100292E40);
}

char *sub_1001CEA48(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1001ECEF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1001CEB04(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1001ECEF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_1001CEBC0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1001CEBD8(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1001CEBD8(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_1001ECEF0();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_1001CED1C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1001CED34(a1, a2, a3, &qword_100291F68);
}

uint64_t sub_1001CED28(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1001CED34(a1, a2, a3, &qword_100291F98);
}

uint64_t sub_1001CED34(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = sub_10007DC14(a4);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_1001ECEF0();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1001CEE74(uint64_t a1)
{
  return sub_1001CE928(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t *sub_1001CEE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v39 = a1 + 56;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v37 = ~v4;
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v38 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = (char *)(a2 + 56);
  uint64_t v8 = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v40 = v8;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v41 = v9;
      unint64_t v11 = v10 | (v9 << 6);
    }
    else
    {
      int64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      if (v12 >= v38) {
        goto LABEL_42;
      }
      unint64_t v13 = *(void *)(v39 + 8 * v12);
      int64_t v14 = v9 + 1;
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v38) {
          goto LABEL_42;
        }
        unint64_t v13 = *(void *)(v39 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v38) {
            goto LABEL_42;
          }
          unint64_t v13 = *(void *)(v39 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v38) {
              goto LABEL_42;
            }
            unint64_t v13 = *(void *)(v39 + 8 * v14);
            if (!v13)
            {
              uint64_t v15 = v9 + 5;
              if (v9 + 5 >= v38)
              {
LABEL_42:
                sub_1000B251C();
                return (unint64_t *)v2;
              }
              unint64_t v13 = *(void *)(v39 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  int64_t v14 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    break;
                  }
                  if (v14 >= v38) {
                    goto LABEL_42;
                  }
                  unint64_t v13 = *(void *)(v39 + 8 * v14);
                  ++v15;
                  if (v13) {
                    goto LABEL_24;
                  }
                }
LABEL_44:
                __break(1u);
              }
              int64_t v14 = v9 + 5;
            }
          }
        }
      }
LABEL_24:
      unint64_t v6 = (v13 - 1) & v13;
      unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      int64_t v41 = v14;
    }
    uint64_t v16 = *(void *)(v8 + 48) + 24 * v11;
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    int v19 = *(unsigned __int8 *)(v16 + 16);
    sub_1001ED170();
    swift_bridgeObjectRetain_n();
    sub_1001EC440();
    swift_bridgeObjectRelease();
    sub_1001ED190(v19);
    Swift::Int v20 = sub_1001ED1A0();
    uint64_t v21 = v2;
    uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v23 = v20 & ~v22;
    if ((*(void *)&v7[(v23 >> 3) & 0xFFFFFFFFFFFFFF8] >> v23)) {
      break;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v2 = v21;
    uint64_t v8 = v40;
    int64_t v9 = v41;
  }
  uint64_t v24 = ~v22;
  uint64_t v25 = *(void *)(v2 + 48);
  while (1)
  {
    uint64_t v26 = v25 + 24 * v23;
    int v27 = *(unsigned __int8 *)(v26 + 16);
    if (*(void *)v26 == v18 && *(void *)(v26 + 8) == v17)
    {
      if (v19 == v27) {
        break;
      }
      goto LABEL_28;
    }
    if ((sub_1001ED080() & 1) != 0 && ((v19 ^ v27) & 1) == 0) {
      break;
    }
LABEL_28:
    unint64_t v23 = (v23 + 1) & v24;
    if (((*(void *)&v7[(v23 >> 3) & 0xFFFFFFFFFFFFFF8] >> v23) & 1) == 0) {
      goto LABEL_6;
    }
  }
  v42[0] = v40;
  v42[1] = v39;
  void v42[2] = v37;
  v42[3] = v41;
  v42[4] = v6;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
  uint64_t v30 = v21;
  char v31 = *(unsigned char *)(v21 + 32);
  unint64_t v32 = (unint64_t)((1 << v31) + 63) >> 6;
  size_t v33 = 8 * v32;
  if ((v31 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v37 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v33);
    int64_t v34 = sub_1001CF610((unint64_t *)((char *)&v37 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v30, v23, v42);
    swift_release();
    sub_1000B251C();
  }
  else
  {
    uint64_t v35 = (void *)swift_slowAlloc();
    memcpy(v35, v7, v33);
    int64_t v34 = sub_1001CF610((unint64_t *)v35, v32, v30, v23, v42);
    swift_release();
    sub_1000B251C();
    swift_slowDealloc();
  }
  return v34;
}

unint64_t *sub_1001CF2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
  uint64_t v26 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v25[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      sub_1001ED170();
      swift_bridgeObjectRetain();
      sub_1001EC440();
      Swift::Int v9 = sub_1001ED1A0();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        unint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1001ED080() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v27 = v5;
LABEL_19:
          char v19 = *(unsigned char *)(v2 + 32);
          unint64_t v20 = (unint64_t)((1 << v19) + 63) >> 6;
          size_t v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_1001CF8E0((void *)((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0)), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_1001CF8E0((unint64_t *)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            swift_slowDealloc();
          }
          return v22;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          uint64_t v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1001ED080() & 1) != 0)
          {
            uint64_t v27 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return (unint64_t *)v2;
      }
    }
  }
  return (unint64_t *)v2;
}

unint64_t *sub_1001CF610(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = *(void *)(a3 + 16);
  int64_t v34 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v8 = a3 + 56;
  uint64_t v35 = a5;
LABEL_2:
  uint64_t v33 = v7;
LABEL_4:
  while (2)
  {
    int64_t v10 = a5[3];
    unint64_t v9 = a5[4];
    if (v9)
    {
      uint64_t v11 = (v9 - 1) & v9;
      unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_22:
      uint64_t v18 = *(void *)(*a5 + 48) + 24 * v12;
      uint64_t v20 = *(void *)v18;
      uint64_t v19 = *(void *)(v18 + 8);
      int v21 = *(unsigned __int8 *)(v18 + 16);
      a5[3] = v10;
      a5[4] = v11;
      sub_1001ED170();
      swift_bridgeObjectRetain();
      sub_1001EC440();
      sub_1001ED190(v21);
      Swift::Int v22 = sub_1001ED1A0();
      uint64_t v23 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v24 = v22 & ~v23;
      if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      {
LABEL_3:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
        uint64_t v5 = a3;
        a5 = v35;
        continue;
      }
      uint64_t v25 = ~v23;
      uint64_t v26 = *(void *)(v5 + 48);
      while (1)
      {
        uint64_t v27 = v26 + 24 * v24;
        int v28 = *(unsigned __int8 *)(v27 + 16);
        if (*(void *)v27 == v20 && *(void *)(v27 + 8) == v19)
        {
          if (v21 == v28) {
            goto LABEL_32;
          }
        }
        else if ((sub_1001ED080() & 1) != 0 && ((v21 ^ v28) & 1) == 0)
        {
LABEL_32:
          uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
          uint64_t v30 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
          a5 = v35;
          uint64_t v31 = *(unint64_t *)((char *)v34 + v30);
          *(unint64_t *)((char *)v34 + v30) = v31 & ~(1 << v24);
          uint64_t v5 = a3;
          if ((v31 & (1 << v24)) != 0)
          {
            uint64_t v7 = v33 - 1;
            if (__OFSUB__(v33, 1)) {
              goto LABEL_41;
            }
            if (v33 == 1) {
              return (unint64_t *)&_swiftEmptySetSingleton;
            }
            goto LABEL_2;
          }
          goto LABEL_4;
        }
        unint64_t v24 = (v24 + 1) & v25;
        if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
          goto LABEL_3;
        }
      }
    }
    break;
  }
  int64_t v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
    if (v13 >= v14)
    {
      int64_t v13 = a5[3];
LABEL_37:
      a5[3] = v13;
      a5[4] = 0;
      swift_retain();
      return (unint64_t *)sub_10016F978(v34, a2, v33, v5);
    }
    uint64_t v15 = a5[1];
    unint64_t v16 = *(void *)(v15 + 8 * v13);
    if (!v16)
    {
      if (v10 + 2 >= v14) {
        goto LABEL_37;
      }
      unint64_t v16 = *(void *)(v15 + 8 * (v10 + 2));
      if (v16)
      {
        int64_t v13 = v10 + 2;
      }
      else
      {
        if (v10 + 3 >= v14)
        {
          int64_t v13 = v10 + 2;
          goto LABEL_37;
        }
        unint64_t v16 = *(void *)(v15 + 8 * (v10 + 3));
        if (v16)
        {
          int64_t v13 = v10 + 3;
        }
        else
        {
          int64_t v13 = v10 + 4;
          if (v10 + 4 >= v14)
          {
            int64_t v13 = v10 + 3;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v15 + 8 * v13);
          if (!v16)
          {
            int64_t v13 = v14 - 1;
            int64_t v17 = v10 + 5;
            while (v14 != v17)
            {
              unint64_t v16 = *(void *)(v15 + 8 * v17++);
              if (v16)
              {
                int64_t v13 = v17 - 1;
                goto LABEL_21;
              }
            }
            goto LABEL_37;
          }
        }
      }
    }
LABEL_21:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    int64_t v10 = v13;
    goto LABEL_22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t *sub_1001CF8E0(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v30 = result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return (unint64_t *)sub_10016FC38(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1001ED170();
    swift_bridgeObjectRetain();
    sub_1001EC440();
    Swift::Int v14 = sub_1001ED1A0();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    uint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1001ED080() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1001ED080() & 1) != 0)
        {
          uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_30;
      }
      --v31;
      if (!v23) {
        return (unint64_t *)&_swiftEmptySetSingleton;
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1001CFB0C(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v15 >= v7) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      int64_t v8 = v15 + 1;
      if (v15 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v3 + 8 * v8);
      if (!v16)
      {
        int64_t v8 = v15 + 2;
        if (v15 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v3 + 8 * v8);
        if (!v16)
        {
          int64_t v8 = v15 + 3;
          if (v15 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v16 = *(void *)(v3 + 8 * v8);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = *(void *)(v2 + 48) + 24 * v10;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 8);
    int v14 = *(unsigned __int8 *)(v11 + 16);
    swift_bridgeObjectRetain();
    sub_10019AFD8(v12, v13, v14);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 4;
  if (v17 < v7)
  {
    unint64_t v16 = *(void *)(v3 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v8 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v3 + 8 * v8);
        ++v17;
        if (v16) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v17;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

void *sub_1001CFCCC(void *a1)
{
  return sub_1000A68CC(0, a1[2], 0, a1);
}

void *sub_1001CFCE0(void *a1)
{
  return sub_1000A6EA0(0, a1[2], 0, a1);
}

void *sub_1001CFCF4(void *a1)
{
  return sub_1000A70C0(0, a1[2], 0, a1);
}

void *sub_1001CFD08(void *a1)
{
  return sub_1000A7204(0, a1[2], 0, a1);
}

uint64_t sub_1001CFD1C(unint64_t a1)
{
  return sub_1000A7328(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1001CFD30(void *a1)
{
  return sub_1000CFC68(0, a1[2], 0, a1);
}

uint64_t sub_1001CFD44(void *a1)
{
  return sub_1000CFDF4(0, a1[2], 0, a1);
}

uint64_t sub_1001CFD58(uint64_t a1)
{
  return sub_1000CFE08(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001CFD6C(void *a1)
{
  return sub_1000CFF68(0, a1[2], 0, a1);
}

uint64_t sub_1001CFD80(void *a1)
{
  return sub_1000D0630(0, a1[2], 0, a1);
}

uint64_t sub_1001CFD94(uint64_t a1)
{
  return sub_1000CFC88(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1001CFDA8(void *a1)
{
  return sub_1000D0904(0, a1[2], 0, a1);
}

uint64_t sub_1001CFDBC(void *a1)
{
  return sub_1000D0918(0, a1[2], 0, a1);
}

void *sub_1001CFDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = _s4DealVMa() - 8;
  uint64_t v6 = __chkstk_darwin(v5);
  int64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v39 = _swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v30 = v2;
    uint64_t v13 = 0;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v34 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v35 = a1 + v34;
    uint64_t v15 = a2 + 56;
    unint64_t v16 = _swiftEmptyArrayStorage;
    uint64_t v36 = a2;
    uint64_t v32 = (char *)&v30 - v10;
    uint64_t v33 = v8;
    uint64_t v31 = v14;
    do
    {
      sub_1001D089C(v35 + v14 * v13, (uint64_t)v11, (uint64_t (*)(void))_s4DealVMa);
      if (*(void *)(a2 + 16))
      {
        int64_t v38 = v16;
        uint64_t v18 = *(void *)v11;
        uint64_t v17 = *((void *)v11 + 1);
        int v19 = v11[16];
        sub_1001ED170();
        swift_bridgeObjectRetain();
        sub_1001EC440();
        sub_1001ED190(v19);
        Swift::Int v20 = sub_1001ED1A0();
        uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v22 = v20 & ~v21;
        if ((*(void *)(v15 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
        {
          uint64_t v23 = ~v21;
          uint64_t v24 = *(void *)(v36 + 48);
          do
          {
            uint64_t v25 = v24 + 24 * v22;
            int v26 = *(unsigned __int8 *)(v25 + 16);
            if (*(void *)v25 == v18 && *(void *)(v25 + 8) == v17)
            {
              if (v19 == v26) {
                goto LABEL_3;
              }
            }
            else if ((sub_1001ED080() & 1) != 0 && ((v19 ^ v26) & 1) == 0)
            {
LABEL_3:
              swift_bridgeObjectRelease();
              uint64_t v11 = v32;
              sub_1001D0904((uint64_t)v32, (uint64_t (*)(void))_s4DealVMa);
              a2 = v36;
              int64_t v8 = v33;
              uint64_t v14 = v31;
              unint64_t v16 = v38;
              goto LABEL_4;
            }
            unint64_t v22 = (v22 + 1) & v23;
          }
          while (((*(void *)(v15 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) != 0);
        }
        swift_bridgeObjectRelease();
        a2 = v36;
        uint64_t v11 = v32;
        int64_t v8 = v33;
        uint64_t v14 = v31;
        unint64_t v16 = v38;
      }
      sub_1001D0834((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))_s4DealVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1000CF8C8(0, v16[2] + 1, 1);
      }
      unint64_t v16 = v39;
      unint64_t v29 = v39[2];
      unint64_t v28 = v39[3];
      if (v29 >= v28 >> 1)
      {
        sub_1000CF8C8(v28 > 1, v29 + 1, 1);
        unint64_t v16 = v39;
      }
      v16[2] = v29 + 1;
      sub_1001D0834((uint64_t)v8, (uint64_t)v16 + v34 + v29 * v14, (uint64_t (*)(void))_s4DealVMa);
LABEL_4:
      ++v13;
    }
    while (v13 != v37);
    return v39;
  }
  return result;
}

void *sub_1001D0118(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = _s4DealVMa() - 8;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v33 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v39 = _swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v12 = 0;
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v38 = *(void *)(v8 + 72);
    uint64_t v30 = v2;
    uint64_t v31 = (v13 + 32) & ~v13;
    uint64_t v35 = a1 + v31;
    uint64_t v14 = a2 + 56;
    uint64_t v32 = _swiftEmptyArrayStorage;
    uint64_t v36 = a2;
    unint64_t v34 = (char *)&v30 - v9;
    while (1)
    {
      sub_1001D089C(v35 + v38 * v12, (uint64_t)v10, (uint64_t (*)(void))_s4DealVMa);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_4;
      }
      uint64_t v16 = *(void *)v10;
      uint64_t v15 = *((void *)v10 + 1);
      int v17 = v10[16];
      sub_1001ED170();
      swift_bridgeObjectRetain();
      sub_1001EC440();
      sub_1001ED190(v17);
      Swift::Int v18 = sub_1001ED1A0();
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v14 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        a2 = v36;
        uint64_t v10 = v34;
LABEL_4:
        sub_1001D0904((uint64_t)v10, (uint64_t (*)(void))_s4DealVMa);
        goto LABEL_5;
      }
      uint64_t v21 = ~v19;
      uint64_t v22 = *(void *)(v36 + 48);
      while (1)
      {
        uint64_t v23 = v22 + 24 * v20;
        int v24 = *(unsigned __int8 *)(v23 + 16);
        if (*(void *)v23 != v16 || *(void *)(v23 + 8) != v15) {
          break;
        }
        if (v17 == v24) {
          goto LABEL_17;
        }
LABEL_10:
        unint64_t v20 = (v20 + 1) & v21;
        if (((*(void *)(v14 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          goto LABEL_3;
        }
      }
      if (sub_1001ED080() & 1) == 0 || ((v17 ^ v24)) {
        goto LABEL_10;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      uint64_t v10 = v34;
      sub_1001D0834((uint64_t)v34, v33, (uint64_t (*)(void))_s4DealVMa);
      int v26 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1000CF8C8(0, v26[2] + 1, 1);
      }
      uint64_t v27 = v39;
      unint64_t v29 = v39[2];
      unint64_t v28 = v39[3];
      if (v29 >= v28 >> 1)
      {
        sub_1000CF8C8(v28 > 1, v29 + 1, 1);
        uint64_t v27 = v39;
      }
      v27[2] = v29 + 1;
      uint64_t v32 = v27;
      sub_1001D0834(v33, (uint64_t)v27 + v31 + v29 * v38, (uint64_t (*)(void))_s4DealVMa);
      a2 = v36;
LABEL_5:
      if (++v12 == v37) {
        return v39;
      }
    }
  }
  return result;
}

void *sub_1001D0458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3;
  uint64_t v29 = a2;
  uint64_t v7 = sub_10007DC14(&qword_100297058);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = _s11TrackedItemVMa();
  uint64_t v10 = __chkstk_darwin(v28);
  uint64_t v27 = (uint64_t)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v24 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v25 = v12;
  uint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  v24[1] = a1;
  int v17 = (unsigned char *)(a1 + 48);
  Swift::Int v18 = _swiftEmptyArrayStorage;
  uint64_t v26 = a4;
  do
  {
    char v19 = *v17;
    uint64_t v20 = *((void *)v17 - 1);
    v30[0] = *((void *)v17 - 2);
    v30[1] = v20;
    char v31 = v19;
    swift_bridgeObjectRetain();
    sub_1001C97EC((uint64_t)v30, v32, a4, (uint64_t)v9);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    swift_bridgeObjectRelease();
    if ((*v16)(v9, 1, v28) == 1)
    {
      sub_1000816A4((uint64_t)v9, &qword_100297058);
    }
    else
    {
      sub_1001D0834((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(void))_s11TrackedItemVMa);
      sub_1001D0834((uint64_t)v14, v27, (uint64_t (*)(void))_s11TrackedItemVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v18 = (void *)sub_1000A7328(0, v18[2] + 1, 1, (unint64_t)v18);
      }
      unint64_t v22 = v18[2];
      unint64_t v21 = v18[3];
      if (v22 >= v21 >> 1) {
        Swift::Int v18 = (void *)sub_1000A7328(v21 > 1, v22 + 1, 1, (unint64_t)v18);
      }
      v18[2] = v22 + 1;
      sub_1001D0834(v27, (uint64_t)v18+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22, (uint64_t (*)(void))_s11TrackedItemVMa);
      a4 = v26;
    }
    v17 += 24;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1001D0754()
{
  unint64_t result = qword_100297050;
  if (!qword_100297050)
  {
    sub_10008155C(&qword_100296D58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100297050);
  }
  return result;
}

uint64_t sub_1001D07B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11TrackedItemVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D0814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001CB1A4(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1001D0834(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001D089C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001D0904(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *_s5StateV14SchedulePolicyOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001D0A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5StateV14SchedulePolicyOMa()
{
  return &_s5StateV14SchedulePolicyON;
}

unint64_t sub_1001D0A6C()
{
  unint64_t result = qword_100297078;
  if (!qword_100297078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100297078);
  }
  return result;
}

unint64_t ReadingHistoryModel.description.getter()
{
  uint64_t v0 = type metadata accessor for ReadingHistoryMonth(0);
  __chkstk_darwin(v0 - 8);
  double v52 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10007DC14(&qword_100291BD0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10007DC14(&qword_100291FA8);
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100291FA0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v48 - v13;
  __chkstk_darwin(v12);
  uint64_t v54 = (uint64_t *)((char *)&v48 - v15);
  uint64_t v16 = sub_10007DC14(&qword_100291F98);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v50 = (uint64_t *)((char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v22 = (uint64_t *)((char *)&v48 - v21);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (uint64_t *)((char *)&v48 - v24);
  __chkstk_darwin(v23);
  double v51 = (uint64_t *)((char *)&v48 - v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v56, v2);
  sub_1000815A4(&qword_100291FB0, &qword_100291BD0);
  sub_1001EC560();
  sub_1000815A4(&qword_100291FB8, &qword_100291FA8);
  sub_1001ECBB0();
  uint64_t v27 = v16;
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v28(v14, 1, v27) == 1)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v55);
    sub_1000816A4((uint64_t)v14, &qword_100291FA0);
    uint64_t v29 = v54;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v54, 1, 1, v27);
  }
  else
  {
    uint64_t v49 = v17;
    sub_1000935F8((uint64_t)v14, (uint64_t)v25, &qword_100291F98);
    uint64_t v30 = v17 + 48;
    uint64_t v31 = v27;
    uint64_t v32 = v55;
    sub_1001ECBB0();
    uint64_t v56 = v30;
    if (v28(v11, 1, v27) != 1)
    {
      do
      {
        sub_1000935F8((uint64_t)v11, (uint64_t)v22, &qword_100291F98);
        if (*v25 >= *v22)
        {
          sub_1000816A4((uint64_t)v22, &qword_100291F98);
        }
        else
        {
          sub_1000816A4((uint64_t)v25, &qword_100291F98);
          sub_1000935F8((uint64_t)v22, (uint64_t)v25, &qword_100291F98);
        }
        sub_1001ECBB0();
        uint64_t v27 = v31;
      }
      while (v28(v11, 1, v31) != 1);
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v7, v32);
    sub_1000816A4((uint64_t)v11, &qword_100291FA0);
    uint64_t v29 = v54;
    sub_1000935F8((uint64_t)v25, (uint64_t)v54, &qword_100291F98);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v49 + 56))(v29, 0, 1, v27);
  }
  unint64_t v33 = 0xD00000000000001BLL;
  if (v28((char *)v29, 1, v27) == 1)
  {
    sub_1000816A4((uint64_t)v29, &qword_100291FA0);
  }
  else
  {
    uint64_t v34 = *(int *)(v27 + 48);
    uint64_t v35 = (uint64_t)v51;
    uint64_t v36 = (char *)v51 + v34;
    uint64_t v37 = v27;
    uint64_t v38 = (char *)v29 + v34;
    uint64_t v39 = *v29;
    *double v51 = *v29;
    uint64_t v40 = sub_10007DC14(&qword_100291FC0);
    uint64_t v41 = *(void *)(v40 - 8);
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v36, v38, v40);
    unint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    sub_1001ECD20(39);
    swift_bridgeObjectRelease();
    unint64_t v58 = 0xD000000000000020;
    unint64_t v59 = 0x8000000100227B90;
    uint64_t v57 = v39;
    v60._countAndFlagsBits = sub_1001ED040();
    sub_1001EC490(v60);
    swift_bridgeObjectRelease();
    v61._countAndFlagsBits = 8250;
    v61._object = (void *)0xE200000000000000;
    sub_1001EC490(v61);
    uint64_t v42 = (char *)v50 + *(int *)(v37 + 48);
    *uint64_t v50 = v39;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v42, v36, v40);
    uint64_t v43 = (uint64_t)v52;
    sub_1001EC100();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
    uint64_t v44 = sub_1001D9E28(7, 0);
    double v46 = v45;
    sub_1001E0E0C(v43, type metadata accessor for ReadingHistoryMonth);
    v62._countAndFlagsBits = v44;
    v62._object = v46;
    sub_1001EC490(v62);
    swift_bridgeObjectRelease();
    v63._countAndFlagsBits = 62;
    v63._object = (void *)0xE100000000000000;
    sub_1001EC490(v63);
    unint64_t v33 = v58;
    sub_1000816A4(v35, &qword_100291F98);
  }
  return v33;
}

uint64_t type metadata accessor for ReadingHistoryMonth(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_100297248);
}

uint64_t sub_1001D1254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v5 = sub_1001EB180();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100291FC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007DC14(&qword_100291FD0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1001EAD80();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = 100 * a1;
  if ((unsigned __int128)(a1 * (__int128)100) >> 64 != (100 * a1) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  BOOL v21 = __OFADD__(v20, a2);
  uint64_t v22 = v20 + a2;
  if (v21)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if (v22 > 9999)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
    uint64_t v27 = sub_1001EB190();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 1, 1, v27);
    sub_1001EAD70();
    sub_1001EB0F0();
    sub_1001EB130();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    uint64_t v23 = sub_1001EB0C0();
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v25 = v23;
    uint64_t v26 = v29;
    return v24(v26, 1, 1, v25);
  }
}

uint64_t sub_1001D1644@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v3 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v38 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5);
  uint64_t v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100291BD8);
  uint64_t v39 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14(&qword_1002973C0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v17 = v2 + *(int *)(type metadata accessor for ReadingHistoryModel(0) + 20);
  sub_1000815A4(&qword_1002973C8, &qword_100291BD8);
  sub_1001EC7A0();
  sub_1001EC7E0();
  sub_1000815A4((unint64_t *)&unk_1002973D0, &qword_1002973C0);
  char v18 = sub_1001EC330();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  v19(v16, v10);
  if (v18)
  {
    uint64_t v20 = type metadata accessor for ReadingHistory.Streak(0);
    BOOL v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v22 = v41;
  }
  else
  {
    uint64_t v23 = v39;
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 16))(v9, v17, v7);
    __chkstk_darwin(v24);
    *(&v34 - 2) = v40;
    uint64_t v25 = sub_1001D7CB0(0, (void (*)(uint64_t *__return_ptr, uint64_t *, char *))sub_1001E3AE4, (uint64_t)(&v34 - 4));
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
    uint64_t v26 = v41;
    if (v25 >= 2)
    {
      uint64_t v42 = v25;
      uint64_t v27 = (uint64_t)v38;
      sub_1001EBF50();
      uint64_t v29 = v36;
      uint64_t v28 = v37;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v27, 1, v37) != 1)
      {
        uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
        uint64_t v32 = v35;
        v31(v35, v27, v28);
        v31(v26, (uint64_t)v32, v28);
        uint64_t v33 = type metadata accessor for ReadingHistory.Streak(0);
        *(void *)&v26[*(int *)(v33 + 20)] = v25;
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v26, 0, 1, v33);
      }
      sub_1000816A4(v27, (uint64_t *)&unk_1002924C0);
    }
    uint64_t v20 = type metadata accessor for ReadingHistory.Streak(0);
    BOOL v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v22 = v26;
  }
  return v21((uint64_t)v22, 1, 1, v20);
}

BOOL sub_1001D1B18(void (*a1)(char *, uint64_t, uint64_t, uint64_t), int a2)
{
  int v29 = a2;
  uint64_t v3 = sub_1001EB0C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_10007DC14(&qword_100296830);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v15);
  uint64_t v16 = type metadata accessor for ReadingHistoryDay(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    sub_1000816A4((uint64_t)v15, &qword_100296830);
  }
  else
  {
    uint64_t v17 = sub_1001EC1A0();
    uint64_t v28 = v10;
    char v18 = v6;
    uint64_t v19 = v3;
    uint64_t v20 = a1;
    uint64_t v21 = v4;
    uint64_t v22 = v17;
    sub_10007DC14(&qword_100291C50);
    sub_1001EBAE0();
    uint64_t v23 = v30;
    sub_1001E0E0C((uint64_t)v15, type metadata accessor for ReadingHistoryDay);
    BOOL v24 = v22 < v23;
    uint64_t v4 = v21;
    a1 = v20;
    uint64_t v3 = v19;
    uint64_t v6 = v18;
    uint64_t v10 = v28;
    if (!v24) {
      return 1;
    }
  }
  if (v29)
  {
    sub_1001DC36C(a1, (uint64_t)v12);
    sub_1000936F8((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_1002924C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
    {
      sub_1000816A4((uint64_t)v12, (uint64_t *)&unk_1002924C0);
      sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_1002924C0);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
    char v25 = sub_1001EB080();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1000816A4((uint64_t)v12, (uint64_t *)&unk_1002924C0);
    return (v25 & 1) != 0;
  }
  return 0;
}

uint64_t sub_1001D1E60(uint64_t a1, int a2)
{
  int v63 = a2;
  uint64_t v3 = sub_10007DC14(&qword_100296830);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v6 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1001EAD80();
  uint64_t v9 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  double v51 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v56 = (uint64_t)&v46 - v15;
  uint64_t v16 = sub_1001EB0C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v57 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v54 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v46 - v21);
  __chkstk_darwin(v20);
  uint64_t v23 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v46 - v22);
  uint64_t v24 = sub_1001EB180();
  uint64_t v46 = *(void *)(v24 - 8);
  uint64_t v47 = v24;
  __chkstk_darwin(v24);
  Swift::String v62 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EB0F0();
  uint64_t v26 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v17 + 16);
  v17 += 16;
  v26(v23, a1, v16);
  uint64_t v27 = 0;
  uint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 32);
  uint64_t v28 = (void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), char *, uint64_t))(v17 + 16);
  int v29 = (uint64_t (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v17 - 8);
  unsigned int v50 = enum case for Calendar.Component.day(_:);
  uint64_t v49 = (void (**)(char *, uint64_t))(v9 + 8);
  unint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  long long v48 = xmmword_100215320;
  Swift::String v60 = v5;
  Swift::String v61 = v14;
  if (v63)
  {
LABEL_5:
    while (1)
    {
      uint64_t v30 = v56;
      sub_1001DC36C(v23, v56);
      sub_1000936F8(v30, (uint64_t)v14, (uint64_t *)&unk_1002924C0);
      if ((*v55)(v14, 1, v16) == 1) {
        break;
      }
      uint64_t v32 = v54;
      uint64_t v53 = *v28;
      v53(v54, v14, v16);
      if ((sub_1001EB080() & 1) == 0)
      {
        (*v29)(v32, v16);
        uint64_t v31 = v56;
        goto LABEL_14;
      }
      sub_10007DC14(&qword_100297340);
      uint64_t v33 = sub_1001EB160();
      uint64_t v34 = *(void *)(v33 - 8);
      unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v48;
      (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v36 + v35, v50, v33);
      sub_1001E3764(v36);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      uint64_t v37 = v51;
      sub_1001EB110();
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_1001EAD40();
      LOBYTE(v33) = v39;
      (*v49)(v37, v52);
      sub_1000816A4(v56, (uint64_t *)&unk_1002924C0);
      uint64_t result = (*v29)(v23, v16);
      if ((v33 & 1) != 0 || v38 < 1)
      {
        uint64_t v5 = v60;
        uint64_t v14 = v61;
      }
      else
      {
        BOOL v41 = __OFADD__(v27, v38);
        v27 += v38;
        uint64_t v5 = v60;
        uint64_t v14 = v61;
        if (v41) {
          goto LABEL_24;
        }
      }
      v53(v23, (char *)v54, v16);
      if ((v63 & 1) == 0) {
        goto LABEL_15;
      }
    }
    sub_1000816A4(v30, (uint64_t *)&unk_1002924C0);
    uint64_t v31 = (uint64_t)v14;
LABEL_14:
    sub_1000816A4(v31, (uint64_t *)&unk_1002924C0);
    goto LABEL_15;
  }
  while (1)
  {
LABEL_15:
    ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v5);
    if ((*v58)(v5, 1, v59) == 1)
    {
      sub_1000816A4((uint64_t)v5, &qword_100296830);
LABEL_22:
      uint64_t v45 = v46;
      uint64_t v44 = v47;
      (*v29)(v23, v16);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v62, v44);
      return v27;
    }
    sub_1001E3A7C((uint64_t)v5, (uint64_t)v8, type metadata accessor for ReadingHistoryDay);
    uint64_t v42 = sub_1001EC1A0();
    sub_10007DC14(&qword_100291C50);
    uint64_t result = sub_1001EBAE0();
    if (v42 < v64)
    {
      sub_1001E0E0C((uint64_t)v8, type metadata accessor for ReadingHistoryDay);
      goto LABEL_22;
    }
    BOOL v41 = __OFADD__(v27++, 1);
    uint64_t v14 = v61;
    if (v41) {
      break;
    }
    uint64_t v43 = v57;
    sub_1001EB020();
    sub_1001E0E0C((uint64_t)v8, type metadata accessor for ReadingHistoryDay);
    (*v29)(v23, v16);
    (*v28)(v23, v43, v16);
    uint64_t v5 = v60;
    if (v63) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1001D25D0(int64_t a1)
{
  int64_t v203 = a1;
  uint64_t v210 = sub_10007DC14(&qword_100297360);
  __chkstk_darwin(v210);
  v209 = (Swift::UInt *)((char *)&v178 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_10007DC14(&qword_100297368);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v188 = (uint64_t)&v178 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v189 = (char *)&v178 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v195 = (uint64_t)&v178 - v9;
  __chkstk_darwin(v8);
  uint64_t v200 = (uint64_t)&v178 - v10;
  uint64_t v194 = sub_10007DC14(&qword_100297370);
  uint64_t v193 = *(void *)(v194 - 8);
  uint64_t v11 = __chkstk_darwin(v194);
  uint64_t v192 = (uint64_t)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v197 = (uint64_t)&v178 - v13;
  uint64_t v191 = sub_10007DC14(&qword_100297378);
  __chkstk_darwin(v191);
  BOOL v190 = (Swift::UInt *)((char *)&v178 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v208 = (void *)sub_10007DC14(&qword_100294F90);
  uint64_t v204 = *(v208 - 1);
  __chkstk_darwin(v208);
  uint64_t v207 = (char *)&v178 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ReadingHistoryMonth(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v206 = (char *)&v178 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10007DC14(&qword_100291F90);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v178 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v178 - v22;
  uint64_t v24 = sub_10007DC14(&qword_100297380);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char *)&v178 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  os_log_type_t v187 = (char *)&v178 - v29;
  __chkstk_darwin(v28);
  uint64_t v205 = (uint64_t *)((char *)&v178 - v30);
  uint64_t v31 = sub_10007DC14(&qword_100291BE0);
  __chkstk_darwin(v31 - 8);
  uint64_t v33 = (char *)&v178 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10007DC14(&qword_100297388);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v185 = (char *)&v178 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v186 = (char *)&v178 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v178 - v41;
  __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v178 - v43;
  uint64_t v212 = &_swiftEmptySetSingleton;
  type metadata accessor for ReadingHistoryModel(0);
  sub_1001E0DA4(&qword_100291BE8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  int64_t v202 = v1;
  sub_1001EC040();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
  {
    uint64_t v45 = &qword_100291BE0;
    goto LABEL_154;
  }
  uint64_t v46 = *(int *)(v34 + 48);
  uint64_t v47 = (uint64_t)&v44[v46];
  uint64_t v48 = (uint64_t)&v33[v46];
  sub_1000935F8((uint64_t)v33, (uint64_t)v44, &qword_100297380);
  sub_1000935F8(v48, v47, &qword_100291FD8);
  uint64_t v181 = v34;
  uint64_t v49 = (uint64_t)&v42[*(int *)(v34 + 48)];
  sub_1000936F8((uint64_t)v44, (uint64_t)v42, &qword_100297380);
  uint64_t v184 = v47;
  sub_1000936F8(v47, v49, &qword_100291FD8);
  unsigned int v50 = (void (**)(void, void, void))v205;
  sub_1000935F8((uint64_t)v42, (uint64_t)v205, &qword_100297380);
  uint64_t v51 = sub_10007DC14(&qword_100297390);
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  uint64_t v183 = v52 + 48;
  uint64_t v182 = v53;
  unsigned int v54 = v53((uint64_t)v50, 1, v51);
  uint64_t v196 = v44;
  uint64_t v201 = v21;
  uint64_t v180 = v51;
  uint64_t v178 = v27;
  uint64_t v179 = v52;
  if (v54 == 1)
  {
    sub_1000816A4(v49, &qword_100291FD8);
    uint64_t result = sub_1000816A4((uint64_t)v50, &qword_100297380);
    uint64_t v56 = &_swiftEmptySetSingleton;
  }
  else
  {
    uint64_t v56 = (void *)sub_1001EBE80();
    (*(void (**)(void (**)(void, void, void), uint64_t))(v52 + 8))(v50, v51);
    uint64_t result = sub_1000816A4(v49, &qword_100291FD8);
  }
  int64_t v57 = 0;
  unint64_t v58 = 0;
  uint64_t v59 = v56[7];
  uint64_t v198 = (char *)(v56 + 7);
  uint64_t v60 = 1 << *((unsigned char *)v56 + 32);
  uint64_t v61 = -1;
  if (v60 < 64) {
    uint64_t v61 = ~(-1 << v60);
  }
  unint64_t v62 = v61 & v59;
  int64_t v199 = (unint64_t)(v60 + 63) >> 6;
  uint64_t v63 = v204;
  v204 += 8;
  uint64_t v205 = (uint64_t *)(v63 + 16);
  uint64_t v64 = (uint64_t)v206;
  if ((v61 & v59) == 0) {
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v65 = v58;
  unint64_t v66 = __clz(__rbit64(v62));
  v62 &= v62 - 1;
  for (unint64_t i = v66 | (v57 << 6); ; unint64_t i = __clz(__rbit64(v69)) + (v57 << 6))
  {
    unint64_t v71 = v56;
    Swift::UInt v72 = *(void *)(v56[6] + 8 * i);
    *(void *)&long long v211 = v72;
    sub_10007DC14(&qword_100291BD0);
    sub_1001EBF50();
    uint64_t v73 = sub_10007DC14(&qword_100291FC0);
    uint64_t v74 = *(void *)(v73 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48))(v23, 1, v73);
    if (result == 1) {
      goto LABEL_167;
    }
    sub_1001EC100();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v23, v73);
    uint64_t v76 = v207;
    uint64_t v75 = v208;
    ((void (*)(char *, uint64_t, void *))*v205)(v207, v64, v208);
    sub_1001E0E0C(v64, type metadata accessor for ReadingHistoryMonth);
    unint64_t v58 = v65;
    sub_1001D3C2C(v76, (uint64_t)&v212, v72);
    uint64_t result = (*(uint64_t (**)(char *, void *))v204)(v76, v75);
    uint64_t v56 = v71;
    if (v62) {
      goto LABEL_9;
    }
LABEL_10:
    BOOL v68 = __OFADD__(v57++, 1);
    if (v68) {
      goto LABEL_161;
    }
    if (v57 >= v199) {
      goto LABEL_28;
    }
    unint64_t v69 = *(void *)&v198[8 * v57];
    if (!v69) {
      break;
    }
LABEL_20:
    uint64_t v65 = v58;
    unint64_t v62 = (v69 - 1) & v69;
  }
  int64_t v70 = v57 + 1;
  if (v57 + 1 >= v199) {
    goto LABEL_28;
  }
  unint64_t v69 = *(void *)&v198[8 * v70];
  if (v69) {
    goto LABEL_19;
  }
  int64_t v70 = v57 + 2;
  if (v57 + 2 >= v199) {
    goto LABEL_28;
  }
  unint64_t v69 = *(void *)&v198[8 * v70];
  if (v69) {
    goto LABEL_19;
  }
  int64_t v70 = v57 + 3;
  if (v57 + 3 >= v199) {
    goto LABEL_28;
  }
  unint64_t v69 = *(void *)&v198[8 * v70];
  if (v69)
  {
LABEL_19:
    int64_t v57 = v70;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v57 = v70 + 1;
    if (__OFADD__(v70, 1)) {
      goto LABEL_163;
    }
    if (v57 >= v199) {
      break;
    }
    unint64_t v69 = *(void *)&v198[8 * v57];
    ++v70;
    if (v69) {
      goto LABEL_20;
    }
  }
LABEL_28:
  uint64_t v77 = v181;
  uint64_t v78 = v180;
  uint64_t v79 = (uint64_t)v187;
  uint64_t v80 = (uint64_t)v186;
  swift_release();
  uint64_t v81 = v80 + *(int *)(v77 + 48);
  sub_1000936F8((uint64_t)v196, v80, &qword_100297380);
  sub_1000936F8(v184, v81, &qword_100291FD8);
  sub_1000935F8(v80, v79, &qword_100297380);
  if (v182(v79, 1, v78) == 1)
  {
    sub_1000816A4(v81, &qword_100291FD8);
    uint64_t result = sub_1000816A4(v79, &qword_100297380);
    int v82 = &_swiftEmptySetSingleton;
  }
  else
  {
    int v82 = (void *)sub_1001EBE90();
    (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v79, v78);
    uint64_t result = sub_1000816A4(v81, &qword_100291FD8);
  }
  int64_t v83 = 0;
  uint64_t v84 = v82[7];
  int64_t v199 = (int64_t)(v82 + 7);
  uint64_t v85 = 1 << *((unsigned char *)v82 + 32);
  uint64_t v86 = -1;
  if (v85 < 64) {
    uint64_t v86 = ~(-1 << v85);
  }
  unint64_t v87 = v86 & v84;
  int64_t v202 = (unint64_t)(v85 + 63) >> 6;
  uint64_t v88 = v201;
  uint64_t v89 = (uint64_t)v206;
  if ((v86 & v84) == 0) {
    goto LABEL_35;
  }
  while (2)
  {
    unint64_t v90 = __clz(__rbit64(v87));
    v87 &= v87 - 1;
    unint64_t v91 = v90 | (v83 << 6);
LABEL_46:
    Swift::UInt v94 = *(void *)(v82[6] + 8 * v91);
    *(void *)&long long v211 = v94;
    sub_10007DC14(&qword_100291BD0);
    sub_1001EBF50();
    uint64_t v95 = sub_10007DC14(&qword_100291FC0);
    uint64_t v96 = *(void *)(v95 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 48))(v88, 1, v95);
    if (result == 1) {
      goto LABEL_168;
    }
    sub_1001EC100();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v88, v95);
    uint64_t v98 = v207;
    uint64_t v97 = v208;
    ((void (*)(char *, uint64_t, void *))*v205)(v207, v89, v208);
    sub_1001E0E0C(v89, type metadata accessor for ReadingHistoryMonth);
    sub_1001D3C2C(v98, (uint64_t)&v212, v94);
    uint64_t result = (*(uint64_t (**)(char *, void *))v204)(v98, v97);
    if (v87) {
      continue;
    }
    break;
  }
LABEL_35:
  BOOL v68 = __OFADD__(v83++, 1);
  if (v68) {
    goto LABEL_162;
  }
  if (v83 >= v202) {
    goto LABEL_53;
  }
  unint64_t v92 = *(void *)(v199 + 8 * v83);
  if (v92)
  {
LABEL_45:
    unint64_t v87 = (v92 - 1) & v92;
    unint64_t v91 = __clz(__rbit64(v92)) + (v83 << 6);
    goto LABEL_46;
  }
  int64_t v93 = v83 + 1;
  if (v83 + 1 >= v202) {
    goto LABEL_53;
  }
  unint64_t v92 = *(void *)(v199 + 8 * v93);
  if (v92) {
    goto LABEL_44;
  }
  int64_t v93 = v83 + 2;
  if (v83 + 2 >= v202) {
    goto LABEL_53;
  }
  unint64_t v92 = *(void *)(v199 + 8 * v93);
  if (v92) {
    goto LABEL_44;
  }
  int64_t v93 = v83 + 3;
  if (v83 + 3 >= v202) {
    goto LABEL_53;
  }
  unint64_t v92 = *(void *)(v199 + 8 * v93);
  if (v92)
  {
LABEL_44:
    int64_t v83 = v93;
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v83 = v93 + 1;
    if (__OFADD__(v93, 1)) {
      goto LABEL_164;
    }
    if (v83 >= v202) {
      break;
    }
    unint64_t v92 = *(void *)(v199 + 8 * v83);
    ++v93;
    if (v92) {
      goto LABEL_45;
    }
  }
LABEL_53:
  uint64_t v201 = v58;
  uint64_t v99 = (uint64_t)v185;
  uint64_t v100 = v181;
  uint64_t v101 = v180;
  swift_release();
  uint64_t v102 = v99 + *(int *)(v100 + 48);
  uint64_t v33 = v196;
  sub_1000936F8((uint64_t)v196, v99, &qword_100297380);
  sub_1000936F8(v184, v102, &qword_100291FD8);
  uint64_t v103 = v99;
  uint64_t v104 = (uint64_t)v178;
  sub_1000935F8(v103, (uint64_t)v178, &qword_100297380);
  if (v182(v104, 1, v101) == 1)
  {
    sub_1000816A4(v102, &qword_100291FD8);
    sub_1000816A4(v104, &qword_100297380);
    goto LABEL_153;
  }
  uint64_t v105 = sub_1001EBEA0();
  (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v104, v101);
  uint64_t result = sub_1000816A4(v102, &qword_100291FD8);
  BOOL v106 = 0;
  uint64_t v107 = *(void *)(v105 + 64);
  int64_t v202 = v105 + 64;
  uint64_t v204 = v105;
  uint64_t v108 = 1 << *(unsigned char *)(v105 + 32);
  if (v108 < 64) {
    uint64_t v109 = ~(-1 << v108);
  }
  else {
    uint64_t v109 = -1;
  }
  unint64_t v110 = v109 & v107;
  int64_t v203 = (unint64_t)(v108 + 63) >> 6;
  while (2)
  {
    if (v110)
    {
      uint64_t v205 = (uint64_t *)((v110 - 1) & v110);
      uint64_t v206 = v106;
      unint64_t v111 = __clz(__rbit64(v110)) | ((void)v106 << 6);
    }
    else
    {
      BOOL v68 = __OFADD__(v106, 1);
      int64_t v112 = (int64_t)(v106 + 1);
      if (v68) {
        goto LABEL_165;
      }
      if (v112 >= v203) {
        goto LABEL_152;
      }
      unint64_t v113 = *(void *)(v202 + 8 * v112);
      if (!v113)
      {
        int64_t v114 = v112 + 1;
        if (v112 + 1 >= v203) {
          goto LABEL_152;
        }
        unint64_t v113 = *(void *)(v202 + 8 * v114);
        if (!v113)
        {
          int64_t v114 = v112 + 2;
          if (v112 + 2 >= v203) {
            goto LABEL_152;
          }
          unint64_t v113 = *(void *)(v202 + 8 * v114);
          if (!v113)
          {
            int64_t v114 = v112 + 3;
            if (v112 + 3 >= v203) {
              goto LABEL_152;
            }
            unint64_t v113 = *(void *)(v202 + 8 * v114);
            if (!v113)
            {
              while (1)
              {
                int64_t v112 = v114 + 1;
                if (__OFADD__(v114, 1)) {
                  goto LABEL_166;
                }
                if (v112 >= v203) {
                  break;
                }
                unint64_t v113 = *(void *)(v202 + 8 * v112);
                ++v114;
                if (v113) {
                  goto LABEL_73;
                }
              }
LABEL_152:
              swift_release();
LABEL_153:
              uint64_t v45 = &qword_100297388;
LABEL_154:
              sub_1000816A4((uint64_t)v33, v45);
              return (uint64_t)v212;
            }
          }
        }
        int64_t v112 = v114;
      }
LABEL_73:
      uint64_t v205 = (uint64_t *)((v113 - 1) & v113);
      uint64_t v206 = (char *)v112;
      unint64_t v111 = __clz(__rbit64(v113)) + (v112 << 6);
    }
    uint64_t v115 = *(void *)(v204 + 56);
    Swift::UInt v116 = *(void *)(*(void *)(v204 + 48) + 8 * v111);
    double v117 = v190;
    *BOOL v190 = v116;
    uint64_t v118 = (uint64_t)v117 + *(int *)(v191 + 48);
    sub_1000936F8(v115 + *(void *)(v193 + 72) * v111, v118, &qword_100297370);
    uint64_t v119 = v194;
    uint64_t v120 = *(int *)(v194 + 48);
    uint64_t v121 = v197;
    uint64_t v122 = v197 + v120;
    uint64_t v123 = *(int *)(v194 + 64);
    uint64_t v124 = v197 + v123;
    uint64_t v125 = v118 + v120;
    uint64_t v126 = v118 + v123;
    sub_1000935F8(v118, v197, &qword_100297368);
    sub_1000935F8(v125, v122, &qword_100297398);
    uint64_t v127 = v126;
    uint64_t v128 = v124;
    sub_1000935F8(v127, v124, &qword_100297398);
    uint64_t v129 = v192;
    uint64_t v130 = v192 + *(int *)(v119 + 48);
    uint64_t v131 = v192 + *(int *)(v119 + 64);
    sub_1000936F8(v121, v192, &qword_100297368);
    sub_1000936F8(v122, v130, &qword_100297398);
    sub_1000936F8(v128, v131, &qword_100297398);
    uint64_t v132 = v200;
    sub_1000935F8(v129, v200, &qword_100297368);
    sub_1000816A4(v131, &qword_100297398);
    sub_1000816A4(v130, &qword_100297398);
    uint64_t v133 = v132;
    uint64_t v134 = v195;
    sub_1000936F8(v133, v195, &qword_100297368);
    uint64_t v135 = sub_10007DC14(&qword_1002973A0);
    uint64_t v136 = *(void *)(v135 - 8);
    unint64_t v208 = *(void **)(v136 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v208)(v134, 1, v135) == 1)
    {
      uint64_t result = sub_1000816A4(v134, &qword_100297368);
      uint64_t v137 = &_swiftEmptySetSingleton;
    }
    else
    {
      uint64_t v137 = (unsigned char *)sub_1001EBE80();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v136 + 8))(v134, v135);
    }
    int64_t v138 = 0;
    uint64_t v139 = v137 + 56;
    uint64_t v140 = 1 << v137[32];
    if (v140 < 64) {
      uint64_t v141 = ~(-1 << v140);
    }
    else {
      uint64_t v141 = -1;
    }
    unint64_t v142 = v141 & *((void *)v137 + 7);
    int64_t v143 = (unint64_t)(v140 + 63) >> 6;
    while (2)
    {
      if (v142)
      {
        unint64_t v144 = __clz(__rbit64(v142));
        v142 &= v142 - 1;
        unint64_t v145 = v144 | (v138 << 6);
        goto LABEL_82;
      }
      BOOL v68 = __OFADD__(v138++, 1);
      if (v68)
      {
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
        goto LABEL_158;
      }
      if (v138 >= v143) {
        break;
      }
      unint64_t v146 = *(void *)&v139[8 * v138];
      if (v146) {
        goto LABEL_94;
      }
      int64_t v147 = v138 + 1;
      if (v138 + 1 >= v143) {
        break;
      }
      unint64_t v146 = *(void *)&v139[8 * v147];
      if (v146) {
        goto LABEL_93;
      }
      int64_t v147 = v138 + 2;
      if (v138 + 2 >= v143) {
        break;
      }
      unint64_t v146 = *(void *)&v139[8 * v147];
      if (v146) {
        goto LABEL_93;
      }
      int64_t v147 = v138 + 3;
      if (v138 + 3 < v143)
      {
        unint64_t v146 = *(void *)&v139[8 * v147];
        if (!v146)
        {
          while (1)
          {
            int64_t v138 = v147 + 1;
            if (__OFADD__(v147, 1)) {
              break;
            }
            if (v138 >= v143) {
              goto LABEL_99;
            }
            unint64_t v146 = *(void *)&v139[8 * v138];
            ++v147;
            if (v146) {
              goto LABEL_94;
            }
          }
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
LABEL_93:
        int64_t v138 = v147;
LABEL_94:
        unint64_t v142 = (v146 - 1) & v146;
        unint64_t v145 = __clz(__rbit64(v146)) + (v138 << 6);
LABEL_82:
        uint64_t result = sub_100197AC8(&v211, v116, *(void *)(*((void *)v137 + 6) + 8 * v145));
        continue;
      }
      break;
    }
LABEL_99:
    uint64_t v148 = (uint64_t)v189;
    swift_release();
    sub_1000936F8(v200, v148, &qword_100297368);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v208)(v148, 1, v135) == 1)
    {
      uint64_t result = sub_1000816A4(v148, &qword_100297368);
      uint64_t v149 = &_swiftEmptySetSingleton;
    }
    else
    {
      uint64_t v149 = (unsigned char *)sub_1001EBE90();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v136 + 8))(v148, v135);
    }
    int64_t v150 = 0;
    uint64_t v151 = v149 + 56;
    uint64_t v152 = 1 << v149[32];
    if (v152 < 64) {
      uint64_t v153 = ~(-1 << v152);
    }
    else {
      uint64_t v153 = -1;
    }
    unint64_t v154 = v153 & *((void *)v149 + 7);
    int64_t v155 = (unint64_t)(v152 + 63) >> 6;
    while (2)
    {
      if (v154)
      {
        unint64_t v156 = __clz(__rbit64(v154));
        v154 &= v154 - 1;
        unint64_t v157 = v156 | (v150 << 6);
LABEL_107:
        uint64_t result = sub_100197AC8(&v211, v116, *(void *)(*((void *)v149 + 6) + 8 * v157));
        continue;
      }
      break;
    }
    BOOL v68 = __OFADD__(v150++, 1);
    if (v68) {
      goto LABEL_156;
    }
    if (v150 < v155)
    {
      unint64_t v158 = *(void *)&v151[8 * v150];
      if (!v158)
      {
        int64_t v159 = v150 + 1;
        if (v150 + 1 >= v155) {
          goto LABEL_124;
        }
        unint64_t v158 = *(void *)&v151[8 * v159];
        if (!v158)
        {
          int64_t v159 = v150 + 2;
          if (v150 + 2 >= v155) {
            goto LABEL_124;
          }
          unint64_t v158 = *(void *)&v151[8 * v159];
          if (!v158)
          {
            int64_t v159 = v150 + 3;
            if (v150 + 3 >= v155) {
              goto LABEL_124;
            }
            unint64_t v158 = *(void *)&v151[8 * v159];
            if (!v158)
            {
              while (1)
              {
                int64_t v150 = v159 + 1;
                if (__OFADD__(v159, 1)) {
                  break;
                }
                if (v150 >= v155) {
                  goto LABEL_124;
                }
                unint64_t v158 = *(void *)&v151[8 * v150];
                ++v159;
                if (v158) {
                  goto LABEL_119;
                }
              }
LABEL_159:
              __break(1u);
              goto LABEL_160;
            }
          }
        }
        int64_t v150 = v159;
      }
LABEL_119:
      unint64_t v154 = (v158 - 1) & v158;
      unint64_t v157 = __clz(__rbit64(v158)) + (v150 << 6);
      goto LABEL_107;
    }
LABEL_124:
    swift_release();
    uint64_t v160 = v188;
    sub_1000936F8(v200, v188, &qword_100297368);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v208)(v160, 1, v135) == 1)
    {
      sub_1000816A4(v160, &qword_100297368);
      uint64_t v33 = v196;
      BOOL v106 = v206;
LABEL_60:
      unint64_t v110 = (unint64_t)v205;
      sub_1000816A4(v200, &qword_100297368);
      uint64_t result = sub_1000816A4(v197, &qword_100297370);
      continue;
    }
    break;
  }
  uint64_t v161 = sub_1001EBEA0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v136 + 8))(v160, v135);
  uint64_t v162 = 0;
  uint64_t v163 = *(void *)(v161 + 64);
  uint64_t v207 = (char *)(v161 + 64);
  uint64_t v164 = 1 << *(unsigned char *)(v161 + 32);
  if (v164 < 64) {
    uint64_t v165 = ~(-1 << v164);
  }
  else {
    uint64_t v165 = -1;
  }
  unint64_t v166 = v165 & v163;
  unint64_t v208 = (void *)((unint64_t)(v164 + 63) >> 6);
  while (2)
  {
    if (v166)
    {
      unint64_t v167 = __clz(__rbit64(v166));
      v166 &= v166 - 1;
      unint64_t v168 = v167 | (v162 << 6);
LABEL_130:
      uint64_t v169 = *(void *)(v161 + 56);
      Swift::UInt v170 = *(void *)(*(void *)(v161 + 48) + 8 * v168);
      uint64_t v171 = v209;
      Swift::UInt *v209 = v170;
      uint64_t v172 = (int *)(sub_10007DC14(&qword_1002973A8) - 8);
      uint64_t v173 = v169 + *(void *)(*(void *)v172 + 72) * v168;
      uint64_t v174 = (uint64_t)v171 + *(int *)(v210 + 48);
      sub_1000936F8(v173, v174, &qword_1002973A8);
      uint64_t v175 = v174 + v172[14];
      sub_100197AC8(&v211, v116, v170);
      uint64_t result = sub_1000816A4(v175, &qword_100297398);
      continue;
    }
    break;
  }
  BOOL v68 = __OFADD__(v162++, 1);
  if (v68) {
    goto LABEL_157;
  }
  if (v162 >= (uint64_t)v208)
  {
LABEL_147:
    swift_release();
    uint64_t v33 = v196;
    BOOL v106 = v206;
    goto LABEL_60;
  }
  unint64_t v176 = *(void *)&v207[8 * v162];
  if (v176)
  {
LABEL_142:
    unint64_t v166 = (v176 - 1) & v176;
    unint64_t v168 = __clz(__rbit64(v176)) + (v162 << 6);
    goto LABEL_130;
  }
  uint64_t v177 = v162 + 1;
  if (v162 + 1 >= (uint64_t)v208) {
    goto LABEL_147;
  }
  unint64_t v176 = *(void *)&v207[8 * v177];
  if (v176) {
    goto LABEL_141;
  }
  uint64_t v177 = v162 + 2;
  if (v162 + 2 >= (uint64_t)v208) {
    goto LABEL_147;
  }
  unint64_t v176 = *(void *)&v207[8 * v177];
  if (v176) {
    goto LABEL_141;
  }
  uint64_t v177 = v162 + 3;
  if (v162 + 3 >= (uint64_t)v208) {
    goto LABEL_147;
  }
  unint64_t v176 = *(void *)&v207[8 * v177];
  if (v176)
  {
LABEL_141:
    uint64_t v162 = v177;
    goto LABEL_142;
  }
  while (1)
  {
    uint64_t v162 = v177 + 1;
    if (__OFADD__(v177, 1)) {
      break;
    }
    if (v162 >= (uint64_t)v208) {
      goto LABEL_147;
    }
    unint64_t v176 = *(void *)&v207[8 * v162];
    ++v177;
    if (v176) {
      goto LABEL_142;
    }
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
  return result;
}

uint64_t sub_1001D3C2C(char *a1, uint64_t a2, Swift::UInt a3)
{
  uint64_t v22 = a2;
  Swift::UInt v23 = a3;
  uint64_t v25 = a1;
  uint64_t v20 = sub_10007DC14(&qword_100292E40);
  uint64_t v3 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v5 = (Swift::UInt *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10007DC14(&qword_100294F68);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100294F90);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14(&qword_100294F70);
  uint64_t v21 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v25, v9);
  sub_1000815A4(&qword_1002973B0, &qword_100294F90);
  sub_1001EC560();
  sub_1000815A4(&qword_1002973B8, &qword_100294F70);
  uint64_t v25 = v15;
  sub_1001ECBB0();
  uint64_t v16 = v20;
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v17(v8, 1, v20) != 1)
  {
    do
    {
      sub_1000935F8((uint64_t)v8, (uint64_t)v5, &qword_100292E40);
      sub_100197AC8(&v24, v23, *v5);
      sub_1000816A4((uint64_t)v5, &qword_100292E40);
      sub_1001ECBB0();
    }
    while (v17(v8, 1, v16) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v25, v13);
}

uint64_t ReadingHistoryModel.readingHistoryDay(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v1 = sub_10007DC14(&qword_100294F90);
  uint64_t v45 = *(void *)(v1 - 8);
  uint64_t v46 = v1;
  __chkstk_darwin(v1);
  uint64_t v43 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ReadingHistoryMonth(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v42 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007DC14(&qword_100291F90);
  __chkstk_darwin(v5 - 8);
  uint64_t v47 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_100292000);
  __chkstk_darwin(v7 - 8);
  uint64_t v44 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EB160();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001EB180();
  uint64_t v48 = *(void *)(v13 - 8);
  uint64_t v49 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EB0F0();
  uint64_t v16 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  v16(v12, enum case for Calendar.Component.year(_:), v9);
  uint64_t v17 = sub_1001EB170();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  v16(v12, enum case for Calendar.Component.month(_:), v9);
  uint64_t v19 = sub_1001EB170();
  v18(v12, v9);
  v16(v12, enum case for Calendar.Component.day(_:), v9);
  uint64_t v20 = v15;
  uint64_t v21 = sub_1001EB170();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v12, v9);
  uint64_t v23 = 100 * v17;
  if ((unsigned __int128)(v17 * (__int128)100) >> 64 != (100 * v17) >> 63)
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v24 = __OFADD__(v23, v19);
  uint64_t v25 = v23 + v19;
  if (v24)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v51 = v25;
  sub_10007DC14(&qword_100291BD0);
  uint64_t v26 = v47;
  sub_1001EBF50();
  uint64_t v27 = sub_10007DC14(&qword_100291FC0);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v49);
    uint64_t v29 = &qword_100291F90;
    uint64_t v30 = (uint64_t)v26;
LABEL_7:
    sub_1000816A4(v30, v29);
    uint64_t v38 = type metadata accessor for ReadingHistoryDay(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v50, 1, 1, v38);
  }
  uint64_t v31 = (uint64_t)v42;
  sub_1001EC100();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
  uint64_t v33 = v45;
  uint64_t v32 = v46;
  uint64_t v34 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v43, v31, v46);
  sub_1001E0E0C(v31, type metadata accessor for ReadingHistoryMonth);
  uint64_t v51 = v21;
  uint64_t v35 = v44;
  sub_1001EBF50();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  uint64_t v36 = sub_10007DC14(&qword_100291220);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v49);
    uint64_t v29 = (uint64_t *)&unk_100292000;
    uint64_t v30 = (uint64_t)v35;
    goto LABEL_7;
  }
  uint64_t v39 = v50;
  sub_1001EC100();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v20, v49);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  uint64_t v40 = type metadata accessor for ReadingHistoryDay(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
}

uint64_t ReadingHistoryModel.setGoal(_:date:)(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v3 = sub_10007DC14(&qword_100291F90);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007DC14(&qword_100291FC0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ReadingHistoryMonth(0);
  uint64_t v10 = __chkstk_darwin(v27);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = sub_1001EB0C0();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v18 + 16))(v17, a2);
  uint64_t v19 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v17);
  uint64_t v21 = v20;
  v29[0] = v19;
  sub_10007DC14(&qword_100291BD0);
  sub_1001EBF30();
  sub_1001EC130();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v29[4] = v21;
  v29[5] = v26;
  sub_10007DC14(&qword_100294F90);
  uint64_t v22 = (void (*)(void *, void))sub_1001EBF20();
  sub_10007DC14(&qword_100291220);
  uint64_t v23 = (void (*)(unsigned char *, void))sub_1001EC120();
  type metadata accessor for ReadingHistoryDay(0);
  sub_10007DC14(&qword_100291C50);
  sub_1001EBAF0();
  v23(v28, 0);
  v22(v29, 0);
  sub_1001E0D3C((uint64_t)v14, (uint64_t)v12, type metadata accessor for ReadingHistoryMonth);
  sub_1001E0DA4(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  sub_1001EC140();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v29[0] = v19;
  sub_1001EBF60();
  return sub_1001E0E0C((uint64_t)v14, type metadata accessor for ReadingHistoryMonth);
}

BOOL static ReadingHistoryModel.DayKey.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL static ReadingHistoryModel.DayKey.< infix(_:_:)(BOOL result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = 100 * result;
  if ((unsigned __int128)(result * (__int128)100) >> 64 != (100 * result) >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  BOOL v5 = __OFADD__(v4, a2);
  uint64_t v6 = v4 + a2;
  if (v5)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = 100 * a3;
  if ((unsigned __int128)(a3 * (__int128)100) >> 64 != (100 * a3) >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  BOOL v5 = __OFADD__(v7, a4);
  uint64_t v8 = v7 + a4;
  if (!v5) {
    return v6 < v8;
  }
LABEL_9:
  __break(1u);
  return result;
}

BOOL sub_1001D4A24(void (*a1)(char *, uint64_t, uint64_t, uint64_t), int a2)
{
  int v28 = a2;
  uint64_t v3 = sub_1001EB0C0();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_1001EC1D0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10007DC14(&qword_100296830);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v17);
  uint64_t v19 = type metadata accessor for ReadingHistoryDay(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v17, 1, v19) == 1)
  {
    sub_1000816A4((uint64_t)v17, &qword_100296830);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    sub_1001E0E0C((uint64_t)v17, type metadata accessor for ReadingHistoryDay);
    uint64_t v20 = sub_1001EC1A0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (v20 > 0) {
      return 1;
    }
  }
  if (v28)
  {
    sub_1001DC36C(v18, (uint64_t)v10);
    sub_1000936F8((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_1002924C0);
    uint64_t v21 = v27;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v8, 1, v3) == 1)
    {
      sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_1002924C0);
      sub_1000816A4((uint64_t)v8, (uint64_t *)&unk_1002924C0);
      return 0;
    }
    uint64_t v22 = v26;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v8, v3);
    char v23 = sub_1001EB080();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v3);
    sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_1002924C0);
    return (v23 & 1) != 0;
  }
  return 0;
}

uint64_t ReadingHistoryModel.incrementReadingTime(date:amount:defaultGoal:)(uint64_t a1, Swift::Int a2, uint64_t a3)
{
  uint64_t v27 = a3;
  Swift::Int v29 = a2;
  uint64_t v4 = sub_10007DC14(&qword_100291F90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100291FC0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ReadingHistoryMonth(0);
  uint64_t v11 = __chkstk_darwin(v28);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v25 - v14;
  uint64_t v16 = sub_1001EB0C0();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v19 + 16))(v18, a1);
  uint64_t v26 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v18);
  uint64_t v21 = v20;
  v31[0] = v26;
  v25[1] = sub_10007DC14(&qword_100291BD0);
  sub_1001EBF30();
  sub_1001EC130();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)(swift_allocObject() + 16) = v27;
  v31[4] = v21;
  sub_10007DC14(&qword_100294F90);
  uint64_t v22 = (void (*)(void *, void))sub_1001EBF20();
  sub_10007DC14(&qword_100291220);
  char v23 = (void (*)(unsigned char *, void))sub_1001EC120();
  sub_1001EC1B0(v29);
  v23(v30, 0);
  v22(v31, 0);
  sub_1001E0D3C((uint64_t)v15, (uint64_t)v13, type metadata accessor for ReadingHistoryMonth);
  sub_1001E0DA4(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  sub_1001EC140();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v31[0] = v26;
  sub_1001EBF60();
  sub_1001E0E0C((uint64_t)v15, type metadata accessor for ReadingHistoryMonth);
  return swift_release();
}

uint64_t ReadingHistoryModel.mergeDay(date:day:)(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v4 = sub_10007DC14(&qword_100291F90);
  __chkstk_darwin(v4 - 8);
  uint64_t v48 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for ReadingHistoryDay(0);
  __chkstk_darwin(v50);
  uint64_t v41 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_100292000);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v42 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = sub_10007DC14(&qword_100291FC0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for ReadingHistoryMonth(0);
  uint64_t v16 = __chkstk_darwin(v46);
  uint64_t v45 = (uint64_t)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = sub_1001EB0C0();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v23 + 16))(v22, a1);
  uint64_t v24 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v22);
  uint64_t v26 = v25;
  uint64_t v44 = v24;
  v53[0] = v24;
  uint64_t v43 = sub_10007DC14(&qword_100291BD0);
  uint64_t v49 = v2;
  sub_1001EBF30();
  sub_1001EC130();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v47 = v12;
  v27(v15, v12);
  v53[0] = v26;
  sub_10007DC14(&qword_100294F90);
  sub_1001EBF50();
  uint64_t v28 = sub_10007DC14(&qword_100291220);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v11, 1, v28);
  sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_100292000);
  if (v31 == 1)
  {
    sub_1001E0D3C(v51, v41, type metadata accessor for ReadingHistoryDay);
    sub_1001E0DA4((unint64_t *)&unk_100296890, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
    uint64_t v32 = v42;
    sub_1001EC140();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v32, 0, 1, v28);
    v53[0] = v26;
    sub_1001EBF60();
LABEL_5:
    uint64_t v37 = v48;
    uint64_t v38 = v47;
    uint64_t v39 = v44;
    sub_1001E0D3C((uint64_t)v19, v45, type metadata accessor for ReadingHistoryMonth);
    sub_1001E0DA4(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
    sub_1001EC140();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v37, 0, 1, v38);
    v53[0] = v39;
    sub_1001EBF60();
    return sub_1001E0E0C((uint64_t)v19, type metadata accessor for ReadingHistoryMonth);
  }
  v53[4] = v26;
  uint64_t v33 = (void (*)(void *, void))sub_1001EBF40();
  uint64_t result = v30(v34, 1, v28);
  if (result != 1)
  {
    uint64_t v36 = (void (*)(char *, void))sub_1001EC120();
    sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
    sub_1001EBCF0();
    v36(v52, 0);
    v33(v53, 0);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D57FC(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100291F90);
  __chkstk_darwin(v2 - 8);
  uint64_t v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100292000);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100291FC0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ReadingHistoryMonth(0);
  uint64_t v11 = __chkstk_darwin(v27);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = sub_1001EB0C0();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v19 + 16))(v18, a1);
  uint64_t v26 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v18);
  uint64_t v21 = v20;
  uint64_t v29 = v26;
  sub_10007DC14(&qword_100291BD0);
  sub_1001EBF30();
  sub_1001EC130();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v22 = sub_10007DC14(&qword_100291220);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
  uint64_t v29 = v21;
  sub_10007DC14(&qword_100294F90);
  sub_1001EBF60();
  sub_1001E0D3C((uint64_t)v15, (uint64_t)v13, type metadata accessor for ReadingHistoryMonth);
  sub_1001E0DA4(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  uint64_t v23 = v28;
  sub_1001EC140();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
  uint64_t v29 = v26;
  sub_1001EBF60();
  return sub_1001E0E0C((uint64_t)v15, type metadata accessor for ReadingHistoryMonth);
}

uint64_t sub_1001D5BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100292000);
  __chkstk_darwin(v5 - 8);
  unint64_t v92 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100294F68);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  int64_t v93 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v71 - v10);
  uint64_t v94 = sub_10007DC14(&qword_100294F70);
  uint64_t v86 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v96 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14(&qword_100294F78);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_t v84 = (os_log_t)((char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  int64_t v83 = (char *)&v71 - v17;
  uint64_t v88 = type metadata accessor for ReadingHistoryMonth(0);
  uint64_t v18 = __chkstk_darwin(v88);
  uint64_t v85 = (uint64_t)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v95 = (uint64_t)&v71 - v21;
  __chkstk_darwin(v20);
  uint64_t v89 = (uint64_t)&v71 - v22;
  uint64_t v23 = sub_10007DC14(&qword_100291FC0);
  uint64_t v90 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10007DC14(&qword_100291F90);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v71 - v29;
  __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v71 - v32;
  uint64_t v34 = 100 * a1;
  if ((unsigned __int128)(a1 * (__int128)100) >> 64 != (100 * a1) >> 63)
  {
    __break(1u);
    goto LABEL_26;
  }
  BOOL v35 = __OFADD__(v34, a2);
  uint64_t v36 = v34 + a2;
  if (v35)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v79 = v14;
  uint64_t v80 = v13;
  uint64_t v82 = v31;
  uint64_t v87 = v36;
  uint64_t v97 = v36;
  uint64_t v81 = sub_10007DC14(&qword_100291BD0);
  uint64_t v91 = v23;
  sub_1001EBF50();
  uint64_t v37 = v91;
  sub_1000936F8((uint64_t)v33, (uint64_t)v30, &qword_100291F90);
  uint64_t v38 = v90;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v30, 1, v37) != 1)
  {
    uint64_t v77 = v33;
    uint64_t v78 = v2;
    uint64_t v40 = a2;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v25, v30, v37);
    uint64_t v41 = v25;
    uint64_t v42 = v89;
    sub_1001EC100();
    uint64_t v43 = sub_10007DC14(&qword_100294F90);
    sub_1000815A4(&qword_100294F98, &qword_100294F90);
    if ((sub_1001EC7B0() & 1) == 0)
    {
      sub_1001E0E0C(v42, type metadata accessor for ReadingHistoryMonth);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
LABEL_23:
      uint64_t v39 = (uint64_t)v77;
      return sub_1000816A4(v39, &qword_100291F90);
    }
    uint64_t v44 = sub_10007DC14(&qword_100291C50);
    uint64_t v72 = v43;
    uint64_t v45 = a1;
    uint64_t v46 = v44;
    sub_1001EBAE0();
    uint64_t v73 = v97;
    uint64_t v76 = sub_1001DCC20(v45, v40);
    uint64_t v74 = v46;
    sub_1001EBAE0();
    a1 = v97;
    a2 = sub_1001DCF28(v45, v40);
    uint64_t v75 = v41;
    sub_1001EC130();
    uint64_t v47 = v83;
    uint64_t v13 = v72;
    sub_1001EC7A0();
    os_log_t v48 = v84;
    sub_1001EC7E0();
    uint64_t v71 = sub_1001EC7D0();
    uint64_t v49 = v80;
    uint64_t v30 = *(char **)(v79 + 8);
    ((void (*)(os_log_t, uint64_t))v30)(v48, v80);
    ((void (*)(char *, uint64_t))v30)(v47, v49);
    LOBYTE(v30) = sub_1001EC910();
    if (qword_1002910E8 == -1)
    {
LABEL_7:
      uint64_t v50 = (void *)qword_100293A68;
      BOOL v51 = os_log_type_enabled((os_log_t)qword_100293A68, (os_log_type_t)v30);
      uint64_t v52 = a1;
      uint64_t v53 = v73;
      uint64_t v54 = a2;
      if (v51)
      {
        os_log_t v84 = v50;
        uint64_t v55 = swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = 134219264;
        uint64_t v97 = v71;
        sub_1001ECBC0();
        *(_WORD *)(v55 + 12) = 2048;
        uint64_t v97 = v87;
        sub_1001ECBC0();
        *(_WORD *)(v55 + 22) = 2048;
        uint64_t v97 = v53;
        sub_1001ECBC0();
        *(_WORD *)(v55 + 32) = 2048;
        uint64_t v97 = v76;
        sub_1001ECBC0();
        *(_WORD *)(v55 + 42) = 2048;
        uint64_t v97 = v52;
        sub_1001ECBC0();
        *(_WORD *)(v55 + 52) = 2048;
        uint64_t v97 = a2;
        sub_1001ECBC0();
        os_log_t v56 = v84;
        _os_log_impl((void *)&_mh_execute_header, v84, (os_log_type_t)v30, "summarizeAndPrune: Prune %ld days in %ld - lastDayStreak: (old=%ld, computed=%ld), totalTime: (old=%ld, computed=%ld)", (uint8_t *)v55, 0x3Eu);
        swift_slowDealloc();
      }
      uint64_t v57 = v76;
      if (v76 != v53)
      {
        if (v53 > v76) {
          uint64_t v57 = v53;
        }
        uint64_t v97 = v57;
        sub_1001EBAF0();
      }
      if (v54 != v52)
      {
        if (v52 <= v54) {
          uint64_t v58 = v54;
        }
        else {
          uint64_t v58 = v52;
        }
        uint64_t v97 = v58;
        sub_1001EBAF0();
      }
      sub_1001EBEF0();
      while (1)
      {
        uint64_t v59 = (uint64_t)v93;
        sub_1001EBEB0();
        sub_1000935F8(v59, (uint64_t)v11, &qword_100294F68);
        uint64_t v60 = sub_10007DC14(&qword_100292E40);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v11, 1, v60) == 1) {
          break;
        }
        uint64_t v61 = v13;
        uint64_t v62 = *v11;
        uint64_t v63 = (char *)v11 + *(int *)(v60 + 48);
        uint64_t v64 = sub_10007DC14(&qword_100291220);
        uint64_t v65 = *(void *)(v64 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v92, 1, 1, v64);
        uint64_t v97 = v62;
        uint64_t v13 = v61;
        sub_1001EBF60();
        (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v64);
      }
      (*(void (**)(char *, uint64_t))(v86 + 8))(v96, v94);
      uint64_t v66 = v95;
      sub_1001E0D3C(v95, v85, type metadata accessor for ReadingHistoryMonth);
      sub_1001E0DA4(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
      uint64_t v67 = v82;
      sub_1001EC140();
      uint64_t v69 = v90;
      uint64_t v68 = v91;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v90 + 56))(v67, 0, 1, v91);
      uint64_t v97 = v87;
      sub_1001EBF60();
      sub_1001E0E0C(v66, type metadata accessor for ReadingHistoryMonth);
      sub_1001E0E0C(v89, type metadata accessor for ReadingHistoryMonth);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v75, v68);
      goto LABEL_23;
    }
LABEL_27:
    swift_once();
    goto LABEL_7;
  }
  sub_1000816A4((uint64_t)v33, &qword_100291F90);
  uint64_t v39 = (uint64_t)v30;
  return sub_1000816A4(v39, &qword_100291F90);
}

void sub_1001D66AC(uint64_t a1)
{
  uint64_t v142 = a1;
  uint64_t v129 = sub_1001EB160();
  uint64_t v134 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v128 = (char *)&v122 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1001EB0C0();
  uint64_t v144 = *(void *)(v148 - 8);
  uint64_t v3 = __chkstk_darwin(v148);
  uint64_t v122 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v124 = (void (*)(char *, uint64_t))((char *)&v122 - v6);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v130 = (char *)&v122 - v8;
  __chkstk_darwin(v7);
  uint64_t v133 = (char *)&v122 - v9;
  uint64_t v10 = sub_10007DC14(&qword_100291FC8);
  __chkstk_darwin(v10 - 8);
  uint64_t v139 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007DC14(&qword_100291FD0);
  __chkstk_darwin(v12 - 8);
  uint64_t v136 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1001EAD80();
  uint64_t v138 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v137 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1001EB180();
  uint64_t v146 = *(void *)(v143 - 8);
  uint64_t v15 = __chkstk_darwin(v143);
  uint64_t v132 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v141 = (char *)&v122 - v17;
  uint64_t v18 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v125 = (uint64_t)&v122 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v127 = (uint64_t)&v122 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v131 = (uint64_t)&v122 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v135 = (uint64_t)&v122 - v29;
  __chkstk_darwin(v28);
  uint64_t v145 = (uint64_t)&v122 - v30;
  uint64_t v158 = sub_10007DC14(&qword_100294F78);
  uint64_t v31 = *(void *)(v158 - 8);
  uint64_t v32 = __chkstk_darwin(v158);
  uint64_t v160 = (char *)&v122 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  int64_t v159 = (char *)&v122 - v34;
  uint64_t v156 = sub_10007DC14(&qword_100294F90);
  uint64_t v35 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  int64_t v155 = (char *)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for ReadingHistoryMonth(0);
  __chkstk_darwin(v37 - 8);
  unint64_t v157 = (char *)&v122 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10007DC14(&qword_100291FC0);
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v122 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10007DC14(&qword_100291FA0);
  uint64_t v44 = __chkstk_darwin(v43 - 8);
  uint64_t v162 = (char *)&v122 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v122 - v46);
  uint64_t v164 = (void *)sub_10007DC14(&qword_100291FA8);
  uint64_t v147 = *(v164 - 1);
  __chkstk_darwin(v164);
  uint64_t v49 = (void (*)(char *, uint64_t, uint64_t))((char *)&v122 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v161 = _swiftEmptyArrayStorage;
  uint64_t v169 = _swiftEmptyArrayStorage;
  sub_10007DC14(&qword_100291BD0);
  uint64_t v163 = v49;
  uint64_t v126 = v1;
  sub_1001EBEF0();
  unint64_t v154 = (void (**)(char *, char *, uint64_t))(v40 + 32);
  uint64_t v153 = (void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v152 = v31 + 8;
  uint64_t v151 = (void (**)(char *, uint64_t))(v35 + 8);
  int64_t v150 = (void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v123 = v21;
  uint64_t v149 = v47;
  uint64_t v50 = v156;
  BOOL v51 = (void (**)(char *, uint64_t))(v31 + 8);
  while (1)
  {
    uint64_t v52 = (uint64_t)v162;
    sub_1001EBEB0();
    sub_1000935F8(v52, (uint64_t)v47, &qword_100291FA0);
    uint64_t v53 = sub_10007DC14(&qword_100291F98);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v47, 1, v53) == 1) {
      break;
    }
    uint64_t v165 = (void (*)(char *, uint64_t))*v47;
    (*v154)(v42, (char *)v47 + *(int *)(v53 + 48), v39);
    uint64_t v54 = (uint64_t)v157;
    uint64_t v55 = v39;
    os_log_t v56 = v42;
    sub_1001EC100();
    uint64_t v57 = v155;
    (*v153)(v155, v54, v50);
    sub_1001E0E0C(v54, type metadata accessor for ReadingHistoryMonth);
    sub_1000815A4(&qword_100294F98, &qword_100294F90);
    uint64_t v58 = v159;
    sub_1001EC7A0();
    uint64_t v59 = v160;
    sub_1001EC7E0();
    sub_1000815A4((unint64_t *)&unk_100294FA0, &qword_100294F78);
    uint64_t v60 = v158;
    LOBYTE(v54) = sub_1001EC330();
    uint64_t v61 = *v51;
    (*v51)(v59, v60);
    v61(v58, v60);
    (*v151)(v57, v50);
    if (v54)
    {
      uint64_t v39 = v55;
      uint64_t v42 = v56;
      uint64_t v47 = v149;
    }
    else
    {
      uint64_t v62 = v161;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v62 = sub_1000A6EA0(0, v62[2] + 1, 1, v62);
      }
      uint64_t v39 = v55;
      uint64_t v42 = v56;
      uint64_t v47 = v149;
      uint64_t v63 = v165;
      unint64_t v65 = v62[2];
      unint64_t v64 = v62[3];
      if (v65 >= v64 >> 1) {
        uint64_t v62 = sub_1000A6EA0((void *)(v64 > 1), v65 + 1, 1, v62);
      }
      v62[2] = v65 + 1;
      v62[v65 + 4] = v63;
      uint64_t v161 = v62;
      uint64_t v169 = v62;
    }
    (*v150)(v42, v39);
  }
  (*(void (**)(void (*)(char *, uint64_t, uint64_t), void *))(v147 + 8))(v163, v164);
  if (v161[2] >= 2uLL)
  {
    uint64_t v168 = v142;
    uint64_t v66 = v148;
    uint64_t v67 = v145;
    if (v142 <= 0)
    {
      os_log_type_t v68 = sub_1001EC8F0();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      uint64_t v69 = (void *)qword_100293A68;
      if (os_log_type_enabled((os_log_t)qword_100293A68, v68))
      {
        int64_t v70 = v69;
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v71 = 134217984;
        swift_beginAccess();
        uint64_t v167 = v168;
        sub_1001ECBC0();
        _os_log_impl((void *)&_mh_execute_header, v70, v68, "summarizeAndPrune: expect monthsToKeep >= 1, got %ld", v71, 0xCu);
        swift_slowDealloc();
      }
      swift_beginAccess();
      uint64_t v168 = 1;
    }
    sub_1001DD3E4(&v169);
    if (!v169[2])
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v72 = v141;
    sub_1001EB0F0();
    uint64_t v73 = v146;
    uint64_t v74 = v66;
    uint64_t v75 = v143;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v136, 1, 1, v143);
    uint64_t v76 = sub_1001EB190();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v139, 1, 1, v76);
    uint64_t v77 = v137;
    sub_1001EAD70();
    sub_1001EAD50();
    sub_1001EAD60();
    sub_1001EB130();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v77, v140);
    uint64_t v78 = *(void (**)(char *, uint64_t))(v73 + 8);
    uint64_t v79 = v75;
    uint64_t v80 = v74;
    uint64_t v146 = v73 + 8;
    v78(v72, v79);
    uint64_t v81 = v135;
    sub_1000936F8(v67, v135, (uint64_t *)&unk_1002924C0);
    uint64_t v82 = v144;
    int64_t v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
    if (v83(v81, 1, v80) == 1)
    {
      uint64_t v84 = v67;
LABEL_28:
      sub_1000816A4(v84, (uint64_t *)&unk_1002924C0);
      swift_bridgeObjectRelease();
      uint64_t v96 = v81;
LABEL_29:
      sub_1000816A4(v96, (uint64_t *)&unk_1002924C0);
      return;
    }
    uint64_t v165 = v78;
    uint64_t v87 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 32);
    uint64_t v86 = (char *)(v82 + 32);
    uint64_t v163 = v87;
    v87(v133, v81, v80);
    uint64_t v88 = v132;
    sub_1001EB0F0();
    uint64_t v89 = v134;
    uint64_t v90 = *(void (**)(void))(v134 + 104);
    uint64_t v91 = v128;
    LODWORD(v160) = enum case for Calendar.Component.month(_:);
    uint64_t v92 = v129;
    uint64_t v164 = v90;
    uint64_t v162 = (char *)(v134 + 104);
    v90(v128);
    swift_beginAccess();
    if (__OFSUB__(0, v168))
    {
      __break(1u);
    }
    else
    {
      uint64_t v93 = v131;
      sub_1001EB150();
      uint64_t v95 = *(void **)(v89 + 8);
      uint64_t v94 = v89 + 8;
      uint64_t v161 = v95;
      ((void (*)(char *, uint64_t))v95)(v91, v92);
      uint64_t v81 = v127;
      sub_1000936F8(v93, v127, (uint64_t *)&unk_1002924C0);
      if (v83(v81, 1, v148) == 1)
      {
        sub_1000816A4(v93, (uint64_t *)&unk_1002924C0);
        v165(v88, v143);
        (*(void (**)(char *, uint64_t))(v144 + 8))(v133, v148);
        uint64_t v84 = v145;
        goto LABEL_28;
      }
      uint64_t v134 = v94;
      uint64_t v97 = v148;
      v163(v130, v81, v148);
      uint64_t v98 = v141;
      sub_1001EB0F0();
      uint64_t v78 = v124;
      sub_1001EB020();
      uint64_t v99 = sub_1001D1E60((uint64_t)v78, 1);
      uint64_t v100 = *(char **)(v144 + 8);
      v144 += 8;
      int64_t v159 = v100;
      ((void (*)(void, uint64_t))v100)(v78, v97);
      v165(v98, v143);
      ((void (*)(char *, void, uint64_t))v164)(v91, enum case for Calendar.Component.day(_:), v92);
      uint64_t v158 = v99;
      if (!__OFSUB__(0, v99))
      {
        uint64_t v101 = v125;
        sub_1001EB150();
        uint64_t v102 = (void (*)(char *, uint64_t))v161;
        ((void (*)(char *, uint64_t))v161)(v91, v92);
        uint64_t v103 = (uint64_t)v123;
        sub_1000936F8(v101, (uint64_t)v123, (uint64_t *)&unk_1002924C0);
        if (v83(v103, 1, v148) == 1)
        {
          sub_1000816A4(v101, (uint64_t *)&unk_1002924C0);
          uint64_t v104 = v148;
          uint64_t v105 = (void (*)(char *, uint64_t))v159;
          ((void (*)(char *, uint64_t))v159)(v130, v148);
          sub_1000816A4(v131, (uint64_t *)&unk_1002924C0);
          v165(v132, v143);
          v105(v133, v104);
          sub_1000816A4(v145, (uint64_t *)&unk_1002924C0);
          swift_bridgeObjectRelease();
          uint64_t v96 = v103;
          goto LABEL_29;
        }
        int64_t v83 = v122;
        v163((char *)v122, v103, v148);
        uint64_t v78 = (void (*)(char *, uint64_t))v164;
        ((void (*)(char *, void, uint64_t))v164)(v91, v160, v92);
        uint64_t v86 = v132;
        BOOL v106 = v102;
        uint64_t v107 = sub_1001EB170();
        v106(v91, v92);
        ((void (*)(char *, void, uint64_t))v78)(v91, enum case for Calendar.Component.year(_:), v92);
        uint64_t v108 = sub_1001EB170();
        v106(v91, v92);
        uint64_t v109 = 100 * v108;
        if ((unsigned __int128)(v108 * (__int128)100) >> 64 == (100 * v108) >> 63)
        {
          uint64_t v91 = (char *)(v109 + v107);
          if (!__OFADD__(v109, v107))
          {
            LOBYTE(v78) = sub_1001EC910();
            if (qword_1002910E8 == -1)
            {
LABEL_36:
              unint64_t v110 = (void *)qword_100293A68;
              os_log_type_t v111 = v78;
              if (os_log_type_enabled((os_log_t)qword_100293A68, (os_log_type_t)v78))
              {
                uint64_t v112 = v168;
                unint64_t v113 = v110;
                uint64_t v114 = swift_slowAlloc();
                *(_DWORD *)uint64_t v114 = 134218496;
                uint64_t v166 = (uint64_t)v91;
                sub_1001ECBC0();
                *(_WORD *)(v114 + 12) = 2048;
                uint64_t v166 = v112;
                sub_1001ECBC0();
                *(_WORD *)(v114 + 22) = 2048;
                uint64_t v166 = v158;
                sub_1001ECBC0();
                _os_log_impl((void *)&_mh_execute_header, v113, v111, "summarizeAndPrune: About to prune: lastMonthToKeep=%ld, historicalMonthsToKeep: %ld, streakDays=%ld", (uint8_t *)v114, 0x20u);
                swift_slowDealloc();
              }
              uint64_t v115 = v169[2];
              Swift::UInt v116 = v130;
              if (v115)
              {
                double v117 = v169 + 4;
                do
                {
                  uint64_t v119 = *v117++;
                  uint64_t v118 = v119;
                  if (v119 < (uint64_t)v91) {
                    sub_1001D5BF0(v118 / 100, v118 % 100);
                  }
                  --v115;
                }
                while (v115);
              }
              swift_bridgeObjectRelease();
              uint64_t v120 = v148;
              uint64_t v121 = (void (*)(char *, uint64_t))v159;
              ((void (*)(unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t))v159)(v83, v148);
              sub_1000816A4(v125, (uint64_t *)&unk_1002924C0);
              v121(v116, v120);
              sub_1000816A4(v131, (uint64_t *)&unk_1002924C0);
              v165(v86, v143);
              v121(v133, v120);
              uint64_t v96 = v145;
              goto LABEL_29;
            }
LABEL_48:
            swift_once();
            goto LABEL_36;
          }
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    __break(1u);
    goto LABEL_46;
  }
  swift_bridgeObjectRelease();
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v85 = (id)qword_100293A68;
  sub_1001EB530();
}

uint64_t sub_1001D7CB0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, char *), uint64_t a3)
{
  void (*v26)(uint64_t *__return_ptr, uint64_t *, char *);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  uint64_t v27 = a3;
  uint64_t v26 = a2;
  uint64_t v5 = sub_10007DC14(&qword_100291F68);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100291F70);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100291BD8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10007DC14(&qword_100291F78);
  uint64_t v24 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v28, v11);
  sub_1000815A4(&qword_100291F80, &qword_100291BD8);
  sub_1001EC560();
  uint64_t v17 = sub_1000815A4(&qword_100291F88, &qword_100291F78);
  uint64_t v28 = v16;
  uint64_t v25 = v17;
  sub_1001ECBB0();
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v19 = v23;
  if (((unsigned int (*)(char *, uint64_t))v18)(v10, 1) != 1)
  {
    do
    {
      sub_1000935F8((uint64_t)v10, (uint64_t)v7, &qword_100291F68);
      v26(&v30, &v31, v7);
      sub_1000816A4((uint64_t)v7, &qword_100291F68);
      if (v3) {
        break;
      }
      a1 = v30;
      uint64_t v31 = v30;
      sub_1001ECBB0();
    }
    while (v18(v10, 1, v19) != 1);
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v29);
  return a1;
}

uint64_t ReadingHistoryDay.description.getter()
{
  sub_1001EC1A0();
  uint64_t v1 = sub_1001ED040();
  v2._countAndFlagsBits = 47;
  v2._object = (void *)0xE100000000000000;
  sub_1001EC490(v2);
  type metadata accessor for ReadingHistoryDay(0);
  sub_10007DC14(&qword_100291C50);
  sub_1001EBAE0();
  v3._countAndFlagsBits = sub_1001ED040();
  sub_1001EC490(v3);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ReadingHistoryDay.additionalFields.getter()
{
  return sub_1001DA8E0((void (*)(void))type metadata accessor for ReadingHistoryDay);
}

uint64_t ReadingHistoryDay.additionalFields.setter(uint64_t a1)
{
  return sub_1001DA934(a1, type metadata accessor for ReadingHistoryDay);
}

uint64_t (*ReadingHistoryDay.additionalFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t sub_1001D817C()
{
  static ReadingHistoryDay.fields = 0x54676E6964616572;
  *(void *)algn_1002A4338 = 0xEB00000000656D69;
  qword_1002A4340 = swift_getKeyPath();
  unk_1002A4348 = 0x47676E6964616572;
  qword_1002A4350 = 0xEB000000006C616FLL;
  uint64_t result = swift_getKeyPath();
  qword_1002A4358 = result;
  return result;
}

uint64_t *ReadingHistoryDay.fields.unsafeMutableAddressor()
{
  if (qword_1002911A0 != -1) {
    swift_once();
  }
  return &static ReadingHistoryDay.fields;
}

uint64_t static ReadingHistoryDay.fields.getter@<X0>(void *a1@<X8>)
{
  if (qword_1002911A0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1002A4338;
  uint64_t v4 = qword_1002A4340;
  uint64_t v3 = unk_1002A4348;
  uint64_t v5 = qword_1002A4350;
  uint64_t v6 = qword_1002A4358;
  *a1 = static ReadingHistoryDay.fields;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t ReadingHistoryDay.init()@<X0>(uint64_t a1@<X8>)
{
  _s14bookdatastored17ReadingHistoryDayV11readingTime9Coherence9CRCounterVvpfi_0();
  uint64_t v2 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t result = sub_1001EBB10();
  *(void *)(a1 + *(int *)(v2 + 24)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t ReadingHistoryDay.init(defaultGoal:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10007DC14(&qword_100291C50);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s14bookdatastored17ReadingHistoryDayV11readingTime9Coherence9CRCounterVvpfi_0();
  uint64_t v8 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v9 = a2 + *(int *)(v8 + 20);
  uint64_t v12 = 0;
  sub_1001EBB10();
  *(void *)(a2 + *(int *)(v8 + 24)) = &_swiftEmptyDictionarySingleton;
  uint64_t v12 = a1;
  sub_1001EBB10();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v7, v4);
}

uint64_t sub_1001D84A8(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return static CRStruct_2.fieldKeys.getter(a1, v2);
}

uint64_t sub_1001D8514()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001D8520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t sub_1001D8558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _s14bookdatastored17ReadingHistoryDayV11readingTime9Coherence9CRCounterVvpfi_0();
  uint64_t result = sub_1001EBB10();
  *(void *)(a2 + *(int *)(a1 + 24)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1001D85BC(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4(&qword_1002970B8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_1001D8628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_1001D86AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.apply(_:)(a1, a2, v4);
}

uint64_t sub_1001D8728()
{
  sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return sub_1001EBD20();
}

uint64_t sub_1001D87A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_1001D8838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1001D88B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.merge(delta:)(a1, a2, v4);
}

uint64_t sub_1001D8930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1001D89B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1001D8A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1001D8ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1001D8B48()
{
  sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.needToFinalizeTimestamps()();
}

uint64_t sub_1001D8BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1001D8C30()
{
  sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return sub_1001EBCF0();
}

uint64_t sub_1001D8CAC()
{
  return sub_1001EBFF0();
}

uint64_t sub_1001D8D2C()
{
  return sub_1001EC000();
}

uint64_t sub_1001D8DBC()
{
  return sub_1001EBCB0();
}

uint64_t sub_1001D8E3C()
{
  return sub_1001EBD00();
}

uint64_t sub_1001D8EB4(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return CRStruct_2.minEncodingVersion.getter(a1, v2);
}

uint64_t ReadingHistoryMonth.additionalFields.getter()
{
  type metadata accessor for ReadingHistoryMonth(0);
  return swift_bridgeObjectRetain();
}

uint64_t ReadingHistoryMonth.additionalFields.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ReadingHistoryMonth(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ReadingHistoryMonth.additionalFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t sub_1001D8FF0()
{
  static ReadingHistoryMonth.fields = 1937334628;
  *(void *)algn_1002A4368 = 0xE400000000000000;
  qword_1002A4370 = swift_getKeyPath();
  unk_1002A4378 = 0x6D69546C61746F74;
  qword_1002A4380 = 0xE900000000000065;
  qword_1002A4388 = swift_getKeyPath();
  qword_1002A4390 = 0xD000000000000014;
  qword_1002A4398 = 0x8000000100227C00;
  uint64_t result = swift_getKeyPath();
  qword_1002A43A0 = result;
  return result;
}

uint64_t *ReadingHistoryMonth.fields.unsafeMutableAddressor()
{
  if (qword_1002911A8 != -1) {
    swift_once();
  }
  return &static ReadingHistoryMonth.fields;
}

uint64_t static ReadingHistoryMonth.fields.getter@<X0>(void *a1@<X8>)
{
  if (qword_1002911A8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_1002A4368;
  uint64_t v4 = qword_1002A4370;
  uint64_t v3 = unk_1002A4378;
  uint64_t v5 = qword_1002A4380;
  uint64_t v6 = qword_1002A4388;
  uint64_t v7 = qword_1002A4390;
  uint64_t v8 = qword_1002A4398;
  uint64_t v9 = qword_1002A43A0;
  *a1 = static ReadingHistoryMonth.fields;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t ReadingHistoryMonth.init()@<X0>(uint64_t a1@<X8>)
{
  sub_10007DC14(&qword_100291220);
  sub_1000815A4(&qword_100291228, &qword_100291220);
  sub_1000815A4((unint64_t *)&unk_100291230, &qword_100291220);
  sub_1001EBF00();
  uint64_t v2 = type metadata accessor for ReadingHistoryMonth(0);
  sub_1001EBB10();
  uint64_t result = sub_1001EBB10();
  *(void *)(a1 + *(int *)(v2 + 28)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1001D92C4(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_1001D9330()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001D933C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*sub_1001D9374())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t sub_1001D9398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10007DC14(&qword_100291220);
  sub_1000815A4(&qword_100291228, &qword_100291220);
  sub_1000815A4((unint64_t *)&unk_100291230, &qword_100291220);
  sub_1001EBF00();
  sub_1001EBB10();
  uint64_t result = sub_1001EBB10();
  *(void *)(a2 + *(int *)(a1 + 28)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1001D94B4(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4(&qword_1002970F8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_1001D9520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_1001D95A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.apply(_:)(a1, a2, v4);
}

uint64_t sub_1001D9620()
{
  sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return sub_1001EBE30();
}

uint64_t sub_1001D969C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_1001D9730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1001D97AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.merge(delta:)(a1, a2, v4);
}

uint64_t sub_1001D9828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1001D98AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1001D9930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1001D99C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1001D9A40()
{
  sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_1001D9AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1001D9B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.merge(_:)(a1, a2, v4);
}

uint64_t sub_1001D9BA4()
{
  return sub_1001EBFF0();
}

uint64_t sub_1001D9C24()
{
  return sub_1001EC000();
}

uint64_t sub_1001D9CB4()
{
  return sub_1001EBDC0();
}

uint64_t sub_1001D9D34()
{
  return sub_1001EBE10();
}

uint64_t sub_1001D9DAC(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1001D9E28(uint64_t a1, int a2)
{
  LODWORD(v78) = a2;
  uint64_t v79 = a1;
  uint64_t v77 = type metadata accessor for ReadingHistoryDay(0);
  __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007DC14(&qword_100292E40);
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v73 = (uint64_t *)((char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v72 = (uint64_t *)((char *)&v67 - v7);
  uint64_t v81 = sub_10007DC14(&qword_100294F90);
  uint64_t v8 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v71 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10007DC14(&qword_100294F78);
  uint64_t v68 = *(void *)(v70 - 8);
  uint64_t v10 = __chkstk_darwin(v70);
  uint64_t v67 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v67 - v12;
  uint64_t v14 = type metadata accessor for ReadingHistoryMonth(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14(&qword_100291EC8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100215850;
  uint64_t v18 = sub_10007DC14(&qword_100291C50);
  sub_1001EBAE0();
  if (v86 < 0)
  {
    uint64_t v19 = v2;
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  else
  {
    uint64_t v86 = 0x6D69546C61746F74;
    unint64_t v87 = 0xEA00000000003D65;
    uint64_t v19 = v2;
    sub_1001EBAE0();
    uint64_t v88 = (void *)v84;
    v89._countAndFlagsBits = sub_1001ED040();
    sub_1001EC490(v89);
    swift_bridgeObjectRelease();
    v90._countAndFlagsBits = 8236;
    v90._object = (void *)0xE200000000000000;
    sub_1001EC490(v90);
    uint64_t v20 = v86;
    unint64_t v21 = v87;
  }
  *(void *)(v17 + 32) = v20;
  *(void *)(v17 + 40) = v21;
  sub_1001EBAE0();
  unint64_t v22 = 0xE000000000000000;
  char v23 = v78;
  uint64_t v80 = v18;
  if (v86 < 0)
  {
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v86 = 0;
    unint64_t v87 = 0xE000000000000000;
    sub_1001ECD20(25);
    swift_bridgeObjectRelease();
    uint64_t v86 = 0xD000000000000015;
    unint64_t v87 = 0x8000000100227C50;
    sub_1001EBAE0();
    uint64_t v88 = (void *)v84;
    v91._countAndFlagsBits = sub_1001ED040();
    sub_1001EC490(v91);
    swift_bridgeObjectRelease();
    v92._countAndFlagsBits = 8236;
    v92._object = (void *)0xE200000000000000;
    sub_1001EC490(v92);
    uint64_t v24 = v86;
    unint64_t v22 = v87;
  }
  uint64_t v25 = v19;
  *(void *)(v17 + 48) = v24;
  *(void *)(v17 + 56) = v22;
  sub_1001E0D3C(v19, (uint64_t)v16, type metadata accessor for ReadingHistoryMonth);
  if (v23)
  {
    sub_1001E0E0C((uint64_t)v16, type metadata accessor for ReadingHistoryMonth);
    uint64_t v32 = v79;
  }
  else
  {
    sub_1000815A4(&qword_100294F98, &qword_100294F90);
    sub_1001EC7A0();
    uint64_t v26 = v67;
    sub_1001EC7E0();
    uint64_t v27 = sub_1001EC7D0();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v29 = v26;
    uint64_t v30 = v70;
    v28(v29, v70);
    v28(v13, v30);
    sub_1001E0E0C((uint64_t)v16, type metadata accessor for ReadingHistoryMonth);
    BOOL v31 = v27 <= v79;
    uint64_t v32 = v79;
    if (!v31)
    {
      unint64_t v33 = 0xA400000000000000;
      uint64_t v34 = 548375522;
      goto LABEL_12;
    }
  }
  uint64_t v34 = 0;
  unint64_t v33 = 0xE000000000000000;
LABEL_12:
  *(void *)(v17 + 64) = v34;
  *(void *)(v17 + 72) = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v71, v25, v81);
  sub_1000815A4(&qword_1002973B0, &qword_100294F90);
  uint64_t v86 = sub_1001EC570();
  sub_1001DD454(&v86, &qword_100292E40, (uint64_t (*)(uint64_t))sub_1001CFD44, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_1001CEA3C);
  if (v23) {
    uint64_t v35 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v35 = v32;
  }
  uint64_t v36 = sub_1001DA824(v35, v86);
  uint64_t v71 = v37;
  uint64_t v78 = v39 >> 1;
  uint64_t v79 = v38;
  uint64_t v40 = (v39 >> 1) - v38;
  if (__OFSUB__(v39 >> 1, v38)) {
    goto LABEL_32;
  }
  uint64_t v41 = v36;
  uint64_t v69 = v17;
  if (v40)
  {
    uint64_t v88 = _swiftEmptyArrayStorage;
    sub_1000CF7D0(0, v40 & ~(v40 >> 63), 0);
    if (v40 < 0)
    {
LABEL_33:
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v68 = v41;
    uint64_t v42 = 0;
    uint64_t v70 = v40;
    while (!__OFADD__(v42, 1))
    {
      if (v79 + v42 >= v78 || v42 >= v40) {
        goto LABEL_31;
      }
      uint64_t v81 = v42 + 1;
      uint64_t v43 = v72;
      sub_1000936F8((uint64_t)&v71[*(void *)(v74 + 72) * (v79 + v42)], (uint64_t)v72, &qword_100292E40);
      uint64_t v86 = 35;
      unint64_t v87 = 0xE100000000000000;
      uint64_t v84 = *v43;
      uint64_t v44 = v84;
      v93._countAndFlagsBits = sub_1001ED040();
      sub_1001EC490(v93);
      swift_bridgeObjectRelease();
      v94._countAndFlagsBits = 61;
      v94._object = (void *)0xE100000000000000;
      sub_1001EC490(v94);
      uint64_t v45 = *(int *)(v75 + 48);
      uint64_t v46 = (char *)v73 + v45;
      uint64_t v47 = (char *)v43 + v45;
      *uint64_t v73 = v44;
      uint64_t v48 = sub_10007DC14(&qword_100291220);
      uint64_t v49 = *(void *)(v48 - 8);
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
      uint64_t v50 = (uint64_t)v76;
      sub_1001EC100();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v48);
      uint64_t v83 = sub_1001EC1A0();
      uint64_t v84 = sub_1001ED040();
      id v85 = v51;
      v95._countAndFlagsBits = 47;
      v95._object = (void *)0xE100000000000000;
      sub_1001EC490(v95);
      sub_1001EBAE0();
      uint64_t v82 = v83;
      v96._countAndFlagsBits = sub_1001ED040();
      sub_1001EC490(v96);
      swift_bridgeObjectRelease();
      uint64_t v52 = v84;
      uint64_t v53 = v85;
      sub_1001E0E0C(v50, type metadata accessor for ReadingHistoryDay);
      v97._countAndFlagsBits = v52;
      v97._object = v53;
      sub_1001EC490(v97);
      swift_bridgeObjectRelease();
      uint64_t v54 = v86;
      unint64_t v55 = v87;
      sub_1000816A4((uint64_t)v43, &qword_100292E40);
      os_log_t v56 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000CF7D0(0, v56[2] + 1, 1);
        os_log_t v56 = v88;
      }
      uint64_t v57 = v81;
      unint64_t v59 = v56[2];
      unint64_t v58 = v56[3];
      if (v59 >= v58 >> 1)
      {
        sub_1000CF7D0(v58 > 1, v59 + 1, 1);
        os_log_t v56 = v88;
      }
      v56[2] = v59 + 1;
      uint64_t v60 = &v56[2 * v59];
      v60[4] = v54;
      v60[5] = v55;
      ++v42;
      uint64_t v40 = v70;
      if (v57 == v70)
      {
        swift_unknownObjectRelease();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  swift_unknownObjectRelease();
  os_log_t v56 = _swiftEmptyArrayStorage;
LABEL_29:
  uint64_t v86 = (uint64_t)v56;
  sub_10007DC14(&qword_100292710);
  sub_1000815A4((unint64_t *)&qword_100291F60, &qword_100292710);
  uint64_t v61 = sub_1001EC300();
  uint64_t v63 = v62;
  swift_bridgeObjectRelease();
  uint64_t v64 = v69;
  *(void *)(v69 + 80) = v61;
  *(void *)(v64 + 88) = v63;
  uint64_t v86 = v64;
  uint64_t v65 = sub_1001EC300();
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_1001DA824(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10007DC14(&qword_100292E40);
    return a2;
  }
  return result;
}

uint64_t ReadingHistoryMonth.description.getter()
{
  return sub_1001D9E28(7, 0);
}

uint64_t ReadingHistoryMonth.debugDescription.getter()
{
  return sub_1001D9E28(0, 1);
}

uint64_t ReadingHistoryModel.additionalFields.getter()
{
  return sub_1001DA8E0((void (*)(void))type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1001DA8E0(void (*a1)(void))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t ReadingHistoryModel.additionalFields.setter(uint64_t a1)
{
  return sub_1001DA934(a1, type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1001DA934(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *(int *)(a2(0) + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*ReadingHistoryModel.additionalFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t sub_1001DA9C0()
{
  static ReadingHistoryModel.fields = 0x7368746E6F6DLL;
  unk_1002A43B0 = 0xE600000000000000;
  qword_1002A43B8 = swift_getKeyPath();
  strcpy(byte_1002A43C0, "streakRecords");
  HIWORD(qword_1002A43C8) = -4864;
  uint64_t result = swift_getKeyPath();
  qword_1002A43D0 = result;
  return result;
}

uint64_t *ReadingHistoryModel.fields.unsafeMutableAddressor()
{
  if (qword_1002911B0 != -1) {
    swift_once();
  }
  return &static ReadingHistoryModel.fields;
}

uint64_t static ReadingHistoryModel.fields.getter@<X0>(void *a1@<X8>)
{
  if (qword_1002911B0 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_1002A43B0;
  uint64_t v4 = qword_1002A43B8;
  uint64_t v3 = *(void *)byte_1002A43C0;
  uint64_t v5 = qword_1002A43C8;
  uint64_t v6 = qword_1002A43D0;
  *a1 = static ReadingHistoryModel.fields;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t ReadingHistoryModel.init()@<X0>(uint64_t a1@<X8>)
{
  sub_10007DC14(&qword_100291FC0);
  sub_1000815A4(&qword_100291240, &qword_100291FC0);
  sub_1000815A4(&qword_100291248, &qword_100291FC0);
  sub_1001EBF00();
  uint64_t v2 = type metadata accessor for ReadingHistoryModel(0);
  sub_1001EB0C0();
  sub_1001E0DA4(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = sub_1001EBF00();
  *(void *)(a1 + *(int *)(v2 + 24)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1001DAC80(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return static CRStruct_2.fieldKeys.getter(a1, v2);
}

uint64_t sub_1001DACEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10007DC14(&qword_100291FC0);
  sub_1000815A4(&qword_100291240, &qword_100291FC0);
  sub_1000815A4(&qword_100291248, &qword_100291FC0);
  sub_1001EBF00();
  sub_1001EB0C0();
  sub_1001E0DA4(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = sub_1001EBF00();
  *(void *)(a2 + *(int *)(a1 + 24)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1001DAE3C(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4(&qword_100291BE8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRType.context.getter(a1, v2);
}

uint64_t sub_1001DAEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_1001DAF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.apply(_:)(a1, a2, v4);
}

uint64_t sub_1001DAFA8()
{
  sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return sub_1001EBD20();
}

uint64_t sub_1001DB024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_1001DB0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1001DB134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.merge(delta:)(a1, a2, v4);
}

uint64_t sub_1001DB1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1001DB234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1001DB2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1001DB34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1001DB3C8()
{
  sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.needToFinalizeTimestamps()();
}

uint64_t sub_1001DB434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1001DB4B0()
{
  sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return sub_1001EBCF0();
}

uint64_t sub_1001DB52C()
{
  return sub_1001EBFF0();
}

uint64_t sub_1001DB5AC()
{
  return sub_1001EC000();
}

uint64_t sub_1001DB63C()
{
  return sub_1001EBCB0();
}

uint64_t sub_1001DB6BC()
{
  return sub_1001EBD00();
}

uint64_t sub_1001DB734(uint64_t a1)
{
  uint64_t v2 = sub_1001E0DA4((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  return CRStruct_2.minEncodingVersion.getter(a1, v2);
}

Swift::Int __swiftcall ReadingHistoryModel.readingTimeToday()()
{
  uint64_t v0 = sub_1001EC1D0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100296830);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EB0B0();
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = type metadata accessor for ReadingHistoryDay(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11) == 1)
  {
    sub_1000816A4((uint64_t)v10, &qword_100296830);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v10, v0);
    sub_1001E0E0C((uint64_t)v10, type metadata accessor for ReadingHistoryDay);
    Swift::Int v12 = sub_1001EC1A0();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v12;
}

uint64_t ReadingHistoryModel.readingHistoryMonth(year:month:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10007DC14(&qword_100291F90);
  uint64_t result = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 100 * a1;
  if ((unsigned __int128)(a1 * (__int128)100) >> 64 != (100 * a1) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  BOOL v11 = __OFADD__(v10, a2);
  uint64_t v12 = v10 + a2;
  if (v11)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v17[1] = v12;
  sub_10007DC14(&qword_100291BD0);
  sub_1001EBF50();
  uint64_t v13 = sub_10007DC14(&qword_100291FC0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
  {
    sub_1000816A4((uint64_t)v9, &qword_100291F90);
    uint64_t v15 = type metadata accessor for ReadingHistoryMonth(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  else
  {
    sub_1001EC100();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    uint64_t v16 = type metadata accessor for ReadingHistoryMonth(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a3, 0, 1, v16);
  }
}

uint64_t sub_1001DBBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v3 = sub_10007DC14(&qword_100291C50);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v15 - v11;
  _s14bookdatastored17ReadingHistoryDayV11readingTime9Coherence9CRCounterVvpfi_0();
  uint64_t v13 = &v10[*(int *)(v7 + 20)];
  uint64_t v16 = 0;
  sub_1001EBB10();
  *(void *)&v10[*(int *)(v7 + 24)] = &_swiftEmptyDictionarySingleton;
  uint64_t v16 = a1;
  sub_1001EBB10();
  (*(void (**)(char *, char *, uint64_t))(v4 + 40))(v13, v6, v3);
  sub_1001E3A7C((uint64_t)v10, (uint64_t)v12, type metadata accessor for ReadingHistoryDay);
  sub_1001E0DA4((unint64_t *)&unk_100296890, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return sub_1001EC140();
}

uint64_t sub_1001DBE04()
{
  uint64_t v0 = type metadata accessor for ReadingHistoryDay(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s14bookdatastored17ReadingHistoryDayV11readingTime9Coherence9CRCounterVvpfi_0();
  v4[1] = 0;
  sub_1001EBB10();
  *(void *)&v2[*(int *)(v0 + 24)] = &_swiftEmptyDictionarySingleton;
  sub_1001E0DA4((unint64_t *)&unk_100296890, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
  return sub_1001EC140();
}

uint64_t sub_1001DBF04()
{
  uint64_t v0 = type metadata accessor for ReadingHistoryMonth(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14(&qword_100291220);
  sub_1000815A4(&qword_100291228, &qword_100291220);
  sub_1000815A4((unint64_t *)&unk_100291230, &qword_100291220);
  sub_1001EBF00();
  uint64_t v5 = 0;
  sub_1001EBB10();
  uint64_t v5 = -1;
  sub_1001EBB10();
  *(void *)&v2[*(int *)(v0 + 28)] = &_swiftEmptyDictionarySingleton;
  sub_1001E0DA4(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
  return sub_1001EC140();
}

uint64_t sub_1001DC0B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v39 = a3;
  uint64_t v6 = sub_1001EB0C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14(&qword_100291F68);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v34 = (uint64_t *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v16 = *a1;
  uint64_t v17 = *a2;
  uint64_t v18 = *(int *)(v13 + 48);
  unint64_t v33 = a2;
  uint64_t v19 = (char *)a2 + v18;
  uint64_t v20 = v6;
  *(uint64_t *)((char *)&v30 - v14) = v17;
  uint64_t v37 = v7;
  unint64_t v21 = *(void (**)(void))(v7 + 16);
  uint64_t v35 = (char *)&v30 + v18 - v14;
  v21();
  uint64_t v36 = v9;
  ((void (*)(char *, uint64_t, uint64_t))v21)(v9, v39, v20);
  uint64_t v39 = v16;
  if (v16 >= v17)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v20);
    uint64_t result = sub_1000816A4((uint64_t)v15, &qword_100291F68);
    uint64_t v26 = v38;
    uint64_t v27 = v39;
  }
  else
  {
    BOOL v31 = v21;
    uint64_t v32 = v19;
    sub_1001E0DA4(&qword_100291C88, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v22 = v36;
    char v23 = sub_1001EC320();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v37 + 8);
    v24(v22, v20);
    uint64_t result = sub_1000816A4((uint64_t)v15, &qword_100291F68);
    uint64_t v26 = v38;
    uint64_t v27 = v39;
    if ((v23 & 1) == 0)
    {
      uint64_t v28 = (char *)v34 + *(int *)(v10 + 48);
      uint64_t v29 = v32;
      uint64_t v27 = *v33;
      *uint64_t v34 = *v33;
      ((void (*)(char *, char *, uint64_t))v31)(v28, v29, v20);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v28, v20);
    }
  }
  *uint64_t v26 = v27;
  return result;
}

uint64_t sub_1001DC36C@<X0>(void (*a1)(char *, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v3 = sub_1001EB0C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v87 = v3;
  uint64_t v88 = v4;
  __chkstk_darwin(v3);
  uint64_t v75 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v74 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v72 = (uint64_t)&v67 - v10;
  __chkstk_darwin(v9);
  uint64_t v73 = (char *)&v67 - v11;
  uint64_t v12 = sub_10007DC14(&qword_100291C50);
  uint64_t v80 = *(void *)(v12 - 8);
  uint64_t v81 = v12;
  __chkstk_darwin(v12);
  uint64_t v79 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001EB160();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001EB180();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v89 = v18;
  uint64_t v90 = v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v83 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  char v23 = (char *)&v67 - v22;
  uint64_t v24 = sub_10007DC14(&qword_100297338);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v67 - v28;
  sub_1001EB0F0();
  uint64_t v30 = v15 + 104;
  BOOL v31 = *(void (**)(char *))(v15 + 104);
  unsigned int v71 = enum case for Calendar.Component.year(_:);
  v31(v17);
  uint64_t v84 = (void (*)(char *, uint64_t))sub_1001EB170();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v15 + 8);
  v32(v17, v14);
  unsigned int v77 = enum case for Calendar.Component.month(_:);
  uint64_t v76 = v31;
  v31(v17);
  uint64_t v33 = (uint64_t)v27;
  uint64_t v34 = v32;
  uint64_t v82 = a1;
  uint64_t v35 = sub_1001EB170();
  uint64_t v78 = v14;
  uint64_t v70 = v15 + 8;
  v32(v17, v14);
  uint64_t v37 = v89;
  uint64_t v36 = v90;
  ReadingHistoryModel.readingHistoryMonth(year:month:)((uint64_t)v84, v35, (uint64_t)v29);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v38 = v36 + 8;
  uint64_t v39 = v40;
  v40(v23, v37);
  id v85 = v29;
  sub_1000936F8((uint64_t)v29, v33, &qword_100297338);
  uint64_t v41 = type metadata accessor for ReadingHistoryMonth(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v33, 1, v41) == 1)
  {
    sub_1000816A4(v33, &qword_100297338);
LABEL_6:
    sub_1000816A4((uint64_t)v85, &qword_100297338);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v86, 1, 1, v87);
  }
  uint64_t v42 = v77;
  uint64_t v68 = v39;
  uint64_t v69 = v30;
  uint64_t v84 = v34;
  uint64_t v90 = v38;
  uint64_t v43 = v33 + *(int *)(v41 + 24);
  uint64_t v44 = v80;
  uint64_t v46 = v78;
  uint64_t v45 = v79;
  uint64_t v47 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v43, v81);
  sub_1001E0E0C(v33, type metadata accessor for ReadingHistoryMonth);
  sub_1001EBAE0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v47);
  if (v91 < 0) {
    goto LABEL_6;
  }
  uint64_t v81 = v91;
  sub_1001EB0F0();
  uint64_t v48 = v23;
  sub_1001EB0F0();
  uint64_t v49 = v42;
  uint64_t v50 = v17;
  BOOL v51 = v76;
  ((void (*)(char *, uint64_t, uint64_t))v76)(v17, v49, v46);
  uint64_t v52 = sub_1001EB170();
  uint64_t v53 = v84;
  v84(v17, v46);
  ((void (*)(char *, void, uint64_t))v51)(v17, v71, v46);
  uint64_t v54 = sub_1001EB170();
  v53(v50, v46);
  uint64_t v55 = v72;
  sub_1001DEA9C(v54, v52, v72);
  v68(v48, v89);
  uint64_t v57 = v87;
  uint64_t v56 = v88;
  unint64_t v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
  if (v58(v55, 1, v87) == 1)
  {
    sub_1000816A4(v55, (uint64_t *)&unk_1002924C0);
    uint64_t v59 = (uint64_t)v73;
    uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
    v82(v73, 1, 1, v57);
  }
  else
  {
    uint64_t v59 = (uint64_t)v73;
    sub_1001EB020();
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
    uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
    v82((char *)v59, 0, 1, v57);
  }
  uint64_t v61 = v74;
  uint64_t v62 = v75;
  sub_1000936F8(v59, v74, (uint64_t *)&unk_1002924C0);
  unsigned int v63 = v58(v61, 1, v57);
  uint64_t v64 = v84;
  if (v63 == 1)
  {
    sub_1000816A4(v59, (uint64_t *)&unk_1002924C0);
    v68(v83, v89);
    sub_1000816A4((uint64_t)v85, &qword_100297338);
    sub_1000816A4(v61, (uint64_t *)&unk_1002924C0);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v82)(v86, 1, 1, v57);
  }
  else
  {
    uint64_t v65 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v62, v61, v57);
    ((void (*)(char *, void, uint64_t))v76)(v50, enum case for Calendar.Component.day(_:), v46);
    uint64_t v66 = v83;
    sub_1001EB150();
    v64(v50, v46);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v57);
    sub_1000816A4(v59, (uint64_t *)&unk_1002924C0);
    v68(v66, v89);
    return sub_1000816A4((uint64_t)v85, &qword_100297338);
  }
}

uint64_t sub_1001DCC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v25 = (char *)&v25 - v8;
  uint64_t v9 = sub_1001EB180();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v25 - v17;
  sub_1001EB0F0();
  sub_1001DEA9C(a1, a2, (uint64_t)v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v27 = v9;
  v19(v12, v9);
  sub_1000936F8((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_1002924C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) == 1)
  {
    sub_1000816A4((uint64_t)v18, (uint64_t *)&unk_1002924C0);
    uint64_t v20 = 0;
    uint64_t v18 = v16;
  }
  else
  {
    uint64_t v21 = v25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v16, v4);
    sub_1001EB0F0();
    uint64_t v22 = (uint64_t)v26;
    sub_1001EB020();
    uint64_t v20 = sub_1001D1E60(v22, 1);
    char v23 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v23(v22, v4);
    v19(v12, v27);
    v23((uint64_t)v21, v4);
  }
  sub_1000816A4((uint64_t)v18, (uint64_t *)&unk_1002924C0);
  return v20;
}

uint64_t sub_1001DCF28(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for ReadingHistoryDay(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007DC14(&qword_100291220);
  uint64_t v34 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100294F68);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v39 = sub_10007DC14(&qword_100294F70);
  uint64_t v33 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for ReadingHistoryMonth(0);
  uint64_t v17 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (uint64_t)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10007DC14(&qword_100297338);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v32 - v23;
  ReadingHistoryModel.readingHistoryMonth(year:month:)(a1, v37, (uint64_t)&v32 - v23);
  sub_1000936F8((uint64_t)v24, (uint64_t)v22, &qword_100297338);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v36) == 1)
  {
    sub_1000816A4((uint64_t)v24, &qword_100297338);
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v38 = v24;
    sub_1001E3A7C((uint64_t)v22, v35, type metadata accessor for ReadingHistoryMonth);
    sub_10007DC14(&qword_100294F90);
    sub_1001EBEF0();
    uint64_t v25 = 0;
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v34 + 32);
    uint64_t v27 = (void (**)(char *, uint64_t))(v34 + 8);
    while (1)
    {
      sub_1001EBEB0();
      sub_1000935F8((uint64_t)v12, (uint64_t)v14, &qword_100294F68);
      uint64_t v28 = sub_10007DC14(&qword_100292E40);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v14, 1, v28) == 1) {
        break;
      }
      (*v26)(v8, &v14[*(int *)(v28 + 48)], v6);
      sub_1001EC100();
      uint64_t v29 = sub_1001EC1A0();
      sub_1001E0E0C((uint64_t)v5, type metadata accessor for ReadingHistoryDay);
      (*v27)(v8, v6);
      BOOL v30 = __OFADD__(v25, v29);
      v25 += v29;
      if (v30)
      {
        __break(1u);
        break;
      }
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v39);
    sub_1001E0E0C(v35, type metadata accessor for ReadingHistoryMonth);
    uint64_t v22 = v38;
  }
  sub_1000816A4((uint64_t)v22, &qword_100297338);
  return v25;
}

Swift::Int sub_1001DD3E4(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001CFCE0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  Swift::Int result = sub_1001DEFD0(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1001DD454(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), void (*a4)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v8 = *(void *)(sub_10007DC14(a2) - 8);
  uint64_t v9 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = a3(v9);
  }
  uint64_t v10 = *(void *)(v9 + 16);
  v12[0] = v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  Swift::Int result = sub_1001DF65C(v12, a2, a4);
  *a1 = v9;
  return result;
}

Swift::Bool __swiftcall ReadingHistoryModel.DayKey.isTheDayBefore(_:)(bookdatastored::ReadingHistoryModel::DayKey a1)
{
  uint64_t v49 = v2;
  uint64_t v47 = v1;
  Swift::Int day = a1.day;
  Swift::Int yearMonth = a1.yearMonth;
  uint64_t v3 = sub_1001EB180();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1001EB0C0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v41 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v42 = (char *)&v39 - v17;
  __chkstk_darwin(v16);
  uint64_t v50 = (char *)&v39 - v18;
  uint64_t v19 = sub_10007DC14(&qword_100291FC8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10007DC14(&qword_100291FD0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1001EAD80();
  uint64_t v25 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v27 = (char *)&v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v4;
  uint64_t v46 = v3;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v24, 1, 1, v3);
  uint64_t v28 = sub_1001EB190();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v21, 1, 1, v28);
  sub_1001EAD70();
  sub_1001D1254(v47, v49, (uint64_t)v11);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v29(v11, 1, v12) == 1) {
    goto LABEL_4;
  }
  uint64_t v49 = v13;
  BOOL v30 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v30(v50, v11, v12);
  sub_1001EB0F0();
  uint64_t v11 = v44;
  sub_1001EB140();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v46);
  if (v29(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v12);
LABEL_4:
    sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_1002924C0);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v48);
    return 0;
  }
  uint64_t v32 = v42;
  v30(v42, v11, v12);
  uint64_t v33 = v49;
  uint64_t v34 = (uint64_t)v41;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v41, v32, v12);
  uint64_t v35 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(v34);
  uint64_t v37 = v36;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  v38(v32, v12);
  v38(v50, v12);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v48);
  if (v35 == yearMonth) {
    return v37 == day;
  }
  return 0;
}

void ReadingHistoryModel.DayKey.hash(into:)(uint64_t a1, Swift::UInt a2, Swift::UInt a3)
{
}

Swift::Int ReadingHistoryModel.DayKey.hashValue.getter(Swift::UInt a1, Swift::UInt a2)
{
  return sub_1001ED1A0();
}

BOOL sub_1001DDB60(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t *sub_1001DDB78(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result[1];
  BOOL v4 = __OFADD__(v2, v3);
  uint64_t v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = a2[1];
  BOOL v4 = __OFADD__(v6, v7);
  uint64_t v8 = v6 + v7;
  if (!v4) {
    return (uint64_t *)(v5 < v8);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t *sub_1001DDBDC(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = a2[1];
  BOOL v4 = __OFADD__(v2, v3);
  uint64_t v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = result[1];
  BOOL v4 = __OFADD__(v6, v7);
  uint64_t v8 = v6 + v7;
  if (!v4) {
    return (uint64_t *)(v5 >= v8);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t *sub_1001DDC40(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result[1];
  BOOL v4 = __OFADD__(v2, v3);
  uint64_t v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = a2[1];
  BOOL v4 = __OFADD__(v6, v7);
  uint64_t v8 = v6 + v7;
  if (!v4) {
    return (uint64_t *)(v5 >= v8);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t *sub_1001DDCA4(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = a2[1];
  BOOL v4 = __OFADD__(v2, v3);
  uint64_t v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = result[1];
  BOOL v4 = __OFADD__(v6, v7);
  uint64_t v8 = v6 + v7;
  if (!v4) {
    return (uint64_t *)(v5 < v8);
  }
LABEL_9:
  __break(1u);
  return result;
}

Swift::Int sub_1001DDD08()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_1001ED170();
  sub_1001ED180(v1);
  sub_1001ED180(v2);
  return sub_1001ED1A0();
}

void sub_1001DDD64()
{
  Swift::UInt v1 = v0[1];
  sub_1001ED180(*v0);
  sub_1001ED180(v1);
}

Swift::Int sub_1001DDDA0()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_1001ED170();
  sub_1001ED180(v1);
  sub_1001ED180(v2);
  return sub_1001ED1A0();
}

uint64_t ReadingHistoryModel.debugDescription.getter()
{
  uint64_t v101 = sub_10007DC14(&qword_100291F68);
  uint64_t v88 = *(void *)(v101 - 8);
  uint64_t v1 = __chkstk_darwin(v101);
  uint64_t v100 = (uint64_t *)((char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v1);
  uint64_t v99 = (char *)&v81 - v3;
  uint64_t v4 = type metadata accessor for ReadingHistoryMonth(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10007DC14(&qword_100291F98);
  uint64_t v87 = *(void *)(v98 - 8);
  uint64_t v7 = __chkstk_darwin(v98);
  v97._object = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v81 - v9);
  uint64_t v91 = sub_10007DC14(&qword_100291BD8);
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v90 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007DC14(&qword_100291BD0);
  v97._countAndFlagsBits = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10007DC14(&qword_100297080);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v81 - v20;
  uint64_t v22 = sub_1000815A4(&qword_100297088, &qword_100291BD0);
  sub_1001EC7A0();
  uint64_t v96 = v0;
  uint64_t v92 = v22;
  sub_1001EC7E0();
  sub_1000815A4(&qword_100297090, &qword_100297080);
  char v23 = sub_1001EC330();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  Swift::String v94 = v19;
  v24(v19, v15);
  Swift::String v93 = v21;
  uint64_t v95 = v16 + 8;
  v24(v21, v15);
  if (v23) {
    return 0xD00000000000001BLL;
  }
  uint64_t v26 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v97._countAndFlagsBits + 16))(v14, v96, v12);
  sub_1000815A4(&qword_100291FB0, &qword_100291BD0);
  uint64_t v103 = sub_1001EC570();
  sub_1001DD454(&v103, &qword_100291F98, (uint64_t (*)(uint64_t))sub_1001CFDBC, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_1001CED28);
  uint64_t v27 = v103;
  uint64_t v82 = 0;
  int64_t v28 = *(void *)(v103 + 16);
  uint64_t v86 = v12;
  uint64_t v85 = v15;
  uint64_t v84 = v24;
  if (v28)
  {
    uint64_t v105 = _swiftEmptyArrayStorage;
    sub_1000CF7D0(0, v28, 0);
    unint64_t v29 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    uint64_t v83 = v27;
    uint64_t v30 = v27 + v29;
    v97._countAndFlagsBits = *(void *)(v87 + 72);
    do
    {
      sub_1000936F8(v30, (uint64_t)v10, &qword_100291F98);
      uint64_t v103 = 0x2068746E6F4DLL;
      unint64_t v104 = 0xE600000000000000;
      uint64_t v102 = *v10;
      uint64_t v31 = v102;
      v106._countAndFlagsBits = sub_1001ED040();
      sub_1001EC490(v106);
      swift_bridgeObjectRelease();
      v107._countAndFlagsBits = 8250;
      v107._object = (void *)0xE200000000000000;
      sub_1001EC490(v107);
      uint64_t v32 = *(int *)(v98 + 48);
      uint64_t v33 = (char *)v97._object + v32;
      uint64_t v34 = (char *)v10 + v32;
      *(void *)v97._object = v31;
      uint64_t v35 = sub_10007DC14(&qword_100291FC0);
      uint64_t v36 = *(void *)(v35 - 8);
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      sub_1001EC100();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
      uint64_t v37 = sub_1001D9E28(0, 1);
      uint64_t v39 = v38;
      sub_1001E0E0C((uint64_t)v6, type metadata accessor for ReadingHistoryMonth);
      v108._countAndFlagsBits = v37;
      v108._object = v39;
      sub_1001EC490(v108);
      swift_bridgeObjectRelease();
      v109._countAndFlagsBits = 10;
      v109._object = (void *)0xE100000000000000;
      sub_1001EC490(v109);
      uint64_t v41 = v103;
      unint64_t v40 = v104;
      sub_1000816A4((uint64_t)v10, &qword_100291F98);
      uint64_t v42 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000CF7D0(0, v42[2] + 1, 1);
        uint64_t v42 = v105;
      }
      unint64_t v44 = v42[2];
      unint64_t v43 = v42[3];
      if (v44 >= v43 >> 1)
      {
        sub_1000CF7D0(v43 > 1, v44 + 1, 1);
        uint64_t v42 = v105;
      }
      void v42[2] = v44 + 1;
      uint64_t v45 = &v42[2 * v44];
      v45[4] = v41;
      v45[5] = v40;
      v30 += v97._countAndFlagsBits;
      --v28;
    }
    while (v28);
    swift_release();
    uint64_t v26 = v96;
    uint64_t v15 = v85;
    uint64_t v24 = v84;
  }
  else
  {
    swift_release();
    uint64_t v42 = _swiftEmptyArrayStorage;
  }
  uint64_t v103 = (uint64_t)v42;
  uint64_t v46 = sub_10007DC14(&qword_100292710);
  uint64_t v47 = sub_1000815A4((unint64_t *)&qword_100291F60, &qword_100292710);
  uint64_t v87 = v46;
  uint64_t v83 = v47;
  v97._countAndFlagsBits = sub_1001EC300();
  v97._object = v48;
  swift_bridgeObjectRelease();
  uint64_t v49 = type metadata accessor for ReadingHistoryModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v90, v26 + *(int *)(v49 + 20), v91);
  sub_1000815A4(&qword_100291F80, &qword_100291BD8);
  uint64_t v103 = sub_1001EC570();
  uint64_t v50 = v82;
  sub_1001DD454(&v103, &qword_100291F68, (uint64_t (*)(uint64_t))sub_1001CFDA8, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_1001CED1C);
  uint64_t v51 = v103;
  if (v50)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    int64_t v52 = *(void *)(v103 + 16);
    if (v52)
    {
      uint64_t v105 = _swiftEmptyArrayStorage;
      sub_1000CF7D0(0, v52, 0);
      uint64_t v53 = *(unsigned __int8 *)(v88 + 80);
      uint64_t v91 = v51;
      uint64_t v54 = v51 + ((v53 + 32) & ~v53);
      uint64_t v98 = *(void *)(v88 + 72);
      uint64_t v55 = (uint64_t *)v99;
      do
      {
        sub_1000936F8(v54, (uint64_t)v55, &qword_100291F68);
        id v56 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
        [v56 setFormatOptions:275];
        uint64_t v102 = *v55;
        uint64_t v57 = v102;
        uint64_t v103 = sub_1001ED040();
        unint64_t v104 = v58;
        v110._countAndFlagsBits = 0x203A7961642DLL;
        v110._object = (void *)0xE600000000000000;
        sub_1001EC490(v110);
        uint64_t v59 = *(int *)(v101 + 48);
        uint64_t v60 = (char *)v100 + v59;
        uint64_t v61 = (char *)v55 + v59;
        *uint64_t v100 = v57;
        uint64_t v62 = sub_1001EB0C0();
        uint64_t v63 = *(void *)(v62 - 8);
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
        Class isa = sub_1001EB060().super.isa;
        (*(void (**)(char *, uint64_t))(v63 + 8))(v60, v62);
        id v65 = [v56 stringFromDate:isa];

        uint64_t v66 = sub_1001EC370();
        uint64_t v68 = v67;

        v111._countAndFlagsBits = v66;
        v111._object = v68;
        sub_1001EC490(v111);

        swift_bridgeObjectRelease();
        uint64_t v70 = v103;
        unint64_t v69 = v104;
        sub_1000816A4((uint64_t)v55, &qword_100291F68);
        unsigned int v71 = v105;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000CF7D0(0, v71[2] + 1, 1);
          unsigned int v71 = v105;
        }
        unint64_t v73 = v71[2];
        unint64_t v72 = v71[3];
        if (v73 >= v72 >> 1)
        {
          sub_1000CF7D0(v72 > 1, v73 + 1, 1);
          unsigned int v71 = v105;
        }
        v71[2] = v73 + 1;
        uint64_t v74 = &v71[2 * v73];
        v74[4] = v70;
        v74[5] = v69;
        v54 += v98;
        --v52;
      }
      while (v52);
      swift_release();
      uint64_t v15 = v85;
      uint64_t v24 = v84;
    }
    else
    {
      swift_release();
      unsigned int v71 = _swiftEmptyArrayStorage;
    }
    uint64_t v103 = (uint64_t)v71;
    uint64_t v75 = sub_1001EC300();
    unsigned int v77 = v76;
    swift_bridgeObjectRelease();
    uint64_t v103 = 0;
    unint64_t v104 = 0xE000000000000000;
    sub_1001ECD20(56);
    v112._countAndFlagsBits = 0xD00000000000001DLL;
    v112._object = (void *)0x8000000100227BC0;
    sub_1001EC490(v112);
    uint64_t v78 = v93;
    sub_1001EC7A0();
    uint64_t v79 = v94;
    sub_1001EC7E0();
    uint64_t v80 = sub_1001EC7D0();
    v24(v79, v15);
    v24(v78, v15);
    uint64_t v105 = (void *)v80;
    v113._countAndFlagsBits = sub_1001ED040();
    sub_1001EC490(v113);
    swift_bridgeObjectRelease();
    v114._countAndFlagsBits = 10;
    v114._object = (void *)0xE100000000000000;
    sub_1001EC490(v114);
    sub_1001EC490(v97);
    swift_bridgeObjectRelease();
    v115._object = (void *)0x8000000100227BE0;
    v115._countAndFlagsBits = 0xD000000000000011;
    sub_1001EC490(v115);
    v116._countAndFlagsBits = v75;
    v116._object = v77;
    sub_1001EC490(v116);
    swift_bridgeObjectRelease();
    v117._countAndFlagsBits = 4065885;
    v117._object = (void *)0xE300000000000000;
    sub_1001EC490(v117);
    return v103;
  }
  return result;
}

uint64_t sub_1001DEA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v3 = sub_1001EB160();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v31 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100291FC8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100291FD0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1001EAD80();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v23 = (char *)&v31 - v22;
  uint64_t v24 = sub_1001EB180();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
  uint64_t v25 = sub_1001EB190();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 1, 1, v25);
  sub_1001EAD70();
  sub_1001EAD50();
  sub_1001EAD60();
  sub_1001EB130();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1000936F8((uint64_t)v23, (uint64_t)v21, (uint64_t *)&unk_1002924C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v21, 1, v5) == 1)
  {
    sub_1000816A4((uint64_t)v23, (uint64_t *)&unk_1002924C0);
    sub_1000816A4((uint64_t)v21, (uint64_t *)&unk_1002924C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v37, 1, 1, v5);
  }
  else
  {
    uint64_t v27 = v31;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v31, v21, v5);
    unint64_t v29 = v32;
    uint64_t v28 = v33;
    uint64_t v30 = v34;
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, enum case for Calendar.Component.month(_:), v34);
    sub_1001EB150();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v5);
    return sub_1000816A4((uint64_t)v23, (uint64_t *)&unk_1002924C0);
  }
}

Swift::Int sub_1001DEFD0(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1001ED030(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v95 = result;
  Swift::Int v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      Swift::String v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          uint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1001E0310((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_1001CEE74((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v94[2] = 0;
      return swift_bridgeObjectRelease();
    }
    Swift::String v94 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1001EC630();
    *(void *)(v7 + 16) = v6;
    Swift::Int v3 = v96;
    Swift::String v94 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v97 = *v2;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(void *)(v10 + 8 * v9);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        uint64_t v16 = v14;
        while (1)
        {
          uint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          Swift::Int v18 = v9 - 1;
          Swift::Int v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    Swift::Int v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      Swift::Int v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        uint64_t v23 = *(void *)(v10 + 8 * v9);
        Swift::Int v24 = v13;
        uint64_t v25 = v22;
        do
        {
          uint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *uint64_t v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      Swift::Int v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1001CE928(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      unsigned int v77 = sub_1001CE928((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    unint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          unint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        unsigned int v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        unint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1001E0310((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)unsigned int v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        unint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1001ECE80();
  __break(1u);
  return result;
}

Swift::Int sub_1001DF65C(void *a1, uint64_t *a2, void (*a3)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v133 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = v3;
  uint64_t v7 = sub_10007DC14(a2);
  uint64_t v134 = *(void *)(v7 - 8);
  uint64_t v135 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v129 = (uint64_t)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v141 = (uint64_t)&v123 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v139 = (uint64_t *)((char *)&v123 - v13);
  __chkstk_darwin(v12);
  uint64_t v138 = (uint64_t *)((char *)&v123 - v14);
  Swift::Int v15 = a1[1];
  Swift::Int result = sub_1001ED030(v15);
  if (result >= v15)
  {
    if (v15 < 0) {
      goto LABEL_139;
    }
    if (v15) {
      return sub_1001E0080(0, v15, 1, a1, v4);
    }
    return result;
  }
  if (v15 >= 0) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = v15 + 1;
  }
  if (v15 < -1) {
    goto LABEL_147;
  }
  Swift::Int v126 = result;
  if (v15 < 2)
  {
    Swift::Int v21 = (char *)_swiftEmptyArrayStorage;
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    uint64_t v125 = _swiftEmptyArrayStorage;
    if (v15 != 1)
    {
      unint64_t v23 = _swiftEmptyArrayStorage[2];
LABEL_105:
      if (v23 >= 2)
      {
        uint64_t v112 = *a1;
        do
        {
          unint64_t v113 = v23 - 2;
          if (v23 < 2) {
            goto LABEL_134;
          }
          if (!v112) {
            goto LABEL_146;
          }
          uint64_t v114 = v5;
          Swift::String v115 = v21;
          Swift::String v116 = v21 + 32;
          uint64_t v117 = *(void *)&v21[16 * v113 + 32];
          uint64_t v118 = *(void *)&v21[16 * v23 + 24];
          sub_1001E0580(v112 + *(void *)(v134 + 72) * v117, v112 + *(void *)(v134 + 72) * *(void *)&v116[16 * v23 - 16], v112 + *(void *)(v134 + 72) * v118, v131, v4, v133);
          if (v114) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v115 = sub_1001CEE74((uint64_t)v115);
          }
          if (v113 >= *((void *)v115 + 2)) {
            goto LABEL_136;
          }
          uint64_t v119 = v115 + 32;
          uint64_t v120 = &v115[16 * v113 + 32];
          *(void *)uint64_t v120 = v117;
          *((void *)v120 + 1) = v118;
          uint64_t v121 = v115;
          unint64_t v122 = *((void *)v115 + 2);
          if (v23 > v122) {
            goto LABEL_137;
          }
          memmove(&v119[16 * v23 - 16], &v119[16 * v23], 16 * (v122 - v23));
          Swift::Int v21 = v121;
          *((void *)v121 + 2) = v122 - 1;
          unint64_t v23 = v122 - 1;
          uint64_t v5 = 0;
        }
        while (v122 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      v125[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v18 = v17 >> 1;
    uint64_t v19 = sub_1001EC630();
    *(void *)(v19 + 16) = v18;
    uint64_t v20 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v125 = (void *)v19;
    unint64_t v131 = v19 + ((v20 + 32) & ~v20);
  }
  Swift::Int v22 = 0;
  Swift::Int v21 = (char *)_swiftEmptyArrayStorage;
  uint64_t v144 = v4;
  uint64_t v132 = a1;
  while (1)
  {
    Swift::Int v24 = v22;
    Swift::Int v25 = v22 + 1;
    Swift::Int v130 = v22;
    if (v22 + 1 < v15)
    {
      uint64_t v127 = v21;
      uint64_t v136 = *a1;
      uint64_t v26 = v136;
      Swift::Int v27 = *(void *)(v134 + 72);
      unint64_t v28 = v138;
      sub_1000936F8(v136 + v27 * v25, (uint64_t)v138, v4);
      uint64_t v29 = v26 + v27 * v24;
      uint64_t v30 = v139;
      sub_1000936F8(v29, (uint64_t)v139, v4);
      Swift::Int v142 = *v28;
      Swift::Int v137 = *v30;
      uint64_t v31 = (uint64_t)v30;
      uint64_t v32 = v136;
      sub_1000816A4(v31, v4);
      sub_1000816A4((uint64_t)v28, v4);
      Swift::Int v143 = v27;
      if (v24 + 2 >= v15)
      {
        Swift::Int v25 = v24 + 2;
      }
      else
      {
        uint64_t v124 = v5;
        Swift::Int v140 = v27 * v25;
        Swift::Int v25 = v24 + 2;
        uint64_t v33 = v27 * (v24 + 2);
        while (1)
        {
          Swift::Int v34 = v15;
          char v35 = v138;
          int v36 = v142 < v137;
          sub_1000936F8(v32 + v33, (uint64_t)v138, v4);
          uint64_t v37 = v139;
          sub_1000936F8(v32 + v140, (uint64_t)v139, v4);
          int v38 = *v35 >= *v37;
          sub_1000816A4((uint64_t)v37, v4);
          sub_1000816A4((uint64_t)v35, v4);
          if (v36 == v38) {
            break;
          }
          Swift::Int v27 = v143;
          v32 += v143;
          ++v25;
          Swift::Int v15 = v34;
          if (v34 == v25)
          {
            Swift::Int v25 = v34;
            uint64_t v5 = v124;
            a1 = v132;
            Swift::Int v24 = v130;
            goto LABEL_23;
          }
        }
        uint64_t v5 = v124;
        a1 = v132;
        Swift::Int v24 = v130;
        Swift::Int v15 = v34;
        Swift::Int v27 = v143;
      }
LABEL_23:
      if (v142 < v137)
      {
        if (v25 < v24) {
          goto LABEL_140;
        }
        if (v24 < v25)
        {
          Swift::Int v142 = v15;
          uint64_t v39 = 0;
          uint64_t v40 = v27 * (v25 - 1);
          Swift::Int v41 = v25 * v27;
          uint64_t v42 = v24 * v27;
          Swift::Int v140 = v25;
          do
          {
            if (v24 != v25 + v39 - 1)
            {
              uint64_t v43 = v136;
              if (!v136) {
                goto LABEL_145;
              }
              unint64_t v44 = v136 + v42;
              uint64_t v45 = v136 + v40;
              sub_1000935F8(v136 + v42, v129, v144);
              if (v42 < v40 || v44 >= v43 + v41)
              {
                swift_arrayInitWithTakeFrontToBack();
                Swift::Int v27 = v143;
              }
              else
              {
                Swift::Int v27 = v143;
                if (v42 != v40) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              uint64_t v4 = v144;
              sub_1000935F8(v129, v45, v144);
              Swift::Int v25 = v140;
            }
            ++v24;
            --v39;
            v40 -= v27;
            v41 -= v27;
            v42 += v27;
          }
          while (v24 < v25 + v39);
          a1 = v132;
          Swift::Int v24 = v130;
          Swift::Int v15 = v142;
        }
      }
      Swift::Int v21 = v127;
    }
    if (v25 < v15)
    {
      if (__OFSUB__(v25, v24)) {
        goto LABEL_138;
      }
      if (v25 - v24 < v126) {
        break;
      }
    }
LABEL_56:
    if (v25 < v24) {
      goto LABEL_133;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v140 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      Swift::Int v21 = sub_1001CE928(0, *((void *)v21 + 2) + 1, 1, v21);
    }
    unint64_t v63 = *((void *)v21 + 2);
    unint64_t v62 = *((void *)v21 + 3);
    unint64_t v23 = v63 + 1;
    if (v63 >= v62 >> 1) {
      Swift::Int v21 = sub_1001CE928((char *)(v62 > 1), v63 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v23;
    uint64_t v64 = v21 + 32;
    uint64_t v65 = &v21[16 * v63 + 32];
    Swift::Int v66 = v140;
    *(void *)uint64_t v65 = v24;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v23 - 1;
        if (v23 >= 4)
        {
          uint64_t v72 = &v64[16 * v23];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_122;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_123;
          }
          unint64_t v79 = v23 - 2;
          uint64_t v80 = &v64[16 * v23 - 32];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_125;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_128;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v64[16 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_132;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_93;
          }
        }
        else
        {
          if (v23 != 3)
          {
            uint64_t v96 = *((void *)v21 + 4);
            uint64_t v97 = *((void *)v21 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_87;
          }
          uint64_t v69 = *((void *)v21 + 4);
          uint64_t v68 = *((void *)v21 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_124;
        }
        unint64_t v79 = v23 - 2;
        unint64_t v85 = &v64[16 * v23 - 32];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_127;
        }
        unint64_t v91 = &v64[16 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_130;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_131;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_93:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v90) {
          goto LABEL_126;
        }
        uint64_t v98 = &v64[16 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_129;
        }
        if (v101 < v89) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v23)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v132) {
          goto LABEL_144;
        }
        Swift::String v107 = &v64[16 * v106];
        uint64_t v108 = *(void *)v107;
        Swift::String v109 = &v64[16 * v67];
        uint64_t v110 = *((void *)v109 + 1);
        sub_1001E0580(*v132 + *(void *)(v134 + 72) * *(void *)v107, *v132 + *(void *)(v134 + 72) * *(void *)v109, *v132 + *(void *)(v134 + 72) * v110, v131, v144, v133);
        if (v5) {
          goto LABEL_116;
        }
        if (v110 < v108) {
          goto LABEL_119;
        }
        if (v67 > *((void *)v21 + 2)) {
          goto LABEL_120;
        }
        *(void *)Swift::String v107 = v108;
        *(void *)&v64[16 * v106 + 8] = v110;
        unint64_t v111 = *((void *)v21 + 2);
        if (v67 >= v111) {
          goto LABEL_121;
        }
        unint64_t v23 = v111 - 1;
        memmove(&v64[16 * v67], v109 + 16, 16 * (v111 - 1 - v67));
        *((void *)v21 + 2) = v111 - 1;
        uint64_t v4 = v144;
        if (v111 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v23 = 1;
LABEL_14:
    a1 = v132;
    Swift::Int v15 = v132[1];
    Swift::Int v22 = v140;
    if (v140 >= v15) {
      goto LABEL_105;
    }
  }
  if (__OFADD__(v24, v126)) {
    goto LABEL_141;
  }
  if (v24 + v126 >= v15) {
    Swift::Int v46 = v15;
  }
  else {
    Swift::Int v46 = v24 + v126;
  }
  if (v46 >= v24)
  {
    if (v25 != v46)
    {
      uint64_t v127 = v21;
      Swift::Int v128 = v46;
      uint64_t v124 = v5;
      uint64_t v47 = *(void *)(v134 + 72);
      uint64_t v48 = v47 * (v25 - 1);
      uint64_t v136 = v47;
      Swift::Int v49 = v25 * v47;
      do
      {
        uint64_t v51 = 0;
        Swift::Int v140 = v25;
        Swift::Int v137 = v49;
        while (1)
        {
          Swift::Int v142 = v24;
          uint64_t v52 = *a1;
          uint64_t v53 = v49 + v51 + *a1;
          char v54 = v138;
          sub_1000936F8(v53, (uint64_t)v138, v4);
          uint64_t v55 = v48;
          uint64_t v56 = v48 + v51 + v52;
          uint64_t v57 = v139;
          sub_1000936F8(v56, (uint64_t)v139, v4);
          Swift::Int v143 = *v54;
          Swift::Int v58 = *v57;
          sub_1000816A4((uint64_t)v57, v4);
          sub_1000816A4((uint64_t)v54, v4);
          if (v143 >= v58) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_143;
          }
          Swift::Int v49 = v137;
          uint64_t v48 = v55;
          uint64_t v60 = v59 + v55 + v51;
          sub_1000935F8(v59 + v137 + v51, v141, v144);
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v4 = v144;
          sub_1000935F8(v141, v60, v144);
          v51 -= v136;
          Swift::Int v24 = v142 + 1;
          Swift::Int v50 = v140;
          if (v140 == v142 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v4 = v144;
        Swift::Int v50 = v140;
        uint64_t v48 = v55;
        Swift::Int v49 = v137;
LABEL_49:
        Swift::Int v25 = v50 + 1;
        v48 += v136;
        v49 += v136;
        Swift::Int v24 = v130;
      }
      while (v25 != v128);
      Swift::Int v25 = v128;
      uint64_t v5 = v124;
      Swift::Int v21 = v127;
    }
    goto LABEL_56;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  Swift::Int result = sub_1001ECE80();
  __break(1u);
  return result;
}

uint64_t sub_1001E0080(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v5 = a5;
  uint64_t v34 = a1;
  uint64_t v35 = sub_10007DC14(a5);
  uint64_t v9 = __chkstk_darwin(v35);
  uint64_t v41 = (uint64_t)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v37 = (uint64_t *)((char *)&v32 - v12);
  uint64_t result = __chkstk_darwin(v11);
  int v36 = (uint64_t *)((char *)&v32 - v15);
  uint64_t v40 = a3;
  uint64_t v33 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v14 + 72);
    uint64_t v43 = v16 * (v40 - 1);
    uint64_t v38 = v16;
    uint64_t v17 = v16 * v40;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v19 = v34;
    uint64_t v39 = v17;
    while (1)
    {
      uint64_t v20 = a4;
      uint64_t v21 = *a4;
      uint64_t v22 = v17 + v18 + v21;
      unint64_t v23 = v36;
      sub_1000936F8(v22, (uint64_t)v36, v5);
      uint64_t v24 = v43 + v18 + v21;
      Swift::Int v25 = v5;
      uint64_t v26 = v37;
      sub_1000936F8(v24, (uint64_t)v37, v25);
      uint64_t v42 = *v23;
      uint64_t v27 = *v26;
      uint64_t v28 = (uint64_t)v26;
      uint64_t v5 = v25;
      sub_1000816A4(v28, v25);
      uint64_t v29 = (uint64_t)v23;
      uint64_t v17 = v39;
      uint64_t result = sub_1000816A4(v29, v25);
      a4 = v20;
      if (v42 >= v27)
      {
LABEL_4:
        v43 += v38;
        v17 += v38;
        if (++v40 == v33) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v30 = *v20;
      if (!*v20) {
        break;
      }
      uint64_t v31 = v30 + v43 + v18;
      sub_1000935F8(v30 + v17 + v18, v41, v5);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1000935F8(v41, v31, v5);
      v18 -= v38;
      ++v19;
      a4 = v20;
      if (v40 == v19) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001E0310(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  unint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          unint64_t v23 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1001CEB04((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1001E0580(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, void (*a6)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v7 = a5;
  uint64_t v60 = sub_10007DC14(a5);
  uint64_t v12 = __chkstk_darwin(v60);
  unint64_t v62 = (uint64_t *)((char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v56 - v14);
  uint64_t v17 = *(void *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  unint64_t v18 = a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_71;
  }
  int64_t v19 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_72;
  }
  uint64_t v20 = (uint64_t)(a2 - a1) / v17;
  unint64_t v65 = a1;
  unint64_t v64 = a4;
  uint64_t v21 = v19 / v17;
  unint64_t v59 = a4;
  uint64_t v57 = a6;
  if (v20 >= v19 / v17)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      unint64_t v58 = a1;
      uint64_t v24 = v21 * v17;
      unint64_t v25 = v59;
      if (v59 < a2 || a2 + v24 <= v59)
      {
        swift_arrayInitWithTakeFrontToBack();
        unint64_t v26 = a3;
      }
      else
      {
        unint64_t v26 = a3;
        if (v59 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v40 = v25 + v24;
      unint64_t v63 = v25 + v24;
      unint64_t v65 = a2;
      if (v24 >= 1 && v58 < a2)
      {
        uint64_t v42 = -v17;
        do
        {
          unint64_t v61 = v26 + v42;
          sub_1000936F8(v40 + v42, (uint64_t)v15, v7);
          unint64_t v43 = a2 + v42;
          unint64_t v44 = v7;
          uint64_t v45 = v15;
          Swift::Int v46 = v62;
          sub_1000936F8(a2 + v42, (uint64_t)v62, v44);
          uint64_t v47 = v42;
          uint64_t v48 = *v45;
          uint64_t v49 = *v46;
          uint64_t v50 = (uint64_t)v46;
          uint64_t v15 = v45;
          uint64_t v7 = v44;
          sub_1000816A4(v50, v44);
          sub_1000816A4((uint64_t)v15, v44);
          if (v48 >= v49)
          {
            unint64_t v53 = v63;
            v63 += v47;
            BOOL v54 = v26 < v53 || v61 >= v53;
            uint64_t v42 = v47;
            unint64_t v51 = v61;
            if (v54)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v43 = a2;
              unint64_t v52 = v59;
            }
            else
            {
              unint64_t v52 = v59;
              if (v26 != v53) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v43 = a2;
            }
          }
          else
          {
            uint64_t v42 = v47;
            unint64_t v51 = v61;
            if (v26 < a2 || v61 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v52 = v59;
            }
            else
            {
              unint64_t v52 = v59;
              if (v26 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v65 += v42;
          }
          unint64_t v40 = v63;
          if (v63 <= v52) {
            break;
          }
          a2 = v43;
          unint64_t v26 = v51;
        }
        while (v43 > v58);
      }
      goto LABEL_69;
    }
  }
  else if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = v20 * v17;
    unint64_t v23 = v59;
    if (v59 < v18 || v18 + v22 <= v59)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v59 != v18)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v27 = v23 + v22;
    unint64_t v63 = v23 + v22;
    if (v22 >= 1 && a2 < a3)
    {
      unint64_t v29 = a3;
      uint64_t v30 = v23;
      do
      {
        sub_1000936F8(a2, (uint64_t)v15, v7);
        uint64_t v31 = v30;
        uint64_t v32 = v62;
        sub_1000936F8(v31, (uint64_t)v62, v7);
        uint64_t v33 = *v15;
        uint64_t v34 = *v32;
        sub_1000816A4((uint64_t)v32, v7);
        sub_1000816A4((uint64_t)v15, v7);
        unint64_t v35 = v65;
        if (v33 >= v34)
        {
          unint64_t v38 = v64 + v17;
          if (v65 < v64 || v65 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v65 != v64)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v64 = v38;
          unint64_t v36 = a2;
        }
        else
        {
          unint64_t v36 = a2 + v17;
          if (v65 < a2 || v65 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v65 == a2)
          {
            unint64_t v35 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v65 = v35 + v17;
        uint64_t v30 = v64;
        if (v64 >= v27) {
          break;
        }
        a2 = v36;
      }
      while (v36 < v29);
    }
LABEL_69:
    v57(&v65, &v64, &v63);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(uint64_t a1)
{
  uint64_t v2 = sub_1001EB160();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EB180();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  int64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EB0F0();
  int64_t v9 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v9(v5, enum case for Calendar.Component.year(_:), v2);
  uint64_t v10 = sub_1001EB170();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  v9(v5, enum case for Calendar.Component.month(_:), v2);
  uint64_t v12 = sub_1001EB170();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v11)(v5, v2);
  uint64_t v14 = 100 * v10;
  if ((unsigned __int128)(v10 * (__int128)100) >> 64 == (100 * v10) >> 63)
  {
    BOOL v15 = __OFADD__(v14, v12);
    uint64_t v16 = v14 + v12;
    if (!v15)
    {
      v9(v5, enum case for Calendar.Component.day(_:), v2);
      sub_1001EB170();
      uint64_t v17 = sub_1001EB0C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
      v11(v5, v2);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v19);
      return v16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ReadingHistoryDay(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_1002971A8);
}

uint64_t sub_1001E0D24()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E0D34@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DBBEC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001E0D3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E0DA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ReadingHistoryModel(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_1002972E8);
}

uint64_t sub_1001E0E0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001E0E6C()
{
  return sub_1001E0DA4(&qword_100297098, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
}

uint64_t sub_1001E0EB4()
{
  return sub_1001E0DA4(&qword_1002970A0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
}

void *sub_1001E0EFC()
{
  return &protocol witness table for CRCounter;
}

uint64_t sub_1001E0F08()
{
  return sub_1000815A4(&qword_1002970A8, &qword_100291C50);
}

uint64_t sub_1001E0F44()
{
  return sub_1001E0DA4((unint64_t *)&unk_100296890, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
}

uint64_t sub_1001E0F8C()
{
  return sub_1001E0DA4(&qword_1002970B0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
}

uint64_t sub_1001E0FD4()
{
  return sub_1001E0DA4(&qword_1002970B8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
}

uint64_t sub_1001E101C()
{
  return sub_1000815A4(&qword_1002970C0, &qword_1002970C8);
}

uint64_t sub_1001E1058()
{
  return sub_1001E0DA4(&qword_1002970D0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
}

uint64_t sub_1001E10A0()
{
  return sub_1001E0DA4(&qword_1002970D8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
}

uint64_t sub_1001E10E8()
{
  return sub_1001E0DA4(&qword_1002970E0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
}

uint64_t sub_1001E1130()
{
  return sub_1000815A4(&qword_1002970E8, &qword_100294F90);
}

uint64_t sub_1001E116C()
{
  return sub_1001E0DA4(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
}

uint64_t sub_1001E11B4()
{
  return sub_1001E0DA4(&qword_1002970F0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
}

uint64_t sub_1001E11FC()
{
  return sub_1001E0DA4(&qword_1002970F8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
}

uint64_t sub_1001E1244()
{
  return sub_1000815A4(&qword_100297100, &qword_100297108);
}

uint64_t sub_1001E1280()
{
  return sub_1001E0DA4(&qword_100297110, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
}

uint64_t sub_1001E12C8()
{
  return sub_1001E0DA4(&qword_100297118, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1001E1310()
{
  return sub_1001E0DA4(&qword_100295CE0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1001E1358()
{
  return sub_1000815A4(&qword_100297120, &qword_100291BD0);
}

uint64_t sub_1001E1394()
{
  return sub_1000815A4(&qword_100297128, &qword_100291BD8);
}

uint64_t sub_1001E13D0()
{
  return sub_1001E0DA4((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1001E1418()
{
  return sub_1001E0DA4((unint64_t *)&unk_1002924B0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1001E1460()
{
  return sub_1001E0DA4(&qword_100291BE8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1001E14A8()
{
  return sub_1000815A4(&qword_100297130, &qword_100297138);
}

uint64_t sub_1001E14E4()
{
  return sub_1001E0DA4(&qword_100297140, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
}

unint64_t sub_1001E1530()
{
  unint64_t result = qword_100297148;
  if (!qword_100297148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100297148);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingHistoryDay(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001EC1D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    int64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10007DC14(&qword_100291C50);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ReadingHistoryDay(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EC1D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_10007DC14(&qword_100291C50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EC1D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EC1D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EC1D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EC1D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E1AD8);
}

uint64_t sub_1001E1AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EC1D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10007DC14(&qword_100291C50);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E1C04);
}

uint64_t sub_1001E1C04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1001EC1D0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10007DC14(&qword_100291C50);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001E1D18()
{
  sub_1001EC1D0();
  if (v0 <= 0x3F)
  {
    sub_1001E1DEC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1001E1DEC()
{
  if (!qword_1002971B8)
  {
    unint64_t v0 = sub_1001EBB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002971B8);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for ReadingHistoryMonth(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10007DC14(&qword_100294F90);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_10007DC14(&qword_100291C50);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ReadingHistoryMonth(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100294F90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_10007DC14(&qword_100291C50);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(a2 + 24), v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadingHistoryMonth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100294F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291C50);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingHistoryMonth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100294F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291C50);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ReadingHistoryMonth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100294F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291C50);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ReadingHistoryMonth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100294F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291C50);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistoryMonth(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E24A4);
}

uint64_t sub_1001E24A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100294F90);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10007DC14(&qword_100291C50);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryMonth(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E25D4);
}

uint64_t sub_1001E25D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10007DC14(&qword_100294F90);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10007DC14(&qword_100291C50);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001E26EC()
{
  sub_1001E308C(319, (unint64_t *)&unk_100297258, &qword_100291220, &qword_100291228, (unint64_t *)&unk_100291230);
  if (v0 <= 0x3F)
  {
    sub_1001E1DEC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingHistoryModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10007DC14(&qword_100291BD0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10007DC14(&qword_100291BD8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ReadingHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E2D50);
}

uint64_t sub_1001E2D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10007DC14(&qword_100291BD8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E2E80);
}

uint64_t sub_1001E2E80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10007DC14(&qword_100291BD0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10007DC14(&qword_100291BD8);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001E2F98()
{
  sub_1001E308C(319, &qword_1002972F8, &qword_100291FC0, &qword_100291240, &qword_100291248);
  if (v0 <= 0x3F)
  {
    sub_1001E316C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1001E308C(uint64_t a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_10008155C(a3);
    sub_1000815A4(a4, a3);
    sub_1000815A4(a5, a3);
    unint64_t v9 = sub_1001EBF10();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1001E316C()
{
  if (!qword_100297300)
  {
    sub_1001EB0C0();
    sub_1001E0DA4(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v0 = sub_1001EBF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100297300);
    }
  }
}

ValueMetadata *type metadata accessor for ReadingHistoryModel.DayKey()
{
  return &type metadata for ReadingHistoryModel.DayKey;
}

uint64_t sub_1001E3240(uint64_t a1)
{
  uint64_t v2 = sub_1001EB180();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007DC14(&qword_100291FC8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100291FD0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001EAD80();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001EB0C0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  __chkstk_darwin(v20);
  if (a1 > 9999)
  {
    uint64_t v30 = v22;
    uint64_t v31 = (char *)&v29 - v21;
    unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v32 = v2;
    v23(v11, 1, 1, v2);
    uint64_t v24 = sub_1001EB190();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
    sub_1001EAD70();
    sub_1001EB0F0();
    sub_1001EB130();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v32);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      unint64_t v26 = v31;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v31, v17, v18);
      uint64_t v27 = v30;
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v30, v26, v18);
      uint64_t v25 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(v27);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v18);
      return v25;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  }
  sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_1002924C0);
  return 0;
}

void *sub_1001E3764(uint64_t a1)
{
  uint64_t v2 = sub_1001EB160();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10007DC14(&qword_100297348);
    uint64_t v9 = sub_1001ECD10();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1001E0DA4(&qword_100297350, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_1001EC2E0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1001E0DA4(&qword_100297358, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_1001EC330();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1001E3A7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E3AE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  return sub_1001DC0B8(a1, a2, *(void *)(v3 + 16), a3);
}

void sub_1001E3B08(NSObject *a1)
{
  uint64_t v2 = __error();
  uint64_t v3 = strerror(*v2);
  int v4 = 136315138;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a1, OS_LOG_TYPE_ERROR, "TMP DIR ERROR: _set_user_dir_suffix Failed: %s", (uint8_t *)&v4, 0xCu);
}

void sub_1001E3B9C()
{
  sub_10000BFFC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Daemon initializing.", v1, 2u);
}

void sub_1001E3BDC()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Startup: Cannot start up bookdatastored daemon. Killing process", v2, v3, v4, v5, v6);
}

void sub_1001E3C10(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Startup: Some error happened in pre-listener startup: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E3C88()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Startup: Tried to launch bookdatastored during buddy. We won't be able to read our databases. Kill process", v2, v3, v4, v5, v6);
}

void sub_1001E3CBC()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Startup: Tried to launch bookdatastored before user has accepted applicationprivacy disclosure. Kill process", v2, v3, v4, v5, v6);
}

void sub_1001E3CF0()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Startup: Tried to launch bookdatastored before device has been first unlocked  We won't be able to read our databases. Kill process", v2, v3, v4, v5, v6);
}

void sub_1001E3D24(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error posting Service Started notification. NOTIFY_STATUS: %d", (uint8_t *)v2, 8u);
}

void sub_1001E3D9C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error unarchiving widget reading history data: %@", v2, v3, v4, v5, v6);
}

void sub_1001E3E04()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error reading widget reading history data file: %@", v2, v3, v4, v5, v6);
}

void sub_1001E3E6C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Tried to remove widget reading history data file after failing to save it and failed with: %@", v2, v3, v4, v5, v6);
}

void sub_1001E3ED4()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Failed to write widget reading history data: %@", v2, v3, v4, v5, v6);
}

void sub_1001E3F3C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Failed to create directory for saving widget reading history data: %@", v2, v3, v4, v5, v6);
}

void sub_1001E3FA4()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error unarchiving currentWidgetData: %@", v2, v3, v4, v5, v6);
}

void sub_1001E400C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error reading widget data file: %@", v2, v3, v4, v5, v6);
}

void sub_1001E4074()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Tried to remove current widget data file after failing to update it and failed with: %@", v2, v3, v4, v5, v6);
}

void sub_1001E40DC()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Failed to write out current widget data: %@", v2, v3, v4, v5, v6);
}

void sub_1001E4144()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Failed to create directory for saving widget data: %@", v2, v3, v4, v5, v6);
}

void sub_1001E41AC()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "BDSUbiquityDocumentsObserver: No ubiquity identity", v2, v3, v4, v5, v6);
}

void sub_1001E41E0(uint64_t a1, NSObject *a2)
{
  int v2 = 141558274;
  uint64_t v3 = 1752392040;
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Observing URL: %{mask.hash}@", (uint8_t *)&v2, 0x16u);
}

void sub_1001E426C()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "Setting up query", v2, v3, v4, v5, v6);
}

void sub_1001E42A0()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "Tearing down query", v2, v3, v4, v5, v6);
}

void sub_1001E42D4()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "Found existing nosync directory", v2, v3, v4, v5, v6);
}

void sub_1001E4308()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "Created nosync directory", v2, v3, v4, v5, v6);
}

void sub_1001E433C()
{
  sub_1000134E0();
  sub_100013524((void *)&_mh_execute_header, v0, v1, "Failed to create nosync directory: %{mask.hash}@, %@");
}

void sub_1001E43A4()
{
  sub_1000134E0();
  sub_100013524((void *)&_mh_execute_header, v0, v1, "Failed to create subpath: %{mask.hash}@, %@");
}

void sub_1001E440C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSUbiquityManager: Could not determine file extension for %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E4484(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSWidgetTimelineController - Error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E44FC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error creating FRC for BookWidgetInfo: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E4574(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error fetching updated list of WidgetInfos: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E45EC(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "_isServiceEnabled(%{public}@): TCC returned a NULL array!", (uint8_t *)&v2, 0xCu);
}

void sub_1001E4664(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "_isServiceDisabled(%{public}@): TCC returned a NULL array!", (uint8_t *)&v2, 0xCu);
}

void sub_1001E46DC(uint64_t a1, char a2, os_log_t log)
{
  CFStringRef v3 = @"YES";
  if ((a2 & 1) == 0) {
    CFStringRef v3 = @"NO";
  }
  int v4 = 138543618;
  uint64_t v5 = a1;
  __int16 v6 = 2114;
  CFStringRef v7 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to set %{public}@ to %{public}@.", (uint8_t *)&v4, 0x16u);
}

void sub_1001E477C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error unarchiving notification store data %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E47E4()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error reading notification store data file: %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E484C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Tried to remove notification store data file after failing to save it and failed with: %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E48B4()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Failed to write notification store data: %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E491C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Failed to create directory for saving notification store data: %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E4984()
{
  sub_10000CD30();
  sub_100021C5C((void *)&_mh_execute_header, v0, v1, "BCCloudKitController - Error connecting user to database error=%{public}@", v2);
}

void sub_1001E49F0()
{
  sub_10000CD30();
  sub_100021C5C((void *)&_mh_execute_header, v0, v1, "_coalescedAttachment did not call completion after 10s in %{public}@", v2);
}

void sub_1001E4A5C()
{
  sub_10000CD30();
  sub_100021C5C((void *)&_mh_execute_header, v0, v1, "did not call _coalescedChangeAttachment completion after 45 in %{public}@", v2);
}

void sub_1001E4AC8(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) configuration];
  uint64_t v2 = [v1 containerIdentifier];
  sub_10000CD30();
  sub_100021C3C((void *)&_mh_execute_header, v3, v4, "BCCloudKitController (%{public}@) - Flush Pending Update Attachment Callbacks: Unexpected null accessQueue", v5, v6, v7, v8, v9);
}

void sub_1001E4B68(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) configuration];
  uint64_t v2 = [v1 containerIdentifier];
  sub_10000CD30();
  sub_100021C3C((void *)&_mh_execute_header, v3, v4, "BCCloudKitController (%{public}@) - Update Attachment: Unexpected null accessQueue", v5, v6, v7, v8, v9);
}

void sub_1001E4C08(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) configuration];
  uint64_t v4 = [v3 containerIdentifier];
  sub_10000CD30();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "BCCloudKitController (%{public}@) - getAccountInfo completion - will retry update attachment", v5, 0xCu);
}

void sub_1001E4CB8(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  int v4 = 138543362;
  uint64_t v5 = v3;
  sub_100021C5C((void *)&_mh_execute_header, a2, a3, "Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@", (uint8_t *)&v4);
}

void sub_1001E4D2C(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 134217984;
  uint64_t v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "BCCloudKitController - CURRENT ACCOUNT STATUS %ld", (uint8_t *)&v3, 0xCu);
}

void sub_1001E4DA8()
{
  sub_10000CD30();
  sub_100021C5C((void *)&_mh_execute_header, v0, v1, "Error connecting user to database error=%{public}@", v2);
}

void sub_1001E4E14(id *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4 = [*a1 configuration];
  uint64_t v5 = [v4 containerIdentifier];
  sub_10000CD30();
  __int16 v8 = 2114;
  uint64_t v9 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BCCloudKitController (%{public}@) - Asked to fetch changes for %{public}@ while detached and enableCloudSync=NO, give up!", v7, 0x16u);
}

void sub_1001E4ED8(void *a1, NSObject *a2)
{
  int v3 = [a1 configuration];
  uint64_t v4 = [v3 containerIdentifier];
  sub_10000CD30();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "_updateAccountCacheWithTimeout(%{public}@)", v5, 0xCu);
}

void sub_1001E4F88(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "_updateAccountCacheWithTimeout returning a YES ", v1, 2u);
}

void sub_1001E4FCC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "_updateAccountCacheWithTimeout no access queue!", v1, 2u);
}

void sub_1001E5010(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v4 = [*(id *)(a1 + 48) configuration];
  uint64_t v5 = [v4 containerIdentifier];
  sub_10000CD30();
  __int16 v8 = 1024;
  int v9 = v6;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "(%{public}@) _updateAccountCacheWithTimeout hasChanged:%{BOOL}d ", v7, 0x12u);
}

void sub_1001E50E0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 40) configuration];
  int v3 = [v2 containerIdentifier];
  [*(id *)(a1 + 48) currentStatus];
  sub_100021C74((void *)&_mh_execute_header, v4, v5, "(%{public}@) currentAccountStatus is:%ld No change", v6, v7, v8, v9, 2u);
}

void sub_1001E519C(uint64_t a1, uint64_t *a2, NSObject *a3)
{
  uint64_t v6 = [*(id *)(a1 + 40) configuration];
  uint64_t v7 = [v6 containerIdentifier];
  id v8 = [*(id *)(a1 + 48) currentStatus];
  uint64_t v9 = *a2;
  int v10 = 138543874;
  uint64_t v11 = v7;
  __int16 v12 = 2048;
  id v13 = v8;
  __int16 v14 = 2048;
  uint64_t v15 = v9;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "(%{public}@) currentAccountStatus from:%ld to:%ld", (uint8_t *)&v10, 0x20u);
}

void sub_1001E5280(void *a1)
{
  uint64_t v1 = [a1 configuration];
  uint64_t v2 = [v1 containerIdentifier];
  sub_10000CD30();
  sub_100021C3C((void *)&_mh_execute_header, v3, v4, "p_testAccountChanged (%{public}@)", v5, v6, v7, v8, v9);
}

void sub_1001E531C(void *a1)
{
  uint64_t v1 = [a1 configuration];
  uint64_t v2 = [v1 containerIdentifier];
  sub_10000CD30();
  sub_100021C3C((void *)&_mh_execute_header, v3, v4, "***p_testAccountChanged verboseLogging ENABLED (%{public}@)", v5, v6, v7, v8, v9);
}

void sub_1001E53B8(void *a1)
{
  uint64_t v1 = [a1 configuration];
  uint64_t v2 = [v1 containerIdentifier];
  sub_10000CD30();
  sub_100021C3C((void *)&_mh_execute_header, v3, v4, "***p_testAccountChanged verboseLogging DISABLED (%{public}@)", v5, v6, v7, v8, v9);
}

void sub_1001E5454(void *a1)
{
  uint64_t v1 = [a1 configuration];
  uint64_t v2 = [v1 containerIdentifier];
  sub_10000CD30();
  sub_100021C74((void *)&_mh_execute_header, v3, v4, "***signal p_accountChanged (%{public}@) notification=%@", v5, v6, v7, v8, v9);
}

void sub_1001E5500(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "p_accountReallyChangedWithCompletion has no accessQueue", v1, 2u);
}

void sub_1001E5544()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Error fetching zone changes: %@", v2, v3, v4, v5, v6);
}

void sub_1001E55AC(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 containerIdentifier];
  sub_10000CD30();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - Detach occurred during fetch, container: %@", v4, 0xCu);
}

void sub_1001E5640()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "did not call completion after 10s in %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E56A8(void *a1)
{
  uint64_t v1 = [a1 containerIdentifier];
  sub_10000CD30();
  sub_100030410((void *)&_mh_execute_header, v2, v3, "BCCloudKitDatabaseController (%{public}@) - Error fetching database changes: %@", v4, v5, v6, v7, v8);
}

void sub_1001E5744(void *a1, NSObject *a2)
{
  unsigned int v3 = [a1 attachedToContainer];
  CFStringRef v4 = @"NO";
  if (v3) {
    CFStringRef v4 = @"YES";
  }
  int v5 = 138412290;
  CFStringRef v6 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "BCCloudKitDatabaseController - fetchRecordForRecordID attached: %@", (uint8_t *)&v5, 0xCu);
}

void sub_1001E57E8()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Error fetching user recordID: %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E5850()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - requesting salted ID for %@ without salt!", v2, v3, v4, v5, v6);
}

void sub_1001E58B8()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BCCloudDatabaseController: unable to generate record name for %@", v2, v3, v4, v5, v6);
}

void sub_1001E5920(uint64_t a1, void *a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(void *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(void *)(buf + 14) = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "BCCloudKitDatabaseController modifySubscriptionsOperation: %@, id: %@", buf, 0x16u);
}

void sub_1001E5988()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "CKFetchDatabaseChangesOperation failed: %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E59F0()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "CKFetchRecordZonesOperation failed: %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E5A58()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "CKFetchRecordZonesOperation failed. Account Temporarily Unavailable: %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E5AC0()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Create salt: unable to save salt record %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E5B28()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Create salt: unable to get record salt %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E5B90()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Create salt: unable to save record salt %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E5BF8()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - CKFetchRecordZoneChangesOperation NOT retrying fetch for error: %@", v2, v3, v4, v5, v6);
}

void sub_1001E5C60()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error decoding BCCloudKitDatabaseController from data.  Error=%{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E5CC8(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 138543618;
  *(void *)&v3[4] = *(void *)(a1 + 32);
  *(_WORD *)&v3[12] = 2114;
  *(void *)&v3[14] = a2;
  sub_1000303C0((void *)&_mh_execute_header, a2, a3, "Error deleting zones (%{public}@): (%{public}@)", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

void sub_1001E5D44(void *a1)
{
  uint64_t v1 = [a1 containerIdentifier];
  sub_100030430();
  sub_100030410((void *)&_mh_execute_header, v2, v3, "BCCloudKitDatabaseController (%{public}@) - zonesUnreadableDueToMissingD2DEncryptionIdentity: %{public}@", v4, v5, v6, v7, v8);
}

void sub_1001E5DD4(void *a1)
{
  uint64_t v1 = [a1 containerIdentifier];
  sub_100030430();
  sub_100030410((void *)&_mh_execute_header, v2, v3, "BCCloudKitDatabaseController (%{public}@) - zonesTemporarilyUnreadableWithError: %{public}@", v4, v5, v6, v7, v8);
}

void sub_1001E5E64()
{
  sub_1000303F8();
  sub_1000303C0((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Invalid parameter combination observer=%p recordType=%{public}@");
}

void sub_1001E5ECC()
{
  sub_1000303E0();
  sub_1000303C0((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.");
}

void sub_1001E5F3C()
{
  sub_1000303E0();
  sub_1000303C0((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.");
}

void sub_1001E5FAC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10000CD14((void *)&_mh_execute_header, a1, a3, "BCCloudKitDatabaseController - Invalid observer=%p", a5, a6, a7, a8, 0);
}

void sub_1001E601C()
{
  sub_1000303E0();
  sub_1000303C0((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Invalid parameter combination BCCloudKitDatabaseZoneObserver observer=%p recordType=%{public}@");
}

void sub_1001E608C()
{
  sub_1000303F8();
  sub_1000303C0((void *)&_mh_execute_header, v0, v1, "BCCloudKitDatabaseController - Invalid parameter combination tokenStore=%p recordZoneID=%{public}@");
}

void sub_1001E60F4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E6164(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - Trying to remove nil server change token store", v1, 2u);
}

void sub_1001E61A8(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - Did not find tokenStore to remove", v1, 2u);
}

void sub_1001E61EC(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[Notification] Ignored CKNotification - missing delegate", v1, 2u);
}

void sub_1001E6230(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "[Notification] Received CKNotification %@, subscriptionID: %@", (uint8_t *)&v3, 0x16u);
}

void sub_1001E62B8(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "monitorServiceNotifications: Client not found for connection %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E6330()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "[Service]: Could not setup jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E6364()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to update jalisco - bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E6398()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to update jalisco family- bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E63CC()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to hide jalisco items- bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E6400()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to hide jalisco items with store ids - bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E6434()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to fetch hidden jalisco items - bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E6468()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to reset purchased tokens- bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E649C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to resetStaleJaliscoDatabase - bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E64D0()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to update jalisco after sign in - bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E6504()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Unable to update jalisco after sign out - bookdatastored is missing a jalisco client", v2, v3, v4, v5, v6);
}

void sub_1001E6538()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Could not create MOC for widget because assetManager MOC is nil", v2, v3, v4, v5, v6);
}

void sub_1001E656C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[BDSJaliscoDAAPClient] Unable to initialize BDSJaliscoDAAPClient", v1, 2u);
}

void sub_1001E65B0()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCAssetDetail configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001E65E4(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 assetID];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BCAssetDetail %@ No Record supplied", (uint8_t *)&v4, 0xCu);
}

void sub_1001E667C(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 assetID];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BCAssetDetail %@ Mismatch assetID from record assetID %@", (uint8_t *)&v6, 0x16u);
}

void sub_1001E672C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableAssetDetail init with no assetID supplied", v2, v3, v4, v5, v6);
}

void sub_1001E6760()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableAssetDetail init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001E6794(id *a1, uint64_t a2, NSObject *a3)
{
  id v5 = objc_retainBlock(*a1);
  int v6 = 138412546;
  id v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "[BCCloudKitTransactionManager] registering completion %@ for syncToCKTransaction %@", (uint8_t *)&v6, 0x16u);
}

void sub_1001E6844(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "[BCCloudKitTransactionManager] Creating syncToCKTransaction %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E68BC(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Failed to create rawHistoryToken from data error: %@", (uint8_t *)&v1, 0xCu);
}

void sub_1001E693C(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error unarchiving persistent history token: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E69B4(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSAutomaticPinningListUpdater encountered error: %@, but we were already cancelled.", (uint8_t *)&v2, 0xCu);
}

void sub_1001E6A2C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSAutomaticPinningListUpdater encountered error: %@, and we were not cancelled.", (uint8_t *)&v2, 0xCu);
}

void sub_1001E6AA4(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "BCCloudKitFetchChangesTransaction - privateCloudDatabaseController is nil", v1, 2u);
}

void sub_1001E6AE8(void *a1, void *a2)
{
  [a1 establishedSalt];
  uint64_t v3 = [a2 ckSystemFields];
  sub_100043290();
  _os_log_error_impl(v4, v5, v6, v7, v8, 0x18u);
}

void sub_1001E6BB0(void *a1)
{
  os_log_type_t v6 = [a1 identifier];
  sub_100043290();
  _os_log_error_impl(v1, v2, v3, v4, v5, 0xCu);
}

void sub_1001E6C40(void *a1)
{
  os_log_t v2 = (objc_class *)objc_opt_class();
  os_log_type_t v3 = NSStringFromClass(v2);
  uint64_t v9 = [a1 identifier];
  sub_100043290();
  _os_log_error_impl(v4, v5, v6, v7, v8, 0x20u);
}

void sub_1001E6D0C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCloudData recordType called", v2, v3, v4, v5, v6);
}

void sub_1001E6D40()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCloudData identifier called", v2, v3, v4, v5, v6);
}

void sub_1001E6D74()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCloudData zoneName called", v2, v3, v4, v5, v6);
}

void sub_1001E6DA8()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCloudData +propertyIDKey called", v2, v3, v4, v5, v6);
}

void sub_1001E6DDC()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCloudData init with no privacy delegate!", v2, v3, v4, v5, v6);
}

void sub_1001E6E10()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCloudData init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001E6E44()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCloudData ckSystemFields called", v2, v3, v4, v5, v6);
}

void sub_1001E6E78()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCloudData recordType called", v2, v3, v4, v5, v6);
}

void sub_1001E6EAC()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCloudData identifier called", v2, v3, v4, v5, v6);
}

void sub_1001E6EE0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSWidgetCenterManager - relevance donation failed due to %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E6F58(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to create persistent stores on the coordinator:%@", (uint8_t *)&v3, 0xCu);
}

void sub_1001E6FD4(uint64_t a1, void *a2, NSObject *a3)
{
  uint8_t v6 = [a2 domain];
  int v7 = 138543874;
  uint64_t v8 = a1;
  __int16 v9 = 2114;
  int v10 = v6;
  __int16 v11 = 1024;
  unsigned int v12 = [a2 code];
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error %{public}@: %{public}@ %d", (uint8_t *)&v7, 0x1Cu);
}

void sub_1001E70A0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Unable to recreate cloud data source persistent store. Giving up", v1, 2u);
}

void sub_1001E70E4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Attempting to remove files and start over", v1, 2u);
}

void sub_1001E7128(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Unable to create cloud data source persistent store. Attempting to remove files and start over", v1, 2u);
}

void sub_1001E716C()
{
  sub_10000CD30();
  sub_100021C5C((void *)&_mh_execute_header, v0, v1, "#dissociateCloudData error: %@", v2);
}

void sub_1001E71D8()
{
  sub_10000CD30();
  __int16 v3 = 2114;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "BCCloudDataManager error: %{public}@, at: %{public}@", v2, 0x16u);
}

void sub_1001E725C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "No managed object context!", v2, v3, v4, v5, v6);
}

void sub_1001E7290(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 entityName];
  sub_10000CD30();
  sub_100021C5C((void *)&_mh_execute_header, a2, v4, "BCCloudDataManager: %@ setCloudData fail, no moc", v5);
}

void sub_1001E7320(void *a1)
{
  uint64_t v1 = [a1 identifier];
  sub_10004D6F0();
  sub_10004D728((void *)&_mh_execute_header, v2, v3, "Data diff! %@ hasChanges:%{BOOL}d", v4, v5, v6, v7, v8);
}

void sub_1001E73B4(void *a1)
{
  uint64_t v1 = [a1 identifier];
  sub_10004D6F0();
  sub_10004D728((void *)&_mh_execute_header, v2, v3, "Compraring local to cloudData for %@. isEqualExceptForDate:%{BOOL}d", v4, v5, v6, v7, v8);
}

void sub_1001E7448(void *a1, id *a2, NSObject *a3)
{
  uint64_t v5 = [a1 entityName];
  uint64_t v6 = [*a2 debugDescription];
  int v7 = 138543618;
  uint8_t v8 = v5;
  __int16 v9 = 2112;
  int v10 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Did not find %{public}@ to remove for predicate:%{pubic}@", (uint8_t *)&v7, 0x16u);
}

void sub_1001E750C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Did not match the same results as the cloud data provided.", v2, v3, v4, v5, v6);
}

void sub_1001E7540()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "Tried to look up cloud data but there was no moc.", v2, v3, v4, v5, v6);
}

void sub_1001E7574()
{
  sub_10004D6F0();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "BCCloudDataManager %{public}@ resolveConflictsForRecords: Encountered duplicates: %d", v1, 0x12u);
}

void sub_1001E75F4(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138543362;
  uint64_t v5 = v3;
  sub_100021C5C((void *)&_mh_execute_header, a2, a3, "BCCloudDataManager #recordChange failedRecordIDs:%{public}@", (uint8_t *)&v4);
}

void sub_1001E7668(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) entityName];
  sub_10000CD30();
  sub_10004D708((void *)&_mh_execute_header, v2, v3, "BCCloudDataManager %{public}@ getChangesSince -- No managed object context!", v4, v5, v6, v7, v8);
}

void sub_1001E76F0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 40) entityName];
  sub_10000CD30();
  sub_10004D708((void *)&_mh_execute_header, v2, v3, "BCCloudDataManager %{public}@ getChangesSince -- No managed object context inside performBlock!", v4, v5, v6, v7, v8);
}

void sub_1001E7778(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 entityName];
  sub_10000CD30();
  sub_100021C5C((void *)&_mh_execute_header, a2, v4, "BCCloudDataManager %{public}@ getChangesSince -- fetchHistoryAfterToken returned error", v5);
}

void sub_1001E7808(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 entityName];
  sub_10000CD30();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "BCCloudDataManager diagnosticDirtyCloudDataInfos %@", v4, 0xCu);
}

void sub_1001E789C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "We can't have handled more records than we attempted to sync", v1, 2u);
}

void sub_1001E78E0()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error modifying records: error=%{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E7948(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error saving record, but we don't have a delegate to inform", v1, 2u);
}

void sub_1001E798C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error fetching records with assets on conflict: error=%{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E79F4()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Attempting to update the bitrate for %@ but it has no hlsPlaylistURL", v2, v3, v4, v5, v6);
}

void sub_1001E7A5C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412546;
  CFStringRef v3 = @"Didn't";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Trying to update bitrate for mediaItem. %@ find streamInf. Error: %@", (uint8_t *)&v2, 0x16u);
}

void sub_1001E7AE8()
{
  sub_10000CD30();
  sub_100053A34((void *)&_mh_execute_header, v0, v1, "found wantToRead member for assetID: %@ jalisco DB", v2, v3, v4, v5, v6);
}

void sub_1001E7B50()
{
  sub_10000CD30();
  sub_100053A34((void *)&_mh_execute_header, v0, v1, "found wantToRead member for assetID: %@ in media library", v2, v3, v4, v5, v6);
}

void sub_1001E7BB8(void *a1)
{
  uint64_t v1 = [a1 assetID];
  sub_10000CD30();
  sub_100053A50((void *)&_mh_execute_header, v2, v3, "found readingNow member for assetID: %@ jalisco DB", v4, v5, v6, v7, v8);
}

void sub_1001E7C3C(void *a1)
{
  uint64_t v1 = [a1 assetID];
  sub_10000CD30();
  sub_100053A50((void *)&_mh_execute_header, v2, v3, "found readingNow member for assetID: %@ in media library", v4, v5, v6, v7, v8);
}

void sub_1001E7CC0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E7D30(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E7DA8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E7E18(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#dissociateCloudData Change Token Controller error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E7E90()
{
  sub_100055708();
  int v2 = [*(id *)(v1 + 32) zoneName];
  [v0 count];
  sub_100030410((void *)&_mh_execute_header, v3, v4, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ we should never have more than 1 record. We have %lu@) records.", v5, v6, v7, v8, 2u);
}

void sub_1001E7F38()
{
  sub_100055708();
  uint64_t v1 = [*(id *)(v0 + 32) zoneName];
  sub_100030410((void *)&_mh_execute_header, v2, v3, "<%@ BCCloudChangeTokenController - No change yet we tried updating %@", v4, v5, v6, v7, 2u);
}

void sub_1001E7FDC()
{
  sub_100055708();
  uint64_t v1 = [*(id *)(v0 + 40) zoneName];
  sub_100030430();
  sub_100030410((void *)&_mh_execute_header, v2, v3, "BCCloudChangeTokenController - Error deleting cloud tokens: %@ with server change token: %{public}@", v4, v5, v6, v7, v8);
}

void sub_1001E806C()
{
  sub_100055708();
  uint64_t v1 = [*(id *)(v0 + 32) zoneName];
  sub_100030430();
  sub_100030410((void *)&_mh_execute_header, v2, v3, "BCCloudChangeTokenController - #recordChange Error saving MOC zone: %@ with server change token: %{public}@", v4, v5, v6, v7, v8);
}

void sub_1001E80FC(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error unarchiving server change token: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E8174()
{
  sub_100055708();
  uint64_t v1 = [*(id *)(v0 + 40) zoneName];
  sub_100030430();
  sub_100030410((void *)&_mh_execute_header, v2, v3, "BCCloudChangeTokenController - #recordChange Error fetching from MOC zone: %@ with server change token: %{public}@", v4, v5, v6, v7, v8);
}

void sub_1001E8204()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BDSSyncEngineSaltManager - Create salt: unable to save salt record %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E826C(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(a2 + 48);
  int v5 = 138412546;
  uint64_t v6 = v3;
  __int16 v7 = 2112;
  uint64_t v8 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "BDSSyncEngineSaltManager: Error retrieving record salt: %@ serverRecord:%@.. Trying to recover", (uint8_t *)&v5, 0x16u);
}

void sub_1001E82FC()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BDSSyncEngineSaltManager - Create salt: unable to get record salt %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E8364()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BDSSyncEngineSaltManager - Create salt: unable to save record salt %{public}@", v2, v3, v4, v5, v6);
}

void sub_1001E83CC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E843C()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "BDSSyncEngineSaltManager - requesting salted ID for %@ without salt!", v2, v3, v4, v5, v6);
}

void sub_1001E84A4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Trying to remove without IDs - SecureUserData", v1, 2u);
}

void sub_1001E84E8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Trying to remove without IDs - AssetDetail", v1, 2u);
}

void sub_1001E852C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E85B0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E8620(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E8690(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Processed Notifications - Application has been launched recently.", v1, 2u);
}

void sub_1001E86D4()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCReadingNowDetail configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001E8708(void *a1, void *a2, NSObject *a3)
{
  uint8_t v6 = [a1 assetID];
  __int16 v7 = [a1 debugDescription];
  uint64_t v8 = [a2 assetID];
  int v9 = 138412802;
  int v10 = v6;
  __int16 v11 = 2112;
  unsigned int v12 = v7;
  __int16 v13 = 2112;
  __int16 v14 = v8;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "BCReadingNowDetail configured: %@ %@ from readingNowDetail:%@", (uint8_t *)&v9, 0x20u);
}

void sub_1001E87EC(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 assetID];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BCReadingNowDetail %@ No Record supplied", (uint8_t *)&v4, 0xCu);
}

void sub_1001E8884(void *a1, void *a2)
{
  int v4 = [a1 assetID];
  uint64_t v5 = [a2 recordID];
  uint8_t v6 = [v5 recordName];
  __int16 v7 = [a1 debugDescription];
  sub_10005D95C();
  sub_10005D97C((void *)&_mh_execute_header, v8, v9, "BCReadingNowDetail %@ Resolving: Identical properties from record: %@ %@", v10, v11, v12, v13, v14);
}

void sub_1001E8958(void *a1, void *a2)
{
  int v4 = [a1 assetID];
  uint64_t v5 = [a2 recordID];
  uint8_t v6 = [v5 recordName];
  __int16 v7 = [a1 debugDescription];
  sub_10005D95C();
  sub_10005D97C((void *)&_mh_execute_header, v8, v9, "Assuming cloudAssetType %@ Resolving: from record: %@ %@", v10, v11, v12, v13, v14);
}

void sub_1001E8A2C(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 assetID];
  int v6 = 138412546;
  __int16 v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BCReadingNowDetail %@ Mismatch assetID from record assetID %@", (uint8_t *)&v6, 0x16u);
}

void sub_1001E8ADC()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableReadingNowDetail init with no assetID supplied", v2, v3, v4, v5, v6);
}

void sub_1001E8B10()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableReadingNowDetail init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001E8B44(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "ReadingNowDetailDataSource did not have a valid moc.  That is unexpected.", v1, 2u);
}

void sub_1001E8B88(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error trying to find WidgetInfos that need relationships updated: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E8C00(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Trying to remove without IDs - ReadingNowDetail", v1, 2u);
}

void sub_1001E8C44()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCAssetReview configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001E8C78(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 assetReviewID];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BCAssetReview %@ No Record supplied", (uint8_t *)&v4, 0xCu);
}

void sub_1001E8D10(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 assetReviewID];
  int v6 = 138412546;
  __int16 v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BCAssetReview %@ Mismatch assetReviewID from record assetReviewID %@", (uint8_t *)&v6, 0x16u);
}

void sub_1001E8DC0()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableAssetReview init with no assetReviewID supplied", v2, v3, v4, v5, v6);
}

void sub_1001E8DF4()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCAssetReview configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001E8E28()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableAssetReview init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001E8E5C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "BDSMediaLibraryUtils Could not find audiobookQuery.", v1, 2u);
}

void sub_1001E8EA0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSMediaLibraryUtils No collections for %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E8F18(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSMediaLibraryUtils No daap item found for %@", (uint8_t *)&v2, 0xCu);
}

void sub_1001E8F90(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Received notification event with invalid type", v1, 2u);
}

void sub_1001E8FD4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Received notification event with invalid name", v1, 2u);
}

void sub_1001E9018(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Trying to remove without IDs - AssetReview", v1, 2u);
}

void sub_1001E905C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCSecureUserDatum configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001E9090(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 key];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BCSecureUserDatum %@ No Record supplied", (uint8_t *)&v4, 0xCu);
}

void sub_1001E9128(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 key];
  int v6 = 138412546;
  __int16 v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BCSecureUserDatum %@ Mismatch key from record key %@", (uint8_t *)&v6, 0x16u);
}

void sub_1001E91D8()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableSecureUserDatum init with no key supplied", v2, v3, v4, v5, v6);
}

void sub_1001E920C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableSecureUserDatum init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001E9240()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "WidgetInfoManager unable to find widgetInfo error:%@", v2, v3, v4, v5, v6);
}

void sub_1001E92A8()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "WidgetInfoManager getInfosWithLimit failed error:%@", v2, v3, v4, v5, v6);
}

void sub_1001E9310()
{
  sub_100068014();
  sub_1000303C0((void *)&_mh_execute_header, v0, v1, "WidgetInfoManager unable to find widgetInfo matching %@ error:%@");
}

void sub_1001E937C()
{
  sub_10000CD30();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "widgetInfos populated with storeInfo:%@", v1, 0xCu);
}

void sub_1001E93F0()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error creating WidgetInfos: %@", v2, v3, v4, v5, v6);
}

void sub_1001E9458()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error looking up ReadingNowDetails for WidgetInfos: %@", v2, v3, v4, v5, v6);
}

void sub_1001E94C0()
{
  sub_10000CD30();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "BDSBookWidgetInfoMO readingNowDetails %@", v1, 0xCu);
}

void sub_1001E9534(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint8_t v6 = objc_msgSend(*(id *)(a1 + 32), "bu_prettyDescription");
  __int16 v7 = objc_msgSend(*(id *)(a1 + 40), "bu_prettyDescription");
  int v8 = 138412802;
  uint64_t v9 = v6;
  __int16 v10 = 2112;
  uint64_t v11 = v7;
  __int16 v12 = 2112;
  uint64_t v13 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to fetch store assets with, audiobookAssetIDs: %@, bookAssetIDs: %@, error: %@", (uint8_t *)&v8, 0x20u);
}

void sub_1001E9608()
{
  sub_100068014();
  sub_1000303C0((void *)&_mh_execute_header, v0, v1, "Failed to fetch store assets with, assetIDs: %@, error: %@");
}

void sub_1001E9674()
{
  sub_100068014();
  sub_1000303C0((void *)&_mh_execute_header, v0, v1, "Could not delete BookWidgetInfo's with assetIDs: %@. Error: %@");
}

void sub_1001E96E0()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCStoreItem configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001E9714(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 storeID];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BCStoreItem %@ No Record supplied", (uint8_t *)&v4, 0xCu);
}

void sub_1001E97AC(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 storeID];
  int v6 = 138412546;
  __int16 v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BCStoreItem %@ Mismatch storeID from record storeID %@", (uint8_t *)&v6, 0x16u);
}

void sub_1001E985C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableStoreItem init with no storeID supplied", v2, v3, v4, v5, v6);
}

void sub_1001E9890()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableStoreItem init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001E98C4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Trying to remove without IDs - StoreItem", v1, 2u);
}

void sub_1001E9908()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BDSSecureEngagementData configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001E993C(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 startTimestampString];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSSecureEngagementData %@ No Record supplied", (uint8_t *)&v4, 0xCu);
}

void sub_1001E99D4(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 startTimestampString];
  int v6 = 138412546;
  __int16 v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BDSSecureEngagementData %@ Mismatch key from record key %@", (uint8_t *)&v6, 0x16u);
}

void sub_1001E9A84()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BDSMutableSecureEngagementData init with no start timestamp string supplied", v2, v3, v4, v5, v6);
}

void sub_1001E9AB8()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BDSMutableSecureEngagementData init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001E9AEC()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BDSMutableSecureEngagementData init with empty data supplied", v2, v3, v4, v5, v6);
}

void sub_1001E9B20()
{
  __assert_rtn("-[BCAnnotationsProtoBook writeTo:]", "BCAnnotationsProtoBook.m", 152, "nil != self->_assetID");
}

void sub_1001E9B4C()
{
  __assert_rtn("-[BCAnnotationsProtoBook writeTo:]", "BCAnnotationsProtoBook.m", 157, "nil != self->_appVersion");
}

void sub_1001E9B78()
{
  __assert_rtn("-[BCProtoAnnotation writeTo:]", "BCProtoAnnotation.m", 613, "nil != self->_creatorIdentifier");
}

void sub_1001E9BA4()
{
  __assert_rtn("-[BCProtoAnnotation writeTo:]", "BCProtoAnnotation.m", 678, "nil != self->_uuid");
}

void sub_1001E9BD0()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "BDSNBController init.", v2, v3, v4, v5, v6);
}

void sub_1001E9C04()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "BDSNBController fetch latest completed.", v2, v3, v4, v5, v6);
}

void sub_1001E9C38()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "BDSNBController Initial fetch completed.", v2, v3, v4, v5, v6);
}

void sub_1001E9C6C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E9CD8(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Updated assetDetail for assetID %@", (uint8_t *)&v3, 0xCu);
}

void sub_1001E9D54(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001E9DC4(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error trying to write updated assetDetail for assetID: %@ error: %@", (uint8_t *)&v4, 0x16u);
}

void sub_1001E9E50(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 assetID];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BDSNBController No media items for %@", (uint8_t *)&v4, 0xCu);
}

void sub_1001E9EE8(uint64_t a1, NSObject *a2)
{
  id v4 = [*(id *)(a1 + 32) count];
  id v5 = [*(id *)(a1 + 40) count];
  int v6 = 134218240;
  id v7 = v4;
  __int16 v8 = 2048;
  id v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "BDSNBController Updating from assetDetails: updated (%lu) removed (%lu)", (uint8_t *)&v6, 0x16u);
}

void sub_1001E9F9C()
{
  sub_10000BFFC();
  sub_100013508((void *)&_mh_execute_header, v0, v1, "BDSNBController done fetching while updating assetDetails.", v2, v3, v4, v5, v6);
}

void sub_1001E9FD0()
{
  uint64_t v0 = (void *)abort_report_np();
  sub_1001E9FF8(v0, v1, v2);
}

void sub_1001E9FF8(void *a1, uint64_t a2, NSObject *a3)
{
  v5[0] = 67109378;
  v5[1] = [a1 processIdentifier];
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Refusing connection to pid %d. (appIdentifier: %@)", (uint8_t *)v5, 0x12u);
}

void sub_1001EA098(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "User logged out. Shutting down.", v1, 2u);
}

void sub_1001EA0DC(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412802;
  uint64_t v5 = v3;
  __int16 v6 = 1024;
  int v7 = 0;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5b. dissociateCloudDataFromSyncWithCompletion %{BOOL}d ERROR:%@", (uint8_t *)&v4, 0x1Cu);
}

void sub_1001EA174(uint64_t a1, NSObject *a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "BCCloudCollectionsManager collectionDetailManagerInstancecompleted enableCloudSync %{BOOL}d", (uint8_t *)v3, 8u);
}

void sub_1001EA1F0(uint64_t a1, NSObject *a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "BCCloudCollectionsManager collectionMemberManagerInstance completed enableCloudSync %{BOOL}d", (uint8_t *)v3, 8u);
}

void sub_1001EA26C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "BCCloudCollectionsManager - SERVICE setEnableCloudSync:completion DONE", v1, 2u);
}

void sub_1001EA2B0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "BDSSaltVersionIdentifierManager unable to handle salt version change", v1, 2u);
}

void sub_1001EA2F4(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "BCCloudCollectionDetailManager could not resolve conflicts for records %@. Error: %@", (uint8_t *)&v4, 0x16u);
}

void sub_1001EA380(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Trying to remove without IDs - CollectionDetail", v1, 2u);
}

void sub_1001EA3C4(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "BCCloudCollectionMemberManager could not resolve conflicts for records %@. Error: %@", (uint8_t *)&v4, 0x16u);
}

void sub_1001EA450(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Trying to remove without IDs - CollectionMember", v1, 2u);
}

void sub_1001EA494()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCollectionDetail configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001EA4C8(void *a1)
{
  uint64_t v1 = [a1 collectionID];
  sub_100021C3C((void *)&_mh_execute_header, v2, v3, "BCCollectionDetail %{public}@ No Record supplied", v4, v5, v6, v7, 2u);
}

void sub_1001EA550(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 collectionID];
  int v6 = 138543618;
  uint64_t v7 = v5;
  __int16 v8 = 2114;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BCCollectionDetail %{public}@ Mismatch collectionID from record collectionID %{public}@", (uint8_t *)&v6, 0x16u);
}

void sub_1001EA600()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCollectionDetail init with no collectionID supplied", v2, v3, v4, v5, v6);
}

void sub_1001EA634()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCollectionDetail configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001EA668()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCollectionDetail init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001EA69C(void *a1)
{
  uint64_t v1 = [a1 collectionID];
  sub_100021C3C((void *)&_mh_execute_header, v2, v3, "BCMutableCollectionDetail requesting configured record with no underlying systemfields for collectionID:%@", v4, v5, v6, v7, 2u);
}

void sub_1001EA724()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCollectionMember configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001EA758()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCollectionMember resolveConflictsFromRecord record contains nil collectionMemberID", v2, v3, v4, v5, v6);
}

void sub_1001EA78C(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 collectionMemberID];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "BCCollectionMember %@ Mismatch assetID from record collectionMemberID %@", (uint8_t *)&v6, 0x16u);
}

void sub_1001EA83C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCollectionMember init with no collectionMemberID supplied", v2, v3, v4, v5, v6);
}

void sub_1001EA870()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCollectionMember configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
}

void sub_1001EA8A4()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCollectionMember initWithCloudData cloudData contains nil collectionMemberID", v2, v3, v4, v5, v6);
}

void sub_1001EA8D8()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCMutableCollectionMember init with no record supplied", v2, v3, v4, v5, v6);
}

void sub_1001EA90C()
{
  sub_10000BFFC();
  sub_10000BFE0((void *)&_mh_execute_header, v0, v1, "BCCollectionMember initWithCloudData record contains nil collectionMemberID", v2, v3, v4, v5, v6);
}

void sub_1001EA940(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001EA9B0()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error <BCCloudCollectionMemberManager setCollectionMember:completion:> {%@}", v2, v3, v4, v5, v6);
}

void sub_1001EAA18()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error <BCCloudCollectionMemberManager fetchCollectionMembersIncludingDeleted:completion:> {%@}", v2, v3, v4, v5, v6);
}

void sub_1001EAA80(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) allKeys];
  sub_10000CD30();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error adding storeItems for storeIDs: %@", v4, 0xCu);
}

void sub_1001EAB18()
{
  sub_10000CD30();
  sub_10000CD14((void *)&_mh_execute_header, v0, v1, "Error <BCCloudCollectionMemberManager fetchMaxSortOrderInCollectionID:> {%@}", v2, v3, v4, v5, v6);
}

uint64_t sub_1001EAB80()
{
  return type metadata accessor for JSONDecoder.DateDecodingStrategy();
}

uint64_t sub_1001EAB90()
{
  return dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
}

uint64_t sub_1001EABA0()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_1001EABB0()
{
  return JSONDecoder.init()();
}

uint64_t sub_1001EABC0()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_1001EABD0()
{
  return static JSONEncoder.OutputFormatting.sortedKeys.getter();
}

uint64_t sub_1001EABE0()
{
  return static JSONEncoder.OutputFormatting.prettyPrinted.getter();
}

uint64_t sub_1001EABF0()
{
  return static JSONEncoder.OutputFormatting.withoutEscapingSlashes.getter();
}

uint64_t sub_1001EAC00()
{
  return type metadata accessor for JSONEncoder.OutputFormatting();
}

uint64_t sub_1001EAC10()
{
  return dispatch thunk of JSONEncoder.outputFormatting.modify();
}

uint64_t sub_1001EAC20()
{
  return type metadata accessor for JSONEncoder.DateEncodingStrategy();
}

uint64_t sub_1001EAC30()
{
  return dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
}

uint64_t sub_1001EAC40()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_1001EAC50()
{
  return JSONEncoder.init()();
}

uint64_t sub_1001EAC60()
{
  return type metadata accessor for JSONEncoder();
}

NSNotification sub_1001EAC70()
{
  return Notification._bridgeToObjectiveC()();
}

uint64_t sub_1001EAC80()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001EAC90()
{
  return Notification.userInfo.getter();
}

uint64_t sub_1001EACA0()
{
  return type metadata accessor for Notification();
}

uint64_t sub_1001EACB0()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_1001EACC0()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_1001EACD0()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_1001EACE0()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_1001EACF0()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_1001EAD00()
{
  return __DataStorage.init(length:)();
}

uint64_t sub_1001EAD10()
{
  return __DataStorage._length.getter();
}

uint64_t sub_1001EAD20()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_1001EAD30()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_1001EAD40()
{
  return DateComponents.day.getter();
}

uint64_t sub_1001EAD50()
{
  return DateComponents.year.setter();
}

uint64_t sub_1001EAD60()
{
  return DateComponents.month.setter();
}

uint64_t sub_1001EAD70()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_1001EAD80()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_1001EAD90()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t sub_1001EADA0()
{
  return URLResourceValues.isExcludedFromBackup.setter();
}

uint64_t sub_1001EADB0()
{
  return URLResourceValues.init()();
}

uint64_t sub_1001EADC0()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t sub_1001EADD0()
{
  return static _ErrorCodeProtocol.~= infix(_:_:)();
}

uint64_t sub_1001EAE20()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t sub_1001EAE40()
{
  return _BridgedStoredNSError.errorCode.getter();
}

uint64_t sub_1001EAE50()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_1001EAE60()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1001EAE70()
{
  return FloatingPointFormatStyle.Currency.init(code:locale:)();
}

uint64_t sub_1001EAE80()
{
  return URL.isFileURL.getter();
}

uint64_t sub_1001EAE90()
{
  return URL.absoluteString.getter();
}

uint64_t sub_1001EAEA0()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

uint64_t sub_1001EAEB0()
{
  return URL.setResourceValues(_:)();
}

void sub_1001EAEC0(NSURL *retstr@<X8>)
{
}

uint64_t sub_1001EAED0()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t sub_1001EAEE0()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_1001EAEF0()
{
  return URL.deletingLastPathComponent()();
}

uint64_t sub_1001EAF00()
{
  return static URL.== infix(_:_:)();
}

uint64_t sub_1001EAF10()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001EAF20(Swift::Bool percentEncoded)
{
  return URL.path(percentEncoded:)(percentEncoded)._countAndFlagsBits;
}

uint64_t sub_1001EAF30()
{
  return URL.path.getter();
}

uint64_t sub_1001EAF40()
{
  return URL.init(string:)();
}

uint64_t sub_1001EAF50()
{
  return URL.appending(queryItems:)();
}

uint64_t sub_1001EAF60()
{
  return type metadata accessor for URL();
}

void sub_1001EAF70()
{
}

uint64_t sub_1001EAF80()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_1001EAF90()
{
  return Data.description.getter();
}

uint64_t sub_1001EAFA0()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t sub_1001EAFB0()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t sub_1001EAFC0()
{
  return Data._Representation.append(contentsOf:)();
}

NSData sub_1001EAFD0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_1001EAFE0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001EAFF0()
{
  return Data.write(to:options:)();
}

uint64_t sub_1001EB000()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t sub_1001EB010()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t sub_1001EB020()
{
  return Date.previousDay(calendar:)();
}

uint64_t sub_1001EB030()
{
  return Date.nextDay(calendar:)();
}

uint64_t sub_1001EB040()
{
  return Date.description.getter();
}

uint64_t sub_1001EB050()
{
  return Date.timeIntervalSince(_:)();
}

NSDate sub_1001EB060()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1001EB070()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_1001EB080()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_1001EB090()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_1001EB0A0()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001EB0B0()
{
  return Date.init()();
}

uint64_t sub_1001EB0C0()
{
  return type metadata accessor for Date();
}

uint64_t sub_1001EB0D0()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_1001EB0E0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1001EB0F0()
{
  return static Calendar.gregorian.getter();
}

uint64_t sub_1001EB100()
{
  return Calendar.startOfDay(for:)();
}

uint64_t sub_1001EB110()
{
  return Calendar.dateComponents(_:from:to:)();
}

NSCalendar sub_1001EB120()
{
  return Calendar._bridgeToObjectiveC()();
}

uint64_t sub_1001EB130()
{
  return Calendar.date(from:)();
}

uint64_t sub_1001EB140()
{
  return Calendar.date(byAdding:to:wrappingComponents:)();
}

uint64_t sub_1001EB150()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t sub_1001EB160()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1001EB170()
{
  return Calendar.component(_:from:)();
}

uint64_t sub_1001EB180()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1001EB190()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1001EB1A0()
{
  return MResourceType.name.getter();
}

uint64_t sub_1001EB1B0()
{
  return type metadata accessor for MResourceType();
}

uint64_t sub_1001EB1E0()
{
  return MCatalogService.init(config:)();
}

uint64_t sub_1001EB1F0()
{
  return type metadata accessor for MCatalogService();
}

uint64_t sub_1001EB200()
{
  return type metadata accessor for MRequestMetadata();
}

uint64_t sub_1001EB210()
{
  return MRequestMetadata.init(_:_:)();
}

uint64_t sub_1001EB220()
{
  return Notificationable.init(notification:)();
}

uint64_t sub_1001EB230()
{
  return Notificationable.toNotification(object:)();
}

uint64_t sub_1001EB240()
{
  return static Notificationable.Name.getter();
}

uint64_t sub_1001EB250()
{
  return type metadata accessor for MClientIdentifier();
}

uint64_t sub_1001EB260()
{
  return MCatalogServiceConfig.init(clientIdentifier:account:)();
}

uint64_t sub_1001EB270()
{
  return type metadata accessor for MCatalogServiceConfig();
}

uint64_t sub_1001EB280()
{
  return static MAsset.requiredAttributeKeys.getter();
}

uint64_t sub_1001EB290()
{
  return MAsset.url.getter();
}

uint64_t sub_1001EB2A0()
{
  return MAsset.name.getter();
}

uint64_t sub_1001EB2B0()
{
  return MAsset.price.getter();
}

uint64_t sub_1001EB2C0()
{
  return type metadata accessor for MAsset();
}

uint64_t sub_1001EB2D0()
{
  return dispatch thunk of static MResource.type.getter();
}

uint64_t sub_1001EB2E0()
{
  return Google_Protobuf_Timestamp.date.getter();
}

uint64_t sub_1001EB2F0()
{
  return Google_Protobuf_Timestamp.init()();
}

uint64_t sub_1001EB300()
{
  return type metadata accessor for Google_Protobuf_Timestamp();
}

uint64_t sub_1001EB310()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0()
{
  return UnknownStorage.init()();
}

uint64_t sub_1001EB330()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t sub_1001EB340()
{
  return BinaryDecodingOptions.init()();
}

uint64_t sub_1001EB350()
{
  return type metadata accessor for BinaryDecodingOptions();
}

uint64_t sub_1001EB360()
{
  return _MessageImplementationBase._protobuf_generated_isEqualTo(other:)();
}

uint64_t sub_1001EB390()
{
  return dispatch thunk of Decoder.nextFieldNumber()();
}

uint64_t sub_1001EB3A0()
{
  return dispatch thunk of Decoder.handleConflictingOneOf()();
}

uint64_t sub_1001EB3B0()
{
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t sub_1001EB3C0()
{
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t sub_1001EB3D0()
{
  return dispatch thunk of Decoder.decodeSingularFloatField(value:)();
}

uint64_t sub_1001EB3E0()
{
  return dispatch thunk of Decoder.decodeSingularInt64Field(value:)();
}

uint64_t sub_1001EB3F0()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t sub_1001EB400()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t sub_1001EB410()
{
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t sub_1001EB420()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_1001EB430()
{
  return Message.isInitialized.getter();
}

uint64_t sub_1001EB440()
{
  return Message.init(serializedData:extensions:partial:options:)();
}

uint64_t sub_1001EB450()
{
  return Message.serializedData(partial:)();
}

uint64_t sub_1001EB470()
{
  return Message.hash(into:)();
}

uint64_t sub_1001EB480()
{
  return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
}

uint64_t sub_1001EB490()
{
  return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
}

uint64_t sub_1001EB4A0()
{
  return dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
}

uint64_t sub_1001EB4B0()
{
  return dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:)();
}

uint64_t sub_1001EB4C0()
{
  return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
}

uint64_t sub_1001EB4D0()
{
  return dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)();
}

uint64_t sub_1001EB4E0()
{
  return dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
}

uint64_t sub_1001EB4F0()
{
  return type metadata accessor for _NameMap.NameDescription();
}

uint64_t sub_1001EB500()
{
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_1001EB510()
{
  return _NameMap.init()();
}

uint64_t sub_1001EB520()
{
  return type metadata accessor for _NameMap();
}

uint64_t sub_1001EB530()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_1001EB540()
{
  return Logger.logObject.getter();
}

uint64_t sub_1001EB550()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1001EB560()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1001EB570()
{
  return type metadata accessor for AnyPublisher();
}

uint64_t sub_1001EB580()
{
  return AnyCancellable.store(in:)();
}

uint64_t sub_1001EB590()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_1001EB5A0()
{
  return PassthroughSubject.init()();
}

uint64_t sub_1001EB5B0()
{
  return Subject<>.send()();
}

uint64_t sub_1001EB5C0()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t sub_1001EB5D0()
{
  return Publisher.filter(_:)();
}

uint64_t sub_1001EB5E0()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t sub_1001EB5F0()
{
  return CKSyncEngine.SyncReason.description.getter();
}

uint64_t sub_1001EB600()
{
  return type metadata accessor for CKSyncEngine.SyncReason();
}

uint64_t sub_1001EB630()
{
  return CKSyncEngine.Configuration.subscriptionID.setter();
}

uint64_t sub_1001EB640()
{
  return CKSyncEngine.Configuration.apsMachServiceName.setter();
}

uint64_t sub_1001EB650()
{
  return CKSyncEngine.Configuration.init(database:stateSerialization:delegate:)();
}

uint64_t sub_1001EB660()
{
  return type metadata accessor for CKSyncEngine.Configuration();
}

uint64_t sub_1001EB670()
{
  return CKSyncEngine.SendChangesContext.options.getter();
}

uint64_t sub_1001EB680()
{
  return type metadata accessor for CKSyncEngine.SendChangesOptions.Scope();
}

uint64_t sub_1001EB690()
{
  return CKSyncEngine.SendChangesOptions.init(scope:operationGroup:)();
}

uint64_t sub_1001EB6A0()
{
  return CKSyncEngine.SendChangesOptions.scope.getter();
}

uint64_t sub_1001EB6B0()
{
  return type metadata accessor for CKSyncEngine.SendChangesOptions();
}

uint64_t sub_1001EB6C0()
{
  return CKSyncEngine.FetchChangesContext.reason.getter();
}

uint64_t sub_1001EB6D0()
{
  return CKSyncEngine.FetchChangesContext.options.getter();
}

uint64_t sub_1001EB6E0()
{
  return type metadata accessor for CKSyncEngine.FetchChangesContext();
}

uint64_t sub_1001EB6F0()
{
  return CKSyncEngine.FetchChangesOptions.description.getter();
}

uint64_t sub_1001EB700()
{
  return type metadata accessor for CKSyncEngine.FetchChangesOptions.Scope();
}

uint64_t sub_1001EB710()
{
  return CKSyncEngine.FetchChangesOptions.init(scope:operationGroup:)();
}

uint64_t sub_1001EB720()
{
  return CKSyncEngine.FetchChangesOptions.scope.setter();
}

uint64_t sub_1001EB730()
{
  return type metadata accessor for CKSyncEngine.FetchChangesOptions();
}

uint64_t sub_1001EB740()
{
  return type metadata accessor for CKSyncEngine.PendingDatabaseChange();
}

uint64_t sub_1001EB750()
{
  return CKSyncEngine.RecordZoneChangeBatch.init(recordsToSave:recordIDsToDelete:atomicByZone:)();
}

uint64_t sub_1001EB760()
{
  return CKSyncEngine.RecordZoneChangeBatch.recordsToSave.getter();
}

uint64_t sub_1001EB770()
{
  return CKSyncEngine.RecordZoneChangeBatch.init(pendingChanges:synchronousRecordProvider:)();
}

uint64_t sub_1001EB780()
{
  return CKSyncEngine.RecordZoneChangeBatch.recordIDsToDelete.getter();
}

uint64_t sub_1001EB790()
{
  return type metadata accessor for CKSyncEngine.RecordZoneChangeBatch();
}

uint64_t sub_1001EB7A0()
{
  return type metadata accessor for CKSyncEngine.PendingRecordZoneChange();
}

uint64_t sub_1001EB7B0()
{
  return CKSyncEngine.Event.StateUpdate.stateSerialization.getter();
}

uint64_t sub_1001EB7C0()
{
  return type metadata accessor for CKSyncEngine.Event.StateUpdate();
}

uint64_t sub_1001EB7D0()
{
  return type metadata accessor for CKSyncEngine.Event.AccountChange.ChangeType();
}

uint64_t sub_1001EB7E0()
{
  return CKSyncEngine.Event.AccountChange.changeType.getter();
}

uint64_t sub_1001EB7F0()
{
  return type metadata accessor for CKSyncEngine.Event.AccountChange();
}

uint64_t sub_1001EB800()
{
  return type metadata accessor for CKSyncEngine.Event.DidSendChanges();
}

uint64_t sub_1001EB810()
{
  return type metadata accessor for CKSyncEngine.Event.WillSendChanges();
}

uint64_t sub_1001EB820()
{
  return CKSyncEngine.Event.SentDatabaseChanges.savedZones.getter();
}

uint64_t sub_1001EB830()
{
  return type metadata accessor for CKSyncEngine.Event.SentDatabaseChanges.FailedZoneSave();
}

uint64_t sub_1001EB840()
{
  return CKSyncEngine.Event.SentDatabaseChanges.deletedZoneIDs.getter();
}

uint64_t sub_1001EB850()
{
  return CKSyncEngine.Event.SentDatabaseChanges.failedZoneSaves.getter();
}

uint64_t sub_1001EB860()
{
  return CKSyncEngine.Event.SentDatabaseChanges.failedZoneDeletes.getter();
}

uint64_t sub_1001EB870()
{
  return type metadata accessor for CKSyncEngine.Event.SentDatabaseChanges();
}

uint64_t sub_1001EB880()
{
  return CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave.error.getter();
}

uint64_t sub_1001EB890()
{
  return CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave.record.getter();
}

uint64_t sub_1001EB8A0()
{
  return type metadata accessor for CKSyncEngine.Event.SentRecordZoneChanges.FailedRecordSave();
}

uint64_t sub_1001EB8B0()
{
  return CKSyncEngine.Event.SentRecordZoneChanges.failedRecordSaves.getter();
}

uint64_t sub_1001EB8C0()
{
  return CKSyncEngine.Event.SentRecordZoneChanges.failedRecordDeletes.getter();
}

uint64_t sub_1001EB8D0()
{
  return CKSyncEngine.Event.SentRecordZoneChanges.deletedRecordIDs.getter();
}

uint64_t sub_1001EB8E0()
{
  return CKSyncEngine.Event.SentRecordZoneChanges.savedRecords.getter();
}

uint64_t sub_1001EB8F0()
{
  return type metadata accessor for CKSyncEngine.Event.SentRecordZoneChanges();
}

uint64_t sub_1001EB900()
{
  return CKSyncEngine.Event.FetchedDatabaseChanges.modifications.getter();
}

uint64_t sub_1001EB910()
{
  return CKSyncEngine.Event.FetchedDatabaseChanges.deletions.getter();
}

uint64_t sub_1001EB920()
{
  return type metadata accessor for CKSyncEngine.Event.FetchedDatabaseChanges();
}

uint64_t sub_1001EB930()
{
  return CKSyncEngine.Event.FetchedRecordZoneChanges.modifications.getter();
}

uint64_t sub_1001EB940()
{
  return CKSyncEngine.Event.FetchedRecordZoneChanges.deletions.getter();
}

uint64_t sub_1001EB950()
{
  return type metadata accessor for CKSyncEngine.Event.FetchedRecordZoneChanges();
}

uint64_t sub_1001EB960()
{
  return CKSyncEngine.Event.DidFetchRecordZoneChanges.error.getter();
}

uint64_t sub_1001EB970()
{
  return CKSyncEngine.Event.DidFetchRecordZoneChanges.zoneID.getter();
}

uint64_t sub_1001EB980()
{
  return type metadata accessor for CKSyncEngine.Event.DidFetchRecordZoneChanges();
}

uint64_t sub_1001EB990()
{
  return CKSyncEngine.Event.WillFetchRecordZoneChanges.zoneID.getter();
}

uint64_t sub_1001EB9A0()
{
  return type metadata accessor for CKSyncEngine.Event.WillFetchRecordZoneChanges();
}

uint64_t sub_1001EB9B0()
{
  return type metadata accessor for CKSyncEngine.Event();
}

uint64_t sub_1001EB9C0()
{
  return type metadata accessor for CKSyncEngine.State.Serialization();
}

void sub_1001EB9D0(CKServerChangeToken_optional _, CKRecordZoneID a2)
{
}

uint64_t sub_1001EB9E0()
{
  return CKSyncEngine.State.hasPendingUntrackedChanges.setter();
}

void sub_1001EB9F0(Swift::OpaquePointer pendingDatabaseChanges)
{
}

uint64_t sub_1001EBA00()
{
  return CKSyncEngine.state.getter();
}

uint64_t sub_1001EBA10()
{
  return type metadata accessor for CKSyncEngine();
}

uint64_t sub_1001EBA20()
{
  return CKSyncEngine.init(_:)();
}

uint64_t sub_1001EBA50()
{
  return static DispatchWorkItemFlags.barrier.getter();
}

uint64_t sub_1001EBA60()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_1001EBA70()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_1001EBA80()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_1001EBA90()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t sub_1001EBAA0()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_1001EBAB0()
{
  return static DispatchTime.now()();
}

uint64_t sub_1001EBAC0()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_1001EBAD0()
{
  return + infix(_:_:)();
}

uint64_t sub_1001EBAE0()
{
  return CRRegister.value.getter();
}

uint64_t sub_1001EBAF0()
{
  return CRRegister.value.setter();
}

uint64_t sub_1001EBB00()
{
  return type metadata accessor for CRRegister();
}

uint64_t sub_1001EBB10()
{
  return CRRegister.init(_:)();
}

uint64_t sub_1001EBBA0()
{
  return CRStruct_1.init(from:)();
}

uint64_t sub_1001EBBE0()
{
  return CRStruct_1.merge(_:)();
}

uint64_t sub_1001EBBF0()
{
  return CRStruct_1.encode(to:)();
}

uint64_t sub_1001EBC10()
{
  return CRStruct_1.hasDelta(from:)();
}

uint64_t sub_1001EBCB0()
{
  return CRStruct_2.init(from:)();
}

uint64_t sub_1001EBCF0()
{
  return CRStruct_2.merge(_:)();
}

uint64_t sub_1001EBD00()
{
  return CRStruct_2.encode(to:)();
}

uint64_t sub_1001EBD20()
{
  return CRStruct_2.hasDelta(from:)();
}

uint64_t sub_1001EBDC0()
{
  return CRStruct_3.init(from:)();
}

uint64_t sub_1001EBE10()
{
  return CRStruct_3.encode(to:)();
}

uint64_t sub_1001EBE30()
{
  return CRStruct_3.hasDelta(from:)();
}

uint64_t sub_1001EBE50()
{
  return dispatch thunk of CRMergeable.serializedData(_:version:)();
}

uint64_t sub_1001EBE60()
{
  return dispatch thunk of CRMergeable.init(serializedData:)();
}

uint64_t sub_1001EBE70()
{
  return dispatch thunk of CRMergeable.merge(_:)();
}

uint64_t sub_1001EBE80()
{
  return CRDictionary.ObservableDifference.removedKeys.getter();
}

uint64_t sub_1001EBE90()
{
  return CRDictionary.ObservableDifference.addedKeys.getter();
}

uint64_t sub_1001EBEA0()
{
  return CRDictionary.ObservableDifference.contents2.getter();
}

uint64_t sub_1001EBEB0()
{
  return CRDictionary.Iterator.next()();
}

void sub_1001EBEC0()
{
}

void sub_1001EBED0()
{
}

uint64_t sub_1001EBEE0()
{
  return dispatch thunk of CRStruct_Base.init()();
}

uint64_t sub_1001EBEF0()
{
  return CRDictionary_v1.makeIterator()();
}

uint64_t sub_1001EBF00()
{
  return CRDictionary_v1.init()();
}

uint64_t sub_1001EBF10()
{
  return type metadata accessor for CRDictionary_v1();
}

uint64_t sub_1001EBF20()
{
  return CRDictionary_v1.subscript.modify();
}

uint64_t sub_1001EBF30()
{
  return CRDictionary_v1.subscript.getter();
}

uint64_t sub_1001EBF40()
{
  return CRDictionary_v1.subscript.modify();
}

uint64_t sub_1001EBF50()
{
  return CRDictionary_v1.subscript.getter();
}

uint64_t sub_1001EBF60()
{
  return CRDictionary_v1.subscript.setter();
}

uint64_t sub_1001EBF70()
{
  return type metadata accessor for CRBinaryFileSync();
}

uint64_t sub_1001EBF80()
{
  return type metadata accessor for CRCodableVersion();
}

uint64_t sub_1001EBF90()
{
  return CRCustomFileSyncManager.disableReadingInBackground.setter();
}

uint64_t sub_1001EBFA0()
{
  return CRCustomFileSyncManager.sync(_:finished:)();
}

uint64_t sub_1001EBFB0()
{
  return CRCustomFileSyncManager.publisher.getter();
}

uint64_t sub_1001EBFC0()
{
  return type metadata accessor for CRCustomFileSyncManager();
}

uint64_t sub_1001EBFD0()
{
  return CRCustomFileSyncManager.__allocating_init(_:sync:at:version:)();
}

uint64_t sub_1001EBFE0()
{
  return dispatch thunk of CRDT.hasDelta(from:)();
}

uint64_t sub_1001EBFF0()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_1001EC000()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_1001EC010()
{
  return CRDT.merging(_:)();
}

uint64_t sub_1001EC020()
{
  return CRDT.init(_:serializedData:)();
}

uint64_t sub_1001EC030()
{
  return static CRType.canContainAssets.getter();
}

uint64_t sub_1001EC040()
{
  return CRType.observableDifference(from:)();
}

uint64_t sub_1001EC060()
{
  return CRValue.serializedData(_:version:)();
}

uint64_t sub_1001EC070()
{
  return CRValue.init(serializedData:)();
}

uint64_t sub_1001EC080()
{
  return Capsule.finalizeTimestamps(_:)();
}

uint64_t sub_1001EC090()
{
  return Capsule.Ref<>.root.modify();
}

uint64_t sub_1001EC0A0()
{
  return Capsule.mutate<A>(_:)();
}

uint64_t sub_1001EC0B0()
{
  return Capsule.version.getter();
}

uint64_t sub_1001EC0C0()
{
  return Capsule<>.serializedData(_:version:allowedAppFormats:)();
}

uint64_t sub_1001EC0D0()
{
  return Capsule<>.root.getter();
}

uint64_t sub_1001EC0E0()
{
  return Capsule<>.init(_:id:)();
}

uint64_t sub_1001EC0F0()
{
  return type metadata accessor for Capsule();
}

uint64_t sub_1001EC100()
{
  return Anonymous.get.getter();
}

uint64_t sub_1001EC110()
{
  return Anonymous.merge(_:)();
}

uint64_t sub_1001EC120()
{
  return Anonymous.mutate.modify();
}

uint64_t sub_1001EC130()
{
  return Anonymous.mutate.getter();
}

uint64_t sub_1001EC140()
{
  return Anonymous.init(_:)();
}

uint64_t sub_1001EC150()
{
  return CRCodable.hasEncodedData.getter();
}

uint64_t sub_1001EC160()
{
  return CRCodable.minAppFormatVersion.getter();
}

uint64_t sub_1001EC170()
{
  return static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)();
}

uint64_t sub_1001EC180()
{
  return CRContext.__allocating_init(for:encryptionDelegate:temporaryDirectory:)();
}

uint64_t sub_1001EC190()
{
  return type metadata accessor for CRContext();
}

uint64_t sub_1001EC1A0()
{
  return CRCounter.value.getter();
}

void sub_1001EC1B0(Swift::Int by)
{
}

uint64_t _s14bookdatastored17ReadingHistoryDayV11readingTime9Coherence9CRCounterVvpfi_0()
{
  return CRCounter.init()();
}

uint64_t sub_1001EC1D0()
{
  return type metadata accessor for CRCounter();
}

uint64_t sub_1001EC1E0()
{
  return CRVersion.description.getter();
}

uint64_t sub_1001EC1F0()
{
  return static CRVersion.== infix(_:_:)();
}

uint64_t sub_1001EC200()
{
  return CRVersion.hasDelta(from:)();
}

uint64_t sub_1001EC210()
{
  return type metadata accessor for CRVersion();
}

uint64_t sub_1001EC220()
{
  return Dictionary.init()();
}

uint64_t sub_1001EC230()
{
  return BinaryFloatingPoint.formatted<A>(_:)();
}

uint64_t sub_1001EC240()
{
  return related decl 'e' for CKErrorCode.serverRecord.getter();
}

NSDictionary sub_1001EC250()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_1001EC260()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001EC270()
{
  return Dictionary.description.getter();
}

uint64_t sub_1001EC280()
{
  return Dictionary.removeValue(forKey:)();
}

uint64_t sub_1001EC290()
{
  return Dictionary.init(minimumCapacity:)();
}

uint64_t sub_1001EC2A0()
{
  return Dictionary.Keys.description.getter();
}

uint64_t sub_1001EC2B0()
{
  return type metadata accessor for Dictionary.Values();
}

uint64_t sub_1001EC2C0()
{
  return type metadata accessor for Dictionary();
}

uint64_t sub_1001EC2D0()
{
  return Dictionary.subscript.setter();
}

uint64_t sub_1001EC2E0()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_1001EC2F0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1001EC300()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_1001EC310()
{
  return dispatch thunk of static Comparable.> infix(_:_:)();
}

uint64_t sub_1001EC320()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_1001EC330()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_1001EC340()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1001EC350()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1001EC360()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1001EC370()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001EC380()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_1001EC390()
{
  return String.init(data:encoding:)();
}

uint64_t sub_1001EC3A0()
{
  return String.init(format:_:)();
}

uint64_t sub_1001EC3B0()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_1001EC3C0()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_1001EC3D0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_1001EC3E0()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_1001EC3F0()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_1001EC400()
{
  return String.utf8CString.getter();
}

uint64_t sub_1001EC410()
{
  return static String._fromSubstring(_:)();
}

void sub_1001EC420(Swift::Int a1)
{
}

uint64_t sub_1001EC430()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1001EC440()
{
  return String.hash(into:)();
}

uint64_t sub_1001EC450()
{
  return String.count.getter();
}

uint64_t sub_1001EC460()
{
  return String.index(after:)();
}

uint64_t sub_1001EC470()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_1001EC480()
{
  return String.append<A>(contentsOf:)();
}

void sub_1001EC490(Swift::String a1)
{
}

uint64_t sub_1001EC4A0()
{
  return String.init(cString:)();
}

Swift::Int sub_1001EC4B0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_1001EC4C0()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_1001EC4D0()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_1001EC4E0()
{
  return String.UTF8View._foreignDistance(from:to:)();
}

uint64_t sub_1001EC4F0()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_1001EC500()
{
  return String.UTF16View.index(_:offsetBy:)();
}

BOOL sub_1001EC510(Swift::String a1)
{
  return String.hasPrefix(_:)(a1);
}

uint64_t sub_1001EC520()
{
  return String.init<A>(_:radix:uppercase:)();
}

uint64_t sub_1001EC530()
{
  return String.subscript.getter();
}

uint64_t sub_1001EC540()
{
  return String.init<A>(_:)();
}

uint64_t sub_1001EC550()
{
  return String.subscript.getter();
}

uint64_t sub_1001EC560()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_1001EC570()
{
  return dispatch thunk of Sequence._copyToContiguousArray()();
}

uint64_t sub_1001EC580()
{
  return Sequence.forEach(_:)();
}

uint64_t sub_1001EC590()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_1001EC5A0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1001EC5B0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1001EC5C0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_1001EC5D0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1001EC5E0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001EC5F0()
{
  return Array.description.getter();
}

uint64_t sub_1001EC600()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1001EC610()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1001EC620()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_1001EC630()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_1001EC640()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1001EC650()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_1001EC660()
{
  return Actor.assertIsolated(_:file:line:)();
}

uint64_t sub_1001EC670()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1001EC680()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t sub_1001EC690()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_1001EC6A0()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_1001EC6B0()
{
  return static AsyncStream.makeStream(of:bufferingPolicy:)();
}

uint64_t sub_1001EC6C0()
{
  return AsyncStream.Continuation.yield(_:)();
}

void sub_1001EC6D0()
{
}

uint64_t sub_1001EC6E0()
{
  return type metadata accessor for AsyncStream.Continuation();
}

uint64_t sub_1001EC6F0()
{
  return AsyncStream.makeAsyncIterator()();
}

void sub_1001EC710()
{
}

uint64_t sub_1001EC720()
{
  return static Task<>.isCancelled.getter();
}

uint64_t sub_1001EC730()
{
  return Double.write<A>(to:)();
}

NSSet sub_1001EC740()
{
  return Set._bridgeToObjectiveC()();
}

uint64_t sub_1001EC750()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1001EC760()
{
  return Set.description.getter();
}

uint64_t sub_1001EC770()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_1001EC780()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t sub_1001EC790()
{
  return Int.init(truncating:)();
}

uint64_t sub_1001EC7A0()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_1001EC7B0()
{
  return Collection.isNotEmpty.getter();
}

uint64_t sub_1001EC7C0()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_1001EC7D0()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t sub_1001EC7E0()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_1001EC7F0()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_1001EC800()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_1001EC810()
{
  return CKDatabase.DatabaseChange.Modification.zoneID.getter();
}

uint64_t sub_1001EC820()
{
  return type metadata accessor for CKDatabase.DatabaseChange.Modification();
}

uint64_t sub_1001EC830()
{
  return type metadata accessor for CKDatabase.DatabaseChange.Deletion.Reason();
}

uint64_t sub_1001EC840()
{
  return CKDatabase.DatabaseChange.Deletion.reason.getter();
}

uint64_t sub_1001EC850()
{
  return CKDatabase.DatabaseChange.Deletion.zoneID.getter();
}

uint64_t sub_1001EC860()
{
  return type metadata accessor for CKDatabase.DatabaseChange.Deletion();
}

uint64_t sub_1001EC870()
{
  return CKDatabase.RecordZoneChange.Modification.record.getter();
}

uint64_t sub_1001EC880()
{
  return type metadata accessor for CKDatabase.RecordZoneChange.Modification();
}

uint64_t sub_1001EC890()
{
  return CKDatabase.RecordZoneChange.Deletion.recordType.getter();
}

uint64_t sub_1001EC8A0()
{
  return CKDatabase.RecordZoneChange.Deletion.recordID.getter();
}

uint64_t sub_1001EC8B0()
{
  return type metadata accessor for CKDatabase.RecordZoneChange.Deletion();
}

uint64_t sub_1001EC8C0()
{
  return NSPredicate.init(format:_:)();
}

uint64_t sub_1001EC8D0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_1001EC8E0()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1001EC8F0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1001EC900()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1001EC910()
{
  return static os_log_type_t.default.getter();
}

CKRecordZoneID sub_1001EC920(Swift::String zoneName, Swift::String ownerName)
{
  return CKRecordZoneID.init(zoneName:ownerName:)(zoneName, ownerName);
}

uint64_t sub_1001EC930()
{
  return NSKeyedArchiver.encodeEncodable<A>(_:forKey:)();
}

uint64_t sub_1001EC940()
{
  return NSKeyedUnarchiver.decodeDecodable<A>(_:forKey:)();
}

uint64_t sub_1001EC950()
{
  return static NSPersistentStore.StoreType.sqlite.getter();
}

uint64_t sub_1001EC960()
{
  return type metadata accessor for NSPersistentStore.StoreType();
}

uint64_t sub_1001EC970()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t sub_1001EC980()
{
  return static OS_dispatch_queue.Attributes.concurrent.getter();
}

uint64_t sub_1001EC990()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_1001EC9A0()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_1001EC9B0()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t sub_1001EC9C0()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_1001EC9D0()
{
  return OS_dispatch_queue.sync<A>(flags:execute:)();
}

uint64_t sub_1001EC9E0()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t sub_1001EC9F0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_1001ECA00()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_1001ECA10()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_1001ECA20()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t sub_1001ECA30()
{
  return CKRecordKeyValueSetting.subscript.setter();
}

uint64_t sub_1001ECA40()
{
  return NSPersistentStoreCoordinator.replacePersistentStore(at:destinationOptions:withPersistentStoreFrom:sourceOptions:type:)();
}

uint64_t sub_1001ECA50()
{
  return CKFetchRecordZoneChangesOperation.fetchRecordZoneChangesResultBlock.setter();
}

uint64_t sub_1001ECA60()
{
  return CKFetchRecordZoneChangesOperation.recordZoneFetchResultBlock.setter();
}

CKFetchRecordZoneChangesOperation sub_1001ECA70(Swift::OpaquePointer_optional recordZoneIDs, Swift::OpaquePointer_optional configurationsByRecordZoneID)
{
  return CKFetchRecordZoneChangesOperation.init(recordZoneIDs:configurationsByRecordZoneID:)(recordZoneIDs, configurationsByRecordZoneID);
}

uint64_t sub_1001ECA80()
{
  return CKFetchRecordZoneChangesOperation.recordWasChangedBlock.setter();
}

uint64_t sub_1001ECA90()
{
  return CKFetchRecordZoneChangesOperation.recordWithIDWasDeletedBlock.setter();
}

uint64_t sub_1001ECAA0()
{
  return NSCoder.decodeObject<A>(of:forKey:)();
}

uint64_t sub_1001ECAB0()
{
  return CKRecord.recordType.getter();
}

uint64_t sub_1001ECAC0()
{
  return CKRecord.subscript.getter();
}

uint64_t sub_1001ECAD0()
{
  return CKRecord.subscript.setter();
}

uint64_t sub_1001ECAE0()
{
  return NSBundle.path(forExactResource:ofType:)();
}

Swift::Int sub_1001ECAF0(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_1001ECB00()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1001ECB10()
{
  return NSObject.hashValue.getter();
}

uint64_t sub_1001ECB20()
{
  return NSString.init(stringLiteral:)();
}

uint64_t sub_1001ECB30()
{
  return static OS_os_log.default.getter();
}

uint64_t sub_1001ECB40()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_1001ECB50()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1001ECB60()
{
  return Substring.index(after:)();
}

uint64_t sub_1001ECB70()
{
  return Substring.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_1001ECB80()
{
  return Substring.subscript.getter();
}

uint64_t sub_1001ECB90()
{
  return Substring.subscript.getter();
}

uint64_t sub_1001ECBA0()
{
  return Substring.init<A>(_:)();
}

uint64_t sub_1001ECBB0()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_1001ECBC0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001ECBD0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1001ECBE0()
{
  return BinaryInteger.description.getter();
}

uint64_t sub_1001ECBF0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_1001ECC00()
{
  return ArraySlice.description.getter();
}

uint64_t sub_1001ECC10()
{
  return dispatch thunk of SetAlgebra.intersection(_:)();
}

uint64_t sub_1001ECC20()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t sub_1001ECC30()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1001ECC40()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_1001ECC50()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_1001ECC60()
{
  return __CocoaSet.makeIterator()();
}

uint64_t sub_1001ECC70()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_1001ECC80()
{
  return __CocoaSet.member(for:)();
}

uint64_t sub_1001ECC90()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t sub_1001ECCA0()
{
  return __CocoaSet.contains(_:)();
}

Swift::Int sub_1001ECCB0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_1001ECCC0()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_1001ECCD0()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_1001ECCE0()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_1001ECCF0()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_1001ECD00()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t sub_1001ECD10()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_1001ECD20(Swift::Int a1)
{
}

uint64_t sub_1001ECD30()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1001ECD40()
{
  return StaticString.description.getter();
}

uint64_t sub_1001ECD50()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1001ECD60()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1001ECD70()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_1001ECD80()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_1001ECD90()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1001ECDA0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1001ECDB0()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_1001ECDC0(Swift::Int a1)
{
}

uint64_t sub_1001ECDD0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_1001ECDE0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_1001ECDF0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1001ECE00()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_1001ECE10()
{
  return ContiguousArray.init()();
}

uint64_t sub_1001ECE20()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_1001ECE30()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_1001ECE40()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t sub_1001ECE50()
{
  return __CocoaDictionary.count.getter();
}

uint64_t sub_1001ECE60()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t sub_1001ECE70()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t sub_1001ECE80()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001ECE90()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001ECEA0()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1001ECEB0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1001ECEC0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1001ECED0()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t sub_1001ECEE0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1001ECEF0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_1001ECF10()
{
  return _convertToAnyHashable<A>(_:)();
}

Swift::Int sub_1001ECF20(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_1001ECF30()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1001ECF40()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1001ECF50()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1001ECF60()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001ECF70()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001ECF80()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001ECF90()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001ECFA0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1001ECFB0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1001ECFC0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1001ECFD0()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1001ECFE0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001ECFF0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001ED000()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001ED010()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001ED020()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_1001ED030(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_1001ED040()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1001ED060()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t sub_1001ED070()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_1001ED080()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1001ED090()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1001ED0A0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1001ED0B0()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_1001ED0C0()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_1001ED0D0()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1001ED0E0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1001ED110()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_1001ED120()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_1001ED130()
{
  return Error._code.getter();
}

uint64_t sub_1001ED140()
{
  return Error._domain.getter();
}

uint64_t sub_1001ED150()
{
  return Error._userInfo.getter();
}

uint64_t sub_1001ED160()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_1001ED170()
{
  return Hasher.init(_seed:)();
}

void sub_1001ED180(Swift::UInt a1)
{
}

void sub_1001ED190(Swift::UInt8 a1)
{
}

Swift::Int sub_1001ED1A0()
{
  return Hasher._finalize()();
}

uint64_t sub_1001ED1B0()
{
  return dispatch thunk of Decoder.codingPath.getter();
}

uint64_t sub_1001ED1C0()
{
  return dispatch thunk of Decoder.singleValueContainer()();
}

uint64_t sub_1001ED1D0()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1001ED1E0()
{
  return dispatch thunk of Encoder.singleValueContainer()();
}

uint64_t sub_1001ED1F0()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_1001ED220()
{
  return _typeName(_:qualified:)();
}

uint64_t BUClamp()
{
  return _BUClamp();
}

uint64_t BUClassAndProtocolCast()
{
  return _BUClassAndProtocolCast();
}

uint64_t BUDynamicCast()
{
  return _BUDynamicCast();
}

uint64_t BUIsRunningTests()
{
  return _BUIsRunningTests();
}

uint64_t BUIsStoreBookAssetID()
{
  return _BUIsStoreBookAssetID();
}

uint64_t BUProtocolCast()
{
  return _BUProtocolCast();
}

uint64_t BUStoreIdFromObject()
{
  return _BUStoreIdFromObject();
}

uint64_t BYSetupAssistantNeedsToRun()
{
  return _BYSetupAssistantNeedsToRun();
}

void CCHmacFinal(CCHmacContext *ctx, void *macOut)
{
}

void CCHmacInit(CCHmacContext *ctx, CCHmacAlgorithm algorithm, const void *key, size_t keyLength)
{
}

void CCHmacUpdate(CCHmacContext *ctx, const void *data, size_t dataLength)
{
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return _CFArrayGetCount(theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return _CFArrayGetValueAtIndex(theArray, idx);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return _CFStringCompare(theString1, theString2, compareOptions);
}

CFTypeID CFStringGetTypeID(void)
{
  return _CFStringGetTypeID();
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return _CFUUIDCreate(alloc);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return _CFUUIDCreateString(alloc, uuid);
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return _MKBDeviceUnlockedSinceBoot();
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return _PBDataWriterWriteBOOLField();
}

uint64_t PBDataWriterWriteDataField()
{
  return _PBDataWriterWriteDataField();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return _PBDataWriterWriteDoubleField();
}

uint64_t PBDataWriterWriteFloatField()
{
  return _PBDataWriterWriteFloatField();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return _PBDataWriterWriteInt32Field();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return _PBDataWriterWriteSubmessage();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return _PBDataWriterWriteUint32Field();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return _PBDataWriterWriteUint64Field();
}

uint64_t PBReaderPlaceMark()
{
  return _PBReaderPlaceMark();
}

uint64_t PBReaderReadData()
{
  return _PBReaderReadData();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderRecallMark()
{
  return _PBReaderRecallMark();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return _SCNetworkReachabilityCreateWithAddress(allocator, address);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithName(CFAllocatorRef allocator, const char *nodename)
{
  return _SCNetworkReachabilityCreateWithName(allocator, nodename);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return _SCNetworkReachabilityGetFlags(target, flags);
}

Boolean SCNetworkReachabilityScheduleWithRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return _SCNetworkReachabilityScheduleWithRunLoop(target, runLoop, runLoopMode);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return _SCNetworkReachabilitySetCallback(target, callout, context);
}

Boolean SCNetworkReachabilityUnscheduleFromRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return _SCNetworkReachabilityUnscheduleFromRunLoop(target, runLoop, runLoopMode);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return _SecRandomCopyBytes(rnd, count, bytes);
}

uint64_t TCCAccessCopyBundleIdentifiersDisabledForService()
{
  return _TCCAccessCopyBundleIdentifiersDisabledForService();
}

uint64_t TCCAccessCopyBundleIdentifiersForService()
{
  return _TCCAccessCopyBundleIdentifiersForService();
}

uint64_t TCCAccessSetForBundleId()
{
  return _TCCAccessSetForBundleId();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFURLPromiseCopyPhysicalURL()
{
  return __CFURLPromiseCopyPhysicalURL();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return ___error();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return __os_activity_create(dso, description, activity, flags);
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

double drand48(void)
{
  return _drand48();
}

void exit(int a1)
{
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

void os_activity_apply(os_activity_t activity, os_block_t block)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_transaction_copy_description()
{
  return _os_transaction_copy_description();
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

uint64_t os_transaction_needs_more_time()
{
  return _os_transaction_needs_more_time();
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int raise(int a1)
{
  return _raise(a1);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

void srand48(uint64_t a1)
{
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return _swift_getFunctionTypeMetadata1();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return _swift_initEnumMetadataSingleCase();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

time_t time(time_t *a1)
{
  return _time(a1);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLForUbiquityContainerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForUbiquityContainerIdentifier:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend__addStoreAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addStoreAtURL:");
}

id objc_msgSend__archiveCloudSyncVersions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_archiveCloudSyncVersions:completion:");
}

id objc_msgSend__attachOrSignalFetchChangesTransaction_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attachOrSignalFetchChangesTransaction:reason:");
}

id objc_msgSend__batchFromCloudData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_batchFromCloudData:");
}

id objc_msgSend__bdsService(void *a1, const char *a2, ...)
{
  return _[a1 _bdsService];
}

id objc_msgSend__bookWidgetInfoFromUbiquityMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookWidgetInfoFromUbiquityMetadata:");
}

id objc_msgSend__booksAppBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _booksAppBundleIdentifier];
}

id objc_msgSend__buildUbiquityMetadataDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildUbiquityMetadataDict:");
}

id objc_msgSend__configureFromAssetDetail_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromAssetDetail:withMergers:");
}

id objc_msgSend__configureFromAssetReview_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromAssetReview:withMergers:");
}

id objc_msgSend__configureFromCollectionDetail_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromCollectionDetail:withMergers:");
}

id objc_msgSend__configureFromCollectionMember_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromCollectionMember:withMergers:");
}

id objc_msgSend__configureFromEngagementData_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromEngagementData:withMergers:");
}

id objc_msgSend__configureFromReadingNowDetail_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromReadingNowDetail:withMergers:");
}

id objc_msgSend__configureFromStoreItem_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromStoreItem:withMergers:");
}

id objc_msgSend__configureFromUserDatum_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromUserDatum:withMergers:");
}

id objc_msgSend__createDirectoryForStoreAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDirectoryForStoreAtURL:");
}

id objc_msgSend__dataURL(void *a1, const char *a2, ...)
{
  return _[a1 _dataURL];
}

id objc_msgSend__deleteDirectoryForStoreAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteDirectoryForStoreAtURL:");
}

id objc_msgSend__deleteLocaliCloudDataIfUserLoggedOutFromiCloudCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteLocaliCloudDataIfUserLoggedOutFromiCloudCompletion:");
}

id objc_msgSend__deleteRecordZonesWithIDs_qualityOfService_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteRecordZonesWithIDs:qualityOfService:completion:");
}

id objc_msgSend__dieIfUnacknowledgediCloudLogoutOcccurred(void *a1, const char *a2, ...)
{
  return _[a1 _dieIfUnacknowledgediCloudLogoutOcccurred];
}

id objc_msgSend__directoryExistsForStoreAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_directoryExistsForStoreAtURL:");
}

id objc_msgSend__dirtyMutableCloudDataWithFetchLimit_synchronous_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dirtyMutableCloudDataWithFetchLimit:synchronous:completion:");
}

id objc_msgSend__documentsDirectoryURL(void *a1, const char *a2, ...)
{
  return _[a1 _documentsDirectoryURL];
}

id objc_msgSend__documentsURL(void *a1, const char *a2, ...)
{
  return _[a1 _documentsURL];
}

id objc_msgSend__enterDispatchGroup_times_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enterDispatchGroup:times:");
}

id objc_msgSend__fetchCloudSyncVersions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchCloudSyncVersions:completion:");
}

id objc_msgSend__fetchHistoryAfterToken_inMoc_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchHistoryAfterToken:inMoc:error:");
}

id objc_msgSend__fetchLatestCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchLatestCompletion:");
}

id objc_msgSend__fetchLatestDidFinish(void *a1, const char *a2, ...)
{
  return _[a1 _fetchLatestDidFinish];
}

id objc_msgSend__fileExtensionForUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fileExtensionForUrl:");
}

id objc_msgSend__fq_fetchSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fq_fetchSince:completion:");
}

id objc_msgSend__fromBatch_getRecordsToSave_recordIDsToDelete_buildingMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fromBatch:getRecordsToSave:recordIDsToDelete:buildingMap:");
}

id objc_msgSend__handleFetchNotificationNames_latestChangeToken_forClient_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFetchNotificationNames:latestChangeToken:forClient:completion:");
}

id objc_msgSend__hashFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hashFor:");
}

id objc_msgSend__infoFromReadingNowDetail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_infoFromReadingNowDetail:");
}

id objc_msgSend__initWithSuiteName_container_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithSuiteName:container:");
}

id objc_msgSend__isBundleIdentifierInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isBundleIdentifierInArray:");
}

id objc_msgSend__isExplicitMaterialAllowed(void *a1, const char *a2, ...)
{
  return _[a1 _isExplicitMaterialAllowed];
}

id objc_msgSend__isServiceDisabledAlternative_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isServiceDisabledAlternative:");
}

id objc_msgSend__isServiceEnabledAlternative_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isServiceEnabledAlternative:");
}

id objc_msgSend__isTokenInvalidError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isTokenInvalidError:");
}

id objc_msgSend__itemsForMetadataItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemsForMetadataItems:");
}

id objc_msgSend__jaliscoAudiobookWithAssetId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_jaliscoAudiobookWithAssetId:");
}

id objc_msgSend__keyForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyForConnection:");
}

id objc_msgSend__l_cancelWithManagers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_l_cancelWithManagers:");
}

id objc_msgSend__l_finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_l_finishWithError:");
}

id objc_msgSend__l_finishedFetchingCollectionsWithManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_l_finishedFetchingCollectionsWithManager:");
}

id objc_msgSend__leaveDispatchGroup_times_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_leaveDispatchGroup:times:");
}

id objc_msgSend__logError_at_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logError:at:");
}

id objc_msgSend__logIf_error_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logIf:error:operation:");
}

id objc_msgSend__maxCloudDataPerBatch(void *a1, const char *a2, ...)
{
  return _[a1 _maxCloudDataPerBatch];
}

id objc_msgSend__migrateAndDestroyStoreAtLegacyURL_toModernURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_migrateAndDestroyStoreAtLegacyURL:toModernURL:");
}

id objc_msgSend__moc_updateAndMonitorBookWidgetInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moc_updateAndMonitorBookWidgetInfo");
}

id objc_msgSend__moc_updateAndMonitorProgressForWidgetDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moc_updateAndMonitorProgressForWidgetDatas:");
}

id objc_msgSend__moc_updateWidgetDataFromWidgetInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moc_updateWidgetDataFromWidgetInfo:");
}

id objc_msgSend__moc_updateWidgetDatas_fromAssetDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moc_updateWidgetDatas:fromAssetDetails:");
}

id objc_msgSend__modifyRecordsCompletionBlockWithDispatchGroup_cloudDataMap_recordCount_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modifyRecordsCompletionBlockWithDispatchGroup:cloudDataMap:recordCount:operation:");
}

id objc_msgSend__newWidgetInfoFetchRequest(void *a1, const char *a2, ...)
{
  return _[a1 _newWidgetInfoFetchRequest];
}

id objc_msgSend__newWidgetMOC(void *a1, const char *a2, ...)
{
  return _[a1 _newWidgetMOC];
}

id objc_msgSend__nextSortOrderForCollectionMemberManager_collectionID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nextSortOrderForCollectionMemberManager:collectionID:completion:");
}

id objc_msgSend__noSyncURL(void *a1, const char *a2, ...)
{
  return _[a1 _noSyncURL];
}

id objc_msgSend__notifyObserversForChangesWithCurrentToken_lastToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversForChangesWithCurrentToken:lastToken:");
}

id objc_msgSend__persistentStoreOptions(void *a1, const char *a2, ...)
{
  return _[a1 _persistentStoreOptions];
}

id objc_msgSend__postServiceNotificationNames_latestChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postServiceNotificationNames:latestChangeToken:");
}

id objc_msgSend__postServiceNotificationNames_latestChangeToken_forClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postServiceNotificationNames:latestChangeToken:forClients:");
}

id objc_msgSend__prepareMediaItemForPinning_parentProgress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareMediaItemForPinning:parentProgress:completion:");
}

id objc_msgSend__prepareMediaItemForPinningIfNeeded_parentProgress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareMediaItemForPinningIfNeeded:parentProgress:completion:");
}

id objc_msgSend__q_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_q_save:");
}

id objc_msgSend__readCurrentWidgetDatas(void *a1, const char *a2, ...)
{
  return _[a1 _readCurrentWidgetDatas];
}

id objc_msgSend__reestablishSyncEngineSalt(void *a1, const char *a2, ...)
{
  return _[a1 _reestablishSyncEngineSalt];
}

id objc_msgSend__reestablishSyncEngineSaltIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _reestablishSyncEngineSaltIfNeeded];
}

id objc_msgSend__registerContainerWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerContainerWithConfiguration:");
}

id objc_msgSend__registerForSignificantTimeChangeNotification(void *a1, const char *a2, ...)
{
  return _[a1 _registerForSignificantTimeChangeNotification];
}

id objc_msgSend__registerForSubscriptionID_inDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerForSubscriptionID:inDatabase:");
}

id objc_msgSend__registerNotificationEventHandler(void *a1, const char *a2, ...)
{
  return _[a1 _registerNotificationEventHandler];
}

id objc_msgSend__removeCloudDataForIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeCloudDataForIDs:completion:");
}

id objc_msgSend__replacementObjectForResultObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replacementObjectForResultObject:");
}

id objc_msgSend__roundReadingProgressLikeBooksApp_isFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_roundReadingProgressLikeBooksApp:isFinished:");
}

id objc_msgSend__saveCurrentWidgetDatas(void *a1, const char *a2, ...)
{
  return _[a1 _saveCurrentWidgetDatas];
}

id objc_msgSend__saveWidgetDatasWithWidgetDatasHaveChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveWidgetDatasWithWidgetDatasHaveChanged:");
}

id objc_msgSend__setService_enabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setService:enabled:");
}

id objc_msgSend__setValueInMutableDictionary_forKey_withValueForExtendedAttributeNamed_fromUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setValueInMutableDictionary:forKey:withValueForExtendedAttributeNamed:fromUrl:");
}

id objc_msgSend__setupManagedObjectContext(void *a1, const char *a2, ...)
{
  return _[a1 _setupManagedObjectContext];
}

id objc_msgSend__setupPersistentStoreWithRootDirectoryURL_legacyRootDirectoryURL_nameOnDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupPersistentStoreWithRootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:");
}

id objc_msgSend__setupWidget(void *a1, const char *a2, ...)
{
  return _[a1 _setupWidget];
}

id objc_msgSend__setupWidgetDataUpdater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupWidgetDataUpdater:");
}

id objc_msgSend__sharedLegacyRootDirectoryURL(void *a1, const char *a2, ...)
{
  return _[a1 _sharedLegacyRootDirectoryURL];
}

id objc_msgSend__sharedRootDirectoryURL(void *a1, const char *a2, ...)
{
  return _[a1 _sharedRootDirectoryURL];
}

id objc_msgSend__shouldPinJaliscoItem_allowsExplicit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldPinJaliscoItem:allowsExplicit:");
}

id objc_msgSend__shouldPinMediaItem_allowsExplicit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldPinMediaItem:allowsExplicit:");
}

id objc_msgSend__startObserving(void *a1, const char *a2, ...)
{
  return _[a1 _startObserving];
}

id objc_msgSend__stopObserving(void *a1, const char *a2, ...)
{
  return _[a1 _stopObserving];
}

id objc_msgSend__storeRepresentativeItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeRepresentativeItem:");
}

id objc_msgSend__syncQueueSyncForCloudData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncQueueSyncForCloudData:completion:");
}

id objc_msgSend__ubiquityMetadataForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ubiquityMetadataForURL:");
}

id objc_msgSend__unregisterForSignificantTimeChangeNotification(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForSignificantTimeChangeNotification];
}

id objc_msgSend__updateAccountCacheWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAccountCacheWithCompletionBlock:");
}

id objc_msgSend__updateAssetDetail_fromMediaItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAssetDetail:fromMediaItem:");
}

id objc_msgSend__updateAttachmentCompletedFromObserver_attached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAttachmentCompletedFromObserver:attached:");
}

id objc_msgSend__updateBookmarkTimeFromAssetDetail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBookmarkTimeFromAssetDetail:");
}

id objc_msgSend__updateCloudDataWithManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCloudDataWithManager:");
}

id objc_msgSend__updateEnableSync(void *a1, const char *a2, ...)
{
  return _[a1 _updateEnableSync];
}

id objc_msgSend__updateIsOffline(void *a1, const char *a2, ...)
{
  return _[a1 _updateIsOffline];
}

id objc_msgSend__updateRetryParametersFromModifyRecordsOperationError_batchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateRetryParametersFromModifyRecordsOperationError:batchSize:");
}

id objc_msgSend__wq_saltedAndHashedIDFromLocalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_wq_saltedAndHashedIDFromLocalID:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_accessQueue(void *a1, const char *a2, ...)
{
  return _[a1 accessQueue];
}

id objc_msgSend_accountInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountInfoWithCompletionHandler:");
}

id objc_msgSend_accountStatus(void *a1, const char *a2, ...)
{
  return _[a1 accountStatus];
}

id objc_msgSend_accountStatusWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountStatusWithCompletionHandler:");
}

id objc_msgSend_acknowledgeiCloudIdentity(void *a1, const char *a2, ...)
{
  return _[a1 acknowledgeiCloudIdentity];
}

id objc_msgSend_adamID(void *a1, const char *a2, ...)
{
  return _[a1 adamID];
}

id objc_msgSend_addAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnnotation:");
}

id objc_msgSend_addChild_withPendingUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChild:withPendingUnitCount:");
}

id objc_msgSend_addClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClient:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addFilterPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFilterPredicate:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:recordType:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserver_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:zoneID:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addPersistentStoreWithType_configuration_URL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPersistentStoreWithType:configuration:URL:options:error:");
}

id objc_msgSend_addPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPointer:");
}

id objc_msgSend_addSaltChangeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSaltChangeObserver:");
}

id objc_msgSend_addStoreID_toCollectionID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStoreID:toCollectionID:completion:");
}

id objc_msgSend_addStoreItem_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStoreItem:completion:");
}

id objc_msgSend_addStoreItems_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStoreItems:completion:");
}

id objc_msgSend_allAssetIDs(void *a1, const char *a2, ...)
{
  return _[a1 allAssetIDs];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_annotationAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationAtIndex:");
}

id objc_msgSend_annotationsCount(void *a1, const char *a2, ...)
{
  return _[a1 annotationsCount];
}

id objc_msgSend_appBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 appBundleIdentifier];
}

id objc_msgSend_appZones(void *a1, const char *a2, ...)
{
  return _[a1 appZones];
}

id objc_msgSend_aq_requestUpdateAttachment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aq_requestUpdateAttachment");
}

id objc_msgSend_aq_setGettingAccountInfo_willRetryUpdateAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aq_setGettingAccountInfo:willRetryUpdateAttachment:");
}

id objc_msgSend_archiveURL(void *a1, const char *a2, ...)
{
  return _[a1 archiveURL];
}

id objc_msgSend_archivedCloudDriveOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 archivedCloudDriveOptedIn];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_artworkURL(void *a1, const char *a2, ...)
{
  return _[a1 artworkURL];
}

id objc_msgSend_assetDataSource(void *a1, const char *a2, ...)
{
  return _[a1 assetDataSource];
}

id objc_msgSend_assetDetailForAssetID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetDetailForAssetID:completion:");
}

id objc_msgSend_assetDetailManager(void *a1, const char *a2, ...)
{
  return _[a1 assetDetailManager];
}

id objc_msgSend_assetDetailManagerInstance(void *a1, const char *a2, ...)
{
  return _[a1 assetDetailManagerInstance];
}

id objc_msgSend_assetDetailsForAssetIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetDetailsForAssetIDs:completion:");
}

id objc_msgSend_assetID(void *a1, const char *a2, ...)
{
  return _[a1 assetID];
}

id objc_msgSend_assetIDFromCollectionMemberID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetIDFromCollectionMemberID:");
}

id objc_msgSend_assetManager(void *a1, const char *a2, ...)
{
  return _[a1 assetManager];
}

id objc_msgSend_assetReviewForAssetReviewID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetReviewForAssetReviewID:completion:");
}

id objc_msgSend_assetReviewID(void *a1, const char *a2, ...)
{
  return _[a1 assetReviewID];
}

id objc_msgSend_assetReviewManager(void *a1, const char *a2, ...)
{
  return _[a1 assetReviewManager];
}

id objc_msgSend_assetReviewManagerInstance(void *a1, const char *a2, ...)
{
  return _[a1 assetReviewManagerInstance];
}

id objc_msgSend_assetReviewsForAssetReviewIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetReviewsForAssetReviewIDs:completion:");
}

id objc_msgSend_attachOrSignalFetchChangesTransaction_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachOrSignalFetchChangesTransaction:reason:");
}

id objc_msgSend_attachToZones_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachToZones:completion:");
}

id objc_msgSend_attached(void *a1, const char *a2, ...)
{
  return _[a1 attached];
}

id objc_msgSend_attachedToContainer(void *a1, const char *a2, ...)
{
  return _[a1 attachedToContainer];
}

id objc_msgSend_audiobookFetcher(void *a1, const char *a2, ...)
{
  return _[a1 audiobookFetcher];
}

id objc_msgSend_audiobookStoreEnabledWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audiobookStoreEnabledWithCompletion:");
}

id objc_msgSend_audiobookStoreIsAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audiobookStoreIsAvailable:");
}

id objc_msgSend_audiobooksQuery(void *a1, const char *a2, ...)
{
  return _[a1 audiobooksQuery];
}

id objc_msgSend_averageBandwidthFallbackToPeak(void *a1, const char *a2, ...)
{
  return _[a1 averageBandwidthFallbackToPeak];
}

id objc_msgSend_backOffInterval(void *a1, const char *a2, ...)
{
  return _[a1 backOffInterval];
}

id objc_msgSend_backupWithName_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backupWithName:completionHandler:");
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_bdsAppBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bdsAppBundleIdentifier];
}

id objc_msgSend_bds_addObjectIfNotNil_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_addObjectIfNotNil:");
}

id objc_msgSend_bds_atOffset_getAtMost_moc_entityClass_privacyDelegate_updated_tombstones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:");
}

id objc_msgSend_bds_chainSuccessAndErrorCompletionSelectorCallsForSelector_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:");
}

id objc_msgSend_bds_chainSuccessAndErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:");
}

id objc_msgSend_bds_chainUntilNoErrorCompletionSelectorCallsForSelector_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_chainUntilNoErrorCompletionSelectorCallsForSelector:completion:");
}

id objc_msgSend_bds_chainUntilNoErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_chainUntilNoErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:");
}

id objc_msgSend_bds_decodeArrayOfObjectsOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_decodeArrayOfObjectsOfClass:forKey:");
}

id objc_msgSend_bds_defaultConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_defaultConfiguration");
}

id objc_msgSend_bds_dictionaryUsingPropertyAsKey_uniquingKeysWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_dictionaryUsingPropertyAsKey:uniquingKeysWith:");
}

id objc_msgSend_bds_traverseBatchesOfSize_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bds_traverseBatchesOfSize:block:");
}

id objc_msgSend_bdsctl_addTrackedItem_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bdsctl_addTrackedItem:completion:");
}

id objc_msgSend_bdsctl_getStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bdsctl_getStateWithCompletion:");
}

id objc_msgSend_bdsctl_updateReferencePrices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bdsctl_updateReferencePrices:completion:");
}

id objc_msgSend_bdsdctl_updateTrackedPricesIgnoringScheduleForAllItemsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bdsdctl_updateTrackedPricesIgnoringScheduleForAllItemsWithCompletionHandler:");
}

id objc_msgSend_bitrateForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bitrateForItem:");
}

id objc_msgSend_bl_setNonNilValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bl_setNonNilValue:forKey:");
}

id objc_msgSend_bodyMultiple(void *a1, const char *a2, ...)
{
  return _[a1 bodyMultiple];
}

id objc_msgSend_bodySingleAudiobook(void *a1, const char *a2, ...)
{
  return _[a1 bodySingleAudiobook];
}

id objc_msgSend_bodySingleBook(void *a1, const char *a2, ...)
{
  return _[a1 bodySingleBook];
}

id objc_msgSend_bookWidgetDataUpdater(void *a1, const char *a2, ...)
{
  return _[a1 bookWidgetDataUpdater];
}

id objc_msgSend_bookWidgetInfosThatNeedToBeCreatedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookWidgetInfosThatNeedToBeCreatedWithCompletion:");
}

id objc_msgSend_bookWidgetReadingHistoryStateInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookWidgetReadingHistoryStateInfoWithCompletionHandler:");
}

id objc_msgSend_bookmarkTime(void *a1, const char *a2, ...)
{
  return _[a1 bookmarkTime];
}

id objc_msgSend_books(void *a1, const char *a2, ...)
{
  return _[a1 books];
}

id objc_msgSend_booksFinishedGoal(void *a1, const char *a2, ...)
{
  return _[a1 booksFinishedGoal];
}

id objc_msgSend_booksFinishedUserDefaultsKey(void *a1, const char *a2, ...)
{
  return _[a1 booksFinishedUserDefaultsKey];
}

id objc_msgSend_booksReadingNowWidgetRolloutRate(void *a1, const char *a2, ...)
{
  return _[a1 booksReadingNowWidgetRolloutRate];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bu_arrayByRemovingNSNulls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_arrayByRemovingNSNulls");
}

id objc_msgSend_bu_booksGroupContainerURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_booksGroupContainerURL");
}

id objc_msgSend_bu_errorWithDomain_code_description_underlyingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_errorWithDomain:code:description:underlyingError:");
}

id objc_msgSend_bu_extendedAttributeNamed_iCloudSyncable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_extendedAttributeNamed:iCloudSyncable:");
}

id objc_msgSend_bu_md5UpperCase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_md5UpperCase");
}

id objc_msgSend_bu_prettyDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_prettyDescription");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cardLimit(void *a1, const char *a2, ...)
{
  return _[a1 cardLimit];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_changeBooksFinishedGoalTo_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeBooksFinishedGoalTo:completionHandler:");
}

id objc_msgSend_changeDailyGoalTo_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeDailyGoalTo:completionHandler:");
}

id objc_msgSend_changeToken(void *a1, const char *a2, ...)
{
  return _[a1 changeToken];
}

id objc_msgSend_changeTokenController(void *a1, const char *a2, ...)
{
  return _[a1 changeTokenController];
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _[a1 changeType];
}

id objc_msgSend_changedObjectID(void *a1, const char *a2, ...)
{
  return _[a1 changedObjectID];
}

id objc_msgSend_changedRecordZoneIDs(void *a1, const char *a2, ...)
{
  return _[a1 changedRecordZoneIDs];
}

id objc_msgSend_changes(void *a1, const char *a2, ...)
{
  return _[a1 changes];
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkResourceIsReachableAndReturnError:");
}

id objc_msgSend_ckSystemFields(void *a1, const char *a2, ...)
{
  return _[a1 ckSystemFields];
}

id objc_msgSend_clearAnnotations(void *a1, const char *a2, ...)
{
  return _[a1 clearAnnotations];
}

id objc_msgSend_clearDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDataWithCompletionHandler:");
}

id objc_msgSend_clearDate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDate:completionHandler:");
}

id objc_msgSend_clearDefaultsCachedDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearDefaultsCachedDataWithCompletionHandler:");
}

id objc_msgSend_clearLocalCachedDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearLocalCachedDataWithCompletionHandler:");
}

id objc_msgSend_clearSyncMetadata(void *a1, const char *a2, ...)
{
  return _[a1 clearSyncMetadata];
}

id objc_msgSend_clearTodayWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearTodayWithCompletionHandler:");
}

id objc_msgSend_clientConnected(void *a1, const char *a2, ...)
{
  return _[a1 clientConnected];
}

id objc_msgSend_clientConnectionManager(void *a1, const char *a2, ...)
{
  return _[a1 clientConnectionManager];
}

id objc_msgSend_clientConnectionService(void *a1, const char *a2, ...)
{
  return _[a1 clientConnectionService];
}

id objc_msgSend_clientCount(void *a1, const char *a2, ...)
{
  return _[a1 clientCount];
}

id objc_msgSend_clients(void *a1, const char *a2, ...)
{
  return _[a1 clients];
}

id objc_msgSend_clientsByConnection(void *a1, const char *a2, ...)
{
  return _[a1 clientsByConnection];
}

id objc_msgSend_cloudAssetType(void *a1, const char *a2, ...)
{
  return _[a1 cloudAssetType];
}

id objc_msgSend_cloudCollectionsManager(void *a1, const char *a2, ...)
{
  return _[a1 cloudCollectionsManager];
}

id objc_msgSend_cloudDataFromRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudDataFromRecord:");
}

id objc_msgSend_cloudDataWithPredicate_sortDescriptors_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudDataWithPredicate:sortDescriptors:completion:");
}

id objc_msgSend_cloudDatasWithPredicate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudDatasWithPredicate:completion:");
}

id objc_msgSend_cloudDatasWithPredicate_sortDescriptors_maximumResultCount_filter_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudDatasWithPredicate:sortDescriptors:maximumResultCount:filter:completion:");
}

id objc_msgSend_cloudKitController(void *a1, const char *a2, ...)
{
  return _[a1 cloudKitController];
}

id objc_msgSend_cloudSyncDiagnosticService(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncDiagnosticService];
}

id objc_msgSend_cloudSyncEnabled(void *a1, const char *a2, ...)
{
  return _[a1 cloudSyncEnabled];
}

id objc_msgSend_cloudVersion(void *a1, const char *a2, ...)
{
  return _[a1 cloudVersion];
}

id objc_msgSend_coalescedArchive(void *a1, const char *a2, ...)
{
  return _[a1 coalescedArchive];
}

id objc_msgSend_coalescedAttachment(void *a1, const char *a2, ...)
{
  return _[a1 coalescedAttachment];
}

id objc_msgSend_coalescedChangeAttachment(void *a1, const char *a2, ...)
{
  return _[a1 coalescedChangeAttachment];
}

id objc_msgSend_coalescedNotification(void *a1, const char *a2, ...)
{
  return _[a1 coalescedNotification];
}

id objc_msgSend_coalescedZoneFetch(void *a1, const char *a2, ...)
{
  return _[a1 coalescedZoneFetch];
}

id objc_msgSend_coalescingBlock(void *a1, const char *a2, ...)
{
  return _[a1 coalescingBlock];
}

id objc_msgSend_coalescingDelay(void *a1, const char *a2, ...)
{
  return _[a1 coalescingDelay];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collectionDescription(void *a1, const char *a2, ...)
{
  return _[a1 collectionDescription];
}

id objc_msgSend_collectionDetailForCollectionID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionDetailForCollectionID:completion:");
}

id objc_msgSend_collectionDetailManager(void *a1, const char *a2, ...)
{
  return _[a1 collectionDetailManager];
}

id objc_msgSend_collectionDetailManagerInstance(void *a1, const char *a2, ...)
{
  return _[a1 collectionDetailManagerInstance];
}

id objc_msgSend_collectionDetailsForCollectionIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionDetailsForCollectionIDs:completion:");
}

id objc_msgSend_collectionID(void *a1, const char *a2, ...)
{
  return _[a1 collectionID];
}

id objc_msgSend_collectionMemberForCollectionMemberID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionMemberForCollectionMemberID:completion:");
}

id objc_msgSend_collectionMemberID(void *a1, const char *a2, ...)
{
  return _[a1 collectionMemberID];
}

id objc_msgSend_collectionMemberIDWithCollectionID_assetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionMemberIDWithCollectionID:assetID:");
}

id objc_msgSend_collectionMemberManager(void *a1, const char *a2, ...)
{
  return _[a1 collectionMemberManager];
}

id objc_msgSend_collectionMemberManagerInstance(void *a1, const char *a2, ...)
{
  return _[a1 collectionMemberManagerInstance];
}

id objc_msgSend_collections(void *a1, const char *a2, ...)
{
  return _[a1 collections];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_component_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "component:fromDate:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurations(void *a1, const char *a2, ...)
{
  return _[a1 configurations];
}

id objc_msgSend_configureFromCloudData_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureFromCloudData:withMergers:");
}

id objc_msgSend_configureInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureInterface:");
}

id objc_msgSend_configuredRecordFromAttributes(void *a1, const char *a2, ...)
{
  return _[a1 configuredRecordFromAttributes];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectUserTo_container_updateSubscription_completion_subscriptionCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectUserTo:container:updateSubscription:completion:subscriptionCompletion:");
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _[a1 connection];
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _[a1 container];
}

id objc_msgSend_containerIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 containerIdentifier];
}

id objc_msgSend_containerQueue(void *a1, const char *a2, ...)
{
  return _[a1 containerQueue];
}

id objc_msgSend_containerURL(void *a1, const char *a2, ...)
{
  return _[a1 containerURL];
}

id objc_msgSend_containerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerWithIdentifier:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_contentChangedDate(void *a1, const char *a2, ...)
{
  return _[a1 contentChangedDate];
}

id objc_msgSend_contentCreationDate(void *a1, const char *a2, ...)
{
  return _[a1 contentCreationDate];
}

id objc_msgSend_contentFileSize(void *a1, const char *a2, ...)
{
  return _[a1 contentFileSize];
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_coordinateReadingItemAtURL_options_error_byAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateReadingItemAtURL:options:error:byAccessor:");
}

id objc_msgSend_coordinateWritingItemAtURL_options_error_byAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateWritingItemAtURL:options:error:byAccessor:");
}

id objc_msgSend_coordinatingObserver(void *a1, const char *a2, ...)
{
  return _[a1 coordinatingObserver];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyEntityPropertiesArray_fromEntityName_withPredicate_sortBy_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:");
}

id objc_msgSend_copyEntityPropertyArray_fromEntityName_withPredicate_sortBy_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForFetchRequest:error:");
}

id objc_msgSend_coverURL(void *a1, const char *a2, ...)
{
  return _[a1 coverURL];
}

id objc_msgSend_cq_postServiceNotificationNames_latestChangeToken_forClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cq_postServiceNotificationNames:latestChangeToken:forClients:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createTransactionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTransactionWithName:");
}

id objc_msgSend_currentAssetDetailCloudSyncVersions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAssetDetailCloudSyncVersions:");
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentChangeToken(void *a1, const char *a2, ...)
{
  return _[a1 currentChangeToken];
}

id objc_msgSend_currentCloudSyncVersions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCloudSyncVersions:");
}

id objc_msgSend_currentCollectionDetailCloudSyncVersions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCollectionDetailCloudSyncVersions:");
}

id objc_msgSend_currentCollectionMemberCloudSyncVersions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCollectionMemberCloudSyncVersions:");
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentObserverIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 currentObserverIdentifier];
}

id objc_msgSend_currentProgress(void *a1, const char *a2, ...)
{
  return _[a1 currentProgress];
}

id objc_msgSend_currentReachabilityStatus(void *a1, const char *a2, ...)
{
  return _[a1 currentReachabilityStatus];
}

id objc_msgSend_currentReadingNowDetailCloudSyncVersions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentReadingNowDetailCloudSyncVersions:");
}

id objc_msgSend_currentSalt(void *a1, const char *a2, ...)
{
  return _[a1 currentSalt];
}

id objc_msgSend_currentSaltVersionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 currentSaltVersionIdentifier];
}

id objc_msgSend_currentStatus(void *a1, const char *a2, ...)
{
  return _[a1 currentStatus];
}

id objc_msgSend_currentStreak(void *a1, const char *a2, ...)
{
  return _[a1 currentStreak];
}

id objc_msgSend_currentToken(void *a1, const char *a2, ...)
{
  return _[a1 currentToken];
}

id objc_msgSend_currentUbiquityIdentityToken(void *a1, const char *a2, ...)
{
  return _[a1 currentUbiquityIdentityToken];
}

id objc_msgSend_currentUserIDName(void *a1, const char *a2, ...)
{
  return _[a1 currentUserIDName];
}

id objc_msgSend_currentWidgetDatas(void *a1, const char *a2, ...)
{
  return _[a1 currentWidgetDatas];
}

id objc_msgSend_currentWidgetDatasByAssetID(void *a1, const char *a2, ...)
{
  return _[a1 currentWidgetDatasByAssetID];
}

id objc_msgSend_daemon(void *a1, const char *a2, ...)
{
  return _[a1 daemon];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataFile(void *a1, const char *a2, ...)
{
  return _[a1 dataFile];
}

id objc_msgSend_dataFileDataIsNil(void *a1, const char *a2, ...)
{
  return _[a1 dataFileDataIsNil];
}

id objc_msgSend_dataManager(void *a1, const char *a2, ...)
{
  return _[a1 dataManager];
}

id objc_msgSend_dataManager_didInsertNewRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataManager:didInsertNewRecords:");
}

id objc_msgSend_dataMapper(void *a1, const char *a2, ...)
{
  return _[a1 dataMapper];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataSource_storeDidReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource:storeDidReset:");
}

id objc_msgSend_dataType(void *a1, const char *a2, ...)
{
  return _[a1 dataType];
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_database(void *a1, const char *a2, ...)
{
  return _[a1 database];
}

id objc_msgSend_databaseController_attachmentChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseController:attachmentChanged:");
}

id objc_msgSend_databaseController_fetchedAllRecordsInZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseController:fetchedAllRecordsInZone:");
}

id objc_msgSend_databaseController_reachabilityChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseController:reachabilityChanged:");
}

id objc_msgSend_databaseController_recordWithIDWasDeleted_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseController:recordWithIDWasDeleted:recordType:");
}

id objc_msgSend_databaseController_recordsChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseController:recordsChanged:");
}

id objc_msgSend_databaseController_saltVersionIdentifierChanged_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseController:saltVersionIdentifierChanged:completion:");
}

id objc_msgSend_databaseFolderURLForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseFolderURLForConfiguration:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingUnit_value_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingUnit:value:toDate:options:");
}

id objc_msgSend_dateFinished(void *a1, const char *a2, ...)
{
  return _[a1 dateFinished];
}

id objc_msgSend_dateFromComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromComponents:");
}

id objc_msgSend_datePlaybackTimeUpdated(void *a1, const char *a2, ...)
{
  return _[a1 datePlaybackTimeUpdated];
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _[a1 day];
}

id objc_msgSend_dbArchiveExtension(void *a1, const char *a2, ...)
{
  return _[a1 dbArchiveExtension];
}

id objc_msgSend_dbArchiveFilename(void *a1, const char *a2, ...)
{
  return _[a1 dbArchiveFilename];
}

id objc_msgSend_dbArchiveFolderName(void *a1, const char *a2, ...)
{
  return _[a1 dbArchiveFolderName];
}

id objc_msgSend_dbSubscriptionID(void *a1, const char *a2, ...)
{
  return _[a1 dbSubscriptionID];
}

id objc_msgSend_dealAbsoluteThreshold(void *a1, const char *a2, ...)
{
  return _[a1 dealAbsoluteThreshold];
}

id objc_msgSend_dealRelativeThreshold(void *a1, const char *a2, ...)
{
  return _[a1 dealRelativeThreshold];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeDoubleForKey:");
}

id objc_msgSend_decodeInt32ForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeInt32ForKey:");
}

id objc_msgSend_decodeInt64ForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeInt64ForKey:");
}

id objc_msgSend_decodeIntForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntForKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decodeRecordFromSystemFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeRecordFromSystemFields:");
}

id objc_msgSend_defaultBag(void *a1, const char *a2, ...)
{
  return _[a1 defaultBag];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultDataURL(void *a1, const char *a2, ...)
{
  return _[a1 defaultDataURL];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultStore];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteAssetDetailForAssetID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAssetDetailForAssetID:completion:");
}

id objc_msgSend_deleteAssetReviewForAssetReviewID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAssetReviewForAssetReviewID:completion:");
}

id objc_msgSend_deleteAssetReviewForAssetReviewIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAssetReviewForAssetReviewIDs:completion:");
}

id objc_msgSend_deleteCloudDataForPredicate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCloudDataForPredicate:completion:");
}

id objc_msgSend_deleteCloudDataWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCloudDataWithCompletion:");
}

id objc_msgSend_deleteCollectionDetailForCollectionID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCollectionDetailForCollectionID:completion:");
}

id objc_msgSend_deleteCollectionDetailForCollectionIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCollectionDetailForCollectionIDs:completion:");
}

id objc_msgSend_deleteCollectionMemberForCollectionMemberID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCollectionMemberForCollectionMemberID:completion:");
}

id objc_msgSend_deleteCollectionMemberForCollectionMemberIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCollectionMemberForCollectionMemberIDs:completion:");
}

id objc_msgSend_deleteEngagementDataForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEngagementDataForKey:completion:");
}

id objc_msgSend_deleteItemsWithStoreIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteItemsWithStoreIDs:completion:");
}

id objc_msgSend_deleteObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteObject:");
}

id objc_msgSend_deleteReadingNowDetailForAssetID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteReadingNowDetailForAssetID:completion:");
}

id objc_msgSend_deleteStoreItemWithStoreID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteStoreItemWithStoreID:completion:");
}

id objc_msgSend_deleteStoreItemsWithStoreIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteStoreItemsWithStoreIDs:completion:");
}

id objc_msgSend_deleteUserDatumForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteUserDatumForKey:completion:");
}

id objc_msgSend_deletedFlag(void *a1, const char *a2, ...)
{
  return _[a1 deletedFlag];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_desiredRecordZoneIDs(void *a1, const char *a2, ...)
{
  return _[a1 desiredRecordZoneIDs];
}

id objc_msgSend_destroyPersistentStoreAtURL_withType_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyPersistentStoreAtURL:withType:options:error:");
}

id objc_msgSend_detach(void *a1, const char *a2, ...)
{
  return _[a1 detach];
}

id objc_msgSend_detachWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detachWithCompletionHandler:");
}

id objc_msgSend_detachWithError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detachWithError:completion:");
}

id objc_msgSend_diagnosticDirtyCloudDataInfos(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticDirtyCloudDataInfos];
}

id objc_msgSend_diagnosticEntityInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticEntityInfos:");
}

id objc_msgSend_diagnosticInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "diagnosticInfoWithCompletionHandler:");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfURL:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didAcceptConnection:");
}

id objc_msgSend_didChangeContainer(void *a1, const char *a2, ...)
{
  return _[a1 didChangeContainer];
}

id objc_msgSend_didUnacknowledgediCloudLogoutOccur(void *a1, const char *a2, ...)
{
  return _[a1 didUnacknowledgediCloudLogoutOccur];
}

id objc_msgSend_directoriesSubpath(void *a1, const char *a2, ...)
{
  return _[a1 directoriesSubpath];
}

id objc_msgSend_dirtyCloudDataInfos(void *a1, const char *a2, ...)
{
  return _[a1 dirtyCloudDataInfos];
}

id objc_msgSend_dirtyMutableCloudDataWithFetchLimit_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dirtyMutableCloudDataWithFetchLimit:completion:");
}

id objc_msgSend_disableUpdates(void *a1, const char *a2, ...)
{
  return _[a1 disableUpdates];
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return _[a1 dispatchQueue];
}

id objc_msgSend_dissociateCloudDataFromSyncWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dissociateCloudDataFromSyncWithCompletion:");
}

id objc_msgSend_documentsURL(void *a1, const char *a2, ...)
{
  return _[a1 documentsURL];
}

id objc_msgSend_documentsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentsURL:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadingPercent(void *a1, const char *a2, ...)
{
  return _[a1 downloadingPercent];
}

id objc_msgSend_dq_archiveCurrentUbiquityIdentityToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_archiveCurrentUbiquityIdentityToken");
}

id objc_msgSend_dq_isICloudDriveEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_isICloudDriveEnabled");
}

id objc_msgSend_dq_refreshUbiquityAvailabilityStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_refreshUbiquityAvailabilityStatus");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_durationInterval(void *a1, const char *a2, ...)
{
  return _[a1 durationInterval];
}

id objc_msgSend_editGeneration(void *a1, const char *a2, ...)
{
  return _[a1 editGeneration];
}

id objc_msgSend_effectiveBoolValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBoolValueForSetting:");
}

id objc_msgSend_enableCloudSync(void *a1, const char *a2, ...)
{
  return _[a1 enableCloudSync];
}

id objc_msgSend_enableUpdates(void *a1, const char *a2, ...)
{
  return _[a1 enableUpdates];
}

id objc_msgSend_enabledSync(void *a1, const char *a2, ...)
{
  return _[a1 enabledSync];
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeDouble:forKey:");
}

id objc_msgSend_encodeInt32_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt32:forKey:");
}

id objc_msgSend_encodeInt64_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt64:forKey:");
}

id objc_msgSend_encodeInt_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodeRecordSystemFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeRecordSystemFields:");
}

id objc_msgSend_encodeSystemFieldsWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeSystemFieldsWithCoder:");
}

id objc_msgSend_encodeWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeWithCoder:");
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _[a1 encodedData];
}

id objc_msgSend_encryptedValues(void *a1, const char *a2, ...)
{
  return _[a1 encryptedValues];
}

id objc_msgSend_encryptedValuesByKey(void *a1, const char *a2, ...)
{
  return _[a1 encryptedValuesByKey];
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endTransaction(void *a1, const char *a2, ...)
{
  return _[a1 endTransaction];
}

id objc_msgSend_engagementDataForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "engagementDataForKey:completion:");
}

id objc_msgSend_engagementDataIncludingDeleted_forKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "engagementDataIncludingDeleted:forKey:completion:");
}

id objc_msgSend_engagementManager(void *a1, const char *a2, ...)
{
  return _[a1 engagementManager];
}

id objc_msgSend_enqueueNotificationName_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueNotificationName:withCompletion:");
}

id objc_msgSend_entity(void *a1, const char *a2, ...)
{
  return _[a1 entity];
}

id objc_msgSend_entity_withPredicate_sortDescriptors_fetchLimit_prefetchRelationships_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:");
}

id objc_msgSend_entityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityForName:inManagedObjectContext:");
}

id objc_msgSend_entityInfos(void *a1, const char *a2, ...)
{
  return _[a1 entityInfos];
}

id objc_msgSend_entityName(void *a1, const char *a2, ...)
{
  return _[a1 entityName];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateResultsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateResultsUsingBlock:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _[a1 environment];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_establishedSalt(void *a1, const char *a2, ...)
{
  return _[a1 establishedSalt];
}

id objc_msgSend_execute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "execute:");
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeFetchRequest:error:");
}

id objc_msgSend_executeRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeRequest:error:");
}

id objc_msgSend_existingObjectWithID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingObjectWithID:error:");
}

id objc_msgSend_failedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedRecordIDs:completion:");
}

id objc_msgSend_fetchAdamIDs_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAdamIDs:completionHandler:");
}

id objc_msgSend_fetchAllHiddenItemStoreIDsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAllHiddenItemStoreIDsWithCompletion:");
}

id objc_msgSend_fetchAssetDetailsForUnsyncedTastes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAssetDetailsForUnsyncedTastes:");
}

id objc_msgSend_fetchAssetDetailsIncludingDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAssetDetailsIncludingDeleted:completion:");
}

id objc_msgSend_fetchAssetReviewsForUserID_includingDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAssetReviewsForUserID:includingDeleted:completion:");
}

id objc_msgSend_fetchBookAssets_audiobookAssets_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBookAssets:audiobookAssets:completionHandler:");
}

id objc_msgSend_fetchBookWidgetInfoIDsWithCloudAssetType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBookWidgetInfoIDsWithCloudAssetType:completion:");
}

id objc_msgSend_fetchBookWidgetInfoIDsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBookWidgetInfoIDsWithCompletion:");
}

id objc_msgSend_fetchChangesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchChangesWithCompletion:");
}

id objc_msgSend_fetchCloudDataIncludingDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCloudDataIncludingDeleted:completion:");
}

id objc_msgSend_fetchCollectionDetailsIncludingDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCollectionDetailsIncludingDeleted:completion:");
}

id objc_msgSend_fetchCollectionMembersInCollectionID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCollectionMembersInCollectionID:completion:");
}

id objc_msgSend_fetchCollectionMembersInCollectionID_maximumResultCount_filter_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCollectionMembersInCollectionID:maximumResultCount:filter:completion:");
}

id objc_msgSend_fetchCollectionMembersIncludingDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCollectionMembersIncludingDeleted:completion:");
}

id objc_msgSend_fetchCurrentToken(void *a1, const char *a2, ...)
{
  return _[a1 fetchCurrentToken];
}

id objc_msgSend_fetchEngagementDatasIncludingDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchEngagementDatasIncludingDeleted:completion:");
}

id objc_msgSend_fetchFinishedAssetCountByYearWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchFinishedAssetCountByYearWithCompletion:");
}

id objc_msgSend_fetchFinishedDatesByAssetIDForYear_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchFinishedDatesByAssetIDForYear:completion:");
}

id objc_msgSend_fetchHistoryAfterToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchHistoryAfterToken:");
}

id objc_msgSend_fetchIsAssetID_inCollectionID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchIsAssetID:inCollectionID:completion:");
}

id objc_msgSend_fetchItemsForStoreIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchItemsForStoreIDs:");
}

id objc_msgSend_fetchLatestCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchLatestCompletion:");
}

id objc_msgSend_fetchMaxSortOrderInCollectionID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMaxSortOrderInCollectionID:completion:");
}

id objc_msgSend_fetchMostRecentAudiobookWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMostRecentAudiobookWithCompletion:");
}

id objc_msgSend_fetchNotificationNamesAfterToken_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchNotificationNamesAfterToken:withCompletion:");
}

id objc_msgSend_fetchQueue(void *a1, const char *a2, ...)
{
  return _[a1 fetchQueue];
}

id objc_msgSend_fetchRecordForRecordID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRecordForRecordID:completion:");
}

id objc_msgSend_fetchRecordWithID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRecordWithID:completionHandler:");
}

id objc_msgSend_fetchRecordZoneChangesSuccess(void *a1, const char *a2, ...)
{
  return _[a1 fetchRecordZoneChangesSuccess];
}

id objc_msgSend_fetchRemoteChangesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRemoteChangesWithCompletionHandler:");
}

id objc_msgSend_fetchRequest(void *a1, const char *a2, ...)
{
  return _[a1 fetchRequest];
}

id objc_msgSend_fetchRequestWithEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequestWithEntityName:");
}

id objc_msgSend_fetchStoreItemsIncludingDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchStoreItemsIncludingDeleted:completion:");
}

id objc_msgSend_fetchUserDataIncludingDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUserDataIncludingDeleted:completion:");
}

id objc_msgSend_fetchUserRecordIDWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUserRecordIDWithCompletionHandler:");
}

id objc_msgSend_fetchedObjects(void *a1, const char *a2, ...)
{
  return _[a1 fetchedObjects];
}

id objc_msgSend_fetchedResultsController(void *a1, const char *a2, ...)
{
  return _[a1 fetchedResultsController];
}

id objc_msgSend_fetching(void *a1, const char *a2, ...)
{
  return _[a1 fetching];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_findLocalIdDupesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findLocalIdDupesWithCompletionHandler:");
}

id objc_msgSend_finishDecoding(void *a1, const char *a2, ...)
{
  return _[a1 finishDecoding];
}

id objc_msgSend_finishEncoding(void *a1, const char *a2, ...)
{
  return _[a1 finishEncoding];
}

id objc_msgSend_finishedDateKind(void *a1, const char *a2, ...)
{
  return _[a1 finishedDateKind];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_getAssetDetailChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAssetDetailChangesSince:completion:");
}

id objc_msgSend_getAssetReviewChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAssetReviewChangesSince:completion:");
}

id objc_msgSend_getAttached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAttached:");
}

id objc_msgSend_getBookWidgetInfoObject(void *a1, const char *a2, ...)
{
  return _[a1 getBookWidgetInfoObject];
}

id objc_msgSend_getChangesSince_forEntityClass_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getChangesSince:forEntityClass:completion:");
}

id objc_msgSend_getCollectionDetailChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCollectionDetailChangesSince:completion:");
}

id objc_msgSend_getCollectionMemberChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCollectionMemberChangesSince:completion:");
}

id objc_msgSend_getEngagementDataChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getEngagementDataChangesSince:completion:");
}

id objc_msgSend_getInfosWithLimit_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInfosWithLimit:completionHandler:");
}

id objc_msgSend_getReadingNowDetailChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getReadingNowDetailChangesSince:completion:");
}

id objc_msgSend_getRecentBooksExcludingAssetIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRecentBooksExcludingAssetIDs:completion:");
}

id objc_msgSend_getStoreItemChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStoreItemChangesSince:completion:");
}

id objc_msgSend_getUserDataChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUserDataChangesSince:completion:");
}

id objc_msgSend_gettingAccountInfo(void *a1, const char *a2, ...)
{
  return _[a1 gettingAccountInfo];
}

id objc_msgSend_goal(void *a1, const char *a2, ...)
{
  return _[a1 goal];
}

id objc_msgSend_handleNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNotification:");
}

id objc_msgSend_handleRemoteCKNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRemoteCKNotification:");
}

id objc_msgSend_handleSaltVersionIdentifierChange_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSaltVersionIdentifierChange:completion:");
}

id objc_msgSend_handleServiceNotificationNames_latestChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleServiceNotificationNames:latestChangeToken:");
}

id objc_msgSend_handleSyncFileChangeWithSyncVersionInfo_updateInfo_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSyncFileChangeWithSyncVersionInfo:updateInfo:completionHandler:");
}

id objc_msgSend_hasBeenPlayed(void *a1, const char *a2, ...)
{
  return _[a1 hasBeenPlayed];
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return _[a1 hasChanges];
}

id objc_msgSend_hasSaltChangedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSaltChangedWithCompletion:");
}

id objc_msgSend_hasSignificantDifferenceWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSignificantDifferenceWith:");
}

id objc_msgSend_hasSubscription(void *a1, const char *a2, ...)
{
  return _[a1 hasSubscription];
}

id objc_msgSend_hasValidSalt(void *a1, const char *a2, ...)
{
  return _[a1 hasValidSalt];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashTableWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashTableWithOptions:");
}

id objc_msgSend_hidden(void *a1, const char *a2, ...)
{
  return _[a1 hidden];
}

id objc_msgSend_hideItemsWithStoreIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideItemsWithStoreIDs:completion:");
}

id objc_msgSend_historyToken(void *a1, const char *a2, ...)
{
  return _[a1 historyToken];
}

id objc_msgSend_historyTokenOffset(void *a1, const char *a2, ...)
{
  return _[a1 historyTokenOffset];
}

id objc_msgSend_iCloudIdentity(void *a1, const char *a2, ...)
{
  return _[a1 iCloudIdentity];
}

id objc_msgSend_iCloudIdentityTokenTracker(void *a1, const char *a2, ...)
{
  return _[a1 iCloudIdentityTokenTracker];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _[a1 identity];
}

id objc_msgSend_im_performSafeAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_performSafeAccess:");
}

id objc_msgSend_im_popSafeAccessState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_popSafeAccessState");
}

id objc_msgSend_im_pushSafeAccessState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_pushSafeAccessState");
}

id objc_msgSend_immutableClass(void *a1, const char *a2, ...)
{
  return _[a1 immutableClass];
}

id objc_msgSend_incrementEditGeneration(void *a1, const char *a2, ...)
{
  return _[a1 incrementEditGeneration];
}

id objc_msgSend_incrementWithDate_by_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementWithDate:by:completionHandler:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initCanUseCellularData_powerRequired_bundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initCanUseCellularData:powerRequired:bundleID:");
}

id objc_msgSend_initFileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFileURLWithPath:isDirectory:");
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initFromArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFromArchive:");
}

id objc_msgSend_initIntoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initIntoManagedObjectContext:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initService(void *a1, const char *a2, ...)
{
  return _[a1 initService];
}

id objc_msgSend_initWithAdamID_isAudiobook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdamID:isAudiobook:");
}

id objc_msgSend_initWithArray_copyItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:copyItems:");
}

id objc_msgSend_initWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetID:");
}

id objc_msgSend_initWithAssetID_title_coverURL_pageProgressionDirection_cloudAssetType_libraryContentAssetType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetID:title:coverURL:pageProgressionDirection:cloudAssetType:libraryContentAssetType:");
}

id objc_msgSend_initWithAssetID_title_coverURL_pageProgressionDirection_cloudAssetType_libraryContentAssetType_lastEngagedDate_isTrackedAsRecent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetID:title:coverURL:pageProgressionDirection:cloudAssetType:libraryContentAssetType:lastEngagedDate:isTrackedAsRecent:");
}

id objc_msgSend_initWithAssetID_title_pageProgressionDirection_coverURL_readingProgress_totalDuration_cloudAssetType_libraryAssetType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetID:title:pageProgressionDirection:coverURL:readingProgress:totalDuration:cloudAssetType:libraryAssetType:");
}

id objc_msgSend_initWithAttached_establishedSalt_container_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAttached:establishedSalt:container:");
}

id objc_msgSend_initWithBookWidgetDataUpdater_transactionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBookWidgetDataUpdater:transactionProvider:");
}

id objc_msgSend_initWithBundleIdentifier_URL_personaUniqueString_personaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:URL:personaUniqueString:personaType:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithClientConnectionService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientConnectionService:");
}

id objc_msgSend_initWithCloudDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudDataSource:");
}

id objc_msgSend_initWithCloudDataSource_cloudKitController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudDataSource:cloudKitController:");
}

id objc_msgSend_initWithCloudDataSource_cloudKitController_syncProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudDataSource:cloudKitController:syncProvider:");
}

id objc_msgSend_initWithCloudDataSource_entityName_notificationName_immutableClass_mutableClass_syncManager_cloudKitController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:");
}

id objc_msgSend_initWithCloudDataSource_entityName_notificationName_immutableClass_mutableClass_syncManager_cloudKitController_dataMapper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:");
}

id objc_msgSend_initWithCloudDataSource_entityName_notificationName_immutableClass_mutableClass_syncManager_cloudKitController_dataMapper_privacyDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:privacyDelegate:");
}

id objc_msgSend_initWithCloudDataSource_entityName_notificationName_immutableClass_mutableClass_syncManager_cloudKitController_privacyDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:privacyDelegate:");
}

id objc_msgSend_initWithCloudKitController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudKitController:");
}

id objc_msgSend_initWithCloudKitController_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudKitController:delegate:");
}

id objc_msgSend_initWithCloudKitController_entityServiceProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudKitController:entityServiceProviders:");
}

id objc_msgSend_initWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoder:");
}

id objc_msgSend_initWithCollectionMemberID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCollectionMemberID:");
}

id objc_msgSend_initWithConcurrencyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConcurrencyType:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConfiguration_archiveURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:archiveURL:");
}

id objc_msgSend_initWithConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:");
}

id objc_msgSend_initWithContainerConfigurations_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerConfigurations:delegate:");
}

id objc_msgSend_initWithContainerURL_trackingLiverpool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerURL:trackingLiverpool:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithCurrentIdentity(void *a1, const char *a2, ...)
{
  return _[a1 initWithCurrentIdentity];
}

id objc_msgSend_initWithDelegate_ubquityStatusMonitor_directoriesSubpath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:ubquityStatusMonitor:directoriesSubpath:");
}

id objc_msgSend_initWithEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntityName:");
}

id objc_msgSend_initWithEntityName_notificationName_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntityName:notificationName:delegate:");
}

id objc_msgSend_initWithEntityName_syncManager_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntityName:syncManager:delegate:");
}

id objc_msgSend_initWithExtensionBundleIdentifier_kind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExtensionBundleIdentifier:kind:");
}

id objc_msgSend_initWithFetchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFetchRequest:");
}

id objc_msgSend_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:");
}

id objc_msgSend_initWithIdentifier_saltedHashedID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:saltedHashedID:");
}

id objc_msgSend_initWithIsLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIsLoaded:");
}

id objc_msgSend_initWithItemIDs_updateScheduleSteps_dealAbsoluteThreshold_dealRelativeThreshold_notification_cardLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItemIDs:updateScheduleSteps:dealAbsoluteThreshold:dealRelativeThreshold:notification:cardLimit:");
}

id objc_msgSend_initWithKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:");
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:ascending:");
}

id objc_msgSend_initWithMOC_assetDetailManager_readingNowDetailManager_ubiquityManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMOC:assetDetailManager:readingNowDetailManager:ubiquityManager:");
}

id objc_msgSend_initWithMOC_zoneName_cloudKitController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMOC:zoneName:cloudKitController:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithManagedObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManagedObjectModel:");
}

id objc_msgSend_initWithManagedObjectModel_nameOnDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManagedObjectModel:nameOnDisk:");
}

id objc_msgSend_initWithManagedObjectModel_nameOnDisk_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManagedObjectModel:nameOnDisk:delegate:");
}

id objc_msgSend_initWithManagedObjectModel_rootDirectoryURL_legacyRootDirectoryURL_nameOnDisk_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManagedObjectModel:rootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:delegate:");
}

id objc_msgSend_initWithName_changeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:changeToken:");
}

id objc_msgSend_initWithName_enabledSync_dirtyCloudDataInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:enabledSync:dirtyCloudDataInfos:");
}

id objc_msgSend_initWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:reason:userInfo:");
}

id objc_msgSend_initWithNotificationInfos_changeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotificationInfos:changeToken:");
}

id objc_msgSend_initWithNotifyBlock_blockDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotifyBlock:blockDescription:");
}

id objc_msgSend_initWithNotifyBlock_notifyTimeout_blockDescription_notifyTimeoutBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotifyBlock:notifyTimeout:blockDescription:notifyTimeoutBlock:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithPersistenceURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersistenceURL:");
}

id objc_msgSend_initWithPreviousServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPreviousServerChangeToken:");
}

id objc_msgSend_initWithReadingGoalsService_transactionProvider_viewStateChangeHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadingGoalsService:transactionProvider:viewStateChangeHandler:");
}

id objc_msgSend_initWithRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecord:");
}

id objc_msgSend_initWithRecordIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordIDs:");
}

id objc_msgSend_initWithRecordName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordName:");
}

id objc_msgSend_initWithRecordName_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordName:zoneID:");
}

id objc_msgSend_initWithRecordType_recordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordType:recordID:");
}

id objc_msgSend_initWithRecordType_zoneName_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordType:zoneName:delegate:");
}

id objc_msgSend_initWithRecordZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZone:");
}

id objc_msgSend_initWithRecordZoneIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZoneIDs:");
}

id objc_msgSend_initWithRecordZoneIDs_configurationsByRecordZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZoneIDs:configurationsByRecordZoneID:");
}

id objc_msgSend_initWithRecordZonesToSave_recordZoneIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZonesToSave:recordZoneIDsToDelete:");
}

id objc_msgSend_initWithRecordsToSave_recordIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordsToSave:recordIDsToDelete:");
}

id objc_msgSend_initWithServiceConnectionClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceConnectionClient:");
}

id objc_msgSend_initWithStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:endDate:");
}

id objc_msgSend_initWithStateInfo_readingGoalsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStateInfo:readingGoalsEnabled:");
}

id objc_msgSend_initWithStoreID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreID:");
}

id objc_msgSend_initWithSubscriptionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscriptionID:");
}

id objc_msgSend_initWithSubscriptionsToSave_subscriptionIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscriptionsToSave:subscriptionIDsToDelete:");
}

id objc_msgSend_initWithTargetQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTargetQueue:");
}

id objc_msgSend_initWithTitle_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:block:");
}

id objc_msgSend_initWithTitleSingleAudiobook_titleSingleBook_titleMultiple_bodySingleAudiobook_bodySingleBook_bodyMultiple_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitleSingleAudiobook:titleSingleBook:titleMultiple:bodySingleAudiobook:bodySingleBook:bodyMultiple:");
}

id objc_msgSend_initWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithToken:");
}

id objc_msgSend_initWithTransactionName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransactionName:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithWidgetCenterManager_managedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWidgetCenterManager:managedObjectContext:");
}

id objc_msgSend_initWithZoneDataManager_tokenController_databaseController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneDataManager:tokenController:databaseController:");
}

id objc_msgSend_initWithZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneID:");
}

id objc_msgSend_initWithZoneName_ownerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:ownerName:");
}

id objc_msgSend_initialGatherSentAtleastOnce(void *a1, const char *a2, ...)
{
  return _[a1 initialGatherSentAtleastOnce];
}

id objc_msgSend_insertMatchingManagedObjectIntoContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertMatchingManagedObjectIntoContext:");
}

id objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertNewObjectForEntityForName:inManagedObjectContext:");
}

id objc_msgSend_instanceForCKNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instanceForCKNotification:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsSet:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateSalt(void *a1, const char *a2, ...)
{
  return _[a1 invalidateSalt];
}

id objc_msgSend_iq_clearCachesForAssetIDs_notify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iq_clearCachesForAssetIDs:notify:");
}

id objc_msgSend_iq_setupUbiquityObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iq_setupUbiquityObservers");
}

id objc_msgSend_iq_teardownUbiquityObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iq_teardownUbiquityObservers");
}

id objc_msgSend_iq_urlFromAssetID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iq_urlFromAssetID");
}

id objc_msgSend_isAudiobook(void *a1, const char *a2, ...)
{
  return _[a1 isAudiobook];
}

id objc_msgSend_isBook(void *a1, const char *a2, ...)
{
  return _[a1 isBook];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isCloudKitSyncOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 isCloudKitSyncOptedIn];
}

id objc_msgSend_isDeleted(void *a1, const char *a2, ...)
{
  return _[a1 isDeleted];
}

id objc_msgSend_isDownloading(void *a1, const char *a2, ...)
{
  return _[a1 isDownloading];
}

id objc_msgSend_isEmptyState(void *a1, const char *a2, ...)
{
  return _[a1 isEmptyState];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEngagementTimeSliceDataEmpty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEngagementTimeSliceDataEmpty:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualExceptForDate_ignoringEmptySalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualExceptForDate:ignoringEmptySalt:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDate:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToStep:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExplicit(void *a1, const char *a2, ...)
{
  return _[a1 isExplicit];
}

id objc_msgSend_isExplicitContentAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isExplicitContentAllowed];
}

id objc_msgSend_isExplicitItem(void *a1, const char *a2, ...)
{
  return _[a1 isExplicitItem];
}

id objc_msgSend_isExplicitMaterialAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isExplicitMaterialAllowed];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _[a1 isFinished];
}

id objc_msgSend_isGlobalICloudDriveSyncOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 isGlobalICloudDriveSyncOptedIn];
}

id objc_msgSend_isICloudDriveEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isICloudDriveEnabled];
}

id objc_msgSend_isICloudDriveSyncOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 isICloudDriveSyncOptedIn];
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isLoaded];
}

id objc_msgSend_isLocal(void *a1, const char *a2, ...)
{
  return _[a1 isLocal];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isNotLocal(void *a1, const char *a2, ...)
{
  return _[a1 isNotLocal];
}

id objc_msgSend_isOffline(void *a1, const char *a2, ...)
{
  return _[a1 isOffline];
}

id objc_msgSend_isPreflightFeatureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPreflightFeatureEnabled];
}

id objc_msgSend_isPrimaryAccountManagedAppleID(void *a1, const char *a2, ...)
{
  return _[a1 isPrimaryAccountManagedAppleID];
}

id objc_msgSend_isReadOnly(void *a1, const char *a2, ...)
{
  return _[a1 isReadOnly];
}

id objc_msgSend_isReadingNowEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isReadingNowEnabled];
}

id objc_msgSend_isSaltRefreshInProgress(void *a1, const char *a2, ...)
{
  return _[a1 isSaltRefreshInProgress];
}

id objc_msgSend_isSignedIntoICloud(void *a1, const char *a2, ...)
{
  return _[a1 isSignedIntoICloud];
}

id objc_msgSend_isStreakDay(void *a1, const char *a2, ...)
{
  return _[a1 isStreakDay];
}

id objc_msgSend_isTrackedAsRecent(void *a1, const char *a2, ...)
{
  return _[a1 isTrackedAsRecent];
}

id objc_msgSend_isUnitTesting(void *a1, const char *a2, ...)
{
  return _[a1 isUnitTesting];
}

id objc_msgSend_isUploaded(void *a1, const char *a2, ...)
{
  return _[a1 isUploaded];
}

id objc_msgSend_isUploading(void *a1, const char *a2, ...)
{
  return _[a1 isUploading];
}

id objc_msgSend_isUserSignedInToiCloud(void *a1, const char *a2, ...)
{
  return _[a1 isUserSignedInToiCloud];
}

id objc_msgSend_isWantToReadEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isWantToReadEnabled];
}

id objc_msgSend_itemIDs(void *a1, const char *a2, ...)
{
  return _[a1 itemIDs];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_ivarQueue(void *a1, const char *a2, ...)
{
  return _[a1 ivarQueue];
}

id objc_msgSend_jaliscoClient(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoClient];
}

id objc_msgSend_jaliscoDAAPService(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoDAAPService];
}

id objc_msgSend_jaliscoUpdateSuccessful(void *a1, const char *a2, ...)
{
  return _[a1 jaliscoUpdateSuccessful];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_laq_scheduleTransactionLifetime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laq_scheduleTransactionLifetime");
}

id objc_msgSend_lastArchivedUbiquityIdentityToken(void *a1, const char *a2, ...)
{
  return _[a1 lastArchivedUbiquityIdentityToken];
}

id objc_msgSend_lastConnectionDate(void *a1, const char *a2, ...)
{
  return _[a1 lastConnectionDate];
}

id objc_msgSend_lastEngagedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastEngagedDate];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastOpenDate(void *a1, const char *a2, ...)
{
  return _[a1 lastOpenDate];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastPlayedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastPlayedDate];
}

id objc_msgSend_lastSource(void *a1, const char *a2, ...)
{
  return _[a1 lastSource];
}

id objc_msgSend_lastState(void *a1, const char *a2, ...)
{
  return _[a1 lastState];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_libraryAssetType(void *a1, const char *a2, ...)
{
  return _[a1 libraryAssetType];
}

id objc_msgSend_libraryContentAssetType(void *a1, const char *a2, ...)
{
  return _[a1 libraryContentAssetType];
}

id objc_msgSend_lifecycleAccessQueue(void *a1, const char *a2, ...)
{
  return _[a1 lifecycleAccessQueue];
}

id objc_msgSend_listBackupWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listBackupWithCompletionHandler:");
}

id objc_msgSend_listUpdater_updateDidCompleteWithError_wasCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listUpdater:updateDidCompleteWithError:wasCancelled:");
}

id objc_msgSend_listener(void *a1, const char *a2, ...)
{
  return _[a1 listener];
}

id objc_msgSend_listenersReadyQueue(void *a1, const char *a2, ...)
{
  return _[a1 listenersReadyQueue];
}

id objc_msgSend_load(void *a1, const char *a2, ...)
{
  return _[a1 load];
}

id objc_msgSend_load_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "load:");
}

id objc_msgSend_loaded(void *a1, const char *a2, ...)
{
  return _[a1 loaded];
}

id objc_msgSend_localIdentifierFromRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localIdentifierFromRecord:");
}

id objc_msgSend_localRecordID(void *a1, const char *a2, ...)
{
  return _[a1 localRecordID];
}

id objc_msgSend_localSaltVersionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localSaltVersionIdentifier];
}

id objc_msgSend_localVersion(void *a1, const char *a2, ...)
{
  return _[a1 localVersion];
}

id objc_msgSend_localWiFiStatusForFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localWiFiStatusForFlags:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _[a1 localizedFailureReason];
}

id objc_msgSend_localizedRecoveryOptions(void *a1, const char *a2, ...)
{
  return _[a1 localizedRecoveryOptions];
}

id objc_msgSend_localizedRecoverySuggestion(void *a1, const char *a2, ...)
{
  return _[a1 localizedRecoverySuggestion];
}

id objc_msgSend_logRecursively(void *a1, const char *a2, ...)
{
  return _[a1 logRecursively];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longestStreak(void *a1, const char *a2, ...)
{
  return _[a1 longestStreak];
}

id objc_msgSend_lrq_setupBeforeListenersWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lrq_setupBeforeListenersWithCompletion:");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 mainRunLoop];
}

id objc_msgSend_makeOSStateHandler(void *a1, const char *a2, ...)
{
  return _[a1 makeOSStateHandler];
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _[a1 managedObjectContext];
}

id objc_msgSend_managers(void *a1, const char *a2, ...)
{
  return _[a1 managers];
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_mergeMovedReadingHistoryDataWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeMovedReadingHistoryDataWithCompletionHandler:");
}

id objc_msgSend_mergedTimeSliceDataLocal_remote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergedTimeSliceDataLocal:remote:");
}

id objc_msgSend_metadataQueryQueue(void *a1, const char *a2, ...)
{
  return _[a1 metadataQueryQueue];
}

id objc_msgSend_methodForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodForSelector:");
}

id objc_msgSend_minUpdateInterval(void *a1, const char *a2, ...)
{
  return _[a1 minUpdateInterval];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_moc(void *a1, const char *a2, ...)
{
  return _[a1 moc];
}

id objc_msgSend_modelLongestStreak(void *a1, const char *a2, ...)
{
  return _[a1 modelLongestStreak];
}

id objc_msgSend_modelReadingDay(void *a1, const char *a2, ...)
{
  return _[a1 modelReadingDay];
}

id objc_msgSend_modificationDate(void *a1, const char *a2, ...)
{
  return _[a1 modificationDate];
}

id objc_msgSend_monitor(void *a1, const char *a2, ...)
{
  return _[a1 monitor];
}

id objc_msgSend_monitorServiceNotificationsWithConnection_changeToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorServiceNotificationsWithConnection:changeToken:completion:");
}

id objc_msgSend_monitorsServiceNotifications(void *a1, const char *a2, ...)
{
  return _[a1 monitorsServiceNotifications];
}

id objc_msgSend_mq_batchOfItemsDidBecomeAvailable_block_notify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_batchOfItemsDidBecomeAvailable:block:notify:");
}

id objc_msgSend_mq_batchOfItemsDidBecomeUnAvailable_block_notify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_batchOfItemsDidBecomeUnAvailable:block:notify:");
}

id objc_msgSend_mq_batchOfItemsDidChange_block_notify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_batchOfItemsDidChange:block:notify:");
}

id objc_msgSend_mq_cloudSyncVersions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_cloudSyncVersions");
}

id objc_msgSend_mq_incrementCloudVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_incrementCloudVersion");
}

id objc_msgSend_mq_itemsDidBecomeAvailable_block_notify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_itemsDidBecomeAvailable:block:notify:");
}

id objc_msgSend_mq_itemsDidBecomeUnavailable_block_notify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_itemsDidBecomeUnavailable:block:notify:");
}

id objc_msgSend_mq_itemsDidChange_block_notify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_itemsDidChange:block:notify:");
}

id objc_msgSend_mq_sanitizeError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_sanitizeError:");
}

id objc_msgSend_mq_signalTransactions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_signalTransactions");
}

id objc_msgSend_mutableClass(void *a1, const char *a2, ...)
{
  return _[a1 mutableClass];
}

id objc_msgSend_mutableCloudDataWithPredicate_sortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCloudDataWithPredicate:sortDescriptors:");
}

id objc_msgSend_mutableCloudDataWithPredicate_sortDescriptors_synchronous_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCloudDataWithPredicate:sortDescriptors:synchronous:completion:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_needsReadingNowAssetTypePopulation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsReadingNowAssetTypePopulation:");
}

id objc_msgSend_networkStatusForFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkStatusForFlags:");
}

id objc_msgSend_noSyncURL(void *a1, const char *a2, ...)
{
  return _[a1 noSyncURL];
}

id objc_msgSend_notFinished(void *a1, const char *a2, ...)
{
  return _[a1 notFinished];
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationConnection(void *a1, const char *a2, ...)
{
  return _[a1 notificationConnection];
}

id objc_msgSend_notificationFromRemoteNotificationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationFromRemoteNotificationDictionary:");
}

id objc_msgSend_notificationInfos(void *a1, const char *a2, ...)
{
  return _[a1 notificationInfos];
}

id objc_msgSend_notificationInfosByName(void *a1, const char *a2, ...)
{
  return _[a1 notificationInfosByName];
}

id objc_msgSend_notificationListener(void *a1, const char *a2, ...)
{
  return _[a1 notificationListener];
}

id objc_msgSend_notificationName(void *a1, const char *a2, ...)
{
  return _[a1 notificationName];
}

id objc_msgSend_notificationStore(void *a1, const char *a2, ...)
{
  return _[a1 notificationStore];
}

id objc_msgSend_notifyQueue(void *a1, const char *a2, ...)
{
  return _[a1 notifyQueue];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_nullPrivacyDelegate(void *a1, const char *a2, ...)
{
  return _[a1 nullPrivacyDelegate];
}

id objc_msgSend_numberFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberFromString:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithShort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithShort:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectFromGroupPreferencesForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectFromGroupPreferencesForKey:");
}

id objc_msgSend_objectModel(void *a1, const char *a2, ...)
{
  return _[a1 objectModel];
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_observeTCCAccessChangeNotificationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 observeTCCAccessChangeNotificationIfNeeded];
}

id objc_msgSend_observer(void *a1, const char *a2, ...)
{
  return _[a1 observer];
}

id objc_msgSend_observerCallbackQueue(void *a1, const char *a2, ...)
{
  return _[a1 observerCallbackQueue];
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _[a1 observers];
}

id objc_msgSend_operationID(void *a1, const char *a2, ...)
{
  return _[a1 operationID];
}

id objc_msgSend_operationQueue(void *a1, const char *a2, ...)
{
  return _[a1 operationQueue];
}

id objc_msgSend_orderedSet(void *a1, const char *a2, ...)
{
  return _[a1 orderedSet];
}

id objc_msgSend_p_accountReallyChangedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_accountReallyChangedWithCompletion:");
}

id objc_msgSend_p_archiveToData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_archiveToData");
}

id objc_msgSend_p_createDatabaseArchiveDirectoryForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_createDatabaseArchiveDirectoryForConfiguration:");
}

id objc_msgSend_p_createRecordIDSaltWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_createRecordIDSaltWithCompletion:");
}

id objc_msgSend_p_createRecordZones_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_createRecordZones:completionHandler:");
}

id objc_msgSend_p_fetchDatabaseChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_fetchDatabaseChanges:");
}

id objc_msgSend_p_fetchRecordZoneChanges_optionsByRecordZoneID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:");
}

id objc_msgSend_p_fetchRecordZoneChangesForRecordZoneIDs_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_fetchRecordZoneChangesForRecordZoneIDs:completionHandler:");
}

id objc_msgSend_p_fetchZoneChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_fetchZoneChanges:");
}

id objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_flushPendingRequestUpdateAttachmentCompletionBlocks");
}

id objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached_reachable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached:reachable:");
}

id objc_msgSend_p_getAccountInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_getAccountInfo");
}

id objc_msgSend_p_getAccountInfoWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_getAccountInfoWithCompletion:");
}

id objc_msgSend_p_getNecessaryAccountInfoFromContainer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_getNecessaryAccountInfoFromContainer:completion:");
}

id objc_msgSend_p_informObserversOfAttachmentChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_informObserversOfAttachmentChange");
}

id objc_msgSend_p_informObserversOfCompletedFetchOfZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_informObserversOfCompletedFetchOfZone:");
}

id objc_msgSend_p_informObserversOfRecordsChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_informObserversOfRecordsChanged:");
}

id objc_msgSend_p_informObserversOfRecordsChanged_forRecordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_informObserversOfRecordsChanged:forRecordType:");
}

id objc_msgSend_p_informObserversOfSaltVersionIdentifierChanged_forZones_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_informObserversOfSaltVersionIdentifierChanged:forZones:completion:");
}

id objc_msgSend_p_privateDatabaseArchiveURLForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_privateDatabaseArchiveURLForConfiguration:");
}

id objc_msgSend_p_scheduleArchiveWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_scheduleArchiveWithCompletion:");
}

id objc_msgSend_p_subscribeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_subscribeWithCompletion:");
}

id objc_msgSend_p_unarchiveFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_unarchiveFromData:");
}

id objc_msgSend_p_unsubscribeToContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_unsubscribeToContainer:");
}

id objc_msgSend_p_updateAttachment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_updateAttachment");
}

id objc_msgSend_p_updateRetryParametersFromFetchZoneChangesOperationError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_updateRetryParametersFromFetchZoneChangesOperationError:");
}

id objc_msgSend_pageProgressionDirection(void *a1, const char *a2, ...)
{
  return _[a1 pageProgressionDirection];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_paused(void *a1, const char *a2, ...)
{
  return _[a1 paused];
}

id objc_msgSend_pendingGetAccountInfoCompletionBlocks(void *a1, const char *a2, ...)
{
  return _[a1 pendingGetAccountInfoCompletionBlocks];
}

id objc_msgSend_pendingRequestUpdateAttachmentCompletionBlocks(void *a1, const char *a2, ...)
{
  return _[a1 pendingRequestUpdateAttachmentCompletionBlocks];
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:");
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAndWait:");
}

id objc_msgSend_performFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performFetch:");
}

id objc_msgSend_performWorkWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWorkWithCompletion:");
}

id objc_msgSend_persistentStoreCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 persistentStoreCoordinator];
}

id objc_msgSend_persistentStores(void *a1, const char *a2, ...)
{
  return _[a1 persistentStores];
}

id objc_msgSend_pinnedAudiobooks(void *a1, const char *a2, ...)
{
  return _[a1 pinnedAudiobooks];
}

id objc_msgSend_playbackDuration(void *a1, const char *a2, ...)
{
  return _[a1 playbackDuration];
}

id objc_msgSend_plistContents(void *a1, const char *a2, ...)
{
  return _[a1 plistContents];
}

id objc_msgSend_plistURL(void *a1, const char *a2, ...)
{
  return _[a1 plistURL];
}

id objc_msgSend_pointerAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointerAtIndex:");
}

id objc_msgSend_populateInfosWithStoreData_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateInfosWithStoreData:completionHandler:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_predicateToExcludeLibraryAssetsWithExplicitContent(void *a1, const char *a2, ...)
{
  return _[a1 predicateToExcludeLibraryAssetsWithExplicitContent];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_predicateWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithValue:");
}

id objc_msgSend_predicateWithValue_forProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithValue:forProperty:");
}

id objc_msgSend_preflightStartup(void *a1, const char *a2, ...)
{
  return _[a1 preflightStartup];
}

id objc_msgSend_priceTracker(void *a1, const char *a2, ...)
{
  return _[a1 priceTracker];
}

id objc_msgSend_privacyDelegate(void *a1, const char *a2, ...)
{
  return _[a1 privacyDelegate];
}

id objc_msgSend_privateCloudDatabase(void *a1, const char *a2, ...)
{
  return _[a1 privateCloudDatabase];
}

id objc_msgSend_privateCloudDatabaseController(void *a1, const char *a2, ...)
{
  return _[a1 privateCloudDatabaseController];
}

id objc_msgSend_privateDatabaseInfo(void *a1, const char *a2, ...)
{
  return _[a1 privateDatabaseInfo];
}

id objc_msgSend_privateDatabaseSyncEngineInfo(void *a1, const char *a2, ...)
{
  return _[a1 privateDatabaseSyncEngineInfo];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processPendingChanges(void *a1, const char *a2, ...)
{
  return _[a1 processPendingChanges];
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_progressFetchedResultsController(void *a1, const char *a2, ...)
{
  return _[a1 progressFetchedResultsController];
}

id objc_msgSend_progressWithTotalUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressWithTotalUnitCount:");
}

id objc_msgSend_propertyIDKey(void *a1, const char *a2, ...)
{
  return _[a1 propertyIDKey];
}

id objc_msgSend_q_createSubpathDirectories(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "q_createSubpathDirectories");
}

id objc_msgSend_q_enqueueNotificationName_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "q_enqueueNotificationName:withCompletion:");
}

id objc_msgSend_q_fetchNotificationNamesAfterToken_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "q_fetchNotificationNamesAfterToken:withCompletion:");
}

id objc_msgSend_q_save(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "q_save");
}

id objc_msgSend_q_updateNotificationInfoWithName_changeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "q_updateNotificationInfoWithName:changeToken:");
}

id objc_msgSend_query(void *a1, const char *a2, ...)
{
  return _[a1 query];
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 queueIdentifier];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rawHistoryToken(void *a1, const char *a2, ...)
{
  return _[a1 rawHistoryToken];
}

id objc_msgSend_reachabilityForInternetConnection(void *a1, const char *a2, ...)
{
  return _[a1 reachabilityForInternetConnection];
}

id objc_msgSend_reachabilityWithAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachabilityWithAddress:");
}

id objc_msgSend_readingGoalsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 readingGoalsEnabled];
}

id objc_msgSend_readingGoalsService(void *a1, const char *a2, ...)
{
  return _[a1 readingGoalsService];
}

id objc_msgSend_readingHistory(void *a1, const char *a2, ...)
{
  return _[a1 readingHistory];
}

id objc_msgSend_readingHistoryCommandLineService(void *a1, const char *a2, ...)
{
  return _[a1 readingHistoryCommandLineService];
}

id objc_msgSend_readingHistoryFileURL(void *a1, const char *a2, ...)
{
  return _[a1 readingHistoryFileURL];
}

id objc_msgSend_readingHistoryService(void *a1, const char *a2, ...)
{
  return _[a1 readingHistoryService];
}

id objc_msgSend_readingHistoryStateInfoWithRangeStart_rangeEnd_currentTime_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingHistoryStateInfoWithRangeStart:rangeEnd:currentTime:completionHandler:");
}

id objc_msgSend_readingNowAudiobooks(void *a1, const char *a2, ...)
{
  return _[a1 readingNowAudiobooks];
}

id objc_msgSend_readingNowDetail(void *a1, const char *a2, ...)
{
  return _[a1 readingNowDetail];
}

id objc_msgSend_readingNowDetailDataSource(void *a1, const char *a2, ...)
{
  return _[a1 readingNowDetailDataSource];
}

id objc_msgSend_readingNowDetailManager(void *a1, const char *a2, ...)
{
  return _[a1 readingNowDetailManager];
}

id objc_msgSend_readingNowDetailManagerInstance(void *a1, const char *a2, ...)
{
  return _[a1 readingNowDetailManagerInstance];
}

id objc_msgSend_readingNowDetailsForAssetIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingNowDetailsForAssetIDs:completion:");
}

id objc_msgSend_readingPositionAbsolutePhysicalLocation(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionAbsolutePhysicalLocation];
}

id objc_msgSend_readingPositionAnnotationVersion(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionAnnotationVersion];
}

id objc_msgSend_readingPositionAssetVersion(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionAssetVersion];
}

id objc_msgSend_readingPositionCFIString(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionCFIString];
}

id objc_msgSend_readingPositionLocationRangeEnd(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionLocationRangeEnd];
}

id objc_msgSend_readingPositionLocationRangeStart(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionLocationRangeStart];
}

id objc_msgSend_readingPositionLocationUpdateDate(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionLocationUpdateDate];
}

id objc_msgSend_readingPositionStorageUUID(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionStorageUUID];
}

id objc_msgSend_readingPositionUserData(void *a1, const char *a2, ...)
{
  return _[a1 readingPositionUserData];
}

id objc_msgSend_readingProgress(void *a1, const char *a2, ...)
{
  return _[a1 readingProgress];
}

id objc_msgSend_readingProgressHighWaterMark(void *a1, const char *a2, ...)
{
  return _[a1 readingProgressHighWaterMark];
}

id objc_msgSend_readingTime(void *a1, const char *a2, ...)
{
  return _[a1 readingTime];
}

id objc_msgSend_recordChangeTag(void *a1, const char *a2, ...)
{
  return _[a1 recordChangeTag];
}

id objc_msgSend_recordFromCloudData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordFromCloudData:");
}

id objc_msgSend_recordID(void *a1, const char *a2, ...)
{
  return _[a1 recordID];
}

id objc_msgSend_recordIDSalt(void *a1, const char *a2, ...)
{
  return _[a1 recordIDSalt];
}

id objc_msgSend_recordName(void *a1, const char *a2, ...)
{
  return _[a1 recordName];
}

id objc_msgSend_recordNameFromRecordType_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordNameFromRecordType:identifier:");
}

id objc_msgSend_recordType(void *a1, const char *a2, ...)
{
  return _[a1 recordType];
}

id objc_msgSend_recordZone(void *a1, const char *a2, ...)
{
  return _[a1 recordZone];
}

id objc_msgSend_recordZones(void *a1, const char *a2, ...)
{
  return _[a1 recordZones];
}

id objc_msgSend_reestablishSalt(void *a1, const char *a2, ...)
{
  return _[a1 reestablishSalt];
}

id objc_msgSend_reestablishSaltIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 reestablishSaltIfNeeded];
}

id objc_msgSend_refreshObject_mergeChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshObject:mergeChanges:");
}

id objc_msgSend_refreshSaltIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshSaltIfNeeded:");
}

id objc_msgSend_registerForSubscriptionWithID_inDatabase_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForSubscriptionWithID:inDatabase:handler:");
}

id objc_msgSend_registerServerChangeTokenStore_forZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerServerChangeTokenStore:forZoneID:");
}

id objc_msgSend_reloadTimelineWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadTimelineWithReason:");
}

id objc_msgSend_reloadWidgetTimelines(void *a1, const char *a2, ...)
{
  return _[a1 reloadWidgetTimelines];
}

id objc_msgSend_reloadWidgetTimelinesWithShouldDonateRelevance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadWidgetTimelinesWithShouldDonateRelevance:");
}

id objc_msgSend_remoteModelLongestStreak(void *a1, const char *a2, ...)
{
  return _[a1 remoteModelLongestStreak];
}

id objc_msgSend_remoteModelReadingDay(void *a1, const char *a2, ...)
{
  return _[a1 remoteModelReadingDay];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectProxy];
}

id objc_msgSend_remove_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remove:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAssetDetailForSaltedHashedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAssetDetailForSaltedHashedRecordIDs:completion:");
}

id objc_msgSend_removeAssetReviewsForSaltedHashedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAssetReviewsForSaltedHashedRecordIDs:completion:");
}

id objc_msgSend_removeBookWidgetInfosForAssetIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeBookWidgetInfosForAssetIDs:completion:");
}

id objc_msgSend_removeClient_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClient:reason:");
}

id objc_msgSend_removeCloudDataForPredicate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCloudDataForPredicate:completion:");
}

id objc_msgSend_removeCollectionDetailForSaltedHashedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCollectionDetailForSaltedHashedRecordIDs:completion:");
}

id objc_msgSend_removeCollectionMemberForCollectionSaltedHashedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCollectionMemberForCollectionSaltedHashedRecordIDs:completion:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeObserver_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:recordType:");
}

id objc_msgSend_removePersistentStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePersistentStore:error:");
}

id objc_msgSend_removePointerAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePointerAtIndex:");
}

id objc_msgSend_removeReadingNowDetailForSaltedHashedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeReadingNowDetailForSaltedHashedRecordIDs:completion:");
}

id objc_msgSend_removeStoreItemWithSaltedHashedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeStoreItemWithSaltedHashedRecordIDs:completion:");
}

id objc_msgSend_removeUserDataForSaltedHashedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeUserDataForSaltedHashedRecordIDs:completion:");
}

id objc_msgSend_replacePersistentStoreAtURL_destinationOptions_withPersistentStoreFromURL_sourceOptions_storeType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:");
}

id objc_msgSend_representativeDAAPMediaItemsWithAssetId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representativeDAAPMediaItemsWithAssetId:");
}

id objc_msgSend_requestUpdateAttachmentWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestUpdateAttachmentWithCompletion:");
}

id objc_msgSend_requiresDeviceToDeviceEncryption(void *a1, const char *a2, ...)
{
  return _[a1 requiresDeviceToDeviceEncryption];
}

id objc_msgSend_requiresPreflightForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresPreflightForApplication:");
}

id objc_msgSend_resetChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetChangeToken:");
}

id objc_msgSend_resetPurchasedTokenForStoreIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetPurchasedTokenForStoreIDs:completion:");
}

id objc_msgSend_resetStaleJaliscoDatabaseWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetStaleJaliscoDatabaseWithCompletion:");
}

id objc_msgSend_resetSystemTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 resetSystemTimeZone];
}

id objc_msgSend_resolveConflictsForRecords_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveConflictsForRecords:completion:");
}

id objc_msgSend_resolveConflictsFromRecord_withResolvers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveConflictsFromRecord:withResolvers:");
}

id objc_msgSend_resolvedAssetDetailForAssetID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedAssetDetailForAssetID:completion:");
}

id objc_msgSend_resolvedCloudDataForCloudData_predicate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedCloudDataForCloudData:predicate:completion:");
}

id objc_msgSend_resolvedUserDataValueForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedUserDataValueForKey:completion:");
}

id objc_msgSend_responseQueue(void *a1, const char *a2, ...)
{
  return _[a1 responseQueue];
}

id objc_msgSend_restartQuery(void *a1, const char *a2, ...)
{
  return _[a1 restartQuery];
}

id objc_msgSend_restoreWithName_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreWithName:completionHandler:");
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _[a1 result];
}

id objc_msgSend_resultWithTimeout_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultWithTimeout:error:");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_reviewBody(void *a1, const char *a2, ...)
{
  return _[a1 reviewBody];
}

id objc_msgSend_reviewTitle(void *a1, const char *a2, ...)
{
  return _[a1 reviewTitle];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_saltManager_updatedSaltWithVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saltManager:updatedSaltWithVersion:");
}

id objc_msgSend_saltVersionIdentifierManager(void *a1, const char *a2, ...)
{
  return _[a1 saltVersionIdentifierManager];
}

id objc_msgSend_saltedAndHashedIDFromLocalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saltedAndHashedIDFromLocalID:");
}

id objc_msgSend_saltedHashedID(void *a1, const char *a2, ...)
{
  return _[a1 saltedHashedID];
}

id objc_msgSend_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save:");
}

id objc_msgSend_save_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save:error:");
}

id objc_msgSend_saveRecord_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveRecord:completionHandler:");
}

id objc_msgSend_schedulerConfigIdealInterval(void *a1, const char *a2, ...)
{
  return _[a1 schedulerConfigIdealInterval];
}

id objc_msgSend_schedulerConfigMinInterval(void *a1, const char *a2, ...)
{
  return _[a1 schedulerConfigMinInterval];
}

id objc_msgSend_secureDataSource(void *a1, const char *a2, ...)
{
  return _[a1 secureDataSource];
}

id objc_msgSend_secureManager(void *a1, const char *a2, ...)
{
  return _[a1 secureManager];
}

id objc_msgSend_secureSharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 secureSharedInstance];
}

id objc_msgSend_serverChangeToken(void *a1, const char *a2, ...)
{
  return _[a1 serverChangeToken];
}

id objc_msgSend_serverChangeTokenWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverChangeTokenWithCompletion:");
}

id objc_msgSend_serverFetchPostponed(void *a1, const char *a2, ...)
{
  return _[a1 serverFetchPostponed];
}

id objc_msgSend_serverPushPostponed(void *a1, const char *a2, ...)
{
  return _[a1 serverPushPostponed];
}

id objc_msgSend_serviceConnectionClient(void *a1, const char *a2, ...)
{
  return _[a1 serviceConnectionClient];
}

id objc_msgSend_serviceDelegate(void *a1, const char *a2, ...)
{
  return _[a1 serviceDelegate];
}

id objc_msgSend_serviceDelegate_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDelegate:didAcceptConnection:");
}

id objc_msgSend_serviceListener(void *a1, const char *a2, ...)
{
  return _[a1 serviceListener];
}

id objc_msgSend_serviceMode(void *a1, const char *a2, ...)
{
  return _[a1 serviceMode];
}

id objc_msgSend_serviceStatusInfo(void *a1, const char *a2, ...)
{
  return _[a1 serviceStatusInfo];
}

id objc_msgSend_serviceZones(void *a1, const char *a2, ...)
{
  return _[a1 serviceZones];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountStatus:");
}

id objc_msgSend_setAnnotationVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationVersion:");
}

id objc_msgSend_setAppBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppBundleIdentifier:");
}

id objc_msgSend_setAppVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppVersion:");
}

id objc_msgSend_setAppZones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppZones:");
}

id objc_msgSend_setArchivedCloudDriveOptedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArchivedCloudDriveOptedIn:");
}

id objc_msgSend_setAssetDetail_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetDetail:completion:");
}

id objc_msgSend_setAssetDetails_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetDetails:completion:");
}

id objc_msgSend_setAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetID:");
}

id objc_msgSend_setAssetReview_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetReview:completion:");
}

id objc_msgSend_setAssetReviewID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetReviewID:");
}

id objc_msgSend_setAssetReviews_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetReviews:completion:");
}

id objc_msgSend_setAssetVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetVersion:");
}

id objc_msgSend_setAttached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttached:");
}

id objc_msgSend_setAttachedToContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachedToContainer:");
}

id objc_msgSend_setAttachments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachments:");
}

id objc_msgSend_setAutomaticallyMergesChangesFromParent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticallyMergesChangesFromParent:");
}

id objc_msgSend_setAutomaticallyRetryNetworkFailures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticallyRetryNetworkFailures:");
}

id objc_msgSend_setBackOffInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackOffInterval:");
}

id objc_msgSend_setBitrate_forItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBitrate:forItem:");
}

id objc_msgSend_setBookWidgetDataUpdater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookWidgetDataUpdater:");
}

id objc_msgSend_setBookWidgetInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookWidgetInfo:completion:");
}

id objc_msgSend_setBookWidgetInfoOnly_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookWidgetInfoOnly:completion:");
}

id objc_msgSend_setBookmarkTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarkTime:");
}

id objc_msgSend_setBooksFinishedGoal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBooksFinishedGoal:");
}

id objc_msgSend_setByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromArray:");
}

id objc_msgSend_setCancellationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancellationHandler:");
}

id objc_msgSend_setChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeToken:");
}

id objc_msgSend_setChangeTokenUpdatedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeTokenUpdatedBlock:");
}

id objc_msgSend_setChangedRecordZoneIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangedRecordZoneIDs:");
}

id objc_msgSend_setChapterTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChapterTitle:");
}

id objc_msgSend_setCkSystemFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkSystemFields:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClientCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientCount:");
}

id objc_msgSend_setCloudAssetType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudAssetType:");
}

id objc_msgSend_setCloudData_predicate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudData:predicate:completion:");
}

id objc_msgSend_setCloudData_predicate_propertyIDKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudData:predicate:propertyIDKey:completion:");
}

id objc_msgSend_setCloudData_predicate_propertyIDKey_mergers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudData:predicate:propertyIDKey:mergers:completion:");
}

id objc_msgSend_setCloudKitZone_enabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudKitZone:enabled:");
}

id objc_msgSend_setCloudVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudVersion:");
}

id objc_msgSend_setCoalescingDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoalescingDelay:");
}

id objc_msgSend_setCollectionDetail_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionDetail:completion:");
}

id objc_msgSend_setCollectionDetails_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionDetails:completion:");
}

id objc_msgSend_setCollectionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionID:");
}

id objc_msgSend_setCollectionMember_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionMember:completion:");
}

id objc_msgSend_setCollectionMemberID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionMemberID:");
}

id objc_msgSend_setCollectionMembers_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionMembers:completion:");
}

id objc_msgSend_setCompletedUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedUnitCount:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfiguration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:completion:");
}

id objc_msgSend_setContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainer:");
}

id objc_msgSend_setContainerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerIdentifier:");
}

id objc_msgSend_setContainerURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerURL:");
}

id objc_msgSend_setContentChangedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentChangedDate:");
}

id objc_msgSend_setContentCreationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCreationDate:");
}

id objc_msgSend_setContentFileSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentFileSize:");
}

id objc_msgSend_setCoverURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverURL:");
}

id objc_msgSend_setCreatorIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCreatorIdentifier:");
}

id objc_msgSend_setCurrentChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentChangeToken:");
}

id objc_msgSend_setCurrentObserverIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentObserverIdentifier:");
}

id objc_msgSend_setCurrentProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentProgress:");
}

id objc_msgSend_setCurrentSalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSalt:");
}

id objc_msgSend_setCurrentSaltVersionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSaltVersionIdentifier:");
}

id objc_msgSend_setCurrentStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentStatus:");
}

id objc_msgSend_setCurrentStreak_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentStreak:");
}

id objc_msgSend_setCurrentToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentToken:");
}

id objc_msgSend_setCurrentUserIDName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentUserIDName:");
}

id objc_msgSend_setCurrentWidgetDatas_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentWidgetDatas:");
}

id objc_msgSend_setCurrentWidgetDatas_currentWidgetDatasByAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentWidgetDatas:currentWidgetDatasByAssetID:");
}

id objc_msgSend_setData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setData:");
}

id objc_msgSend_setDataFileDataIsNil_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataFileDataIsNil:");
}

id objc_msgSend_setDataMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataMonitor:");
}

id objc_msgSend_setDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataType:");
}

id objc_msgSend_setDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatabase:");
}

id objc_msgSend_setDatabase_config_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatabase:config:");
}

id objc_msgSend_setDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDate:");
}

id objc_msgSend_setDateFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFinished:");
}

id objc_msgSend_setDatePlaybackTimeUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatePlaybackTimeUpdated:");
}

id objc_msgSend_setDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDay:");
}

id objc_msgSend_setDbArchiveExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDbArchiveExtension:");
}

id objc_msgSend_setDbArchiveFilename_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDbArchiveFilename:");
}

id objc_msgSend_setDbArchiveFolderName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDbArchiveFolderName:");
}

id objc_msgSend_setDbSubscriptionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDbSubscriptionID:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDeletedFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeletedFlag:");
}

id objc_msgSend_setDifferentBookmarkTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentBookmarkTime:");
}

id objc_msgSend_setDifferentDate_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentDate:forKey:");
}

id objc_msgSend_setDifferentNumber_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentNumber:forKey:");
}

id objc_msgSend_setDifferentObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentObject:forKey:");
}

id objc_msgSend_setDifferentString_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentString:forKey:");
}

id objc_msgSend_setDifferentValue_forKey_klass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentValue:forKey:klass:");
}

id objc_msgSend_setDirtyCloudDataInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirtyCloudDataInfos:");
}

id objc_msgSend_setDiscretionaryNetworkBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscretionaryNetworkBehavior:");
}

id objc_msgSend_setDocumentsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentsURL:");
}

id objc_msgSend_setDownloadingPercent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloadingPercent:");
}

id objc_msgSend_setEditGeneration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditGeneration:");
}

id objc_msgSend_setEnableCloudSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableCloudSync:");
}

id objc_msgSend_setEnableCloudSync_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableCloudSync:completion:");
}

id objc_msgSend_setEnableCloudSync_enableReadingNowSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableCloudSync:enableReadingNowSync:");
}

id objc_msgSend_setEnableCloudSync_serviceMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableCloudSync:serviceMode:");
}

id objc_msgSend_setEnableUbiquityObserving_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableUbiquityObserving:");
}

id objc_msgSend_setEnabledSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabledSync:");
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndDate:");
}

id objc_msgSend_setEngagementData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEngagementData:completion:");
}

id objc_msgSend_setEngagementDatas_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEngagementDatas:completion:");
}

id objc_msgSend_setEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntity:");
}

id objc_msgSend_setEntityInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntityInfos:");
}

id objc_msgSend_setEstablishedSalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstablishedSalt:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setFetchAllChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchAllChanges:");
}

id objc_msgSend_setFetchBatchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchBatchSize:");
}

id objc_msgSend_setFetchDatabaseChangesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchDatabaseChangesCompletionBlock:");
}

id objc_msgSend_setFetchLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchLimit:");
}

id objc_msgSend_setFetchRecordZoneChangesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordZoneChangesCompletionBlock:");
}

id objc_msgSend_setFetchRecordZoneChangesSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordZoneChangesSuccess:");
}

id objc_msgSend_setFetchRecordZonesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordZonesCompletionBlock:");
}

id objc_msgSend_setFetchRecordsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordsCompletionBlock:");
}

id objc_msgSend_setFetchedResultsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchedResultsController:");
}

id objc_msgSend_setFetching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetching:");
}

id objc_msgSend_setFutureProofing11_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFutureProofing11:");
}

id objc_msgSend_setFutureProofing12_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFutureProofing12:");
}

id objc_msgSend_setGettingAccountInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGettingAccountInfo:");
}

id objc_msgSend_setGoal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGoal:");
}

id objc_msgSend_setHasBeenPlayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasBeenPlayed:");
}

id objc_msgSend_setHasSubscription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasSubscription:");
}

id objc_msgSend_setHistoryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHistoryToken:");
}

id objc_msgSend_setHistoryTokenOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHistoryTokenOffset:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentity:");
}

id objc_msgSend_setIgnoreSystemFilterPredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreSystemFilterPredicates:");
}

id objc_msgSend_setIncludesPropertyValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesPropertyValues:");
}

id objc_msgSend_setInitialGatherSentAtleastOnce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialGatherSentAtleastOnce:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setIsDownloading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDownloading:");
}

id objc_msgSend_setIsExplicit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsExplicit:");
}

id objc_msgSend_setIsFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFinished:");
}

id objc_msgSend_setIsLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLocal:");
}

id objc_msgSend_setIsNotLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsNotLocal:");
}

id objc_msgSend_setIsSaltRefreshInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSaltRefreshInProgress:");
}

id objc_msgSend_setIsStreakDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsStreakDay:");
}

id objc_msgSend_setIsUploaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUploaded:");
}

id objc_msgSend_setIsUploading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUploading:");
}

id objc_msgSend_setItemHidden_forStoreID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemHidden:forStoreID:completion:");
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKey:");
}

id objc_msgSend_setLastConnectionDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastConnectionDate:");
}

id objc_msgSend_setLastPlayedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPlayedDate:");
}

id objc_msgSend_setLastSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSource:");
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLength:");
}

id objc_msgSend_setLibraryContentAssetType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLibraryContentAssetType:");
}

id objc_msgSend_setLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoaded:");
}

id objc_msgSend_setLocalSaltVersionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalSaltVersionIdentifier:");
}

id objc_msgSend_setLocalVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalVersion:");
}

id objc_msgSend_setLocationCFIString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationCFIString:");
}

id objc_msgSend_setLongestStreak_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLongestStreak:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMergePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMergePolicy:");
}

id objc_msgSend_setModelLongestStreak_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelLongestStreak:");
}

id objc_msgSend_setModelReadingDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelReadingDay:");
}

id objc_msgSend_setModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModificationDate:");
}

id objc_msgSend_setModifyRecordZonesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifyRecordZonesCompletionBlock:");
}

id objc_msgSend_setModifyRecordsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifyRecordsCompletionBlock:");
}

id objc_msgSend_setModifySubscriptionsCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifySubscriptionsCompletionBlock:");
}

id objc_msgSend_setMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonitor:");
}

id objc_msgSend_setMonitorsServiceNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonitorsServiceNotifications:");
}

id objc_msgSend_setMonth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonth:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNotFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotFinished:");
}

id objc_msgSend_setNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNote:");
}

id objc_msgSend_setNotificationConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationConnection:");
}

id objc_msgSend_setNotificationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationInfo:");
}

id objc_msgSend_setNotificationListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationListener:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObserver:");
}

id objc_msgSend_setOperationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationQueue:");
}

id objc_msgSend_setOutputFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputFormat:");
}

id objc_msgSend_setPageProgressionDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageProgressionDirection:");
}

id objc_msgSend_setParentContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentContext:");
}

id objc_msgSend_setPaused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaused:");
}

id objc_msgSend_setPersistentStoreCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreCoordinator:");
}

id objc_msgSend_setPhysicalPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhysicalPageNumber:");
}

id objc_msgSend_setPlLocationStorageUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlLocationStorageUUID:");
}

id objc_msgSend_setPlUserData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlUserData:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPreviousServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousServerChangeToken:");
}

id objc_msgSend_setPrivacyDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivacyDelegate:");
}

id objc_msgSend_setPrivateDatabaseInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivateDatabaseInfo:");
}

id objc_msgSend_setPrivateDatabaseSyncEngineInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivateDatabaseSyncEngineInfo:");
}

id objc_msgSend_setProcessingCloudData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessingCloudData:");
}

id objc_msgSend_setProgressFetchedResultsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressFetchedResultsController:");
}

id objc_msgSend_setPropertiesToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesToFetch:");
}

id objc_msgSend_setQualityOfService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQualityOfService:");
}

id objc_msgSend_setQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuery:");
}

id objc_msgSend_setQueueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueueIdentifier:");
}

id objc_msgSend_setRawHistoryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRawHistoryToken:");
}

id objc_msgSend_setReadingGoalsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingGoalsEnabled:");
}

id objc_msgSend_setReadingHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingHistory:");
}

id objc_msgSend_setReadingNowAudiobooks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingNowAudiobooks:");
}

id objc_msgSend_setReadingNowDetail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingNowDetail:");
}

id objc_msgSend_setReadingNowDetails_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingNowDetails:completion:");
}

id objc_msgSend_setReadingProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingProgress:");
}

id objc_msgSend_setReadingProgressHighWaterMark_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingProgressHighWaterMark:");
}

id objc_msgSend_setReadingTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingTime:");
}

id objc_msgSend_setRecordChangedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordChangedBlock:");
}

id objc_msgSend_setRecordIDSalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordIDSalt:");
}

id objc_msgSend_setRecordWithIDWasDeletedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordWithIDWasDeletedBlock:");
}

id objc_msgSend_setRecordZoneChangeTokensUpdatedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneChangeTokensUpdatedBlock:");
}

id objc_msgSend_setRecordZoneFetchCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneFetchCompletionBlock:");
}

id objc_msgSend_setRecordZoneWithIDChangedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneWithIDChangedBlock:");
}

id objc_msgSend_setRecordZoneWithIDWasDeletedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneWithIDWasDeletedBlock:");
}

id objc_msgSend_setRecordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock:");
}

id objc_msgSend_setRecordZoneWithIDWasPurgedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordZoneWithIDWasPurgedBlock:");
}

id objc_msgSend_setRelationshipKeyPathsForPrefetching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelationshipKeyPathsForPrefetching:");
}

id objc_msgSend_setRelevanceProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelevanceProviders:");
}

id objc_msgSend_setRelevantShortcuts_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelevantShortcuts:completionHandler:");
}

id objc_msgSend_setRemoteModelLongestStreak_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteModelLongestStreak:");
}

id objc_msgSend_setRemoteModelReadingDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteModelReadingDay:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRepresentativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepresentativeText:");
}

id objc_msgSend_setRequiresDeviceToDeviceEncryption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresDeviceToDeviceEncryption:");
}

id objc_msgSend_setResultType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultType:");
}

id objc_msgSend_setReturnsDistinctResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnsDistinctResults:");
}

id objc_msgSend_setReturnsObjectsAsFaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnsObjectsAsFaults:");
}

id objc_msgSend_setSaltedHashedID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSaltedHashedID:");
}

id objc_msgSend_setSavePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSavePolicy:");
}

id objc_msgSend_setSearchScopes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchScopes:");
}

id objc_msgSend_setSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedText:");
}

id objc_msgSend_setSelectedTextRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedTextRange:");
}

id objc_msgSend_setServerChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerChangeToken:");
}

id objc_msgSend_setServerFetchPostponed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerFetchPostponed:");
}

id objc_msgSend_setServerPushPostponed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerPushPostponed:");
}

id objc_msgSend_setServerSaltVersionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerSaltVersionIdentifier:");
}

id objc_msgSend_setServiceDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceDelegate:");
}

id objc_msgSend_setServiceListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceListener:");
}

id objc_msgSend_setServiceZones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceZones:");
}

id objc_msgSend_setShouldDonateRelevance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDonateRelevance:");
}

id objc_msgSend_setShouldSendContentAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSendContentAvailable:");
}

id objc_msgSend_setSigterm_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSigterm_source:");
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortDescriptors:");
}

id objc_msgSend_setSortOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortOrder:");
}

id objc_msgSend_setSourceApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceApplicationBundleIdentifier:");
}

id objc_msgSend_setStarRating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStarRating:");
}

id objc_msgSend_setStartTimestampString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartTimestampString:");
}

id objc_msgSend_setStateInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateInfo:");
}

id objc_msgSend_setStoreID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreID:");
}

id objc_msgSend_setStreakDayGoal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStreakDayGoal:");
}

id objc_msgSend_setSyncGeneration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncGeneration:");
}

id objc_msgSend_setSyncUserDefaultsStateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncUserDefaultsStateHandler:");
}

id objc_msgSend_setSyncVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncVersion:");
}

id objc_msgSend_setSystemFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemFields:");
}

id objc_msgSend_setTccNotifyToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTccNotifyToken:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setToday_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToday:");
}

id objc_msgSend_setTooBigBatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTooBigBatch:");
}

id objc_msgSend_setTransactionLifetime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransactionLifetime:");
}

id objc_msgSend_setTransactionManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransactionManager:");
}

id objc_msgSend_setUbiquityObservingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUbiquityObservingEnabled:");
}

id objc_msgSend_setUnresolvedConflict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnresolvedConflict:");
}

id objc_msgSend_setUploadingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUploadingError:");
}

id objc_msgSend_setUploadingPercent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUploadingPercent:");
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrl:");
}

id objc_msgSend_setUserData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserData:completion:");
}

id objc_msgSend_setUserDataValue_forKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserDataValue:forKey:completion:");
}

id objc_msgSend_setUserDatum_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserDatum:completion:");
}

id objc_msgSend_setUserRecordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserRecordID:");
}

id objc_msgSend_setUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUuid:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValue_forProperty_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forProperty:withCompletionBlock:");
}

id objc_msgSend_setWantToReadAudiobooks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantToReadAudiobooks:");
}

id objc_msgSend_setWidgetKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWidgetKind:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setYear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setYear:");
}

id objc_msgSend_setupDownloadTaskForFetchingMasterPlaylistAndSelectingStreamFromMasterPlaylistURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupDownloadTaskForFetchingMasterPlaylistAndSelectingStreamFromMasterPlaylistURL:completion:");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedClient];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedProvider(void *a1, const char *a2, ...)
{
  return _[a1 sharedProvider];
}

id objc_msgSend_sharedReachabilityForInternetConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedReachabilityForInternetConnection];
}

id objc_msgSend_sharedService(void *a1, const char *a2, ...)
{
  return _[a1 sharedService];
}

id objc_msgSend_shortValue(void *a1, const char *a2, ...)
{
  return _[a1 shortValue];
}

id objc_msgSend_shouldArchiveData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldArchiveData:");
}

id objc_msgSend_shouldDonateRelevance(void *a1, const char *a2, ...)
{
  return _[a1 shouldDonateRelevance];
}

id objc_msgSend_shouldPerformDatabaseSubscriptionForServiceMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPerformDatabaseSubscriptionForServiceMode:");
}

id objc_msgSend_signal(void *a1, const char *a2, ...)
{
  return _[a1 signal];
}

id objc_msgSend_signalDataChangeTransactionForEntityName_notificationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalDataChangeTransactionForEntityName:notificationName:");
}

id objc_msgSend_signalDataChangedTransaction(void *a1, const char *a2, ...)
{
  return _[a1 signalDataChangedTransaction];
}

id objc_msgSend_signalFetchChangesTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalFetchChangesTransaction:");
}

id objc_msgSend_signalSyncToCK(void *a1, const char *a2, ...)
{
  return _[a1 signalSyncToCK];
}

id objc_msgSend_signalSyncToCKForSyncManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalSyncToCKForSyncManager:");
}

id objc_msgSend_signalSyncToCKTransactionForEntityName_syncManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalSyncToCKTransactionForEntityName:syncManager:");
}

id objc_msgSend_signalSyncToCKTransactionForEntityName_syncManager_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalSyncToCKTransactionForEntityName:syncManager:completion:");
}

id objc_msgSend_signalWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalWithCompletion:");
}

id objc_msgSend_sigterm_source(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sigterm_source");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortMode(void *a1, const char *a2, ...)
{
  return _[a1 sortMode];
}

id objc_msgSend_sortOrder(void *a1, const char *a2, ...)
{
  return _[a1 sortOrder];
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sq_finishedStartingUp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_finishedStartingUp");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_starRating(void *a1, const char *a2, ...)
{
  return _[a1 starRating];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startInternetConnectionReachabilityNotifier(void *a1, const char *a2, ...)
{
  return _[a1 startInternetConnectionReachabilityNotifier];
}

id objc_msgSend_startListeningForNotifications(void *a1, const char *a2, ...)
{
  return _[a1 startListeningForNotifications];
}

id objc_msgSend_startNotifier(void *a1, const char *a2, ...)
{
  return _[a1 startNotifier];
}

id objc_msgSend_startOfDayForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOfDayForDate:");
}

id objc_msgSend_startQuery(void *a1, const char *a2, ...)
{
  return _[a1 startQuery];
}

id objc_msgSend_startSyncToCKWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSyncToCKWithCompletion:");
}

id objc_msgSend_startSyncToCKWithSyncManager_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSyncToCKWithSyncManager:completion:");
}

id objc_msgSend_startTimestampString(void *a1, const char *a2, ...)
{
  return _[a1 startTimestampString];
}

id objc_msgSend_startupQueue(void *a1, const char *a2, ...)
{
  return _[a1 startupQueue];
}

id objc_msgSend_stateForLog(void *a1, const char *a2, ...)
{
  return _[a1 stateForLog];
}

id objc_msgSend_stateInfo(void *a1, const char *a2, ...)
{
  return _[a1 stateInfo];
}

id objc_msgSend_stateInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateInfoWithCompletionHandler:");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_stopNotifier(void *a1, const char *a2, ...)
{
  return _[a1 stopNotifier];
}

id objc_msgSend_stopQuery(void *a1, const char *a2, ...)
{
  return _[a1 stopQuery];
}

id objc_msgSend_storeAssetManager(void *a1, const char *a2, ...)
{
  return _[a1 storeAssetManager];
}

id objc_msgSend_storeAssetManagerInstance(void *a1, const char *a2, ...)
{
  return _[a1 storeAssetManagerInstance];
}

id objc_msgSend_storeID(void *a1, const char *a2, ...)
{
  return _[a1 storeID];
}

id objc_msgSend_storeItemForStoreID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeItemForStoreID:completion:");
}

id objc_msgSend_storeServerChangeToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeServerChangeToken:completion:");
}

id objc_msgSend_streakDayGoal(void *a1, const char *a2, ...)
{
  return _[a1 streakDayGoal];
}

id objc_msgSend_streakDayUserDefaultsKey(void *a1, const char *a2, ...)
{
  return _[a1 streakDayUserDefaultsKey];
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathExtension:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 strongToWeakObjectsMapTable];
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_subscriptionID(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionID];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_supportsDeviceToDeviceEncryption(void *a1, const char *a2, ...)
{
  return _[a1 supportsDeviceToDeviceEncryption];
}

id objc_msgSend_syncCloudData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncCloudData:completion:");
}

id objc_msgSend_syncGeneration(void *a1, const char *a2, ...)
{
  return _[a1 syncGeneration];
}

id objc_msgSend_syncManager(void *a1, const char *a2, ...)
{
  return _[a1 syncManager];
}

id objc_msgSend_syncManager_failedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:failedRecordIDs:completion:");
}

id objc_msgSend_syncManager_fetchedAllRecordsInZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:fetchedAllRecordsInZone:");
}

id objc_msgSend_syncManager_removeCloudDataForIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:removeCloudDataForIDs:completion:");
}

id objc_msgSend_syncManager_resolveConflictsForRecords_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:resolveConflictsForRecords:completion:");
}

id objc_msgSend_syncManager_startSyncToCKWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:startSyncToCKWithCompletion:");
}

id objc_msgSend_syncManager_updateSyncGenerationFromCloudData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager:updateSyncGenerationFromCloudData:completion:");
}

id objc_msgSend_syncQueue(void *a1, const char *a2, ...)
{
  return _[a1 syncQueue];
}

id objc_msgSend_syncVersion(void *a1, const char *a2, ...)
{
  return _[a1 syncVersion];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_systemFields(void *a1, const char *a2, ...)
{
  return _[a1 systemFields];
}

id objc_msgSend_systemTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 systemTimeZone];
}

id objc_msgSend_taste(void *a1, const char *a2, ...)
{
  return _[a1 taste];
}

id objc_msgSend_tasteSyncedToStore(void *a1, const char *a2, ...)
{
  return _[a1 tasteSyncedToStore];
}

id objc_msgSend_tccNotifyToken(void *a1, const char *a2, ...)
{
  return _[a1 tccNotifyToken];
}

id objc_msgSend_tearDownQuery(void *a1, const char *a2, ...)
{
  return _[a1 tearDownQuery];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timelineController(void *a1, const char *a2, ...)
{
  return _[a1 timelineController];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleMultiple(void *a1, const char *a2, ...)
{
  return _[a1 titleMultiple];
}

id objc_msgSend_titleSingleAudiobook(void *a1, const char *a2, ...)
{
  return _[a1 titleSingleAudiobook];
}

id objc_msgSend_titleSingleBook(void *a1, const char *a2, ...)
{
  return _[a1 titleSingleBook];
}

id objc_msgSend_today(void *a1, const char *a2, ...)
{
  return _[a1 today];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_tokenController(void *a1, const char *a2, ...)
{
  return _[a1 tokenController];
}

id objc_msgSend_tokenForCurrentIdentityIfCloudKitEnabled(void *a1, const char *a2, ...)
{
  return _[a1 tokenForCurrentIdentityIfCloudKitEnabled];
}

id objc_msgSend_tokenForCurrentIdentityIfICloudDriveEnabled(void *a1, const char *a2, ...)
{
  return _[a1 tokenForCurrentIdentityIfICloudDriveEnabled];
}

id objc_msgSend_tokenStores(void *a1, const char *a2, ...)
{
  return _[a1 tokenStores];
}

id objc_msgSend_tombstone(void *a1, const char *a2, ...)
{
  return _[a1 tombstone];
}

id objc_msgSend_tooBigBatch(void *a1, const char *a2, ...)
{
  return _[a1 tooBigBatch];
}

id objc_msgSend_totalDuration(void *a1, const char *a2, ...)
{
  return _[a1 totalDuration];
}

id objc_msgSend_trackLiverpool(void *a1, const char *a2, ...)
{
  return _[a1 trackLiverpool];
}

id objc_msgSend_trackedRreadingNowDetailsInDescendingOrderMaximumResultCount_filter_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackedRreadingNowDetailsInDescendingOrderMaximumResultCount:filter:completion:");
}

id objc_msgSend_transactionAccessQueue(void *a1, const char *a2, ...)
{
  return _[a1 transactionAccessQueue];
}

id objc_msgSend_transactionCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionCompleted:");
}

id objc_msgSend_transactionCompletionCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 transactionCompletionCallbacks];
}

id objc_msgSend_transactionDidBeginWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionDidBeginWithName:");
}

id objc_msgSend_transactionLifetime(void *a1, const char *a2, ...)
{
  return _[a1 transactionLifetime];
}

id objc_msgSend_transactionManager(void *a1, const char *a2, ...)
{
  return _[a1 transactionManager];
}

id objc_msgSend_transactionName(void *a1, const char *a2, ...)
{
  return _[a1 transactionName];
}

id objc_msgSend_transactionNameForEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionNameForEntityName:");
}

id objc_msgSend_transactionProvider(void *a1, const char *a2, ...)
{
  return _[a1 transactionProvider];
}

id objc_msgSend_transactionWillEndWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionWillEndWithName:");
}

id objc_msgSend_transactions(void *a1, const char *a2, ...)
{
  return _[a1 transactions];
}

id objc_msgSend_transformedCloudDatasWithPredicate_transformer_limit_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformedCloudDatasWithPredicate:transformer:limit:completion:");
}

id objc_msgSend_ubiquityDocumentsObserver_didLoadWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityDocumentsObserver:didLoadWithItems:");
}

id objc_msgSend_ubiquityDocumentsObserver_itemsDidBecomeAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityDocumentsObserver:itemsDidBecomeAvailable:");
}

id objc_msgSend_ubiquityDocumentsObserver_itemsDidBecomeUnavailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityDocumentsObserver:itemsDidBecomeUnavailable:");
}

id objc_msgSend_ubiquityDocumentsObserver_itemsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityDocumentsObserver:itemsDidChange:");
}

id objc_msgSend_ubiquityIdentityDidChange(void *a1, const char *a2, ...)
{
  return _[a1 ubiquityIdentityDidChange];
}

id objc_msgSend_ubiquityIdentityToken(void *a1, const char *a2, ...)
{
  return _[a1 ubiquityIdentityToken];
}

id objc_msgSend_ubiquityManager(void *a1, const char *a2, ...)
{
  return _[a1 ubiquityManager];
}

id objc_msgSend_ubiquityManager_addedItemWithAssetID_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityManager:addedItemWithAssetID:metadata:");
}

id objc_msgSend_ubiquityManager_removedItemWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityManager:removedItemWithAssetID:");
}

id objc_msgSend_ubiquityManager_updatedItemWithAssetID_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityManager:updatedItemWithAssetID:metadata:");
}

id objc_msgSend_ubiquityManagerDidFinishInitialGather_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityManagerDidFinishInitialGather:");
}

id objc_msgSend_ubiquityMetadataForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityMetadataForAssetID:");
}

id objc_msgSend_ubiquityObservingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 ubiquityObservingEnabled];
}

id objc_msgSend_ubiquityStatusChangedToAvailableWithNewIdentity_oldIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityStatusChangedToAvailableWithNewIdentity:oldIdentity:");
}

id objc_msgSend_ubiquityStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 ubiquityStatusMonitor];
}

id objc_msgSend_unarchivedArrayOfObjectsOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedArrayOfObjectsOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unbatchedObjectsWithPredicate_forEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unbatchedObjectsWithPredicate:forEntity:");
}

id objc_msgSend_unpinAudiobook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unpinAudiobook:");
}

id objc_msgSend_unregisterServerChangeTokenStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterServerChangeTokenStore:");
}

id objc_msgSend_unresolvedConflict(void *a1, const char *a2, ...)
{
  return _[a1 unresolvedConflict];
}

id objc_msgSend_updateBitrateForItemWithAdamID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBitrateForItemWithAdamID:completion:");
}

id objc_msgSend_updateFamilyPolitely_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFamilyPolitely:reason:completion:");
}

id objc_msgSend_updateFamilyPolitely_reason_completionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFamilyPolitely:reason:completionWithError:");
}

id objc_msgSend_updatePolitely_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePolitely:reason:completion:");
}

id objc_msgSend_updatePolitely_reason_completionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePolitely:reason:completionWithError:");
}

id objc_msgSend_updatePolitelyAfterSignIn_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePolitelyAfterSignIn:reason:completion:");
}

id objc_msgSend_updatePolitelyAfterSignOut_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePolitelyAfterSignOut:reason:completion:");
}

id objc_msgSend_updateReadingNowWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateReadingNowWithCompletion:");
}

id objc_msgSend_updateSaltVersionIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSaltVersionIdentifier:completion:");
}

id objc_msgSend_updateScheduleSteps(void *a1, const char *a2, ...)
{
  return _[a1 updateScheduleSteps];
}

id objc_msgSend_updateSyncGenerationFromCloudData_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSyncGenerationFromCloudData:completion:");
}

id objc_msgSend_updateSyncGenerationFromCloudData_predicate_propertyIDKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:");
}

id objc_msgSend_updateTrackedPricesIgnoringScheduleForNewItemsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTrackedPricesIgnoringScheduleForNewItemsWithCompletionHandler:");
}

id objc_msgSend_updateWantToReadAndReadingNowWithJaliscoUpdateSuccessful_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWantToReadAndReadingNowWithJaliscoUpdateSuccessful:completion:");
}

id objc_msgSend_updateWantToReadWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWantToReadWithCompletion:");
}

id objc_msgSend_uploadingError(void *a1, const char *a2, ...)
{
  return _[a1 uploadingError];
}

id objc_msgSend_uploadingPercent(void *a1, const char *a2, ...)
{
  return _[a1 uploadingPercent];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_userDataManager(void *a1, const char *a2, ...)
{
  return _[a1 userDataManager];
}

id objc_msgSend_userDataValueForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDataValueForKey:completion:");
}

id objc_msgSend_userDatumForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDatumForKey:completion:");
}

id objc_msgSend_userDatumIncludingDeleted_forKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDatumIncludingDeleted:forKey:completion:");
}

id objc_msgSend_userDefaults(void *a1, const char *a2, ...)
{
  return _[a1 userDefaults];
}

id objc_msgSend_userIDFromAssetReviewID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userIDFromAssetReviewID:");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userRecordID(void *a1, const char *a2, ...)
{
  return _[a1 userRecordID];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForAttribute:");
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForProperty:");
}

id objc_msgSend_valuePromise(void *a1, const char *a2, ...)
{
  return _[a1 valuePromise];
}

id objc_msgSend_verboseLoggingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 verboseLoggingEnabled];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_widgetCenterManager(void *a1, const char *a2, ...)
{
  return _[a1 widgetCenterManager];
}

id objc_msgSend_widgetDataUpdater(void *a1, const char *a2, ...)
{
  return _[a1 widgetDataUpdater];
}

id objc_msgSend_widgetInfoManager(void *a1, const char *a2, ...)
{
  return _[a1 widgetInfoManager];
}

id objc_msgSend_willAttachToContainer_serviceMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willAttachToContainer:serviceMode:completion:");
}

id objc_msgSend_workQueue(void *a1, const char *a2, ...)
{
  return _[a1 workQueue];
}

id objc_msgSend_wq_invalidateSalt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wq_invalidateSalt");
}

id objc_msgSend_wq_refreshSalt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wq_refreshSalt:");
}

id objc_msgSend_writeToURL_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:atomically:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_zoneDataManager(void *a1, const char *a2, ...)
{
  return _[a1 zoneDataManager];
}

id objc_msgSend_zoneID(void *a1, const char *a2, ...)
{
  return _[a1 zoneID];
}

id objc_msgSend_zoneName(void *a1, const char *a2, ...)
{
  return _[a1 zoneName];
}

id objc_msgSend_zoneNeedsUpdate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoneNeedsUpdate:completion:");
}

id objc_msgSend_zoneObservers(void *a1, const char *a2, ...)
{
  return _[a1 zoneObservers];
}

id objc_msgSend_zonesDeletedOrReset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zonesDeletedOrReset:completion:");
}

id objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zonesTemporarilyUnreadableWithError:completion:");
}

id objc_msgSend_zonesUnreadableDueToMissingD2DEncryptionIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zonesUnreadableDueToMissingD2DEncryptionIdentity:completion:");
}