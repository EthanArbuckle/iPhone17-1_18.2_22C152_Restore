void sub_100004A1C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t vars8;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3) {
    (*((void (**)(id, id))v3 + 2))(v3, v5);
  }
}

void sub_100004A88(uint64_t a1, void *a2, uint64_t a3)
{
  v5 = (id *)(a1 + 48);
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  [WeakRetained _handleFetchNotificationNames:v6 latestChangeToken:a3 forClient:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
}

void sub_100004AFC(uint64_t a1)
{
  v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100004BAC;
  v4[3] = &unk_100261998;
  id v6 = *(id *)(a1 + 56);
  id v5 = *(id *)(a1 + 48);
  objc_msgSend(v2, "q_fetchNotificationNamesAfterToken:withCompletion:", v3, v4);
}

void sub_100004BAC(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  id v5 = objc_retainBlock(*(id *)(a1 + 40));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, id, uint64_t))v5 + 2))(v5, v7, a3);
  }

  [*(id *)(a1 + 32) endTransaction];
}

void sub_100005334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000055C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1000059A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000059CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = [*(id *)(a1 + 32) currentToken];
    v4 = [WeakRetained plistContents];
    id v5 = [v4 objectForKey:@"BDSICloudIdentityTokenTrackerToken"];

    id v6 = [[BDSICloudIdentityToken alloc] initFromArchive:v5];
    id v7 = v6;
    if (v6) {
      char v8 = [v6 isEqual:v3] ^ 1;
    }
    else {
      char v8 = 0;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v8;
    v9 = sub_1000083A0();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
        CFStringRef v10 = @"YES";
      }
      else {
        CFStringRef v10 = @"NO";
      }
      int v11 = 138543874;
      CFStringRef v12 = v10;
      __int16 v13 = 2114;
      v14 = v7;
      __int16 v15 = 2114;
      v16 = v3;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@", (uint8_t *)&v11, 0x20u);
    }
  }
}

void sub_100005B50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = [*(id *)(a1 + 32) currentToken];
    v4 = [BDSICloudIdentityToken alloc];
    id v5 = [WeakRetained plistContents];
    id v6 = [v5 objectForKey:@"BDSICloudIdentityTokenTrackerToken"];
    id v7 = [(BDSICloudIdentityToken *)v4 initFromArchive:v6];

    if (v3 != v7 && ([v3 isEqual:v7] & 1) == 0)
    {
      char v8 = [WeakRetained plistContents];
      v9 = v8;
      if (v3)
      {
        CFStringRef v10 = [v3 token];
        [v9 setObject:v10 forKey:@"BDSICloudIdentityTokenTrackerToken"];
      }
      else
      {
        [v8 removeObjectForKey:@"BDSICloudIdentityTokenTrackerToken"];
      }

      int v11 = [WeakRetained plistContents];
      CFStringRef v12 = [WeakRetained plistURL];
      [v11 writeToURL:v12 atomically:1];

      __int16 v13 = sub_1000083A0();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v14 = [WeakRetained plistURL];
        int v15 = 141558274;
        uint64_t v16 = 1752392040;
        __int16 v17 = 2112;
        v18 = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Done acknowledge iCloud identity: %{mask.hash}@", (uint8_t *)&v15, 0x16u);
      }
    }
  }
}

void sub_100006354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  objc_destroyWeak(v32);
  objc_destroyWeak(v31);
  objc_destroyWeak(v30);
  objc_destroyWeak(v29);
  objc_destroyWeak(a11);
  objc_destroyWeak(a10);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v33 - 152));
  objc_destroyWeak((id *)(v33 - 144));
  _Unwind_Resume(a1);
}

id sub_1000063E8()
{
  if (qword_100297468 != -1) {
    dispatch_once(&qword_100297468, &stru_10025F870);
  }
  v0 = (void *)qword_100297460;
  return v0;
}

void sub_100006684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
}

void sub_1000067AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_100006CE0()
{
  if (qword_100297478 != -1) {
    dispatch_once(&qword_100297478, &stru_10025F890);
  }
  v0 = (void *)qword_100297470;
  return v0;
}

void sub_100007AF4(uint64_t a1)
{
  kdebug_trace();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    v4 = objc_msgSend(WeakRetained, "mq_cloudSyncVersions");
    id v82 = 0;
    id v5 = [*(id *)(a1 + 32) cloudVersion];
    v65 = v4;
    if ((uint64_t)v5 <= (uint64_t)[v4 cloudVersion])
    {
      CFStringRef v10 = [*(id *)(a1 + 32) historyToken];
      id v82 = [*(id *)(a1 + 32) historyTokenOffset];
    }
    else
    {
      id v6 = sub_1000083A0();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = [*(id *)(a1 + 40) entityName];
        char v8 = *(void **)(a1 + 32);
        id v9 = [v4 mutableCopy];
        *(_DWORD *)buf = 138543874;
        v84 = v7;
        __int16 v85 = 2114;
        id v86 = v8;
        __int16 v87 = 2114;
        id v88 = v9;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince -- About to reset historyToken, cloudSyncVersions:%{public}@, currentSyncVersions:%{public}@", buf, 0x20u);
      }
      CFStringRef v10 = 0;
    }
    int v15 = (id *)(a1 + 40);
    v14 = *(void **)(a1 + 40);
    id v81 = 0;
    uint64_t v16 = [v14 _fetchHistoryAfterToken:v10 inMoc:v3 error:&v81];
    id v17 = v81;
    if (!v17) {
      goto LABEL_21;
    }
    id v18 = v17;
    if (![*v15 _isTokenInvalidError:v17]) {
      goto LABEL_16;
    }
    v19 = sub_1000083A0();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_FAULT))
    {
      v58 = [*(id *)(a1 + 40) entityName];
      v64 = v16;
      v59 = *(void **)(a1 + 32);
      id v60 = [v65 mutableCopy];
      *(_DWORD *)buf = 138544130;
      v84 = v58;
      __int16 v85 = 2114;
      id v86 = v18;
      __int16 v87 = 2114;
      id v88 = v59;
      uint64_t v16 = v64;
      __int16 v89 = 2114;
      id v90 = v60;
      _os_log_fault_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "BCCloudDataManager %{public}@ getChangesSince -- fetchHistoryAfterToken encountered error: %{public}@. About to reset historyToken, cloudSyncVersions:%{public}@, currentSyncVersions:%{public}@", buf, 0x2Au);
    }
    id v82 = 0;

    id v20 = *v15;
    id v80 = 0;
    uint64_t v21 = [v20 _fetchHistoryAfterToken:0 inMoc:v3 error:&v80];
    id v18 = v80;

    CFStringRef v10 = 0;
    uint64_t v16 = (void *)v21;
    if (v18)
    {
LABEL_16:
      v22 = sub_1000083A0();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
        sub_1001E7778((id *)(a1 + 40), v22);
      }

      [WeakRetained _logError:v18 at:@"getChangesSince - fetchHistory error"];
      v23 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v18);

      id v24 = objc_retainBlock(*(id *)(a1 + 48));
      v25 = v24;
      if (v24) {
        (*((void (**)(id, void, void, void, void *, void))v24 + 2))(v24, 0, 0, 0, v23, 0);
      }
      v26 = 0;
      __int16 v13 = v65;
    }
    else
    {
LABEL_21:
      v62 = v10;
      v68 = v3;
      v70 = +[NSMutableSet set];
      v69 = +[NSMutableSet set];
      objc_opt_class();
      v63 = v16;
      if (objc_opt_isKindOfClass())
      {
        id v27 = v16;
        long long v76 = 0u;
        long long v77 = 0u;
        long long v78 = 0u;
        long long v79 = 0u;
        id obj = [v27 result];
        id v28 = [obj countByEnumeratingWithState:&v76 objects:v93 count:16];
        if (v28)
        {
          id v29 = v28;
          id v61 = v27;
          v30 = 0;
          v71 = 0;
          uint64_t v31 = *(void *)v77;
          while (2)
          {
            v32 = 0;
            id v66 = v29;
            do
            {
              if (*(void *)v77 != v31) {
                objc_enumerationMutation(obj);
              }
              uint64_t v33 = *(void **)(*((void *)&v76 + 1) + 8 * (void)v32);
              if ([WeakRetained signalDataChangedTransaction]
                && (unint64_t)v30 > 0x1F)
              {
                uint64_t v44 = 1;
                goto LABEL_38;
              }
              objc_opt_class();
              if (objc_opt_isKindOfClass())
              {
                id v35 = v33;
                uint64_t v36 = a1;
                uint64_t v37 = *(void *)(a1 + 64);
                v38 = [WeakRetained privacyDelegate];
                id v74 = 0;
                id v75 = 0;
                unsigned int v39 = objc_msgSend(v35, "bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:", &v82, 32 - (void)v30, v68, v37, v38, &v75, &v74);
                id v40 = v75;
                id v41 = v74;

                if (v39)
                {
                  uint64_t v42 = [v35 token];

                  id v82 = 0;
                  v71 = (void *)v42;
                }
                [v69 addObjectsFromArray:v40];
                [v70 addObjectsFromArray:v41];
                v43 = (char *)[v69 count];
                v30 = &v43[(void)[v70 count]];

                a1 = v36;
                id v29 = v66;
              }
              v32 = (char *)v32 + 1;
            }
            while (v29 != v32);
            id v29 = [obj countByEnumeratingWithState:&v76 objects:v93 count:16];
            if (v29) {
              continue;
            }
            break;
          }
          uint64_t v44 = 0;
LABEL_38:
          v45 = v71;
          id v27 = v61;
        }
        else
        {
          uint64_t v44 = 0;
          v45 = 0;
        }
      }
      else
      {
        uint64_t v44 = 0;
        v45 = 0;
      }
      __int16 v13 = v65;
      id v46 = [v65 syncVersion];
      if (v46 != [v65 cloudVersion]) {
        objc_msgSend(v65, "setSyncVersion:", objc_msgSend(v65, "cloudVersion"));
      }
      if (v45) {
        [v65 setHistoryToken:v45];
      }
      v72 = v45;
      [v65 setHistoryTokenOffset:v82];
      if ([v65 hasChanges])
      {
        v47 = [WeakRetained moc];
        id v73 = 0;
        [v47 save:&v73];
        id v48 = v73;

        [WeakRetained _logError:v48 at:@"getChangesSince - save"];
      }
      id v49 = [v65 mutableCopy];
      v50 = sub_1000083A0();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
      {
        v51 = [WeakRetained entityName];
        id v52 = [v69 count];
        *(_DWORD *)buf = 138544386;
        v84 = v51;
        __int16 v85 = 2048;
        id v86 = v52;
        __int16 v87 = 2112;
        id v88 = v69;
        __int16 v89 = 2114;
        id v90 = v49;
        __int16 v91 = 1024;
        int v92 = v44;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince returning changedObjects:%lu (%@) currentSyncVersions: %{public}@, fetchAgain:%d", buf, 0x30u);
      }
      v53 = sub_1000083A0();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
      {
        v54 = [WeakRetained entityName];
        id v55 = [v70 count];
        *(_DWORD *)buf = 138544386;
        v84 = v54;
        __int16 v85 = 2048;
        id v86 = v55;
        __int16 v87 = 2112;
        id v88 = v70;
        __int16 v89 = 2114;
        id v90 = v49;
        __int16 v91 = 1024;
        int v92 = v44;
        _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince returning deletedObjects:%lu (%@) currentSyncVersions: %{public}@, fetchAgain:%d", buf, 0x30u);
      }
      v23 = objc_msgSend(WeakRetained, "mq_sanitizeError:", 0);
      id v56 = objc_retainBlock(*(id *)(a1 + 48));
      v57 = v56;
      v25 = v70;
      if (v56) {
        (*((void (**)(id, void *, void *, id, void *, uint64_t))v56 + 2))(v56, v69, v70, v49, v23, v44);
      }

      id v3 = v68;
      CFStringRef v10 = v62;
      uint64_t v16 = v63;
      v26 = v72;
    }
  }
  else
  {
    int v11 = sub_1000083A0();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT)) {
      sub_1001E76F0(a1);
    }

    id v12 = objc_retainBlock(*(id *)(a1 + 48));
    __int16 v13 = v12;
    if (v12) {
      (*((void (**)(id, void, void, void, void, void))v12 + 2))(v12, 0, 0, 0, 0, 0);
    }
  }

  kdebug_trace();
}

id sub_1000083A0()
{
  if (qword_100297418 != -1) {
    dispatch_once(&qword_100297418, &stru_10025F7D0);
  }
  v0 = (void *)qword_100297410;
  return v0;
}

void sub_100008428(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    v4 = +[BULogUtilities shared];
    unsigned int v5 = [v4 verboseLoggingEnabled];

    if (v5)
    {
      id v6 = sub_10000CD80();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = [WeakRetained entityName];
        int v14 = 138412290;
        int v15 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager requesting currentCloudSyncVersions for %@\\\"\"", (uint8_t *)&v14, 0xCu);
      }
    }
    char v8 = objc_msgSend(WeakRetained, "mq_cloudSyncVersions");
    id v9 = [v8 mutableCopy];

    id v10 = objc_retainBlock(*(id *)(a1 + 32));
    int v11 = v10;
    if (v10) {
      (*((void (**)(id, id))v10 + 2))(v10, v9);
    }
  }
  else
  {
    id v12 = objc_retainBlock(*(id *)(a1 + 32));
    __int16 v13 = v12;
    if (v12) {
      (*((void (**)(id, void))v12 + 2))(v12, 0);
    }
  }
}

void sub_100008A5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    v4 = +[BULogUtilities shared];
    unsigned int v5 = [v4 verboseLoggingEnabled];

    if (v5)
    {
      id v6 = sub_10000CD80();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = [*(id *)(a1 + 32) debugDescription];
        *(_DWORD *)buf = 138543362;
        uint64_t v21 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager cloudDataWithPredicate:%{public}@\\\"\"", buf, 0xCu);
      }
    }
    id v8 = objc_alloc((Class)NSFetchRequest);
    id v9 = [WeakRetained entityName];
    id v10 = [v8 initWithEntityName:v9];

    [v10 setReturnsObjectsAsFaults:0];
    [v10 setFetchLimit:1];
    [v10 setPredicate:*(void *)(a1 + 32)];
    [v10 setSortDescriptors:*(void *)(a1 + 40)];
    id v19 = 0;
    int v11 = [v3 executeFetchRequest:v10 error:&v19];
    id v12 = v19;
    [WeakRetained _logError:v12 at:@"mutableCloudData - fetch"];
    __int16 v13 = [WeakRetained privacyDelegate];
    int v14 = [v11 firstObject];
    [v14 setPrivacyDelegate:v13];
    id v15 = [v14 mutableCopy];
    [v15 setPrivacyDelegate:v13];
    uint64_t v16 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v12);

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    if ([v3 hasChanges])
    {
      id v18 = v16;
      [v3 save:&v18];
      id v17 = v18;

      [WeakRetained _logError:v17 at:@"mutableCloudData - save"];
      uint64_t v16 = v17;
    }
    [v3 refreshObject:v14 mergeChanges:0];
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_100008EF4(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(id, void *, id))v7 + 2))(v7, v6, v9);
  }
}

void sub_10000A100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10000A32C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "cq_postServiceNotificationNames:latestChangeToken:forClients:", *(void *)(a1 + 40), *(void *)(a1 + 64), *(void *)(a1 + 48));
  uint64_t v2 = *(void **)(a1 + 56);
  return [v2 endTransaction];
}

uint64_t sub_10000A370(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t start()
{
  v0 = sub_1000063E8();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_INFO, "Process launch.", buf, 2u);
  }

  uint64_t v2 = +[BDSDaemon daemon];
  [v2 start];

  id v3 = +[NSRunLoop mainRunLoop];
  [v3 run];

  v4 = sub_1000063E8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Process exit.", v6, 2u);
  }

  return 0;
}

void sub_10000B450(id a1)
{
  qword_1002973E0 = objc_opt_new();
  _objc_release_x1();
}

id sub_10000B730(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(a1 + 32) preflightStartup];
  id v3 = sub_1000063E8();
  v4 = v3;
  if ((v2 & 1) == 0)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001E3BDC();
    }

    exit(0);
  }
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Startup: Starting up bookdatastored daemon", buf, 2u);
  }

  id v5 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10000B828;
  v7[3] = &unk_10025F748;
  v7[4] = v5;
  return objc_msgSend(v5, "lrq_setupBeforeListenersWithCompletion:", v7);
}

void sub_10000B828(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    v4 = sub_1000063E8();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E3C10((uint64_t)v3, v4);
    }
  }
  id v5 = [*(id *)(a1 + 32) listenersReadyQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000B9EC;
  block[3] = &unk_10025F700;
  block[4] = *(void *)(a1 + 32);
  dispatch_async(v5, block);

  signal(15, (void (__cdecl *)(int))1);
  id v6 = dispatch_get_global_queue(21, 0);
  dispatch_source_t v7 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_signal, 0xFuLL, 0, v6);
  objc_msgSend(*(id *)(a1 + 32), "setSigterm_source:", v7);

  id v8 = objc_msgSend(*(id *)(a1 + 32), "sigterm_source");
  dispatch_source_set_event_handler(v8, &stru_10025F720);

  id v9 = objc_msgSend(*(id *)(a1 + 32), "sigterm_source");
  dispatch_activate(v9);

  id v10 = [*(id *)(a1 + 32) startupQueue];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_10000BA54;
  v11[3] = &unk_10025F700;
  v11[4] = *(void *)(a1 + 32);
  dispatch_async(v10, v11);
}

id sub_10000B9EC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "lrq_setupListeners");
}

void sub_10000B9F4(id a1)
{
  v1 = sub_1000063E8();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)unsigned __int8 v2 = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "Startup: bookdatastored received sigterm signal", v2, 2u);
  }

  exit(0);
}

void sub_10000BA54(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "sq_finishedStartingUp");
  v1 = sub_1000063E8();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unsigned __int8 v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "Startup: Daemon finished starting up.", v2, 2u);
  }
}

void sub_10000BFE0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t sub_10000C008()
{
  return _os_feature_enabled_impl();
}

uint64_t sub_10000C01C()
{
  return _os_variant_has_internal_content("com.apple.iBooks.BookDataStore");
}

void sub_10000C5F0(uint64_t a1)
{
  unsigned __int8 v2 = *(void **)(a1 + 40);
  id v4 = *(id *)(a1 + 32);
  id v3 = [v2 dataFile];
  [v3 save:*(void *)(a1 + 48)];
}

void sub_10000C758(id a1)
{
  qword_1002973F8 = objc_alloc_init(BDSBookWidgetReadingHistoryDataFile);
  _objc_release_x1();
}

void sub_10000CBF0(id a1)
{
  v1 = +[BUAppGroup books];
  unsigned __int8 v2 = [v1 containerURL];

  id v3 = [v2 URLByAppendingPathComponent:@"Library/Application Support/bookdatastored" isDirectory:1];
  uint64_t v4 = [v3 URLByAppendingPathComponent:@"currentWidgetReadingHistoryData.plist"];
  id v5 = (void *)qword_100297400;
  qword_100297400 = v4;

  id v6 = +[NSFileManager defaultManager];
  id v10 = 0;
  unsigned __int8 v7 = [v6 createDirectoryAtURL:v3 withIntermediateDirectories:1 attributes:0 error:&v10];
  id v8 = v10;

  if ((v7 & 1) == 0)
  {
    uint64_t v9 = sub_10000D068();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1001E3F3C();
    }
  }
}

void sub_10000CD14(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10000CD3C(id a1)
{
  qword_100297410 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKit");
  _objc_release_x1();
}

id sub_10000CD80()
{
  if (qword_100297428 != -1) {
    dispatch_once(&qword_100297428, &stru_10025F7F0);
  }
  v0 = (void *)qword_100297420;
  return v0;
}

void sub_10000CDD4(id a1)
{
  qword_100297420 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKit.Development");
  _objc_release_x1();
}

id sub_10000CE18()
{
  if (qword_100297438 != -1) {
    dispatch_once(&qword_100297438, &stru_10025F810);
  }
  v0 = (void *)qword_100297430;
  return v0;
}

void sub_10000CE6C(id a1)
{
  qword_100297430 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKitSync");
  _objc_release_x1();
}

id sub_10000CEB0()
{
  if (qword_100297448 != -1) {
    dispatch_once(&qword_100297448, &stru_10025F830);
  }
  v0 = (void *)qword_100297440;
  return v0;
}

void sub_10000CF04(id a1)
{
  qword_100297440 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKitAudiobook");
  _objc_release_x1();
}

id sub_10000CF48()
{
  if (qword_100297458 != -1) {
    dispatch_once(&qword_100297458, &stru_10025F850);
  }
  v0 = (void *)qword_100297450;
  return v0;
}

void sub_10000CF9C(id a1)
{
  qword_100297450 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.ServiceCenter");
  _objc_release_x1();
}

void sub_10000CFE0(id a1)
{
  qword_100297460 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Service");
  _objc_release_x1();
}

void sub_10000D024(id a1)
{
  qword_100297470 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Service.XPCNotification");
  _objc_release_x1();
}

id sub_10000D068()
{
  if (qword_100297488 != -1) {
    dispatch_once(&qword_100297488, &stru_10025F8B0);
  }
  v0 = (void *)qword_100297480;
  return v0;
}

void sub_10000D0BC(id a1)
{
  qword_100297480 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Widget");
  _objc_release_x1();
}

id sub_10000D100()
{
  if (qword_100297498 != -1) {
    dispatch_once(&qword_100297498, &stru_10025F8D0);
  }
  v0 = (void *)qword_100297490;
  return v0;
}

void sub_10000D154(id a1)
{
  qword_100297490 = (uint64_t)os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Ubiquity");
  _objc_release_x1();
}

void sub_10000D1EC(id a1)
{
  qword_1002974A8 = objc_alloc_init(BDSBookWidgetDataFile);
  _objc_release_x1();
}

void sub_10000D68C(id a1)
{
  v1 = +[BUAppGroup books];
  unsigned __int8 v2 = [v1 containerURL];

  id v3 = [v2 URLByAppendingPathComponent:@"Library/Application Support/bookdatastored/"];
  uint64_t v4 = [v3 URLByAppendingPathComponent:@"/currentWidgetData.plist"];
  id v5 = (void *)qword_1002974B0;
  qword_1002974B0 = v4;

  id v6 = +[NSFileManager defaultManager];
  id v10 = 0;
  unsigned __int8 v7 = [v6 createDirectoryAtURL:v3 withIntermediateDirectories:1 attributes:0 error:&v10];
  id v8 = v10;

  if ((v7 & 1) == 0)
  {
    uint64_t v9 = sub_10000D068();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1001E4144();
    }
  }
}

void sub_10000DB64(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 removePointerAtIndex:0];
  objc_msgSend(*(id *)(a1 + 32), "bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:", *(void *)(a1 + 48), a2, v6, *(void *)(a1 + 40));
}

void sub_10000DD8C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  [v5 removePointerAtIndex:0];
  objc_msgSend(*(id *)(a1 + 32), "bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:", *(void *)(a1 + 48), a2, v6, *(void *)(a1 + 40));
}

id sub_10000E84C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dq_refreshUbiquityAvailabilityStatus");
}

void sub_10000E9BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000E9D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000E9E4(uint64_t a1)
{
}

uint64_t sub_10000E9EC(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(a1 + 32) currentUbiquityIdentityToken];
  return _objc_release_x1();
}

void sub_10000EC68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10000EC80(uint64_t a1)
{
  id result = objc_msgSend(*(id *)(a1 + 32), "dq_isICloudDriveEnabled");
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_10000ED6C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 addObject:*(void *)(a1 + 40)];
}

void sub_10000EE78(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  unsigned int v3 = [v2 containsObject:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) observers];
    [v4 removeObject:*(void *)(a1 + 40)];
  }
}

id sub_10000EFC4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setCoordinatingObserver:*(void *)(a1 + 40)];
}

void sub_10000F054(uint64_t a1)
{
  id v2 = sub_10000D100();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    LOWORD(v16) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: restartObserving was called", (uint8_t *)&v16, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "dq_refreshUbiquityAvailabilityStatus");
  unsigned int v3 = [*(id *)(a1 + 32) lastArchivedUbiquityIdentityToken];
  id v4 = [*(id *)(a1 + 32) currentUbiquityIdentityToken];
  if (v3 == v4)
  {
    unsigned int v7 = 0;
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) lastArchivedUbiquityIdentityToken];
    id v6 = [*(id *)(a1 + 32) currentUbiquityIdentityToken];
    unsigned int v7 = [v5 isEqual:v6] ^ 1;
  }
  BOOL v8 = +[BDSSyncUserDefaults isICloudDriveSyncOptedIn];
  uint64_t v9 = sub_10000D100();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    CFStringRef v10 = @"NO";
    if (v8) {
      CFStringRef v10 = @"YES";
    }
    int v16 = 138412290;
    CFStringRef v17 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: restartObserving cloudDriveOptedIn:%@", (uint8_t *)&v16, 0xCu);
  }

  if (v8 != [*(id *)(a1 + 32) archivedCloudDriveOptedIn])
  {
    [*(id *)(a1 + 32) setArchivedCloudDriveOptedIn:v8];
    int v11 = sub_10000D100();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      CFStringRef v12 = @"disabled";
      if (v8) {
        CFStringRef v12 = @"enabled";
      }
      int v16 = 138412290;
      CFStringRef v17 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: restartObserving - Books / iCloud Drive switch was %@", (uint8_t *)&v16, 0xCu);
    }

    goto LABEL_17;
  }
  if (v7)
  {
LABEL_17:
    objc_msgSend(*(id *)(a1 + 32), "dq_archiveCurrentUbiquityIdentityToken");
    __int16 v13 = [*(id *)(a1 + 32) currentUbiquityIdentityToken];
    int v14 = [*(id *)(a1 + 32) lastArchivedUbiquityIdentityToken];
    id v15 = sub_10000D100();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v16) = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "BDSUbiquityStatusMonitor: restartObserving - notifying observers of a token change", (uint8_t *)&v16, 2u);
    }

    [*(id *)(a1 + 32) _notifyObserversForChangesWithCurrentToken:v13 lastToken:v14];
    goto LABEL_20;
  }
  __int16 v13 = sub_10000D100();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v16) = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "BDSUbiquityStatusMonitor: restartObserving - tokens match ... so we are not notifying anyone", (uint8_t *)&v16, 2u);
  }
LABEL_20:
}

void sub_10000F4F0(uint64_t a1)
{
  id v2 = +[BUAccountsProvider sharedProvider];
  [v2 ubiquityIdentityDidChange];

  unsigned int v3 = [*(id *)(a1 + 32) currentUbiquityIdentityToken];
  objc_msgSend(*(id *)(a1 + 32), "dq_refreshUbiquityAvailabilityStatus");
  id v4 = [*(id *)(a1 + 32) currentUbiquityIdentityToken];
  objc_msgSend(*(id *)(a1 + 32), "dq_archiveCurrentUbiquityIdentityToken");
  id v5 = sub_10000D100();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    CFStringRef v6 = @"YES";
    if (!v4) {
      CFStringRef v6 = @"NO";
    }
    int v9 = 138412290;
    CFStringRef v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: p_ubiquityIdentityDidChange - iCloud identity changed. {iCloudEnabled: %@}", (uint8_t *)&v9, 0xCu);
  }

  if (v3 == v4 || [v3 isEqual:v4])
  {
    unsigned int v7 = sub_10000D100();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "BDSUbiquityStatusMonitor: p_ubiquityIdentityDidChange - Same underlying tokens detected. Skipping notification to observers", (uint8_t *)&v9, 2u);
    }
  }
  else
  {
    BOOL v8 = sub_10000D100();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "BDSUbiquityStatusMonitor: p_ubiquityIdentityDidChange - notifying observers of a token change", (uint8_t *)&v9, 2u);
    }

    [*(id *)(a1 + 32) _notifyObserversForChangesWithCurrentToken:v4 lastToken:v3];
  }
}

id sub_10000F94C(uint64_t a1)
{
  id v2 = sub_10000D100();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 138412546;
    uint64_t v7 = v3;
    __int16 v8 = 2112;
    uint64_t v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: iCloud identity changed. Notifying newToken:%@ oldToken:%@", (uint8_t *)&v6, 0x16u);
  }

  return [*(id *)(a1 + 48) ubiquityStatusChangedToAvailableWithNewIdentity:*(void *)(a1 + 32) oldIdentity:*(void *)(a1 + 40)];
}

id sub_10000FA0C(uint64_t a1)
{
  id v2 = sub_10000D100();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 138412546;
    uint64_t v7 = v3;
    __int16 v8 = 2112;
    uint64_t v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: iCloud identity changed. Notifying coordinating observer newToken:%@ oldToken:%@", (uint8_t *)&v6, 0x16u);
  }

  return [*(id *)(a1 + 48) ubiquityStatusChangedToAvailableWithNewIdentity:*(void *)(a1 + 32) oldIdentity:*(void *)(a1 + 40)];
}

void sub_10000FCD4(uint64_t a1)
{
  id v2 = +[NSFileManager defaultManager];
  uint64_t v3 = [*(id *)(a1 + 32) containerIdentifier];
  id v19 = v2;
  uint64_t v4 = [v2 URLForUbiquityContainerIdentifier:v3];

  [*(id *)(a1 + 32) setContainerURL:v4];
  id v5 = [v4 URLByAppendingPathComponent:@"Documents"];
  [*(id *)(a1 + 32) setDocumentsURL:v5];
  int v6 = sub_10000D100();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 141558274;
    uint64_t v26 = 1752392040;
    __int16 v27 = 2112;
    id v28 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: Container URL set to: %{mask.hash}@", buf, 0x16u);
  }

  if (v5)
  {
    uint64_t v18 = a1;
    uint64_t v7 = objc_opt_new();
    __int16 v8 = [v5 path];
    uint64_t v9 = [v19 contentsOfDirectoryAtPath:v8 error:0];

    CFStringRef v10 = 0;
    if ([v9 count])
    {
      unint64_t v11 = 0;
      do
      {
        CFStringRef v12 = [v9 objectAtIndex:v11];
        if (![v12 rangeOfString:@".Trash"])
        {
          __int16 v13 = [v5 URLByAppendingPathComponent:v12];
          id v24 = v10;
          v22[0] = _NSConcreteStackBlock;
          v22[1] = 3221225472;
          v22[2] = sub_100010060;
          v22[3] = &unk_10025F9B0;
          id v23 = v19;
          [v7 coordinateWritingItemAtURL:v13 options:1 error:&v24 byAccessor:v22];
          id v14 = v24;

          CFStringRef v10 = v14;
        }

        ++v11;
      }
      while (v11 < (unint64_t)[v9 count]);
    }

    a1 = v18;
  }
  id v15 = sub_10000D100();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 141558274;
    uint64_t v26 = 1752392040;
    __int16 v27 = 2112;
    id v28 = v5;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: dq_refreshUbiquityAvailabilityStatus iCloud documentURL changed. {documentURL: %{mask.hash}@}", buf, 0x16u);
  }

  int v16 = [*(id *)(a1 + 32) dispatchQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001014C;
  block[3] = &unk_10025F988;
  block[4] = *(void *)(a1 + 32);
  id v21 = v5;
  id v17 = v5;
  dispatch_async(v16, block);
}

void sub_100010060(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v7 = 0;
  [v4 removeItemAtURL:v3 error:&v7];
  id v5 = v7;
  if (v5)
  {
    int v6 = sub_10000D100();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      id v9 = v3;
      __int16 v10 = 2112;
      id v11 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: Error deleting the folder:[%@] : Error: {%@}", buf, 0x16u);
    }
  }
}

void sub_10001014C(uint64_t a1)
{
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v2 = [*(id *)(a1 + 32) observers];
  id v3 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v12;
    do
    {
      int v6 = 0;
      do
      {
        if (*(void *)v12 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v11 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector())
        {
          __int16 v8 = [*(id *)(a1 + 32) notifyQueue];
          v9[0] = _NSConcreteStackBlock;
          v9[1] = 3221225472;
          v9[2] = sub_1000102EC;
          v9[3] = &unk_10025F988;
          v9[4] = v7;
          id v10 = *(id *)(a1 + 40);
          dispatch_async(v8, v9);
        }
        int v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v4);
  }
}

id sub_1000102EC(uint64_t a1)
{
  return _[*(id *)(a1 + 32) ubiquityDocumentsURLChanged:*(void *)(a1 + 40)];
}

void sub_1000102F8(uint64_t a1)
{
  [*(id *)(a1 + 32) setContainerURL:0];
  [*(id *)(a1 + 32) setDocumentsURL:0];
  id v2 = sub_10000D100();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BDSUbiquityStatusMonitor: Container URL set to: <nil>", v3, 2u);
  }
}

void sub_100010480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100010498(uint64_t a1)
{
}

void sub_1000105B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000105C8(uint64_t a1)
{
}

void sub_100010CC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = +[BDSReachability sharedReachabilityForInternetConnection];

  if (v6 == v5) {
    +[BDSReachability _updateIsOffline];
  }
  uint64_t v7 = +[NSNotificationCenter defaultCenter];
  [v7 postNotificationName:@"kNetworkReachabilityChangedNotification" object:v5];
}

id sub_1000111C0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) reachabilityForInternetConnection];
  id v2 = (void *)qword_1002974C0;
  qword_1002974C0 = v1;

  id result = [(id)qword_1002974C0 currentReachabilityStatus];
  byte_10028F9E0 = result == 0;
  return result;
}

void sub_100011770(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [*(id *)(a1 + 32) ubiquityIdentityToken];
  [WeakRetained setIdentity:v3];

  id v4 = [WeakRetained ubiquityStatusMonitor];
  id v5 = [v4 containerURL];
  [WeakRetained setContainerURL:v5];

  id v6 = [WeakRetained identity];

  if (!v6)
  {
    __int16 v8 = sub_10000D100();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
      sub_1001E41AC();
    }
    goto LABEL_10;
  }
  uint64_t v7 = [WeakRetained containerURL];

  __int16 v8 = sub_10000D100();
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_INFO);
  if (!v7)
  {
    if (v9)
    {
      LOWORD(v11) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "BDSUbiquityDocumentsObserver: No ubiquity URL", (uint8_t *)&v11, 2u);
    }
LABEL_10:

    goto LABEL_11;
  }
  if (v9)
  {
    id v10 = [WeakRetained containerURL];
    int v11 = 141558274;
    uint64_t v12 = 1752392040;
    __int16 v13 = 2112;
    long long v14 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "BDSUbiquityDocumentsObserver: Have ubiquity URL: %{mask.hash}@", (uint8_t *)&v11, 0x16u);
  }
  objc_msgSend(WeakRetained, "q_createSubpathDirectories");
  [WeakRetained restartQuery];
LABEL_11:
}

void sub_100011A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_100011A48(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v4 = [WeakRetained ubiquityStatusMonitor];
  unsigned int v5 = [v4 isICloudDriveEnabled];

  id v6 = sub_10000D100();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v12[0] = 67109120;
    v12[1] = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "BDSUbiquityDocumentsObserver: iCloud identity changed. {iCloudEnabled: %d}", (uint8_t *)v12, 8u);
  }

  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = objc_loadWeakRetained(v2);
  [v8 setIdentity:v7];

  BOOL v9 = sub_10000D100();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v5)
  {
    if (v10)
    {
      LOWORD(v12[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "BDSUbiquityDocumentsObserver: restarting metadata query...", (uint8_t *)v12, 2u);
    }

    return [*(id *)(a1 + 40) restartQuery];
  }
  else
  {
    if (v10)
    {
      LOWORD(v12[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "BDSUbiquityDocumentsObserver: stopping metadata query...", (uint8_t *)v12, 2u);
    }

    return [*(id *)(a1 + 40) tearDownQuery];
  }
}

void sub_100011C98(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_10000D100();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v5 = [v3 path];
      *(_DWORD *)buf = 138412290;
      id v19 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BDSUbiquityDocumentsObserver: Starting new metadata query: %@", buf, 0xCu);
    }
    id v6 = objc_alloc_init((Class)NSMetadataQuery);
    id v7 = objc_alloc_init((Class)NSOperationQueue);
    [v6 setOperationQueue:v7];

    id v8 = [v6 operationQueue];
    [v8 setMaxConcurrentOperationCount:1];

    BOOL v9 = [v3 path];
    BOOL v10 = +[NSPredicate predicateWithFormat:@"%K BEGINSWITH %@", NSMetadataItemPathKey, v9];
    [v6 setPredicate:v10];

    int v11 = sub_10000D100();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
      sub_1001E41E0((uint64_t)v3, v11);
    }

    id v17 = NSMetadataQueryUbiquitousDocumentsScope;
    uint64_t v12 = +[NSArray arrayWithObjects:&v17 count:1];
    [v6 setSearchScopes:v12];

    __int16 v13 = [*(id *)(a1 + 32) metadataQueryQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100011EF8;
    block[3] = &unk_10025F988;
    block[4] = *(void *)(a1 + 32);
    id v16 = v6;
    id v14 = v6;
    dispatch_async(v13, block);
  }
}

id sub_100011EF8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "mq_setupQuery:", *(void *)(a1 + 40));
}

id sub_100011F8C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "mq_tearDownQuery");
}

void sub_1000120A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) _documentsURL];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_10001262C(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) _replacementObjectForResultObject:a2];
  [v2 addObject:v3];
}

void sub_100012CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100012CF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (v3)
  {
    unsigned int v5 = *(void **)(a1 + 32);
    id v6 = [v3 path];
    LOBYTE(v5) = [v5 fileExistsAtPath:v6];

    if ((v5 & 1) == 0)
    {
      id v7 = *(void **)(a1 + 32);
      id v11 = 0;
      unsigned __int8 v8 = [v7 createDirectoryAtURL:v4 withIntermediateDirectories:1 attributes:0 error:&v11];
      id v9 = v11;
      if ((v8 & 1) == 0)
      {
        BOOL v10 = sub_10000D100();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_1001E43A4();
        }

        *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
      }
    }
  }
}

void sub_100012EA4(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) _replacementObjectForResultObject:a2];
  [v2 addObject:v3];
}

void sub_100013508(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_100013524(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

void sub_10001401C(_Unwind_Exception *a1)
{
}

void sub_100014034(uint64_t a1, int a2)
{
  if (a2) {
    objc_terminate();
  }
  JUMPOUT(0x100014118);
}

void sub_10001403C(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9)
{
  if (a2)
  {
    if (a2 == 2)
    {
      id v9 = objc_begin_catch(exc_buf);
      BOOL v10 = [v9 name];
      unsigned int v11 = [v10 isEqualToString:NSObjectInaccessibleException];

      if (v11)
      {
        uint64_t v12 = sub_1000083A0();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          LODWORD(a9) = 138412290;
          *(void *)((char *)&a9 + 4) = v9;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Handled Exception {%@}", (uint8_t *)&a9, 0xCu);
        }

        objc_end_catch();
        JUMPOUT(0x100013FCCLL);
      }
      objc_exception_throw(v9);
    }
    objc_begin_catch(exc_buf);
    JUMPOUT(0x100013FD0);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1000140F4(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x100014104);
  }
  _Unwind_Resume(a1);
}

void sub_100014258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100014270(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(a1 + 40), "deleteObject:", *(void *)(*((void *)&v8 + 1) + 8 * (void)v6), (void)v8);
        ++*(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
        uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
        if (*(_DWORD *)(v7 + 24) == 100)
        {
          *(_DWORD *)(v7 + 24) = 0;
          [*(id *)(a1 + 40) save:0];
        }
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_10001492C(uint64_t a1)
{
  if (([*(id *)(a1 + 32) initialGatherSentAtleastOnce] & 1) == 0 && !*(unsigned char *)(a1 + 40))
  {
    id v2 = [*(id *)(a1 + 32) observerCallbackQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100014AB0;
    block[3] = &unk_10025F700;
    block[4] = *(void *)(a1 + 32);
    dispatch_async(v2, block);
  }
  [*(id *)(a1 + 32) setInitialGatherSentAtleastOnce:1];
  if (*(unsigned char *)(a1 + 40))
  {
    if (([*(id *)(a1 + 32) ubiquityObservingEnabled] & 1) == 0)
    {
      [*(id *)(a1 + 32) setUbiquityObservingEnabled:1];
      objc_msgSend(*(id *)(a1 + 32), "iq_setupUbiquityObservers");
      return;
    }
    if (*(unsigned char *)(a1 + 40)) {
      return;
    }
  }
  if ([*(id *)(a1 + 32) ubiquityObservingEnabled])
  {
    [*(id *)(a1 + 32) setUbiquityObservingEnabled:0];
    objc_msgSend(*(id *)(a1 + 32), "iq_teardownUbiquityObservers");
    id v3 = objc_msgSend(*(id *)(a1 + 32), "iq_urlFromAssetID");
    [v3 removeAllObjects];

    id v4 = [*(id *)(a1 + 32) observerCallbackQueue];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100014B04;
    v5[3] = &unk_10025F700;
    v5[4] = *(void *)(a1 + 32);
    dispatch_async(v4, v5);
  }
}

void sub_100014AB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observer];
  [v2 ubiquityManagerDidFinishInitialGather:*(void *)(a1 + 32)];
}

void sub_100014B04(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observer];
  [v2 ubiquityManagerDidFinishInitialGather:*(void *)(a1 + 32)];
}

void sub_100014C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100014C30(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) ubiquityObservingEnabled];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_100014DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100014DC8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100014DD8(uint64_t a1)
{
}

void sub_100014DE0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "iq_urlFromAssetID");
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = [v5 allKeys];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100014F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100014FA4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "iq_urlFromAssetID");
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = [v5 objectForKeyedSubscript:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100015148(uint64_t a1)
{
  uint64_t v2 = objc_msgSend(*(id *)(a1 + 32), "iq_urlFromAssetID");
  uint64_t v3 = [v2 allKeys];

  if ([v3 count])
  {
    id v4 = sub_10000D100();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 134217984;
      id v6 = [v3 count];
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BDSUbiquityManager: ubiquityStatusChangedToAvailableWithNewIdentity: Removing assets. count: %lu", (uint8_t *)&v5, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "iq_clearCachesForAssetIDs:notify:", v3, 0);
  }
}

void sub_10001530C(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  uint64_t v3 = sub_10000D100();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = [a1[4] count];
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BDSUbiquityManager: didLoadWithItems: count: %lu", (uint8_t *)&buf, 0xCu);
  }

  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v30 = 0x3032000000;
  uint64_t v31 = sub_100014DC8;
  v32 = sub_100014DD8;
  id v33 = 0;
  int v5 = [WeakRetained ivarQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000157A4;
  block[3] = &unk_10025F960;
  block[4] = WeakRetained;
  void block[5] = &buf;
  dispatch_sync(v5, block);

  id v6 = [a1[4] valueForKey:@"url"];
  uint64_t v7 = +[NSSet setWithArray:v6];
  long long v8 = +[NSMutableSet setWithSet:*(void *)(*((void *)&buf + 1) + 40)];
  [v8 minusSet:v7];
  id v21 = v8;
  long long v9 = +[NSMutableSet setWithSet:v7];
  [v9 minusSet:*(void *)(*((void *)&buf + 1) + 40)];
  long long v10 = +[NSMutableSet setWithSet:v7];
  [v10 intersectSet:*(void *)(*((void *)&buf + 1) + 40)];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100015834;
  v26[3] = &unk_10025FB60;
  id v20 = v9;
  id v27 = v20;
  long long v11 = [v6 indexesOfObjectsPassingTest:v26];
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_100015840;
  v24[3] = &unk_10025FB60;
  id v12 = v10;
  id v25 = v12;
  __int16 v13 = [v6 indexesOfObjectsPassingTest:v24];
  id v14 = [a1[4] objectsAtIndexes:v11];
  id v15 = [a1[4] objectsAtIndexes:v13];
  objc_msgSend(WeakRetained, "mq_itemsDidBecomeAvailable:block:notify:", v14, 1, 0);
  objc_msgSend(WeakRetained, "mq_itemsDidChange:block:notify:", v15, 1, 0);
  id v16 = [v21 allObjects];
  objc_msgSend(WeakRetained, "mq_itemsDidBecomeUnavailable:block:notify:", v16, 1, 0);

  id v17 = sub_10000D100();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "BDSUbiquityManager: Initial gather complete", v23, 2u);
  }

  uint64_t v18 = [a1[5] observer];

  if (v18)
  {
    id v19 = [WeakRetained observerCallbackQueue];
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_10001584C;
    v22[3] = &unk_10025F700;
    void v22[4] = a1[5];
    dispatch_async(v19, v22);
  }
  _Block_object_dispose(&buf, 8);
}

void sub_10001575C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1000157A4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "iq_urlFromAssetID");
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = [v6 allValues];
  uint64_t v3 = +[NSSet setWithArray:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  int v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_100015834(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) containsObject:a2];
}

id sub_100015840(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) containsObject:a2];
}

void sub_10001584C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observer];
  [v2 ubiquityManagerDidFinishInitialGather:*(void *)(a1 + 32)];
}

id sub_100015938(uint64_t a1)
{
  id v2 = sub_10000D100();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) count];
    int v5 = 134217984;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BDSUbiquityManager: itemsDidBecomeAvailable: count: %lu", (uint8_t *)&v5, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "mq_itemsDidBecomeAvailable:block:notify:", *(void *)(a1 + 32), 0, 1);
}

void sub_100015A8C(uint64_t a1)
{
  id v2 = sub_10000D100();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) count];
    int v6 = 134217984;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BDSUbiquityManager: itemsDidBecomeUnavailable: count: %lu", (uint8_t *)&v6, 0xCu);
  }

  uint64_t v4 = *(void **)(a1 + 40);
  int v5 = [*(id *)(a1 + 32) valueForKey:@"url"];
  objc_msgSend(v4, "mq_itemsDidBecomeUnavailable:block:notify:", v5, 0, 1);
}

id sub_100015C00(uint64_t a1)
{
  id v2 = sub_10000D100();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) count];
    int v5 = 134217984;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BDSUbiquityManager: itemsDidChange: count: %lu", (uint8_t *)&v5, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "mq_itemsDidChange:block:notify:", *(void *)(a1 + 32), 0, 1);
}

id sub_100015F6C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_updateCachesForItems:notify:", *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

id sub_100015F7C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_updateCachesForItems:notify:", *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

id sub_100016180(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_clearCachesForURLs:notify:", *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

id sub_100016190(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_clearCachesForURLs:notify:", *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

id sub_100016408(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_updateCachesForItems:notify:", *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

id sub_100016418(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "iq_updateCachesForItems:notify:", *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

void sub_100016700(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  id v3 = [*(id *)(a1 + 32) observer];
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  id v7 = v3;
  if (v2) {
    [v3 ubiquityManager:v4 addedItemWithAssetID:v5 metadata:v6];
  }
  else {
    [v3 ubiquityManager:v4 updatedItemWithAssetID:v5 metadata:v6];
  }
}

void sub_100016AD0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observer];
  [v2 ubiquityManager:*(void *)(a1 + 32) removedItemWithAssetID:*(void *)(a1 + 40)];
}

void sub_100016C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100016C70(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = _CFURLPromiseCopyPhysicalURL();
  uint64_t v5 = (void *)v4;
  if (v4) {
    uint64_t v6 = (void *)v4;
  }
  else {
    uint64_t v6 = v3;
  }
  id v10 = v6;

  uint64_t v7 = [*(id *)(a1 + 32) _buildUbiquityMetadataDict:v10];
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  long long v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_100017D90(id a1)
{
  id v4 = +[NSBundle mainBundle];
  uint64_t v1 = [v4 objectForInfoDictionaryKey:@"CFBundleShortVersionString"];
  id v2 = [v1 copy];
  id v3 = (void *)qword_1002974D0;
  qword_1002974D0 = (uint64_t)v2;
}

void sub_100017E5C(id a1)
{
  v3[0] = @"BKLibrary.ReadingNow";
  v3[1] = @"BKAudioBookSkipForward";
  v3[2] = @"BKAudioBookSkipBackward";
  v3[3] = @"BCOverrideRecentBookAlgorithm";
  v3[4] = @"BCTimeThresholdPromotionOverride";
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:5];
  id v2 = (void *)qword_1002974E0;
  qword_1002974E0 = v1;
}

void sub_10001810C(id a1)
{
  uint64_t v1 = +[NSProcessInfo processInfo];
  id v3 = [v1 environment];

  id v2 = [v3 objectForKeyedSubscript:@"XCTestConfigurationFilePath"];
  byte_1002974F0 = v2 != 0;
}

void sub_100018220(id a1)
{
  uint64_t v1 = NSTemporaryDirectory();
  id v5 = [v1 stringByAppendingPathComponent:@"BDSUnitTest"];

  id v2 = +[NSFileManager defaultManager];
  [v2 removeItemAtPath:v5 error:0];

  uint64_t v3 = +[NSURL fileURLWithPath:v5];
  id v4 = (void *)qword_100297510;
  qword_100297510 = v3;
}

void sub_100018468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100018490(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = sub_10000D068();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "BDSWidgetTimelineController - reload timeline", v11, 2u);
  }

  uint64_t v6 = [WeakRetained timelineController];
  uint64_t v7 = [v6 reloadTimelineWithReason:@"bookdatastored"];

  if (v7)
  {
    uint64_t v8 = sub_10000D068();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1001E4484((uint64_t)v7, v8);
    }
  }
  id v9 = objc_retainBlock(v3);
  id v10 = v9;
  if (v9) {
    (*((void (**)(id))v9 + 2))(v9);
  }
}

id sub_100018660(uint64_t a1)
{
  return [*(id *)(a1 + 32) endTransaction];
}

void sub_1000189E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000189FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100018A0C(uint64_t a1)
{
}

void sub_100018A14(uint64_t a1)
{
}

void sub_100018B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100018B54(uint64_t a1)
{
}

void sub_100018D8C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;

  id v5 = sub_10000D068();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [*(id *)(a1 + 40) count];
    uint64_t v7 = *(void *)(a1 + 40);
    int v11 = 134218242;
    id v12 = v6;
    __int16 v13 = 2112;
    uint64_t v14 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Updating current widget data to %ld with: %@", (uint8_t *)&v11, 0x16u);
  }

  id v8 = [*(id *)(a1 + 48) copy];
  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = *(void **)(v9 + 24);
  *(void *)(v9 + 24) = v8;
}

void sub_100018F44(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  objc_msgSend(v1, "_moc_updateAndMonitorBookWidgetInfo");
}

void sub_100019F98(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) progressFetchedResultsController];

  id v4 = *(void **)(a1 + 32);
  if (v2 == v3)
  {
    int v11 = [*(id *)(a1 + 32) fetchedObjects];
    id v12 = sub_10000D068();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Recieved callback from FRC that reading progress has changed.", v21, 2u);
    }

    __int16 v13 = *(void **)(a1 + 40);
    uint64_t v14 = [v13 currentWidgetDatasByAssetID];
    LOBYTE(v13) = objc_msgSend(v13, "_moc_updateWidgetDatas:fromAssetDetails:", v14, v11);

    if (v13) {
      goto LABEL_11;
    }
  }
  else
  {
    id v5 = [*(id *)(a1 + 40) fetchedResultsController];

    if (v4 != v5) {
      goto LABEL_15;
    }
    id v6 = sub_10000D068();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Received callback from FRC that WidgetInfo list has changed.", buf, 2u);
    }

    id v7 = [*(id *)(a1 + 40) _newWidgetInfoFetchRequest];
    [v7 setFetchLimit:3];
    id v19 = 0;
    id v8 = [v7 execute:&v19];
    id v9 = v19;
    if (v8)
    {
      unsigned __int8 v10 = objc_msgSend(*(id *)(a1 + 40), "_moc_updateWidgetDataFromWidgetInfo:", v8);

      if ((v10 & 1) == 0) {
        goto LABEL_15;
      }
LABEL_11:
      uint64_t v15 = 1;
LABEL_17:
      [*(id *)(a1 + 40) _saveWidgetDatasWithWidgetDatasHaveChanged:v15];
      return;
    }
    id v16 = sub_10000D068();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_1001E4574((uint64_t)v9, v16);
    }
  }
LABEL_15:
  if ([*(id *)(a1 + 40) dataFileDataIsNil])
  {
    uint64_t v15 = 0;
    goto LABEL_17;
  }
  id v17 = sub_10000D068();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "No changes as result of FRC, not notifying widget.", v18, 2u);
  }
}

void sub_10001A2D4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  objc_msgSend(v1, "_moc_updateAndMonitorBookWidgetInfo");
}

void sub_10001A45C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  objc_msgSend(v1, "_moc_updateAndMonitorBookWidgetInfo");
}

NSDictionary *__cdecl sub_10001B198(id a1)
{
  return (NSDictionary *)+[BDSSyncUserDefaults _stateForLog];
}

void sub_10001BC68(id a1)
{
  qword_100297520 = objc_alloc_init(BDSServiceNotificationStoreDataFile);
  _objc_release_x1();
}

void sub_10001C100(id a1)
{
  uint64_t v1 = +[BUAppGroup books];
  id v2 = [v1 containerURL];

  uint64_t v3 = [v2 URLByAppendingPathComponent:@"Library/Application Support/bookdatastored" isDirectory:1];
  uint64_t v4 = [v3 URLByAppendingPathComponent:@"BDSServiceNotificationStoreData.plist"];
  id v5 = (void *)qword_100297528;
  qword_100297528 = v4;

  id v6 = +[NSFileManager defaultManager];
  id v10 = 0;
  unsigned __int8 v7 = [v6 createDirectoryAtURL:v3 withIntermediateDirectories:1 attributes:0 error:&v10];
  id v8 = v10;

  if ((v7 & 1) == 0)
  {
    id v9 = sub_1000063E8();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1001E491C();
    }
  }
}

void sub_10001C278(id a1)
{
  id v10 = +[BCCloudKitConfiguration configuration];
  uint64_t v1 = [[BCCloudKitController alloc] initWithConfiguration:v10];
  id v2 = (void *)qword_100297538;
  qword_100297538 = (uint64_t)v1;

  uint64_t v3 = [v10 containerIdentifier];
  uint64_t v4 = +[CKContainer containerWithIdentifier:v3];

  id v5 = [v10 appBundleIdentifier];
  [v4 setSourceApplicationBundleIdentifier:v5];

  id v6 = +[BDSSyncEngine shared];
  unsigned __int8 v7 = [v4 privateCloudDatabase];
  [v6 setDatabase:v7 config:v10];

  id v8 = [BCCloudKitTransactionManager alloc];
  id v9 = [(BCCloudKitTransactionManager *)v8 initWithCloudKitController:qword_100297538];
  [(id)qword_100297538 setTransactionManager:v9];
}

void sub_10001C3FC(id a1)
{
  uint64_t v1 = [BCCloudKitController alloc];
  id v2 = +[BCCloudKitSecureConfiguration configuration];
  uint64_t v3 = [(BCCloudKitController *)v1 initWithConfiguration:v2];
  uint64_t v4 = (void *)qword_100297548;
  qword_100297548 = (uint64_t)v3;

  id v5 = [BCCloudKitTransactionManager alloc];
  id v6 = [(BCCloudKitTransactionManager *)v5 initWithCloudKitController:qword_100297548];
  [(id)qword_100297548 setTransactionManager:v6];
}

void sub_10001C648(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - registerForSecureNotifications", buf, 2u);
  }

  uint64_t v3 = [*(id *)(a1 + 32) containerIdentifier];
  uint64_t v4 = +[CKContainer containerWithIdentifier:v3];

  id v5 = [*(id *)(a1 + 32) appBundleIdentifier];
  [v4 setSourceApplicationBundleIdentifier:v5];

  if (v4)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10001C79C;
    v9[3] = &unk_10025FE20;
    id v6 = *(id *)(a1 + 40);
    id v8 = *(void **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    id v10 = v6;
    uint64_t v13 = v7;
    id v11 = v8;
    id v12 = v4;
    [v12 accountStatusWithCompletionHandler:v9];
  }
}

void sub_10001C79C(uint64_t a1, uint64_t a2, void *a3)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001C870;
  block[3] = &unk_10025FDF8;
  id v9 = a3;
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v12 = a2;
  uint64_t v13 = v5;
  id v6 = *(NSObject **)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v11 = *(id *)(a1 + 48);
  id v7 = v9;
  dispatch_async(v6, block);
}

void sub_10001C870(uint64_t a1)
{
  switch(*(void *)(a1 + 56))
  {
    case 0:
      id v2 = sub_1000083A0();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        uint64_t v3 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138412290;
        uint64_t v22 = v3;
        _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - CKAccountStatusCouldNotDetermine: %@", buf, 0xCu);
      }

      uint64_t v4 = *(void **)(a1 + 32);
      if (v4)
      {
        uint64_t v5 = [v4 userInfo];
        id v6 = [v5 objectForKeyedSubscript:CKErrorRetryAfterKey];

        if (v6)
        {
          [v6 doubleValue];
          dispatch_time_t v8 = dispatch_time(0, (uint64_t)(v7 * 1000000000.0));
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_10001CBE4;
          block[3] = &unk_10025F9D0;
          void block[4] = *(void *)(a1 + 64);
          dispatch_after(v8, (dispatch_queue_t)&_dispatch_main_q, block);
          goto LABEL_19;
        }
      }
      id v6 = sub_1000083A0();
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
        goto LABEL_19;
      }
      uint64_t v17 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v22 = v17;
      uint64_t v13 = "BCCloudKitController - Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@";
      uint64_t v14 = v6;
      os_log_type_t v15 = OS_LOG_TYPE_INFO;
      uint32_t v16 = 12;
      goto LABEL_18;
    case 1:
      id v9 = sub_1000083A0();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "BCCloudKitController - Account Available", buf, 2u);
      }

      id v10 = *(void **)(a1 + 40);
      id v11 = [*(id *)(a1 + 48) privateCloudDatabase];
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_10001CC44;
      v18[3] = &unk_10025F700;
      uint64_t v12 = *(void *)(a1 + 48);
      id v19 = *(id *)(a1 + 40);
      [v10 connectUserTo:v11 container:v12 updateSubscription:1 completion:&stru_10025FDD0 subscriptionCompletion:v18];

      id v6 = v19;
      goto LABEL_19;
    case 2:
      id v6 = sub_1000083A0();
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
        goto LABEL_19;
      }
      *(_WORD *)long long buf = 0;
      uint64_t v13 = "BCCloudKitController - CKAccountStatusRestricted";
      goto LABEL_14;
    case 3:
      id v6 = sub_1000083A0();
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_INFO)) {
        goto LABEL_19;
      }
      *(_WORD *)long long buf = 0;
      uint64_t v13 = "BCCloudKitController - CKAccountStatusNoAccount";
LABEL_14:
      uint64_t v14 = v6;
      os_log_type_t v15 = OS_LOG_TYPE_INFO;
      break;
    case 4:
      id v6 = sub_1000083A0();
      if (!os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_19;
      }
      *(_WORD *)long long buf = 0;
      uint64_t v13 = "BCCloudKitController - CKAccountStatusTemporarilyUnavailable. Account Temporarily Unavailable";
      uint64_t v14 = v6;
      os_log_type_t v15 = OS_LOG_TYPE_DEFAULT;
      break;
    default:
      return;
  }
  uint32_t v16 = 2;
LABEL_18:
  _os_log_impl((void *)&_mh_execute_header, v14, v15, v13, buf, v16);
LABEL_19:
}

id sub_10001CBE4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) registerForSecureNotifications];
}

void sub_10001CBEC(id a1, BOOL a2, NSError *a3)
{
  uint64_t v3 = a3;
  if (v3)
  {
    uint64_t v4 = sub_1000083A0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E4984();
    }
  }
}

id sub_10001CC44(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - connectUserTo:container: subscription completed.", v4, 2u);
  }

  return [*(id *)(a1 + 32) detach];
}

void sub_10001D188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10001D1C4(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(result + 32) + 8) = a2;
  return result;
}

void sub_10001D1D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = sub_10000CE18();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      double v7 = [WeakRetained configuration];
      dispatch_time_t v8 = [v7 containerIdentifier];
      *(_DWORD *)long long buf = 138543362;
      uint32_t v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedAttachment", buf, 0xCu);
    }
    id v9 = [WeakRetained accessQueue];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _DWORD v12[2] = sub_10001D380;
    v12[3] = &unk_10025FE98;
    objc_copyWeak(&v14, v4);
    id v13 = v3;
    dispatch_async(v9, v12);

    objc_destroyWeak(&v14);
  }
  else
  {
    id v10 = objc_retainBlock(v3);
    id v11 = v10;
    if (v10) {
      (*((void (**)(id))v10 + 2))(v10);
    }
  }
}

void sub_10001D380(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "p_updateAttachment");

  id v3 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    uint64_t v4 = v3;
    v3[2]();
    id v3 = v4;
  }
}

void sub_10001D3EC(id a1, NSString *a2)
{
  id v2 = a2;
  id v3 = sub_1000083A0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_1001E49F0();
  }
}

void sub_10001D440(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v5 = sub_10000CE18();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [WeakRetained configuration];
      double v7 = [v6 containerIdentifier];
      *(_DWORD *)long long buf = 138543362;
      os_log_type_t v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedChangeAttachment", buf, 0xCu);
    }
    dispatch_time_t v8 = [WeakRetained accessQueue];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10001D5E4;
    v11[3] = &unk_10025FF28;
    id v12 = WeakRetained;
    id v13 = v3;
    dispatch_async(v8, v11);
  }
  else
  {
    id v9 = objc_retainBlock(v3);
    id v10 = v9;
    if (v9) {
      (*((void (**)(id))v9 + 2))(v9);
    }
  }
}

void sub_10001D5E4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10001D688;
  v3[3] = &unk_10025FF00;
  id v4 = v2;
  id v5 = *(id *)(a1 + 40);
  [v4 _updateAccountCacheWithCompletionBlock:v3];
}

void sub_10001D688(uint64_t a1, int a2)
{
  id v4 = sub_10000CE18();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [*(id *)(a1 + 32) configuration];
    id v6 = [v5 containerIdentifier];
    int v9 = 138543618;
    id v10 = v6;
    __int16 v11 = 1024;
    int v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedChangeAttachment hasChanged:%{BOOL}d", (uint8_t *)&v9, 0x12u);
  }
  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "p_accountReallyChangedWithCompletion:", *(void *)(a1 + 40));
  }
  else
  {
    id v7 = objc_retainBlock(*(id *)(a1 + 40));
    dispatch_time_t v8 = v7;
    if (v7) {
      (*((void (**)(id))v7 + 2))(v7);
    }
  }
}

void sub_10001D7A4(id a1, NSString *a2)
{
  id v2 = a2;
  id v3 = sub_10000CE18();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_1001E4A5C();
  }
}

unsigned __int8 *sub_10001D978(unsigned __int8 *result)
{
  *(unsigned char *)(*((void *)result + 4) + 11) = result[40];
  uint64_t v1 = *((void *)result + 4);
  int v2 = result[41];
  if (*(unsigned __int8 *)(v1 + 10) != v2)
  {
    id v3 = result;
    *(unsigned char *)(v1 + 10) = v2;
    [*((id *)result + 4) _reestablishSyncEngineSalt];
    id v4 = (void *)*((void *)v3 + 4);
    return (unsigned __int8 *)objc_msgSend(v4, "aq_requestUpdateAttachment");
  }
  return result;
}

id sub_10001DA98(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "aq_requestUpdateAttachmentWithCompletion:", *(void *)(a1 + 40));
}

void sub_10001DCB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001DCE0(uint64_t a1, char a2, char a3)
{
  id v6 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  dispatch_time_t v8 = [WeakRetained accessQueue];

  if (v8)
  {
    int v9 = [WeakRetained accessQueue];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10001DDFC;
    v11[3] = &unk_10025FFB8;
    objc_copyWeak(&v12, v6);
    char v13 = a2;
    char v14 = a3;
    dispatch_async(v9, v11);

    objc_destroyWeak(&v12);
  }
  else
  {
    id v10 = sub_1000083A0();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1001E4AC8(a1);
    }
  }
}

void sub_10001DDFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached:reachable:", *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41));
}

void sub_10001E254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001E288(uint64_t a1, char a2, char a3)
{
  id v6 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  dispatch_time_t v8 = [WeakRetained accessQueue];

  if (v8)
  {
    int v9 = [WeakRetained accessQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001E3B4;
    block[3] = &unk_100260030;
    objc_copyWeak(&v12, v6);
    void block[4] = *(void *)(a1 + 32);
    char v13 = a2;
    char v14 = a3;
    dispatch_async(v9, block);

    objc_destroyWeak(&v12);
  }
  else
  {
    id v10 = sub_1000083A0();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1001E4B68(a1);
    }
  }
}

void sub_10001E3B4(uint64_t a1)
{
  int v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained gettingAccountInfo]) {
    goto LABEL_25;
  }
  id v4 = sub_10000CE18();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = [*(id *)(a1 + 32) configuration];
    id v6 = [v5 containerIdentifier];
    if (*(unsigned char *)(a1 + 48)) {
      CFStringRef v7 = @"YES";
    }
    else {
      CFStringRef v7 = @"NO";
    }
    *(_DWORD *)long long buf = 138543874;
    uint64_t v31 = v6;
    __int16 v32 = 2114;
    CFStringRef v33 = v7;
    __int16 v34 = 1024;
    unsigned int v35 = [WeakRetained enableCloudSync];
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@ enableCloudSync:%{BOOL}d", buf, 0x1Cu);
  }
  if (!*(unsigned char *)(a1 + 48))
  {
    if ([WeakRetained enableCloudSync])
    {
      id v21 = sub_10000CE18();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v22 = [*(id *)(a1 + 32) configuration];
        id v23 = [v22 containerIdentifier];
        *(_DWORD *)long long buf = 138543362;
        uint64_t v31 = v23;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: getting account info", buf, 0xCu);
      }
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_10001E868;
      v28[3] = &unk_100260008;
      v28[4] = *(void *)(a1 + 32);
      objc_copyWeak(&v29, v2);
      objc_msgSend(WeakRetained, "p_getAccountInfoWithCompletion:", v28);
      objc_destroyWeak(&v29);
      goto LABEL_25;
    }
    if (!*(unsigned char *)(a1 + 48)) {
      goto LABEL_9;
    }
  }
  if ([WeakRetained enableCloudSync])
  {
LABEL_9:
    dispatch_time_t v8 = sub_10000CE18();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      int v9 = [*(id *)(a1 + 32) configuration];
      id v10 = [v9 containerIdentifier];
      *(_DWORD *)long long buf = 138543362;
      uint64_t v31 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.", buf, 0xCu);
    }
    if ([WeakRetained enableCloudSync])
    {
      __int16 v11 = [WeakRetained container];
      if (v11)
      {
        BOOL v12 = *(unsigned char *)(a1 + 48) == 0;

        if (!v12)
        {
          char v13 = sub_10000CE18();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
          {
            char v14 = [*(id *)(a1 + 32) configuration];
            os_log_type_t v15 = [v14 containerIdentifier];
            uint32_t v16 = [*(id *)(a1 + 32) configuration];
            uint64_t v17 = [v16 dbSubscriptionID];
            *(_DWORD *)long long buf = 138543618;
            uint64_t v31 = v15;
            __int16 v32 = 2114;
            CFStringRef v33 = v17;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@", buf, 0x16u);
          }
          uint64_t v18 = [WeakRetained transactionManager];
          id v19 = [*(id *)(a1 + 32) configuration];
          id v20 = [v19 dbSubscriptionID];
          [v18 signalFetchChangesTransaction:v20];
        }
      }
    }
    objc_msgSend(WeakRetained, "p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached:reachable:", *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49));
    goto LABEL_25;
  }
  id v24 = sub_10000CE18();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    id v25 = [*(id *)(a1 + 32) configuration];
    uint64_t v26 = [v25 containerIdentifier];
    *(_DWORD *)long long buf = 138543362;
    uint64_t v31 = v26;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller", buf, 0xCu);
  }
  [*(id *)(a1 + 32) setContainer:0];
  id v27 = [WeakRetained privateCloudDatabaseController];
  [v27 detach];

  objc_msgSend(WeakRetained, "p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached:reachable:", *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49));
LABEL_25:
}

void sub_10001E84C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10001E868(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = sub_10000CE18();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_1001E4C08(a1, v3);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(WeakRetained, "p_flushPendingRequestUpdateAttachmentCompletionBlocks");
  }
}

void sub_10001ED58(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (*(unsigned char *)(a1 + 48))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10001EE4C;
    v9[3] = &unk_100260058;
    id v6 = *(void **)(a1 + 32);
    id v11 = *(id *)(a1 + 40);
    uint64_t v12 = a2;
    id v10 = v5;
    [v6 accountInfoWithCompletionHandler:v9];
  }
  else
  {
    id v7 = objc_retainBlock(*(id *)(a1 + 40));
    dispatch_time_t v8 = v7;
    if (v7) {
      (*((void (**)(id, uint64_t, id, void, void))v7 + 2))(v7, a2, v5, 0, 0);
    }
  }
}

void sub_10001EE4C(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, void, void, id, id))v6 + 2))(v6, *(void *)(a1 + 48), *(void *)(a1 + 32), v8, v5);
  }
}

void sub_10001F1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001F1E8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v10 = [WeakRetained accessQueue];

  if (v10)
  {
    id v11 = [WeakRetained accessQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001F324;
    block[3] = &unk_1002600F8;
    objc_copyWeak(v16, (id *)(a1 + 40));
    v16[1] = a2;
    id v13 = v7;
    id v14 = v8;
    id v15 = *(id *)(a1 + 32);
    dispatch_async(v11, block);

    objc_destroyWeak(v16);
  }
}

void sub_10001F324(uint64_t a1)
{
  int v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained container];

    if (v5)
    {
      id v6 = [v4 privateCloudDatabaseController];
      id v7 = [v4 serviceMode];
      id v8 = [v4 configuration];
      int v9 = v8;
      if (v7) {
        [v8 serviceZones];
      }
      else {
      id v10 = [v8 appZones];
      }

      [v4 setCurrentStatus:*(void *)(a1 + 64)];
      id v11 = sub_10000CE18();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
        sub_1001E4D2C((uint64_t *)(a1 + 64), v11);
      }

      switch(*(void *)(a1 + 64))
      {
        case 0:
          uint64_t v12 = sub_1000083A0();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            id v13 = *(void **)(a1 + 32);
            *(_DWORD *)long long buf = 138543362;
            v50 = v13;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "BCCloudKitController - CKAccountStatusCouldNotDetermine: %{public}@", buf, 0xCu);
          }

          [v6 detach];
          [v4 setGettingAccountInfo:0];
          uint32_t v16 = *(void **)(a1 + 32);
          id v15 = (uint64_t *)(a1 + 32);
          id v14 = v16;
          if (v16
            && ([v14 userInfo],
                uint64_t v17 = objc_claimAutoreleasedReturnValue(),
                [v17 objectForKeyedSubscript:CKErrorRetryAfterKey],
                uint64_t v18 = objc_claimAutoreleasedReturnValue(),
                v17,
                v18))
          {
            [v18 doubleValue];
            dispatch_time_t v20 = dispatch_time(0, (uint64_t)(v19 * 1000000000.0));
            id v21 = [v4 accessQueue];
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472;
            block[2] = sub_10001F93C;
            block[3] = &unk_1002600A8;
            objc_copyWeak(&v48, v2);
            dispatch_after(v20, v21, block);

            objc_destroyWeak(&v48);
          }
          else
          {
            unsigned int v35 = sub_1000083A0();
            if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
              sub_1001E4CB8(v15, v35, v36);
            }
          }
          goto LABEL_30;
        case 1:
          uint64_t v22 = sub_1000083A0();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
          {
            id v23 = [v4 configuration];
            id v24 = [v23 containerIdentifier];
            *(_DWORD *)long long buf = 138543362;
            v50 = v24;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "BCCloudKitController - Account Available for %{public}@", buf, 0xCu);
          }
          id v25 = [v4 configuration];
          if ([v25 requiresDeviceToDeviceEncryption])
          {
            unsigned __int8 v26 = [*(id *)(a1 + 40) supportsDeviceToDeviceEncryption];

            if ((v26 & 1) == 0)
            {
              id v27 = sub_1000083A0();
              if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
              {
                id v28 = [v4 configuration];
                id v29 = [v28 containerIdentifier];
                *(_DWORD *)long long buf = 138543362;
                v50 = v29;
                _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.", buf, 0xCu);
              }
              goto LABEL_29;
            }
          }
          else
          {
          }
          uint64_t v37 = [v4 configuration];
          id v38 = [v37 shouldPerformDatabaseSubscriptionForServiceMode:v7];

          unsigned int v39 = [*(id *)(a1 + 48) privateCloudDatabase];
          uint64_t v40 = *(void *)(a1 + 48);
          v43[0] = _NSConcreteStackBlock;
          v43[1] = 3221225472;
          v43[2] = sub_10001F97C;
          v43[3] = &unk_1002600D0;
          id v44 = v6;
          id v45 = v10;
          id v46 = v4;
          v41[0] = _NSConcreteStackBlock;
          v41[1] = 3221225472;
          v41[2] = sub_10001FA7C;
          v41[3] = &unk_10025F700;
          id v42 = v46;
          [v44 connectUserTo:v39 container:v40 updateSubscription:v38 completion:v43 subscriptionCompletion:v41];

          goto LABEL_30;
        case 2:
          uint64_t v30 = sub_1000083A0();
          if (!os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_28;
          }
          uint64_t v31 = *(void **)(a1 + 32);
          *(_DWORD *)long long buf = 138543362;
          v50 = v31;
          __int16 v32 = "Account Restricted.  Not syncing anything.  Account status error=%{public}@";
          break;
        case 3:
          uint64_t v30 = sub_1000083A0();
          if (!os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_28;
          }
          CFStringRef v33 = *(void **)(a1 + 32);
          *(_DWORD *)long long buf = 138543362;
          v50 = v33;
          __int16 v32 = "Books isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@";
          break;
        case 4:
          uint64_t v30 = sub_1000083A0();
          if (!os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT)) {
            goto LABEL_28;
          }
          __int16 v34 = *(void **)(a1 + 32);
          *(_DWORD *)long long buf = 138543362;
          v50 = v34;
          __int16 v32 = "Account Temporarily Unavailable.  Not syncing anything.  Account status error=%{public}@";
          break;
        default:
          goto LABEL_30;
      }
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, v32, buf, 0xCu);
LABEL_28:

LABEL_29:
      [v6 detach];
      [v4 setGettingAccountInfo:0];
LABEL_30:
    }
  }
}

void sub_10001F93C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "p_getAccountInfo");
}

void sub_10001F97C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10001FA70;
    v9[3] = &unk_10025F700;
    id v10 = *(id *)(a1 + 48);
    [v6 attachToZones:v7 completion:v9];

    if (!v5) {
      goto LABEL_8;
    }
  }
  else
  {
    [*(id *)(a1 + 48) setGettingAccountInfo:0];
    if (!v5) {
      goto LABEL_8;
    }
  }
  id v8 = sub_1000083A0();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    sub_1001E4DA8();
  }

LABEL_8:
}

id sub_10001FA70(uint64_t a1)
{
  return [*(id *)(a1 + 32) setGettingAccountInfo:0];
}

void sub_10001FA7C(uint64_t a1)
{
  int v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) configuration];
    id v4 = [v3 containerIdentifier];
    int v5 = 138543362;
    id v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - connectUserToContainer subscription completed for %{public}@", (uint8_t *)&v5, 0xCu);
  }
}

id sub_10001FBDC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "aq_flushPendingGetAccountInfoCompletionBlocksWithWillRetryUpdateAttachment:", 0);
}

id sub_10001FF98(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) enableCloudSync];
  if (result)
  {
    [*(id *)(a1 + 32) _reestablishSyncEngineSaltIfNeeded];
    id v3 = *(void **)(a1 + 32);
    return objc_msgSend(v3, "aq_requestUpdateAttachment");
  }
  return result;
}

void sub_1000202EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_100020314(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  int v5 = WeakRetained;
  if (a2)
  {
    id v6 = [WeakRetained transactionManager];
    [v6 signalFetchChangesTransaction:*(void *)(a1 + 32)];
  }
  else
  {
    uint64_t v7 = [WeakRetained accessQueue];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1000203F0;
    v8[3] = &unk_10025F988;
    v8[4] = v5;
    id v9 = *(id *)(a1 + 40);
    dispatch_async(v7, v8);
  }
}

void sub_1000203F0(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  unsigned int v3 = [*(id *)(a1 + 32) enableCloudSync];
  id v4 = sub_10000CE18();
  int v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [*(id *)(a1 + 32) configuration];
      uint64_t v7 = [v6 containerIdentifier];
      uint64_t v8 = *(void *)(a1 + 40);
      int v9 = 138543618;
      id v10 = v7;
      __int16 v11 = 2114;
      uint64_t v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Asked to fetch changes for %{public}@ while detached - attempt attachment.", (uint8_t *)&v9, 0x16u);
    }
    objc_msgSend(*v2, "aq_requestUpdateAttachment");
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E4E14(v2, a1, v5);
    }
  }
}

void sub_10002051C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained enableCloudSync]) {
    [WeakRetained _reestablishSyncEngineSaltIfNeeded];
  }
}

void sub_10002074C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
}

void sub_10002076C(id *a1)
{
  uint64_t v2 = a1 + 7;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  id v4 = [WeakRetained container];

  BOOL v5 = v4 == 0;
  id v6 = sub_10000CE18();
  uint64_t v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      sub_1001E4F88(v7);
    }

    id v11 = objc_retainBlock(a1[5]);
    uint64_t v12 = v11;
    if (v11) {
      (*((void (**)(id, uint64_t))v11 + 2))(v11, 1);
    }
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = [a1[4] currentUserIDName];
      *(_DWORD *)long long buf = 138412546;
      uint64_t v18 = v8;
      __int16 v19 = 2048;
      id v20 = [WeakRetained currentStatus];
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "_updateAccountCacheWithTimeout fetchUserRecordIDWithCompletionHandler currentUserIDName:%@ status:%ld ", buf, 0x16u);
    }
    int v9 = [WeakRetained container];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10002097C;
    v14[3] = &unk_1002601E8;
    objc_copyWeak(&v16, v2);
    v14[4] = a1[4];
    long long v13 = *(_OWORD *)(a1 + 5);
    id v10 = (id)v13;
    long long v15 = v13;
    [v9 fetchUserRecordIDWithCompletionHandler:v14];

    objc_destroyWeak(&v16);
  }
}

void sub_100020960(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10002097C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v8 = [WeakRetained accessQueue];

  if (v8)
  {
    int v9 = [WeakRetained accessQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100020B1C;
    block[3] = &unk_1002601C0;
    id v16 = v5;
    id v10 = WeakRetained;
    uint64_t v11 = *(void *)(a1 + 32);
    id v17 = v10;
    uint64_t v18 = v11;
    uint64_t v21 = *(void *)(a1 + 48);
    id v19 = v6;
    objc_copyWeak(&v22, (id *)(a1 + 56));
    id v20 = *(id *)(a1 + 40);
    dispatch_async(v9, block);

    objc_destroyWeak(&v22);
    uint64_t v12 = v16;
  }
  else
  {
    long long v13 = sub_10000CE18();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_1001E4FCC(v13);
    }

    id v14 = objc_retainBlock(*(id *)(a1 + 40));
    uint64_t v12 = v14;
    if (v14) {
      (*((void (**)(id, void))v14 + 2))(v14, 0);
    }
  }
}

void sub_100020B1C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) recordName];
  unsigned int v3 = [*(id *)(a1 + 40) currentUserIDName];
  unsigned __int8 v4 = [v2 isEqualToString:v3];

  if ((v4 & 1) == 0)
  {
    id v10 = sub_10000CE18();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = [*(id *)(a1 + 48) configuration];
      uint64_t v12 = [v11 containerIdentifier];
      long long v13 = [*(id *)(a1 + 48) currentUserIDName];
      id v14 = [*(id *)(a1 + 32) recordName];
      *(_DWORD *)long long buf = 138543874;
      __int16 v34 = v12;
      __int16 v35 = 2112;
      uint64_t v36 = v13;
      __int16 v37 = 2112;
      id v38 = v14;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "(%{public}@) currentUserIDName from:%@ to:%@ has changed! ", buf, 0x20u);
    }
    long long v15 = [*(id *)(a1 + 32) recordName];
    [*(id *)(a1 + 40) setCurrentUserIDName:v15];

    goto LABEL_13;
  }
  id v5 = [*(id *)(a1 + 56) domain];
  unsigned int v6 = [v5 isEqualToString:CKErrorDomain];

  if (!v6) {
    goto LABEL_14;
  }
  if ([*(id *)(a1 + 56) code] != (id)9)
  {
    id v16 = sub_10000CE18();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = [*(id *)(a1 + 48) configuration];
      uint64_t v18 = [v17 containerIdentifier];
      id v19 = [*(id *)(a1 + 48) currentUserIDName];
      *(_DWORD *)long long buf = 138543618;
      __int16 v34 = v18;
      __int16 v35 = 2112;
      uint64_t v36 = v19;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "(%{public}@) Unknown error while fetching account. Assuming we had a change with currentUserIDName:%@ ", buf, 0x16u);
    }
LABEL_13:
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
    goto LABEL_14;
  }
  [*(id *)(a1 + 40) setCurrentUserIDName:0];
  [*(id *)(a1 + 40) setCurrentStatus:0];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
  uint64_t v7 = sub_10000CE18();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = [*(id *)(a1 + 48) configuration];
    int v9 = [v8 containerIdentifier];
    *(_DWORD *)long long buf = 138543362;
    __int16 v34 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "(%{public}@) CKErrorNotAuthenticated  resetting current account values ", buf, 0xCu);
  }
LABEL_14:
  uint64_t v20 = a1 + 72;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24))
  {
    uint64_t v21 = sub_10000CE18();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG)) {
      sub_1001E5010(a1, a1 + 72, v21);
    }

    id v22 = objc_retainBlock(*(id *)(a1 + 64));
    id v23 = v22;
    if (v22) {
      (*((void (**)(id, void))v22 + 2))(v22, *(unsigned __int8 *)(*(void *)(*(void *)v20 + 8) + 24));
    }
  }
  else
  {
    id v24 = [*(id *)(a1 + 40) container];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_100020F74;
    v29[3] = &unk_100260198;
    objc_copyWeak(&v32, (id *)(a1 + 80));
    int8x16_t v27 = *(int8x16_t *)(a1 + 40);
    id v25 = (id)v27.i64[0];
    int8x16_t v30 = vextq_s8(v27, v27, 8uLL);
    long long v28 = *(_OWORD *)(a1 + 64);
    id v26 = (id)v28;
    long long v31 = v28;
    [v24 accountStatusWithCompletionHandler:v29];

    objc_destroyWeak(&v32);
  }
}

void sub_100020F58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100020F74(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v5 = [WeakRetained accessQueue];

  if (v5)
  {
    unsigned int v6 = [WeakRetained accessQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000210AC;
    block[3] = &unk_100260170;
    uint64_t v19 = a2;
    id v7 = WeakRetained;
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = *(void **)(a1 + 40);
    id v15 = v7;
    uint64_t v16 = v8;
    id v17 = v9;
    long long v13 = *(_OWORD *)(a1 + 48);
    id v10 = (id)v13;
    long long v18 = v13;
    dispatch_async(v6, block);
  }
  else
  {
    id v11 = objc_retainBlock(*(id *)(a1 + 48));
    uint64_t v12 = v11;
    if (v11) {
      (*((void (**)(id, void))v11 + 2))(v11, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24));
    }
  }
}

void sub_1000210AC(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 72);
  id v3 = *(id *)(a1 + 72);
  id v4 = [*(id *)(a1 + 32) currentStatus];
  id v5 = sub_10000CE18();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG);
  if (v3 == v4)
  {
    if (v6) {
      sub_1001E50E0(a1);
    }
  }
  else
  {
    if (v6) {
      sub_1001E519C(a1, v2, v5);
    }

    [*(id *)(a1 + 32) setCurrentStatus:*(void *)(a1 + 72)];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
  }
  id v7 = objc_retainBlock(*(id *)(a1 + 56));
  uint64_t v8 = v7;
  if (v7) {
    (*((void (**)(id, void))v7 + 2))(v7, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8) + 24));
  }
}

void sub_10002158C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000215B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained accessQueue];

  if (v3)
  {
    id v4 = [WeakRetained accessQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000216CC;
    block[3] = &unk_10025F700;
    int v9 = WeakRetained;
    dispatch_async(v4, block);

    id v5 = v9;
  }
  else
  {
    id v5 = sub_1000083A0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1001E5500(v5);
    }
  }

  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id))v6 + 2))(v6);
  }
}

id sub_1000216CC(uint64_t a1)
{
  [*(id *)(a1 + 32) setContainer:0];
  objc_msgSend(*(id *)(a1 + 32), "aq_setGettingAccountInfo:willRetryUpdateAttachment:", 0, 1);
  uint64_t v2 = *(void **)(a1 + 32);
  return objc_msgSend(v2, "aq_requestUpdateAttachment");
}

void sub_1000218C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000218F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained accessQueue];

  if (v3)
  {
    id v4 = [WeakRetained accessQueue];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000219BC;
    v7[3] = &unk_10025F988;
    id v5 = WeakRetained;
    uint64_t v6 = *(void *)(a1 + 32);
    id v8 = v5;
    uint64_t v9 = v6;
    dispatch_async(v4, v7);
  }
}

id sub_1000219BC(uint64_t a1)
{
  [*(id *)(a1 + 32) setContainer:0];
  objc_msgSend(*(id *)(a1 + 32), "aq_setGettingAccountInfo:willRetryUpdateAttachment:", 0, 1);
  [*(id *)(a1 + 40) _reestablishSyncEngineSalt];
  uint64_t v2 = *(void **)(a1 + 32);
  return objc_msgSend(v2, "aq_requestUpdateAttachment");
}

void sub_100021C3C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100021C5C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_100021C74(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_100022108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100022144(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_unarchive");
}

void sub_10002214C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v5 = sub_1000083A0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = [WeakRetained containerIdentifier];
      *(_DWORD *)long long buf = 138412290;
      id v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "_coalescedArchive (%@)", buf, 0xCu);
    }
    id v7 = [WeakRetained accessQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100022300;
    block[3] = &unk_100260278;
    objc_copyWeak(&v13, (id *)(a1 + 40));
    id v11 = *(id *)(a1 + 32);
    id v12 = v3;
    dispatch_async(v7, block);

    objc_destroyWeak(&v13);
  }
  else
  {
    id v8 = objc_retainBlock(v3);
    uint64_t v9 = v8;
    if (v8) {
      (*((void (**)(id))v8 + 2))(v8);
    }
  }
}

void sub_100022300(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v2 = objc_msgSend(WeakRetained, "p_archiveToData");
    [v2 writeToURL:*(void *)(a1 + 32) atomically:1];
  }
  id v3 = objc_retainBlock(*(id *)(a1 + 40));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id))v3 + 2))(v3);
  }
}

void sub_100022390(id a1, NSString *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_1000083A0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 138543362;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "did not call completion after 10s in %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10002243C(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v6 = sub_1000083A0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = [WeakRetained containerIdentifier];
      *(_DWORD *)long long buf = 138412290;
      id v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "_coalescedZoneFetch (%@)", buf, 0xCu);
    }
    id v8 = [WeakRetained accessQueue];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1000225DC;
    v11[3] = &unk_10025FE98;
    objc_copyWeak(&v13, v4);
    id v12 = v3;
    dispatch_async(v8, v11);

    objc_destroyWeak(&v13);
  }
  else
  {
    id v9 = objc_retainBlock(v3);
    uint64_t v10 = v9;
    if (v9) {
      (*((void (**)(id))v9 + 2))(v9);
    }
  }
}

void sub_1000225DC(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v4 = WeakRetained;
  if (WeakRetained
    && ([WeakRetained database], uint64_t v5 = objc_claimAutoreleasedReturnValue(), v5, v5))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100022710;
    v8[3] = &unk_1002602E8;
    id v9 = v4;
    objc_copyWeak(&v11, v2);
    id v10 = *(id *)(a1 + 32);
    objc_msgSend(v9, "p_fetchZoneChanges:", v8);

    objc_destroyWeak(&v11);
  }
  else
  {
    id v6 = objc_retainBlock(*(id *)(a1 + 32));
    id v7 = v6;
    if (v6) {
      (*((void (**)(id))v6 + 2))(v6);
    }
  }
}

void sub_1000226FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100022710(id *a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int v4 = sub_1000083A0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E5544();
    }
  }
  uint64_t v5 = [a1[4] accessQueue];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10002280C;
  v6[3] = &unk_10025FE98;
  objc_copyWeak(&v8, a1 + 6);
  id v7 = a1[5];
  dispatch_async(v5, v6);

  objc_destroyWeak(&v8);
}

void sub_10002280C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained
    && ([WeakRetained attachedToContainer] & 1) == 0
    && [v3 fetchRecordZoneChangesSuccess])
  {
    int v4 = [v3 database];

    uint64_t v5 = sub_1000083A0();
    id v6 = v5;
    if (v4)
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = [v3 containerIdentifier];
        int v10 = 138412290;
        id v11 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - attached to container: %@", (uint8_t *)&v10, 0xCu);
      }
      [v3 setAttachedToContainer:1];
      objc_msgSend(v3, "p_informObserversOfAttachmentChange");
    }
    else
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        sub_1001E55AC(v3, v6);
      }
    }
  }
  id v8 = objc_retainBlock(*(id *)(a1 + 32));
  id v9 = v8;
  if (v8) {
    (*((void (**)(id))v8 + 2))(v8);
  }
}

void sub_10002296C(id a1, NSString *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_1000083A0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_1001E5640();
  }
}

void sub_100022BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100022BE8(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100022CEC;
    v6[3] = &unk_100260358;
    objc_copyWeak(&v8, v2);
    id v7 = *(id *)(a1 + 32);
    objc_msgSend(WeakRetained, "p_fetchDatabaseChanges:", v6);

    objc_destroyWeak(&v8);
  }
  else
  {
    id v4 = objc_retainBlock(*(id *)(a1 + 32));
    uint64_t v5 = v4;
    if (v4) {
      (*((void (**)(id, void))v4 + 2))(v4, 0);
    }
  }
}

void sub_100022CD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100022CEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained)
  {
    if (!v3)
    {
      id v11 = [WeakRetained accessQueue];
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      _DWORD v12[2] = sub_100022E5C;
      v12[3] = &unk_10025FE98;
      objc_copyWeak(&v14, (id *)(a1 + 40));
      id v13 = *(id *)(a1 + 32);
      dispatch_async(v11, v12);

      objc_destroyWeak(&v14);
      goto LABEL_12;
    }
    id v6 = sub_1000083A0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001E56A8(v5);
    }

    id v7 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    id v8 = v7;
    if (v7)
    {
      id v9 = v7[2];
LABEL_9:
      v9();
    }
  }
  else
  {
    int v10 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    id v8 = v10;
    if (v10)
    {
      id v9 = v10[2];
      goto LABEL_9;
    }
  }

LABEL_12:
}

void sub_100022E5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_1000083A0();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = [WeakRetained containerIdentifier];
      uint64_t v5 = [WeakRetained changedRecordZoneIDs];
      id v6 = [v5 allObjects];
      *(void *)long long buf = _NSConcreteStackBlock;
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_100030300;
      id v15 = &unk_100260BC0;
      id v16 = objc_alloc_init((Class)NSMutableArray);
      id v7 = v16;
      [v6 enumerateObjectsUsingBlock:buf];
      id v8 = [v7 componentsJoinedByString:@","];

      *(_DWORD *)long long buf = 138543618;
      *(void *)&uint8_t buf[4] = v4;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v8;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@", buf, 0x16u);
    }
    id v9 = [WeakRetained coalescedZoneFetch];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _DWORD v12[2] = sub_1000230A8;
    v12[3] = &unk_100260330;
    id v13 = *(id *)(a1 + 32);
    [v9 signalWithCompletion:v12];
  }
  else
  {
    id v10 = objc_retainBlock(*(id *)(a1 + 32));
    id v11 = v10;
    if (v10) {
      (*((void (**)(id, void))v10 + 2))(v10, 0);
    }
  }
}

void sub_1000230A8(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, void))v1 + 2))(v1, 0);
    id v1 = v2;
  }
}

void sub_1000231F8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10002320C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [WeakRetained database];

  id v4 = sub_1000083A0();
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1001E5744(WeakRetained, v5);
    }

    id v6 = [WeakRetained database];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _DWORD v12[2] = sub_1000233C0;
    v12[3] = &unk_100260380;
    uint64_t v7 = *(void *)(a1 + 32);
    id v13 = *(id *)(a1 + 40);
    [v6 fetchRecordWithID:v7 completionHandler:v12];

    id v8 = v13;
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      unsigned int v9 = [WeakRetained attachedToContainer];
      CFStringRef v10 = @"NO";
      if (v9) {
        CFStringRef v10 = @"YES";
      }
      *(_DWORD *)long long buf = 138412290;
      CFStringRef v15 = v10;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@", buf, 0xCu);
    }

    id v11 = objc_retainBlock(*(id *)(a1 + 40));
    id v8 = v11;
    if (v11) {
      (*((void (**)(id, void))v11 + 2))(v11, 0);
    }
  }
}

void sub_1000233C0(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  uint64_t v5 = (void (**)(id, void))objc_retainBlock(*(id *)(a1 + 32));
  if (v5)
  {
    if (a3) {
      id v6 = 0;
    }
    else {
      id v6 = v7;
    }
    ((void (**)(id, id))v5)[2](v5, v6);
  }
}

void sub_100023520(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) containerIdentifier];
  if (v2
    && (id v3 = (void *)v2,
        [*(id *)(a1 + 32) containerIdentifier],
        id v4 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v5 = [v4 isEqualToString:*(void *)(a1 + 40)],
        v4,
        v3,
        (v5 & 1) == 0))
  {
    id v7 = sub_1000083A0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [*(id *)(a1 + 32) containerIdentifier];
      uint64_t v9 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138543618;
      id v16 = v8;
      __int16 v17 = 2114;
      uint64_t v18 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@", buf, 0x16u);
    }
    if (!*(unsigned char *)(a1 + 56))
    {
      CFStringRef v10 = [*(id *)(a1 + 32) containerIdentifier];
      id v11 = +[CKContainer containerWithIdentifier:v10];

      objc_msgSend(*(id *)(a1 + 32), "p_unsubscribeToContainer:", v11);
    }
    [*(id *)(a1 + 32) setHasSubscription:0];
    [*(id *)(a1 + 32) setServerChangeToken:0];
    [*(id *)(a1 + 32) setContainerIdentifier:0];
    objc_msgSend(*(id *)(a1 + 32), "p_scheduleArchiveWithCompletion:", &stru_1002603A0);
    id v12 = objc_retainBlock(*(id *)(a1 + 48));
    id v13 = v12;
    if (v12) {
      (*((void (**)(id, uint64_t))v12 + 2))(v12, 1);
    }
  }
  else
  {
    id v6 = objc_retainBlock(*(id *)(a1 + 48));
    if (v6)
    {
      id v14 = v6;
      (*((void (**)(id, void))v6 + 2))(v6, 0);
      id v6 = v14;
    }
  }
}

void sub_100023730(id a1)
{
  uint64_t v1 = sub_1000083A0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (willAttachToContainer)", v2, 2u);
  }
}

void sub_100023944(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v5 || v6)
  {
    id v11 = sub_1000083A0();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1001E57E8();
    }

    id v12 = objc_retainBlock(*(id *)(a1 + 64));
    id v8 = v12;
    if (v12) {
      ((void (*)(NSObject *, void, void *))v12[2].isa)(v12, 0, v7);
    }
  }
  else
  {
    id v8 = [*(id *)(a1 + 32) accessQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100023AC0;
    block[3] = &unk_100260410;
    id v14 = *(id *)(a1 + 40);
    id v15 = v5;
    id v9 = *(id *)(a1 + 48);
    uint64_t v10 = *(void *)(a1 + 32);
    id v16 = v9;
    uint64_t v17 = v10;
    char v20 = *(unsigned char *)(a1 + 72);
    id v18 = *(id *)(a1 + 56);
    id v19 = *(id *)(a1 + 64);
    dispatch_async(v8, block);
  }
}

void sub_100023AC0(uint64_t a1)
{
  uint64_t v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) containerIdentifier];
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    int v12 = 138543874;
    id v13 = v3;
    __int16 v14 = 2114;
    uint64_t v15 = v4;
    __int16 v16 = 2114;
    uint64_t v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - user recordID: %{public}@ database:%{public}@", (uint8_t *)&v12, 0x20u);
  }
  objc_storeStrong((id *)(*(void *)(a1 + 56) + 16), *(id *)(a1 + 48));
  objc_storeStrong((id *)(*(void *)(a1 + 56) + 24), *(id *)(a1 + 32));
  *(unsigned char *)(*(void *)(a1 + 56) + 13) = 0;
  id v6 = [*(id *)(a1 + 32) containerIdentifier];
  id v7 = [v6 copy];
  uint64_t v8 = *(void *)(a1 + 56);
  id v9 = *(void **)(v8 + 80);
  *(void *)(v8 + 80) = v7;

  objc_storeStrong((id *)(*(void *)(a1 + 56) + 88), *(id *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 56), "p_scheduleArchiveWithCompletion:", &stru_1002603E8);
  if (*(unsigned char *)(a1 + 80)) {
    objc_msgSend(*(id *)(a1 + 56), "p_subscribeWithCompletion:", *(void *)(a1 + 64));
  }
  id v10 = objc_retainBlock(*(id *)(a1 + 72));
  id v11 = v10;
  if (v10) {
    (*((void (**)(id, uint64_t, void))v10 + 2))(v10, 1, 0);
  }
}

void sub_100023C40(id a1)
{
  uint64_t v1 = sub_1000083A0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (connectUserTo)", v2, 2u);
  }
}

void sub_100023DF0(uint64_t a1)
{
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  _DWORD v12[2] = sub_100023F58;
  v12[3] = &unk_10025FF28;
  id v13 = [[BDSOSTransaction alloc] initWithTransactionName:"attachToZone"];
  id v14 = *(id *)(a1 + 48);
  uint64_t v2 = v13;
  id v3 = objc_retainBlock(v12);
  uint64_t v4 = [*(id *)(a1 + 32) accessQueue];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100023FB8;
  v8[3] = &unk_1002604D8;
  uint64_t v5 = *(void **)(a1 + 40);
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v5;
  id v10 = v4;
  id v11 = v3;
  id v6 = v3;
  id v7 = v4;
  dispatch_async(v7, v8);
}

void sub_100023F58(uint64_t a1)
{
  [*(id *)(a1 + 32) endTransaction];
  uint64_t v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    v2[2]();
    uint64_t v2 = v3;
  }
}

void sub_100023FB8(uint64_t a1)
{
  uint64_t v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) containerIdentifier];
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138412546;
    id v25 = v3;
    __int16 v26 = 2112;
    uint64_t v27 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudKitDatabaseController (%@)] 1. attachToZones Creating Record Zones - zones:%@", buf, 0x16u);
  }
  id v5 = objc_alloc_init((Class)NSMutableArray);
  id v6 = *(void **)(a1 + 40);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_1000241CC;
  v22[3] = &unk_100260460;
  id v7 = v5;
  id v23 = v7;
  [v6 enumerateObjectsUsingBlock:v22];
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
  id v10 = v7;

  id v11 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v12 = *(void *)(a1 + 32);
  id v13 = *(void **)(v12 + 112);
  *(void *)(v12 + 112) = v11;

  id v14 = *(void **)(a1 + 32);
  uint64_t v15 = [v14 desiredRecordZoneIDs];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100024250;
  v18[3] = &unk_1002604B0;
  id v16 = *(id *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 32);
  id v19 = v16;
  uint64_t v20 = v17;
  id v21 = *(id *)(a1 + 56);
  objc_msgSend(v14, "p_createRecordZones:completionHandler:", v15, v18);
}

void sub_1000241CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)CKRecordZoneID) initWithZoneName:v3 ownerName:CKCurrentUserDefaultName];

  [*(id *)(a1 + 32) addObject:v4];
}

void sub_100024250(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (!v3)
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_10002447C;
    v15[3] = &unk_10025FF28;
    uint64_t v8 = *(NSObject **)(a1 + 32);
    id v9 = *(void **)(a1 + 48);
    v15[4] = *(void *)(a1 + 40);
    id v16 = v9;
    dispatch_async(v8, v15);

    goto LABEL_14;
  }
  if (!sub_100024698(v3))
  {
    id v10 = sub_100030448(@"BDSCloudKitClientError", 2002, v4);
    if (sub_100024878(v4))
    {
      int v11 = 2006;
    }
    else
    {
      if (!sub_100024A84(v4))
      {
        id v13 = sub_1000083A0();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        {
          id v14 = [*(id *)(a1 + 40) containerIdentifier];
          *(_DWORD *)long long buf = 138412546;
          id v18 = v14;
          __int16 v19 = 2112;
          uint64_t v20 = v4;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "[BCCloudKitDatabaseController (%@)] attachToZones creating record zones failed, ERROR:%@", buf, 0x16u);
        }
        goto LABEL_13;
      }
      int v11 = 2007;
    }
    uint64_t v12 = sub_100030448(@"BDSCloudKitClientError", v11, v4);

    id v10 = (void *)v12;
LABEL_13:
    [*(id *)(a1 + 40) zonesTemporarilyUnreadableWithError:v10 completion:*(void *)(a1 + 48)];

    goto LABEL_14;
  }
  id v5 = [v4 userInfo];
  id v6 = [v5 objectForKeyedSubscript:CKPartialErrorsByItemIDKey];
  id v7 = [v6 allKeys];

  [*(id *)(a1 + 40) zonesUnreadableDueToMissingD2DEncryptionIdentity:v7 completion:*(void *)(a1 + 48)];
LABEL_14:
}

void sub_10002447C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10002450C;
  v2[3] = &unk_100260488;
  v2[4] = v1;
  id v3 = *(id *)(a1 + 40);
  objc_msgSend(v1, "p_createRecordIDSaltWithCompletion:", v2);
}

void sub_10002450C(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a1 + 32);
  if (a2)
  {
    [*(id *)(a1 + 32) detachWithError:a2 completion:0];
    id v4 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    if (v4)
    {
      id v5 = v4;
      v4[2]();
      id v4 = v5;
    }
  }
  else
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000245F4;
    v6[3] = &unk_100260488;
    void v6[4] = v3;
    id v7 = *(id *)(a1 + 40);
    [v3 fetchChangesWithCompletion:v6];
  }
}

void sub_1000245F4(uint64_t a1, void *a2)
{
  id v6 = a2;
  if (v6)
  {
    id v3 = sub_100030448(@"BDSCloudKitClientError", 2004, v6);
    [*(id *)(a1 + 32) detachWithError:v3 completion:0];
  }
  id v4 = objc_retainBlock(*(id *)(a1 + 40));
  id v5 = v4;
  if (v4) {
    (*((void (**)(id))v4 + 2))(v4);
  }
}

uint64_t sub_100024698(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  unsigned int v3 = [v2 isEqualToString:CKErrorDomain];

  if (!v3) {
    goto LABEL_17;
  }
  if ([v1 code] == (id)112)
  {
    uint64_t v4 = 1;
    goto LABEL_18;
  }
  if ([v1 code] != (id)2)
  {
LABEL_17:
    uint64_t v4 = 0;
    goto LABEL_18;
  }
  id v5 = [v1 userInfo];
  id v6 = [v5 objectForKey:CKPartialErrorsByItemIDKey];

  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v7 = objc_msgSend(v6, "allValues", 0);
  id v8 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v17;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        id v13 = [v12 domain];
        if ([v13 isEqualToString:CKErrorDomain])
        {
          id v14 = [v12 code];

          if (v14 == (id)112)
          {
            uint64_t v4 = 1;
            goto LABEL_19;
          }
        }
        else
        {
        }
      }
      id v9 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v9);
  }
  uint64_t v4 = 0;
LABEL_19:

LABEL_18:
  return v4;
}

BOOL sub_100024878(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  unsigned int v3 = [v2 isEqualToString:CKErrorDomain];

  if (v3)
  {
    id v4 = [v1 code];
    int v5 = 1;
    if (v4 != (id)111 && v4 != (id)5008)
    {
      if ([v1 code] == (id)2)
      {
        id v6 = [v1 userInfo];
        id v7 = [v6 objectForKey:CKPartialErrorsByItemIDKey];

        long long v23 = 0u;
        long long v24 = 0u;
        long long v21 = 0u;
        long long v22 = 0u;
        id v8 = [v7 allValues];
        id v9 = [v8 countByEnumeratingWithState:&v21 objects:v25 count:16];
        if (v9)
        {
          id v10 = v9;
          uint64_t v20 = v7;
          uint64_t v11 = *(void *)v22;
          while (2)
          {
            for (i = 0; i != v10; i = (char *)i + 1)
            {
              if (*(void *)v22 != v11) {
                objc_enumerationMutation(v8);
              }
              id v13 = *(void **)(*((void *)&v21 + 1) + 8 * i);
              id v14 = [v13 code];
              uint64_t v15 = [v13 domain];
              unsigned int v16 = [v15 isEqualToString:CKErrorDomain];

              if (v16)
              {
                if (v14 == (id)111 || v14 == (id)5008)
                {
                  int v5 = 1;
                  goto LABEL_21;
                }
              }
            }
            id v10 = [v8 countByEnumeratingWithState:&v21 objects:v25 count:16];
            if (v10) {
              continue;
            }
            break;
          }
          int v5 = 0;
LABEL_21:
          id v7 = v20;
        }
        else
        {
          int v5 = 0;
        }
      }
      else
      {
        int v5 = 0;
      }
    }
    BOOL v18 = v5 != 0;
  }
  else
  {
    BOOL v18 = 0;
  }

  return v18;
}

BOOL sub_100024A84(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 domain];
  unsigned int v3 = [v2 isEqualToString:CKErrorDomain];

  if (v3)
  {
    id v4 = [v1 code];
    if (v4 == (id)2)
    {
      id v7 = [v1 userInfo];
      id v8 = [v7 objectForKey:CKPartialErrorsByItemIDKey];

      long long v21 = 0u;
      long long v22 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      id v9 = objc_msgSend(v8, "allValues", 0);
      id v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = *(void *)v20;
        while (2)
        {
          for (i = 0; i != v11; i = (char *)i + 1)
          {
            if (*(void *)v20 != v12) {
              objc_enumerationMutation(v9);
            }
            id v14 = *(void **)(*((void *)&v19 + 1) + 8 * i);
            id v15 = [v14 code];
            unsigned int v16 = [v14 domain];
            unsigned int v17 = [v16 isEqualToString:CKErrorDomain];

            if (v17 && v15 == (id)36)
            {
              BOOL v5 = 1;
              goto LABEL_16;
            }
          }
          id v11 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
          if (v11) {
            continue;
          }
          break;
        }
      }
      BOOL v5 = 0;
LABEL_16:
    }
    else
    {
      BOOL v5 = v4 == (id)36;
    }
    BOOL v6 = v5;
  }
  else
  {
    BOOL v6 = 0;
  }

  return v6;
}

void sub_100024D44(uint64_t a1)
{
  uint64_t v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    unsigned int v3 = [*(id *)(a1 + 32) containerIdentifier];
    uint64_t v4 = *(void *)(a1 + 40);
    int v13 = 138543618;
    id v14 = v3;
    __int16 v15 = 2112;
    uint64_t v16 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - Detaching Container:%{public}@, ERROR:%@", (uint8_t *)&v13, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  BOOL v6 = *(void **)(v5 + 16);
  *(void *)(v5 + 16) = 0;

  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(v7 + 24);
  *(void *)(v7 + 24) = 0;

  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = *(void **)(v9 + 112);
  *(void *)(v9 + 112) = 0;

  *(unsigned char *)(*(void *)(a1 + 32) + 13) = 0;
  objc_msgSend(*(id *)(a1 + 32), "p_informObserversOfAttachmentChange");
  id v11 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v12 = v11;
  if (v11) {
    (*((void (**)(id))v11 + 2))(v11);
  }
}

void sub_100024F2C(uint64_t a1)
{
  unsigned int v2 = +[BDSReachability isOffline];
  unsigned int v3 = (void (**)(id, id, void))objc_retainBlock(*(id *)(a1 + 40));
  if (v3) {
    v3[2](v3, [*(id *)(a1 + 32) attachedToContainer], v2 ^ 1);
  }
}

void sub_1000250B0(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = [objc_alloc((Class)CKRecordZoneID) initWithZoneName:*(void *)(a1 + 32) ownerName:CKCurrentUserDefaultName];
    uint64_t v3 = *(void *)(a1 + 48);
    if (v2)
    {
      id v8 = v2;
      uint64_t v4 = [*(id *)(a1 + 40) recordZones];
      uint64_t v5 = [v4 objectForKeyedSubscript:v8];
      BOOL v6 = [v5 recordZone];
      (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v6);

      return;
    }
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 48);
  }
  uint64_t v7 = *(void (**)(uint64_t, void))(v3 + 16);
  v7(v3, 0);
}

void sub_1000255EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002562C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = WeakRetained;
  if (v5 && WeakRetained)
  {
    id v8 = sub_1000083A0();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      id v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "CKModifySubscriptionsOperation failed: %{public}@", buf, 0xCu);
    }

    uint64_t v9 = [v5 userInfo];
    id v10 = [v9 objectForKeyedSubscript:CKErrorRetryAfterKey];

    if (v10)
    {
      [v10 doubleValue];
      dispatch_time_t v12 = dispatch_time(0, (uint64_t)(v11 * 1000000000.0));
      int v13 = [v7 accessQueue];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_1000257E8;
      v14[3] = &unk_10025F988;
      id v15 = v7;
      id v16 = *(id *)(a1 + 32);
      dispatch_after(v12, v13, v14);
    }
  }
}

id sub_1000257E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_unsubscribeToContainer:", *(void *)(a1 + 40));
}

void sub_100025B70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100025BB8(id *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    uint64_t v7 = sub_1000083A0();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v8)
      {
        uint64_t v9 = [a1[4] containerIdentifier];
        *(_DWORD *)long long buf = 138543618;
        id v29 = v9;
        __int16 v30 = 2114;
        id v31 = v5;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CKModifySubscriptionsOperation (%{public}@) failed: %{public}@", buf, 0x16u);
      }
      id v10 = [v5 userInfo];
      double v11 = [v10 objectForKeyedSubscript:CKErrorRetryAfterKey];

      if (v11)
      {
        [v11 doubleValue];
        dispatch_time_t v13 = dispatch_time(0, (uint64_t)(v12 * 1000000000.0));
        id v14 = [WeakRetained accessQueue];
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100025ED4;
        block[3] = &unk_10025FF28;
        id v26 = WeakRetained;
        id v27 = a1[5];
        dispatch_after(v13, v14, block);

        id v15 = v26;
      }
      else
      {
        id v21 = objc_retainBlock(a1[5]);
        id v15 = v21;
        if (v21) {
          (*((void (**)(id))v21 + 2))(v21);
        }
      }

      goto LABEL_17;
    }
    if (v8)
    {
      id v16 = [a1[4] containerIdentifier];
      *(_DWORD *)long long buf = 138543362;
      id v29 = v16;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CKModifySubscriptionsOperation Success for: (%{public}@)", buf, 0xCu);
    }
    unsigned int v17 = [WeakRetained accessQueue];

    if (v17)
    {
      id v18 = [WeakRetained accessQueue];
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      v22[2] = sub_100025EE0;
      v22[3] = &unk_10025FF28;
      id v23 = WeakRetained;
      id v24 = a1[5];
      dispatch_async(v18, v22);

      goto LABEL_17;
    }
  }
  id v19 = objc_retainBlock(a1[5]);
  long long v20 = v19;
  if (v19) {
    (*((void (**)(id))v19 + 2))(v19);
  }

LABEL_17:
}

id sub_100025ED4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "p_subscribeWithCompletion:", *(void *)(a1 + 40));
}

id sub_100025EE0(uint64_t a1)
{
  [*(id *)(a1 + 32) setHasSubscription:1];
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  return objc_msgSend(v2, "p_scheduleArchiveWithCompletion:", v3);
}

void sub_100026468(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100026494(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000264A4(uint64_t a1)
{
}

void sub_1000264AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000083A0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@", buf, 0xCu);
  }

  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v3];
  id v5 = [*(id *)(a1 + 32) accessQueue];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000265F4;
  v7[3] = &unk_10025F988;
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v3;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_1000265F4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) recordZones];
  [v2 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];
}

void sub_10002664C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000083A0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was purged: %{public}@", buf, 0xCu);
  }

  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v3];
  id v5 = [*(id *)(a1 + 32) accessQueue];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100026794;
  v7[3] = &unk_10025F988;
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v3;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_100026794(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) recordZones];
  [v2 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];
}

void sub_1000267EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000083A0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was deleted due to user encrypted data reset: %{public}@", buf, 0xCu);
  }

  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v3];
  id v5 = [*(id *)(a1 + 32) accessQueue];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100026934;
  v7[3] = &unk_10025F988;
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v3;
  id v6 = v3;
  dispatch_async(v5, v7);
}

void sub_100026934(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) recordZones];
  [v2 setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];
}

void sub_10002698C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) accessQueue];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100026A44;
  v7[3] = &unk_10025F988;
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

id sub_100026A44(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138543362;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation serverChangeToken was updated: %{public}@", (uint8_t *)&v5, 0xCu);
  }

  [*(id *)(a1 + 40) setServerChangeToken:*(void *)(a1 + 32)];
  return objc_msgSend(*(id *)(a1 + 40), "p_scheduleArchiveWithCompletion:", &stru_1002605E8);
}

void sub_100026B04(id a1)
{
  uint64_t v1 = sub_1000083A0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (changeTokenUpdatedBlock)", v2, 2u);
  }
}

void sub_100026B6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) accessQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100026C38;
  block[3] = &unk_10025F770;
  id v9 = v3;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  id v10 = v5;
  uint64_t v11 = v6;
  id v7 = v3;
  dispatch_async(v4, block);
}

void sub_100026C38(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v7 = 138543362;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was changed: %{public}@", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v4 = *(void **)(a1 + 40);
  id v5 = [*(id *)(a1 + 32) zoneName];
  LODWORD(v4) = [v4 containsObject:v5];

  if (v4)
  {
    uint64_t v6 = [*(id *)(a1 + 48) changedRecordZoneIDs];
    [v6 addObject:*(void *)(a1 + 32)];

    objc_msgSend(*(id *)(a1 + 48), "p_scheduleArchiveWithCompletion:", &stru_100260630);
  }
}

void sub_100026D3C(id a1)
{
  uint64_t v1 = sub_1000083A0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (recordZoneWithIDChangedBlock)", v2, 2u);
  }
}

void sub_100026DA4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if ([*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count])
  {
    uint64_t v8 = *(void **)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(void *)(*(void *)(v9 + 8) + 40);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_10002702C;
    v22[3] = &unk_100260680;
    void v22[4] = v9;
    [v8 zonesDeletedOrReset:v10 completion:v22];
  }
  if (v7)
  {
    uint64_t v11 = sub_1000083A0();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1001E5988();
    }

    double v12 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    dispatch_time_t v13 = v12;
    if (!v12) {
      goto LABEL_9;
    }
    id v14 = v12[2];
LABEL_8:
    v14();
LABEL_9:

    goto LABEL_14;
  }
  id v15 = sub_1000083A0();
  id v16 = v15;
  if (!v6)
  {
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "CKFetchDatabaseChangesOperation Success, but no serverChangeToken", buf, 2u);
    }

    id v18 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    dispatch_time_t v13 = v18;
    if (!v18) {
      goto LABEL_9;
    }
    id v14 = v18[2];
    goto LABEL_8;
  }
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138543362;
    id v24 = v6;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation Success, serverChangeToken: %{public}@", buf, 0xCu);
  }

  unsigned int v17 = [*(id *)(a1 + 32) accessQueue];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1000270DC;
  v19[3] = &unk_100260528;
  v19[4] = *(void *)(a1 + 32);
  id v20 = v6;
  id v21 = *(id *)(a1 + 40);
  dispatch_async(v17, v19);

LABEL_14:
}

void sub_10002702C(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation - zonesDeletedOrReset DONE: %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000270DC(id *a1)
{
  [a1[4] setServerChangeToken:a1[5]];
  id v2 = objc_retainBlock(a1[6]);
  uint64_t v3 = v2;
  if (v2) {
    (*((void (**)(id, void))v2 + 2))(v2, 0);
  }

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100027198;
  v5[3] = &unk_10025F700;
  id v4 = a1[4];
  id v6 = a1[5];
  objc_msgSend(v4, "p_scheduleArchiveWithCompletion:", v5);
}

void sub_100027198(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (fetchDatabaseChangesCompletionBlock), serverChangeToken: %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000275A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000275CC(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000083A0();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = [v5 allKeys];
    *(void *)&long long buf = _NSConcreteStackBlock;
    *((void *)&buf + 1) = 3221225472;
    id v61 = sub_100030300;
    v62 = &unk_100260BC0;
    id v63 = objc_alloc_init((Class)NSMutableArray);
    id v9 = v63;
    [v8 enumerateObjectsUsingBlock:&buf];
    uint64_t v10 = [v9 componentsJoinedByString:@","];

    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "3. BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock fetchedZones:[%{public}@]", (uint8_t *)&buf, 0xCu);
  }
  v53[0] = _NSConcreteStackBlock;
  v53[1] = 3221225472;
  v53[2] = sub_100027EEC;
  v53[3] = &unk_1002606F8;
  objc_copyWeak(&v55, a1 + 8);
  id v54 = a1[7];
  uint64_t v11 = objc_retainBlock(v53);
  v45[0] = _NSConcreteStackBlock;
  v45[1] = 3221225472;
  v45[2] = sub_100028264;
  v45[3] = &unk_100260798;
  id v46 = a1[4];
  id v12 = v5;
  id v47 = v12;
  id v48 = a1[5];
  id v49 = a1[6];
  objc_copyWeak(&v52, a1 + 8);
  id v50 = a1[7];
  dispatch_time_t v13 = v11;
  id v51 = v13;
  id v14 = objc_retainBlock(v45);
  if (!v6)
  {
    id v19 = [v12 allKeys];
    id v18 = +[NSSet setWithArray:v19];

    id v20 = +[NSSet setWithArray:a1[4]];
    unsigned int v21 = [v18 isEqualToSet:v20];

    if (!v21)
    {
      id v24 = sub_1000083A0();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        id v25 = a1[4];
        id v26 = objc_alloc_init((Class)NSMutableArray);
        *(void *)&long long buf = _NSConcreteStackBlock;
        *((void *)&buf + 1) = 3221225472;
        id v61 = sub_100030300;
        v62 = &unk_100260BC0;
        id v27 = v26;
        id v63 = v27;
        [v25 enumerateObjectsUsingBlock:&buf];
        long long v28 = [v27 componentsJoinedByString:@","];

        id when = v28;
        id v29 = [v12 allKeys];
        id v30 = objc_alloc_init((Class)NSMutableArray);
        *(void *)&long long buf = _NSConcreteStackBlock;
        *((void *)&buf + 1) = 3221225472;
        id v61 = sub_100030300;
        v62 = &unk_100260BC0;
        id v31 = v30;
        id v63 = v31;
        [v29 enumerateObjectsUsingBlock:&buf];
        id v32 = [v31 componentsJoinedByString:@","];

        *(_DWORD *)id v56 = 138412546;
        id v57 = when;
        __int16 v58 = 2112;
        v59 = v32;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "CKFetchRecordZonesOperation Wanted:%@ Received:%@", v56, 0x16u);
      }
      ((void (*)(void *))v14[2])(v14);
      goto LABEL_30;
    }
    long long v22 = sub_1000083A0();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - calling saveResultsBlock", (uint8_t *)&buf, 2u);
    }

    id v23 = [v12 allValues];
    ((void (*)(void *, NSObject *, void))v13[2])(v13, v23, 0);
    goto LABEL_29;
  }
  id v15 = sub_1000083A0();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
  {
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v6;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - fetchRecordZonesOperation failed, ERROR:%@", (uint8_t *)&buf, 0xCu);
  }

  if ((sub_100024698(v6) & 1) != 0 || sub_100024878(v6))
  {
    id v16 = sub_1000083A0();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - No PCS Identity available", (uint8_t *)&buf, 2u);
    }

    id v17 = objc_retainBlock(a1[7]);
    id v18 = v17;
    if (v17) {
      (*((void (**)(id, id))v17 + 2))(v17, v6);
    }
    goto LABEL_30;
  }
  if ([v6 code] == (id)6 || objc_msgSend(v6, "code") == (id)7)
  {
    CFStringRef v33 = [v6 userInfo];
    id v18 = [v33 objectForKeyedSubscript:CKErrorRetryAfterKey];

    id WeakRetained = objc_loadWeakRetained(a1 + 8);
    id v23 = [WeakRetained accessQueue];

    if (v18 && v23)
    {
      __int16 v35 = sub_1000083A0();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v6;
        _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - fetchRecordZonesOperation failed - retrying, ERROR:%@", (uint8_t *)&buf, 0xCu);
      }

      [v18 doubleValue];
      dispatch_time_t whena = dispatch_time(0, (uint64_t)(v36 * 1000000000.0));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100028AFC;
      block[3] = &unk_100260748;
      objc_copyWeak(&v44, a1 + 8);
      id v43 = a1[7];
      id v42 = a1[4];
      dispatch_after(whena, v23, block);

      objc_destroyWeak(&v44);
    }
    else
    {
      __int16 v37 = sub_1000083A0();
      if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
        sub_1001E59F0();
      }

      ((void (*)(void *, void, id))v13[2])(v13, 0, v6);
    }
LABEL_29:

LABEL_30:
    goto LABEL_31;
  }
  if ([v6 code] == (id)3)
  {
    id v38 = sub_1000083A0();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_1001E59F0();
    }
  }
  else
  {
    if (!sub_100024A84(v6))
    {
      ((void (*)(void *))v14[2])(v14);
      goto LABEL_31;
    }
    id v38 = sub_1000083A0();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_1001E5A58();
    }
  }

  ((void (*)(void *, void, id))v13[2])(v13, 0, v6);
LABEL_31:

  objc_destroyWeak(&v52);
  objc_destroyWeak(&v55);
}

void sub_100027E90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_100027EEC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = [WeakRetained accessQueue];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _DWORD v12[2] = sub_100028000;
    v12[3] = &unk_10025F988;
    id v13 = v8;
    id v14 = v5;
    dispatch_async(v9, v12);

    id v10 = objc_retainBlock(*(id *)(a1 + 32));
    uint64_t v11 = v10;
    if (v10) {
      (*((void (**)(id, id))v10 + 2))(v10, v6);
    }
  }
}

void sub_100028000(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) recordZones];
  uint64_t v3 = sub_1000083A0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    id v4 = *(id *)(a1 + 40);
    *(void *)&long long buf = _NSConcreteStackBlock;
    *((void *)&buf + 1) = 3221225472;
    id v12 = sub_100030358;
    id v13 = &unk_1002606D0;
    id v14 = objc_alloc_init((Class)NSMutableArray);
    id v5 = v14;
    [v4 enumerateObjectsUsingBlock:&buf];
    id v6 = [v5 componentsJoinedByString:@","];

    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - assigning recordZones[%{public}@]", (uint8_t *)&buf, 0xCu);
  }
  id v7 = *(void **)(a1 + 40);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000281D0;
  v9[3] = &unk_1002606D0;
  id v10 = v2;
  id v8 = v2;
  [v7 enumerateObjectsUsingBlock:v9];
}

void sub_1000281D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [[BCCloudKitRecordZone alloc] initWithRecordZone:v3];
  id v4 = *(void **)(a1 + 32);
  id v5 = [v3 zoneID];

  [v4 setObject:v6 forKeyedSubscript:v5];
}

void sub_100028264(uint64_t a1)
{
  id v2 = +[NSMutableSet setWithArray:*(void *)(a1 + 32)];
  id v3 = [*(id *)(a1 + 40) allValues];
  id v4 = [*(id *)(a1 + 40) allKeys];
  id v5 = +[NSSet setWithArray:v4];
  [v2 minusSet:v5];

  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_1000285FC;
  v23[3] = &unk_100260720;
  id v6 = objc_alloc_init((Class)NSMutableArray);
  id v24 = v6;
  [v2 enumerateObjectsUsingBlock:v23];
  id v7 = sub_1000083A0();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    id v8 = [v2 allObjects];
    id v9 = objc_alloc_init((Class)NSMutableArray);
    *(void *)&long long buf = _NSConcreteStackBlock;
    *((void *)&buf + 1) = 3221225472;
    id v26 = sub_100030300;
    id v27 = &unk_100260BC0;
    id v28 = v9;
    id v10 = v9;
    [v8 enumerateObjectsUsingBlock:&buf];
    uint64_t v11 = [v10 componentsJoinedByString:@","];

    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v11;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - One or more zones are missing newRecordZones:[%{public}@]", (uint8_t *)&buf, 0xCu);
  }
  id v12 = [objc_alloc((Class)CKModifyRecordZonesOperation) initWithRecordZonesToSave:v6 recordZoneIDsToDelete:0];
  id v13 = +[CKOperationConfiguration bds_defaultConfiguration];
  [v13 setContainer:*(void *)(a1 + 48)];
  [v12 setConfiguration:v13];
  [v12 setDatabase:*(void *)(a1 + 56)];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  id v16[2] = sub_100028674;
  v16[3] = &unk_100260770;
  objc_copyWeak(&v22, (id *)(a1 + 80));
  id v14 = v6;
  id v17 = v14;
  id v20 = *(id *)(a1 + 64);
  id v18 = *(id *)(a1 + 32);
  id v21 = *(id *)(a1 + 72);
  id v15 = v3;
  id v19 = v15;
  [v12 setModifyRecordZonesCompletionBlock:v16];
  [*(id *)(a1 + 56) addOperation:v12];

  objc_destroyWeak(&v22);
}

void sub_1000285DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000285FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)CKRecordZone) initWithZoneID:v3];

  [*(id *)(a1 + 32) addObject:v4];
}

void sub_100028674(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id v8 = v7;
  if (v7)
  {
    id v9 = [v7 userInfo];
    id v10 = [v9 objectForKeyedSubscript:CKErrorRetryAfterKey];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    id v12 = [WeakRetained accessQueue];

    if (v10) {
      BOOL v13 = v12 == 0;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13)
    {
      uint64_t v14 = *(void *)(a1 + 64);
      id v15 = [*(id *)(a1 + 48) arrayByAddingObjectsFromArray:v6];
      (*(void (**)(uint64_t, void *, void *))(v14 + 16))(v14, v15, v8);
    }
    else
    {
      id v20 = sub_1000083A0();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        id v22 = *(id *)(a1 + 32);
        *(void *)long long buf = _NSConcreteStackBlock;
        *(void *)&buf[8] = 3221225472;
        *(void *)&uint8_t buf[16] = sub_100030358;
        id v32 = &unk_1002606D0;
        id v33 = objc_alloc_init((Class)NSMutableArray);
        id v23 = v33;
        [v22 enumerateObjectsUsingBlock:buf];
        id v24 = [v23 componentsJoinedByString:@","];

        *(_DWORD *)long long buf = 138543618;
        *(void *)&uint8_t buf[4] = v24;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v8;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "5a CKModifyRecordZonesOperation failed to modify %{public}@ retrying, ERROR:%@", buf, 0x16u);
      }
      [v10 doubleValue];
      dispatch_time_t v26 = dispatch_time(0, (uint64_t)(v25 * 1000000000.0));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100028A78;
      block[3] = &unk_100260748;
      objc_copyWeak(&v30, (id *)(a1 + 72));
      id v29 = *(id *)(a1 + 56);
      id v28 = *(id *)(a1 + 40);
      dispatch_after(v26, v12, block);

      objc_destroyWeak(&v30);
    }
  }
  else
  {
    id v10 = [*(id *)(a1 + 48) arrayByAddingObjectsFromArray:v6];
    id v16 = sub_1000083A0();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = v10;
      *(void *)long long buf = _NSConcreteStackBlock;
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_100030358;
      id v32 = &unk_1002606D0;
      id v33 = objc_alloc_init((Class)NSMutableArray);
      id v18 = v33;
      [v17 enumerateObjectsUsingBlock:buf];

      id v19 = [v18 componentsJoinedByString:@","];

      *(_DWORD *)long long buf = 138543362;
      *(void *)&uint8_t buf[4] = v19;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "CKModifyRecordZonesOperation success saving: %{public}@", buf, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
}

void sub_100028A78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "p_createRecordZones:completionHandler:", *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
  else
  {
    id v2 = objc_retainBlock(*(id *)(a1 + 40));
    id v3 = v2;
    if (v2) {
      (*((void (**)(id, void))v2 + 2))(v2, 0);
    }
  }
}

void sub_100028AFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "p_createRecordZones:completionHandler:", *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
  else
  {
    id v2 = objc_retainBlock(*(id *)(a1 + 40));
    id v3 = v2;
    if (v2) {
      (*((void (**)(id, void))v2 + 2))(v2, 0);
    }
  }
}

void sub_100028D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100028D84(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v40 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (!WeakRetained)
  {
    id v28 = objc_alloc((Class)NSException);
    id v29 = [a1[4] containerIdentifier];
    id v30 = +[NSString stringWithFormat:@"Nil weak self after fetch salt record %@", v29];
    NSErrorUserInfoKey v52 = NSUnderlyingErrorKey;
    id v31 = v40;
    if (!v40)
    {
      id v31 = +[NSNull null];
    }
    v53 = v31;
    id v32 = +[NSDictionary dictionaryWithObjects:&v53 forKeys:&v52 count:1];
    id v33 = [v28 initWithName:@"No Books Salt" reason:v30 userInfo:v32];

    if (!v40) {
    objc_exception_throw(v33);
    }
  }
  id v7 = WeakRetained;
  uint64_t v46 = 0;
  id v47 = &v46;
  uint64_t v48 = 0x3032000000;
  id v49 = sub_100026494;
  id v50 = sub_1000264A4;
  id v51 = 0;
  if (!v5 || v40)
  {
    id v18 = sub_1000083A0();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      id v27 = [a1[4] containerIdentifier];
      *(_DWORD *)long long buf = 138543874;
      *(void *)&uint8_t buf[4] = v27;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v40;
      *(_WORD *)&buf[22] = 2112;
      *(void *)&unsigned char buf[24] = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "(%{public}@) Error retrieving record salt: %@ serverRecord:%@.. Trying to recover", buf, 0x20u);
    }
    long long v63 = 0u;
    long long v64 = 0u;
    long long v61 = 0u;
    long long v62 = 0u;
    long long v59 = 0u;
    long long v60 = 0u;
    memset(buf, 0, sizeof(buf));
    if (SecRandomCopyBytes(kSecRandomDefault, 0x80uLL, buf))
    {
      id v34 = objc_alloc((Class)NSException);
      __int16 v35 = [a1[4] containerIdentifier];
      double v36 = +[NSString stringWithFormat:@"Unable to generate random salt %@", v35];
      NSErrorUserInfoKey v54 = NSUnderlyingErrorKey;
      __int16 v37 = v40;
      if (!v40)
      {
        __int16 v37 = +[NSNull null];
      }
      id v55 = v37;
      id v38 = +[NSDictionary dictionaryWithObjects:&v55 forKeys:&v54 count:1];
      id v39 = [v34 initWithName:@"No Books Record Salt" reason:v36 userInfo:v38];

      if (!v40) {
      objc_exception_throw(v39);
      }
    }
    id v19 = [objc_alloc((Class)CKRecordID) initWithRecordName:@"recordIDSalt"];
    id v20 = [objc_alloc((Class)CKRecord) initWithRecordType:@"recordIDSalt" recordID:v19];
    id v21 = +[NSData dataWithBytes:buf length:128];
    id v22 = [v20 encryptedValuesByKey];
    [v22 setObject:v21 forKeyedSubscript:@"saltEncrypted"];

    id v23 = sub_10000CE18();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      id v24 = [a1[4] containerIdentifier];
      *(_DWORD *)id v56 = 138543362;
      id v57 = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "(%{public}@) Will save record salt", v56, 0xCu);
    }
    double v25 = [a1[4] database];
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472;
    v41[2] = sub_10002950C;
    v41[3] = &unk_1002607E8;
    objc_copyWeak(&v45, a1 + 6);
    void v41[4] = a1[4];
    id v44 = &v46;
    id v26 = v21;
    id v42 = v26;
    id v43 = a1[5];
    [v25 saveRecord:v20 completionHandler:v41];

    objc_destroyWeak(&v45);
  }
  else
  {
    id v8 = [v5 encryptedValuesByKey];
    id v9 = [v8 objectForKeyedSubscript:@"saltEncrypted"];

    if (!v9)
    {
      id v9 = [v5 objectForKeyedSubscript:@"salt"];
    }
    [v7 setRecordIDSalt:v9];
    uint64_t v10 = [v5 recordChangeTag];
    uint64_t v11 = (void *)v47[5];
    v47[5] = v10;

    id v12 = sub_10000CE18();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v13 = [a1[4] containerIdentifier];
      uint64_t v14 = v47[5];
      *(_DWORD *)long long buf = 138543874;
      *(void *)&uint8_t buf[4] = v13;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v9;
      *(_WORD *)&buf[22] = 2112;
      *(void *)&unsigned char buf[24] = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion", buf, 0x20u);
    }
    uint64_t v15 = v47[5];
    id v16 = [a1[4] desiredRecordZoneIDs];
    id v17 = +[NSSet setWithArray:v16];
    objc_msgSend(v7, "p_informObserversOfSaltVersionIdentifierChanged:forZones:completion:", v15, v17, a1[5]);
  }
  _Block_object_dispose(&v46, 8);
}

void sub_1000293F0(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  if (a2 == 1)
  {
    id v17 = objc_begin_catch(a1);
    id v18 = sub_10000CE18();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_1001E5AC0();
    }

    id v19 = (void (**)(id, void *))objc_retainBlock(*(id *)(v14 + 40));
    if (v19)
    {
      id v20 = +[NSError errorWithDomain:@"BDSErrorDomain" code:1005 userInfo:0];
      v19[2](v19, v20);
    }
    objc_end_catch();
    JUMPOUT(0x10002917CLL);
  }
  _Unwind_Resume(a1);
}

void sub_10002950C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (!WeakRetained)
  {
    id v41 = objc_alloc((Class)NSException);
    id v42 = [*(id *)(a1 + 32) containerIdentifier];
    id v43 = +[NSString stringWithFormat:@"Nil weak self after save record %@", v42];
    NSErrorUserInfoKey v47 = NSUnderlyingErrorKey;
    id v44 = v6;
    if (!v6)
    {
      id v44 = +[NSNull null];
    }
    uint64_t v48 = v44;
    id v45 = +[NSDictionary dictionaryWithObjects:&v48 forKeys:&v47 count:1];
    id v46 = [v41 initWithName:@"No Books Record Salt" reason:v43 userInfo:v45];

    if (!v6) {
    objc_exception_throw(v46);
    }
  }
  id v8 = WeakRetained;
  id v9 = sub_10000CE18();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    uint64_t v10 = [*(id *)(a1 + 32) containerIdentifier];
    *(_DWORD *)long long buf = 138543362;
    id v50 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "(%{public}@) Saving record salt....", buf, 0xCu);
  }
  uint64_t v11 = [v6 domain];
  if ([v11 isEqualToString:CKErrorDomain])
  {
    id v12 = [v6 code];

    if (v12 == (id)14)
    {
      BOOL v13 = [v6 userInfo];
      uint64_t v14 = [v13 objectForKeyedSubscript:CKRecordChangedErrorServerRecordKey];

      uint64_t v15 = [v14 encryptedValuesByKey];
      id v16 = [v15 objectForKeyedSubscript:@"saltEncrypted"];

      if (v14)
      {
        id v17 = sub_10000CE18();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          id v18 = [*(id *)(a1 + 32) containerIdentifier];
          id v19 = [v14 recordChangeTag];
          *(_DWORD *)long long buf = 138544130;
          id v50 = v18;
          __int16 v51 = 2112;
          NSErrorUserInfoKey v52 = v16;
          __int16 v53 = 2112;
          NSErrorUserInfoKey v54 = v19;
          __int16 v55 = 2112;
          id v56 = v6;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)", buf, 0x2Au);
        }
        [v8 setRecordIDSalt:v16];
        uint64_t v20 = [v14 recordChangeTag];
        uint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8);
        id v22 = *(void **)(v21 + 40);
        *(void *)(v21 + 40) = v20;

        id v6 = 0;
      }

      goto LABEL_18;
    }
  }
  else
  {
  }
  id v23 = sub_10000CE18();
  uint64_t v14 = v23;
  if (v6)
  {
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_1001E5B90();
    }
  }
  else
  {
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      id v24 = [*(id *)(a1 + 32) containerIdentifier];
      double v25 = *(void **)(a1 + 40);
      id v26 = [v5 recordChangeTag];
      *(_DWORD *)long long buf = 138543874;
      id v50 = v24;
      __int16 v51 = 2112;
      NSErrorUserInfoKey v52 = v25;
      __int16 v53 = 2112;
      NSErrorUserInfoKey v54 = v26;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)", buf, 0x20u);
    }
    id v27 = [v5 encryptedValuesByKey];
    id v28 = [v27 objectForKeyedSubscript:@"saltEncrypted"];
    [v8 setRecordIDSalt:v28];

    uint64_t v29 = [v5 recordChangeTag];
    id v6 = 0;
    uint64_t v30 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v14 = *(NSObject **)(v30 + 40);
    *(void *)(v30 + 40) = v29;
  }
LABEL_18:

  id v31 = [v8 recordIDSalt];

  id v32 = sub_10000CE18();
  id v33 = v32;
  if (v6 || !v31)
  {
    if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
      sub_1001E5B28();
    }

    id v40 = objc_retainBlock(*(id *)(a1 + 48));
    id v38 = v40;
    if (v40) {
      (*((void (**)(id, id))v40 + 2))(v40, v6);
    }
  }
  else
  {
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      id v34 = [v8 containerIdentifier];
      __int16 v35 = [*(id *)(a1 + 32) recordIDSalt];
      double v36 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
      *(_DWORD *)long long buf = 138543874;
      id v50 = v34;
      __int16 v51 = 2112;
      NSErrorUserInfoKey v52 = v35;
      __int16 v53 = 2112;
      NSErrorUserInfoKey v54 = v36;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "(%{public}@) *** Got record salt:(%@) changeTag:(%@)", buf, 0x20u);
    }
    uint64_t v37 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    id v38 = [*(id *)(a1 + 32) desiredRecordZoneIDs];
    id v39 = +[NSSet setWithArray:v38];
    objc_msgSend(v8, "p_informObserversOfSaltVersionIdentifierChanged:forZones:completion:", v37, v39, *(void *)(a1 + 48));
  }
}

void sub_100029CC4(id *a1, void *a2)
{
  id v11 = a2;
  id v3 = [a1[4] changedRecordZoneIDs];
  if ([v3 containsObject:v11])
  {
    id v4 = [a1[4] tokenStores];
    id v5 = [v4 objectForKeyedSubscript:v11];
    unsigned int v6 = [v5 cloudSyncEnabled];

    if (v6)
    {
      id v7 = a1 + 5;
      goto LABEL_7;
    }
  }
  else
  {
  }
  id v8 = [a1[4] tokenStores];
  id v9 = [v8 objectForKeyedSubscript:v11];
  unsigned int v10 = [v9 cloudSyncEnabled];

  if (!v10) {
    goto LABEL_8;
  }
  id v7 = a1 + 6;
LABEL_7:
  [*v7 addObject:v11];
LABEL_8:
}

void sub_100029DBC(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000083A0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [a1[4] containerIdentifier];
    id v6 = a1[5];
    *(_DWORD *)long long buf = 138543618;
    id v22 = v5;
    __int16 v23 = 2114;
    id v24 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@)- record zone changes; unchangedRecordIDS :%{public}@",
      buf,
      0x16u);
  }
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v7 = a1[5];
  id v8 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v17;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v17 != v10) {
          objc_enumerationMutation(v7);
        }
        id v12 = a1[4];
        BOOL v13 = objc_msgSend(*(id *)(*((void *)&v16 + 1) + 8 * (void)v11), "zoneName", (void)v16);
        objc_msgSend(v12, "p_informObserversOfCompletedFetchOfZone:", v13);

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v9);
  }

  id v14 = objc_retainBlock(a1[6]);
  uint64_t v15 = v14;
  if (v14) {
    (*((void (**)(id, id))v14 + 2))(v14, v3);
  }
}

void sub_10002A2F4(uint64_t a1, void *a2)
{
  id v5 = a2;
  objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  if (!v3)
  {
    if (![*(id *)(a1 + 40) containsObject:v5]) {
      goto LABEL_5;
    }
    id v3 = [objc_alloc((Class)CKRecordZone) initWithZoneID:v5];
    id v4 = [[BCCloudKitRecordZone alloc] initWithRecordZone:v3];
    [*(id *)(a1 + 32) setObject:v4 forKeyedSubscript:v5];
  }
LABEL_5:
}

void sub_10002A3B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) tokenStores];
  id v5 = [v4 objectForKeyedSubscript:v3];

  if (v5)
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
    id v6 = [v3 copy];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10002A4C0;
    v8[3] = &unk_100260888;
    void v8[4] = *(void *)(a1 + 32);
    id v9 = *(id *)(a1 + 48);
    id v10 = v6;
    id v11 = *(id *)(a1 + 40);
    id v7 = v6;
    [v5 serverChangeTokenWithCompletion:v8];
  }
}

void sub_10002A4C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) accessQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002A5A0;
  block[3] = &unk_10025F770;
  id v7 = *(id *)(a1 + 40);
  id v8 = v3;
  id v9 = *(id *)(a1 + 48);
  id v5 = v3;
  dispatch_async(v4, block);

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_10002A5A0(void *a1)
{
  id v2 = (void *)a1[4];
  if (a1[5])
  {
    id v3 = (void *)a1[4];
    objc_msgSend(v3, "setObject:forKey:");
  }
  else
  {
    id v4 = +[NSNull null];
    [v2 setObject:v4 forKey:a1[6]];
  }
}

void sub_10002A630(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id v2 = sub_1000083A0();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      id v3 = [*(id *)(a1 + 40) containerIdentifier];
      uint64_t v4 = *(void *)(a1 + 48);
      *(_DWORD *)long long buf = 138543618;
      id v14 = v3;
      __int16 v15 = 2114;
      uint64_t v16 = v4;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@", buf, 0x16u);
    }
    id v5 = objc_opt_new();
    id v6 = *(void **)(a1 + 48);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10002A814;
    v10[3] = &unk_100260860;
    id v11 = *(id *)(a1 + 32);
    id v12 = v5;
    id v7 = v5;
    [v6 enumerateObjectsUsingBlock:v10];
    objc_msgSend(*(id *)(a1 + 40), "p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:", *(void *)(a1 + 48), v7, *(void *)(a1 + 56));
  }
  else
  {
    *(unsigned char *)(*(void *)(a1 + 40) + 15) = 1;
    id v8 = objc_retainBlock(*(id *)(a1 + 56));
    if (v8)
    {
      id v9 = v8;
      (*((void (**)(id, void))v8 + 2))(v8, 0);
      id v8 = v9;
    }
  }
}

void sub_10002A814(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:");
  id v4 = objc_alloc_init((Class)CKFetchRecordZoneChangesConfiguration);
  if (v3)
  {
    id v5 = +[NSNull null];

    if (v3 != v5) {
      [v4 setPreviousServerChangeToken:v3];
    }
  }
  [*(id *)(a1 + 40) setObject:v4 forKeyedSubscript:v6];
}

void sub_10002B090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id location)
{
  objc_destroyWeak(v46);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v47 - 256), 8);
  _Block_object_dispose((const void *)(v47 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_10002B100(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) accessQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002B1BC;
  block[3] = &unk_1002608B0;
  id v7 = v3;
  long long v8 = *(_OWORD *)(a1 + 32);
  id v5 = v3;
  dispatch_async(v4, block);
}

void sub_10002B1BC(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) recordID];
    id v4 = [*(id *)(a1 + 32) recordType];
    int v12 = 138412546;
    BOOL v13 = v3;
    __int16 v14 = 2112;
    __int16 v15 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@ %@", (uint8_t *)&v12, 0x16u);
  }
  id v5 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  id v6 = [*(id *)(a1 + 32) recordType];
  id v7 = [v5 objectForKey:v6];

  if (!v7)
  {
    id v7 = objc_opt_new();
    long long v8 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    id v9 = [*(id *)(a1 + 32) recordType];
    [v8 setObject:v7 forKey:v9];
  }
  [v7 addObject:*(void *)(a1 + 32)];
  if ((unint64_t)[v7 count] >= 0x20)
  {
    id v10 = *(void **)(a1 + 40);
    id v11 = [*(id *)(a1 + 32) recordType];
    objc_msgSend(v10, "p_informObserversOfRecordsChanged:forRecordType:", v7, v11);

    [v7 removeAllObjects];
  }
}

void sub_10002B360(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [*(id *)(a1 + 32) accessQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002B43C;
  block[3] = &unk_10025F770;
  uint64_t v8 = *(void *)(a1 + 32);
  id v12 = v5;
  uint64_t v13 = v8;
  id v14 = v6;
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v7, block);
}

void sub_10002B43C(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 138412290;
    uint64_t v17 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@", buf, 0xCu);
  }

  id v4 = [*(id *)(a1 + 40) observers];
  id v5 = [v4 objectForKeyedSubscript:*(void *)(a1 + 48)];

  if ([v5 count])
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v6 = v5;
    id v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v12;
      do
      {
        id v10 = 0;
        do
        {
          if (*(void *)v12 != v9) {
            objc_enumerationMutation(v6);
          }
          objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * (void)v10), "databaseController:recordWithIDWasDeleted:recordType:", *(void *)(a1 + 40), *(void *)(a1 + 32), *(void *)(a1 + 48), (void)v11);
          id v10 = (char *)v10 + 1;
        }
        while (v8 != v10);
        id v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v8);
    }
  }
}

void sub_10002B5C0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [*(id *)(a1 + 32) accessQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002B6B0;
  block[3] = &unk_100260928;
  id v8 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v9 = v8;
  uint64_t v10 = *(void *)(a1 + 48);
  id v14 = v9;
  id v15 = v5;
  id v16 = v6;
  uint64_t v17 = v10;
  id v11 = v6;
  id v12 = v5;
  dispatch_async(v7, block);
}

void sub_10002B6B0(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = [*(id *)(a1 + 32) containerIdentifier];
    id v4 = *(id *)(a1 + 40);
    *(void *)id v9 = _NSConcreteStackBlock;
    *(void *)&v9[8] = 3221225472;
    *(void *)&v9[16] = sub_100030300;
    uint64_t v10 = &unk_100260BC0;
    id v11 = objc_alloc_init((Class)NSMutableArray);
    id v5 = v11;
    [v4 enumerateObjectsUsingBlock:v9];
    id v6 = objc_msgSend(v5, "componentsJoinedByString:", @",", *(void *)v9, *(void *)&v9[8], *(void *)&v9[16], v10);

    *(_DWORD *)id v9 = 138543618;
    *(void *)&void v9[4] = v3;
    *(_WORD *)&v9[12] = 2114;
    *(void *)&v9[14] = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ ", v9, 0x16u);
  }
  objc_msgSend(*(id *)(a1 + 32), "p_informObserversOfRecordsChanged:", *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40));
  [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) removeAllObjects];
  id v7 = [*(id *)(a1 + 32) tokenStores];
  id v8 = [v7 objectForKeyedSubscript:*(void *)(a1 + 48)];

  [v8 storeServerChangeToken:*(void *)(a1 + 56) completion:0];
}

void sub_10002B884(uint64_t a1, void *a2, void *a3, uint64_t a4, int a5, void *a6)
{
  id v10 = a2;
  id v11 = a3;
  id v12 = a6;
  long long v13 = sub_1000083A0();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    id v14 = [*(id *)(a1 + 32) containerIdentifier];
    id v15 = *(id *)(a1 + 40);
    *(void *)long long buf = _NSConcreteStackBlock;
    *(void *)&buf[8] = 3221225472;
    *(void *)&uint8_t buf[16] = sub_100030300;
    uint64_t v29 = &unk_100260BC0;
    id v30 = objc_alloc_init((Class)NSMutableArray);
    id v16 = v30;
    [v15 enumerateObjectsUsingBlock:buf];
    uint64_t v17 = [v16 componentsJoinedByString:@","];

    *(_DWORD *)long long buf = 138543874;
    *(void *)&uint8_t buf[4] = v14;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v17;
    *(_WORD *)&buf[22] = 1024;
    LODWORD(v29) = a5;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing= %{BOOL}d", buf, 0x1Cu);
  }
  long long v18 = [*(id *)(a1 + 32) accessQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002BAF4;
  block[3] = &unk_100260998;
  void block[4] = *(void *)(a1 + 32);
  id v23 = v10;
  char v27 = a5;
  long long v26 = *(_OWORD *)(a1 + 48);
  id v24 = v12;
  id v25 = v11;
  id v19 = v11;
  id v20 = v12;
  id v21 = v10;
  dispatch_async(v18, block);
}

void sub_10002BAF4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) changedRecordZoneIDs];
  [v2 removeObject:*(void *)(a1 + 40)];

  objc_msgSend(*(id *)(a1 + 32), "p_scheduleArchiveWithCompletion:", &stru_100260970);
  uint64_t v3 = *(void **)(a1 + 48);
  if (v3)
  {
    int v4 = sub_100024698(v3);
    id v5 = *(void **)(a1 + 48);
    if (v4)
    {
      id v6 = [v5 userInfo];
      id v7 = [v6 objectForKeyedSubscript:CKPartialErrorsByItemIDKey];
      id v28 = [v7 allKeys];

      [*(id *)(a1 + 32) zonesUnreadableDueToMissingD2DEncryptionIdentity:v28 completion:0];

      return;
    }
    if (sub_100024878(v5))
    {
      NSErrorUserInfoKey v39 = NSLocalizedDescriptionKey;
      CFStringRef v40 = @"Unreadable keychain - cannot fetch record zones";
      id v16 = +[NSDictionary dictionaryWithObjects:&v40 forKeys:&v39 count:1];
      uint64_t v17 = 2006;
    }
    else
    {
      if (!sub_100024A84(*(void **)(a1 + 48)))
      {
        id v19 = sub_10000CE18();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        {
          id v24 = [*(id *)(a1 + 32) containerIdentifier];
          id v25 = *(void **)(a1 + 40);
          uint64_t v26 = *(void *)(a1 + 48);
          char v27 = [v25 zoneName];
          *(_DWORD *)long long buf = 138544130;
          id v30 = v24;
          __int16 v31 = 2114;
          id v32 = v25;
          __int16 v33 = 2114;
          uint64_t v34 = v26;
          __int16 v35 = 2112;
          double v36 = v27;
          _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@ time to delete the tokenStore for  %@", buf, 0x2Au);
        }
        id v20 = [*(id *)(a1 + 32) tokenStores];
        long long v18 = [v20 objectForKeyedSubscript:*(void *)(a1 + 40)];

        [v18 deleteCloudDataWithCompletion:0];
        id v21 = [*(id *)(a1 + 48) domain];
        unsigned int v22 = [v21 isEqualToString:CKErrorDomain];

        if (v22)
        {
          unint64_t v23 = (unint64_t)[*(id *)(a1 + 48) code];
          if (v23 <= 0x1C && ((1 << v23) & 0x14200000) != 0) {
            [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) addObject:*(void *)(a1 + 40)];
          }
        }
        goto LABEL_16;
      }
      NSErrorUserInfoKey v37 = NSLocalizedDescriptionKey;
      CFStringRef v38 = @"Account temporarily unavailable - cannot fetch record zones";
      id v16 = +[NSDictionary dictionaryWithObjects:&v38 forKeys:&v37 count:1];
      uint64_t v17 = 2007;
    }
    long long v18 = +[NSError errorWithDomain:@"BDSCloudKitClientError" code:v17 userInfo:v16];

    [*(id *)(a1 + 32) zonesTemporarilyUnreadableWithError:v18 completion:0];
LABEL_16:

    return;
  }
  id v8 = sub_1000083A0();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = [*(id *)(a1 + 32) containerIdentifier];
    id v10 = [*(id *)(a1 + 40) zoneName];
    int v11 = *(unsigned __int8 *)(a1 + 80);
    *(_DWORD *)long long buf = 138543874;
    id v30 = v9;
    __int16 v31 = 2114;
    id v32 = v10;
    __int16 v33 = 1024;
    LODWORD(v34) = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{BOOL}d", buf, 0x1Cu);
  }
  objc_msgSend(*(id *)(a1 + 32), "p_informObserversOfRecordsChanged:", *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40));
  if (!*(unsigned char *)(a1 + 80))
  {
    id v12 = *(void **)(a1 + 32);
    long long v13 = [*(id *)(a1 + 40) zoneName];
    objc_msgSend(v12, "p_informObserversOfCompletedFetchOfZone:", v13);
  }
  [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) removeAllObjects];
  id v14 = [*(id *)(a1 + 32) tokenStores];
  id v15 = [v14 objectForKeyedSubscript:*(void *)(a1 + 40)];

  [v15 storeServerChangeToken:*(void *)(a1 + 56) completion:0];
}

void sub_10002BF6C(id a1)
{
  uint64_t v1 = sub_1000083A0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (recordZoneFetchCompletionBlock)", v2, 2u);
  }
}

void sub_10002BFD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = sub_1000083A0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [*(id *)(a1 + 32) containerIdentifier];
    *(_DWORD *)long long buf = 138543362;
    id v21 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock", buf, 0xCu);
  }
  id v6 = [*(id *)(a1 + 32) accessQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002C168;
  block[3] = &unk_100260A58;
  objc_copyWeak(&v19, (id *)(a1 + 72));
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(a1 + 40);
  id v13 = v3;
  uint64_t v14 = v7;
  id v9 = v8;
  uint64_t v10 = *(void *)(a1 + 64);
  id v15 = v9;
  uint64_t v18 = v10;
  id v16 = *(id *)(a1 + 48);
  id v11 = v3;
  dispatch_async(v6, block);

  objc_destroyWeak(&v19);
}

void sub_10002C168(uint64_t a1)
{
  id v2 = (id *)(a1 + 80);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  if ([*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count])
  {
    uint64_t v4 = *(void *)(a1 + 64);
    uint64_t v5 = *(void *)(*(void *)(v4 + 8) + 40);
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    v37[2] = sub_10002C70C;
    v37[3] = &unk_1002609E8;
    v37[4] = WeakRetained;
    v37[5] = v4;
    [WeakRetained zonesDeletedOrReset:v5 completion:v37];
  }
  id v6 = *(id *)(a1 + 32);
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = [v6 domain];
    if ([v8 isEqualToString:CKErrorDomain])
    {
      id v9 = [v7 code];

      if (v9 == (id)2) {
        [WeakRetained setBackOffInterval:0.0];
      }
    }
    else
    {
    }
    id v16 = sub_1000083A0();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      id v32 = [*(id *)(a1 + 40) containerIdentifier];
      id v28 = *(id *)(a1 + 48);
      id v29 = objc_alloc_init((Class)NSMutableArray);
      *(void *)long long buf = _NSConcreteStackBlock;
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_100030300;
      NSErrorUserInfoKey v39 = &unk_100260BC0;
      id v40 = v29;
      id v30 = v29;
      [v28 enumerateObjectsUsingBlock:buf];
      __int16 v31 = [v30 componentsJoinedByString:@","];

      *(_DWORD *)long long buf = 138543874;
      *(void *)&uint8_t buf[4] = v32;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v31;
      *(_WORD *)&buf[22] = 2114;
      NSErrorUserInfoKey v39 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@", buf, 0x20u);
    }
    uint64_t v17 = [v7 domain];
    unsigned int v18 = [v17 isEqualToString:CKErrorDomain];

    if (v18)
    {
      unint64_t v19 = (unint64_t)[v7 code];
      if (v19 <= 0x17 && ((1 << v19) & 0x8000C0) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      unint64_t v23 = [v7 domain];
      unsigned int v24 = [v23 isEqualToString:NSCocoaErrorDomain];

      if (v24)
      {
LABEL_16:
        id v20 = sub_1000083A0();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          id v21 = [*(id *)(a1 + 40) containerIdentifier];
          *(_DWORD *)long long buf = 138543618;
          *(void *)&uint8_t buf[4] = v21;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v7;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %@", buf, 0x16u);
        }
        unsigned int v22 = [WeakRetained accessQueue];
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10002C7E4;
        block[3] = &unk_100260A30;
        void block[4] = WeakRetained;
        id v34 = v7;
        objc_copyWeak(&v36, v2);
        uint64_t v35 = *(void *)(a1 + 40);
        dispatch_async(v22, block);

        objc_destroyWeak(&v36);
        goto LABEL_23;
      }
    }
    id v25 = sub_1000083A0();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      sub_1001E5BF8();
    }
  }
  else
  {
    [WeakRetained setBackOffInterval:0.0];
    uint64_t v10 = sub_1000083A0();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = [*(id *)(a1 + 40) containerIdentifier];
      id v12 = *(id *)(a1 + 48);
      id v13 = objc_alloc_init((Class)NSMutableArray);
      *(void *)long long buf = _NSConcreteStackBlock;
      *(void *)&buf[8] = 3221225472;
      *(void *)&uint8_t buf[16] = sub_100030300;
      NSErrorUserInfoKey v39 = &unk_100260BC0;
      id v40 = v13;
      id v14 = v13;
      [v12 enumerateObjectsUsingBlock:buf];
      id v15 = [v14 componentsJoinedByString:@","];

      *(_DWORD *)long long buf = 138543618;
      *(void *)&uint8_t buf[4] = v11;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v15;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).", buf, 0x16u);
    }
    objc_msgSend(*(id *)(a1 + 40), "p_informObserversOfRecordsChanged:", *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40));
    [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) removeAllObjects];
    [*(id *)(a1 + 40) setFetchRecordZoneChangesSuccess:1];
  }
LABEL_23:
  id v26 = objc_retainBlock(*(id *)(a1 + 56));
  char v27 = v26;
  if (v26) {
    (*((void (**)(id, void *))v26 + 2))(v26, v7);
  }
}

void sub_10002C70C(uint64_t a1)
{
  id v2 = sub_10000CE18();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) containerIdentifier];
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    int v5 = 138543618;
    id v6 = v3;
    __int16 v7 = 2114;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - fetchRecordZoneChangesCompletionBlock - zonesDeletedOrReset DONE: %{public}@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_10002C7E4(uint64_t a1)
{
  if (([*(id *)(a1 + 32) serverFetchPostponed] & 1) == 0)
  {
    [*(id *)(a1 + 32) setServerFetchPostponed:1];
    objc_msgSend(*(id *)(a1 + 32), "p_updateRetryParametersFromFetchZoneChangesOperationError:", *(void *)(a1 + 40));
    [*(id *)(a1 + 32) backOffInterval];
    dispatch_time_t v3 = dispatch_time(0, (uint64_t)(v2 * 1000000000.0));
    uint64_t v4 = [*(id *)(a1 + 32) accessQueue];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_10002C8E0;
    v5[3] = &unk_10025F9F8;
    objc_copyWeak(&v6, (id *)(a1 + 56));
    void v5[4] = *(void *)(a1 + 48);
    dispatch_after(v3, v4, v5);

    objc_destroyWeak(&v6);
  }
}

void sub_10002C8E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  dispatch_time_t v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setServerFetchPostponed:0];
    uint64_t v4 = sub_1000083A0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = [*(id *)(a1 + 32) containerIdentifier];
      int v7 = 138543362;
      uint64_t v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch", (uint8_t *)&v7, 0xCu);
    }
    id v6 = [v3 coalescedZoneFetch];
    [v6 signalWithCompletion:&stru_100260A08];
  }
}

void sub_10002CA6C(uint64_t a1)
{
  unsigned int v2 = +[BDSReachability isOffline];
  dispatch_time_t v3 = sub_1000083A0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = [*(id *)(a1 + 32) containerIdentifier];
    int v5 = (void *)v4;
    CFStringRef v6 = @"YES";
    if (v2) {
      CFStringRef v6 = @"NO";
    }
    *(_DWORD *)long long buf = 138543618;
    uint64_t v32 = v4;
    __int16 v33 = 2112;
    CFStringRef v34 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - p_internetReachabilityChanged reachable:%@", buf, 0x16u);
  }
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id obj = [*(id *)(a1 + 32) observers];
  id v7 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = v2 ^ 1;
    uint64_t v10 = *(void *)v26;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v26 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void *)(*((void *)&v25 + 1) + 8 * (void)v11);
        id v13 = [*(id *)(a1 + 32) observers];
        id v14 = [v13 objectForKeyedSubscript:v12];

        if ([v14 count])
        {
          long long v23 = 0u;
          long long v24 = 0u;
          long long v21 = 0u;
          long long v22 = 0u;
          id v15 = v14;
          id v16 = [v15 countByEnumeratingWithState:&v21 objects:v29 count:16];
          if (v16)
          {
            id v17 = v16;
            uint64_t v18 = *(void *)v22;
            do
            {
              unint64_t v19 = 0;
              do
              {
                if (*(void *)v22 != v18) {
                  objc_enumerationMutation(v15);
                }
                [*(id *)(*((void *)&v21 + 1) + 8 * (void)v19) databaseController:*(void *)(a1 + 32) reachabilityChanged:v9];
                unint64_t v19 = (char *)v19 + 1;
              }
              while (v17 != v19);
              id v17 = [v15 countByEnumeratingWithState:&v21 objects:v29 count:16];
            }
            while (v17);
          }
        }
        id v11 = (char *)v11 + 1;
      }
      while (v11 != v8);
      id v8 = [obj countByEnumeratingWithState:&v25 objects:v30 count:16];
    }
    while (v8);
  }
}

void sub_10002D098(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000083A0();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 134218242;
    id v9 = [v6 count];
    __int16 v10 = 2114;
    id v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@", (uint8_t *)&v8, 0x16u);
  }

  objc_msgSend(*(id *)(a1 + 32), "p_informObserversOfRecordsChanged:forRecordType:", v6, v5);
}

void sub_10002D280(id *a1)
{
  unsigned int v2 = sub_10000CE18();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    dispatch_time_t v3 = [a1[4] containerIdentifier];
    id v4 = a1[5];
    id v5 = [a1[6] allObjects];
    *(void *)long long buf = _NSConcreteStackBlock;
    *(void *)&buf[8] = 3221225472;
    *(void *)&uint8_t buf[16] = sub_100030300;
    NSErrorUserInfoKey v39 = &unk_100260BC0;
    v40[0] = objc_alloc_init((Class)NSMutableArray);
    id v6 = v40[0];
    [v5 enumerateObjectsUsingBlock:buf];
    id v7 = [v6 componentsJoinedByString:@","];

    int v8 = [a1[4] zoneObservers];
    *(_DWORD *)long long buf = 138544130;
    *(void *)&uint8_t buf[4] = v3;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v4;
    *(_WORD *)&buf[22] = 2114;
    NSErrorUserInfoKey v39 = v7;
    LOWORD(v40[0]) = 2112;
    *(id *)((char *)v40 + 2) = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - p_informObserversOfSaltVersionIdentifierChanged: saltVersionIdentifier=%{public}@ zoneIDs=%{public}@ observers:%@", buf, 0x2Au);
  }
  if ([a1[5] length])
  {
    id v9 = dispatch_group_create();
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    id v10 = a1[6];
    id v11 = [v10 countByEnumeratingWithState:&v33 objects:v37 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v34;
      long long v26 = v30;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v34 != v13) {
            objc_enumerationMutation(v10);
          }
          id v15 = *(void **)(*((void *)&v33 + 1) + 8 * i);
          id v16 = objc_msgSend(v15, "zoneName", v26);
          id v17 = [v16 length];

          if (v17)
          {
            uint64_t v18 = [a1[4] zoneObservers];
            unint64_t v19 = [v15 zoneName];
            id v20 = [v18 objectForKey:v19];

            if (v20)
            {
              dispatch_group_enter(v9);
              id v22 = a1[4];
              id v21 = a1[5];
              v29[0] = _NSConcreteStackBlock;
              v29[1] = 3221225472;
              v30[0] = sub_10002D6A8;
              v30[1] = &unk_100260AD0;
              v30[2] = v22;
              v30[3] = v15;
              id v23 = v21;
              id v31 = v23;
              uint64_t v32 = v9;
              [v20 databaseController:v22 saltVersionIdentifierChanged:v23 completion:v29];
            }
          }
        }
        id v12 = [v10 countByEnumeratingWithState:&v33 objects:v37 count:16];
      }
      while (v12);
    }

    long long v24 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10002D7B4;
    block[3] = &unk_100260330;
    id v28 = a1[7];
    dispatch_group_notify(v9, v24, block);

    long long v25 = v28;
    goto LABEL_18;
  }
  id v9 = objc_retainBlock(a1[7]);
  if (v9)
  {
    long long v25 = +[NSError errorWithDomain:@"BDSErrorDomain" code:1005 userInfo:0];
    ((void (*)(NSObject *, void *))v9[2].isa)(v9, v25);
LABEL_18:
  }
}

void sub_10002D6A8(uint64_t a1, int a2)
{
  id v4 = sub_10000CE18();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [*(id *)(a1 + 32) containerIdentifier];
    id v6 = [*(id *)(a1 + 40) zoneName];
    uint64_t v7 = *(void *)(a1 + 48);
    int v8 = 138413058;
    id v9 = v5;
    __int16 v10 = 2112;
    id v11 = v6;
    __int16 v12 = 2112;
    uint64_t v13 = v7;
    __int16 v14 = 1024;
    int v15 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ name:%@ salt:%@  success:%{BOOL}d  LEAVE GROUP", (uint8_t *)&v8, 0x26u);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_10002D7B4(uint64_t a1)
{
  unsigned int v2 = sub_10000CE18();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "p_informObserversOfSaltVersionIdentifierChanged DONE", v5, 2u);
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void))v3 + 2))(v3, 0);
  }
}

void sub_10002E564(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    __int16 v10 = sub_1000083A0();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1001E5CC8(a1, (uint64_t)v9, v10);
    }
  }
  id v11 = objc_retainBlock(*(id *)(a1 + 40));
  __int16 v12 = v11;
  if (v11) {
    (*((void (**)(id, id))v11 + 2))(v11, v9);
  }
}

void sub_10002E724(id *a1)
{
  unsigned int v2 = [a1[4] desiredRecordZoneIDs];
  id v3 = [v2 valueForKey:@"zoneName"];

  id v4 = +[NSError errorWithDomain:@"BDSCloudKitClientError" code:2003 userInfo:0];
  id v5 = a1[4];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10002E840;
  v7[3] = &unk_1002604D8;
  void v7[4] = v5;
  id v8 = a1[5];
  id v9 = v3;
  id v10 = a1[6];
  id v6 = v3;
  [v5 detachWithError:v4 completion:v7];
}

void sub_10002E840(uint64_t a1)
{
  unsigned int v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10002E8F8;
  v4[3] = &unk_1002604B0;
  void v4[4] = v2;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  [v2 _deleteRecordZonesWithIDs:v3 qualityOfService:17 completion:v4];
}

void sub_10002E8F8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10002E988;
  v3[3] = &unk_100260330;
  id v4 = *(id *)(a1 + 48);
  [v1 attachToZones:v2 completion:v3];
}

void sub_10002E988(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    uint64_t v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

void sub_10002EADC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10002EB6C;
  v3[3] = &unk_100260330;
  id v4 = *(id *)(a1 + 48);
  [v1 detachWithError:v2 completion:v3];
}

void sub_10002EB6C(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    uint64_t v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

void sub_10002ED20(uint64_t a1)
{
  [*(id *)(a1 + 32) invalidateSalt];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10002EDB8;
  v3[3] = &unk_100260330;
  uint64_t v2 = *(void **)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  [v2 detachWithError:0 completion:v3];
}

void sub_10002EDB8(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    uint64_t v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

void sub_10002EF1C(uint64_t a1)
{
  id v9 = [*(id *)(a1 + 32) observers];
  uint64_t v2 = [v9 objectForKeyedSubscript:*(void *)(a1 + 40)];
  if (!v2)
  {
    uint64_t v2 = objc_opt_new();
    [v9 setObject:v2 forKeyedSubscript:*(void *)(a1 + 40)];
  }
  [v2 addObject:*(void *)(a1 + 48)];
  uint64_t v3 = [*(id *)(a1 + 32) container];
  if (v3)
  {
    id v4 = (void *)v3;
    unsigned int v5 = [*(id *)(a1 + 32) attachedToContainer];

    if (v5)
    {
      id v6 = *(void **)(a1 + 48);
      id v7 = *(void **)(a1 + 32);
      id v8 = [v7 container];
      [v6 databaseController:v7 attachmentChanged:v8 != 0];
    }
  }
}

void sub_10002F124(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) observers];
  uint64_t v3 = [v2 objectForKeyedSubscript:*(void *)(a1 + 40)];

  if (v3)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10002F270;
    v7[3] = &unk_100260B20;
    id v8 = *(id *)(a1 + 48);
    id v4 = [v3 indexesOfObjectsPassingTest:v7];
    if ([v4 count])
    {
      [v3 removeObjectsAtIndexes:v4];
    }
    else
    {
      id v6 = sub_1000083A0();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
        sub_1001E5F3C();
      }
    }
    unsigned int v5 = v8;
  }
  else
  {
    unsigned int v5 = sub_1000083A0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1001E5ECC();
    }
  }
}

BOOL sub_10002F270(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 32) == a2;
}

void sub_10002F364(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) observers];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10002F404;
  v3[3] = &unk_100260B48;
  id v4 = *(id *)(a1 + 40);
  [v2 enumerateKeysAndObjectsUsingBlock:v3];
}

void sub_10002F404(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10002F4BC;
  v6[3] = &unk_100260B20;
  id v7 = *(id *)(a1 + 32);
  unsigned int v5 = [v4 indexesOfObjectsPassingTest:v6];
  if ([v5 count]) {
    [v4 removeObjectsAtIndexes:v5];
  }
}

BOOL sub_10002F4BC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 32) == a2;
}

void sub_10002F5A0(uint64_t a1)
{
  if (*(void *)(a1 + 32) && [*(id *)(a1 + 40) length])
  {
    uint64_t v2 = [*(id *)(a1 + 48) zoneObservers];
    [v2 setObject:*(void *)(a1 + 32) forKey:*(void *)(a1 + 40)];

    uint64_t v3 = sub_10000CE18();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      int v6 = 134218242;
      uint64_t v7 = v4;
      __int16 v8 = 2114;
      uint64_t v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - Setting observer=%p for zone =%{public}@", (uint8_t *)&v6, 0x16u);
    }
  }
  else
  {
    uint64_t v3 = sub_10000CE18();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001E601C();
    }
  }
}

void sub_10002F800(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_10002F814(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v3 = sub_1000083A0();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v4 = *(void **)(a1 + 32);
      *(_DWORD *)long long buf = 138543362;
      long long v26 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - Registering store for record zone %{public}@", buf, 0xCu);
    }

    uint64_t v5 = [WeakRetained tokenStores];
    int v6 = (id *)(a1 + 32);
    uint64_t v7 = [v5 objectForKeyedSubscript:*(void *)(a1 + 32)];

    if (v7)
    {
      __int16 v8 = sub_1000083A0();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_1001E60F4((uint64_t)v6, v8, v9, v10, v11, v12, v13, v14);
      }
    }
    else
    {
      uint64_t v15 = *(void *)(a1 + 40);
      id v16 = [WeakRetained tokenStores];
      [v16 setObject:v15 forKeyedSubscript:*(void *)(a1 + 32)];

      if ([*(id *)(a1 + 48) attachedToContainer])
      {
        id v17 = [WeakRetained changedRecordZoneIDs];
        unsigned int v18 = [v17 containsObject:*v6];

        if (v18)
        {
          unint64_t v19 = sub_1000083A0();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
          {
            id v20 = [WeakRetained containerIdentifier];
            id v21 = *v6;
            *(_DWORD *)long long buf = 138543618;
            long long v26 = v20;
            __int16 v27 = 2114;
            id v28 = v21;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@", buf, 0x16u);
          }
          id v22 = [WeakRetained coalescedZoneFetch];
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 3221225472;
          v23[2] = sub_10002FAE0;
          v23[3] = &unk_10025F700;
          long long v24 = *v6;
          [v22 signalWithCompletion:v23];

          __int16 v8 = v24;
        }
        else
        {
          __int16 v8 = [*v6 zoneName];
          objc_msgSend(WeakRetained, "p_informObserversOfCompletedFetchOfZone:", v8);
        }
      }
      else
      {
        __int16 v8 = sub_1000083A0();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - skipping fetch, we are not yet attached in registerServerChangeTokenStore:forZoneID:", buf, 2u);
        }
      }
    }
  }
}

void sub_10002FAE0(uint64_t a1)
{
  uint64_t v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10002FC94(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10002FCA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    int v4 = [WeakRetained tokenStores];
    id v5 = [v4 copy];

    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    int v6 = v5;
    id v7 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v17;
      while (2)
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v17 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v11 = *(void *)(*((void *)&v16 + 1) + 8 * i);
          uint64_t v12 = -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", v11, (void)v16);
          uint64_t v13 = v12;
          if (*(void **)(a1 + 32) == v12)
          {
            uint64_t v15 = [v3 tokenStores];
            [v15 removeObjectForKey:v11];

            uint64_t v14 = v6;
            goto LABEL_13;
          }
        }
        id v8 = [v6 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }

    uint64_t v14 = sub_1000083A0();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_1001E61A8(v14);
    }
LABEL_13:
  }
}

void sub_10002FFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100030004(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) attachedToContainer];
  uint64_t v2 = [*(id *)(a1 + 32) container];
  uint64_t v3 = [v2 description];
  uint64_t v4 = *(void *)(*(void *)(a1 + 56) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  int v6 = *(NSObject **)(a1 + 40);
  dispatch_group_leave(v6);
}

void sub_100030300(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 zoneName];
  [v2 addObject:v3];
}

void sub_100030358(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v4 = [a2 zoneID];
  id v3 = [v4 zoneName];
  [v2 addObject:v3];
}

void sub_1000303C0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_100030410(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_100030448(void *a1, int a2, void *a3)
{
  NSErrorUserInfoKey v10 = NSUnderlyingErrorKey;
  uint64_t v11 = a3;
  id v5 = a3;
  id v6 = a1;
  id v7 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];
  id v8 = +[NSError errorWithDomain:v6 code:a2 userInfo:v7];

  return v8;
}

void sub_100030934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100030958(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000083A0();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
    sub_1001E6230((uint64_t)v5, (uint64_t)v6, v7);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v9 = [WeakRetained delegate];

  if (v9)
  {
    NSErrorUserInfoKey v10 = [WeakRetained delegate];
    [v10 handleNotification:v5];
  }
  else
  {
    NSErrorUserInfoKey v10 = sub_1000083A0();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1001E61EC(v10);
    }
  }
}

void sub_1000313AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000313D0(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = *(void *)(a1 + 32);
  id v5 = +[NSArray arrayWithObjects:&v6 count:1];
  [WeakRetained _postServiceNotificationNames:v5 latestChangeToken:a2];
}

id sub_100033E50(uint64_t a1)
{
  return [*(id *)(a1 + 32) endTransaction];
}

void sub_100034A30(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v4)
  {
    if (v3) {
      v3[2](v3, v4);
    }
  }
  else if (v3)
  {
    v3[2](v3, 0);
  }
}

void sub_100035B90(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000063E8();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412290;
    id v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Returning widget infos: %@", (uint8_t *)&v10, 0xCu);
  }

  id v8 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v9 = v8;
  if (v8) {
    (*((void (**)(id, id, id))v8 + 2))(v8, v5, v6);
  }
}

void sub_100036368(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10003638C(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!v7)
  {
    id v4 = [WeakRetained priceTracker];
    [v4 updateTrackedPricesIgnoringScheduleForNewItemsWithCompletionHandler:&stru_100260D90];
  }
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, id))v5 + 2))(v5, v7);
  }
}

void sub_1000364E8(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, void))v1 + 2))(v1, 0);
    id v1 = v2;
  }
}

void sub_100036608(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    if ([v5 count])
    {
      id v7 = [v5 lastObject];
      [v5 removeLastObject];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_100036724;
      v10[3] = &unk_100260DB8;
      id v12 = v6;
      void v10[4] = a1;
      v10[5] = v7;
      id v11 = v5;
      sub_100036838(a1, v7, v10);
    }
    else
    {
      id v8 = objc_retainBlock(v6);
      uint64_t v9 = v8;
      if (v8) {
        (*((void (**)(id, void))v8 + 2))(v8, 0);
      }
    }
  }
}

void sub_100036724(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = objc_retainBlock(*(id *)(a1 + 56));
    id v5 = v4;
    if (v4) {
      (*((void (**)(id, id))v4 + 2))(v4, v3);
    }
  }
  else
  {
    id v6 = [*(id *)(a1 + 32) priceTracker];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100036828;
    v8[3] = &unk_100260528;
    uint64_t v7 = *(void *)(a1 + 40);
    void v8[4] = *(void *)(a1 + 32);
    id v9 = *(id *)(a1 + 48);
    id v10 = *(id *)(a1 + 56);
    objc_msgSend(v6, "bdsctl_addTrackedItem:completion:", v7, v8);
  }
}

uint64_t sub_100036828(void *a1)
{
  return sub_100036608(a1[4], a1[5], a1[6]);
}

void sub_100036838(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    uint64_t v7 = [v5 adamID];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100036920;
    v8[3] = &unk_10025FF00;
    id v9 = v5;
    id v10 = v6;
    +[BDSServiceCenter fetchIsAssetID:v7 inCollectionID:@"Want_To_Read_Collection_ID" completion:v8];
  }
}

void sub_100036920(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = sub_1000063E8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[BDSService] Item '%@' is already in WTR collection", buf, 0xCu);
    }

    id v5 = objc_retainBlock(*(id *)(a1 + 40));
    id v6 = v5;
    if (v5) {
      (*((void (**)(id, void))v5 + 2))(v5, 0);
    }
  }
  else
  {
    uint64_t v7 = [*(id *)(a1 + 32) adamID];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100036A9C;
    v8[3] = &unk_10025FF00;
    id v9 = *(id *)(a1 + 32);
    id v10 = *(id *)(a1 + 40);
    +[BDSServiceCenter addStoreID:v7 toCollectionID:@"Want_To_Read_Collection_ID" completion:v8];

    id v6 = v9;
  }
}

void sub_100036A9C(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = sub_1000063E8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v8 = 138412290;
      uint64_t v9 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[BDSService] Item '%@' added to WTR collection", (uint8_t *)&v8, 0xCu);
    }

    id v5 = 0;
  }
  else
  {
    id v5 = +[NSError errorWithDomain:@"BDSErrorDomain" code:-1 userInfo:&off_1002705C0];
  }
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v7 = v6;
  if (v6) {
    (*((void (**)(id, void *))v6 + 2))(v6, v5);
  }
}

void sub_100036C70(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, void))v1 + 2))(v1, 0);
    id v1 = v2;
  }
}

void sub_10003740C(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

id sub_10003751C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _stateForLog];
}

void sub_100037E00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100037E28(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained performWorkWithCompletion:v3];
  }
  else
  {
    id v5 = objc_retainBlock(v3);

    if (v5) {
      v5[2](v5);
    }
    id v3 = v5;
  }
}

void sub_100037EB4(id a1, NSString *a2)
{
  id v2 = a2;
  id v3 = sub_1000083A0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "_coalescedNotification in %@ did not call notification within 10s.", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000380B4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setClientCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "clientCount") + 1);
  id v2 = [*(id *)(a1 + 32) transactionLifetime];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) transactionLifetime];
    dispatch_source_cancel(v3);
  }
}

void sub_1000382BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000382E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) lifecycleAccessQueue];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10003839C;
  v3[3] = &unk_10025F9F8;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  void v3[4] = *(void *)(a1 + 32);
  dispatch_async(v2, v3);

  objc_destroyWeak(&v4);
}

void sub_10003839C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = +[BULogUtilities shared];
    unsigned int v4 = [v3 verboseLoggingEnabled];

    if (v4)
    {
      id v5 = sub_10000CD80();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        id v6 = [*(id *)(a1 + 32) transactionName];
        int v11 = 138412290;
        uint64_t v12 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction client decrementing for %@\\\"\"", (uint8_t *)&v11, 0xCu);
      }
    }
    objc_msgSend(WeakRetained, "setClientCount:", (char *)objc_msgSend(WeakRetained, "clientCount") - 1);
    if (![WeakRetained clientCount])
    {
      id v7 = +[BULogUtilities shared];
      unsigned int v8 = [v7 verboseLoggingEnabled];

      if (v8)
      {
        uint64_t v9 = sub_10000CD80();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          id v10 = [*(id *)(a1 + 32) transactionName];
          int v11 = 138412290;
          uint64_t v12 = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction clientCount 0 for %@\\\"\"", (uint8_t *)&v11, 0xCu);
        }
      }
      objc_msgSend(WeakRetained, "laq_scheduleTransactionLifetime");
    }
  }
}

id sub_100038764(uint64_t a1)
{
  id v2 = +[BULogUtilities shared];
  unsigned int v3 = [v2 verboseLoggingEnabled];

  if (v3)
  {
    unsigned int v4 = sub_10000CD80();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = [*(id *)(a1 + 32) transactionName];
      int v8 = 138412290;
      uint64_t v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction Timer Completion fired for %@\\\"\"", (uint8_t *)&v8, 0xCu);
    }
  }
  id v6 = [*(id *)(a1 + 32) delegate];
  [v6 transactionCompleted:*(void *)(a1 + 32)];

  [*(id *)(a1 + 32) setDelegate:0];
  return [*(id *)(a1 + 32) setTransactionLifetime:0];
}

id sub_10003887C(uint64_t a1)
{
  id v2 = +[BULogUtilities shared];
  unsigned int v3 = [v2 verboseLoggingEnabled];

  if (v3)
  {
    unsigned int v4 = sub_10000CD80();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = [*(id *)(a1 + 32) transactionName];
      int v7 = 138412290;
      int v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction Timer Cancel fired for %@\\\"\"", (uint8_t *)&v7, 0xCu);
    }
  }
  return [*(id *)(a1 + 32) setTransactionLifetime:0];
}

void sub_10003A090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003A0A8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003A0B8(uint64_t a1)
{
}

uint64_t sub_10003A0C0(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = +[NSData dataWithContentsOfURL:a2];
  return _objc_release_x1();
}

void sub_10003A2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10003A2D8(void *a1, uint64_t a2)
{
  unsigned int v3 = (void *)a1[4];
  uint64_t v4 = *(void *)(a1[6] + 8);
  id obj = *(id *)(v4 + 40);
  unsigned __int8 v5 = [v3 writeToURL:a2 options:1073741825 error:&obj];
  objc_storeStrong((id *)(v4 + 40), obj);
  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = v5;
}

void sub_10003A4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_10003A4E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[NSFileManager defaultManager];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id obj = *(id *)(v5 + 40);
  unsigned __int8 v6 = [v4 removeItemAtURL:v3 error:&obj];

  objc_storeStrong((id *)(v5 + 40), obj);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v6;
}

void sub_10003E8E4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) transactions];
  id v3 = +[BCCloudKitDataChangedTransaction transactionNameForEntityName:*(void *)(a1 + 40)];
  unsigned __int8 v6 = [v2 objectForKey:v3];

  if (!v6)
  {
    unsigned __int8 v6 = [[BCCloudKitDataChangedTransaction alloc] initWithEntityName:*(void *)(a1 + 40) notificationName:*(void *)(a1 + 48) delegate:*(void *)(a1 + 32)];
    uint64_t v4 = [*(id *)(a1 + 32) transactions];
    uint64_t v5 = [(BCCloudKitTransaction *)v6 transactionName];
    [v4 setObject:v6 forKey:v5];
  }
  [(BCCloudKitTransaction *)v6 clientConnected];
  [(BCCloudKitTransaction *)v6 signal];
}

void sub_10003EADC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) transactions];
  id v3 = +[BCCloudKitSyncToCKTransaction transactionNameForEntityName:*(void *)(a1 + 40)];
  uint64_t v4 = [v2 objectForKey:v3];

  uint64_t v5 = [(BCCloudKitTransaction *)v4 transactionName];
  unsigned __int8 v6 = (void *)v5;
  if (v4)
  {
    int v7 = (void *)v5;
  }
  else
  {
    uint64_t v4 = [[BCCloudKitSyncToCKTransaction alloc] initWithEntityName:*(void *)(a1 + 40) syncManager:*(void *)(a1 + 48) delegate:*(void *)(a1 + 32)];
    int v7 = [(BCCloudKitTransaction *)v4 transactionName];

    int v8 = [*(id *)(a1 + 32) transactions];
    [v8 setObject:v4 forKey:v7];

    id v9 = objc_alloc_init((Class)NSMutableArray);
    id v10 = [*(id *)(a1 + 32) transactionCompletionCallbacks];
    [v10 setObject:v9 forKeyedSubscript:v7];

    int v11 = sub_1000083A0();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
      sub_1001E6844((uint64_t)v7, v11);
    }
  }
  if (*(void *)(a1 + 56))
  {
    uint64_t v12 = sub_1000083A0();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
      sub_1001E6794((id *)(a1 + 56), (uint64_t)v7, v12);
    }

    uint64_t v13 = [*(id *)(a1 + 32) transactionCompletionCallbacks];
    uint64_t v14 = [v13 objectForKeyedSubscript:v7];
    id v15 = objc_retainBlock(*(id *)(a1 + 56));
    [v14 addObject:v15];
  }
  [(BCCloudKitTransaction *)v4 clientConnected];
  [(BCCloudKitTransaction *)v4 signal];
}

void sub_10003ED98(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) transactions];
  id v3 = +[BCCloudKitFetchChangesTransaction transactionNameForEntityName:@"iBooks"];
  int v8 = [v2 objectForKey:v3];

  if (!v8)
  {
    uint64_t v4 = [BCCloudKitFetchChangesTransaction alloc];
    uint64_t v5 = [*(id *)(a1 + 32) cloudKitController];
    int v8 = [(BCCloudKitFetchChangesTransaction *)v4 initWithCloudKitController:v5 delegate:*(void *)(a1 + 32)];

    unsigned __int8 v6 = [*(id *)(a1 + 32) transactions];
    int v7 = [(BCCloudKitTransaction *)v8 transactionName];
    [v6 setObject:v8 forKey:v7];
  }
  [(BCCloudKitTransaction *)v8 clientConnected];
  [(BCCloudKitTransaction *)v8 signal];
}

void sub_10003EF60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) transactionName];
  id v3 = sub_1000083A0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138412290;
    id v23 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[BCCloudKitTransactionManager] Transaction completed %@", buf, 0xCu);
  }

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v17 = a1;
  uint64_t v4 = [*(id *)(a1 + 40) transactionCompletionCallbacks];
  uint64_t v5 = [v4 objectForKeyedSubscript:v2];

  id v6 = [v5 countByEnumeratingWithState:&v18 objects:v26 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v19;
    do
    {
      id v9 = 0;
      do
      {
        if (*(void *)v19 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v18 + 1) + 8 * (void)v9);
        int v11 = sub_1000083A0();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          id v14 = objc_retainBlock(v10);
          *(_DWORD *)long long buf = 138412546;
          id v23 = v14;
          __int16 v24 = 2112;
          long long v25 = v2;
          _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Calling block %@ for transaction %@ ", buf, 0x16u);
        }
        id v12 = objc_retainBlock(v10);
        uint64_t v13 = v12;
        if (v12) {
          (*((void (**)(id))v12 + 2))(v12);
        }

        id v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v18 objects:v26 count:16];
    }
    while (v7);
  }

  id v15 = [*(id *)(v17 + 40) transactions];
  [v15 removeObjectForKey:v2];

  long long v16 = [*(id *)(v17 + 40) transactionCompletionCallbacks];
  [v16 removeObjectForKey:v2];
}

void sub_10003F57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003F594(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003F5A4(uint64_t a1)
{
}

void sub_10003F5AC(uint64_t a1)
{
  id v21 = +[BDSBookWidgetInfoMO fetchRequest];
  id v2 = [*(id *)(a1 + 32) assetID];
  id v3 = +[NSPredicate predicateWithFormat:@"assetID == %@", v2];
  [v21 setPredicate:v3];

  [v21 setFetchLimit:1];
  uint64_t v4 = [*(id *)(a1 + 40) executeFetchRequest:v21 error:0];
  uint64_t v5 = [v4 firstObject];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v8 = [[BDSBookWidgetInfoMO alloc] initWithContext:*(void *)(a1 + 40)];
    uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;
  }
  int v11 = [*(id *)(a1 + 32) assetID];
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setAssetID:v11];

  id v12 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v13 = [*(id *)(a1 + 32) title];
  objc_msgSend(v12, "bl_setNonNilValue:forKey:", v13, @"title");

  id v14 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  id v15 = [*(id *)(a1 + 32) coverURL];
  objc_msgSend(v14, "bl_setNonNilValue:forKey:", v15, @"coverURL");

  long long v16 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v17 = [*(id *)(a1 + 32) totalDuration];
  objc_msgSend(v16, "bl_setNonNilValue:forKey:", v17, @"totalDuration");

  long long v18 = [*(id *)(a1 + 32) pageProgressionDirection];
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setPageProgressionDirection:v18];

  long long v19 = [*(id *)(a1 + 32) cloudAssetType];
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setCloudAssetType:v19];

  long long v20 = [*(id *)(a1 + 32) libraryContentAssetType];
  [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setLibraryContentAssetType:v20];

  objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "setIsExplicit:", objc_msgSend(*(id *)(a1 + 32), "isExplicit"));
}

id sub_100040908(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setJaliscoUpdateSuccessful:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1000409D4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v2 = +[NSArray arrayWithObjects:&v3 count:1];
  objc_msgSend(v1, "_l_cancelWithManagers:", v2);
}

void sub_100040E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100040E24(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) currentProgress];

  if (v2)
  {
    uint64_t v3 = sub_10000CEB0();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138543362;
      CFStringRef v15 = @"YES";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Doing nothing because alreadyRunning is %{public}@", buf, 0xCu);
    }
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    uint64_t v4 = [*(id *)(a1 + 32) managers];
    [v4 addObject:*(void *)(a1 + 40)];

    objc_initWeak((id *)buf, *(id *)(a1 + 32));
    uint64_t v5 = (char *)[*(id *)(a1 + 32) currentObserverIdentifier] + 1;
    [*(id *)(a1 + 32) setCurrentObserverIdentifier:v5];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _DWORD v12[2] = sub_1000410C4;
    v12[3] = &unk_100260F28;
    objc_copyWeak(v13, (id *)buf);
    v13[1] = v5;
    [*(id *)(a1 + 32) setObserver:v12];
    uint64_t v6 = +[NSProgress progressWithTotalUnitCount:1];
    [*(id *)(a1 + 32) setCurrentProgress:v6];

    id v7 = [*(id *)(a1 + 32) currentProgress];
    [v7 setCancellationHandler:&stru_100260F48];

    uint64_t v8 = sub_10000CEB0();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "About to enable sync", v11, 2u);
    }

    uint64_t v9 = +[BCCloudCollectionsManager sharedManager];
    id v10 = [*(id *)(a1 + 32) observer];
    [v9 setEnableCloudSync:1 completion:v10];

    objc_destroyWeak(v13);
    objc_destroyWeak((id *)buf);
  }
}

void sub_100041084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000410C4(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = sub_10000CEB0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 134217984;
    id v9 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BDSAutomaticPinningListUpdater[%p] _updateCloudDataWithManager - About to call requestUpdateAttachment", buf, 0xCu);
  }

  uint64_t v5 = +[BCCloudKitController sharedInstance];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100041230;
  v6[3] = &unk_100260F00;
  objc_copyWeak(v7, v2);
  v7[1] = *(id *)(a1 + 40);
  [v5 requestUpdateAttachmentWithCompletion:v6];

  objc_destroyWeak(v7);
}

void sub_100041214(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100041230(uint64_t a1, uint64_t a2, int a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = sub_10000CEB0();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 134218496;
    id v9 = WeakRetained;
    __int16 v10 = 1024;
    int v11 = a2;
    __int16 v12 = 1024;
    int v13 = a3;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "BDSAutomaticPinningListUpdater[%p] _updateCloudDataWithManager - requestUpdateAttachment completion: attached:%d, reachable:%d", (uint8_t *)&v8, 0x18u);
  }

  [WeakRetained _updateAttachmentCompletedFromObserver:*(void *)(a1 + 40) attached:a2];
}

void sub_100041320(id a1)
{
  id v1 = +[BCCloudCollectionsManager sharedManager];
  [v1 setEnableCloudSync:0];
}

void sub_1000414AC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) currentProgress];
  if ([v2 isCancelled])
  {

LABEL_9:
    uint64_t v6 = sub_10000CEB0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 32) currentObserverIdentifier];
      *(_DWORD *)long long buf = 134217984;
      id v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Was cancelled before fetching records finished. currentObserver:%lu", buf, 0xCu);
    }

    return;
  }
  id v3 = *(id *)(a1 + 40);
  id v4 = [*(id *)(a1 + 32) currentObserverIdentifier];

  if (v3 != v4) {
    goto LABEL_9;
  }
  uint64_t v5 = [*(id *)(a1 + 32) observer];
  id v8 = objc_retainBlock(v5);

  if (v8) {
    [*(id *)(a1 + 32) setObserver:0];
  }
  objc_msgSend(*(id *)(a1 + 32), "_l_finishedFetchingCollectionsWithManager:", *(unsigned __int8 *)(a1 + 48));
}

void sub_1000417B8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000417E4(uint64_t a1)
{
  id WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10004188C;
    v3[3] = &unk_10025F700;
    void v3[4] = WeakRetained;
    os_unfair_lock_lock(WeakRetained + 2);
    sub_10004188C((uint64_t)v3);
    os_unfair_lock_unlock(v2 + 2);
  }
}

id sub_10004188C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_l_finishWithError:", 0);
}

void sub_100041DAC(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

void sub_100041EB4(id a1)
{
  qword_100297568 = objc_alloc_init(BCCloudDataNullPrivacyDelegate);
  _objc_release_x1();
}

uint64_t sub_100043340(uint64_t a1)
{
  qword_100297580 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));
  return _objc_release_x1();
}

void sub_1000434B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000434D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v6 = sub_10000D068();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "BDSWidgetCenterManager - reload timeline", v20, 2u);
  }

  id v7 = [WeakRetained timelineController];
  id v8 = [v7 reloadTimelineWithReason:@"bookdatastored"];

  id v9 = objc_loadWeakRetained(v4);
  LODWORD(v7) = [v9 shouldDonateRelevance];

  if (v7)
  {
    id v10 = sub_10000D068();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BDSWidgetCenterManager - donating relevance", v20, 2u);
    }

    id v11 = objc_alloc_init((Class)INRelevantShortcut);
    [v11 setWidgetKind:@"BooksWidget"];
    id v12 = objc_alloc((Class)INDateRelevanceProvider);
    int v13 = +[NSDate now];
    id v14 = [v12 initWithStartDate:v13 endDate:0];
    id v22 = v14;
    CFStringRef v15 = +[NSArray arrayWithObjects:&v22 count:1];
    [v11 setRelevanceProviders:v15];

    long long v16 = +[INRelevantShortcutStore defaultStore];
    id v21 = v11;
    uint64_t v17 = +[NSArray arrayWithObjects:&v21 count:1];
    [v16 setRelevantShortcuts:v17 completionHandler:&stru_100260FF0];
  }
  id v18 = objc_retainBlock(v3);
  long long v19 = v18;
  if (v18) {
    (*((void (**)(id))v18 + 2))(v18);
  }
}

void sub_100043730(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = sub_10000D068();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001E6EE0((uint64_t)v2, v4);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BDSWidgetCenterManager - relevance donation succeeded", v5, 2u);
  }
}

id sub_1000439E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) endTransaction];
}

void sub_100045210(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = sub_1000083A0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001E716C();
    }
  }
  else
  {
    if (!a2) {
      goto LABEL_5;
    }
    uint64_t v6 = sub_1000083A0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 32) entityName];
      int v8 = 138412290;
      id v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@", (uint8_t *)&v8, 0xCu);
    }
  }

LABEL_5:
}

void sub_1000454A0(uint64_t a1, void *a2, char a3)
{
  id v5 = a2;
  if ([v5 count])
  {
    uint64_t v6 = *(void **)(a1 + 32);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100045594;
    v9[3] = &unk_100261040;
    char v12 = a3;
    id v10 = v6;
    id v11 = *(id *)(a1 + 40);
    [v10 syncCloudData:v5 completion:v9];
  }
  else
  {
    id v7 = objc_retainBlock(*(id *)(a1 + 40));
    int v8 = v7;
    if (v7) {
      (*((void (**)(id))v7 + 2))(v7);
    }
  }
}

void sub_100045594(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    [*(id *)(a1 + 32) signalSyncToCK];
  }
  id v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    v2[2]();
    id v2 = v3;
  }
}

void sub_1000457A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000457C4(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_100045838(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = objc_alloc((Class)NSFetchRequest);
    id v5 = [WeakRetained entityName];
    id v6 = [v4 initWithEntityName:v5];

    if (*(void *)(a1 + 48) >= 0x40uLL) {
      uint64_t v7 = 64;
    }
    else {
      uint64_t v7 = *(void *)(a1 + 48);
    }
    [v6 setFetchLimit:v7];
    int v8 = +[NSPredicate predicateWithFormat:@"editGeneration > syncGeneration"];
    [v6 setPredicate:v8];

    id v43 = 0;
    id v9 = [v3 executeFetchRequest:v6 error:&v43];
    id v10 = v43;
    [WeakRetained _logError:v10 at:@"_dirtyMutableCloudDataWithFetchLimit - fetch"];
    if ([v9 count])
    {
      id v33 = (id)v7;
      uint64_t v34 = a1;
      long long v35 = v10;
      id v37 = v6;
      id v32 = [v9 count];
      id v11 = sub_1000083A0();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        char v12 = [WeakRetained entityName];
        id v13 = [v9 count];
        *(_DWORD *)long long buf = 138543618;
        id v46 = v12;
        __int16 v47 = 2048;
        id v48 = v13;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ startSyncToCKWithCompletion found %lu dirty records", buf, 0x16u);
      }
      id v14 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v9, "count"));
      CFStringRef v15 = [WeakRetained privacyDelegate];
      long long v39 = 0u;
      long long v40 = 0u;
      long long v41 = 0u;
      long long v42 = 0u;
      long long v36 = v9;
      id v16 = v9;
      id v17 = [v16 countByEnumeratingWithState:&v39 objects:v44 count:16];
      if (v17)
      {
        id v18 = v17;
        uint64_t v19 = *(void *)v40;
        do
        {
          for (i = 0; i != v18; i = (char *)i + 1)
          {
            if (*(void *)v40 != v19) {
              objc_enumerationMutation(v16);
            }
            id v21 = *(void **)(*((void *)&v39 + 1) + 8 * i);
            [v21 setPrivacyDelegate:v15];
            id v22 = [v21 mutableCopy];
            [v3 refreshObject:v21 mergeChanges:1];
            if (v22)
            {
              id v23 = [WeakRetained privacyDelegate];
              [v22 setPrivacyDelegate:v23];

              [v14 addObject:v22];
            }
          }
          id v18 = [v16 countByEnumeratingWithState:&v39 objects:v44 count:16];
        }
        while (v18);
      }

      id v24 = objc_retainBlock(*(id *)(v34 + 32));
      long long v25 = v24;
      if (v24) {
        (*((void (**)(id, id, BOOL))v24 + 2))(v24, v14, v32 == v33);
      }

      id v10 = v35;
      if ([v3 hasChanges])
      {
        id v38 = v35;
        [v3 save:&v38];
        id v26 = v38;

        [WeakRetained _logError:v26 at:@"_dirtyMutableCloudDataWithFetchLimit - fetch"];
        id v10 = v26;
      }
      id v9 = v36;
      id v6 = v37;
    }
    else
    {
      id v29 = sub_1000083A0();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        id v30 = [WeakRetained entityName];
        *(_DWORD *)long long buf = 138412290;
        id v46 = v30;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating", buf, 0xCu);
      }
      id v31 = objc_retainBlock(*(id *)(a1 + 32));
      id v14 = v31;
      if (v31) {
        (*((void (**)(id, void, void))v31 + 2))(v31, 0, 0);
      }
    }
  }
  else
  {
    id v27 = objc_retainBlock(*(id *)(a1 + 32));
    id v28 = v27;
    if (v27) {
      (*((void (**)(id, void, void))v27 + 2))(v27, 0, 0);
    }
  }
}

void sub_100045D44(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, id))v3 + 2))(v3, v5);
  }
}

void sub_100045E80(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void))v3 + 2))(v3, 0);
  }
}

void sub_1000460FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100046120(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_100046198(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = +[BULogUtilities shared];
    unsigned int v5 = [v4 verboseLoggingEnabled];

    if (v5)
    {
      id v6 = sub_10000CD80();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = [WeakRetained entityName];
        int v8 = [*(id *)(a1 + 32) debugDescription];
        *(_DWORD *)long long buf = 138412546;
        long long v39 = v7;
        __int16 v40 = 2112;
        uint64_t v41 = (uint64_t)v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %@ setCloudData %@\\\"\"", buf, 0x16u);
      }
    }
    id v9 = objc_alloc((Class)NSFetchRequest);
    id v10 = [WeakRetained entityName];
    id v11 = [v9 initWithEntityName:v10];

    [v11 setReturnsObjectsAsFaults:0];
    [v11 setFetchLimit:1];
    [v11 setPredicate:*(void *)(a1 + 40)];
    id v36 = 0;
    char v12 = [v3 executeFetchRequest:v11 error:&v36];
    id v13 = v36;
    [WeakRetained _logError:v13 at:@"setCloudData - fetch"];
    uint64_t v34 = v12;
    uint64_t v14 = [v12 firstObject];
    CFStringRef v15 = (void *)v14;
    if (!v14)
    {
      id v16 = [WeakRetained entityName];
      CFStringRef v15 = +[NSEntityDescription insertNewObjectForEntityForName:v16 inManagedObjectContext:v3];
    }
    id v17 = [WeakRetained privacyDelegate];
    [v15 setPrivacyDelegate:v17];

    id v18 = [WeakRetained privacyDelegate];
    [*(id *)(a1 + 32) setPrivacyDelegate:v18];

    if (([v15 isEqualExceptForDate:*(void *)(a1 + 32) ignoringEmptySalt:*(unsigned __int8 *)(a1 + 80)] & 1) != 0|| (objc_msgSend(v15, "configureFromCloudData:withMergers:", *(void *)(a1 + 32), *(void *)(a1 + 48)), !objc_msgSend(v15, "hasChanges")))
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v19 = sub_1000083A0();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        long long v20 = [WeakRetained entityName];
        id v21 = [v15 identifier];
        *(_DWORD *)long long buf = 138544386;
        long long v39 = v20;
        __int16 v40 = 2160;
        uint64_t v41 = 1752392040;
        __int16 v42 = 2112;
        id v43 = v21;
        __int16 v44 = 1024;
        BOOL v45 = v14 == 0;
        __int16 v46 = 2112;
        __int16 v47 = v15;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ isNew:%d data:%@", buf, 0x30u);
      }
      [v15 incrementEditGeneration];
      uint64_t v22 = 1;
    }
    if ([v3 hasChanges])
    {
      objc_msgSend(WeakRetained, "mq_incrementCloudVersion");
      id v35 = v13;
      unsigned int v23 = [v3 save:&v35];
      id v24 = v35;

      if (!v14)
      {
        if (v23)
        {
          long long v25 = [*(id *)(a1 + 56) monitor];

          if (v25)
          {
            if (v15)
            {
              id v26 = [*(id *)(a1 + 56) monitor];
              uint64_t v27 = *(void *)(a1 + 56);
              id v37 = v15;
              id v28 = +[NSArray arrayWithObjects:&v37 count:1];
              [v26 dataManager:v27 didInsertNewRecords:v28];
            }
          }
        }
      }
      [WeakRetained _logError:v24 at:@"setCloudData - save"];
      objc_msgSend(WeakRetained, "mq_signalTransactions");
    }
    else
    {
      id v24 = v13;
    }
    id v31 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v24);

    id v32 = objc_retainBlock(*(id *)(a1 + 64));
    id v33 = v32;
    if (v32) {
      (*((void (**)(id, BOOL, uint64_t, void *))v32 + 2))(v32, v15 != 0, v22, v31);
    }
  }
  else
  {
    id v29 = objc_retainBlock(*(id *)(a1 + 64));
    id v30 = v29;
    if (v29) {
      (*((void (**)(id, void, void, void))v29 + 2))(v29, 0, 0, 0);
    }
  }
}

void sub_100046890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000468B4(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_10004692C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  id v36 = [WeakRetained moc];
  if (v36)
  {
    id v2 = +[BULogUtilities shared];
    unsigned int v3 = [v2 verboseLoggingEnabled];

    if (v3)
    {
      id v4 = sub_10000CD80();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        unsigned int v5 = [WeakRetained entityName];
        LODWORD(buf) = 138412290;
        *(void *)((char *)&buf + 4) = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %@ setCloudDatas\\\"\"", (uint8_t *)&buf, 0xCu);
      }
    }
    id v6 = objc_alloc((Class)NSFetchRequest);
    uint64_t v7 = [WeakRetained entityName];
    id v35 = [v6 initWithEntityName:v7];

    [v35 setReturnsObjectsAsFaults:0];
    [v35 setPredicate:*(void *)(a1 + 32)];
    id v62 = 0;
    int v8 = [v36 executeFetchRequest:v35 error:&v62];
    id v9 = v62;
    [WeakRetained _logError:v9 at:@"setCloudData(propertyIDKey) - fetch"];
    id v10 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [v8 count]);
    long long v60 = 0u;
    long long v61 = 0u;
    long long v58 = 0u;
    long long v59 = 0u;
    id v11 = v8;
    id v12 = [v11 countByEnumeratingWithState:&v58 objects:v74 count:16];
    if (v12)
    {
      uint64_t v13 = *(void *)v59;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v59 != v13) {
            objc_enumerationMutation(v11);
          }
          CFStringRef v15 = *(void **)(*((void *)&v58 + 1) + 8 * i);
          id v16 = [v15 valueForKey:*(void *)(a1 + 40)];
          [v10 setObject:v15 forKey:v16];
        }
        id v12 = [v11 countByEnumeratingWithState:&v58 objects:v74 count:16];
      }
      while (v12);
    }

    uint64_t v54 = 0;
    __int16 v55 = &v54;
    uint64_t v56 = 0x2020000000;
    char v57 = 0;
    uint64_t v50 = 0;
    __int16 v51 = &v50;
    uint64_t v52 = 0x2020000000;
    char v53 = 0;
    v49[0] = 0;
    v49[1] = v49;
    v49[2] = 0x2020000000;
    v49[3] = 0;
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v70 = 0x3032000000;
    v71 = sub_100046F90;
    v72 = sub_100046FA0;
    id v73 = objc_alloc_init((Class)NSMutableArray);
    id v17 = *(void **)(a1 + 48);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_100046FA8;
    v39[3] = &unk_100261108;
    id v18 = v10;
    id v40 = v18;
    id v41 = WeakRetained;
    id v19 = v36;
    id v42 = v19;
    p_long long buf = &buf;
    BOOL v45 = &v50;
    char v48 = *(unsigned char *)(a1 + 88);
    id v43 = *(id *)(a1 + 56);
    __int16 v46 = &v54;
    __int16 v47 = v49;
    [v17 enumerateKeysAndObjectsUsingBlock:v39];
    if (([v19 hasChanges] & 1) != 0 || *((unsigned char *)v55 + 24))
    {
      objc_msgSend(WeakRetained, "mq_incrementCloudVersion");
      id v38 = v9;
      unsigned int v20 = [v19 save:&v38];
      id v21 = v38;

      [WeakRetained _logError:v21 at:@"setCloudData(propertyIDKey) - save remaining"];
      objc_msgSend(WeakRetained, "mq_signalTransactions");
      uint64_t v22 = sub_1000083A0();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      {
        id v32 = [WeakRetained entityName];
        id v33 = [v19 persistentStoreCoordinator];
        uint64_t v34 = [v33 persistentStores];
        *(_DWORD *)long long v63 = 138412802;
        long long v64 = v32;
        __int16 v65 = 2112;
        id v66 = v34;
        __int16 v67 = 2112;
        id v68 = v21;
        _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "BCCloudDataManager: %@ Save to storeID:%@ error:%@", v63, 0x20u);
      }
      if (v20)
      {
        unsigned int v23 = [*(id *)(a1 + 64) monitor];
        if (v23)
        {
          BOOL v24 = [*(id *)(*((void *)&buf + 1) + 40) count] == 0;

          if (!v24)
          {
            long long v25 = [*(id *)(a1 + 64) monitor];
            [v25 dataManager:*(void *)(a1 + 64) didInsertNewRecords:*(void *)(*((void *)&buf + 1) + 40)];
          }
        }
      }
    }
    else
    {
      id v21 = v9;
    }
    id v29 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v21);

    id v30 = objc_retainBlock(*(id *)(a1 + 72));
    id v31 = v30;
    if (v30) {
      (*((void (**)(id, void, void, void *))v30 + 2))(v30, *((unsigned __int8 *)v51 + 24), *((unsigned __int8 *)v55 + 24), v29);
    }

    _Block_object_dispose(&buf, 8);
    _Block_object_dispose(v49, 8);
    _Block_object_dispose(&v50, 8);
    _Block_object_dispose(&v54, 8);

    id v27 = v35;
  }
  else
  {
    id v26 = sub_1000083A0();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_1001E7290(WeakRetained, v26);
    }

    id v27 = objc_retainBlock(*(id *)(a1 + 72));
    id v28 = v27;
    if (v27)
    {
      (*((void (**)(id, void, void, void))v27 + 2))(v27, 0, 0, 0);
      id v27 = v28;
    }
  }
}

void sub_100046F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

uint64_t sub_100046F90(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100046FA0(uint64_t a1)
{
}

void sub_100046FA8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = [*(id *)(a1 + 32) objectForKey:a2];
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    int v8 = 0;
  }
  else
  {
    id v9 = [*(id *)(a1 + 40) entityName];
    uint64_t v7 = +[NSEntityDescription insertNewObjectForEntityForName:v9 inManagedObjectContext:*(void *)(a1 + 48)];

    [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) addObject:v7];
    int v8 = 1;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) |= v7 != 0;
  id v10 = [*(id *)(a1 + 40) privacyDelegate];
  [v7 setPrivacyDelegate:v10];

  id v11 = [*(id *)(a1 + 40) privacyDelegate];
  [v5 setPrivacyDelegate:v11];

  unsigned __int8 v12 = [v7 isEqualExceptForDate:v5 ignoringEmptySalt:*(unsigned __int8 *)(a1 + 96)];
  uint64_t v13 = sub_1000083A0();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
    sub_1001E73B4(v7);
  }

  if ((v12 & 1) == 0)
  {
    [v7 configureFromCloudData:v5 withMergers:*(void *)(a1 + 56)];
    unsigned int v14 = [v7 hasChanges];
    CFStringRef v15 = sub_1000083A0();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
      sub_1001E7320(v7);
    }

    if (v14)
    {
      id v16 = sub_1000083A0();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        id v17 = [*(id *)(a1 + 40) entityName];
        id v18 = [v7 identifier];
        *(_DWORD *)long long buf = 138544386;
        id v28 = v17;
        __int16 v29 = 2160;
        uint64_t v30 = 1752392040;
        __int16 v31 = 2112;
        id v32 = v18;
        __int16 v33 = 1024;
        int v34 = v8;
        __int16 v35 = 2112;
        id v36 = v7;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ isNew:%d data:%@", buf, 0x30u);
      }
      [v7 incrementEditGeneration];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
      ++*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
    }
  }
  uint64_t v19 = *(void *)(*(void *)(a1 + 88) + 8);
  if (*(void *)(v19 + 24) >= 0x21uLL)
  {
    *(void *)(v19 + 24) = 0;
    if ([*(id *)(a1 + 48) hasChanges])
    {
      unsigned int v20 = *(void **)(a1 + 48);
      id v26 = 0;
      [v20 save:&v26];
      id v21 = v26;
      [*(id *)(a1 + 40) _logError:v21 at:@"setCloudData(propertyIDKey) - save batch"];
      uint64_t v22 = sub_1000083A0();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      {
        unsigned int v23 = [*(id *)(a1 + 40) entityName];
        BOOL v24 = [*(id *)(a1 + 48) persistentStoreCoordinator];
        long long v25 = [v24 persistentStores];
        *(_DWORD *)long long buf = 138412802;
        id v28 = v23;
        __int16 v29 = 2112;
        uint64_t v30 = (uint64_t)v25;
        __int16 v31 = 2112;
        id v32 = v21;
        _os_log_debug_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "BCCloudDataManager: %@ Batch save to storeID:%@ with error:%@", buf, 0x20u);
      }
    }
  }
}

void sub_1000474E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100047508(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_10004757C(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = +[BULogUtilities shared];
    unsigned int v5 = [v4 verboseLoggingEnabled];

    if (v5)
    {
      uint64_t v6 = sub_10000CD80();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = [WeakRetained entityName];
        int v8 = [a1[4] debugDescription];
        *(_DWORD *)long long buf = 138543618;
        id v37 = v7;
        __int16 v38 = 2114;
        long long v39 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %{public}@ removeCloudDataForPredicate:%{public}@\\\"\"", buf, 0x16u);
      }
    }
    id v9 = objc_alloc((Class)NSFetchRequest);
    id v10 = [WeakRetained entityName];
    id v11 = [v9 initWithEntityName:v10];

    [v11 setFetchBatchSize:64];
    [v11 setPredicate:a1[4]];
    id v34 = 0;
    unsigned __int8 v12 = [v3 executeFetchRequest:v11 error:&v34];
    id v13 = v34;
    [WeakRetained _logError:v13 at:@"removeCloudData - fetch"];
    id v14 = [v12 count];
    id v15 = v14;
    if (v14)
    {
      id v28 = v14;
      long long v32 = 0u;
      long long v33 = 0u;
      long long v30 = 0u;
      long long v31 = 0u;
      id v16 = v12;
      id v17 = [v16 countByEnumeratingWithState:&v30 objects:v35 count:16];
      if (v17)
      {
        id v18 = v17;
        uint64_t v19 = *(void *)v31;
        do
        {
          for (i = 0; i != v18; i = (char *)i + 1)
          {
            if (*(void *)v31 != v19) {
              objc_enumerationMutation(v16);
            }
            objc_msgSend(v3, "deleteObject:", *(void *)(*((void *)&v30 + 1) + 8 * i), v28);
          }
          id v18 = [v16 countByEnumeratingWithState:&v30 objects:v35 count:16];
        }
        while (v18);
      }

      if ([v3 hasChanges])
      {
        objc_msgSend(WeakRetained, "mq_incrementCloudVersion");
        id v29 = v13;
        [v3 save:&v29];
        id v21 = v29;

        [WeakRetained _logError:v21 at:@"removeCloudData - save"];
        objc_msgSend(WeakRetained, "mq_signalTransactions");
        id v13 = v21;
      }
      id v15 = v28;
    }
    else
    {
      BOOL v24 = sub_1000083A0();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_1001E7448(WeakRetained, a1 + 4, v24);
      }
    }
    long long v25 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v13, v28);

    id v26 = objc_retainBlock(a1[5]);
    id v27 = v26;
    if (v26) {
      (*((void (**)(id, BOOL, void *))v26 + 2))(v26, v15 != 0, v25);
    }
  }
  else
  {
    id v22 = objc_retainBlock(a1[5]);
    unsigned int v23 = v22;
    if (v22) {
      (*((void (**)(id, void, void))v22 + 2))(v22, 0, 0);
    }
  }
}

void sub_100047AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100047AF4(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_100047B68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = objc_alloc((Class)NSFetchRequest);
    unsigned int v5 = [WeakRetained entityName];
    id v6 = [v4 initWithEntityName:v5];

    [v6 setFetchBatchSize:64];
    [v6 setPredicate:*(void *)(a1 + 32)];
    id v29 = 0;
    uint64_t v7 = [v3 executeFetchRequest:v6 error:&v29];
    id v8 = v29;
    [WeakRetained _logError:v8 at:@"updateSyncGeneration - fetch"];
    id v9 = [v7 count];
    if (v9)
    {
      id v10 = [v7 count];
      if (v10 != [*(id *)(a1 + 40) count])
      {
        id v11 = sub_1000083A0();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_1001E750C();
        }
      }
      *(void *)long long buf = 0;
      *(void *)&buf[8] = buf;
      *(void *)&uint8_t buf[16] = 0x2020000000;
      uint64_t v31 = 0;
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_100047EF8;
      v23[3] = &unk_100261158;
      id v24 = *(id *)(a1 + 48);
      id v25 = *(id *)(a1 + 40);
      id v26 = WeakRetained;
      id v28 = buf;
      id v12 = v3;
      id v27 = v12;
      [v7 enumerateObjectsUsingBlock:v23];
      id v22 = v8;
      [v12 save:&v22];
      id v13 = v22;

      [WeakRetained _logError:v13 at:@"updateSyncGeneration - save remaining"];
      objc_msgSend(WeakRetained, "mq_signalTransactions");

      _Block_object_dispose(buf, 8);
    }
    else
    {
      id v16 = sub_1000083A0();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        id v17 = [WeakRetained entityName];
        id v18 = [*(id *)(a1 + 40) debugDescription];
        *(_DWORD *)long long buf = 138543618;
        *(void *)&uint8_t buf[4] = v17;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v18;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Did not find %{public}@ to update sync gen from cloudData:%@", buf, 0x16u);
      }
      id v13 = v8;
    }
    uint64_t v19 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v13);

    id v20 = objc_retainBlock(*(id *)(a1 + 56));
    id v21 = v20;
    if (v20) {
      (*((void (**)(id, BOOL, void *))v20 + 2))(v20, v9 != 0, v19);
    }
  }
  else
  {
    id v14 = objc_retainBlock(*(id *)(a1 + 56));
    id v15 = v14;
    if (v14) {
      (*((void (**)(id, void, void))v14 + 2))(v14, 0, 0);
    }
  }
}

void sub_100047ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100047EF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 valueForKey:*(void *)(a1 + 32)];
  unsigned int v5 = [*(id *)(a1 + 40) objectForKey:v4];
  id v6 = [*(id *)(a1 + 48) privacyDelegate];
  [v3 setPrivacyDelegate:v6];

  objc_msgSend(v3, "setSyncGeneration:", objc_msgSend(v5, "editGeneration"));
  uint64_t v7 = [v5 systemFields];
  [v3 setSystemFields:v7];

  id v8 = [v5 systemFields];
  id v9 = [v8 modificationDate];
  [v3 setModificationDate:v9];

  id v10 = sub_1000083A0();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = [*(id *)(a1 + 48) entityName];
    id v12 = [v3 debugDescription];
    *(_DWORD *)long long buf = 138543618;
    uint64_t v19 = v11;
    __int16 v20 = 2112;
    id v21 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ updateSyncGeneration %@", buf, 0x16u);
  }
  uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
  unint64_t v14 = *(void *)(v13 + 24) + 1;
  *(void *)(v13 + 24) = v14;
  if (v14 >= 0x21)
  {
    *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 0;
    if ([*(id *)(a1 + 56) hasChanges])
    {
      id v15 = *(void **)(a1 + 56);
      id v17 = 0;
      [v15 save:&v17];
      id v16 = v17;
      [*(id *)(a1 + 48) _logError:v16 at:@"updateSyncGeneration - save batch"];
    }
  }
}

void sub_100048298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000482BC(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_100048330(uint64_t a1)
{
  uint64_t v1 = a1;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = +[BULogUtilities shared];
    unsigned int v5 = [v4 verboseLoggingEnabled];

    if (v5)
    {
      id v6 = sub_10000CD80();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = [WeakRetained entityName];
        id v8 = [*(id *)(v1 + 32) debugDescription];
        *(_DWORD *)long long buf = 138543618;
        __int16 v47 = v7;
        __int16 v48 = 2112;
        id v49 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %{public}@ deleteCloudDataForPredicate %@\\\"\"", buf, 0x16u);
      }
    }
    id v9 = objc_alloc((Class)NSFetchRequest);
    id v10 = [WeakRetained entityName];
    id v11 = [v9 initWithEntityName:v10];

    [v11 setFetchBatchSize:64];
    [v11 setPredicate:*(void *)(v1 + 32)];
    id v44 = 0;
    id v12 = [v3 executeFetchRequest:v11 error:&v44];
    id v13 = v44;
    [WeakRetained _logError:v13 at:@"deleteCloudData - fetch"];
    id v14 = [v12 count];
    id v15 = v14;
    if (v14)
    {
      long long v33 = v13;
      id v34 = v14;
      id v36 = v11;
      uint64_t v37 = v1;
      __int16 v38 = v3;
      long long v42 = 0u;
      long long v43 = 0u;
      long long v40 = 0u;
      long long v41 = 0u;
      __int16 v35 = v12;
      id v16 = v12;
      id v17 = [v16 countByEnumeratingWithState:&v40 objects:v45 count:16];
      if (v17)
      {
        id v18 = v17;
        uint64_t v19 = *(void *)v41;
        do
        {
          for (i = 0; i != v18; i = (char *)i + 1)
          {
            if (*(void *)v41 != v19) {
              objc_enumerationMutation(v16);
            }
            id v21 = *(void **)(*((void *)&v40 + 1) + 8 * i);
            id v22 = objc_msgSend(WeakRetained, "privacyDelegate", v33);
            [v21 setPrivacyDelegate:v22];

            [v21 setDifferentNumber:&__kCFBooleanTrue forKey:@"deletedFlag"];
            if ([v21 hasChanges])
            {
              unsigned int v23 = sub_1000083A0();
              if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
              {
                id v24 = [WeakRetained entityName];
                *(_DWORD *)long long buf = 138543618;
                __int16 v47 = v24;
                __int16 v48 = 2112;
                id v49 = v21;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ deleteCloudDataForPredicate data:%@", buf, 0x16u);
              }
              [v21 incrementEditGeneration];
            }
          }
          id v18 = [v16 countByEnumeratingWithState:&v40 objects:v45 count:16];
        }
        while (v18);
      }

      id v3 = v38;
      if ([v38 hasChanges])
      {
        objc_msgSend(WeakRetained, "mq_incrementCloudVersion");
        id v39 = v33;
        [v38 save:&v39];
        id v13 = v39;

        [WeakRetained _logError:v13 at:@"deleteCloudData - save"];
        objc_msgSend(WeakRetained, "mq_signalTransactions");
        id v11 = v36;
        uint64_t v1 = v37;
        id v15 = v34;
        id v12 = v35;
      }
      else
      {
        id v11 = v36;
        uint64_t v1 = v37;
        id v15 = v34;
        id v12 = v35;
        id v13 = v33;
      }
    }
    else
    {
      if (!v13)
      {
        id v13 = +[NSError errorWithDomain:NSCocoaErrorDomain code:4 userInfo:0];
      }
      id v27 = sub_1000083A0();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
      {
        id v28 = [WeakRetained entityName];
        id v29 = [*(id *)(v1 + 32) debugDescription];
        *(_DWORD *)long long buf = 138543618;
        __int16 v47 = v28;
        __int16 v48 = 2114;
        id v49 = v29;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "Did not find %{public}@ to delete for predicate %{public}@", buf, 0x16u);
      }
    }
    long long v30 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v13, v33);

    id v31 = objc_retainBlock(*(id *)(v1 + 40));
    long long v32 = v31;
    if (v31) {
      (*((void (**)(id, BOOL, void *))v31 + 2))(v31, v15 != 0, v30);
    }
  }
  else
  {
    id v25 = objc_retainBlock(*(id *)(v1 + 40));
    id v26 = v25;
    if (v25) {
      (*((void (**)(id, void, void))v25 + 2))(v25, 0, 0);
    }
  }
}

void sub_1000489AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000489D0(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_100048A44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = +[BULogUtilities shared];
    unsigned int v5 = [v4 verboseLoggingEnabled];

    if (v5)
    {
      id v6 = sub_10000CD80();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = [*(id *)(a1 + 32) debugDescription];
        *(_DWORD *)long long buf = 138543362;
        id v15 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager countWithPredicate:%{public}@\\\"\"", buf, 0xCu);
      }
    }
    id v8 = objc_alloc((Class)NSFetchRequest);
    id v9 = [WeakRetained entityName];
    id v10 = [v8 initWithEntityName:v9];

    [v10 setPredicate:*(void *)(a1 + 32)];
    id v13 = 0;
    [v3 countForFetchRequest:v10 error:&v13];
    id v11 = v13;
    [WeakRetained _logError:v11 at:@"count"];
    id v12 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v11);

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100048D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100048D60(uint64_t a1, void *a2)
{
}

void sub_100048D70(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_100048FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100049010(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_100049088(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = +[BULogUtilities shared];
    unsigned int v5 = [v4 verboseLoggingEnabled];

    if (v5)
    {
      id v6 = sub_10000CD80();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = [WeakRetained entityName];
        uint64_t v8 = [*(id *)(a1 + 32) debugDescription];
        id v9 = (void *)v8;
        uint64_t v10 = *(void *)(a1 + 40);
        CFStringRef v11 = @"YES";
        uint64_t v12 = *(void *)(a1 + 72);
        if (!*(void *)(a1 + 48)) {
          CFStringRef v11 = @"NO";
        }
        *(_DWORD *)long long buf = 138544386;
        __int16 v47 = v7;
        __int16 v48 = 2114;
        uint64_t v49 = v8;
        __int16 v50 = 2114;
        uint64_t v51 = v10;
        __int16 v52 = 2114;
        CFStringRef v53 = v11;
        __int16 v54 = 2048;
        uint64_t v55 = v12;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@ sortDescriptors: %{public}@, has a filter: %{public}@, maximumResultCount: %lu\\\"\"", buf, 0x34u);
      }
    }
    id v13 = objc_alloc((Class)NSFetchRequest);
    id v14 = [WeakRetained entityName];
    id v15 = [v13 initWithEntityName:v14];

    [v15 setFetchBatchSize:64];
    [v15 setPredicate:*(void *)(a1 + 32)];
    if (*(void *)(a1 + 40)) {
      objc_msgSend(v15, "setSortDescriptors:");
    }
    id v44 = 0;
    id v36 = v15;
    uint64_t v37 = v3;
    id v16 = [v3 executeFetchRequest:v15 error:&v44];
    id v35 = v44;
    objc_msgSend(WeakRetained, "_logError:at:");
    id v17 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v16 count]);
    __int16 v38 = WeakRetained;
    id v18 = [WeakRetained privacyDelegate];
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    id v19 = v16;
    id v20 = [v19 countByEnumeratingWithState:&v40 objects:v45 count:16];
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = *(void *)v41;
LABEL_12:
      uint64_t v23 = 0;
      while (1)
      {
        if (*(void *)v41 != v22) {
          objc_enumerationMutation(v19);
        }
        id v24 = *(void **)(*((void *)&v40 + 1) + 8 * v23);
        uint64_t v25 = *(void *)(a1 + 48);
        if (!v25
          || (*(unsigned int (**)(uint64_t, void))(v25 + 16))(v25, *(void *)(*((void *)&v40 + 1) + 8 * v23)))
        {
          [v24 setPrivacyDelegate:v18];
          id v26 = [v24 mutableCopy];
          [v26 setPrivacyDelegate:v18];
          if (v26) {
            [v17 addObject:v26];
          }
          id v27 = [v17 count];
          unint64_t v28 = *(void *)(a1 + 72);

          if ((unint64_t)v27 >= v28) {
            break;
          }
        }
        if (v21 == (id)++v23)
        {
          id v21 = [v19 countByEnumeratingWithState:&v40 objects:v45 count:16];
          if (v21) {
            goto LABEL_12;
          }
          break;
        }
      }
    }

    id v3 = v37;
    if ([v37 hasChanges])
    {
      id v39 = v35;
      [v37 save:&v39];
      id v29 = v39;

      id WeakRetained = v38;
      [v38 _logError:v29 at:@"cloudDatas(maximumResultCount) - save"];
    }
    else
    {
      id WeakRetained = v38;
      id v29 = v35;
    }
    id v31 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v29);

    uint64_t v32 = *(void *)(a1 + 56);
    long long v33 = objc_msgSend(WeakRetained, "mq_cloudSyncVersions");
    id v34 = [v33 mutableCopy];
    (*(void (**)(uint64_t, void *, id, void *))(v32 + 16))(v32, v17, v34, v31);
  }
  else
  {
    long long v30 = sub_1000083A0();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      sub_1001E7540();
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_100049670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100049694(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_10004970C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [WeakRetained moc];
  id v4 = +[BULogUtilities shared];
  unsigned int v5 = [v4 verboseLoggingEnabled];

  if (v5)
  {
    id v6 = sub_10000CD80();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = [WeakRetained entityName];
      uint64_t v8 = [*(id *)(a1 + 32) debugDescription];
      *(_DWORD *)long long buf = 138543618;
      __int16 v38 = v7;
      __int16 v39 = 2114;
      long long v40 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@\\\"\"", buf, 0x16u);
    }
  }
  id v9 = objc_alloc((Class)NSFetchRequest);
  uint64_t v10 = [WeakRetained entityName];
  id v11 = [v9 initWithEntityName:v10];

  [v11 setFetchBatchSize:64];
  uint64_t v28 = a1;
  [v11 setPredicate:*(void *)(a1 + 32)];
  id v35 = 0;
  id v29 = v3;
  uint64_t v12 = [v3 executeFetchRequest:v11 error:&v35];
  id v13 = v35;
  [WeakRetained _logError:v13 at:@"cloudDatas - fetch"];
  id v14 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v12 count]);
  id v15 = [WeakRetained privacyDelegate];
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v16 = v12;
  id v17 = [v16 countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v32;
    do
    {
      for (i = 0; i != v18; i = (char *)i + 1)
      {
        if (*(void *)v32 != v19) {
          objc_enumerationMutation(v16);
        }
        id v21 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        [v21 setPrivacyDelegate:v15];
        id v22 = [v21 mutableCopy];
        [v22 setPrivacyDelegate:v15];
        if (v22) {
          [v14 addObject:v22];
        }
      }
      id v18 = [v16 countByEnumeratingWithState:&v31 objects:v36 count:16];
    }
    while (v18);
  }

  if ([v29 hasChanges])
  {
    id v30 = v13;
    [v29 save:&v30];
    id v23 = v30;

    [WeakRetained _logError:v23 at:@"cloudDatas - save"];
    id v13 = v23;
  }
  id v24 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v13);

  uint64_t v25 = *(void *)(v28 + 40);
  id v26 = objc_msgSend(WeakRetained, "mq_cloudSyncVersions");
  id v27 = [v26 mutableCopy];
  (*(void (**)(uint64_t, void *, id, void *))(v25 + 16))(v25, v14, v27, v24);
}

void sub_100049C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100049C64(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_100049CD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = +[BULogUtilities shared];
    unsigned int v5 = [v4 verboseLoggingEnabled];

    if (v5)
    {
      id v6 = sub_10000CD80();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v7 = [WeakRetained entityName];
        uint64_t v8 = [*(id *)(a1 + 32) debugDescription];
        *(_DWORD *)long long buf = 138543618;
        id v30 = v7;
        __int16 v31 = 2114;
        long long v32 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@\\\"\"", buf, 0x16u);
      }
    }
    id v9 = objc_alloc((Class)NSFetchRequest);
    uint64_t v10 = [WeakRetained entityName];
    id v11 = [v9 initWithEntityName:v10];

    [v11 setFetchBatchSize:64];
    [v11 setPredicate:*(void *)(a1 + 32)];
    id v27 = 0;
    id v22 = v3;
    uint64_t v12 = [v3 executeFetchRequest:v11 error:&v27];
    id v13 = v27;
    [WeakRetained _logError:v13 at:@"transformedCloudDatas"];
    id v14 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v12 count]);
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v15 = v12;
    id v16 = (char *)[v15 countByEnumeratingWithState:&v23 objects:v28 count:16];
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = *(void *)v24;
      do
      {
        for (i = 0; i != v17; ++i)
        {
          if (*(void *)v24 != v18) {
            objc_enumerationMutation(v15);
          }
          id v20 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
          if (v20) {
            [v14 addObject:v20];
          }
        }
        id v17 = (char *)[v15 countByEnumeratingWithState:&v23 objects:v28 count:16];
      }
      while (v17);
    }

    id v21 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v13);

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    id v3 = v22;
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_10004A26C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004A290(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_10004A304(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  unsigned int v5 = [WeakRetained moc];

  if (v5)
  {
    id v6 = [WeakRetained moc];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _DWORD v12[2] = sub_10004A490;
    v12[3] = &unk_100261248;
    objc_copyWeak(&v19, (id *)(a1 + 72));
    id v13 = v3;
    id v14 = *(id *)(a1 + 32);
    id v7 = *(id *)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 48);
    id v9 = *(void **)(a1 + 56);
    id v15 = v7;
    uint64_t v16 = v8;
    id v17 = v9;
    id v18 = *(id *)(a1 + 64);
    [v6 performBlock:v12];

    objc_destroyWeak(&v19);
  }
  else
  {
    id v10 = objc_retainBlock(*(id *)(a1 + 64));
    id v11 = v10;
    if (v10) {
      (*((void (**)(id, void, void))v10 + 2))(v10, 0, 0);
    }
  }
}

void sub_10004A47C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10004A490(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    unsigned int v5 = +[BULogUtilities shared];
    unsigned int v6 = [v5 verboseLoggingEnabled];

    if (!v4)
    {
      if (v6)
      {
        id v19 = sub_10000CD80();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          id v20 = [*(id *)(a1 + 40) debugDescription];
          *(_DWORD *)long long buf = 138543362;
          uint64_t v49 = v20;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager cloudDataWithPredicate:%{public}@\\\"\"", buf, 0xCu);
        }
      }
      id v21 = objc_alloc((Class)NSFetchRequest);
      id v22 = [WeakRetained entityName];
      id v11 = [v21 initWithEntityName:v22];

      [v11 setReturnsObjectsAsFaults:0];
      [v11 setFetchLimit:1];
      [v11 setPredicate:*(void *)(a1 + 40)];
      id v45 = 0;
      long long v23 = [v3 executeFetchRequest:v11 error:&v45];
      id v24 = v45;
      [WeakRetained _logError:v24 at:@"resolvedCloudData - fetch (new)"];
      long long v25 = [v23 firstObject];
      long long v26 = [WeakRetained privacyDelegate];
      [v25 setPrivacyDelegate:v26];

      id v27 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v24);

      id v28 = [v25 mutableCopy];
      id v29 = objc_retainBlock(*(id *)(a1 + 72));
      id v30 = v29;
      if (v29) {
        (*((void (**)(id, id, void *))v29 + 2))(v29, v28, v27);
      }

      goto LABEL_36;
    }
    if (v6)
    {
      id v7 = sub_10000CD80();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = [*(id *)(a1 + 40) debugDescription];
        *(_DWORD *)long long buf = 138543362;
        uint64_t v49 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager resolvedCloudDataForCloudData:%{public}@\\\"\"", buf, 0xCu);
      }
    }
    id v9 = objc_alloc((Class)NSFetchRequest);
    id v10 = [WeakRetained entityName];
    id v11 = [v9 initWithEntityName:v10];

    [v11 setReturnsObjectsAsFaults:0];
    [v11 setFetchLimit:1];
    [v11 setPredicate:*(void *)(a1 + 40)];
    id v47 = 0;
    uint64_t v12 = [v3 executeFetchRequest:v11 error:&v47];
    id v13 = v47;
    [WeakRetained _logError:v13 at:@"resolvedCloudData - fetch (existing)"];
    id v14 = [WeakRetained privacyDelegate];
    id v15 = [v12 firstObject];
    if (v15)
    {
      uint64_t v16 = v15;
      [v15 setPrivacyDelegate:v14];
      [v16 resolveConflictsFromRecord:*(void *)(a1 + 32) withResolvers:*(void *)(a1 + 48)];
      if (!v13)
      {
LABEL_30:
        if ([v16 hasChanges])
        {
          objc_msgSend(WeakRetained, "mq_incrementCloudVersion");
          id v46 = 0;
          [v3 save:&v46];
          id v13 = v46;
          [WeakRetained _logError:v13 at:@"resolvedCloudData - save"];
          objc_msgSend(WeakRetained, "mq_signalTransactions");
        }
        else
        {
          id v13 = 0;
        }
      }
LABEL_33:
      long long v41 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v13);

      id v42 = [v16 mutableCopy];
      id v43 = objc_retainBlock(*(id *)(a1 + 72));
      id v44 = v43;
      if (v43) {
        (*((void (**)(id, id, void *))v43 + 2))(v43, v42, v41);
      }

LABEL_36:
      goto LABEL_37;
    }
    __int16 v31 = +[BULogUtilities shared];
    unsigned int v32 = [v31 verboseLoggingEnabled];

    if (v32)
    {
      long long v33 = sub_10000CD80();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        long long v34 = [*(id *)(a1 + 32) recordID];
        id v35 = [v34 recordName];
        uint64_t v36 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138543618;
        uint64_t v49 = v35;
        __int16 v50 = 2112;
        uint64_t v51 = v36;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager resolvedCloudDataForCloudData:%{public}@ did not find existing record.  Creating new from %@\\\"\"", buf, 0x16u);
      }
    }
    uint64_t v37 = [*(id *)(a1 + 56) dataMapper];

    if (v37)
    {
      __int16 v38 = [*(id *)(a1 + 56) dataMapper];
      id v39 = [v38 cloudDataFromRecord:*(void *)(a1 + 32)];

      if (v39)
      {
LABEL_26:
        long long v40 = [WeakRetained entityName];
        uint64_t v16 = +[NSEntityDescription insertNewObjectForEntityForName:v40 inManagedObjectContext:v3];

        [v16 setPrivacyDelegate:v14];
        [v39 setPrivacyDelegate:v14];
        [v16 configureFromCloudData:v39 withMergers:*(void *)(a1 + 64)];
        goto LABEL_29;
      }
    }
    else
    {
      id v39 = objc_msgSend(objc_alloc((Class)objc_msgSend(WeakRetained, "mutableClass")), "initWithRecord:", *(void *)(a1 + 32));
      if (v39) {
        goto LABEL_26;
      }
    }
    uint64_t v16 = 0;
LABEL_29:

    if (!v13) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
  id v17 = objc_retainBlock(*(id *)(a1 + 72));
  id v18 = v17;
  if (v17) {
    (*((void (**)(id, void, void))v17 + 2))(v17, 0, 0);
  }

LABEL_37:
}

void sub_10004AC70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004AC94(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void, void))v3 + 2))(v3, 0, 0, 0);
  }
}

void sub_10004AD0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  uint64_t v1 = [WeakRetained moc];
  if (!v1)
  {
    id v55 = objc_retainBlock(*(id *)(a1 + 64));
    uint64_t v56 = v55;
    if (v55) {
      (*((void (**)(id, void, void, void))v55 + 2))(v55, 0, 0, 0);
    }

    goto LABEL_81;
  }
  long long v63 = [WeakRetained privacyDelegate];
  long long v64 = +[NSMutableArray array];
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = *(id *)(a1 + 32);
    *(void *)long long buf = _NSConcreteStackBlock;
    *(void *)&buf[8] = 3221225472;
    *(void *)&uint8_t buf[16] = sub_10004D634;
    v97 = &unk_100261360;
    *(void *)v98 = objc_alloc_init((Class)NSMutableArray);
    id v4 = *(id *)v98;
    [v3 enumerateObjectsUsingBlock:buf];
    unsigned int v5 = [v4 componentsJoinedByString:@","];

    *(_DWORD *)long long buf = 138543362;
    *(void *)&uint8_t buf[4] = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange resolveConflictsForRecords: %{public}@", buf, 0xCu);
  }
  v71 = (char *)[*(id *)(a1 + 32) count];
  __int16 v67 = objc_opt_new();
  id v66 = objc_alloc_init((Class)NSMutableDictionary);
  long long v76 = objc_opt_new();
  long long v93 = 0u;
  long long v94 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  id v6 = *(id *)(a1 + 32);
  id v7 = [v6 countByEnumeratingWithState:&v91 objects:v101 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v92;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v92 != v8) {
          objc_enumerationMutation(v6);
        }
        id v10 = *(void **)(*((void *)&v91 + 1) + 8 * i);
        id v11 = [v10 encryptedValuesByKey];
        uint64_t v12 = [v11 objectForKeyedSubscript:@"localRecordIDEncrypted"];

        if (!v12)
        {
          uint64_t v12 = [v10 valueForKey:@"localRecordID"];
          if (!v12)
          {
            id v13 = sub_1000083A0();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)long long buf = 138543362;
              *(void *)&uint8_t buf[4] = v10;
              _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "CKRecord unexpected with no local identifier: %{public}@", buf, 0xCu);
            }

            uint64_t v12 = @"keyFromMyKitchenDrawer";
          }
        }
        [v76 addObject:v12];
      }
      id v7 = [v6 countByEnumeratingWithState:&v91 objects:v101 count:16];
    }
    while (v7);
  }

  __int16 v65 = objc_msgSend(objc_msgSend(WeakRetained, "immutableClass"), "propertyIDKey");
  id v62 = [WeakRetained entityName];
  uint64_t v87 = 0;
  id v88 = &v87;
  uint64_t v89 = 0x2020000000;
  int v90 = 0;
  if (!v71)
  {
    id v74 = 0;
    goto LABEL_73;
  }
  char v61 = 0;
  uint64_t v72 = 0;
  id v74 = 0;
  uint64_t v14 = 0;
  uint64_t v69 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v70 = 0;
  do
  {
    id v15 = [*(id *)(a1 + 32) objectAtIndexedSubscript:v14];
    if ((v14 & 0xF) != 0)
    {
      uint64_t v16 = v74;
LABEL_20:
      id v17 = +[BCCloudData localIdentifierFromRecord:v15];
      id v18 = [v16 objectForKeyedSubscript:v17];
      if (v18) {
        goto LABEL_21;
      }
      unsigned int v32 = [v66 objectForKeyedSubscript:v17];
      BOOL v33 = v32 == 0;

      if (v33) {
        goto LABEL_36;
      }
      id v18 = [v66 objectForKeyedSubscript:v17];
      long long v34 = sub_1000083A0();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
      {
        __int16 v50 = [v15 recordID];
        uint64_t v51 = [v50 recordName];
        *(_DWORD *)long long buf = 138544386;
        *(void *)&uint8_t buf[4] = v51;
        *(_WORD *)&buf[12] = 2160;
        *(void *)&buf[14] = 1752392040;
        *(_WORD *)&buf[22] = 2112;
        v97 = v17;
        *(_WORD *)v98 = 2112;
        *(void *)&v98[2] = v18;
        __int16 v99 = 2112;
        v100 = v15;
        _os_log_error_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords:%{public}@ Already seen (localId: %{mask.hash}@) %@. Updating from %@", buf, 0x34u);
      }
      if (v18)
      {
LABEL_21:
        [v18 setPrivacyDelegate:v63];
        [v18 resolveConflictsFromRecord:v15 withResolvers:*(void *)(a1 + 40)];
      }
      else
      {
LABEL_36:
        id v35 = [*(id *)(a1 + 48) dataMapper];
        BOOL v36 = v35 == 0;

        if (v36)
        {
          id v38 = objc_msgSend(objc_alloc((Class)objc_msgSend(WeakRetained, "mutableClass")), "initWithRecord:", v15);
          if (!v38)
          {
LABEL_52:

            id v18 = 0;
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v37 = [*(id *)(a1 + 48) dataMapper];
          id v38 = [v37 cloudDataFromRecord:v15];

          if (!v38) {
            goto LABEL_52;
          }
        }
        id v39 = [*(id *)(a1 + 48) cloudKitController];
        long long v40 = [v39 configuration];
        unsigned int v41 = [v40 shouldArchiveData:v38];

        if (!v41)
        {
          id v45 = sub_1000083A0();
          if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
          {
            __int16 v52 = [v15 recordID];
            CFStringRef v53 = [v52 recordName];
            *(_DWORD *)long long buf = 138543618;
            *(void *)&uint8_t buf[4] = v53;
            *(_WORD *)&buf[12] = 2112;
            *(void *)&buf[14] = v15;
            _os_log_error_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords:%{public}@ configuration did not allow creation of new record from %@", buf, 0x16u);
          }
          goto LABEL_52;
        }
        id v42 = sub_1000083A0();
        if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
        {
          id v43 = [v15 recordID];
          id v44 = [v43 recordName];
          *(_DWORD *)long long buf = 138544130;
          *(void *)&uint8_t buf[4] = v44;
          *(_WORD *)&buf[12] = 2160;
          *(void *)&buf[14] = 1752392040;
          *(_WORD *)&buf[22] = 2112;
          v97 = v17;
          *(_WORD *)v98 = 2112;
          *(void *)&v98[2] = v15;
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager resolveConflictsForRecords:%{public}@ (localId: %{mask.hash}@) did not find existing record. Creating new from %@", buf, 0x2Au);
        }
        id v18 = +[NSEntityDescription insertNewObjectForEntityForName:v62 inManagedObjectContext:v1];
        [v66 setObject:v18 forKeyedSubscript:v17];
        [v18 setPrivacyDelegate:v63];
        [v38 setPrivacyDelegate:v63];
        [v18 configureFromCloudData:v38 withMergers:*(void *)(a1 + 56)];

        if (!v18)
        {
LABEL_23:
          if (v14 == v72 + v69 - 1)
          {
            if (!v70 && [v1 hasChanges])
            {
              id v82 = 0;
              [v1 save:&v82];
              id v19 = v82;
              if (v19)
              {
                id v20 = v19;
                [WeakRetained _logError:v19 at:@"resolveConflicts - save batch"];
                [v64 removeObjectsInArray:v67];
                char v61 = 1;
                int v21 = 4;
                uint64_t v70 = v20;
LABEL_63:

                id v74 = v16;
                goto LABEL_64;
              }
              char v61 = 1;
            }
            long long v80 = 0u;
            long long v81 = 0u;
            long long v78 = 0u;
            long long v79 = 0u;
            id v46 = v67;
            id v47 = [v46 countByEnumeratingWithState:&v78 objects:v95 count:16];
            if (v47)
            {
              uint64_t v48 = *(void *)v79;
              do
              {
                for (j = 0; j != v47; j = (char *)j + 1)
                {
                  if (*(void *)v79 != v48) {
                    objc_enumerationMutation(v46);
                  }
                  [v1 refreshObject:*(void *)(*((void *)&v78 + 1) + 8 * (void)j) mergeChanges:0];
                }
                id v47 = [v46 countByEnumeratingWithState:&v78 objects:v95 count:16];
              }
              while (v47);
            }

            [v46 removeAllObjects];
            [v66 removeAllObjects];
          }
          int v21 = 0;
          goto LABEL_63;
        }
      }
      [v64 addObject:v18];
      [v67 addObject:v18];
      goto LABEL_23;
    }
    uint64_t v23 = (uint64_t)&v71[-v14];
    if ((unint64_t)&v71[-v14] >= 0x10) {
      uint64_t v23 = 16;
    }
    uint64_t v72 = v23;
    id v24 = objc_alloc((Class)NSFetchRequest);
    long long v25 = [WeakRetained entityName];
    id v26 = [v24 initWithEntityName:v25];

    id v27 = objc_msgSend(v76, "subarrayWithRange:", v14, v72);
    id v28 = [v27 mutableCopy];

    [v28 removeObject:@"keyFromMyKitchenDrawer"];
    id v29 = +[NSPredicate predicateWithFormat:@"%K IN %@", v65, v28];
    [v26 setPredicate:v29];

    id v86 = v70;
    id v30 = [v1 executeFetchRequest:v26 error:&v86];
    id v31 = v86;

    v83[0] = _NSConcreteStackBlock;
    v83[1] = 3221225472;
    v83[2] = sub_10004B9A4;
    v83[3] = &unk_100261298;
    id v84 = v65;
    __int16 v85 = &v87;
    uint64_t v16 = objc_msgSend(v30, "bds_dictionaryUsingPropertyAsKey:uniquingKeysWith:", v84, v83);

    if (v31)
    {
      [WeakRetained _logError:v31 at:@"resolveConflicts - fetch"];
      int v21 = 4;
    }
    else
    {
      int v21 = 0;
    }

    if (!v31)
    {
      uint64_t v69 = v14;
      uint64_t v70 = 0;
      goto LABEL_20;
    }
    id v74 = v16;
    uint64_t v69 = v14;
    uint64_t v70 = v31;
LABEL_64:

    if (v21) {
      break;
    }
    ++v14;
  }
  while ((char *)v14 != v71);
  id v54 = v70;
  if ((v61 & (v70 == 0)) != 1) {
    goto LABEL_74;
  }
  objc_msgSend(WeakRetained, "mq_incrementCloudVersion");
  if ([v1 hasChanges])
  {
    id v77 = 0;
    [v1 save:&v77];
    id v54 = v77;
    [WeakRetained _logError:v54 at:@"resolveConflicts - save remaining"];
    goto LABEL_74;
  }
LABEL_73:
  id v54 = 0;
LABEL_74:
  if (*((_DWORD *)v88 + 6))
  {
    char v57 = sub_1000083A0();
    if (os_log_type_enabled(v57, OS_LOG_TYPE_FAULT)) {
      sub_1001E7574();
    }
  }
  objc_msgSend(WeakRetained, "mq_signalTransactions");
  long long v58 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v54);

  id v59 = objc_retainBlock(*(id *)(a1 + 64));
  long long v60 = v59;
  if (v59) {
    (*((void (**)(id, uint64_t, void *, void *))v59 + 2))(v59, 1, v64, v58);
  }

  _Block_object_dispose(&v87, 8);
LABEL_81:
}

void sub_10004B938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

id sub_10004B9A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 valueForKey:*(void *)(a1 + 32)];
  uint64_t v8 = sub_1000083A0();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    int v10 = 141558786;
    uint64_t v11 = 1752392040;
    __int16 v12 = 2112;
    id v13 = v7;
    __int16 v14 = 2112;
    id v15 = v6;
    __int16 v16 = 2112;
    id v17 = v5;
    _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords: Encountered duplicates for %{mask.hash}@, entry=%@, existing=%@", (uint8_t *)&v10, 0x2Au);
  }

  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return v5;
}

void sub_10004BC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004BC88(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_10004BCFC(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = sub_1000083A0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E75F4((uint64_t)a1, v4, v5);
    }

    id v6 = objc_alloc((Class)NSFetchRequest);
    id v7 = [WeakRetained entityName];
    id v8 = [v6 initWithEntityName:v7];

    id v9 = [a1[4] valueForKey:@"recordName"];
    int v10 = +[NSPredicate predicateWithFormat:@"saltedHashedID IN %@", v9];
    [v8 setPredicate:v10];

    id v30 = 0;
    uint64_t v11 = [v3 executeFetchRequest:v8 error:&v30];
    id v12 = v30;
    [WeakRetained _logError:v12 at:@"resolveConflicts - failedRecordIDs - fetch"];
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v13 = v11;
    id v14 = [v13 countByEnumeratingWithState:&v26 objects:v31 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v27;
      do
      {
        for (i = 0; i != v15; i = (char *)i + 1)
        {
          if (*(void *)v27 != v16) {
            objc_enumerationMutation(v13);
          }
          [*(id *)(*((void *)&v26 + 1) + 8 * i) setSystemFields:0];
        }
        id v15 = [v13 countByEnumeratingWithState:&v26 objects:v31 count:16];
      }
      while (v15);
    }

    if ([v3 hasChanges])
    {
      id v25 = v12;
      [v3 save:&v25];
      id v18 = v25;

      [WeakRetained _logError:v18 at:@"resolveConflicts - failedRecordIDs - save"];
      id v19 = [WeakRetained syncManager];
      [v19 signalSyncToCK];

      id v12 = v18;
    }
    id v20 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v12);

    id v21 = objc_retainBlock(a1[5]);
    id v22 = v21;
    if (v21) {
      (*((void (**)(id, uint64_t, void *))v21 + 2))(v21, 1, v20);
    }
  }
  else
  {
    id v23 = objc_retainBlock(a1[5]);
    id v24 = v23;
    if (v23) {
      (*((void (**)(id, void, void))v23 + 2))(v23, 0, 0);
    }
  }
}

void sub_10004C110(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT)) {
    sub_1001E7668(a1);
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 40));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void, void, void, void))v3 + 2))(v3, 0, 0, 0, 0, 0);
  }
}

void sub_10004C300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004C324(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1001E725C();
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, void))v3 + 2))(v3, 0, 0);
  }
}

void sub_10004C398(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = sub_1000083A0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = [WeakRetained entityName];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %@ #dissociateCloudData", (uint8_t *)&buf, 0xCu);
    }
    id v6 = [WeakRetained entityName];
    id v7 = +[NSFetchRequest fetchRequestWithEntityName:v6];

    [v7 setFetchBatchSize:20];
    id v26 = 0;
    id v8 = [v3 executeFetchRequest:v7 error:&v26];
    id v9 = v26;
    [WeakRetained _logError:v9 at:@"dissociateCloudData - fetch"];
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v28 = 0x2020000000;
    BOOL v29 = v9 == 0;
    id v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472;
    id v21 = sub_10004C6B0;
    id v22 = &unk_100261310;
    id v24 = WeakRetained;
    p_long long buf = &buf;
    id v23 = v3;
    objc_msgSend(v8, "bds_traverseBatchesOfSize:block:", 20, &v19);
    if (objc_msgSend(WeakRetained, "signalDataChangedTransaction", v19, v20, v21, v22))
    {
      int v10 = [WeakRetained cloudKitController];
      uint64_t v11 = [v10 transactionManager];
      id v12 = [WeakRetained entityName];
      id v13 = [WeakRetained notificationName];
      [v11 signalDataChangeTransactionForEntityName:v12 notificationName:v13];
    }
    id v14 = objc_msgSend(WeakRetained, "mq_sanitizeError:", v9);

    id v15 = objc_retainBlock(*(id *)(a1 + 32));
    uint64_t v16 = v15;
    if (v15) {
      (*((void (**)(id, void, void *))v15 + 2))(v15, *(unsigned __int8 *)(*((void *)&buf + 1) + 24), v14);
    }

    _Block_object_dispose(&buf, 8);
  }
  else
  {
    id v17 = objc_retainBlock(*(id *)(a1 + 32));
    id v18 = v17;
    if (v17) {
      (*((void (**)(id, void, void))v17 + 2))(v17, 0, 0);
    }
  }
}

void sub_10004C68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10004C6B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v25 objects:v30 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v26;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v26 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        [v8 setSyncGeneration:0];
        [v8 setValue:0 forKey:@"saltedHashedID"];
        [v8 setSystemFields:0];
        [v8 setCkSystemFields:0];
      }
      id v5 = [v3 countByEnumeratingWithState:&v25 objects:v30 count:16];
    }
    while (v5);
  }
  if ([*(id *)(a1 + 32) hasChanges])
  {
    id v9 = *(void **)(a1 + 32);
    id v24 = 0;
    [v9 save:&v24];
    id v10 = v24;
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
    if (*(unsigned char *)(v12 + 24)) {
      BOOL v13 = v10 == 0;
    }
    else {
      BOOL v13 = 0;
    }
    char v14 = v13;
    *(unsigned char *)(v12 + 24) = v14;
    [*(id *)(a1 + 40) _logError:v10 at:@"dissociateCloudData - save"];
  }
  long long v22 = 0u;
  long long v23 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v15 = v3;
  id v16 = [v15 countByEnumeratingWithState:&v20 objects:v29 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v21;
    do
    {
      for (j = 0; j != v17; j = (char *)j + 1)
      {
        if (*(void *)v21 != v18) {
          objc_enumerationMutation(v15);
        }
        objc_msgSend(*(id *)(a1 + 32), "refreshObject:mergeChanges:", *(void *)(*((void *)&v20 + 1) + 8 * (void)j), 0, (void)v20);
      }
      id v17 = [v15 countByEnumeratingWithState:&v20 objects:v29 count:16];
    }
    while (v17);
  }
}

void sub_10004CAD0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_10004CAFC(uint64_t a1)
{
  uint64_t v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "No managed object context! #hasSaltChangedWithCompletion", v5, 2u);
  }

  id v3 = (void (**)(id, void, void *))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    id v4 = +[NSError errorWithDomain:@"BDSErrorDomain" code:1002 userInfo:0];
    v3[2](v3, 0, v4);
  }
}

void sub_10004CBC0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained moc];
  if (v3)
  {
    id v4 = objc_alloc((Class)NSFetchRequest);
    id v5 = [WeakRetained entityName];
    id v6 = [v4 initWithEntityName:v5];

    [v6 setReturnsObjectsAsFaults:0];
    [v6 setFetchLimit:1];
    id v7 = +[NSPredicate predicateWithFormat:@"syncGeneration >= 1"];
    [v6 setPredicate:v7];

    id v8 = +[BULogUtilities shared];
    unsigned int v9 = [v8 verboseLoggingEnabled];

    if (v9)
    {
      id v10 = sub_10000CD80();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138543362;
        id v25 = v6;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager hasSaltChangedWithCompletion:%{public}@\\\"\"", buf, 0xCu);
      }
    }
    id v23 = 0;
    uint64_t v11 = [v3 executeFetchRequest:v6 error:&v23];
    id v12 = v23;
    if ([v11 count])
    {
      BOOL v13 = [v11 firstObject];
      char v14 = [WeakRetained privacyDelegate];
      [v13 setPrivacyDelegate:v14];

      uint64_t v15 = [v13 hasValidSalt] ^ 1;
      id v16 = +[BULogUtilities shared];
      unsigned int v17 = [v16 verboseLoggingEnabled];

      if (v17)
      {
        uint64_t v18 = sub_10000CD80();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412546;
          id v25 = v13;
          __int16 v26 = 1024;
          int v27 = v15;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"Testing with %@  %{BOOL}d\\\"\"", buf, 0x12u);
        }
      }
      id v19 = objc_retainBlock(*(id *)(a1 + 32));
      long long v20 = v19;
      if (v19) {
        (*((void (**)(id, uint64_t, void))v19 + 2))(v19, v15, 0);
      }
    }
    else
    {
      BOOL v13 = (void (**)(void, void, void))objc_retainBlock(*(id *)(a1 + 32));
      if (!v13)
      {
LABEL_20:

        goto LABEL_21;
      }
      long long v20 = +[NSError errorWithDomain:@"BDSErrorDomain" code:1003 userInfo:0];
      ((void (**)(void, void, void *))v13)[2](v13, 0, v20);
    }

    goto LABEL_20;
  }
  long long v21 = sub_1000083A0();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
  {
    long long v22 = [WeakRetained entityName];
    *(_DWORD *)long long buf = 138412290;
    id v25 = v22;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "BCCloudDataManager %@ #hasSaltChangedWithCompletion no moc", buf, 0xCu);
  }
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  if (v6)
  {
    id v12 = +[NSError errorWithDomain:@"BDSErrorDomain" code:1002 userInfo:0];
    (*((void (**)(id, void, id))v6 + 2))(v6, 0, v12);
LABEL_21:
  }
}

void sub_10004D104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_10004D134(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained moc];
  if (v2)
  {
    id v3 = sub_1000083A0();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
      sub_1001E7808(WeakRetained, v3);
    }

    id v4 = objc_alloc((Class)NSFetchRequest);
    id v5 = [WeakRetained entityName];
    id v6 = [v4 initWithEntityName:v5];

    [v6 setFetchBatchSize:64];
    id v7 = +[NSPredicate predicateWithFormat:@"editGeneration > syncGeneration"];
    [v6 setPredicate:v7];

    id v31 = 0;
    id v8 = [v2 executeFetchRequest:v6 error:&v31];
    id v9 = v31;
    [WeakRetained _logError:v9 at:@"diagnosticDirtyCloudDataInfos"];
    if ([v8 count])
    {
      id v23 = v9;
      id v24 = v6;
      id v10 = sub_1000083A0();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = [WeakRetained entityName];
        id v12 = [v8 count];
        *(_DWORD *)long long buf = 138412546;
        long long v34 = v11;
        __int16 v35 = 2048;
        id v36 = v12;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager diagnosticDirtyCloudDataInfos %@, returning %lu results", buf, 0x16u);
      }
      id v25 = WeakRetained;

      long long v29 = 0u;
      long long v30 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      id v13 = v8;
      id v14 = [v13 countByEnumeratingWithState:&v27 objects:v32 count:16];
      if (v14)
      {
        id v15 = v14;
        uint64_t v16 = *(void *)v28;
        do
        {
          for (i = 0; i != v15; i = (char *)i + 1)
          {
            if (*(void *)v28 != v16) {
              objc_enumerationMutation(v13);
            }
            uint64_t v18 = *(void **)(*((void *)&v27 + 1) + 8 * i);
            id v19 = objc_msgSend(v18, "identifier", v23);
            objc_opt_class();
            long long v20 = [v18 valueForKey:@"saltedHashedID"];
            long long v21 = BUDynamicCast();

            long long v22 = [[BDSCloudSyncDiagnosticCloudDataInfo alloc] initWithIdentifier:v19 saltedHashedID:v21];
            [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v22];
          }
          id v15 = [v13 countByEnumeratingWithState:&v27 objects:v32 count:16];
        }
        while (v15);
      }

      id WeakRetained = v25;
      id v6 = v24;
      id v9 = v23;
    }
  }
}

void sub_10004D634(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 recordID];
  id v5 = [v4 recordName];
  id v6 = [v3 recordChangeTag];

  id v7 = +[NSString stringWithFormat:@"%@-%@", v5, v6];

  [*(id *)(a1 + 32) addObject:v7];
}

void sub_10004D708(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_10004D728(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x12u);
}

void sub_10004D988(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_10004D9B0(id *a1, int a2, int a3)
{
  id v6 = sub_1000083A0();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = [a1[4] delegate];
    uint64_t v8 = [v7 entityName];
    id v9 = (void *)v8;
    CFStringRef v10 = @"NO";
    if (a2) {
      CFStringRef v11 = @"YES";
    }
    else {
      CFStringRef v11 = @"NO";
    }
    *(_DWORD *)long long buf = 138412802;
    uint64_t v20 = v8;
    CFStringRef v22 = v11;
    __int16 v21 = 2112;
    if (a3) {
      CFStringRef v10 = @"YES";
    }
    __int16 v23 = 2112;
    CFStringRef v24 = v10;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@", buf, 0x20u);
  }
  if (a2 && a3)
  {
    id v12 = [a1[4] syncQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10004DB98;
    block[3] = &unk_100260278;
    objc_copyWeak(&v18, a1 + 7);
    id v16 = a1[5];
    id v17 = a1[6];
    dispatch_async(v12, block);

    objc_destroyWeak(&v18);
  }
  else
  {
    id v13 = objc_retainBlock(a1[6]);
    id v14 = v13;
    if (v13) {
      (*((void (**)(id))v13 + 2))(v13);
    }
  }
}

void sub_10004DB98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _syncQueueSyncForCloudData:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
}

void sub_10004DE8C(uint64_t a1, int a2)
{
  id v4 = +[BULogUtilities shared];
  unsigned int v5 = [v4 verboseLoggingEnabled];

  if (v5)
  {
    id v6 = sub_10000CD80();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 32) delegate];
      uint64_t v8 = [v7 entityName];
      id v9 = (void *)v8;
      CFStringRef v10 = @"NO";
      if (a2) {
        CFStringRef v10 = @"YES";
      }
      int v11 = 138412546;
      uint64_t v12 = v8;
      __int16 v13 = 2112;
      CFStringRef v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "\"\\\"#zonefetch BCCloudDataSyncManager: databaseController:recordsChanged: entityName: %@, success: %@\\\"\"", (uint8_t *)&v11, 0x16u);
    }
  }
}

void sub_10004E1F8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) serverPushPostponed])
  {
    uint64_t v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    if (v2)
    {
      id v6 = v2;
      v2[2]();
      uint64_t v2 = v6;
    }
  }
  else
  {
    id v3 = [*(id *)(a1 + 32) cloudKitController];
    id v4 = [v3 privateCloudDatabaseController];

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    id v7[2] = sub_10004E304;
    v7[3] = &unk_1002613D0;
    unsigned int v5 = *(void **)(a1 + 40);
    void v7[4] = *(void *)(a1 + 32);
    id v8 = v5;
    [v4 getAttached:v7];
  }
}

void sub_10004E304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = sub_1000083A0();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = [*(id *)(a1 + 32) delegate];
    id v8 = [v7 entityName];
    id v9 = +[NSNumber numberWithBool:a2];
    CFStringRef v10 = +[NSNumber numberWithBool:a3];
    int v14 = 138543874;
    id v15 = v8;
    __int16 v16 = 2114;
    id v17 = v9;
    __int16 v18 = 2114;
    id v19 = v10;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %{public}@, attachedState: %{public}@ reachable: %{public}@", (uint8_t *)&v14, 0x20u);
  }
  if (a2
    && a3
    && ([*(id *)(a1 + 32) delegate],
        int v11 = objc_claimAutoreleasedReturnValue(),
        v11,
        v11))
  {
    uint64_t v12 = [*(id *)(a1 + 32) delegate];
    [v12 syncManager:*(void *)(a1 + 32) startSyncToCKWithCompletion:*(void *)(a1 + 40)];
  }
  else
  {
    id v13 = objc_retainBlock(*(id *)(a1 + 40));
    uint64_t v12 = v13;
    if (v13) {
      (*((void (**)(id))v13 + 2))(v13);
    }
  }
}

void sub_10004ECE8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v100 = a2;
  id v103 = a3;
  id v104 = a4;
  uint64_t v110 = a1;
  from = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v102 = [WeakRetained delegate];
  if (!WeakRetained)
  {
    CFStringRef v10 = 0;
    int v11 = 0;
    int v12 = 0;
    uint64_t v13 = v110;
    unint64_t v14 = *(void *)(v110 + 72);
LABEL_47:
    [WeakRetained _leaveDispatchGroup:*(void *)(v13 + 32) times:v14 - (void)v10];
    goto LABEL_48;
  }
  if (!v104)
  {
LABEL_5:
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    id v9 = [WeakRetained syncQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100050060;
    block[3] = &unk_10025F988;
    void block[4] = WeakRetained;
    id v152 = *(id *)(a1 + 32);
    dispatch_async(v9, block);

    goto LABEL_8;
  }
  id v7 = [v104 domain];
  if ([v7 isEqualToString:CKErrorDomain])
  {
    id v8 = [v104 code];

    if (v8 != (id)2) {
      goto LABEL_8;
    }
    goto LABEL_5;
  }

LABEL_8:
  v109 = +[NSMutableArray array];
  long long v149 = 0u;
  long long v150 = 0u;
  long long v147 = 0u;
  long long v148 = 0u;
  id v15 = v100;
  id v16 = [v15 countByEnumeratingWithState:&v147 objects:v162 count:16];
  if (v16)
  {
    uint64_t v17 = *(void *)v148;
    do
    {
      for (i = 0; i != v16; i = (char *)i + 1)
      {
        if (*(void *)v148 != v17) {
          objc_enumerationMutation(v15);
        }
        id v19 = *(void **)(*((void *)&v147 + 1) + 8 * i);
        uint64_t v20 = sub_1000083A0();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v21 = [v19 encryptedValuesByKey];
          CFStringRef v22 = [v21 objectForKeyedSubscript:@"localRecordIDEncrypted"];
          *(_DWORD *)long long buf = 138412546;
          *(void *)&uint8_t buf[4] = v22;
          *(_WORD *)&buf[12] = 2112;
          *(void *)&buf[14] = v19;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Successful save of CKRecord id=%@ %@", buf, 0x16u);
        }
        __int16 v23 = *(void **)(a1 + 40);
        CFStringRef v24 = [v19 recordID];
        id v25 = [v23 objectForKeyedSubscript:v24];

        [v25 setSystemFields:v19];
        [v109 addObject:v25];
      }
      id v16 = [v15 countByEnumeratingWithState:&v147 objects:v162 count:16];
    }
    while (v16);
  }

  __int16 v26 = (char *)[v109 count];
  long long v27 = 0;
  if (v26)
  {
    long long v28 = v102;
    if (!v102) {
      goto LABEL_21;
    }
    v144[0] = _NSConcreteStackBlock;
    v144[1] = 3221225472;
    v144[2] = sub_1000500A0;
    v144[3] = &unk_1002613F8;
    v144[4] = WeakRetained;
    id v145 = *(id *)(a1 + 32);
    id v146 = v26;
    [v102 syncManager:WeakRetained updateSyncGenerationFromCloudData:v109 completion:v144];

    long long v27 = v26;
  }
  long long v28 = v102;
LABEL_21:
  __int16 v99 = v27;
  id v29 = [v103 count];
  if ([v103 count]) {
    BOOL v30 = v28 != 0;
  }
  else {
    BOOL v30 = 0;
  }
  if (v30)
  {
    id v31 = sub_1000083A0();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 138412290;
      *(void *)&uint8_t buf[4] = v103;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "Successful removal of CKRecord ids=%@", buf, 0xCu);
    }

    v141[0] = _NSConcreteStackBlock;
    v141[1] = 3221225472;
    v141[2] = sub_1000500B0;
    v141[3] = &unk_1002613F8;
    v141[4] = WeakRetained;
    id v142 = *(id *)(v110 + 32);
    id v143 = v29;
    [v102 syncManager:WeakRetained removeCloudDataForIDs:v103 completion:v141];

    __int16 v99 = &v99[(void)v29];
  }
  id v32 = [v104 code];
  if (!v104)
  {
    id v38 = sub_1000083A0();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      id v39 = [*(id *)(v110 + 48) operationID];
      *(_DWORD *)long long buf = 134218498;
      *(void *)&uint8_t buf[4] = v26;
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = v29;
      *(_WORD *)&buf[22] = 2114;
      v156 = v39;
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "Total success saving %lu records and deleting %lu records OperationID: %{public}@", buf, 0x20u);
    }
    goto LABEL_42;
  }
  uint64_t v33 = (uint64_t)v32;
  long long v34 = [v104 domain];
  unsigned __int8 v35 = [v34 isEqualToString:CKErrorDomain];

  if ((v35 & 1) == 0)
  {
    long long v40 = sub_1000083A0();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
      sub_1001E78E0();
    }
    goto LABEL_41;
  }
  if (v33 > 110)
  {
    switch(v33)
    {
      case 111:
        goto LABEL_61;
      case 112:
        int v12 = 0;
        LOBYTE(v97) = 1;
        goto LABEL_43;
      case 5008:
LABEL_61:
        LOBYTE(v97) = 0;
        int v12 = 1;
        goto LABEL_43;
    }
    goto LABEL_96;
  }
  if ((unint64_t)v33 > 0x1B) {
    goto LABEL_96;
  }
  if (((1 << v33) & 0x88000C0) != 0)
  {
    id v36 = sub_1000083A0();
    if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR)) {
      sub_1001E78E0();
    }

    uint64_t v37 = [WeakRetained syncQueue];
    v112[0] = _NSConcreteStackBlock;
    v112[1] = 3221225472;
    v112[2] = sub_100050338;
    v112[3] = &unk_100261448;
    v112[4] = WeakRetained;
    id v113 = v104;
    id v114 = *(id *)(v110 + 40);
    objc_copyWeak(&v116, from);
    uint64_t v115 = *(void *)(v110 + 56);
    dispatch_async(v37, v112);

    objc_destroyWeak(&v116);
    goto LABEL_42;
  }
  if (v33 != 2)
  {
LABEL_96:
    long long v40 = sub_1000083A0();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR)) {
      sub_1001E78E0();
    }
LABEL_41:

LABEL_42:
    int v12 = 0;
    LOBYTE(v97) = 0;
    goto LABEL_43;
  }
  id v47 = [v104 userInfo];
  long long v94 = [v47 objectForKeyedSubscript:CKPartialErrorsByItemIDKey];

  uint64_t v48 = sub_1000083A0();
  if (os_log_type_enabled(v48, OS_LOG_TYPE_INFO))
  {
    uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t))[v94 count];
    *(_DWORD *)long long buf = 134218496;
    *(void *)&uint8_t buf[4] = v26;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v29;
    *(_WORD *)&buf[22] = 2048;
    v156 = v49;
    _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_INFO, "Partial failure saving %lu records and deleting %lu records.  Failed %lu.", buf, 0x20u);
  }

  if (v102)
  {
    v96 = objc_opt_new();
    v95 = objc_opt_new();
    long long v139 = 0u;
    long long v140 = 0u;
    long long v137 = 0u;
    long long v138 = 0u;
    id v50 = v94;
    id v51 = [v50 countByEnumeratingWithState:&v137 objects:v161 count:16];
    if (v51)
    {
      int v97 = 0;
      uint64_t v52 = *(void *)v138;
      do
      {
        for (j = 0; j != v51; j = (char *)j + 1)
        {
          if (*(void *)v138 != v52) {
            objc_enumerationMutation(v50);
          }
          id v54 = *(void **)(*((void *)&v137 + 1) + 8 * (void)j);
          id v55 = +[NSNull null];
          BOOL v56 = v54 == v55;

          if (!v56)
          {
            char v57 = [v50 objectForKeyedSubscript:v54];
            long long v58 = [v57 domain];
            unsigned int v59 = [v58 isEqual:CKErrorDomain];

            if (v59)
            {
              long long v60 = [v57 userInfo];
              char v61 = [v60 objectForKey:CKRecordChangedErrorServerRecordKey];

              if (v61)
              {
                BOOL v62 = [v57 code] == (id)14;
                long long v63 = sub_1000083A0();
                long long v64 = v63;
                if (v62)
                {
                  if (os_log_type_enabled(v63, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)long long buf = 138543618;
                    *(void *)&uint8_t buf[4] = v54;
                    *(_WORD *)&buf[12] = 2114;
                    *(void *)&buf[14] = v57;
                    _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_INFO, "CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@", buf, 0x16u);
                  }

                  [v96 setObject:v61 forKeyedSubscript:v54];
                }
                else
                {
                  if (os_log_type_enabled(v63, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)long long buf = 138543874;
                    *(void *)&uint8_t buf[4] = v61;
                    *(_WORD *)&buf[12] = 2114;
                    *(void *)&buf[14] = v104;
                    *(_WORD *)&buf[22] = 2114;
                    v156 = (uint64_t (*)(uint64_t, uint64_t))v57;
                    _os_log_error_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_ERROR, "Error for record %{public}@ operationError %{public}@ perRecordError %{public}@", buf, 0x20u);
                  }
                }
              }
              else
              {
                __int16 v65 = sub_1000083A0();
                if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)long long buf = 138543874;
                  *(void *)&uint8_t buf[4] = v54;
                  *(_WORD *)&buf[12] = 2114;
                  *(void *)&buf[14] = v104;
                  *(_WORD *)&buf[22] = 2114;
                  v156 = (uint64_t (*)(uint64_t, uint64_t))v57;
                  _os_log_error_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_ERROR, "Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@", buf, 0x20u);
                }

                if ([v57 code] == (id)21 || objc_msgSend(v57, "code") == (id)14)
                {
                  [v95 addObject:v54];
                }
                else
                {
                  id v66 = [v57 code];
                  int v67 = v97;
                  if (v66 == (id)112) {
                    int v67 = 1;
                  }
                  int v97 = v67;
                }
              }
            }
            else
            {
              char v61 = sub_1000083A0();
              if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)long long buf = 138412546;
                *(void *)&uint8_t buf[4] = v54;
                *(_WORD *)&buf[12] = 2114;
                *(void *)&buf[14] = v57;
                _os_log_error_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_ERROR, "Error modifying record:%@ error=%{public}@", buf, 0x16u);
              }
            }
          }
        }
        id v51 = [v50 countByEnumeratingWithState:&v137 objects:v161 count:16];
      }
      while (v51);
    }
    else
    {
      LOBYTE(v97) = 0;
    }

    id v93 = [v96 count];
    if (v93)
    {
      v98 = +[NSMutableSet set];
      long long v135 = 0u;
      long long v136 = 0u;
      long long v133 = 0u;
      long long v134 = 0u;
      id obj = [v96 allValues];
      id v108 = [obj countByEnumeratingWithState:&v133 objects:v160 count:16];
      if (v108)
      {
        uint64_t froma = *(void *)v134;
        do
        {
          for (k = 0; k != v108; k = (char *)k + 1)
          {
            if (*(void *)v134 != froma) {
              objc_enumerationMutation(obj);
            }
            v71 = *(void **)(*((void *)&v133 + 1) + 8 * (void)k);
            long long v129 = 0u;
            long long v130 = 0u;
            long long v131 = 0u;
            long long v132 = 0u;
            uint64_t v72 = objc_msgSend(v71, "allKeys", v93);
            id v73 = [v72 countByEnumeratingWithState:&v129 objects:v159 count:16];
            if (v73)
            {
              uint64_t v74 = *(void *)v130;
              while (2)
              {
                for (m = 0; m != v73; m = (char *)m + 1)
                {
                  if (*(void *)v130 != v74) {
                    objc_enumerationMutation(v72);
                  }
                  uint64_t v76 = *(void *)(*((void *)&v129 + 1) + 8 * (void)m);
                  objc_opt_class();
                  id v77 = [v71 objectForKeyedSubscript:v76];
                  long long v78 = BUDynamicCast();

                  if (v78)
                  {
                    long long v79 = [v71 recordID];

                    if (v79)
                    {
                      long long v80 = [v71 recordID];
                      [v98 addObject:v80];
                    }
                    else
                    {
                      long long v80 = sub_1000083A0();
                      if (os_log_type_enabled(v80, OS_LOG_TYPE_ERROR))
                      {
                        *(_DWORD *)long long buf = 138412290;
                        *(void *)&uint8_t buf[4] = v71;
                        _os_log_error_impl((void *)&_mh_execute_header, v80, OS_LOG_TYPE_ERROR, "Record ID is nil for record to fetch: %@", buf, 0xCu);
                      }
                    }

                    goto LABEL_122;
                  }
                }
                id v73 = [v72 countByEnumeratingWithState:&v129 objects:v159 count:16];
                if (v73) {
                  continue;
                }
                break;
              }
            }
LABEL_122:
          }
          id v108 = [obj countByEnumeratingWithState:&v133 objects:v160 count:16];
        }
        while (v108);
      }

      if ([v98 count])
      {
        long long v81 = sub_1000083A0();
        if (os_log_type_enabled(v81, OS_LOG_TYPE_INFO))
        {
          id v82 = [v98 count];
          *(_DWORD *)long long buf = 134217984;
          *(void *)&uint8_t buf[4] = v82;
          _os_log_impl((void *)&_mh_execute_header, v81, OS_LOG_TYPE_INFO, "Fetching %lu records that had assets on conflict", buf, 0xCu);
        }

        id v83 = objc_alloc((Class)CKFetchRecordsOperation);
        id v84 = [v98 allObjects];
        id v85 = [v83 initWithRecordIDs:v84];

        id v86 = +[CKOperationConfiguration bds_defaultConfiguration];
        [v85 setConfiguration:v86];

        v123[0] = _NSConcreteStackBlock;
        v123[1] = 3221225472;
        v123[2] = sub_1000500C0;
        v123[3] = &unk_100261420;
        v124 = v96;
        id v125 = v102;
        id v126 = WeakRetained;
        id v127 = *(id *)(v110 + 32);
        id v128 = v93;
        [v85 setFetchRecordsCompletionBlock:v123];
        uint64_t v87 = [WeakRetained cloudKitController];
        id v88 = [v87 privateCloudDatabaseController];

        uint64_t v89 = [v88 database];
        [v89 addOperation:v85];
      }
      else
      {
        int v90 = [v96 allValues];
        v120[0] = _NSConcreteStackBlock;
        v120[1] = 3221225472;
        v120[2] = sub_100050318;
        v120[3] = &unk_1002613F8;
        v120[4] = WeakRetained;
        id v121 = *(id *)(v110 + 32);
        id v122 = v93;
        [v102 syncManager:WeakRetained resolveConflictsForRecords:v90 completion:v120];
      }
      __int16 v99 = &v99[(void)v93];
    }
    id v91 = objc_msgSend(v95, "count", v93);
    if (v91)
    {
      uint64_t v92 = *(void *)(v110 + 56);
      v117[0] = _NSConcreteStackBlock;
      v117[1] = 3221225472;
      v117[2] = sub_100050328;
      v117[3] = &unk_1002613F8;
      v117[4] = WeakRetained;
      id v118 = *(id *)(v110 + 32);
      id v119 = v91;
      [v102 syncManager:v92 failedRecordIDs:v95 completion:v117];

      __int16 v99 = &v99[(void)v91];
    }

    uint64_t v69 = v96;
  }
  else
  {
    id v68 = sub_1000083A0();
    uint64_t v69 = v68;
    if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
    {
      sub_1001E7948(v68);
      LOBYTE(v97) = 0;
      uint64_t v69 = v68;
    }
    else
    {
      LOBYTE(v97) = 0;
    }
  }

  int v12 = 0;
LABEL_43:

  int v11 = v97 & 1;
  uint64_t v13 = v110;
  unint64_t v14 = *(void *)(v110 + 72);
  CFStringRef v10 = v99;
  if (v14 >= (unint64_t)v99) {
    goto LABEL_47;
  }
  unsigned int v41 = sub_1000083A0();
  if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
    sub_1001E789C(v41);
  }

LABEL_48:
  if ((v11 & 1) != 0 || v12)
  {
    *(void *)long long buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x3032000000;
    v156 = sub_100050504;
    v157 = sub_100050514;
    id v158 = +[NSMutableArray array];
    id v42 = *(void **)(v110 + 40);
    v111[0] = _NSConcreteStackBlock;
    v111[1] = 3221225472;
    v111[2] = sub_10005051C;
    v111[3] = &unk_100261470;
    v111[4] = buf;
    [v42 enumerateKeysAndObjectsUsingBlock:v111];
    if ([*(id *)(*(void *)&buf[8] + 40) count])
    {
      id v43 = [*(id *)(v110 + 56) cloudKitController];
      id v44 = [v43 privateCloudDatabaseController];

      if (v11)
      {
        [v44 zonesUnreadableDueToMissingD2DEncryptionIdentity:*(void *)(*(void *)&buf[8] + 40) completion:0];
      }
      else if (v12)
      {
        NSErrorUserInfoKey v153 = NSLocalizedDescriptionKey;
        CFStringRef v154 = @"Unsynced keychain - cannot modify records";
        id v45 = +[NSDictionary dictionaryWithObjects:&v154 forKeys:&v153 count:1];
        id v46 = +[NSError errorWithDomain:@"BDSCloudKitClientError" code:2006 userInfo:v45];

        [v44 zonesTemporarilyUnreadableWithError:v46 completion:0];
      }
    }
    _Block_object_dispose(buf, 8);
  }
}

void sub_100050038(_Unwind_Exception *a1)
{
}

void sub_100050060(uint64_t a1)
{
  [*(id *)(a1 + 32) setBackOffInterval:0.0];
  uint64_t v2 = *(NSObject **)(a1 + 40);
  dispatch_group_leave(v2);
}

id sub_1000500A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _leaveDispatchGroup:*(void *)(a1 + 40) times:*(void *)(a1 + 48)];
}

id sub_1000500B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _leaveDispatchGroup:*(void *)(a1 + 40) times:*(void *)(a1 + 48)];
}

void sub_1000500C0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000083A0();
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001E798C();
    }
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 134217984;
      id v31 = [v5 count];
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Successfully fetched %lu records that had assets on conflict", buf, 0xCu);
    }

    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v8 = [v5 allValues];
    id v9 = [v8 countByEnumeratingWithState:&v25 objects:v29 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v26;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(void *)v26 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v25 + 1) + 8 * i);
          unint64_t v14 = *(void **)(a1 + 32);
          id v15 = [v13 recordID];
          [v14 setObject:v13 forKeyedSubscript:v15];
        }
        id v10 = [v8 countByEnumeratingWithState:&v25 objects:v29 count:16];
      }
      while (v10);
    }
  }

  uint64_t v17 = *(void **)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  __int16 v18 = [*(id *)(a1 + 32) allValues];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_100050308;
  v22[3] = &unk_1002613F8;
  id v19 = *(void **)(a1 + 56);
  void v22[4] = *(void *)(a1 + 48);
  id v20 = v19;
  uint64_t v21 = *(void *)(a1 + 64);
  id v23 = v20;
  uint64_t v24 = v21;
  [v17 syncManager:v16 resolveConflictsForRecords:v18 completion:v22];
}

id sub_100050308(uint64_t a1)
{
  return [*(id *)(a1 + 32) _leaveDispatchGroup:*(void *)(a1 + 40) times:*(void *)(a1 + 48)];
}

id sub_100050318(uint64_t a1)
{
  return [*(id *)(a1 + 32) _leaveDispatchGroup:*(void *)(a1 + 40) times:*(void *)(a1 + 48)];
}

id sub_100050328(uint64_t a1)
{
  return [*(id *)(a1 + 32) _leaveDispatchGroup:*(void *)(a1 + 40) times:*(void *)(a1 + 48)];
}

void sub_100050338(uint64_t a1)
{
  if (([*(id *)(a1 + 32) serverPushPostponed] & 1) == 0)
  {
    [*(id *)(a1 + 32) setServerPushPostponed:1];
    objc_msgSend(*(id *)(a1 + 32), "_updateRetryParametersFromModifyRecordsOperationError:batchSize:", *(void *)(a1 + 40), objc_msgSend(*(id *)(a1 + 48), "count"));
    [*(id *)(a1 + 32) backOffInterval];
    dispatch_time_t v3 = dispatch_time(0, (uint64_t)(v2 * 1000000000.0));
    id v4 = [*(id *)(a1 + 32) syncQueue];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100050448;
    v5[3] = &unk_10025F9F8;
    objc_copyWeak(&v6, (id *)(a1 + 64));
    void v5[4] = *(void *)(a1 + 56);
    dispatch_after(v3, v4, v5);

    objc_destroyWeak(&v6);
  }
}

void sub_100050448(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    [WeakRetained setServerPushPostponed:0];
    dispatch_time_t v3 = [*(id *)(a1 + 32) cloudKitController];
    id v4 = [v3 transactionManager];
    id v5 = [*(id *)(a1 + 32) delegate];
    id v6 = [v5 entityName];
    [v4 signalSyncToCKTransactionForEntityName:v6 syncManager:*(void *)(a1 + 32)];

    id WeakRetained = v7;
  }
}

uint64_t sub_100050504(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100050514(uint64_t a1)
{
}

void sub_10005051C(uint64_t a1, void *a2)
{
  id v6 = a2;
  dispatch_time_t v3 = [v6 zoneID];

  if (v3)
  {
    id v4 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    id v5 = [v6 zoneID];
    [v4 addObject:v5];
  }
}

void sub_1000509A4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 128));
  _Unwind_Resume(a1);
}

void sub_1000509C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained setProcessingCloudData:0];
  if (*(unsigned char *)(a1 + 56))
  {
    double v2 = [*(id *)(a1 + 32) cloudKitController];
    dispatch_time_t v3 = [v2 transactionManager];
    id v4 = [*(id *)(a1 + 32) delegate];
    id v5 = [v4 entityName];
    [v3 signalSyncToCKTransactionForEntityName:v5 syncManager:*(void *)(a1 + 32)];
  }
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id))v6 + 2))(v6);
  }
}

void sub_1000515A8(id a1)
{
  qword_100297590 = objc_alloc_init(BDSNBPinningManager);
  _objc_release_x1();
}

void sub_100051A20(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_10000CEB0();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 138412290;
    id v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Parsed master playlist, using streamInf: %@", (uint8_t *)&v16, 0xCu);
  }

  if (v5)
  {
    id v8 = [v5 averageBandwidthFallbackToPeak];
    +[BLMediaItemUtils setBitrate:v8 forItem:*(void *)(a1 + 32)];
    id v9 = sub_10000CEB0();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v16 = 134218242;
      id v17 = v8;
      __int16 v18 = 2112;
      uint64_t v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Set bitrate to %lu on item %@", (uint8_t *)&v16, 0x16u);
    }

    uint64_t v11 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    int v12 = v11;
    if (v11)
    {
      uint64_t v13 = v11[2];
LABEL_12:
      v13();
    }
  }
  else
  {
    unint64_t v14 = sub_10000CEB0();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_1001E7A5C((uint64_t)v6, v14);
    }

    id v15 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    int v12 = v15;
    if (v15)
    {
      uint64_t v13 = v15[2];
      goto LABEL_12;
    }
  }
}

BOOL sub_1000528A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) isCancelled])
  {
    BOOL v4 = 1;
  }
  else
  {
    id v5 = [v3 collectionMemberID];
    id v6 = +[BCCollectionMember assetIDFromCollectionMemberID:v5];

    id v7 = +[BDSMediaLibraryUtils representativeDAAPMediaItemsWithAssetId:v6];
    if (v7)
    {
      dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
      id v8 = sub_10000CEB0();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
        sub_1001E7B50();
      }

      id v9 = *(void **)(a1 + 48);
      uint64_t v10 = +[NSNumber numberWithUnsignedLongLong:BUStoreIdFromObject()];
      [v9 addObject:v10];

      uint64_t v11 = *(void **)(a1 + 56);
      uint64_t v12 = *(void *)(a1 + 64);
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_100052B34;
      v18[3] = &unk_10025F748;
      id v19 = *(id *)(a1 + 40);
      [v11 _prepareMediaItemForPinningIfNeeded:v7 parentProgress:v12 completion:v18];
      BOOL v4 = 1;
      uint64_t v13 = v19;
    }
    else
    {
      uint64_t v13 = [*(id *)(a1 + 56) _jaliscoAudiobookWithAssetId:v6];
      BOOL v4 = v13 != 0;
      unint64_t v14 = sub_10000CEB0();
      id v15 = v14;
      if (v13)
      {
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG)) {
          sub_1001E7AE8();
        }

        int v16 = *(void **)(a1 + 48);
        id v15 = +[NSNumber numberWithUnsignedLongLong:BUStoreIdFromObject()];
        [v16 addObject:v15];
      }
      else if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v21 = v6;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "found wantToRead member with assetID \"%@\" that has no MediaItem or Jalisco item.", buf, 0xCu);
      }
    }
  }

  return v4;
}

void sub_100052B34(uint64_t a1)
{
}

void sub_100052B3C(uint64_t a1)
{
}

BOOL sub_100052B44(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) isCancelled])
  {
    BOOL v4 = 1;
  }
  else
  {
    id v5 = [v3 assetID];
    id v6 = +[BDSMediaLibraryUtils representativeDAAPMediaItemsWithAssetId:v5];

    if (v6)
    {
      dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
      id v7 = sub_10000CEB0();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
        sub_1001E7C3C(v3);
      }

      id v8 = *(void **)(a1 + 48);
      id v9 = [v3 assetID];
      uint64_t v10 = +[NSNumber numberWithUnsignedLongLong:BUStoreIdFromObject()];
      [v8 addObject:v10];

      uint64_t v11 = *(void **)(a1 + 56);
      uint64_t v12 = *(void *)(a1 + 64);
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      v22[2] = sub_100052E04;
      v22[3] = &unk_10025F748;
      id v23 = *(id *)(a1 + 40);
      [v11 _prepareMediaItemForPinningIfNeeded:v6 parentProgress:v12 completion:v22];
      BOOL v4 = 1;
      uint64_t v13 = v23;
    }
    else
    {
      unint64_t v14 = *(void **)(a1 + 56);
      id v15 = [v3 assetID];
      uint64_t v13 = [v14 _jaliscoAudiobookWithAssetId:v15];

      BOOL v4 = v13 != 0;
      int v16 = sub_10000CEB0();
      id v17 = v16;
      if (v13)
      {
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG)) {
          sub_1001E7BB8(v3);
        }

        __int16 v18 = *(void **)(a1 + 48);
        id v17 = [v3 assetID];
        id v19 = +[NSNumber numberWithUnsignedLongLong:BUStoreIdFromObject()];
        [v18 addObject:v19];
      }
      else if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        id v20 = [v3 assetID];
        *(_DWORD *)long long buf = 138412290;
        long long v25 = v20;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "found readingNow member with assetID \"%@\" that has no MediaItem or Jalisco item.", buf, 0xCu);
      }
    }
  }
  return v4;
}

void sub_100052E04(uint64_t a1)
{
}

void sub_100052E0C(uint64_t a1)
{
}

void sub_100052E14(uint64_t a1, uint64_t a2)
{
  BOOL v4 = sub_10000CEB0();
  id v5 = v4;
  if (a2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E7CC0(a1, v5, v6, v7, v8, v9, v10, v11);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    int v13 = 138412290;
    uint64_t v14 = v12;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Updated bitrate on pinned item: %@", (uint8_t *)&v13, 0xCu);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100052EF0(uint64_t a1)
{
  uint64_t v2 = 3 - (void)[*(id *)(a1 + 32) count];
  if (v2 >= 1)
  {
    id v3 = +[NSProgress progressWithTotalUnitCount:1];
    [*(id *)(a1 + 40) addChild:v3 withPendingUnitCount:v2];
    [v3 setCompletedUnitCount:1];
  }
  uint64_t v4 = 3 - (void)[*(id *)(a1 + 48) count];
  if (v4 >= 1)
  {
    id v5 = +[NSProgress progressWithTotalUnitCount:1];
    [*(id *)(a1 + 56) addChild:v5 withPendingUnitCount:v4];
    [v5 setCompletedUnitCount:1];
  }
  if (*(unsigned char *)(a1 + 88))
  {
    uint64_t v6 = sub_10000CEB0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 32) count];
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 134218242;
      id v31 = v7;
      __int16 v32 = 2112;
      uint64_t v33 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "pinning %lu audiobooks to wantToRead list (%@)", buf, 0x16u);
    }

    id v9 = [*(id *)(a1 + 32) copy];
    [*(id *)(a1 + 64) setWantToReadAudiobooks:v9];
  }
  if (*(unsigned char *)(a1 + 89))
  {
    uint64_t v10 = sub_10000CEB0();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = [*(id *)(a1 + 48) count];
      uint64_t v12 = *(void *)(a1 + 48);
      *(_DWORD *)long long buf = 134218242;
      id v31 = v11;
      __int16 v32 = 2112;
      uint64_t v33 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "pinning %lu audiobooks to readingNow list (%@)", buf, 0x16u);
    }

    id v13 = [*(id *)(a1 + 48) copy];
    [*(id *)(a1 + 64) setReadingNowAudiobooks:v13];
  }
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v14 = *(id *)(a1 + 72);
  id v15 = [v14 countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v26;
    do
    {
      for (i = 0; i != v16; i = (char *)i + 1)
      {
        if (*(void *)v26 != v17) {
          objc_enumerationMutation(v14);
        }
        id v19 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        id v20 = sub_10000CEB0();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v21 = [v19 stringValue];
          *(_DWORD *)long long buf = 138412290;
          id v31 = v21;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "unpinning assetID: %@", buf, 0xCu);
        }
        [*(id *)(a1 + 64) unpinAudiobook:v19];
      }
      id v16 = [v14 countByEnumeratingWithState:&v25 objects:v29 count:16];
    }
    while (v16);
  }

  id v22 = [*(id *)(a1 + 64) readingNowAudiobooks];
  id v23 = objc_retainBlock(*(id *)(a1 + 80));
  uint64_t v24 = v23;
  if (v23) {
    (*((void (**)(id, void))v23 + 2))(v23, 0);
  }
}

void sub_1000533C8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000533E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000533F0(uint64_t a1)
{
}

BOOL sub_1000533F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 assetID];
  id v5 = +[BDSMediaLibraryUtils representativeDAAPMediaItemsWithAssetId:v4];

  if (v5)
  {
    uint64_t v6 = [v3 assetID];
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v7 = a1 + 32;
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v6;

    id v11 = sub_10000CEB0();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
      sub_1001E7D30(v7, v11, v12, v13, v14, v15, v16, v17);
    }
  }
  else
  {
    id v11 = sub_10000CEB0();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      __int16 v18 = [v3 assetID];
      int v20 = 138412290;
      uint64_t v21 = v18;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "found readingNow member with assetID \"%@\" that has no MediaItem.", (uint8_t *)&v20, 0xCu);
    }
  }

  return v5 != 0;
}

void sub_10005354C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  uint64_t v6 = sub_10000CEB0();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    int v8 = 138412290;
    uint64_t v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "returning mostRecentAudiobook with assetID: %@", (uint8_t *)&v8, 0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000537AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_10000CEB0();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E7DA8(a1, v5, v6, v7, v8, v9, v10, v11);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    int v15 = 138412290;
    uint64_t v16 = v12;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Updated bitrate for item with adadmID: %@", (uint8_t *)&v15, 0xCu);
  }

  id v13 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v14 = v13;
  if (v13) {
    (*((void (**)(id, id))v13 + 2))(v13, v3);
  }
}

void sub_100053948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 32));
  if (v4)
  {
    id v3 = +[NSNumber numberWithBool:a2];
    v4[2](v4, v3, 0);
  }
}

void sub_100053A34(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_100053A50(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_100053F04(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = sub_1000083A0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001E7E18((uint64_t)v5, v6);
    }
  }
  else
  {
    if (!a2) {
      goto LABEL_5;
    }
    uint64_t v6 = sub_1000083A0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = [*(id *)(a1 + 32) zoneName];
      int v8 = 138412290;
      uint64_t v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@", (uint8_t *)&v8, 0xCu);
    }
  }

LABEL_5:
}

void sub_100054290(uint64_t a1)
{
  uint64_t v2 = sub_10000CE18();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) zoneName];
    uint64_t v4 = *(void **)(a1 + 40);
    *(_DWORD *)long long buf = 138412546;
    id v22 = v3;
    __int16 v23 = 2112;
    uint64_t v24 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - zoneNeedsUpdate serverSaltVersionIdentifier:(%@)", buf, 0x16u);
  }
  id v5 = +[BCSaltVersionIdentifier fetchRequest];
  [v5 setReturnsObjectsAsFaults:0];
  uint64_t v6 = *(void **)(a1 + 48);
  id v20 = 0;
  uint64_t v7 = [v6 executeFetchRequest:v5 error:&v20];
  id v8 = v20;
  if ([v7 count])
  {
    if ([v7 count] == (id)1)
    {
      uint64_t v9 = [v7 firstObject];
      uint64_t v10 = [v9 localSaltVersionIdentifier];
      uint64_t v11 = [v10 isEqualToString:*(void *)(a1 + 40)] ^ 1;
      uint64_t v12 = sub_10000CE18();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        id v13 = [*(id *)(a1 + 32) zoneName];
        uint64_t v14 = *(void *)(a1 + 40);
        *(_DWORD *)long long buf = 138413058;
        id v22 = v13;
        __int16 v23 = 2112;
        uint64_t v24 = v10;
        __int16 v25 = 2112;
        uint64_t v26 = v14;
        __int16 v27 = 1024;
        int v28 = v11;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@  Comparing local(%@) to server(%@).Need update:%{BOOL}d", buf, 0x26u);
      }
      id v15 = objc_retainBlock(*(id *)(a1 + 56));
      uint64_t v16 = v15;
      if (v15) {
        (*((void (**)(id, uint64_t, void))v15 + 2))(v15, v11, 0);
      }

      goto LABEL_18;
    }
    id v19 = sub_10000CE18();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
      sub_1001E7E90();
    }

    uint64_t v9 = (void (**)(void, void, void))objc_retainBlock(*(id *)(a1 + 56));
    if (v9)
    {
      uint64_t v10 = +[NSError errorWithDomain:@"BDSErrorDomain" code:1006 userInfo:0];
      ((void (**)(void, uint64_t, void *))v9)[2](v9, 1, v10);
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v17 = sub_10000CE18();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v18 = [*(id *)(a1 + 32) zoneName];
      *(_DWORD *)long long buf = 138412290;
      id v22 = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - no local identifier saved", buf, 0xCu);
    }
    uint64_t v9 = (void (**)(void, void, void))objc_retainBlock(*(id *)(a1 + 56));
    if (v9)
    {
      uint64_t v10 = +[NSError errorWithDomain:@"BDSErrorDomain" code:1003 userInfo:0];
      ((void (**)(void, void, void *))v9)[2](v9, 0, v10);
LABEL_18:
    }
  }
}

void sub_1000546E4(uint64_t a1)
{
  uint64_t v2 = sub_10000CE18();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) zoneName];
    uint64_t v4 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138412546;
    BOOL v30 = v3;
    __int16 v31 = 2112;
    *(void *)__int16 v32 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier serverSaltVersionIdentifier:(%@)", buf, 0x16u);
  }
  id v5 = +[BCSaltVersionIdentifier fetchRequest];
  [v5 setReturnsObjectsAsFaults:0];
  uint64_t v6 = *(void **)(a1 + 48);
  id v28 = 0;
  uint64_t v7 = [v6 executeFetchRequest:v5 error:&v28];
  id v8 = v28;
  if (v7)
  {
    if ([v7 count] == (id)1)
    {
      id v9 = [v7 firstObject];
    }
    else
    {
      if ((unint64_t)[v7 count] >= 2)
      {
        uint64_t v10 = [v7 firstObject];
        if ((unint64_t)[v7 count] >= 2)
        {
          unint64_t v11 = 1;
          do
          {
            uint64_t v12 = *(void **)(a1 + 48);
            id v13 = [v7 objectAtIndexedSubscript:v11];
            [v12 deleteObject:v13];

            ++v11;
          }
          while ((unint64_t)[v7 count] > v11);
        }
LABEL_15:
        [v10 setLocalSaltVersionIdentifier:*(void *)(a1 + 40)];
        [v10 setServerSaltVersionIdentifier:*(void *)(a1 + 40)];
        if ([*(id *)(a1 + 48) hasChanges])
        {
          uint64_t v17 = *(void **)(a1 + 48);
          id v27 = v8;
          unsigned int v18 = [v17 save:&v27];
          id v19 = v27;

          id v20 = sub_10000CE18();
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v21 = [*(id *)(a1 + 32) zoneName];
            *(_DWORD *)long long buf = 138412802;
            BOOL v30 = v21;
            __int16 v31 = 1024;
            *(_DWORD *)__int16 v32 = v18;
            *(_WORD *)&v32[4] = 2112;
            *(void *)&v32[6] = v19;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier SAVE success %{BOOL}d error:(%@)", buf, 0x1Cu);
          }
          if (v18) {
            goto LABEL_25;
          }
          id v22 = sub_10000CE18();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            __int16 v23 = [*(id *)(a1 + 32) zoneName];
            uint64_t v24 = *(void *)(a1 + 40);
            *(_DWORD *)long long buf = 138412802;
            BOOL v30 = v23;
            __int16 v31 = 2112;
            *(void *)__int16 v32 = v24;
            *(_WORD *)&v32[8] = 2114;
            *(void *)&v32[10] = v19;
            _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier Error saving saltVersionIdentifier:(%@) Error:%{public}@", buf, 0x20u);
          }
        }
        else
        {
          id v22 = sub_10000CE18();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
            sub_1001E7F38();
          }
          id v19 = v8;
        }

LABEL_25:
        id v8 = v19;
        goto LABEL_26;
      }
      uint64_t v14 = sub_10000CE18();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        id v15 = [*(id *)(a1 + 32) zoneName];
        uint64_t v16 = *(void *)(a1 + 40);
        *(_DWORD *)long long buf = 138412546;
        BOOL v30 = v15;
        __int16 v31 = 2112;
        *(void *)__int16 v32 = v16;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier NEW record %@", buf, 0x16u);
      }
      id v9 = [[BCSaltVersionIdentifier alloc] initIntoManagedObjectContext:*(void *)(a1 + 48)];
    }
    uint64_t v10 = v9;
    goto LABEL_15;
  }
LABEL_26:
  id v25 = objc_retainBlock(*(id *)(a1 + 56));
  uint64_t v26 = v25;
  if (v25) {
    (*((void (**)(id, BOOL, id))v25 + 2))(v25, v8 == 0, v8);
  }
}

void sub_100054BB4(uint64_t a1)
{
  uint64_t v2 = +[NSFetchRequest fetchRequestWithEntityName:@"BCServerChangeToken"];
  id v3 = [objc_alloc((Class)NSBatchDeleteRequest) initWithFetchRequest:v2];
  [v3 setResultType:1];
  uint64_t v4 = *(void **)(a1 + 32);
  id v18 = 0;
  id v5 = [v4 executeRequest:v3 error:&v18];
  id v6 = v18;
  if (v6)
  {
    uint64_t v7 = sub_1000083A0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001E7FDC();
    }
  }
  if (v5)
  {
    id v8 = +[NSNotificationCenter defaultCenter];
    uint64_t v16 = *(void *)(a1 + 32);
    v19[0] = NSInsertedObjectsKey;
    uint64_t v17 = v2;
    id v9 = +[NSSet set];
    v20[0] = v9;
    v19[1] = NSUpdatedObjectsKey;
    uint64_t v10 = +[NSSet set];
    v20[1] = v10;
    v19[2] = NSDeletedObjectIDsKey;
    unint64_t v11 = [v5 result];
    uint64_t v12 = +[NSSet setWithArray:v11];
    v20[2] = v12;
    id v13 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:3];
    [v8 postNotificationName:NSManagedObjectContextDidSaveNotification object:v16 userInfo:v13];

    uint64_t v2 = v17;
  }
  id v14 = objc_retainBlock(*(id *)(a1 + 48));
  id v15 = v14;
  if (v14) {
    (*((void (**)(id, BOOL, id))v14 + 2))(v14, v5 != 0, v6);
  }
}

void sub_100055034(uint64_t a1)
{
  uint64_t v2 = +[BULogUtilities shared];
  unsigned int v3 = [v2 verboseLoggingEnabled];

  if (v3)
  {
    uint64_t v4 = sub_10000CD80();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = [*(id *)(a1 + 32) zoneName];
      uint64_t v6 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412546;
      id v20 = v5;
      __int16 v21 = 2112;
      uint64_t v22 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudChangeTokenController - #recordChange zone: %@ storing server change token: %@\\\"\"", buf, 0x16u);
    }
  }
  id v7 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BCServerChangeToken"];
  [v7 setReturnsObjectsAsFaults:0];
  id v8 = *(void **)(a1 + 48);
  id v18 = 0;
  id v9 = [v8 executeFetchRequest:v7 error:&v18];
  id v10 = v18;
  if ([v9 count]) {
    [v9 objectAtIndexedSubscript:0];
  }
  else {
  unint64_t v11 = +[NSEntityDescription insertNewObjectForEntityForName:@"BCServerChangeToken" inManagedObjectContext:*(void *)(a1 + 48)];
  }
  [v11 setValue:*(void *)(a1 + 56) forKey:@"serverChangeToken"];

  if ([*(id *)(a1 + 48) hasChanges])
  {
    uint64_t v12 = *(void **)(a1 + 48);
    id v17 = v10;
    [v12 save:&v17];
    id v13 = v17;

    if (v13)
    {
      id v14 = sub_1000083A0();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
        sub_1001E806C();
      }
    }
  }
  else
  {
    id v13 = v10;
  }
  id v15 = objc_retainBlock(*(id *)(a1 + 64));
  uint64_t v16 = v15;
  if (v15) {
    (*((void (**)(id))v15 + 2))(v15);
  }
}

void sub_1000553C4(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BCServerChangeToken"];
  [v2 setReturnsObjectsAsFaults:0];
  unsigned int v3 = *(void **)(a1 + 32);
  id v19 = 0;
  uint64_t v4 = [v3 executeFetchRequest:v2 error:&v19];
  id v5 = v19;
  if (v5)
  {
    uint64_t v6 = sub_1000083A0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001E8174();
    }
  }
  if ([v4 count])
  {
    id v7 = objc_alloc((Class)NSKeyedUnarchiver);
    id v8 = [v4 objectAtIndexedSubscript:0];
    id v9 = [v8 valueForKey:@"serverChangeToken"];
    id v18 = 0;
    id v10 = [v7 initForReadingFromData:v9 error:&v18];
    id v11 = v18;

    if (v11)
    {
      uint64_t v12 = sub_1000083A0();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_1001E80FC((uint64_t)v11, v12);
      }

      id v13 = 0;
    }
    else
    {
      id v13 = [objc_alloc((Class)CKServerChangeToken) initWithCoder:v10];
      [v10 finishDecoding];
    }
  }
  else
  {
    id v13 = 0;
  }
  id v14 = sub_1000083A0();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    id v15 = [*(id *)(a1 + 40) zoneName];
    *(_DWORD *)long long buf = 138412546;
    __int16 v21 = v15;
    __int16 v22 = 2112;
    id v23 = v13;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@", buf, 0x16u);
  }
  id v16 = objc_retainBlock(*(id *)(a1 + 48));
  id v17 = v16;
  if (v16) {
    (*((void (**)(id, id))v16 + 2))(v16, v13);
  }
}

void sub_100055D18(id a1)
{
  qword_100297598 = [[BCCloudAssetManager alloc] initService];
  _objc_release_x1();
}

void sub_100056AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100056B04(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100056B14(uint64_t a1)
{
}

uint64_t sub_100056B1C(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(a1 + 32) currentSaltVersionIdentifier];
  return _objc_release_x1();
}

void sub_100056C48(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100056C5C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "wq_refreshSalt:", *(void *)(a1 + 32));
}

void sub_100056D8C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100056DA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v3 = sub_1000083A0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = [WeakRetained currentSalt];
    int v6 = 138412546;
    id v7 = v4;
    __int16 v8 = 1024;
    unsigned int v9 = [WeakRetained isSaltRefreshInProgress];
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager refreshSaltIfNeeded - currentSalt: %@, isSaltRefreshInProgress: %{BOOL}d", (uint8_t *)&v6, 0x12u);
  }
  id v5 = [WeakRetained currentSalt];
  if (v5)
  {
  }
  else if (([WeakRetained isSaltRefreshInProgress] & 1) == 0)
  {
    objc_msgSend(WeakRetained, "wq_refreshSalt:", *(void *)(a1 + 32));
  }
}

void sub_10005705C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100057080(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  __int16 v8 = WeakRetained;
  if (!WeakRetained)
  {
    id v10 = objc_alloc((Class)NSException);
    id v11 = +[NSString stringWithFormat:@"Nil weak self after fetch salt record"];
    NSErrorUserInfoKey v20 = NSUnderlyingErrorKey;
    uint64_t v12 = v6;
    if (!v6)
    {
      uint64_t v12 = +[NSNull null];
    }
    __int16 v21 = v12;
    id v13 = +[NSDictionary dictionaryWithObjects:&v21 forKeys:&v20 count:1];
    id v14 = [v10 initWithName:@"No Books Salt" reason:v11 userInfo:v13];

    if (!v6) {
    objc_exception_throw(v14);
    }
  }
  unsigned int v9 = [WeakRetained workQueue];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10005736C;
  v15[3] = &unk_100261728;
  v15[4] = v8;
  id v16 = v6;
  id v17 = v5;
  objc_copyWeak(&v19, (id *)(a1 + 40));
  id v18 = *(id *)(a1 + 32);
  dispatch_async(v9, v15);

  objc_destroyWeak(&v19);
}

void sub_10005736C(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsSaltRefreshInProgress:0];
  uint64_t v31 = 0;
  __int16 v32 = &v31;
  uint64_t v33 = 0x3032000000;
  long long v34 = sub_100056B04;
  unsigned __int8 v35 = sub_100056B14;
  id v36 = 0;
  id v2 = (void **)(a1 + 40);
  if (*(void *)(a1 + 40) || (id v11 = *(void **)(a1 + 48)) == 0)
  {
    unsigned int v3 = sub_1000083A0();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_1001E826C((uint64_t *)(a1 + 40), a1, v3);
    }

    memset(bytes, 0, sizeof(bytes));
    if (SecRandomCopyBytes(kSecRandomDefault, 0x80uLL, bytes))
    {
      id v19 = objc_alloc((Class)NSException);
      NSErrorUserInfoKey v20 = +[NSString stringWithFormat:@"Unable to generate random salt"];
      NSErrorUserInfoKey v37 = NSUnderlyingErrorKey;
      __int16 v21 = *v2;
      if (*v2)
      {
        __int16 v22 = *v2;
      }
      else
      {
        __int16 v22 = +[NSNull null];
      }
      id v38 = v22;
      id v23 = +[NSDictionary dictionaryWithObjects:&v38 forKeys:&v37 count:1];
      id v24 = [v19 initWithName:@"No Books Record Salt" reason:v20 userInfo:v23];

      if (!v21) {
      objc_exception_throw(v24);
      }
    }
    id v4 = [objc_alloc((Class)CKRecordID) initWithRecordName:@"recordIDSalt"];
    id v5 = [objc_alloc((Class)CKRecord) initWithRecordType:@"recordIDSalt" recordID:v4];
    id v6 = +[NSData dataWithBytes:bytes length:128];
    id v7 = [v5 encryptedValuesByKey];
    [v7 setObject:v6 forKeyedSubscript:@"saltEncrypted"];

    __int16 v8 = sub_10000CE18();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "BDSSyncEngineSaltManager: Will save record salt", buf, 2u);
    }

    unsigned int v9 = [*(id *)(a1 + 32) database];
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_100057848;
    v25[3] = &unk_100261700;
    objc_copyWeak(&v29, (id *)(a1 + 64));
    id v28 = &v31;
    id v10 = v6;
    id v26 = v10;
    id v27 = *(id *)(a1 + 56);
    [v9 saveRecord:v5 completionHandler:v25];

    objc_destroyWeak(&v29);
  }
  else
  {
    uint64_t v12 = [v11 encryptedValuesByKey];
    id v13 = [v12 objectForKeyedSubscript:@"saltEncrypted"];

    if (!v13)
    {
      id v13 = [*(id *)(a1 + 48) objectForKeyedSubscript:@"salt"];
    }
    [*(id *)(a1 + 32) setCurrentSalt:v13];
    uint64_t v14 = [*(id *)(a1 + 48) recordChangeTag];
    id v15 = (void *)v32[5];
    v32[5] = v14;

    [*(id *)(a1 + 32) setCurrentSaltVersionIdentifier:v32[5]];
    id v16 = sub_10000CE18();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = v32[5];
      LODWORD(bytes[0]) = 138412546;
      *(void *)((char *)bytes + 4) = v13;
      WORD6(bytes[0]) = 2112;
      *(void *)((char *)bytes + 14) = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion", (uint8_t *)bytes, 0x16u);
    }

    id v18 = [*(id *)(a1 + 32) observer];
    [v18 saltManager:*(void *)(a1 + 32) updatedSaltWithVersion:v32[5]];
  }
  _Block_object_dispose(&v31, 8);
}

void sub_1000577FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100057848(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!WeakRetained)
  {
    id v36 = objc_alloc((Class)NSException);
    NSErrorUserInfoKey v37 = +[NSString stringWithFormat:@"Nil weak self after save record"];
    NSErrorUserInfoKey v41 = NSUnderlyingErrorKey;
    id v38 = v6;
    if (!v6)
    {
      id v38 = +[NSNull null];
    }
    id v42 = v38;
    id v39 = +[NSDictionary dictionaryWithObjects:&v42 forKeys:&v41 count:1];
    id v40 = [v36 initWithName:@"No Books Record Salt" reason:v37 userInfo:v39];

    if (!v6) {
    objc_exception_throw(v40);
    }
  }
  __int16 v8 = WeakRetained;
  unsigned int v9 = sub_10000CE18();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "BDSSyncEngineSaltManager: Saving record salt....", buf, 2u);
  }

  id v10 = [v6 domain];
  if ([v10 isEqualToString:CKErrorDomain])
  {
    id v11 = [v6 code];

    if (v11 == (id)14)
    {
      uint64_t v12 = [v6 userInfo];
      id v13 = [v12 objectForKeyedSubscript:CKRecordChangedErrorServerRecordKey];

      uint64_t v14 = [v13 encryptedValuesByKey];
      id v15 = [v14 objectForKeyedSubscript:@"saltEncrypted"];

      if (v13)
      {
        id v16 = sub_10000CE18();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v17 = [v13 recordChangeTag];
          *(_DWORD *)long long buf = 138412802;
          id v44 = v15;
          __int16 v45 = 2112;
          id v46 = v17;
          __int16 v47 = 2112;
          id v48 = v6;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)", buf, 0x20u);
        }
        [v8 setCurrentSalt:v15];
        uint64_t v18 = [v13 recordChangeTag];
        uint64_t v19 = *(void *)(*(void *)(a1 + 48) + 8);
        NSErrorUserInfoKey v20 = *(void **)(v19 + 40);
        *(void *)(v19 + 40) = v18;

        [v8 setCurrentSaltVersionIdentifier:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
        id v6 = 0;
      }

LABEL_15:
      goto LABEL_19;
    }
  }
  else
  {
  }
  __int16 v21 = sub_10000CE18();
  id v13 = v21;
  if (v6)
  {
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_1001E8364();
    }
    goto LABEL_15;
  }
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v22 = *(void **)(a1 + 32);
    id v23 = [v5 recordChangeTag];
    *(_DWORD *)long long buf = 138412546;
    id v44 = v22;
    __int16 v45 = 2112;
    id v46 = v23;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)", buf, 0x16u);
  }
  id v24 = [v5 encryptedValuesByKey];
  id v25 = [v24 objectForKeyedSubscript:@"saltEncrypted"];
  [v8 setCurrentSalt:v25];

  uint64_t v26 = [v5 recordChangeTag];
  uint64_t v27 = *(void *)(*(void *)(a1 + 48) + 8);
  id v28 = *(void **)(v27 + 40);
  *(void *)(v27 + 40) = v26;

  [v8 setCurrentSaltVersionIdentifier:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  id v6 = 0;
LABEL_19:
  id v29 = [v8 currentSalt];

  BOOL v30 = sub_10000CE18();
  uint64_t v31 = v30;
  if (v6 || !v29)
  {
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR)) {
      sub_1001E82FC();
    }

    id v35 = objc_retainBlock(*(id *)(a1 + 40));
    long long v34 = v35;
    if (v35) {
      (*((void (**)(id, id))v35 + 2))(v35, v6);
    }
  }
  else
  {
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v32 = [v8 currentSalt];
      uint64_t v33 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      *(_DWORD *)long long buf = 138412546;
      id v44 = v32;
      __int16 v45 = 2112;
      id v46 = v33;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: *** Got record salt:(%@) changeTag:(%@)", buf, 0x16u);
    }
    long long v34 = [v8 observer];
    [v34 saltManager:v8 updatedSaltWithVersion:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  }
}

void sub_100057E10(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100057E24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "wq_invalidateSalt");
}

void sub_100057FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100057FC0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) currentSalt];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v2 != 0;
}

void sub_100058164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005817C(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  if (*(void *)(a1 + 32))
  {
    unsigned int v3 = objc_msgSend(*(id *)(a1 + 40), "_wq_saltedAndHashedIDFromLocalID:");
    if (v3)
    {
      CFStringRef v4 = *(const __CFString **)(a1 + 48);
      if (!v4) {
        CFStringRef v4 = @"-";
      }
      id v5 = +[NSString stringWithFormat:@"%@.%@", v4, v3];
    }
    else
    {
      id v5 = 0;
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v5);
    if (v3) {
  }
    }
  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    id v6 = sub_1000083A0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001E83CC(v2, v6, v7, v8, v9, v10, v11, v12);
    }
  }
}

void sub_100058E98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

void sub_10005900C(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_100059788(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(id, void *, id))v7 + 2))(v7, v6, v9);
  }
}

void sub_100059A4C(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v7)
  {
    id v8 = [v6 value];
    v7[2](v7, v8, v9);
  }
}

void sub_100059BB0(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  id v6 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v6)
  {
    id v7 = [v8 value];
    v6[2](v6, v7, v5);
  }
}

void sub_100059D30(uint64_t a1, void *a2)
{
  unsigned int v3 = a2;
  if (v3)
  {
    CFStringRef v4 = v3;
    [(BCMutableSecureUserDatum *)v3 setValue:*(void *)(a1 + 40)];
  }
  else
  {
    CFStringRef v4 = [[BCMutableSecureUserDatum alloc] initWithKey:*(void *)(a1 + 32)];
    [(BCMutableSecureUserDatum *)v4 setValue:*(void *)(a1 + 40)];
    [(BCMutableCloudData *)v4 setModificationDate:0];
  }
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100059E10;
  v6[3] = &unk_100261838;
  id v5 = *(void **)(a1 + 48);
  id v7 = *(id *)(a1 + 56);
  [v5 setUserDatum:v4 completion:v6];
}

void sub_100059E10(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, id))v5 + 2))(v5, v7);
  }
}

void sub_10005A704(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  id v7 = +[BULogUtilities shared];
  unsigned int v8 = [v7 verboseLoggingEnabled];

  if (v8)
  {
    id v9 = sub_10000CD80();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v10 = @"NO";
      if (a2) {
        CFStringRef v10 = @"YES";
      }
      int v13 = 138412290;
      CFStringRef v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "\"\\\"#zonefetch BCCloudAssetDetailManager resolveConflictsForRecords completion success:%@\\\"\"", (uint8_t *)&v13, 0xCu);
    }
  }
  id v11 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v12 = v11;
  if (v11) {
    (*((void (**)(id, uint64_t, id))v11 + 2))(v11, a2, v6);
  }
}

void sub_10005A930(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_10005B2D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_class();
  id v7 = BUDynamicCast();

  unsigned int v8 = sub_1000083A0();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v12 = 138412546;
    uint64_t v13 = v9;
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Completed fetch of assetDetailForAssetID on assetID:%@ with error:%@", (uint8_t *)&v12, 0x16u);
  }

  id v10 = objc_retainBlock(*(id *)(a1 + 40));
  id v11 = v10;
  if (v10) {
    (*((void (**)(id, void *, id))v10 + 2))(v10, v7, v5);
  }
}

void sub_10005B5C4(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  unsigned int v8 = v7;
  if (v7) {
    (*((void (**)(id, void *, id))v7 + 2))(v7, v6, v9);
  }
}

void sub_10005B7C4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v9 = a2;
  id v6 = a4;
  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  unsigned int v8 = v7;
  if (v7) {
    (*((void (**)(id, id, id))v7 + 2))(v7, v9, v6);
  }
}

id sub_10005B9F8(id a1, BCCloudData *a2)
{
  uint64_t v2 = a2;
  objc_opt_class();
  unsigned int v3 = BUDynamicCast();

  if (v3)
  {
    CFStringRef v4 = [v3 assetID];
    v8[0] = v4;
    id v5 = [v3 dateFinished];
    v8[1] = v5;
    id v6 = +[NSArray arrayWithObjects:v8 count:2];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

void sub_10005BAEC(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v19 = a3;
  id v5 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [v4 count]);
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id obj = v4;
  id v6 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v22;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v22 != v8) {
          objc_enumerationMutation(obj);
        }
        id v10 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        objc_opt_class();
        id v11 = [v10 objectAtIndexedSubscript:0];
        int v12 = BUDynamicCast();

        objc_opt_class();
        uint64_t v13 = [v10 objectAtIndexedSubscript:1];
        __int16 v14 = BUDynamicCast();

        if (v12) {
          BOOL v15 = v14 == 0;
        }
        else {
          BOOL v15 = 1;
        }
        if (!v15) {
          [v5 setObject:v14 forKeyedSubscript:v12];
        }
      }
      id v7 = [obj countByEnumeratingWithState:&v21 objects:v25 count:16];
    }
    while (v7);
  }

  id v16 = (void (**)(id, id, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v16)
  {
    id v17 = [v5 copy];
    v16[2](v16, v17, v19);
  }
}

uint64_t sub_10005BEA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = BUDynamicCast();

  id v5 = *(void **)(a1 + 32);
  id v6 = [v4 dateFinished];
  id v7 = [v5 component:4 fromDate:v6];

  uint64_t v8 = +[NSNumber numberWithInteger:v7];
  id v9 = +[NSString stringWithFormat:@"%@", v8];

  id v10 = [*(id *)(a1 + 40) objectForKeyedSubscript:v9];
  id v11 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (char *)[v10 integerValue] + 1);
  [*(id *)(a1 + 40) setObject:v11 forKeyedSubscript:v9];

  return 0;
}

void sub_10005BFC4(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  id v4 = (void (**)(id, id, id))objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) copy];
    v4[2](v4, v5, v6);
  }
}

id sub_10005C850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (id)(*(uint64_t (**)(uint64_t, uint64_t, void, void))(a3 + 16))(a3, a2, *(void *)(a1 + 32), 0);
}

void sub_10005D97C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

id sub_10005DC04(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "q_load");
}

void sub_10005DD7C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10005DE2C;
  v4[3] = &unk_1002619E8;
  id v6 = *(id *)(a1 + 56);
  id v5 = *(id *)(a1 + 48);
  objc_msgSend(v2, "q_enqueueNotificationName:withCompletion:", v3, v4);
}

id sub_10005DE2C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_retainBlock(*(id *)(a1 + 40));
  id v5 = v4;
  if (v4) {
    (*((void (**)(id, uint64_t))v4 + 2))(v4, a2);
  }

  id v6 = *(void **)(a1 + 32);
  return [v6 endTransaction];
}

int64_t sub_10005DE94(id a1, BDSServiceNotificationInfo *a2, BDSServiceNotificationInfo *a3)
{
  id v4 = a3;
  int64_t v5 = [(BDSServiceNotificationInfo *)a2 changeToken];
  int64_t v6 = [(BDSServiceNotificationInfo *)v4 changeToken];

  return v5 <= v6;
}

void sub_10005EB48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

void sub_10005ECBC(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_10005F398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F3C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10005F3D0(uint64_t a1)
{
}

void sub_10005F3D8(uint64_t a1)
{
  uint64_t v2 = +[BDSBookWidgetInfoMO fetchRequest];
  uint64_t v3 = [*(id *)(a1 + 32) allKeys];
  id v4 = +[NSPredicate predicateWithFormat:@"assetID IN %@ and readingNowDetail == nil", v3];
  [v2 setPredicate:v4];

  id v23 = 0;
  id v5 = [v2 execute:&v23];
  id v6 = v23;
  id v7 = v6;
  if (v5)
  {
    id v18 = v6;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v8 = v5;
    id v9 = [v8 countByEnumeratingWithState:&v19 objects:v26 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v20;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(void *)v20 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v19 + 1) + 8 * i);
          __int16 v14 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
          BOOL v15 = [v13 assetID];
          [v14 setObject:v13 forKeyedSubscript:v15];
        }
        id v10 = [v8 countByEnumeratingWithState:&v19 objects:v26 count:16];
      }
      while (v10);
    }

    id v16 = sub_1000083A0();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = [v8 count];
      *(_DWORD *)long long buf = 134217984;
      id v25 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Found %lu WidgetInfos with missing relationships while setting ReadingNowDetails", buf, 0xCu);
    }
    id v7 = v18;
  }
  else
  {
    id v16 = sub_1000083A0();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_1001E8B88((uint64_t)v7, v16);
    }
  }
}

uint64_t sub_10005F61C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  objc_opt_class();
  id v5 = BUDynamicCast();

  id v6 = [v5 assetID];
  if (v6)
  {
    id v7 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) objectForKeyedSubscript:v6];
    [v7 setReadingNowDetail:v5];
    if (v7)
    {
      id v8 = sub_1000083A0();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Updated WidgetInfo relationship while creating ReadingNowDetail.", v10, 2u);
      }
    }
  }

  return 0;
}

uint64_t sub_10005FC98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005FCA8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  if (a2) {
    +[NSSet setWithArray:a2];
  }
  else {
  id v9 = +[NSSet set];
  }
  (*(void (**)(uint64_t))(v6 + 16))(v6);
}

BOOL sub_10005FF50(id a1, BCCloudData *a2)
{
  return 1;
}

void sub_100060058(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id v8 = [v6 count];
  id v9 = sub_1000083A0();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    v13[0] = 67109634;
    v13[1] = v8 != 0;
    __int16 v14 = 2112;
    uint64_t v15 = v10;
    __int16 v16 = 2112;
    id v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "needsReadingNowAssetTypePopulation:(%{BOOL}d) predicate %@ results %@", (uint8_t *)v13, 0x1Cu);
  }

  id v11 = objc_retainBlock(*(id *)(a1 + 40));
  int v12 = v11;
  if (v11) {
    (*((void (**)(id, BOOL, id))v11 + 2))(v11, v8 != 0, v7);
  }
}

id sub_1000626A0(uint64_t a1)
{
  uint64_t v2 = sub_1000063E8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Registering event handlers", v4, 2u);
  }

  return [*(id *)(a1 + 32) _registerNotificationEventHandler];
}

void sub_1000627AC(id a1, OS_xpc_object *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = v2;
  if (v2 && xpc_get_type(v2) == (xpc_type_t)&_xpc_type_dictionary)
  {
    string = xpc_dictionary_get_string(v3, _xpc_event_key_name);
    id v6 = sub_1000063E8();
    id v4 = v6;
    if (string)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        id v7 = +[NSString stringWithUTF8String:string];
        int v9 = 138412290;
        uint64_t v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Posting notification: %@", (uint8_t *)&v9, 0xCu);
      }
      id v4 = +[NSNotificationCenter defaultCenter];
      id v8 = +[NSString stringWithUTF8String:string];
      [v4 postNotificationName:v8 object:0];
    }
    else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      sub_1001E8FD4(v4);
    }
  }
  else
  {
    id v4 = sub_1000063E8();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001E8F90(v4);
    }
  }
}

void sub_100063648(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

void sub_1000637BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_100064018(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(id, void *, id))v7 + 2))(v7, v6, v9);
  }
}

void sub_10006510C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10000D068();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Need to create these details:%@", (uint8_t *)&v7, 0xCu);
  }

  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, void, void))v5 + 2))(v5, 0, 0);
  }
}

void sub_100065284(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10000D068();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138412290;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Got existing:%@", buf, 0xCu);
  }

  id v5 = [*(id *)(a1 + 32) readingNowDetailManager];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000653B8;
  v6[3] = &unk_1002618B0;
  id v7 = *(id *)(a1 + 40);
  [v5 getRecentBooksExcludingAssetIDs:v3 completion:v6];
}

void sub_1000653B8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = sub_10000D068();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 138412290;
    id v14 = v7;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Need to create these details:%@", (uint8_t *)&v13, 0xCu);
  }

  id v11 = objc_retainBlock(*(id *)(a1 + 32));
  int v12 = v11;
  if (v11) {
    (*((void (**)(id, id, id, id))v11 + 2))(v11, v7, v8, v9);
  }
}

void sub_10006557C(uint64_t a1)
{
  uint64_t v2 = +[BDSBookWidgetInfoMO fetchRequest];
  [v2 setResultType:2];
  CFStringRef v14 = @"assetID";
  id v3 = +[NSArray arrayWithObjects:&v14 count:1];
  [v2 setPropertiesToFetch:v3];

  id v4 = [*(id *)(a1 + 32) context];
  id v13 = 0;
  id v5 = [v4 executeFetchRequest:v2 error:&v13];
  id v6 = v13;

  if (v5)
  {
    id v7 = [v5 valueForKey:@"assetID"];
    id v8 = +[NSSet setWithArray:v7];

    id v9 = objc_retainBlock(*(id *)(a1 + 40));
    uint64_t v10 = v9;
    if (v9) {
      (*((void (**)(id, void *))v9 + 2))(v9, v8);
    }
  }
  else
  {
    id v11 = sub_10000D068();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1001E9240();
    }

    id v12 = objc_retainBlock(*(id *)(a1 + 40));
    id v8 = v12;
    if (v12) {
      (*((void (**)(id, void))v12 + 2))(v12, 0);
    }
  }
}

void sub_1000657F0(uint64_t a1)
{
  uint64_t v2 = +[BDSBookWidgetInfoMO fetchRequest];
  id v3 = +[NSSortDescriptor sortDescriptorWithKey:@"readingNowDetail.lastEngagedDate" ascending:0];
  v31[0] = v3;
  id v4 = +[NSSortDescriptor sortDescriptorWithKey:@"title" ascending:1];
  v31[1] = v4;
  id v5 = +[NSArray arrayWithObjects:v31 count:2];
  [v2 setSortDescriptors:v5];

  [v2 setFetchLimit:*(void *)(a1 + 48)];
  id v6 = [*(id *)(a1 + 32) context];
  id v27 = 0;
  id v7 = [v6 executeFetchRequest:v2 error:&v27];
  id v8 = v27;

  id v9 = objc_alloc_init((Class)NSMutableArray);
  if (v7)
  {
    long long v25 = 0u;
    long long v26 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    id v10 = v7;
    id v11 = [v10 countByEnumeratingWithState:&v23 objects:v30 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v24;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v24 != v13) {
            objc_enumerationMutation(v10);
          }
          uint64_t v15 = objc_msgSend(*(id *)(*((void *)&v23 + 1) + 8 * i), "getBookWidgetInfoObject", (void)v23);
          [v9 addObject:v15];
        }
        id v12 = [v10 countByEnumeratingWithState:&v23 objects:v30 count:16];
      }
      while (v12);
    }

    __int16 v16 = sub_10000D068();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = [v10 count];
      *(_DWORD *)long long buf = 134217984;
      id v29 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "WidgetInfoManager getInfosWithLimit success with %lu items", buf, 0xCu);
    }

    id v18 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    long long v19 = v18;
    if (v18)
    {
      long long v20 = v18[2];
LABEL_17:
      v20();
    }
  }
  else
  {
    long long v21 = sub_10000D068();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_1001E92A8();
    }

    long long v22 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    long long v19 = v22;
    if (v22)
    {
      long long v20 = v22[2];
      goto LABEL_17;
    }
  }
}

void sub_100065BA8(uint64_t a1)
{
  uint64_t v2 = +[BDSBookWidgetInfoMO fetchRequest];
  id v3 = +[NSPredicate predicateWithFormat:@"%K == %@", @"cloudAssetType", *(void *)(a1 + 32)];
  [v2 setPredicate:v3];

  CFStringRef v15 = @"assetID";
  id v4 = +[NSArray arrayWithObjects:&v15 count:1];
  [v2 setPropertiesToFetch:v4];

  id v5 = [*(id *)(a1 + 40) context];
  id v14 = 0;
  id v6 = [v5 executeFetchRequest:v2 error:&v14];
  id v7 = v14;

  if (v6)
  {
    id v8 = [v6 valueForKey:@"assetID"];
    id v9 = +[NSSet setWithArray:v8];

    id v10 = objc_retainBlock(*(id *)(a1 + 48));
    id v11 = v10;
    if (v10) {
      (*((void (**)(id, void *))v10 + 2))(v10, v9);
    }
  }
  else
  {
    id v12 = sub_10000D068();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1001E9310();
    }

    id v13 = objc_retainBlock(*(id *)(a1 + 48));
    id v9 = v13;
    if (v13) {
      (*((void (**)(id, void))v13 + 2))(v13, 0);
    }
  }
}

void sub_100065EF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10000D068();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    sub_1001E937C();
  }

  [*(id *)(a1 + 32) setBookWidgetInfoOnly:v3 completion:*(void *)(a1 + 40)];
}

void sub_100066110(uint64_t a1)
{
  id v42 = [*(id *)(a1 + 32) valueForKey:@"assetID"];
  uint64_t v1 = +[NSPredicate predicateWithFormat:@"%K IN %@", @"assetID", v42];
  id v2 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BCReadingNowDetail"];
  NSErrorUserInfoKey v41 = (void *)v1;
  [v2 setPredicate:v1];
  CFStringRef v64 = @"assetID";
  id v3 = +[NSArray arrayWithObjects:&v64 count:1];
  [v2 setPropertiesToFetch:v3];

  id v57 = 0;
  id v40 = v2;
  id v4 = [v2 execute:&v57];
  id v43 = v57;
  id v5 = sub_10000D068();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_1001E94C0();
  }

  id v6 = +[NSMutableDictionary dictionary];
  if ([v4 count])
  {
    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    id v7 = v4;
    id v8 = [v7 countByEnumeratingWithState:&v53 objects:v63 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v54;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v54 != v10) {
            objc_enumerationMutation(v7);
          }
          id v12 = *(void **)(*((void *)&v53 + 1) + 8 * i);
          id v13 = [v12 assetID];
          [v6 setObject:v12 forKeyedSubscript:v13];
        }
        id v9 = [v7 countByEnumeratingWithState:&v53 objects:v63 count:16];
      }
      while (v9);
    }
  }
  else
  {
    if (v4) {
      goto LABEL_16;
    }
    id v7 = sub_10000D068();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001E9458();
    }
  }

LABEL_16:
  id v39 = v4;
  id v14 = [*(id *)(a1 + 40) ubiquityManager];
  unsigned int v15 = [v14 isEnabled];

  long long v51 = 0u;
  long long v52 = 0u;
  long long v49 = 0u;
  long long v50 = 0u;
  id obj = *(id *)(a1 + 32);
  id v16 = [obj countByEnumeratingWithState:&v49 objects:v62 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v50;
    do
    {
      for (j = 0; j != v17; j = (char *)j + 1)
      {
        if (*(void *)v50 != v18) {
          objc_enumerationMutation(obj);
        }
        long long v20 = *(void **)(*((void *)&v49 + 1) + 8 * (void)j);
        long long v21 = [v20 cloudAssetType];
        unsigned int v22 = [v21 isEqualToString:@"SideloadedUbiquity"];

        if ((v22 ^ 1 | v15))
        {
          long long v23 = [v20 insertMatchingManagedObjectIntoContext:*(void *)(a1 + 48)];
          long long v24 = [v20 assetID];
          long long v25 = [v6 objectForKeyedSubscript:v24];
          [v23 setReadingNowDetail:v25];

          long long v26 = [v23 readingNowDetail];

          id v27 = sub_10000D068();
          id v28 = v27;
          if (v26)
          {
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
            {
              id v44 = [v23 assetID];
              __int16 v45 = [v6 objectForKeyedSubscript:v24];
              uint64_t v29 = [v45 identifier];
              *(_DWORD *)long long buf = 138412546;
              id v59 = v44;
              __int16 v60 = 2112;
              uint64_t v61 = v29;
              BOOL v30 = (void *)v29;
              _os_log_debug_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "BDSBookWidgetInfoMO %@ linked to %@", buf, 0x16u);
            }
          }
          else if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
          {
            uint64_t v31 = [v23 assetID];
            *(_DWORD *)long long buf = 138412290;
            id v59 = v31;
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "BDSBookWidgetInfoMO %@ has NO readingNowDetail", buf, 0xCu);
          }
        }
        else
        {
          long long v23 = sub_10000D068();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138412290;
            id v59 = v20;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Ignoring donated info since Ubiquity is turned off: %@", buf, 0xCu);
          }
        }
      }
      id v17 = [obj countByEnumeratingWithState:&v49 objects:v62 count:16];
    }
    while (v17);
  }

  __int16 v32 = *(void **)(a1 + 48);
  id v48 = v43;
  unsigned int v33 = [v32 save:&v48];
  id v34 = v48;

  if (v33)
  {

    id v35 = sub_10000D068();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      id v36 = [*(id *)(a1 + 32) count];
      *(_DWORD *)long long buf = 134217984;
      id v59 = v36;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "Creation/Update of %lu WidgetInfos succeeded.", buf, 0xCu);
    }
    id v34 = 0;
  }
  else
  {
    id v35 = sub_10000D068();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
      sub_1001E93F0();
    }
  }

  id v37 = objc_retainBlock(*(id *)(a1 + 56));
  id v38 = v37;
  if (v37) {
    (*((void (**)(id, id))v37 + 2))(v37, v34);
  }
}

void sub_100066CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

uint64_t sub_100066D14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100066D24(uint64_t a1)
{
}

void sub_100066D2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addEntriesFromDictionary:a2];
  }
  else
  {
    id v6 = sub_10000D068();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001E9534(a1, (uint64_t)v5, v6);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100066DB8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addEntriesFromDictionary:a2];
  }
  else
  {
    id v6 = sub_10000D068();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001E9608();
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100066E44(uint64_t a1)
{
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v20 objects:v24 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v21;
    CFStringRef v19 = @"StoreAudiobook";
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v21 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        id v8 = objc_msgSend(v7, "assetID", v19);
        if (v8)
        {
          id v9 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) objectForKeyedSubscript:v8];
          uint64_t v10 = v9;
          if (v9)
          {
            id v11 = [v9 name];
            [v7 setTitle:v11];

            id v12 = [v10 artworkURL];
            [v7 setCoverURL:v12];

            objc_msgSend(v7, "setIsExplicit:", objc_msgSend(v10, "isExplicit"));
            if ([v10 isBook])
            {
              id v13 = [v10 pageProgressionDirection];
              if (v13)
              {
                id v14 = [v10 pageProgressionDirection];
                [v7 setPageProgressionDirection:v14];
              }
              else
              {
                [v7 setPageProgressionDirection:@"ltr"];
              }
            }
            unsigned int v15 = [v7 cloudAssetType];

            if (!v15)
            {
              if ([v10 isBook]) {
                CFStringRef v16 = @"StoreEbook";
              }
              else {
                CFStringRef v16 = v19;
              }
              [v7 setCloudAssetType:v16];
            }
          }
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v20 objects:v24 count:16];
    }
    while (v4);
  }

  id v17 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v18 = v17;
  if (v17) {
    (*((void (**)(id, void))v17 + 2))(v17, *(void *)(a1 + 32));
  }
}

void sub_1000671B4(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BDSBookWidgetInfoMO"];
  id v3 = +[NSPredicate predicateWithFormat:@"%K IN %@", @"assetID", *(void *)(a1 + 32)];
  [v2 setPredicate:v3];

  id v4 = *(void **)(a1 + 40);
  id v25 = 0;
  CFStringRef v19 = v2;
  uint64_t v5 = [v4 executeFetchRequest:v2 error:&v25];
  id v18 = v25;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v6 = v5;
  id v7 = [v6 countByEnumeratingWithState:&v21 objects:v28 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v22;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v21 + 1) + 8 * i);
        id v12 = sub_10000D068();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v27 = v11;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Removing BDSBookWidgetInfoMO: %@", buf, 0xCu);
        }

        [*(id *)(a1 + 40) deleteObject:v11];
      }
      id v8 = [v6 countByEnumeratingWithState:&v21 objects:v28 count:16];
    }
    while (v8);
  }

  id v13 = *(void **)(a1 + 40);
  id v20 = 0;
  [v13 save:&v20];
  id v14 = v20;
  if (v14)
  {
    unsigned int v15 = sub_10000D068();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_1001E9674();
    }
  }
  id v16 = objc_retainBlock(*(id *)(a1 + 48));
  id v17 = v16;
  if (v16) {
    (*((void (**)(id, id))v16 + 2))(v16, v14);
  }
}

void sub_100067510(id *a1, void *a2)
{
  id v3 = [a2 mutableCopy];
  id v4 = [a1[4] allAssetIDs];
  uint64_t v5 = +[NSSet setWithArray:v4];

  [v3 minusSet:v5];
  if ([v3 count])
  {
    id v6 = a1[5];
    id v7 = [v3 allObjects];
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = nullsub_12;
    v23[3] = &unk_10025F748;
    id v24 = a1[6];
    [v6 removeBookWidgetInfosForAssetIDs:v7 completion:v23];
  }
  if ([v5 count])
  {
    id v8 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v5, "count"));
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v9 = v5;
    id v10 = [v9 countByEnumeratingWithState:&v19 objects:v25 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v20;
      do
      {
        id v13 = 0;
        do
        {
          if (*(void *)v20 != v12) {
            objc_enumerationMutation(v9);
          }
          id v14 = [a1[4] ubiquityMetadataForAssetID:*(void *)(*((void *)&v19 + 1) + 8 * (void)v13)];
          unsigned int v15 = [a1[5] _bookWidgetInfoFromUbiquityMetadata:v14];
          [v8 addObject:v15];

          id v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        id v11 = [v9 countByEnumeratingWithState:&v19 objects:v25 count:16];
      }
      while (v11);
    }

    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = nullsub_13;
    v17[3] = &unk_10025F748;
    id v16 = a1[5];
    id v18 = a1[6];
    [v16 setBookWidgetInfoOnly:v8 completion:v17];
  }
}

id sub_1000678F4(uint64_t a1)
{
  return [*(id *)(a1 + 32) endTransaction];
}

id sub_100067A2C(uint64_t a1)
{
  return [*(id *)(a1 + 32) endTransaction];
}

id sub_100067B4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) endTransaction];
}

CFStringRef sub_100068B30(void *a1)
{
  id v1 = a1;
  if ([@"pdf" caseInsensitiveCompare:v1])
  {
    if ([@"epub" caseInsensitiveCompare:v1]
      && [@"ibooks" caseInsensitiveCompare:v1])
    {
      if ([@"m4a" caseInsensitiveCompare:v1]
        && [@"m4b" caseInsensitiveCompare:v1]
        && [@"m4p" caseInsensitiveCompare:v1]
        && [@"aa" caseInsensitiveCompare:v1]
        && [@"aax" caseInsensitiveCompare:v1]
        && [@"mp3" caseInsensitiveCompare:v1]
        && [@"mp4" caseInsensitiveCompare:v1]
        && [@"aac" caseInsensitiveCompare:v1]
        && [@"adts" caseInsensitiveCompare:v1]
        && [@"ac3" caseInsensitiveCompare:v1]
        && [@"aif" caseInsensitiveCompare:v1]
        && [@"aiff" caseInsensitiveCompare:v1]
        && [@"aifc" caseInsensitiveCompare:v1]
        && [@"caf" caseInsensitiveCompare:v1]
        && [@"snd" caseInsensitiveCompare:v1]
        && [@"au" caseInsensitiveCompare:v1]
        && [@"sd2" caseInsensitiveCompare:v1]
        && [@"wav" caseInsensitiveCompare:v1])
      {
        CFStringRef v2 = @"LibraryContentAssetTypeUnknown";
      }
      else
      {
        CFStringRef v2 = @"AssetTypeAudiobook";
      }
    }
    else
    {
      CFStringRef v2 = @"AssetTypeEbook";
    }
  }
  else
  {
    CFStringRef v2 = @"AssetTypePDF";
  }

  return v2;
}

void sub_100069444(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

void sub_1000695B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_100069E14(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(id, void *, id))v7 + 2))(v7, v6, v9);
  }
}

BOOL sub_10006A508(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 1) {
        break;
      }
      if ((v6 >> 3) == 2)
      {
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v18 = &OBJC_IVAR___BCAnnotationRange__length;
            goto LABEL_37;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            break;
          }
          v12 += 7;
          BOOL v17 = v13++ > 8;
          if (v17)
          {
            uint64_t v14 = 0;
            id v18 = &OBJC_IVAR___BCAnnotationRange__length;
            goto LABEL_40;
          }
        }
        id v18 = &OBJC_IVAR___BCAnnotationRange__length;
LABEL_38:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v14 = 0;
        }
LABEL_40:
        *(void *)(a1 + *v1_Block_object_dispose(&STACK[0x3B0], 8) = v14;
        goto LABEL_41;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_41:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    uint64_t v14 = 0;
    while (1)
    {
      unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
      v14 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0)
      {
        id v18 = &OBJC_IVAR___BCAnnotationRange__location;
        goto LABEL_38;
      }
      v19 += 7;
      BOOL v17 = v20++ > 8;
      if (v17)
      {
        uint64_t v14 = 0;
        id v18 = &OBJC_IVAR___BCAnnotationRange__location;
        goto LABEL_40;
      }
    }
    id v18 = &OBJC_IVAR___BCAnnotationRange__location;
LABEL_37:
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
    goto LABEL_38;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL sub_10006BE24(char *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 24;
        goto LABEL_23;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
        goto LABEL_23;
      case 3u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
LABEL_23:
        uint64_t v14 = *(BCProtoAnnotation **)&a1[v13];
        *(void *)&a1[v13] = v12;
        goto LABEL_27;
      case 4u:
        uint64_t v14 = objc_alloc_init(BCProtoAnnotation);
        [a1 addAnnotation:v14];
        if PBReaderPlaceMark() && (sub_10006D7AC((uint64_t)v14, a2))
        {
          PBReaderRecallMark();
LABEL_27:

LABEL_28:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_28;
    }
  }
}

uint64_t sub_10006D7AC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        uint64_t v11 = OBJC_IVAR___PBDataReader__error;
        int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    uint64_t v11 = OBJC_IVAR___PBDataReader__error;
    int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v12 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        unint64_t v14 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v14 <= 0xFFFFFFFFFFFFFFF7 && v14 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v15 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v14);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v14 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v11) = 1;
          uint64_t v15 = 0;
        }
        uint64_t v74 = 8;
        goto LABEL_160;
      case 2u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 72;
        goto LABEL_109;
      case 3u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(_WORD *)(a1 + 204) |= 0x200u;
        while (2)
        {
          uint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if (v23 < 0)
            {
              v18 += 7;
              BOOL v10 = v19++ >= 9;
              if (v10)
              {
                uint64_t v20 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0;
        }
LABEL_116:
        BOOL v71 = v20 != 0;
        uint64_t v72 = 200;
        goto LABEL_133;
      case 4u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(_WORD *)(a1 + 204) |= 0x400u;
        while (2)
        {
          uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v10 = v25++ >= 9;
              if (v10)
              {
                uint64_t v26 = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v26 = 0;
        }
LABEL_120:
        BOOL v71 = v26 != 0;
        uint64_t v72 = 201;
        goto LABEL_133;
      case 5u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 96;
        goto LABEL_109;
      case 6u:
        unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v15 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v11) = 1;
          uint64_t v15 = 0;
        }
        uint64_t v74 = 24;
        goto LABEL_160;
      case 7u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 104;
        goto LABEL_109;
      case 8u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 160;
        goto LABEL_109;
      case 9u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 168;
        goto LABEL_109;
      case 0xAu:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v33 = 0;
        *(_WORD *)(a1 + 204) |= 0x80u;
        while (2)
        {
          uint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v35 = v34 + 1;
          if (v34 == -1 || v35 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              BOOL v10 = v32++ >= 9;
              if (v10)
              {
                LODWORD(v33) = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v33) = 0;
        }
LABEL_124:
        uint64_t v73 = 184;
        goto LABEL_146;
      case 0xBu:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v33 = 0;
        *(_WORD *)(a1 + 204) |= 0x100u;
        while (2)
        {
          uint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
            v33 |= (unint64_t)(v41 & 0x7F) << v37;
            if (v41 < 0)
            {
              v37 += 7;
              BOOL v10 = v38++ >= 9;
              if (v10)
              {
                LODWORD(v33) = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v33) = 0;
        }
LABEL_128:
        uint64_t v73 = 188;
        goto LABEL_146;
      case 0xCu:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 192;
        goto LABEL_109;
      case 0xDu:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 112;
        goto LABEL_109;
      case 0xEu:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 40;
        goto LABEL_109;
      case 0xFu:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 48;
        goto LABEL_109;
      case 0x10u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 56;
        goto LABEL_109;
      case 0x11u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 64;
        goto LABEL_109;
      case 0x12u:
        *(_WORD *)(a1 + 204) |= 2u;
        unint64_t v42 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v15 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v42);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v42 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v15 = 0;
        }
        uint64_t v74 = 32;
        goto LABEL_160;
      case 0x13u:
        id v43 = objc_alloc_init(BCAnnotationRange);
        objc_storeStrong((id *)(a1 + 176), v43);
        if (PBReaderPlaceMark() && sub_10006A508((uint64_t)v43, a2))
        {
          PBReaderRecallMark();

LABEL_161:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 0x14u:
        *(_WORD *)(a1 + 204) |= 0x40u;
        unint64_t v44 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v44 <= 0xFFFFFFFFFFFFFFFBLL && v44 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v45 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v44);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v45 = 0;
        }
        uint64_t v75 = 156;
        goto LABEL_157;
      case 0x15u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(_WORD *)(a1 + 204) |= 0x800u;
        while (2)
        {
          uint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v10 = v47++ >= 9;
              if (v10)
              {
                uint64_t v48 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v48 = 0;
        }
LABEL_132:
        BOOL v71 = v48 != 0;
        uint64_t v72 = 202;
LABEL_133:
        *(unsigned char *)(a1 + v72) = v71;
        goto LABEL_161;
      case 0x16u:
        *(_WORD *)(a1 + 204) |= 0x20u;
        unint64_t v52 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v52 <= 0xFFFFFFFFFFFFFFFBLL && v52 + 4 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          int v45 = *(_DWORD *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v52);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v52 + 4;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          int v45 = 0;
        }
        uint64_t v75 = 152;
LABEL_157:
        *(_DWORD *)(a1 + v75) = v45;
        goto LABEL_161;
      case 0x17u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 80;
        goto LABEL_109;
      case 0x18u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 88;
        goto LABEL_109;
      case 0x1Au:
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v33 = 0;
        *(_WORD *)(a1 + 204) |= 4u;
        while (2)
        {
          uint64_t v56 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v56);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v57;
            v33 |= (unint64_t)(v58 & 0x7F) << v54;
            if (v58 < 0)
            {
              v54 += 7;
              BOOL v10 = v55++ >= 9;
              if (v10)
              {
                LODWORD(v33) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v33) = 0;
        }
LABEL_137:
        uint64_t v73 = 120;
        goto LABEL_146;
      case 0x1Bu:
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v33 = 0;
        *(_WORD *)(a1 + 204) |= 8u;
        while (2)
        {
          uint64_t v61 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v61);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v62;
            v33 |= (unint64_t)(v63 & 0x7F) << v59;
            if (v63 < 0)
            {
              v59 += 7;
              BOOL v10 = v60++ >= 9;
              if (v10)
              {
                LODWORD(v33) = 0;
                goto LABEL_141;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v33) = 0;
        }
LABEL_141:
        uint64_t v73 = 124;
        goto LABEL_146;
      case 0x1Cu:
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v33 = 0;
        *(_WORD *)(a1 + 204) |= 0x10u;
        while (2)
        {
          uint64_t v66 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v66);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v67;
            v33 |= (unint64_t)(v68 & 0x7F) << v64;
            if (v68 < 0)
            {
              v64 += 7;
              BOOL v10 = v65++ >= 9;
              if (v10)
              {
                LODWORD(v33) = 0;
                goto LABEL_145;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v33) = 0;
        }
LABEL_145:
        uint64_t v73 = 128;
LABEL_146:
        *(_DWORD *)(a1 + v73) = v33;
        goto LABEL_161;
      case 0x1Du:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 136;
        goto LABEL_109;
      case 0x1Eu:
        uint64_t v16 = PBReaderReadData();
        uint64_t v17 = 144;
LABEL_109:
        uint64_t v69 = *(void **)(a1 + v17);
        *(void *)(a1 + v17) = v16;

        goto LABEL_161;
      case 0x1Fu:
        *(_WORD *)(a1 + 204) |= 1u;
        unint64_t v70 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v70 <= 0xFFFFFFFFFFFFFFF7 && v70 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v15 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v70);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v70 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v15 = 0;
        }
        uint64_t v74 = 16;
LABEL_160:
        *(void *)(a1 + v74) = v15;
        goto LABEL_161;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_161;
    }
  }
}

void sub_1000704A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000704C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained fetchLatestCompletion:&stru_100261CA0];
}

void sub_100070510(id a1)
{
  id v1 = sub_10000CEB0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_1001E9C04();
  }
}

void sub_100070554(id a1)
{
  id v1 = sub_10000CEB0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_1001E9C38();
  }
}

void sub_1000706F0(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BCCloudSyncVersions"];
  [v2 setReturnsObjectsAsFaults:0];
  [v2 setFetchLimit:1];
  id v3 = +[NSPredicate predicateWithFormat:@"dataType == %@", @"NBAssetDetailSyncVersions"];
  [v2 setPredicate:v3];

  char v4 = *(void **)(a1 + 32);
  id v28 = 0;
  unsigned int v5 = [v4 executeFetchRequest:v2 error:&v28];
  id v6 = v28;
  if (v6)
  {
    uint64_t v7 = sub_10000CEB0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001E9C6C((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
    }
  }
  unint64_t v14 = [v5 firstObject];
  if (!v14)
  {
    unint64_t v14 = +[NSEntityDescription insertNewObjectForEntityForName:@"BCCloudSyncVersions" inManagedObjectContext:*(void *)(a1 + 32)];
    id v15 = [@"NBAssetDetailSyncVersions" copy];
    [v14 setDataType:v15];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  if ([*(id *)(a1 + 32) hasChanges])
  {
    uint64_t v16 = *(void **)(a1 + 32);
    id v27 = v6;
    [v16 save:&v27];
    id v17 = v27;

    if (v17)
    {
      char v18 = sub_10000CEB0();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_1001E9C6C((uint64_t)v17, v18, v19, v20, v21, v22, v23, v24);
      }
    }
  }
  else
  {
    id v17 = v6;
  }
  id v25 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v26 = v25;
  if (v25) {
    (*((void (**)(id))v25 + 2))(v25);
  }
}

id sub_10007098C(uint64_t a1, void *a2)
{
  return _[a2 configureFromSyncVersions:*(void *)(a1 + 32)];
}

void sub_100070A64(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100070A80(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _fetchLatestDidFinish];

  id v3 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    char v4 = v3;
    v3[2]();
    id v3 = v4;
  }
}

void sub_100070BCC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100070BE0(uint64_t a1)
{
  uint64_t v2 = sub_10000CEB0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BDSNBController fetchLatest", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  char v4 = WeakRetained;
  if (WeakRetained && ([WeakRetained fetching] & 1) == 0)
  {
    [v4 setFetching:1];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    id v7[2] = sub_100070D44;
    v7[3] = &unk_100261D60;
    objc_copyWeak(&v9, (id *)(a1 + 40));
    id v8 = *(id *)(a1 + 32);
    [v4 _fetchCloudSyncVersions:v7 completion:&stru_100261D80];

    objc_destroyWeak(&v9);
  }
  else
  {
    id v5 = objc_retainBlock(*(id *)(a1 + 32));
    id v6 = v5;
    if (v5) {
      (*((void (**)(id))v5 + 2))(v5);
    }
  }
}

void sub_100070D30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100070D44(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    id v6 = [v3 mutableCopy];
    uint64_t v7 = [v5 fetchQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100070E88;
    block[3] = &unk_100260278;
    objc_copyWeak(&v14, (id *)(a1 + 40));
    id v12 = v6;
    id v13 = *(id *)(a1 + 32);
    id v8 = v6;
    dispatch_async(v7, block);

    objc_destroyWeak(&v14);
  }
  else
  {
    id v9 = objc_retainBlock(*(id *)(a1 + 32));
    uint64_t v10 = v9;
    if (v9) {
      (*((void (**)(id))v9 + 2))(v9);
    }
  }
}

void sub_100070E88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_fq_fetchSince:completion:", *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
  else
  {
    id v2 = objc_retainBlock(*(id *)(a1 + 40));
    id v3 = v2;
    if (v2) {
      (*((void (**)(id))v2 + 2))(v2);
    }
  }
}

void sub_10007114C(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  uint64_t v7 = sub_10000CEB0();
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001E9DC4(a1, (uint64_t)v6, v8);
    }
  }
  else if (a2)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
      sub_1001E9CD8(a1, v8);
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    sub_1001E9D54(a1, v8, v9, v10, v11, v12, v13, v14);
  }
}

void sub_100071800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100071824(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, char a6)
{
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v14 = [WeakRetained fetchQueue];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100071978;
  v18[3] = &unk_100261DD0;
  objc_copyWeak(&v23, (id *)(a1 + 40));
  id v19 = v10;
  id v20 = v11;
  id v21 = v12;
  char v24 = a6;
  id v22 = *(id *)(a1 + 32);
  id v15 = v12;
  id v16 = v11;
  id v17 = v10;
  dispatch_async(v14, v18);

  objc_destroyWeak(&v23);
}

void sub_100071978(id *a1)
{
  uint64_t v14 = a1 + 8;
  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  if (WeakRetained)
  {
    id v15 = a1;
    id v2 = sub_10000CEB0();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
      sub_1001E9EE8((uint64_t)a1, v2);
    }

    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    id v3 = a1[4];
    char v4 = (char *)[v3 countByEnumeratingWithState:&v22 objects:v28 count:16];
    if (v4)
    {
      uint64_t v5 = *(void *)v23;
      do
      {
        for (i = 0; i != v4; ++i)
        {
          if (*(void *)v23 != v5) {
            objc_enumerationMutation(v3);
          }
          objc_opt_class();
          uint64_t v7 = BUDynamicCast();
          if ([v7 isAudiobook])
          {
            id v8 = [v7 assetID];
            if (BUIsStoreBookAssetID())
            {
              [WeakRetained _updateBookmarkTimeFromAssetDetail:v7];
            }
            else
            {
              id v10 = sub_10000CEB0();
              if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)long long buf = 138412290;
                id v27 = v8;
                _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BDSNBController skipping non-store audiobook assetID: %@", buf, 0xCu);
              }
            }
          }
          else
          {
            id v8 = sub_10000CEB0();
            if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v9 = [v7 assetID];
              *(_DWORD *)long long buf = 138412290;
              id v27 = v9;
              _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "BDSNBController skipping assetDetail without datePlaybackTimeUpdated for assetID: %@", buf, 0xCu);
            }
          }
        }
        char v4 = (char *)[v3 countByEnumeratingWithState:&v22 objects:v28 count:16];
      }
      while (v4);
    }

    id v11 = v15[6];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_100071CB8;
    v17[3] = &unk_1002614C0;
    objc_copyWeak(&v20, v14);
    char v21 = *((unsigned char *)v15 + 72);
    id v18 = v15[6];
    id v19 = v15[7];
    [WeakRetained _archiveCloudSyncVersions:v11 completion:v17];

    objc_destroyWeak(&v20);
  }
  else
  {
    id v12 = objc_retainBlock(a1[7]);
    uint64_t v13 = v12;
    if (v12) {
      (*((void (**)(id))v12 + 2))(v12);
    }
  }
}

void sub_100071C9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100071CB8(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  char v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = [WeakRetained fetchQueue];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_100071DDC;
    v8[3] = &unk_1002614C0;
    objc_copyWeak(&v11, v2);
    char v12 = *(unsigned char *)(a1 + 56);
    id v9 = *(id *)(a1 + 32);
    id v10 = *(id *)(a1 + 40);
    dispatch_async(v5, v8);

    objc_destroyWeak(&v11);
  }
  else
  {
    id v6 = objc_retainBlock(*(id *)(a1 + 40));
    uint64_t v7 = v6;
    if (v6) {
      (*((void (**)(id))v6 + 2))(v6);
    }
  }
}

void sub_100071DDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    int v3 = *(unsigned __int8 *)(a1 + 56);
    char v4 = sub_10000CEB0();
    uint64_t v5 = v4;
    if (v3)
    {
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "BDSNBController fetching again while updating assetDetails.", v8, 2u);
      }

      objc_msgSend(WeakRetained, "_fq_fetchSince:completion:", *(void *)(a1 + 32), *(void *)(a1 + 40));
      goto LABEL_12;
    }
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1001E9F9C();
    }

    [WeakRetained setFetching:0];
  }
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v7 = v6;
  if (v6) {
    (*((void (**)(id))v6 + 2))(v6);
  }

LABEL_12:
}

uint64_t sub_100071F64()
{
  uint64_t v2 = 0;
  int v3 = &v2;
  uint64_t v4 = 0x2020000000;
  uint64_t v0 = qword_1002975B0;
  uint64_t v5 = qword_1002975B0;
  if (!qword_1002975B0)
  {
    long long v6 = *(_OWORD *)off_100261E18;
    long long v7 = *(_OWORD *)&off_100261E28;
    v3[3] = _sl_dlopen();
    qword_1002975B0 = v3[3];
    uint64_t v0 = v3[3];
  }
  _Block_object_dispose(&v2, 8);
  return v0;
}

void sub_100072074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007208C(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1002975B0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10007211C()
{
  uint64_t v0 = sub_100071F64();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

id sub_100072178()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)qword_1002975B8;
  uint64_t v7 = qword_1002975B8;
  if (!qword_1002975B8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10007225C;
    v3[3] = &unk_100260680;
    void v3[4] = &v4;
    sub_10007225C((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_100072244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10007225C(uint64_t a1)
{
  sub_10007211C();
  Class result = objc_getClass("NMSMediaPinningManager");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1002975B8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_1001E9FD0();
    return (Class)+[BDSNMSMediaPinningManager sharedManager];
  }
  return result;
}

void sub_100072564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10007258C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _bdsService];
}

void sub_1000725B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dieIfUnacknowledgediCloudLogoutOcccurred];
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"BDSTCCAccessChangedNotification" object:0];
}

void sub_1000726EC(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 4);
  id v3 = sub_1000063E8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = objc_loadWeakRetained(a1 + 5);
    int v7 = 138543618;
    id v8 = v4;
    __int16 v9 = 2114;
    id v10 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Connection %{public}@ for %{public}@ was closed.", (uint8_t *)&v7, 0x16u);
  }
  id v5 = objc_loadWeakRetained(a1 + 6);
  uint64_t v6 = [v5 clientConnectionManager];
  [v6 removeClient:WeakRetained reason:@"invalidated"];
}

void sub_1000727F4(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 4);
  id v3 = sub_1000063E8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = objc_loadWeakRetained(a1 + 5);
    int v7 = 138543618;
    id v8 = v4;
    __int16 v9 = 2114;
    id v10 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Connection %{public}@ for %{public}@ was interrupted.", (uint8_t *)&v7, 0x16u);
  }
  id v5 = objc_loadWeakRetained(a1 + 6);
  uint64_t v6 = [v5 clientConnectionManager];
  [v6 removeClient:WeakRetained reason:@"interrupted"];
}

void sub_1000728FC(uint64_t a1)
{
  uint64_t v2 = sub_1000063E8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)int v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Instantiating BDSService.", v7, 2u);
  }

  id v3 = [BDSService alloc];
  id v4 = [*(id *)(a1 + 32) clientConnectionManager];
  id v5 = [(BDSService *)v3 initWithClientConnectionService:v4];
  uint64_t v6 = (void *)qword_1002975C0;
  qword_1002975C0 = (uint64_t)v5;
}

void sub_100072B1C(uint64_t a1)
{
  uint64_t v2 = sub_1000063E8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Deleted local copies of cloud data in response to logout.", v5, 2u);
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id))v3 + 2))(v3);
  }
}

void sub_100072C8C(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_100072D1C;
  v1[3] = &unk_100260DE0;
  id v2 = *(id *)(a1 + 32);
  +[BCCloudCollectionsManager deleteCloudDataWithCompletion:v1];
}

void sub_100072D1C(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_100072DAC;
  v1[3] = &unk_100260DE0;
  id v2 = *(id *)(a1 + 32);
  +[CloudSecureManagerService deleteCloudDataWithCompletion:v1];
}

void sub_100072DAC(uint64_t a1)
{
  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_100072E3C;
  v1[3] = &unk_100260DE0;
  id v2 = *(id *)(a1 + 32);
  +[BCCloudKitController deleteCloudDataWithCompletion:v1];
}

void sub_100072E3C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = sub_1000063E8();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__int16 v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Completed deleting cloud data", v9, 2u);
  }

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(id, uint64_t, id))v7 + 2))(v7, a2, v5);
  }
}

void sub_100074114(id *a1)
{
  id v2 = [a1[4] zoneDataManager];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000741E0;
  v5[3] = &unk_100261EE0;
  id v3 = a1[5];
  id v4 = a1[4];
  id v6 = v3;
  id v7 = v4;
  id v8 = a1[6];
  id v9 = a1[7];
  [v2 dissociateCloudDataFromSyncWithCompletion:v5];
}

void sub_1000741E0(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_10000CE18();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 138412802;
    uint64_t v17 = v7;
    __int16 v18 = 1024;
    int v19 = a2;
    __int16 v20 = 2112;
    id v21 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 4. dissociateCloudDataFromSyncWithCompletion %{BOOL}d error%@", buf, 0x1Cu);
  }

  if (a2)
  {
    id v8 = [*(id *)(a1 + 40) tokenController];
    uint64_t v9 = *(void *)(a1 + 48);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    _DWORD v13[2] = sub_1000743A8;
    v13[3] = &unk_100261EB8;
    id v14 = *(id *)(a1 + 32);
    id v15 = *(id *)(a1 + 56);
    [v8 updateSaltVersionIdentifier:v9 completion:v13];

    id v10 = v14;
  }
  else
  {
    id v11 = sub_10000CE18();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1001EA0DC(a1, (uint64_t)v5, v11);
    }

    id v12 = objc_retainBlock(*(id *)(a1 + 56));
    id v10 = v12;
    if (v12) {
      (*((void (**)(id, void))v12 + 2))(v12, 0);
    }
  }
}

void sub_1000743A8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_10000CE18();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v10 = 138412802;
    uint64_t v11 = v7;
    __int16 v12 = 1024;
    int v13 = a2;
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5a. updateSaltVersionIdentifier  %{BOOL}d error%@", (uint8_t *)&v10, 0x1Cu);
  }

  id v8 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v9 = v8;
  if (v8) {
    (*((void (**)(id, uint64_t))v8 + 2))(v8, a2);
  }
}

void sub_1000744A8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_10000CE18();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 138412802;
    uint64_t v30 = v7;
    __int16 v31 = 1024;
    int v32 = a2;
    __int16 v33 = 2112;
    id v34 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 2. needsUpdate: %{BOOL}d error%@", buf, 0x1Cu);
  }

  if (v5)
  {
    if ([v5 code] == (id)1003)
    {
      id v8 = [*(id *)(a1 + 40) zoneDataManager];
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_1000747D4;
      v23[3] = &unk_100261F08;
      id v24 = *(id *)(a1 + 32);
      id v9 = *(id *)(a1 + 56);
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v11 = *(void **)(a1 + 48);
      id v27 = v9;
      uint64_t v25 = v10;
      id v26 = v11;
      id v28 = *(id *)(a1 + 64);
      [v8 hasSaltChangedWithCompletion:v23];

      goto LABEL_24;
    }
    id v15 = [v5 code];
    id v16 = sub_10000CE18();
    BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);
    if (v15 == (id)1006)
    {
      if (v17)
      {
        uint64_t v18 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138412290;
        uint64_t v30 = v18;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 6b - saltIdentifierError ", buf, 0xCu);
      }

LABEL_14:
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
      goto LABEL_24;
    }
    if (v17)
    {
      uint64_t v20 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v20;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - do nothing", buf, 0xCu);
    }
  }
  else
  {
    __int16 v12 = sub_10000CE18();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (a2)
    {
      if (v13)
      {
        uint64_t v14 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138412290;
        uint64_t v30 = v14;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3a.Need update. Calling dissociate", buf, 0xCu);
      }

      goto LABEL_14;
    }
    if (v13)
    {
      uint64_t v19 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v30 = v19;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3b. No update needed. Calling completion.", buf, 0xCu);
    }
  }
  id v21 = objc_retainBlock(*(id *)(a1 + 64));
  long long v22 = v21;
  if (v21) {
    (*((void (**)(id, uint64_t))v21 + 2))(v21, 1);
  }

LABEL_24:
}

void sub_1000747D4(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_1000083A0();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)long long buf = 138412802;
    uint64_t v18 = v7;
    __int16 v19 = 1024;
    int v20 = a2;
    __int16 v21 = 2112;
    id v22 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "[BDSSaltVersionIdentifierManager] hasSaltChangedWithCompletion. %@ %{BOOL}d, ERROR:%@", buf, 0x1Cu);
  }

  if (v5 || !a2)
  {
    if (v5 || (a2 & 1) != 0)
    {
      uint64_t v10 = sub_10000CE18();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a1 + 32);
        *(_DWORD *)long long buf = 138412802;
        uint64_t v18 = v11;
        __int16 v19 = 1024;
        int v20 = a2;
        __int16 v21 = 2112;
        id v22 = v5;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - skip update %{BOOL}d error%@", buf, 0x1Cu);
      }

      id v12 = objc_retainBlock(*(id *)(a1 + 64));
      BOOL v13 = v12;
      if (v12) {
        (*((void (**)(id, uint64_t))v12 + 2))(v12, 1);
      }
    }
    else
    {
      id v8 = [*(id *)(a1 + 40) tokenController];
      uint64_t v9 = *(void *)(a1 + 48);
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_1000749FC;
      v14[3] = &unk_100261EB8;
      id v15 = *(id *)(a1 + 32);
      id v16 = *(id *)(a1 + 64);
      [v8 updateSaltVersionIdentifier:v9 completion:v14];
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_1000749FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = sub_10000CE18();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v10 = 138412802;
    uint64_t v11 = v7;
    __int16 v12 = 1024;
    int v13 = a2;
    __int16 v14 = 2112;
    id v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - only update saltversionidentifier %{BOOL}d error%@", (uint8_t *)&v10, 0x1Cu);
  }

  id v8 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v9 = v8;
  if (v8) {
    (*((void (**)(id, uint64_t))v8 + 2))(v8, a2);
  }
}

void sub_100074CF0(id a1)
{
  qword_1002975D0 = [[BCCloudCollectionsManager alloc] initService];
  _objc_release_x1();
}

void sub_100075478(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1001EA174(a1, v2);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000754CC(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1001EA1F0(a1, v2);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100075520(uint64_t a1)
{
  id v2 = sub_1000083A0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1001EA26C(v2);
  }

  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id))v3 + 2))(v3);
  }
}

void sub_100075754(id a1, BOOL a2)
{
  if (!a2)
  {
    id v2 = sub_1000083A0();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
      sub_1001EA2B0(v2);
    }
  }
}

void sub_100075F08(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    id v8 = sub_1000083A0();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1001EA2F4(a1, (uint64_t)v7, v8);
    }
  }
  id v9 = objc_retainBlock(*(id *)(a1 + 40));
  int v10 = v9;
  if (v9) {
    (*((void (**)(id))v9 + 2))(v9);
  }
}

void sub_100076048(uint64_t a1)
{
  id v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    id v1 = v2;
  }
}

void sub_100076780(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

void sub_1000768F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_100077284(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(id, void *, id))v7 + 2))(v7, v6, v9);
  }
}

void sub_1000777F0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  if (v7)
  {
    id v8 = sub_1000083A0();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1001EA3C4(a1, (uint64_t)v7, v8);
    }
  }
  id v9 = objc_retainBlock(*(id *)(a1 + 40));
  int v10 = v9;
  if (v9) {
    (*((void (**)(id))v9 + 2))(v9);
  }
}

void sub_100077930(uint64_t a1)
{
  id v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    id v1 = v2;
  }
}

void sub_100078068(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v8);
  }
}

void sub_1000781E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_100078B40(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = objc_retainBlock(*(id *)(a1 + 32));
  id v8 = v7;
  if (v7) {
    (*((void (**)(id, void *, id))v7 + 2))(v7, v6, v9);
  }
}

void sub_100078D3C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v12 = a3;
  id v7 = a4;
  id v8 = a2;
  objc_opt_class();
  id v9 = BUDynamicCast();

  id v10 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v11 = v10;
  if (v10) {
    (*((void (**)(id, void *, id, id))v10 + 2))(v10, v9, v12, v7);
  }
}

void sub_100078F64(uint64_t a1, void *a2, void *a3)
{
  id v10 = a3;
  id v5 = a2;
  objc_opt_class();
  id v6 = BUDynamicCast();

  id v7 = [v6 sortOrder];
  id v8 = objc_retainBlock(*(id *)(a1 + 32));
  id v9 = v8;
  if (v8) {
    (*((void (**)(id, id, id))v8 + 2))(v8, v7, v10);
  }
}

uint64_t sub_1000791F0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100079200(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = a4;
  id v8 = a3;
  if (a2) {
    +[NSSet setWithArray:a2];
  }
  else {
  id v9 = +[NSSet set];
  }
  (*(void (**)(uint64_t))(v6 + 16))(v6);
}

void sub_10007BCD0(uint64_t a1, char a2)
{
  if (a2)
  {
    id v3 = +[BCCloudCollectionsManager sharedManager];
    id v4 = [v3 collectionMemberManager];

    id v5 = *(void **)(a1 + 56);
    uint64_t v6 = *(void **)(a1 + 40);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    id v16[2] = sub_10007BE2C;
    v16[3] = &unk_100262008;
    id v17 = v6;
    id v18 = *(id *)(a1 + 32);
    id v19 = v4;
    id v20 = *(id *)(a1 + 48);
    id v7 = v4;
    [v5 _nextSortOrderForCollectionMemberManager:v7 collectionID:v17 completion:v16];
  }
  else
  {
    id v8 = sub_10000CF48();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1001EA940(a1, v8, v9, v10, v11, v12, v13, v14);
    }

    id v15 = objc_retainBlock(*(id *)(a1 + 48));
    id v7 = v15;
    if (v15) {
      (*((void (**)(id, void))v15 + 2))(v15, 0);
    }
  }
}

void sub_10007BE2C(uint64_t a1, uint64_t a2)
{
  id v4 = +[BCCollectionMember collectionMemberIDWithCollectionID:*(void *)(a1 + 32) assetID:*(void *)(a1 + 40)];
  id v5 = [[BCMutableCollectionMember alloc] initWithCollectionMemberID:v4];
  [(BCMutableCollectionMember *)v5 setSortOrder:a2];
  [(BCMutableCloudData *)v5 setDeletedFlag:0];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  id v7[2] = sub_10007BF14;
  v7[3] = &unk_100261838;
  uint64_t v6 = *(void **)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  [v6 setCollectionMember:v5 completion:v7];
}

void sub_10007BF14(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  if (v6)
  {
    id v7 = sub_10000CF48();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001EA9B0();
    }
  }
  id v8 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v9 = v8;
  if (v8) {
    (*((void (**)(id, uint64_t))v8 + 2))(v8, a2);
  }
}

void sub_10007C094(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_10000CF48();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001EAA18();
    }
  }
  if (v5) {
    uint64_t v8 = [v5 deletedFlag] ^ 1;
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v10 = v9;
  if (v9) {
    (*((void (**)(id, uint64_t))v9 + 2))(v9, v8);
  }
}

void sub_10007C378(uint64_t a1, char a2)
{
  if (a2)
  {
    id v3 = +[BCCloudAssetManager sharedManager];
    id v4 = [v3 assetDetailManager];

    id v5 = *(void **)(a1 + 40);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10007C4BC;
    v10[3] = &unk_100262080;
    id v6 = v5;
    char v14 = *(unsigned char *)(a1 + 56);
    id v11 = v6;
    id v12 = v4;
    id v13 = *(id *)(a1 + 48);
    id v7 = v4;
    [v7 assetDetailsForAssetIDs:v6 completion:v10];
  }
  else
  {
    uint64_t v8 = sub_10000CF48();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1001EAA80(a1, v8);
    }

    id v9 = objc_retainBlock(*(id *)(a1 + 48));
    id v7 = v9;
    if (v9) {
      (*((void (**)(id, void))v9 + 2))(v9, 0);
    }
  }
}

void sub_10007C4BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)NSMutableDictionary);
  id v5 = objc_msgSend(v3, "bu_arrayByRemovingNSNulls");

  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id v6 = v5;
  id v7 = [v6 countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v32;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v32 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        id v12 = [v11 assetID];
        [v4 setObject:v11 forKeyedSubscript:v12];
      }
      id v8 = [v6 countByEnumeratingWithState:&v31 objects:v36 count:16];
    }
    while (v8);
  }

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v13 = *(id *)(a1 + 32);
  id v14 = [v13 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v28;
    do
    {
      for (j = 0; j != v15; j = (char *)j + 1)
      {
        if (*(void *)v28 != v16) {
          objc_enumerationMutation(v13);
        }
        uint64_t v18 = *(void *)(*((void *)&v27 + 1) + 8 * (void)j);
        id v19 = [v4 objectForKeyedSubscript:v18];
        if (!v19)
        {
          id v19 = [[BCMutableAssetDetail alloc] initWithAssetID:v18];
          id v20 = +[NSDate date];
          [(BCMutableAssetDetail *)v19 setDateFinished:v20];

          [v4 setObject:v19 forKeyedSubscript:v18];
        }
        if (*(unsigned char *)(a1 + 56))
        {
          [(BCMutableAssetDetail *)v19 setIsFinished:1];
          [(BCMutableAssetDetail *)v19 setNotFinished:0];
          __int16 v21 = [(BCMutableAssetDetail *)v19 dateFinished];

          if (!v21)
          {
            id v22 = [(BCMutableAssetDetail *)v19 lastOpenDate];
            if (v22)
            {
              [(BCMutableAssetDetail *)v19 setDateFinished:v22];
            }
            else
            {
              long long v23 = +[NSDate date];
              [(BCMutableAssetDetail *)v19 setDateFinished:v23];
            }
          }
        }
        else
        {
          [(BCMutableAssetDetail *)v19 setIsFinished:0];
          [(BCMutableAssetDetail *)v19 setNotFinished:1];
          [(BCMutableAssetDetail *)v19 setDateFinished:0];
        }
      }
      id v15 = [v13 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }
    while (v15);
  }

  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_10007C818;
  v25[3] = &unk_100261838;
  id v24 = *(void **)(a1 + 40);
  id v26 = *(id *)(a1 + 48);
  [v24 setAssetDetails:v4 completion:v25];
}

void sub_10007C818(uint64_t a1, uint64_t a2)
{
  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    id v4 = v3;
    (*((void (**)(id, uint64_t))v3 + 2))(v3, a2);
    id v3 = v4;
  }
}

void sub_10007C954(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_10000CF48();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1001EAB18();
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10007CAC8(uint64_t a1, uint64_t a2)
{
  +[NSTimeZone resetSystemTimeZone];
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"BDSNotificationForwarderSignificantTimeChangeNotification" object:a2 userInfo:0];
}

uint64_t sub_10007CB7C()
{
  uint64_t v0 = sub_1001EAF60();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin();
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008176C(v2, qword_100291078);
  sub_10007CFF8(v0, (uint64_t)qword_100291078);
  id v5 = [self books];
  id v6 = [v5 containerURL];

  sub_1001EAF10();
  sub_1001EAED0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_10007CCD8()
{
  uint64_t v0 = sub_1001EAF60();
  sub_10008176C(v0, qword_100291098);
  sub_10007CFF8(v0, (uint64_t)qword_100291098);
  if (qword_100291070 != -1) {
    swift_once();
  }
  sub_10007CFF8(v0, (uint64_t)qword_100291078);
  return sub_1001EAEE0();
}

uint64_t CRDTModelSyncMapper.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  CRDTModelSyncMapper.init()();
  return v0;
}

uint64_t CRDTModelSyncMapper.init()()
{
  uint64_t v1 = v0;
  id v2 = [self defaultManager];
  if (qword_100291090 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1001EAF60();
  sub_10007CFF8(v3, (uint64_t)qword_100291098);
  sub_1001EAEC0(v4);
  id v6 = v5;
  id v20 = 0;
  unsigned int v7 = [v2 createDirectoryAtURL:v5 withIntermediateDirectories:1 attributes:0 error:&v20];

  id v8 = v20;
  if (!v7)
  {
    uint64_t v9 = v8;
    sub_1001EAE60();

    swift_willThrow();
    sub_1001EC8F0();
    if (qword_1002910C8 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_100292120;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100215310;
    id v12 = v10;
    uint64_t v13 = sub_1001EAE90();
    uint64_t v15 = v14;
    *(void *)(v11 + 56) = &type metadata for String;
    unint64_t v16 = sub_10007DC58();
    *(void *)(v11 + 64) = v16;
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v15;
    swift_getErrorValue();
    uint64_t v17 = sub_1001ED110();
    *(void *)(v11 + 96) = &type metadata for String;
    *(void *)(v11 + 104) = v16;
    *(void *)(v11 + 72) = v17;
    *(void *)(v11 + 80) = v18;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  return v1;
}

uint64_t sub_10007CFF8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10007D030@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1001EC3C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned int v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a1 + 8))(ObjectType, a1);
  sub_1001EC3B0();
  uint64_t v9 = sub_1001EC380();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v11 >> 60 == 15)
  {
LABEL_11:
    sub_1001EC8F0();
    if (qword_1002910C8 != -1) {
      swift_once();
    }
    id v16 = (id)qword_100292120;
    sub_1001EB530();

    uint64_t v17 = sub_1001EAF60();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  else
  {
    switch(v11 >> 62)
    {
      case 1uLL:
        if ((int)v9 != v9 >> 32) {
          goto LABEL_4;
        }
        goto LABEL_10;
      case 2uLL:
        if (*(void *)(v9 + 16) == *(void *)(v9 + 24)) {
          goto LABEL_10;
        }
        goto LABEL_4;
      case 3uLL:
        goto LABEL_10;
      default:
        if ((v11 & 0xFF000000000000) == 0)
        {
LABEL_10:
          sub_100081700(v9, v11);
          goto LABEL_11;
        }
LABEL_4:
        Class isa = sub_1001EAFD0().super.isa;
        id v13 = [(objc_class *)isa bu_md5];

        sub_1001EC370();
        if (qword_100291090 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_1001EAF60();
        sub_10007CFF8(v14, (uint64_t)qword_100291098);
        sub_1001EAEE0();
        swift_bridgeObjectRelease();
        sub_100081700(v9, v11);
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
        break;
    }
  }
  return result;
}

id sub_10007D3A0(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(id))
{
  id v5 = a3;
  swift_retain();
  uint64_t v6 = (void *)a4(v5);

  swift_release();
  return v6;
}

uint64_t CRDTModelLocalFileContextStore.deinit()
{
  return v0;
}

uint64_t CRDTModelFileSyncContextStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_10007D428()
{
  uint64_t v0 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v0 - 8);
  unsigned int v60 = (char *)v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1001EADC0();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  __chkstk_darwin(v2);
  char v63 = (char *)v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EAF60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v58 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)v57 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)v57 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)v57 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v57 - v17;
  id v19 = self;
  id v20 = [v19 books];
  id v21 = [v20 containerURL];

  sub_1001EAF10();
  unint64_t v62 = v18;
  sub_1001EAEE0();
  uint64_t v59 = v5;
  id v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v61 = v5 + 8;
  v22(v16, v4);
  id v23 = [v19 books];
  id v24 = [v23 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  v22(v10, v4);
  *(void *)&long long v69 = type metadata accessor for ReadingHistoryModel(0);
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  *(void *)&long long v69 = sub_1001EC3F0();
  *((void *)&v69 + 1) = v25;
  swift_bridgeObjectRetain();
  v72._countAndFlagsBits = 0x2E747865746E6F43;
  v72._object = (void *)0xEA00000000006264;
  sub_1001EC490(v72);
  swift_bridgeObjectRelease();
  sub_1001EAEE0();
  swift_bridgeObjectRelease();
  uint64_t v68 = v4;
  char v64 = v22;
  v22(v16, v4);
  sub_1001EC8D0();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  id v26 = (void *)qword_100292120;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100215320;
  id v28 = v26;
  unint64_t v67 = v13;
  uint64_t v29 = sub_1001EAE90();
  uint64_t v31 = v30;
  *(void *)(v27 + 56) = &type metadata for String;
  unint64_t v32 = sub_10007DC58();
  *(void *)(v27 + 64) = v32;
  *(void *)(v27 + 32) = v29;
  *(void *)(v27 + 40) = v31;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  long long v33 = v63;
  sub_1001EADB0();
  sub_1001EADA0();
  id v34 = [self defaultManager];
  unint64_t v35 = v62;
  sub_1001EAEC0(v36);
  unsigned int v38 = v37;
  *(void *)&long long v69 = 0;
  LODWORD(v31) = [v34 createDirectoryAtURL:v37 withIntermediateDirectories:1 attributes:0 error:&v69];

  if (v31)
  {
    id v39 = (id)v69;
    sub_1001EAEB0();
    v57[1] = sub_1001EC190();
    uint64_t v40 = v59;
    unint64_t v42 = v67;
    uint64_t v41 = v68;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v67, v68);
    uint64_t v71 = 0;
    long long v69 = 0u;
    long long v70 = 0u;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v60, 1, 1, v41);
    uint64_t v55 = sub_1001EC180();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v66);
    uint64_t v56 = v42;
  }
  else
  {
    id v43 = (id)v69;
    sub_1001EAE60();

    swift_willThrow();
    sub_1001EC8F0();
    unint64_t v44 = (void *)qword_100292120;
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_100215310;
    id v46 = v44;
    unsigned int v47 = v67;
    uint64_t v48 = sub_1001EAE90();
    *(void *)(v45 + 56) = &type metadata for String;
    *(void *)(v45 + 64) = v32;
    *(void *)(v45 + 32) = v48;
    *(void *)(v45 + 40) = v49;
    swift_getErrorValue();
    uint64_t v50 = sub_1001ED110();
    *(void *)(v45 + 96) = &type metadata for String;
    *(void *)(v45 + 104) = v32;
    *(void *)(v45 + 72) = v50;
    *(void *)(v45 + 80) = v51;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    sub_1001EC190();
    uint64_t v71 = 0;
    long long v69 = 0u;
    long long v70 = 0u;
    uint64_t v55 = sub_1001EC170();
    swift_errorRelease();
    sub_1000816A4((uint64_t)&v69, &qword_1002931D0);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v66);
    uint64_t v56 = v47;
  }
  uint64_t v52 = v68;
  long long v53 = v64;
  v64(v56, v68);
  v53(v35, v52);
  return v55;
}

uint64_t variable initialization expression of ReadingHistoryServiceManager.outstandingTransactionCount()
{
  return 0;
}

uint64_t variable initialization expression of PBPropertyBookImpressionParam.wasRecommendedByBooksPersonalization()
{
  return 0;
}

uint64_t variable initialization expression of ReadingHistoryServiceManager._readingHistoryServiceAccessQueue()
{
  return sub_10007F31C();
}

uint64_t variable initialization expression of ReadingHistoryServiceManager.outstandingTransactionCountAccessQueue()
{
  return sub_10007F31C();
}

double variable initialization expression of ReadingHistoryServiceManager.teardownServiceTimout()
{
  return 30.0;
}

double variable initialization expression of ReadingHistoryDataStore.updateCollector@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t variable initialization expression of ReadingHistoryDataStore.queue()
{
  return sub_10007F31C();
}

uint64_t sub_10007DC14(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10007DC58()
{
  unint64_t result = qword_1002911C0;
  if (!qword_1002911C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002911C0);
  }
  return result;
}

uint64_t variable initialization expression of CRDTModelSyncManager.logger()
{
  sub_1001ECD20(16);
  v2._countAndFlagsBits = 0x65646F4D54445243;
  v2._object = (void *)0xEE002E636E79536CLL;
  sub_1001EC490(v2);
  type metadata accessor for CRDTModelSyncManager();
  v3._countAndFlagsBits = sub_1000B72E4();
  sub_1001EC490(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_1001EC490(v4);
  return sub_1001EB550();
}

uint64_t variable initialization expression of CRDTModelSyncManager.modelQueue()
{
  uint64_t v0 = sub_1001EC9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA90();
  sub_1001EC980();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  return sub_1001ECA00();
}

uint64_t variable initialization expression of ReadingHistory.State.longestStreak@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE1C(type metadata accessor for ReadingHistory.Streak, a1);
}

id variable initialization expression of ReadingHistoryService.historyDefaults()
{
  id v0 = [self standardUserDefaults];
  return v0;
}

uint64_t variable initialization expression of ReadingHistoryService.accessQueue()
{
  return sub_10007F31C();
}

uint64_t variable initialization expression of ReadingHistoryService.modelReadyQueue()
{
  return sub_10007F31C();
}

uint64_t variable initialization expression of ReadingHistoryService.readingHistoryUpdatePendingSaveAccessLock()
{
  sub_10007DC14(&qword_100293420);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t variable initialization expression of CRDTModelCloudSyncController._localSyncManagerAccessQueue()
{
  return sub_10007E04C();
}

uint64_t variable initialization expression of CRDTModelCloudSyncController.localModelSyncVersionTransactionQueue()
{
  return sub_10007E04C();
}

uint64_t sub_10007E04C()
{
  uint64_t v0 = sub_1001EC990();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1001EBAA0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1001EC9C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v2);
  sub_1001EBA80();
  v7[1] = &_swiftEmptyArrayStorage;
  sub_1000815E8((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  return sub_1001ECA00();
}

uint64_t variable initialization expression of CRDTModelCloudSyncController.waitForlocalModelSyncVersion@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of CRDTModelCloudSyncController.delegate()
{
  return 0;
}

uint64_t variable initialization expression of BDSSyncEnginePipeline.kChangedRecordsBatchSize()
{
  return 32;
}

void *variable initialization expression of BDSSyncEnginePipeline.subscribers()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of BDSSyncEnginePipeline.logger()
{
  return sub_1001EB550();
}

uint64_t variable initialization expression of BDSSyncEnginePipeline.workQueue()
{
  uint64_t v0 = sub_1001EC9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  v8[0] = sub_100081668(0, (unint64_t *)&qword_1002919A0);
  if (qword_100291188 != -1) {
    swift_once();
  }
  id v6 = *(id *)(static BDSSyncEngine.shared + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_queue);
  sub_1001EBA80();
  v8[1] = &_swiftEmptyArrayStorage;
  sub_1000815E8((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return sub_1001ECA00();
}

uint64_t variable initialization expression of BDSSyncEnginePipeline.stateQueue()
{
  uint64_t v0 = sub_1001EC9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EBAA0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1001EC990();
  __chkstk_darwin(v5 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EC980();
  sub_1001EBA80();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return sub_1001ECA00();
}

void *variable initialization expression of BDSSyncEnginePipeline.currentModifyBatchResponse()
{
  type metadata accessor for _BDSSyncEngineModifyBatchResponse();
  uint64_t result = (void *)swift_allocObject();
  result[2] = &_swiftEmptyArrayStorage;
  result[3] = &_swiftEmptyArrayStorage;
  result[4] = &_swiftEmptyArrayStorage;
  result[5] = &_swiftEmptyArrayStorage;
  result[6] = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t variable initialization expression of ModelState.revisionInfo@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of CloudSyncDiagnosticService.logger()
{
  return sub_1001EB550();
}

uint64_t variable initialization expression of CRDTModelLocalFileManager.modelQueue()
{
  return sub_10007F5F4();
}

uint64_t variable initialization expression of CRDTModelLocalFileManager.ioQueue()
{
  uint64_t v0 = sub_1001EC9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA80();
  v7[1] = &_swiftEmptyArrayStorage;
  sub_1000815E8((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return sub_1001ECA00();
}

void *variable initialization expression of CRDTModelLocalFileManager.observableTransaction()
{
  id v0 = [objc_allocWithZone((Class)BDSOSTransactionProvider) init];
  type metadata accessor for ObservableTransaction();
  uint64_t v1 = (void *)swift_allocObject();
  return sub_100080734(0xD000000000000035, 0x8000000100221220, (uint64_t)v0, v1);
}

uint64_t variable initialization expression of CRDTModelLocalFileManager.logger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007F7C4(a1, a2, a3, a4, 21, 0xD000000000000013, (void *)0x8000000100221260);
}

uint64_t variable initialization expression of CloudSyncDiagnosticCloudFetcher.logger()
{
  return sub_1001EB550();
}

unint64_t variable initialization expression of ReadingHistoryBackupManager.backupContainerSubpath()
{
  return 0xD000000000000055;
}

unint64_t variable initialization expression of ReadingHistoryBackupManager.localFileSubpath()
{
  return 0xD000000000000012;
}

unint64_t variable initialization expression of ReadingHistoryBackupManager.localFileName()
{
  return 0xD000000000000013;
}

uint64_t variable initialization expression of ReadingHistoryBackupManager.localFileContextClientName()
{
  return 0x736B6F6F42;
}

unint64_t variable initialization expression of ReadingHistoryBackupManager.localFileContextSubpath()
{
  return 0xD000000000000019;
}

unint64_t variable initialization expression of CloudSecureUserDataMigrator.oldSecureUserDataModelName()
{
  return 0xD000000000000015;
}

unint64_t variable initialization expression of CloudSecureUserDataMigrator.migrateOldUserDataGenerationKey()
{
  return 0xD000000000000020;
}

uint64_t static BDSReadingHistoryUpdateInfo.supportsSecureCoding.getter()
{
  return 1;
}

unint64_t variable initialization expression of CloudSecureUserDataMigrator.rootDirectoryName()
{
  return 0xD000000000000020;
}

unint64_t variable initialization expression of CloudSecureUserDataMigrator.persistentStoreOptions()
{
  sub_10007DC14(&qword_1002911F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215330;
  *(void *)(inited + 32) = sub_1001EC370();
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 4_Block_object_dispose(&STACK[0x3B0], 8) = 1;
  *(void *)(inited + 56) = sub_1001EC370();
  *(void *)(inited + 64) = v2;
  *(unsigned char *)(inited + 72) = 1;
  *(void *)(inited + 80) = sub_1001EC370();
  *(void *)(inited + 8_Block_object_dispose(&STACK[0x3B0], 8) = v3;
  *(unsigned char *)(inited + 96) = 1;
  return sub_100121AB0(inited);
}

uint64_t variable initialization expression of CRDTModelSyncEntity.$__lazy_storage_$_logger@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE1C((uint64_t (*)(void))&type metadata accessor for Logger, a1);
}

uint64_t variable initialization expression of PBPropertyConfiguration.eventName()
{
  return 0;
}

double variable initialization expression of PBPropertySingleFloatParam.value()
{
  return 0.0;
}

uint64_t variable initialization expression of PBPropertyMarkedAsFinishedParam.value()
{
  return 0;
}

uint64_t variable initialization expression of PBPropertyValue.params@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE1C(type metadata accessor for PBPropertyValue.OneOf_Params, a1);
}

uint64_t variable initialization expression of PBPropertyTimeSlice._startOfTimeSlice@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE1C((uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp, a1);
}

uint64_t variable initialization expression of PBPropertyBundle._configuration@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE1C(type metadata accessor for PBPropertyConfiguration, a1);
}

uint64_t variable initialization expression of ReadingHistory.ModelSnapshot.ModelValues.readingDay()
{
  return 0;
}

uint64_t variable initialization expression of ReadingHistory.ModelSnapshot.remoteModelValues@<X0>(uint64_t a1@<X8>)
{
  return sub_10007EE1C(type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues, a1);
}

uint64_t sub_10007EE1C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

uint64_t variable initialization expression of ObservableContainer.accessQueue()
{
  uint64_t v0 = sub_1001EC9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA80();
  v7[1] = &_swiftEmptyArrayStorage;
  sub_1000815E8((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return sub_1001ECA00();
}

uint64_t variable initialization expression of ObservableContainer.callQueue()
{
  uint64_t v0 = sub_1001EC9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA90();
  sub_1001EC980();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  return sub_1001ECA00();
}

uint64_t variable initialization expression of ObservableContainer.observations()
{
  type metadata accessor for ObservableContainer.Event();
  swift_getFunctionTypeMetadata1();
  return sub_1001EC220();
}

uint64_t variable initialization expression of ObservableTransaction.observableTransactionQueue()
{
  return sub_10007F31C();
}

uint64_t sub_10007F31C()
{
  uint64_t v0 = sub_1001EC990();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1001EBAA0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1001EC9C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v2);
  sub_1001EBA80();
  v7[1] = &_swiftEmptyArrayStorage;
  sub_1000815E8((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  return sub_1001ECA00();
}

uint64_t variable initialization expression of ObservableTransaction.logger()
{
  return sub_1001EB550();
}

uint64_t variable initialization expression of CRDTModelFileSyncInfo.model()
{
  return sub_1001EBEE0();
}

void *variable initialization expression of CRDTModelFileSyncInfo.additionalFields()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of CRDTModelFileSyncManager.modelQueue()
{
  return sub_10007F5F4();
}

uint64_t sub_10007F5F4()
{
  uint64_t v0 = sub_1001EC9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA90();
  sub_1001EC980();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  return sub_1001ECA00();
}

uint64_t variable initialization expression of CRDTModelFileSyncManager.logger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007F7C4(a1, a2, a3, a4, 20, 0xD000000000000012, (void *)0x80000001002214C0);
}

uint64_t sub_10007F7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5, uint64_t a6, void *a7)
{
  sub_1001ECD20(a5);
  v13._countAndFlagsBits = a6;
  v13._object = a7;
  sub_1001EC490(v13);
  v14._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a1, a4);
  sub_1001EC490(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  sub_1001EC490(v15);
  return sub_1001EB550();
}

uint64_t variable initialization expression of BDSSyncEngine.maxRecordCountPerBatch()
{
  return 250;
}

uint64_t variable initialization expression of BDSSyncEngine.recordChangePublisher()
{
  return sub_10007F8F0(&qword_1002911F8);
}

uint64_t variable initialization expression of BDSSyncEngine.recordDeletionPublisher()
{
  return sub_10007F8F0(&qword_100291200);
}

uint64_t variable initialization expression of BDSSyncEngine.accountChangedPublisher()
{
  return sub_10007F8F0(&qword_100291208);
}

uint64_t variable initialization expression of BDSSyncEngine.endFetchingChangesPublisher()
{
  return sub_10007F8F0((uint64_t *)&unk_100291210);
}

uint64_t variable initialization expression of BDSSyncEngine.updateMetadataPublisher()
{
  return sub_10007F8F0(&qword_100293810);
}

uint64_t sub_10007F8F0(uint64_t *a1)
{
  return sub_1001EB5A0();
}

uint64_t variable initialization expression of BDSSyncEngine.queue()
{
  uint64_t v0 = sub_1001EC9C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA80();
  v7[1] = &_swiftEmptyArrayStorage;
  sub_1000815E8((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return sub_1001ECA00();
}

unint64_t variable initialization expression of BDSSyncEngine.BDSAPSDelegatePort()
{
  return 0xD00000000000001CLL;
}

uint64_t variable initialization expression of BDSSyncEngine.logger()
{
  return sub_1001EB550();
}

id variable initialization expression of BDSSyncEngine.saltObservers()
{
  id v0 = [self weakObjectsHashTable];
  return v0;
}

void *variable initialization expression of BDSSyncEngine.zoneResetsInProgress()
{
  return &_swiftEmptySetSingleton;
}

id variable initialization expression of BDSSyncEngine.zoneLock()
{
  id v0 = objc_allocWithZone((Class)NSLock);
  return [v0 init];
}

uint64_t variable initialization expression of ReadingHistoryDay.readingGoal()
{
  return sub_1001EBB10();
}

uint64_t variable initialization expression of ReadingHistoryMonth.days()
{
  return sub_10007FD0C(&qword_100291220, &qword_100291228, (unint64_t *)&unk_100291230);
}

uint64_t variable initialization expression of ReadingHistoryMonth.lastDayStreakOrdinal()
{
  return sub_1001EBB10();
}

uint64_t variable initialization expression of ReadingHistoryModel.months()
{
  return sub_10007FD0C(&qword_100291FC0, &qword_100291240, &qword_100291248);
}

uint64_t sub_10007FD0C(uint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  sub_10007DC14(a1);
  sub_1000815A4(a2, a1);
  sub_1000815A4(a3, a1);
  return sub_1001EBF00();
}

uint64_t variable initialization expression of ReadingHistoryModel.streakRecords()
{
  sub_1001EB0C0();
  sub_1000815E8(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
  return sub_1001EBF00();
}

uint64_t sub_10007FE68(uint64_t a1)
{
  uint64_t v2 = sub_1000815E8(&qword_100291678, type metadata accessor for CKError);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10007FED4(uint64_t a1)
{
  uint64_t v2 = sub_1000815E8(&qword_100291678, type metadata accessor for CKError);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10007FF44(uint64_t a1)
{
  uint64_t v2 = sub_1000815E8(&qword_100291670, type metadata accessor for CKError);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

id sub_10007FFB0()
{
  return *v0;
}

uint64_t sub_10007FFB8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_10007FFC0(uint64_t a1, uint64_t a2)
{
  return sub_1000800B8(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10007FFD8()
{
  sub_1001EC370();
  sub_1001EC440();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_10008002C()
{
  sub_1001EC370();
  sub_1001ED170();
  sub_1001EC440();
  Swift::Int v0 = sub_1001ED1A0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1000800A0(uint64_t a1, uint64_t a2)
{
  return sub_1000800B8(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1000800B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1001EC370();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000800FC(uint64_t a1, id *a2)
{
  uint64_t result = sub_1001EC350();
  *a2 = 0;
  return result;
}

uint64_t sub_100080174(uint64_t a1, id *a2)
{
  char v3 = sub_1001EC360();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1000801F4@<X0>(void *a1@<X8>)
{
  sub_1001EC370();
  NSString v2 = sub_1001EC340();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100080238()
{
  return sub_1001EC370();
}

uint64_t sub_100080248()
{
  sub_1000815E8(&qword_100291670, type metadata accessor for CKError);
  return sub_1001EAE40();
}

uint64_t sub_1000802B4(uint64_t a1)
{
  uint64_t v2 = sub_1000815E8(&qword_100291670, type metadata accessor for CKError);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100080320(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000815E8(&qword_100291670, type metadata accessor for CKError);
  id v5 = a1;
  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_1000803B0()
{
  id v1 = *v0;
  uint64_t v2 = sub_1001ECB10();

  return v2;
}

uint64_t sub_1000803E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000815E8(&qword_100291670, type metadata accessor for CKError);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100080464()
{
  return sub_1001ED1A0();
}

void *sub_1000804C4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
  return result;
}

void sub_1000804D4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000804E0()
{
  uint64_t v0 = sub_1001EC370();
  uint64_t v2 = v1;
  if (v0 == sub_1001EC370() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1001ED080();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_10008056C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100080580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000815E8(&qword_100291670, type metadata accessor for CKError);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_100080604@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1001EC340();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10008064C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001EC370();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100080678(uint64_t a1)
{
  uint64_t v2 = sub_1000815E8(&qword_1002916B0, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_1000815E8(&qword_1002916B8, type metadata accessor for FileAttributeKey);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

void *sub_100080734(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v6 = sub_1001EC990();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1001EBAA0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1001EC9C0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4[4] = 0;
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v8);
  sub_1001EBA80();
  uint64_t v17 = &_swiftEmptyArrayStorage;
  sub_1000815E8((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  a4[5] = sub_1001ECA00();
  sub_1001EB550();
  uint64_t v12 = v15;
  a4[2] = a1;
  a4[3] = v12;
  a4[6] = v16;
  return a4;
}

char *_s14bookdatastored19CRDTModelSyncMapperC9cloudData4fromSo014BCMutableCloudF0CSgSo8CKRecordC_tF_0(void *a1)
{
  uint64_t v2 = sub_1001EB0C0();
  uint64_t v46 = *(void *)(v2 - 8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v4 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14((uint64_t *)&unk_1002924C0);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14(&qword_100295230);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EAF60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = ((uint64_t (*)(void))__chkstk_darwin)();
  Swift::String v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v42 - v14;
  uint64_t v16 = sub_1001ECAC0();
  if (!v16) {
    goto LABEL_12;
  }
  uint64_t v49 = v16;
  sub_10007DC14(&qword_100291620);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v17 = v48;
  uint64_t v45 = v47;
  uint64_t v18 = sub_1001ECAC0();
  if (!v18) {
    goto LABEL_9;
  }
  uint64_t v44 = v10;
  uint64_t v19 = v18;
  self;
  id v20 = (void *)swift_dynamicCastObjCClass();
  if (!v20)
  {
    swift_unknownObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v42[1] = v19;
  uint64_t v43 = v17;
  id v21 = [v20 fileURL];
  if (v21)
  {
    id v22 = v21;
    sub_1001EAF10();

    uint64_t v23 = v44;
    id v24 = v13;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
    v25(v8, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v8, 1, v9) != 1)
    {
      v25(v15, v8, v9);
      uint64_t v28 = sub_1001EAF80();
      uint64_t v30 = v29;
      id v31 = [objc_allocWithZone((Class)type metadata accessor for CRDTModelSync()) init];
      [v31 setSystemFields:a1];
      unint64_t v32 = (char *)v31;
      long long v33 = (objc_class *)[a1 modificationDate];
      Class isa = v33;
      if (v33)
      {
        v42[0] = v30;
        sub_1001EB0A0();

        uint64_t v35 = v46;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v6, v4, v2);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v6, 0, 1, v2);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v6, 1, v2) == 1)
        {
          Class isa = 0;
        }
        else
        {
          Class isa = sub_1001EB060().super.isa;
          (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v2);
        }
        uint64_t v36 = v45;
        uint64_t v30 = v42[0];
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v6, 1, 1, v2);
        uint64_t v36 = v45;
      }
      [v32 setModificationDate:isa];

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v9);
      char v37 = &v32[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type];
      uint64_t v38 = v43;
      *(void *)char v37 = v36;
      *((void *)v37 + 1) = v38;
      swift_bridgeObjectRelease();
      id v39 = (uint64_t *)&v32[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
      uint64_t v40 = *(void *)&v32[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
      unint64_t v41 = *(void *)&v32[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8];
      *id v39 = v28;
      v39[1] = v30;
      sub_100081700(v40, v41);
      return v32;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1000816A4((uint64_t)v8, &qword_100295230);
LABEL_12:
  sub_1001EC8F0();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  id v26 = (id)qword_100292120;
  sub_1001EB530();

  return 0;
}

id _s14bookdatastored19CRDTModelSyncMapperC6record4fromSo8CKRecordCSgSo18BCMutableCloudDataC_tF_0(void *a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EAF60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a1 systemFields];
  if (v9)
  {
    swift_getObjectType();
    uint64_t v10 = swift_conformsToProtocol2();
    if (v10) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v10) {
      uint64_t v12 = a1;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v12)
    {
      uint64_t ObjectType = swift_getObjectType();
      id v37 = a1;
      id v14 = [v12 identifier];
      if (v14)
      {
        uint64_t v15 = v14;
        id v16 = [v9 encryptedValuesByKey];
        uint64_t v35 = v8;
        uint64_t v36 = v5;
        uint64_t v17 = v6;
        id v18 = v16;
        sub_1001EC370();
        id v19 = v15;
        NSString v20 = sub_1001EC340();
        swift_bridgeObjectRelease();
        [v18 setObject:v19 forKeyedSubscript:v20];
        uint64_t v6 = v17;
        uint64_t v8 = v35;
        uint64_t v5 = v36;
        swift_unknownObjectRelease();
      }
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
      uint64_t v40 = &type metadata for String;
      unint64_t v41 = &protocol witness table for String;
      uint64_t v38 = v21;
      uint64_t v39 = v22;
      sub_100081668(0, (unint64_t *)&unk_1002915B0);
      sub_1001ECA30();
      type metadata accessor for CRDTModelSyncMapper();
      sub_10007D030(v11, (uint64_t)v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {

        sub_1000816A4((uint64_t)v4, &qword_100295230);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
        uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(ObjectType, v11);
        if (v24 >> 60 == 15)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        }
        else
        {
          uint64_t v25 = v23;
          unint64_t v26 = v24;
          sub_1001EAFF0();
          id v27 = objc_allocWithZone((Class)CKAsset);
          sub_1001EAEC0(v28);
          uint64_t v30 = v29;
          id v31 = [v27 initWithFileURL:v29];

          id v32 = v31;
          sub_1001ECAD0();
          sub_100081700(v25, v26);

          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        }
      }
    }
    else
    {

      return 0;
    }
  }
  return v9;
}

uint64_t sub_10008155C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000815A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10008155C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000815E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelSyncMapper()
{
  return self;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_100081668(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1000816A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10007DC14(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100081700(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100081714(a1, a2);
  }
  return a1;
}

uint64_t sub_100081714(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t *sub_10008176C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void type metadata accessor for Code(uint64_t a1)
{
}

void type metadata accessor for CKError(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for BGSystemTaskPriority(uint64_t a1)
{
}

void sub_100081820(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100081868()
{
  return sub_1000815E8(&qword_100291648, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1000818B0()
{
  return sub_1000815E8(&qword_100291650, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1000818F8()
{
  return sub_1000815E8(&qword_100291658, type metadata accessor for CKError);
}

uint64_t sub_100081940()
{
  return sub_1000815E8(&qword_100291660, type metadata accessor for CKError);
}

uint64_t sub_100081988()
{
  return sub_1000815E8(&qword_100291668, type metadata accessor for Code);
}

uint64_t sub_1000819D0()
{
  return sub_1000815E8(&qword_100291670, type metadata accessor for CKError);
}

uint64_t sub_100081A18()
{
  return sub_1000815E8(&qword_100291678, type metadata accessor for CKError);
}

uint64_t sub_100081A60()
{
  return sub_1000815E8(&qword_100291680, type metadata accessor for CKError);
}

uint64_t sub_100081AA8()
{
  return sub_1000815E8(&qword_100291688, type metadata accessor for CKError);
}

uint64_t sub_100081AF0()
{
  return sub_1000815E8(&qword_100291690, type metadata accessor for Code);
}

uint64_t sub_100081B38()
{
  return sub_1000815E8(&qword_100291698, type metadata accessor for Code);
}

unint64_t sub_100081B84()
{
  unint64_t result = qword_1002916A0;
  if (!qword_1002916A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002916A0);
  }
  return result;
}

uint64_t sub_100081BD8()
{
  return sub_1000815E8(&qword_1002916A8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100081C2C(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  v2[13] = *(void *)(_s21PriceDropNotificationVMa() - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint8_t v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_100081D04, 0, 0);
}

uint64_t sub_100081D04()
{
  uint64_t v1 = *(void *)(v0 + 88);
  *(void *)(v0 + 136) = *(void *)(*(void *)(v0 + 96) + 32);
  sub_100082870();
  *(void *)(v0 + 32) = v2;
  *(unsigned char *)(v0 + 40) = v3;
  *(void *)(v0 + 144) = v2;
  uint64_t v4 = sub_100082B3C(v1);
  *(void *)(v0 + 152) = v4;
  *(void *)(v0 + 160) = 0;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 16_Block_object_dispose(&STACK[0x3B0], 8) = v5;
  void *v5 = v0;
  v5[1] = sub_100081DF0;
  uint64_t v6 = *(void *)(v0 + 96);
  v5[18] = v4;
  v5[19] = v6;
  return _swift_task_switch(sub_100083080, 0, 0);
}

uint64_t sub_100081DF0()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  char v3 = (void *)swift_task_alloc();
  v1[22] = v3;
  *char v3 = v2;
  v3[1] = sub_100081F60;
  uint64_t v4 = v1[12];
  v3[18] = v1[19];
  v3[19] = v4;
  return _swift_task_switch(sub_100083780, 0, 0);
}

uint64_t sub_100081F60()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100082078, 0, 0);
}

uint64_t sub_100082078()
{
  uint64_t v33 = v0;
  *(void *)(v0 + 56) = *(void *)(v0 + 88);
  sub_10007DC14(&qword_100291910);
  sub_1000815A4(&qword_100291918, &qword_100291910);
  if (sub_1001EC7B0())
  {
    if (*(unsigned char *)(v0 + 40))
    {
      uint64_t v2 = *(void **)(v0 + 88);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v1 = *(void *)(v0 + 88);
      uint64_t v2 = _swiftEmptyArrayStorage;
      v32[0] = _swiftEmptyArrayStorage;
      uint64_t v3 = *(void *)(v1 + 16);
      uint64_t v4 = swift_bridgeObjectRetain();
      if (v3)
      {
        uint64_t v5 = *(void *)(v0 + 104);
        unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        uint64_t v7 = *(void *)(v5 + 72);
        uint64_t v8 = v4 + v6;
        do
        {
          uint64_t v9 = *(void *)(v0 + 144);
          uint64_t v10 = *(void **)(v0 + 128);
          sub_100086294(v8, (uint64_t)v10);
          uint64_t v11 = *(void *)(v0 + 128);
          if (v9 >= *v10)
          {
            sub_1000862F8(v11);
          }
          else
          {
            sub_1000863A8(v11, *(void *)(v0 + 120));
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1000CF794(0, v2[2] + 1, 1);
              uint64_t v2 = v32[0];
            }
            unint64_t v13 = v2[2];
            unint64_t v12 = v2[3];
            if (v13 >= v12 >> 1)
            {
              sub_1000CF794(v12 > 1, v13 + 1, 1);
              uint64_t v2 = v32[0];
            }
            uint64_t v14 = *(void *)(v0 + 120);
            v2[2] = v13 + 1;
            sub_1000863A8(v14, (uint64_t)v2 + v6 + v13 * v7);
          }
          v8 += v7;
          --v3;
        }
        while (v3);
      }
      swift_bridgeObjectRelease();
      if (!v2[2])
      {
        swift_release();
        if (qword_1002910B8 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_1001EB560();
        sub_10007CFF8(v24, (uint64_t)qword_1002A4198);
        uint64_t v25 = sub_1001EB540();
        os_log_type_t v26 = sub_1001EC910();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = *(void *)(v0 + 144);
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          v32[0] = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = 136446210;
          *(void *)(v0 + 72) = v27;
          sub_100086354();
          uint64_t v29 = sub_1001EC520();
          *(void *)(v0 + 80) = sub_1001A8090(v29, v30, (uint64_t *)v32);
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "[UserNotifier] Found matching last-notification ID: %{public}s", v28, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        goto LABEL_29;
      }
    }
    uint64_t v15 = *(void *)(v0 + 160);
    v32[0] = v2;
    swift_bridgeObjectRetain();
    sub_1000861EC(v32);
    if (v15)
    {
      return swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = v32[0];
    *(void **)(v0 + 184) = v32[0];
    uint64_t v18 = v17[2];
    *(void *)(v0 + 192) = v18;
    if (v18)
    {
      uint64_t v20 = *(void *)(v0 + 104);
      uint64_t v19 = *(void *)(v0 + 112);
      int v21 = *(_DWORD *)(v20 + 80);
      *(_DWORD *)(v0 + 224) = v21;
      *(void *)(v0 + 200) = *(void *)(v20 + 72);
      *(void *)(v0 + 20_Block_object_dispose(&STACK[0x3B0], 8) = 0;
      sub_100086294((uint64_t)v17 + ((v21 + 32) & ~(unint64_t)v21), v19);
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 216) = v22;
      void *v22 = v0;
      v22[1] = sub_1000824FC;
      uint64_t v23 = *(void *)(v0 + 112);
      return sub_100083E60(v23);
    }
    swift_release();
  }
LABEL_29:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1000824FC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 22_Block_object_dispose(&STACK[0x3B0], 8) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000825FC, 0, 0);
}

uint64_t sub_1000825FC()
{
  if (*(unsigned char *)(v0 + 228) == 1)
  {
    uint64_t v1 = *(void **)(v0 + 136);
    *(void *)(v0 + 64) = **(void **)(v0 + 112);
    sub_100086354();
    *(void *)(v0 + 16) = sub_1001EC520();
    *(void *)(v0 + 24) = v2;
    uint64_t v3 = sub_1001ED0C0();
    NSString v4 = sub_1001EC340();
    [v1 setObject:v3 forKey:v4];

    swift_unknownObjectRelease();
  }
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 208) + 1;
  sub_1000862F8(*(void *)(v0 + 112));
  if (v6 == v5)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 208) + 1;
    *(void *)(v0 + 20_Block_object_dispose(&STACK[0x3B0], 8) = v10;
    sub_100086294(*(void *)(v0 + 184)+ ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))+ v9 * v10, *(void *)(v0 + 112));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1000824FC;
    uint64_t v12 = *(void *)(v0 + 112);
    return sub_100083E60(v12);
  }
}

uint64_t sub_1000827DC()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s12UserNotifierCMa()
{
  return self;
}

uint64_t sub_100082840()
{
  uint64_t result = sub_1001EC370();
  qword_100291840 = result;
  *(void *)algn_100291848 = v1;
  return result;
}

void sub_100082870()
{
  NSString v1 = sub_1001EC340();
  id v2 = [v0 stringForKey:v1];

  if (v2)
  {
    uint64_t v3 = sub_1001EC370();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    uint64_t v7 = v3 & 0xFFFFFFFFFFFFLL;
    if ((v5 & 0x2000000000000000) != 0) {
      uint64_t v8 = HIBYTE(v5) & 0xF;
    }
    else {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1000D5FC0(v3, v5, 36);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        if ((v5 & 0x2000000000000000) == 0)
        {
          if ((v3 & 0x1000000000000000) != 0) {
            uint64_t v9 = (unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v9 = (unsigned __int8 *)sub_1001ECD90();
          }
          sub_1000D5FA8(v9, v7, 36);
LABEL_47:
          swift_bridgeObjectRelease();
          return;
        }
        v27[0] = v3;
        v27[1] = v5 & 0xFFFFFFFFFFFFFFLL;
        if (v3 == 43)
        {
          if (v6)
          {
            uint64_t v16 = v6 - 1;
            if (v16)
            {
              uint64_t v17 = 0;
              uint64_t v18 = (unsigned __int8 *)v27 + 1;
              do
              {
                int v19 = *v18;
                unsigned __int8 v20 = v19 - 48;
                if ((v19 - 48) >= 0xA)
                {
                  if ((v19 - 65) < 0x1A)
                  {
                    unsigned __int8 v20 = v19 - 55;
                  }
                  else
                  {
                    if ((v19 - 97) > 0x19) {
                      goto LABEL_47;
                    }
                    unsigned __int8 v20 = v19 - 87;
                  }
                }
                uint64_t v21 = 36 * v17;
                if ((unsigned __int128)(v17 * (__int128)36) >> 64 != (36 * v17) >> 63) {
                  break;
                }
                uint64_t v17 = v21 + v20;
                if (__OFADD__(v21, v20)) {
                  break;
                }
                ++v18;
                --v16;
              }
              while (v16);
            }
            goto LABEL_47;
          }
        }
        else
        {
          if (v3 != 45)
          {
            if (v6)
            {
              uint64_t v22 = 0;
              uint64_t v23 = (unsigned __int8 *)v27;
              do
              {
                int v24 = *v23;
                unsigned __int8 v25 = v24 - 48;
                if ((v24 - 48) >= 0xA)
                {
                  if ((v24 - 65) < 0x1A)
                  {
                    unsigned __int8 v25 = v24 - 55;
                  }
                  else
                  {
                    if ((v24 - 97) > 0x19) {
                      goto LABEL_47;
                    }
                    unsigned __int8 v25 = v24 - 87;
                  }
                }
                uint64_t v26 = 36 * v22;
                if ((unsigned __int128)(v22 * (__int128)36) >> 64 != (36 * v22) >> 63) {
                  break;
                }
                uint64_t v22 = v26 + v25;
                if (__OFADD__(v26, v25)) {
                  break;
                }
                ++v23;
                --v6;
              }
              while (v6);
            }
            goto LABEL_47;
          }
          if (v6)
          {
            uint64_t v10 = v6 - 1;
            if (v10)
            {
              uint64_t v11 = 0;
              uint64_t v12 = (unsigned __int8 *)v27 + 1;
              do
              {
                int v13 = *v12;
                unsigned __int8 v14 = v13 - 48;
                if ((v13 - 48) >= 0xA)
                {
                  if ((v13 - 65) < 0x1A)
                  {
                    unsigned __int8 v14 = v13 - 55;
                  }
                  else
                  {
                    if ((v13 - 97) > 0x19) {
                      goto LABEL_47;
                    }
                    unsigned __int8 v14 = v13 - 87;
                  }
                }
                uint64_t v15 = 36 * v11;
                if ((unsigned __int128)(v11 * (__int128)36) >> 64 != (36 * v11) >> 63) {
                  break;
                }
                uint64_t v11 = v15 - v14;
                if (__OFSUB__(v15, v14)) {
                  break;
                }
                ++v12;
                --v10;
              }
              while (v10);
            }
            goto LABEL_47;
          }
          __break(1u);
        }
        __break(1u);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void *sub_100082B3C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000CF774(0, v1, 0);
    uint64_t v3 = *(void *)(_s21PriceDropNotificationVMa() - 8);
    unint64_t v4 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = *v4;
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_1000CF774(v7 > 1, v8 + 1, 1);
      }
      unint64_t v4 = (uint64_t *)((char *)v4 + v5);
      _swiftEmptyArrayStorage[2] = v8 + 1;
      _swiftEmptyArrayStorage[v8 + 4] = v6;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100082C60(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v10);
  unsigned __int8 v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1001EC7C0();
  if (!v18) {
    return sub_1001EC620();
  }
  Swift::Int v19 = v18;
  uint64_t v43 = sub_1001ECE10();
  uint64_t v32 = sub_1001ECE20();
  sub_1001ECDC0(v19);
  uint64_t v36 = v8;
  uint64_t result = sub_1001EC7A0();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1001EC800();
      uint64_t v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1001ECE00();
      sub_1001EC7F0();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_100083060(uint64_t a1)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = v1;
  return _swift_task_switch(sub_100083080, 0, 0);
}

uint64_t sub_100083080()
{
  uint64_t v1 = v0[19];
  v0[20] = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[21] = v2;
  uint64_t ObjectType = swift_getObjectType();
  v0[22] = ObjectType;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[23] = v4;
  void *v4 = v0;
  v4[1] = sub_100083140;
  return sub_1000849B0(ObjectType, v2);
}

uint64_t sub_100083140(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100083240, 0, 0);
}

uint64_t sub_100083240()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = sub_100082B3C(v0[24]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_100102EBC(v42, v2, v1);
  uint64_t v5 = v4;
  unint64_t v39 = v7;
  uint64_t v40 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = v42[1];
  v0[6] = v42[0];
  uint64_t v10 = v42[2];
  uint64_t v9 = v42[3];
  v0[7] = v8;
  v0[8] = v10;
  v0[9] = v9;
  uint64_t v38 = sub_10007DC14(&qword_100291948);
  uint64_t v41 = sub_1000815A4(&qword_100291950, &qword_100291948);
  if (sub_1001EC7B0())
  {
    uint64_t v37 = v5;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1001EB560();
    sub_10007CFF8(v11, (uint64_t)qword_1002A4198);
    swift_unknownObjectRetain_n();
    uint64_t v12 = sub_1001EB540();
    os_log_type_t v13 = sub_1001EC8E0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v36 = v3;
      unsigned __int8 v14 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)unsigned __int8 v14 = 136446210;
      swift_unknownObjectRetain();
      uint64_t v15 = sub_1001ECC00();
      unint64_t v17 = v16;
      swift_unknownObjectRelease();
      v0[17] = sub_1001A8090(v15, v17, v42);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[UserNotifier] Keeping existing requested notification(s): %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v3 = v36;
      swift_slowDealloc();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    uint64_t v5 = v37;
  }
  v0[10] = v3;
  v0[11] = v5;
  unint64_t v19 = v39;
  uint64_t v18 = v40;
  v0[12] = v40;
  v0[13] = v39;
  uint64_t v20 = v38;
  if (sub_1001EC7B0())
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1001EB560();
    sub_10007CFF8(v21, (uint64_t)qword_1002A4198);
    swift_unknownObjectRetain_n();
    uint64_t v22 = sub_1001EB540();
    os_log_type_t v23 = sub_1001EC910();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t result = swift_slowAlloc();
      v42[0] = result;
      *(_DWORD *)uint64_t v24 = 134218242;
      if (__OFSUB__(v39 >> 1, v40))
      {
        __break(1u);
        return result;
      }
      v0[15] = (v39 >> 1) - v40;
      sub_1001ECBC0();
      *(_WORD *)(v24 + 12) = 2082;
      swift_unknownObjectRetain();
      uint64_t v26 = sub_1001ECC00();
      unint64_t v28 = v27;
      swift_unknownObjectRelease();
      uint64_t v29 = v26;
      uint64_t v18 = v40;
      v0[16] = sub_1001A8090(v29, v28, v42);
      uint64_t v20 = v38;
      sub_1001ECBC0();
      unint64_t v19 = v39;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[UserNotifier] Removing %ld outdated requested notification(s): %{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }
    uint64_t v34 = v0[21];
    uint64_t v33 = v0[22];
    v0[2] = v3;
    v0[3] = v5;
    v0[4] = v18;
    v0[5] = v19;
    sub_100084C48((uint64_t)(v0 + 2), v33, v20, v34, v41, v30, v31, v32);
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_100083760(uint64_t a1)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = v1;
  return _swift_task_switch(sub_100083780, 0, 0);
}

uint64_t sub_100083780()
{
  uint64_t v1 = v0[19];
  v0[20] = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[21] = v2;
  uint64_t ObjectType = swift_getObjectType();
  v0[22] = ObjectType;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[23] = v4;
  void *v4 = v0;
  v4[1] = sub_100083840;
  return sub_100084D44(ObjectType, v2);
}

uint64_t sub_100083840(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100083940, 0, 0);
}

uint64_t sub_100083940()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = sub_100082B3C(v0[24]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_100102EBC(v42, v2, v1);
  uint64_t v5 = v4;
  unint64_t v39 = v7;
  uint64_t v40 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = v42[1];
  v0[6] = v42[0];
  uint64_t v10 = v42[2];
  uint64_t v9 = v42[3];
  v0[7] = v8;
  v0[8] = v10;
  v0[9] = v9;
  uint64_t v38 = sub_10007DC14(&qword_100291948);
  uint64_t v41 = sub_1000815A4(&qword_100291950, &qword_100291948);
  if (sub_1001EC7B0())
  {
    uint64_t v37 = v5;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1001EB560();
    sub_10007CFF8(v11, (uint64_t)qword_1002A4198);
    swift_unknownObjectRetain_n();
    uint64_t v12 = sub_1001EB540();
    os_log_type_t v13 = sub_1001EC8E0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v36 = v3;
      unsigned __int8 v14 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)unsigned __int8 v14 = 136446210;
      swift_unknownObjectRetain();
      uint64_t v15 = sub_1001ECC00();
      unint64_t v17 = v16;
      swift_unknownObjectRelease();
      v0[17] = sub_1001A8090(v15, v17, v42);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[UserNotifier] Keeping existing delivered notification(s): %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v3 = v36;
      swift_slowDealloc();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    uint64_t v5 = v37;
  }
  v0[10] = v3;
  v0[11] = v5;
  unint64_t v19 = v39;
  uint64_t v18 = v40;
  v0[12] = v40;
  v0[13] = v39;
  uint64_t v20 = v38;
  if (sub_1001EC7B0())
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1001EB560();
    sub_10007CFF8(v21, (uint64_t)qword_1002A4198);
    swift_unknownObjectRetain_n();
    uint64_t v22 = sub_1001EB540();
    os_log_type_t v23 = sub_1001EC910();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t result = swift_slowAlloc();
      v42[0] = result;
      *(_DWORD *)uint64_t v24 = 134218242;
      if (__OFSUB__(v39 >> 1, v40))
      {
        __break(1u);
        return result;
      }
      v0[15] = (v39 >> 1) - v40;
      sub_1001ECBC0();
      *(_WORD *)(v24 + 12) = 2082;
      swift_unknownObjectRetain();
      uint64_t v26 = sub_1001ECC00();
      unint64_t v28 = v27;
      swift_unknownObjectRelease();
      uint64_t v29 = v26;
      uint64_t v18 = v40;
      v0[16] = sub_1001A8090(v29, v28, v42);
      uint64_t v20 = v38;
      sub_1001ECBC0();
      unint64_t v19 = v39;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[UserNotifier] Removing %ld outdated delivered notification(s): %{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }
    uint64_t v34 = v0[21];
    uint64_t v33 = v0[22];
    v0[2] = v3;
    v0[3] = v5;
    v0[4] = v18;
    v0[5] = v19;
    sub_1000851E8((uint64_t)(v0 + 2), v33, v20, v34, v41, v30, v31, v32);
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_100083E60(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  _s21PriceDropNotificationVMa();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_100083F0C, 0, 0);
}

uint64_t sub_100083F0C()
{
  uint64_t v1 = v0[10];
  v0[14] = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[15] = v2;
  uint64_t ObjectType = swift_getObjectType();
  v0[16] = ObjectType;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[17] = v4;
  void *v4 = v0;
  v4[1] = sub_100083FCC;
  return sub_1000852E4(ObjectType, v2);
}

uint64_t sub_100083FCC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000840CC, 0, 0);
}

uint64_t sub_1000840CC()
{
  uint64_t v18 = v0;
  if (*(unsigned char *)(v0 + 160) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v1;
    void *v1 = v0;
    v1[1] = sub_100084384;
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v2 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 72);
    return sub_1000854FC(v4, v2, v3);
  }
  else
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = sub_1001EB560();
    sub_10007CFF8(v8, (uint64_t)qword_1002A4198);
    sub_100086294(v7, v6);
    uint64_t v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC910();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(void **)(v0 + 96);
    if (v11)
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v13 = 136446210;
      *(void *)(v0 + 16) = *v12;
      sub_100086354();
      uint64_t v14 = sub_1001EC520();
      *(void *)(v0 + 24) = sub_1001A8090(v14, v15, &v17);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_1000862F8((uint64_t)v12);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[UserNotifier] Unable to request notification: %{public}s, not authorized", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000862F8(*(void *)(v0 + 96));
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16(0);
  }
}

uint64_t sub_100084384()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000846C4;
  }
  else {
    uint64_t v2 = sub_100084498;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100084498()
{
  unint64_t v15 = v0;
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[13];
  uint64_t v3 = sub_1001EB560();
  sub_10007CFF8(v3, (uint64_t)qword_1002A4198);
  sub_100086294(v1, v2);
  uint64_t v4 = sub_1001EB540();
  os_log_type_t v5 = sub_1001EC910();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[13];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v14 = v9;
    v0[7] = *v7;
    sub_100086354();
    uint64_t v10 = sub_1001EC520();
    v0[8] = sub_1001A8090(v10, v11, &v14);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    sub_1000862F8((uint64_t)v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[UserNotifier] Requested notification: %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000862F8(v0[13]);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(1);
}

uint64_t sub_1000846C4()
{
  uint64_t v16 = v0;
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = sub_1001EB560();
  sub_10007CFF8(v3, (uint64_t)qword_1002A4198);
  sub_100086294(v2, v1);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_1001EB540();
  os_log_type_t v5 = sub_1001EC8F0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[11];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    v0[4] = *v7;
    sub_100086354();
    uint64_t v10 = sub_1001EC520();
    v0[5] = sub_1001A8090(v10, v11, &v15);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    sub_1000862F8((uint64_t)v7);
    *(_WORD *)(v8 + 12) = 2112;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v12;
    sub_1001ECBC0();
    void *v9 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[UserNotifier] Unable to request notification: %{public}s, error: %@", (uint8_t *)v8, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    sub_1000862F8((uint64_t)v7);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v13 = (uint64_t (*)(void))v0[1];
  return v13(0);
}

uint64_t sub_1000849B0(uint64_t a1, uint64_t a2)
{
  sub_10007DC14(&qword_100291968);
  v2[15] = swift_task_alloc();
  uint64_t v5 = _s21PriceDropNotificationVMa();
  uint8_t v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  BOOL v6 = (void *)swift_task_alloc();
  v2[20] = v6;
  *BOOL v6 = v2;
  v6[1] = sub_100084B48;
  return v8(a1, a2);
}

uint64_t sub_100084B48(uint64_t a1)
{
  *(void *)(*(void *)v1 + 16_Block_object_dispose(&STACK[0x3B0], 8) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100087B44, 0, 0);
}

uint64_t sub_100084C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = sub_100082C60((void (*)(char *, char *))sub_10008613C, 0, a3, (uint64_t)&type metadata for UserNotification.ID, (uint64_t)&type metadata for Never, a5, (uint64_t)&protocol witness table for Never, a8);
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16);
  uint64_t v11 = sub_10007DC14(&qword_100291958);
  uint64_t v12 = sub_1000815A4(&qword_100291960, &qword_100291958);
  v10(&v14, v11, v12, a2, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100084D44(uint64_t a1, uint64_t a2)
{
  sub_10007DC14(&qword_100291968);
  v2[15] = swift_task_alloc();
  uint64_t v5 = _s21PriceDropNotificationVMa();
  uint8_t v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  BOOL v6 = (void *)swift_task_alloc();
  v2[20] = v6;
  *BOOL v6 = v2;
  v6[1] = sub_100084EDC;
  return v8(a1, a2);
}

uint64_t sub_100084EDC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 16_Block_object_dispose(&STACK[0x3B0], 8) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100084FDC, 0, 0);
}

uint64_t sub_100084FDC()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 136);
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v7 = *(void *)(v0 + 120);
      uint64_t v6 = *(void *)(v0 + 128);
      long long v9 = *(_OWORD *)(v4 + 16);
      long long v8 = *(_OWORD *)(v4 + 32);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)v4;
      *(_OWORD *)(v0 + 32) = v9;
      *(_OWORD *)(v0 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v8;
      long long v11 = *(_OWORD *)(v4 + 64);
      long long v10 = *(_OWORD *)(v4 + 80);
      long long v12 = *(_OWORD *)(v4 + 48);
      *(void *)(v0 + 112) = *(void *)(v4 + 96);
      *(_OWORD *)(v0 + 80) = v11;
      *(_OWORD *)(v0 + 96) = v10;
      *(_OWORD *)(v0 + 64) = v12;
      sub_1000879B4(v0 + 16);
      sub_100085864(v0 + 16, v7);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v6) == 1)
      {
        sub_1000816A4(*(void *)(v0 + 120), &qword_100291968);
      }
      else
      {
        uint64_t v14 = *(void *)(v0 + 144);
        uint64_t v13 = *(void *)(v0 + 152);
        sub_1000863A8(*(void *)(v0 + 120), v13);
        sub_1000863A8(v13, v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = (void *)sub_1000A6898(0, v5[2] + 1, 1, (unint64_t)v5);
        }
        unint64_t v16 = v5[2];
        unint64_t v15 = v5[3];
        if (v16 >= v15 >> 1) {
          uint64_t v5 = (void *)sub_1000A6898(v15 > 1, v16 + 1, 1, (unint64_t)v5);
        }
        uint64_t v17 = *(void *)(v0 + 144);
        v5[2] = v16 + 1;
        sub_1000863A8(v17, (uint64_t)v5+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v16);
      }
      v4 += 104;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void *))(v0 + 8);
  return v18(v5);
}

uint64_t sub_1000851E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = sub_100082C60((void (*)(char *, char *))sub_10008613C, 0, a3, (uint64_t)&type metadata for UserNotification.ID, (uint64_t)&type metadata for Never, a5, (uint64_t)&protocol witness table for Never, a8);
  long long v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 40);
  uint64_t v11 = sub_10007DC14(&qword_100291958);
  uint64_t v12 = sub_1000815A4(&qword_100291960, &qword_100291958);
  v10(&v14, v11, v12, a2, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000852E4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 48) + **(int **)(a2 + 48));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1000853D4;
  return v7(a1, a2);
}

uint64_t sub_1000853D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  swift_task_dealloc();
  BOOL v8 = (unint64_t)(a3 - 1) < 2;
  if (a2 != 2) {
    BOOL v8 = 0;
  }
  BOOL v9 = (unint64_t)(a1 - 2) <= 2 && v8;
  long long v10 = *(uint64_t (**)(BOOL))(v7 + 8);
  return v10(v9);
}

uint64_t sub_1000854FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  uint8_t v4[16] = a2;
  _s21PriceDropNotificationVMa();
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_100085590, 0, 0);
}

uint64_t sub_100085590()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v7 = v0[17];
  sub_100086294(v0[15], (uint64_t)v1);
  sub_100087734(v1, (uint64_t)(v0 + 2));
  uint64_t v6 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 + 24) + **(int **)(v7 + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v2;
  void *v2 = v0;
  v2[1] = sub_1000856A8;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[16];
  return v6(v0 + 2, v4, v3);
}

uint64_t sub_1000856A8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16_Block_object_dispose(&STACK[0x3B0], 8) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000857F4, 0, 0);
  }
  else
  {
    sub_10008792C(v2 + 16);
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000857F4()
{
  sub_10008792C(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100085864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EAF60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)a1;
  unint64_t v11 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_1000874BC(v12, v11);
  if (v14)
  {
    sub_10008792C(a1);
    swift_bridgeObjectRelease();
LABEL_38:
    uint64_t v35 = _s21PriceDropNotificationVMa();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a2, 1, 1, v35);
  }
  uint64_t v41 = v13;
  uint64_t v42 = a2;
  long long v48 = *(_OWORD *)(a1 + 64);
  long long v15 = v48;
  uint64_t v16 = qword_1002910B0;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  if (v15 == xmmword_100291840)
  {
    sub_100087A3C((uint64_t)&v48);
  }
  else
  {
    char v17 = sub_1001ED080();
    sub_100087A3C((uint64_t)&v48);
    if ((v17 & 1) == 0)
    {
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1001EB560();
      sub_10007CFF8(v25, (uint64_t)qword_1002A4198);
      swift_bridgeObjectRetain();
      sub_1000879B4(a1);
      uint64_t v26 = sub_1001EB540();
      os_log_type_t v27 = sub_1001EC8F0();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        v43[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 136446466;
        swift_bridgeObjectRetain();
        *(void *)&long long v44 = sub_1001A8090(v12, v11, v43);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v28 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v44 = sub_1001A8090(v15, *((unint64_t *)&v15 + 1), v43);
        sub_1001ECBC0();
        sub_100087A3C((uint64_t)&v48);
        sub_10008792C(a1);
        sub_10008792C(a1);
        uint64_t v29 = "[PriceDropNotification] notification: %{public}s has invalid category ID: %{public}s";
LABEL_28:
        _os_log_impl((void *)&_mh_execute_header, v26, v27, v29, (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
LABEL_30:

LABEL_37:
        a2 = v42;
        goto LABEL_38;
      }
LABEL_29:
      swift_bridgeObjectRelease_n();
      sub_10008792C(a1);
      sub_10008792C(a1);
      goto LABEL_30;
    }
  }
  long long v47 = *(_OWORD *)(a1 + 80);
  long long v18 = v47;
  if (v47 != __PAIR128__(0x8000000100221840, 0xD00000000000002ELL) && (sub_1001ED080() & 1) == 0)
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1001EB560();
    sub_10007CFF8(v30, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain();
    sub_1000879B4(a1);
    uint64_t v26 = sub_1001EB540();
    os_log_type_t v27 = sub_1001EC8F0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136446466;
      swift_bridgeObjectRetain();
      *(void *)&long long v44 = sub_1001A8090(v12, v11, v43);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v44 = sub_1001A8090(v18, *((unint64_t *)&v18 + 1), v43);
      sub_1001ECBC0();
      sub_100087A3C((uint64_t)&v47);
      sub_10008792C(a1);
      sub_10008792C(a1);
      uint64_t v29 = "[PriceDropNotification] notification: %{public}s has invalid thread ID: %{public}s";
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  uint64_t v19 = *(void *)(a1 + 96);
  *(void *)&long long v46 = sub_1001EC370();
  *((void *)&v46 + 1) = v20;
  sub_1001ECCD0();
  if (*(void *)(v19 + 16) && (unint64_t v21 = sub_1001A8680((uint64_t)v43), (v22 & 1) != 0))
  {
    sub_100087AE8(*(void *)(v19 + 56) + 32 * v21, (uint64_t)&v44);
  }
  else
  {
    long long v44 = 0u;
    long long v45 = 0u;
  }
  sub_100087A68((uint64_t)v43);
  if (!*((void *)&v45 + 1))
  {
    sub_10008792C(a1);
    os_log_type_t v23 = (uint64_t *)&unk_100295B50;
    uint64_t v24 = (char *)&v44;
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_10008792C(a1);
    goto LABEL_32;
  }
  sub_1001EAF40();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10008792C(a1);
    os_log_type_t v23 = &qword_100295230;
    uint64_t v24 = v6;
LABEL_23:
    sub_1000816A4((uint64_t)v24, v23);
LABEL_32:
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1001EB560();
    sub_10007CFF8(v31, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1001EB540();
    os_log_type_t v33 = sub_1001EC8F0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)&long long v44 = sub_1001A8090(v12, v11, v43);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[UserNotifier] notification request: %{public}s does not contain a (valid) deep-link URL", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_37;
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v37(v10, v6, v7);
  long long v38 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)(a1 + 16);
  long long v44 = v38;
  long long v46 = *(_OWORD *)(a1 + 48);
  uint64_t v39 = _s21PriceDropNotificationVMa();
  uint64_t v40 = v42;
  v37((char *)(v42 + *(int *)(v39 + 32)), v10, v7);
  sub_100087ABC((uint64_t)v43);
  sub_100087ABC((uint64_t)&v44);
  sub_100087ABC((uint64_t)&v46);
  sub_10008792C(a1);
  *(void *)uint64_t v40 = v41;
  *(_OWORD *)(v40 + _Block_object_dispose(&STACK[0x3B0], 8) = *(_OWORD *)v43;
  *(_OWORD *)(v40 + 24) = v44;
  *(_OWORD *)(v40 + 40) = v46;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v40, 0, 1, v39);
}

uint64_t sub_10008613C@<X0>(void *a1@<X8>)
{
  return sub_100086154(a1);
}

uint64_t sub_100086154@<X0>(void *a1@<X8>)
{
  sub_100086354();
  v3._countAndFlagsBits = sub_1001EC520();
  sub_1001EC490(v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 0xD000000000000035;
  a1[1] = 0x8000000100221800;
  return result;
}

Swift::Int sub_1000861EC(void **a1)
{
  uint64_t v2 = *(void *)(_s21PriceDropNotificationVMa() - 8);
  Swift::String v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v3 = (void *)sub_1001CFD30(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10008640C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_100086294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21PriceDropNotificationVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000862F8(uint64_t a1)
{
  uint64_t v2 = _s21PriceDropNotificationVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100086354()
{
  unint64_t result = qword_100291928;
  if (!qword_100291928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100291928);
  }
  return result;
}

uint64_t sub_1000863A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s21PriceDropNotificationVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Int sub_10008640C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s21PriceDropNotificationVMa();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v129 = (uint64_t)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v139 = (uint64_t)&v123 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  long long v136 = (uint64_t *)((char *)&v123 - v10);
  __chkstk_darwin(v9);
  long long v135 = (uint64_t *)((char *)&v123 - v11);
  Swift::Int v12 = a1[1];
  Swift::Int result = sub_1001ED030(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_142;
    }
    if (v12) {
      return sub_100086DDC(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_150;
  }
  Swift::Int v125 = result;
  if (v12 < 2)
  {
    long long v18 = (char *)_swiftEmptyArrayStorage;
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    v124 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_108:
      if (v20 >= 2)
      {
        uint64_t v117 = *a1;
        do
        {
          unint64_t v118 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_137;
          }
          if (!v117) {
            goto LABEL_149;
          }
          uint64_t v119 = *(void *)&v18[16 * v118 + 32];
          uint64_t v120 = *(void *)&v18[16 * v20 + 24];
          sub_100087034(v117 + *(void *)(v132 + 72) * v119, v117 + *(void *)(v132 + 72) * *(void *)&v18[16 * v20 + 16], v117 + *(void *)(v132 + 72) * v120, v131);
          if (v2) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v18 = sub_1001CEE74((uint64_t)v18);
          }
          if (v118 >= *((void *)v18 + 2)) {
            goto LABEL_139;
          }
          id v121 = &v18[16 * v118 + 32];
          *(void *)id v121 = v119;
          *((void *)v121 + 1) = v120;
          unint64_t v122 = *((void *)v18 + 2);
          if (v20 > v122) {
            goto LABEL_140;
          }
          memmove(&v18[16 * v20 + 16], &v18[16 * v20 + 32], 16 * (v122 - v20));
          *((void *)v18 + 2) = v122 - 1;
          unint64_t v20 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      v124[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1001EC630();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    v124 = (void *)v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  Swift::Int v19 = 0;
  long long v18 = (char *)_swiftEmptyArrayStorage;
  long long v138 = a1;
  while (1)
  {
    Swift::Int v21 = v19;
    Swift::Int v22 = v19 + 1;
    if (v19 + 1 >= v12) {
      goto LABEL_39;
    }
    uint64_t v127 = v2;
    uint64_t v23 = *a1;
    Swift::Int v24 = *(void *)(v132 + 72);
    uint64_t v25 = v135;
    sub_100086294(*a1 + v24 * v22, (uint64_t)v135);
    uint64_t v26 = v23 + v24 * v21;
    Swift::Int v130 = v21;
    os_log_type_t v27 = v136;
    sub_100086294(v26, (uint64_t)v136);
    Swift::Int v140 = *v25;
    Swift::Int v137 = *v27;
    uint64_t v28 = (uint64_t)v27;
    Swift::Int v21 = v130;
    sub_1000862F8(v28);
    sub_1000862F8((uint64_t)v25);
    Swift::Int v29 = v21 + 2;
    uint64_t v134 = v23;
    Swift::Int v141 = v24;
    if (v21 + 2 >= v12)
    {
      Swift::Int v32 = v21 + 2;
      Swift::Int v39 = v24;
    }
    else
    {
      id v126 = v18;
      Swift::Int v30 = v24 * v22;
      uint64_t v31 = v23;
      Swift::Int v32 = v29;
      uint64_t v33 = v24 * v29;
      while (1)
      {
        Swift::Int v34 = v12;
        int v35 = v140 < v137;
        uint64_t v36 = v135;
        sub_100086294(v31 + v33, (uint64_t)v135);
        uint64_t v37 = v136;
        sub_100086294(v31 + v30, (uint64_t)v136);
        int v38 = *v36 >= *v37;
        sub_1000862F8((uint64_t)v37);
        sub_1000862F8((uint64_t)v36);
        if (v35 == v38) {
          break;
        }
        Swift::Int v39 = v141;
        v31 += v141;
        ++v32;
        Swift::Int v12 = v34;
        if (v34 == v32)
        {
          Swift::Int v32 = v34;
          a1 = v138;
          long long v18 = v126;
          Swift::Int v21 = v130;
          goto LABEL_23;
        }
      }
      a1 = v138;
      long long v18 = v126;
      Swift::Int v21 = v130;
      Swift::Int v12 = v34;
      Swift::Int v39 = v141;
    }
LABEL_23:
    if (v140 >= v137) {
      break;
    }
    if (v32 < v21) {
      goto LABEL_143;
    }
    Swift::Int v22 = v32;
    if (v21 >= v32)
    {
      uint64_t v2 = v127;
LABEL_39:
      if (v22 >= v12) {
        goto LABEL_59;
      }
      goto LABEL_40;
    }
    Swift::Int v140 = v12;
    id v126 = v18;
    uint64_t v40 = 0;
    uint64_t v41 = v39 * (v32 - 1);
    Swift::Int v42 = v32 * v39;
    uint64_t v43 = v21 * v39;
    do
    {
      if (v21 != v22 + v40 - 1)
      {
        uint64_t v44 = v134;
        if (!v134) {
          goto LABEL_148;
        }
        unint64_t v45 = v134 + v43;
        sub_1000863A8(v134 + v43, v129);
        if (v43 < v41 || v45 >= v44 + v42)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v43 != v41)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_1000863A8(v129, v44 + v41);
        Swift::Int v22 = v32;
        Swift::Int v39 = v141;
      }
      ++v21;
      --v40;
      v41 -= v39;
      v42 -= v39;
      v43 += v39;
    }
    while (v21 < v22 + v40);
    a1 = v138;
    long long v18 = v126;
    uint64_t v2 = v127;
    Swift::Int v21 = v130;
    Swift::Int v12 = v140;
    if (v22 < v140) {
      goto LABEL_40;
    }
LABEL_59:
    if (v22 < v21) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v137 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      long long v18 = sub_1001CE928(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v66 = *((void *)v18 + 2);
    unint64_t v65 = *((void *)v18 + 3);
    unint64_t v20 = v66 + 1;
    if (v66 >= v65 >> 1) {
      long long v18 = sub_1001CE928((char *)(v65 > 1), v66 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    unint64_t v67 = v18 + 32;
    uint64_t v68 = &v18[16 * v66 + 32];
    Swift::Int v69 = v137;
    *(void *)uint64_t v68 = v21;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v75 = &v67[16 * v20];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_125;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_126;
          }
          unint64_t v82 = v20 - 2;
          id v83 = &v67[16 * v20 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_128;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_131;
          }
          if (v87 >= v78)
          {
            v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_135;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_96;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v99 = *((void *)v18 + 4);
            uint64_t v100 = *((void *)v18 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_90;
          }
          uint64_t v72 = *((void *)v18 + 4);
          uint64_t v71 = *((void *)v18 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_127;
        }
        unint64_t v82 = v20 - 2;
        id v88 = &v67[16 * v20 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_130;
        }
        long long v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_133;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_134;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_96:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v93) {
          goto LABEL_129;
        }
        v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_132;
        }
        if (v104 < v92) {
          goto LABEL_14;
        }
LABEL_98:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v20)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        v111 = v18;
        v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        id v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_100087034(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v2) {
          goto LABEL_119;
        }
        if (v115 < v113) {
          goto LABEL_122;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_123;
        }
        *(void *)v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_124;
        }
        long long v18 = v111;
        unint64_t v20 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    Swift::Int v12 = a1[1];
    Swift::Int v19 = v137;
    if (v137 >= v12) {
      goto LABEL_108;
    }
  }
  Swift::Int v22 = v32;
  uint64_t v2 = v127;
  if (v22 >= v12) {
    goto LABEL_59;
  }
LABEL_40:
  if (__OFSUB__(v22, v21)) {
    goto LABEL_141;
  }
  if (v22 - v21 >= v125) {
    goto LABEL_59;
  }
  if (__OFADD__(v21, v125)) {
    goto LABEL_144;
  }
  if (v21 + v125 >= v12) {
    Swift::Int v46 = v12;
  }
  else {
    Swift::Int v46 = v21 + v125;
  }
  if (v46 >= v21)
  {
    if (v22 != v46)
    {
      Swift::Int v130 = v21;
      id v126 = v18;
      uint64_t v127 = v2;
      uint64_t v47 = *(void *)(v132 + 72);
      uint64_t v48 = v47 * (v22 - 1);
      uint64_t v134 = v47;
      Swift::Int v49 = v22 * v47;
      Swift::Int v128 = v46;
      do
      {
        uint64_t v51 = 0;
        Swift::Int v52 = v130;
        Swift::Int v137 = v22;
        while (1)
        {
          Swift::Int v140 = v52;
          long long v53 = v138;
          uint64_t v54 = *v138;
          Swift::Int v55 = v49;
          uint64_t v56 = v49 + v51 + *v138;
          unint64_t v57 = v135;
          sub_100086294(v56, (uint64_t)v135);
          uint64_t v58 = v48;
          uint64_t v59 = v48 + v51 + v54;
          unsigned int v60 = v136;
          sub_100086294(v59, (uint64_t)v136);
          Swift::Int v141 = *v57;
          Swift::Int v61 = *v60;
          sub_1000862F8((uint64_t)v60);
          sub_1000862F8((uint64_t)v57);
          if (v141 >= v61) {
            break;
          }
          uint64_t v62 = *v53;
          if (!*v53) {
            goto LABEL_146;
          }
          Swift::Int v49 = v55;
          uint64_t v48 = v58;
          uint64_t v63 = v62 + v58 + v51;
          sub_1000863A8(v62 + v55 + v51, v139);
          swift_arrayInitWithTakeFrontToBack();
          sub_1000863A8(v139, v63);
          v51 -= v134;
          Swift::Int v52 = v140 + 1;
          Swift::Int v50 = v137;
          if (v137 == v140 + 1) {
            goto LABEL_50;
          }
        }
        Swift::Int v50 = v137;
        uint64_t v48 = v58;
        Swift::Int v49 = v55;
LABEL_50:
        Swift::Int v22 = v50 + 1;
        v48 += v134;
        v49 += v134;
      }
      while (v22 != v128);
      Swift::Int v22 = v128;
      long long v18 = v126;
      uint64_t v2 = v127;
      a1 = v138;
      Swift::Int v21 = v130;
    }
    goto LABEL_59;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = sub_1001ECE80();
  __break(1u);
  return result;
}

uint64_t sub_100086DDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v28 = a1;
  uint64_t v29 = _s21PriceDropNotificationVMa();
  uint64_t v7 = __chkstk_darwin(v29);
  uint64_t v32 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (uint64_t *)((char *)&v26 - v10);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (uint64_t *)((char *)&v26 - v14);
  uint64_t v31 = a3;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v34 = v16 * (v31 - 1);
    uint64_t v30 = v16;
    uint64_t v33 = v16 * v31;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v28;
    while (1)
    {
      Swift::Int v19 = a4;
      uint64_t v20 = *a4;
      sub_100086294(v33 + v17 + v20, (uint64_t)v15);
      sub_100086294(v34 + v17 + v20, (uint64_t)v11);
      uint64_t v21 = *v15;
      uint64_t v22 = *v11;
      sub_1000862F8((uint64_t)v11);
      uint64_t result = sub_1000862F8((uint64_t)v15);
      BOOL v23 = v21 < v22;
      a4 = v19;
      if (!v23)
      {
LABEL_4:
        v34 += v30;
        v33 += v30;
        if (++v31 == v27) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v24 = *v19;
      if (!*v19) {
        break;
      }
      uint64_t v25 = v24 + v34 + v17;
      sub_1000863A8(v24 + v33 + v17, v32);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1000863A8(v32, v25);
      v17 -= v30;
      ++v18;
      a4 = v19;
      if (v31 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100087034(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v49 = _s21PriceDropNotificationVMa();
  uint64_t v8 = __chkstk_darwin(v49);
  Swift::Int v50 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v46 - v10);
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v53 = a1;
  unint64_t v52 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v18;
      unint64_t v51 = a4 + v18;
      unint64_t v53 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v31 = -v13;
        unint64_t v47 = a4;
        unint64_t v48 = a1;
        do
        {
          unint64_t v32 = a3 + v31;
          sub_100086294(v29 + v31, (uint64_t)v11);
          unint64_t v33 = a2 + v31;
          unint64_t v34 = a3;
          int v35 = v11;
          uint64_t v36 = v50;
          sub_100086294(a2 + v31, (uint64_t)v50);
          uint64_t v37 = *v35;
          uint64_t v38 = *v36;
          uint64_t v39 = (uint64_t)v36;
          uint64_t v11 = v35;
          sub_1000862F8(v39);
          sub_1000862F8((uint64_t)v35);
          if (v37 >= v38)
          {
            unint64_t v43 = v51;
            v51 += v31;
            if (v34 < v43 || v32 >= v43)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v33 = a2;
              unint64_t v41 = v47;
              unint64_t v42 = v48;
            }
            else
            {
              unint64_t v42 = v48;
              if (v34 != v43) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v33 = a2;
              unint64_t v41 = v47;
            }
          }
          else
          {
            if (v34 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v41 = v47;
              unint64_t v42 = v48;
            }
            else
            {
              BOOL v40 = v34 == a2;
              unint64_t v41 = v47;
              unint64_t v42 = v48;
              if (!v40) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v53 += v31;
          }
          unint64_t v29 = v51;
          if (v51 <= v41) {
            break;
          }
          a2 = v33;
          a3 = v32;
        }
        while (v33 > v42);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v51 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v21 = v50;
      do
      {
        sub_100086294(a2, (uint64_t)v11);
        sub_100086294(a4, (uint64_t)v21);
        uint64_t v22 = *v11;
        uint64_t v23 = *v21;
        sub_1000862F8((uint64_t)v21);
        sub_1000862F8((uint64_t)v11);
        unint64_t v24 = v53;
        if (v22 >= v23)
        {
          unint64_t v27 = v52 + v13;
          if (v53 < v52 || v53 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v53 != v52)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v52 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v13;
          if (v53 < a2 || v53 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v53 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v53 = v24 + v13;
        a4 = v52;
        if (v52 >= v19) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_69:
    sub_1001CEA24(&v53, &v52, (uint64_t *)&v51);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000874BC(uint64_t a1, unint64_t a2)
{
  v17._countAndFlagsBits = 0xD000000000000035;
  v17._object = (void *)0x8000000100221800;
  if (!sub_1001EC510(v17))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1001EC450();
  sub_100188DA4(v4, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1001EC410();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1000D6A94(v5, v7);
  if (v9)
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1001EB560();
    sub_10007CFF8(v11, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1001EB540();
    os_log_type_t v13 = sub_1001EC8F0();
    if (os_log_type_enabled(v12, v13))
    {
      int64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)int64_t v14 = 136446210;
      swift_bridgeObjectRetain();
      sub_1001A8090(a1, a2, &v16);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "[UserNotifier] notification request: %{public}s has correct prefix, but does not contain a (valid) suffix", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }

    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v10 = v8;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100087734@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100086354();
  v17._countAndFlagsBits = sub_1001EC520();
  sub_1001EC490(v17);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[4];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[1];
  uint64_t v6 = a1[6];
  uint64_t v14 = a1[5];
  uint64_t v7 = qword_1002910B0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  long long v8 = xmmword_100291840;
  sub_10007DC14(&qword_100294FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215320;
  sub_1001EC370();
  swift_bridgeObjectRetain();
  sub_1001ECCD0();
  _s21PriceDropNotificationVMa();
  uint64_t v10 = sub_1001EAE90();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  unint64_t v12 = sub_100120FC0(inited);
  uint64_t result = sub_1000862F8((uint64_t)a1);
  *(void *)a2 = 0xD000000000000035;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = 0x8000000100221800;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v14;
  *(void *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 64) = v8;
  *(void *)(a2 + 80) = 0xD00000000000002ELL;
  *(void *)(a2 + 8_Block_object_dispose(&STACK[0x3B0], 8) = 0x8000000100221840;
  *(void *)(a2 + 96) = v12;
  return result;
}

uint64_t sub_10008792C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000879B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100087A3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100087A68(uint64_t a1)
{
  return a1;
}

uint64_t sub_100087ABC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100087AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

char *sub_100087B48()
{
  uint64_t v1 = OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService);
  }
  else
  {
    uint64_t v4 = v0;
    *(unsigned char *)(v0 + OBJC_IVAR___BDSReadingHistoryServiceManager_serviceDirty) = 1;
    uint64_t v5 = [objc_allocWithZone((Class)BDSOSTransaction) initWithTransactionName:"com.apple.ibooks.ReadingHistoryService.lifetime"];
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR___BDSReadingHistoryServiceManager_readingHistoryCloudDataManager);
    uint64_t v7 = *(void **)(v4 + OBJC_IVAR___BDSReadingHistoryServiceManager_readingHistoryCoherenceContext);
    long long v8 = *(void **)(v4 + OBJC_IVAR___BDSReadingHistoryServiceManager_transactionProvider);
    char v9 = (char *)objc_allocWithZone((Class)sub_10007DC14((uint64_t *)&unk_100291F30));
    uint64_t v10 = sub_1000919F4(v6, v7, v8, v9);
    uint64_t v11 = *(void **)(v4 + OBJC_IVAR___BDSReadingHistoryServiceManager_readingGoalsService);
    uint64_t v12 = *(void *)(v4 + OBJC_IVAR___BDSReadingHistoryServiceManager_readingHistoryServiceContext);
    uint64_t v13 = *(void *)(v4 + OBJC_IVAR___BDSReadingHistoryServiceManager_viewStateChangeHandler);
    objc_allocWithZone((Class)type metadata accessor for ReadingHistoryService());
    swift_unknownObjectRetain();
    id v14 = v11;
    uint64_t v15 = v10;
    swift_retain();
    uint64_t v16 = v5;
    Swift::String v17 = sub_1000DE9B4(v14, v15, v12, v5, v13);
    uint64_t v18 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v17;
    uint64_t v3 = v17;

    ReadingHistoryService.setEnableCloudSync(_:)(*(unsigned char *)(v4
                                                          + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceEnableCloudSync));

    uint64_t v2 = 0;
  }
  id v19 = v2;
  return v3;
}

char *ReadingHistoryServiceManager.__allocating_init(readingGoalsService:transactionProvider:viewStateChangeHandler:)(void *a1, void *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return ReadingHistoryServiceManager.init(readingGoalsService:transactionProvider:viewStateChangeHandler:)(a1, a2, a3);
}

char *ReadingHistoryServiceManager.init(readingGoalsService:transactionProvider:viewStateChangeHandler:)(void *a1, void *a2, uint64_t a3)
{
  id v51 = a2;
  uint64_t v52 = a3;
  uint64_t v49 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = sub_1001EC9C0();
  uint64_t v6 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  long long v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR___BDSReadingHistoryServiceManager_readingHistoryCoherenceContext;
  uint64_t v10 = v3;
  uint64_t v11 = (void *)sub_10007D428();
  *(void *)&v3[v9] = v11;
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService] = 0;
  v10[OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceEnableCloudSync] = 0;
  uint64_t v47 = OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceAccessQueue;
  id v48 = v11;
  v43[1] = sub_100081668(0, (unint64_t *)&qword_1002919A0);
  unsigned int v45 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v44 = *(void (**)(char *))(v6 + 104);
  v44(v8);
  sub_1001EBA80();
  aBlock = (void **)_swiftEmptyArrayStorage;
  v43[0] = sub_10009343C((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  uint64_t v12 = sub_1001ECA00();
  uint64_t v13 = v46;
  *(void *)&v10[v47] = v12;
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCount] = 0;
  uint64_t v47 = OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCountAccessQueue;
  ((void (*)(char *, void, uint64_t))v44)(v8, v45, v13);
  sub_1001EBA80();
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_1001ECC30();
  *(void *)&v10[v47] = sub_1001ECA00();
  v10[OBJC_IVAR___BDSReadingHistoryServiceManager_serviceDirty] = 0;
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager_teardownServiceTimer] = 0;
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager_teardownServiceTimout] = 0x403E000000000000;
  id v14 = v49;
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager_readingGoalsService] = v49;
  id v16 = v51;
  uint64_t v15 = v52;
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager_transactionProvider] = v51;
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager_viewStateChangeHandler] = v15;
  Swift::String v17 = self;
  swift_unknownObjectRetain();
  id v18 = v48;
  id v19 = v16;
  id v51 = v14;
  id v20 = [v17 sharedInstance];
  id v21 = sub_10008E4E0();
  id v22 = objc_allocWithZone((Class)sub_10007DC14(&qword_100291A00));
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager_readingHistoryCloudDataManager] = sub_1000924CC(v20, v18, v21, v19, v22);
  type metadata accessor for ReadingHistoryServiceContext();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = 0xD000000000000029;
  v23[3] = 0x8000000100221A80;
  void v23[4] = 0xD000000000000029;
  v23[5] = 0x8000000100221AB0;
  v23[6] = 0xD000000000000031;
  v23[7] = 0x8000000100221AE0;
  v23[8] = v19;
  *(void *)&v10[OBJC_IVAR___BDSReadingHistoryServiceManager_readingHistoryServiceContext] = v23;
  id v24 = v19;

  v59.receiver = v10;
  v59.super_class = ObjectType;
  unint64_t v25 = (char *)objc_msgSendSuper2(&v59, "init");
  uint64_t v26 = *(void **)&v25[OBJC_IVAR___BDSReadingHistoryServiceManager_transactionProvider];
  unint64_t v27 = v25;
  [v26 setDelegate:v27];
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v29 = objc_allocWithZone((Class)BUCoalescingCallBlock);
  unint64_t v57 = sub_100092A00;
  uint64_t v58 = (void *)v28;
  aBlock = _NSConcreteStackBlock;
  uint64_t v54 = 1107296256;
  Swift::Int v55 = sub_1000916AC;
  uint64_t v56 = &unk_1002625C0;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_retain();
  NSString v31 = sub_1001EC340();
  id v32 = [v29 initWithNotifyBlock:v30 blockDescription:v31];

  _Block_release(v30);
  swift_release();
  swift_release();
  [v32 setCoalescingDelay:30.0];
  unint64_t v33 = *(void **)&v27[OBJC_IVAR___BDSReadingHistoryServiceManager_teardownServiceTimer];
  *(void *)&v27[OBJC_IVAR___BDSReadingHistoryServiceManager_teardownServiceTimer] = v32;
  id v34 = v32;

  int v35 = *(char **)&v27[OBJC_IVAR___BDSReadingHistoryServiceManager_readingHistoryCloudDataManager];
  *(void *)&v35[qword_1002A4308 + 8] = &off_100262840;
  swift_unknownObjectWeakAssign();
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v37 = *(void **)&v35[qword_100296A00];
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = (void *)swift_allocObject();
  v39[2] = v38;
  v39[3] = sub_100092A20;
  void v39[4] = v36;
  unint64_t v57 = sub_100092A2C;
  uint64_t v58 = v39;
  aBlock = _NSConcreteStackBlock;
  uint64_t v54 = 1107296256;
  Swift::Int v55 = sub_100090AB4;
  uint64_t v56 = &unk_100262638;
  BOOL v40 = _Block_copy(&aBlock);
  unint64_t v41 = v35;
  swift_retain_n();
  swift_release();
  [v37 cloudDataWithPredicate:0 sortDescriptors:0 completion:v40];
  _Block_release(v40);

  swift_release_n();
  swift_unknownObjectRelease();
  return v27;
}

uint64_t sub_1000884F4(uint64_t (*a1)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_100088564();
  }
  return a1();
}

void sub_100088564()
{
  char v19 = 0;
  uint64_t v1 = *(NSObject **)&v0[OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCountAccessQueue];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v19;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100093D10;
  *(void *)(v3 + 24) = v2;
  Swift::String v17 = sub_100093DC8;
  uint64_t v18 = v3;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100089470;
  id v16 = &unk_1002630C0;
  uint64_t v4 = _Block_copy(&aBlock);
  uint64_t v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v19 == 1)
  {
    sub_1001EC910();
    if (qword_1002910E8 == -1)
    {
LABEL_4:
      id v6 = (id)qword_100293A68;
      sub_1001EB530();
      swift_release();

      return;
    }
LABEL_8:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v7 = *(NSObject **)&v5[OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceAccessQueue];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100093D70;
  *(void *)(v9 + 24) = v8;
  Swift::String v17 = sub_100093DC8;
  uint64_t v18 = v9;
  aBlock = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100089470;
  id v16 = &unk_100263138;
  uint64_t v10 = _Block_copy(&aBlock);
  uint64_t v11 = v5;
  swift_retain();
  swift_release();
  dispatch_sync(v7, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
}

void sub_10008887C(void *a1)
{
  uint64_t v2 = sub_1001EBA60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EBAA0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (char *)Strong;
    if (a1)
    {
      id v15 = a1;
      sub_1000B68E0(v12);
      if (sub_100088D38((uint64_t)v12, 0xD000000000000014, 0x8000000100222440))
      {
        uint64_t v23 = *(void *)&v14[OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceAccessQueue];
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v14;
        aBlock[4] = sub_100093D88;
        aBlock[5] = v16;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000DB998;
        aBlock[3] = &unk_100263188;
        id v21 = _Block_copy(aBlock);
        id v22 = v14;
        sub_1001EBA80();
        id v24 = _swiftEmptyArrayStorage;
        sub_10009343C((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        id v20 = v15;
        sub_10007DC14((uint64_t *)&unk_100291BF0);
        sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
        sub_1001ECC30();
        Swift::String v17 = v21;
        sub_1001EC9F0();
        _Block_release(v17);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        sub_1000816A4((uint64_t)v12, (uint64_t *)&unk_100291B90);

        swift_release();
      }
      else
      {
        sub_1000816A4((uint64_t)v12, (uint64_t *)&unk_100291B90);
      }
    }
    else
    {
      sub_1001EC8F0();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      id v19 = (id)qword_100293A68;
      sub_1001EB530();
    }
  }
  else
  {
    sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v18 = (id)qword_100293A68;
    sub_1001EB530();
  }
}

uint64_t sub_100088D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = a3;
  uint64_t v44 = a2;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unsigned int v45 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (uint64_t *)((char *)&v44 - v11);
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (uint64_t *)((char *)&v44 - v14);
  __chkstk_darwin(v13);
  Swift::String v17 = (char *)&v44 - v16;
  sub_10013FFB0((uint64_t)&v44 - v16);
  sub_1000936F8(a1, (uint64_t)v15, (uint64_t *)&unk_100291B90);
  uint64_t v18 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  if (v49((char *)v15, 1, v18) == 1)
  {
    sub_1000816A4((uint64_t)v15, (uint64_t *)&unk_100291B90);
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v19 = *v15;
    uint64_t v20 = v15[1];
    swift_bridgeObjectRetain();
    sub_100093C10((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  }
  uint64_t v47 = v17;
  sub_1000936F8((uint64_t)v17, (uint64_t)v12, (uint64_t *)&unk_100291B90);
  if (v49((char *)v12, 1, v18) == 1)
  {
    sub_1000816A4((uint64_t)v12, (uint64_t *)&unk_100291B90);
    if (!v20) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  uint64_t v21 = *v12;
  uint64_t v22 = v12[1];
  swift_bridgeObjectRetain();
  sub_100093C10((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  if (!v20)
  {
    if (!v22) {
      goto LABEL_19;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    int v25 = 1;
    goto LABEL_17;
  }
  if (!v22) {
    goto LABEL_16;
  }
  if (v19 != v21 || v20 != v22)
  {
    int v24 = sub_1001ED080();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v25 = v24 ^ 1;
LABEL_17:
    int v48 = v25;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_19:
  int v48 = 0;
LABEL_20:
  uint64_t v26 = v44;
  LODWORD(v44) = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  unint64_t v27 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100215850;
  *(void *)(v28 + 56) = &type metadata for String;
  unint64_t v29 = sub_10007DC58();
  *(void *)(v28 + 64) = v29;
  uint64_t v30 = v46;
  *(void *)(v28 + 32) = v26;
  *(void *)(v28 + 40) = v30;
  *(void *)(v28 + 96) = &type metadata for Bool;
  *(void *)(v28 + 104) = &protocol witness table for Bool;
  *(unsigned char *)(v28 + 72) = v48 & 1;
  sub_1000936F8(a1, (uint64_t)v9, (uint64_t *)&unk_100291B90);
  unsigned int v31 = v49(v9, 1, v18);
  id v32 = v27;
  swift_bridgeObjectRetain();
  if (v31 == 1)
  {
    sub_1000816A4((uint64_t)v9, (uint64_t *)&unk_100291B90);
    unint64_t v33 = (uint64_t *)(v28 + 112);
    *(void *)(v28 + 136) = &type metadata for String;
    *(void *)(v28 + 144) = v29;
  }
  else
  {
    uint64_t v34 = CRDTModelRevisionInfo.description.getter();
    unint64_t v36 = v35;
    sub_100093C10((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
    unint64_t v33 = (uint64_t *)(v28 + 112);
    *(void *)(v28 + 136) = &type metadata for String;
    *(void *)(v28 + 144) = v29;
    if (v36)
    {
      *unint64_t v33 = v34;
      uint64_t v37 = (uint64_t)v47;
      uint64_t v38 = (uint64_t)v45;
      goto LABEL_27;
    }
  }
  uint64_t v38 = (uint64_t)v45;
  *unint64_t v33 = 7104878;
  unint64_t v36 = 0xE300000000000000;
  uint64_t v37 = (uint64_t)v47;
LABEL_27:
  *(void *)(v28 + 120) = v36;
  sub_1000936F8(v37, v38, (uint64_t *)&unk_100291B90);
  if (v49((char *)v38, 1, v18) == 1)
  {
    sub_1000816A4(v38, (uint64_t *)&unk_100291B90);
    uint64_t v39 = (uint64_t *)(v28 + 152);
    *(void *)(v28 + 176) = &type metadata for String;
    *(void *)(v28 + 184) = v29;
LABEL_32:
    *uint64_t v39 = 7104878;
    unint64_t v42 = 0xE300000000000000;
    goto LABEL_33;
  }
  uint64_t v40 = CRDTModelRevisionInfo.description.getter();
  unint64_t v42 = v41;
  sub_100093C10(v38, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  uint64_t v39 = (uint64_t *)(v28 + 152);
  *(void *)(v28 + 176) = &type metadata for String;
  *(void *)(v28 + 184) = v29;
  if (!v42)
  {
    uint64_t v37 = (uint64_t)v47;
    goto LABEL_32;
  }
  *uint64_t v39 = v40;
  uint64_t v37 = (uint64_t)v47;
LABEL_33:
  *(void *)(v28 + 160) = v42;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  sub_1000816A4(v37, (uint64_t *)&unk_100291B90);
  return v48 & 1;
}

id ReadingHistoryServiceManager.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_100088564();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_100089448(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100089470(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_100089498(uint64_t a1)
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v2 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v3 = OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService;
  uint64_t v4 = *(char **)(a1 + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService);
  id v5 = v4;
  if (v4) {
    uint64_t v4 = (char *)*(id *)&v4[OBJC_IVAR___BDSReadingHistoryService_lifetimeTransaction];
  }
  *(void *)(a1 + v3) = 0;
}

void ReadingHistoryServiceManager.clearData(completionHandler:)(uint64_t a1, uint64_t a2)
{
}

void ReadingHistoryServiceManager.clearDefaultsCachedData(completionHandler:)(uint64_t a1, uint64_t a2)
{
}

void ReadingHistoryServiceManager.clearDate(_:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v6 = (id)qword_100293A68;
  sub_1001EB530();

  __chkstk_darwin(v7);
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  ReadingHistoryService.clearDate(_:completionHandler:)(a1, a2, a3);
}

void ReadingHistoryServiceManager.clearToday(completionHandler:)(uint64_t a1, uint64_t a2)
{
}

void sub_100089C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v9 = (id)qword_100293A68;
  sub_1001EB530();

  __chkstk_darwin(v10);
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  a6(a1, a2);
}

void ReadingHistoryServiceManager.handleSyncFileChange(syncVersionInfo:updateInfo:completionHandler:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v12 = (id)qword_100293A68;
  sub_1001EB530();

  __chkstk_darwin(v13);
  v18[-2] = v4;
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  uint64_t v14 = (void *)v18[1];
  if (!a1)
  {
    uint64_t v17 = type metadata accessor for CRDTModelSyncVersion();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
    if (a2) {
      goto LABEL_5;
    }
LABEL_7:
    id v16 = 0;
    goto LABEL_8;
  }
  id v15 = a1;
  static CRDTModelSyncVersion.fromInfo(_:)(v15, (uint64_t)v11);

  if (!a2) {
    goto LABEL_7;
  }
LABEL_5:
  id v16 = [a2 update];
LABEL_8:
  ReadingHistoryService.handleSyncFileChange(syncVersion:update:completionHandler:)((uint64_t)v11, v16, a3, a4);

  sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_100293160);
}

void ReadingHistoryServiceManager.increment(date:by:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v8 = (id)qword_100293A68;
  sub_1001EB530();

  __chkstk_darwin(v9);
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  ReadingHistoryService.increment(date:by:completionHandler:)(a1, a2, a3, a4);
}

void ReadingHistoryServiceManager.readingHistoryStateInfo(rangeStart:rangeEnd:currentTime:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v10 = (id)qword_100293A68;
  sub_1001EB530();

  __chkstk_darwin(v11);
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  ReadingHistoryService.readingHistoryStateInfo(rangeStart:rangeEnd:currentTime:completionHandler:)(a1, a2, a3, a4, a5);
}

BDSReadingHistoryServiceStatusInfo __swiftcall ReadingHistoryServiceManager.serviceStatusInfo()()
{
  id v16 = [objc_allocWithZone((Class)BDSReadingHistoryServiceStatusInfo) initWithIsLoaded:0];
  uint64_t v1 = *(NSObject **)(v0 + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceAccessQueue);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = &v16;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_100092A88;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = sub_100092AA0;
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  aBlock[3] = &unk_1002626B0;
  id v5 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v1, v5);
  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v1)
  {
    __break(1u);
    goto LABEL_5;
  }
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
LABEL_5:
  }
    swift_once();
  id v6 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100215320;
  id v8 = v16;
  *(void *)(v7 + 56) = sub_100081668(0, (unint64_t *)&unk_100293170);
  *(void *)(v7 + 64) = sub_100092AC8();
  *(void *)(v7 + 32) = v8;
  id v9 = v6;
  id v10 = v8;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v11 = (objc_class *)v16;
  swift_release();
  uint64_t v13 = v11;
  result._status = v12;
  result.super.Class isa = v13;
  return result;
}

void sub_10008AC54(uint64_t a1, void **a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(void **)(Strong + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService);
    id v6 = v5;

    if (v5)
    {
      id v7 = [objc_allocWithZone((Class)BDSReadingHistoryServiceStatusInfo) initWithIsLoaded:1];
      sub_1001EC910();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      id v8 = (void *)qword_100293A68;
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_100215320;
      *(void *)(v9 + 56) = sub_100081668(0, (unint64_t *)&unk_100293170);
      *(void *)(v9 + 64) = sub_100092AC8();
      *(void *)(v9 + 32) = v7;
      id v10 = v8;
      id v11 = v7;
      sub_1001EB530();

      swift_bridgeObjectRelease();
      id v12 = *a2;
      *a2 = v11;
    }
  }
}

Swift::Void __swiftcall ReadingHistoryServiceManager.setEnableCloudSync(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100215320;
  *(void *)(v5 + 56) = &type metadata for Bool;
  *(void *)(v5 + 64) = &protocol witness table for Bool;
  int v6 = a1;
  *(unsigned char *)(v5 + 32) = v6;
  id v7 = v4;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)&v1[OBJC_IVAR___BDSReadingHistoryServiceManager_readingHistoryCloudDataManager];
  int v9 = *(unsigned __int8 *)(v8 + qword_1002A4310);
  *(unsigned char *)(v8 + qword_1002A4310) = v6;
  if (v9 != v6) {
    sub_1000EF388(v6);
  }
  id v10 = *(NSObject **)&v2[OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceAccessQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v2;
  *(unsigned char *)(v11 + 24) = v6;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100092B68;
  *(void *)(v12 + 24) = v11;
  void v16[4] = sub_100093DC8;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  id v16[2] = sub_100089470;
  v16[3] = &unk_100262728;
  uint64_t v13 = _Block_copy(v16);
  uint64_t v14 = v2;
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
}

void sub_10008B068(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceEnableCloudSync) = a2;
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService);
  if (v2)
  {
    id v4 = v2;
    ReadingHistoryService.setEnableCloudSync(_:)(a2 & 1);
  }
}

id ReadingHistoryServiceManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return [v1 init];
}

void ReadingHistoryServiceManager.init()()
{
}

uint64_t sub_10008B1D0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v4 - 8);
  int v6 = (void *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000B68E0(v6);
  char v7 = sub_100088D38((uint64_t)v6, 0xD000000000000011, 0x80000001002221E0);
  uint64_t v8 = *(NSObject **)&v1[OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryServiceAccessQueue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  *(void *)(v9 + 24) = a1;
  *(unsigned char *)(v9 + 32) = v7 & 1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100093420;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_100093DC8;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  aBlock[3] = &unk_100262C10;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v2;
  id v13 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  sub_1000816A4((uint64_t)v6, (uint64_t *)&unk_100291B90);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_10008B3D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService);
  if (v3)
  {
    int v6 = (char *)*(id *)(v3 + OBJC_IVAR___BDSReadingHistoryService_historyCloudSyncManager);
    sub_10008B4D0(a2);
  }
  else
  {
    if (a3)
    {
      uint64_t v5 = sub_100087B48();
      goto LABEL_9;
    }
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    int v6 = (char *)(id)qword_100293A68;
    sub_1001EB530();
  }
  uint64_t v5 = v6;
LABEL_9:
}

uint64_t sub_10008B4D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100291BB8);
  __chkstk_darwin(v4 - 8);
  int v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  __chkstk_darwin(v10);
  uint64_t v45 = (uint64_t)&v37 - v11;
  uint64_t v12 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v43 + 64);
  uint64_t v14 = __chkstk_darwin(v12 - 8);
  uint64_t v44 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v37 - v15;
  sub_1000B68E0((uint64_t *)((char *)&v37 - v15));
  unint64_t v17 = *(void *)(a1 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8);
  if (v17 >> 60 == 15)
  {
    uint64_t v21 = sub_1001EB540();
    os_log_type_t v22 = sub_1001EC8F0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "CRDTModelSyncManager resolveConflictsFor: couldn't deserialize resolved data", v23, 2u);
      swift_slowDealloc();
    }

    sub_10008F934((uint64_t)v16);
    return sub_1000816A4((uint64_t)v16, (uint64_t *)&unk_100291B90);
  }
  else
  {
    uint64_t v40 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v41 = v2;
    uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData);
    uint64_t v19 = *(void **)&v2[qword_100292378];
    sub_10009366C(v18, v17);
    sub_10009366C(v18, v17);
    sub_10009343C((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
    id v20 = v19;
    uint64_t v42 = v18;
    sub_1001EC020();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    uint64_t v24 = v45;
    sub_100093C70((uint64_t)v6, v45, type metadata accessor for ReadingHistoryModel);
    uint64_t v26 = v40;
    int v25 = v41;
    dispatch_queue_t v38 = *(dispatch_queue_t *)&v41[qword_100292370];
    uint64_t v39 = type metadata accessor for ReadingHistoryModel;
    sub_100093B98(v24, v40, type metadata accessor for ReadingHistoryModel);
    uint64_t v27 = v44;
    sub_1000936F8((uint64_t)v16, v44, (uint64_t *)&unk_100291B90);
    unint64_t v28 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v29 = (v9 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (*(unsigned __int8 *)(v43 + 80) + v29 + 8) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v31 = swift_allocObject();
    sub_100093C70(v26, v31 + v28, type metadata accessor for ReadingHistoryModel);
    *(void *)(v31 + v29) = v25;
    sub_1000935F8(v27, v31 + v30, (uint64_t *)&unk_100291B90);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_1000939E4;
    *(void *)(v32 + 24) = v31;
    aBlock[4] = sub_100093DC8;
    aBlock[5] = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100089470;
    aBlock[3] = &unk_100262F30;
    unint64_t v33 = _Block_copy(aBlock);
    id v34 = v25;
    swift_retain();
    swift_release();
    dispatch_sync(v38, v33);
    _Block_release(v33);
    sub_100081700(v42, v17);
    sub_100093C10(v45, v39);
    sub_1000816A4((uint64_t)v16, (uint64_t *)&unk_100291B90);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t ReadingHistoryServiceManager.transactionDidBegin(withName:)(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)&v1[OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCountAccessQueue];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100092BBC;
  *(void *)(v5 + 24) = v4;
  void v10[4] = sub_100093DC8;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100089470;
  v10[3] = &unk_1002627A0;
  int v6 = _Block_copy(v10);
  uint64_t v7 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_10008BBB8(uint64_t a1, uint64_t a2)
{
  os_log_type_t v5 = OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCount;
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCount);
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v2 = a1;
  *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCount) = v6 + 1;
  if (a2)
  {
    uint64_t v4 = sub_1001EC4A0();
    unint64_t v3 = v7;
  }
  else
  {
    unint64_t v3 = 0xE300000000000000;
    uint64_t v4 = 7104878;
  }
  os_log_type_t v5 = sub_1001EC8E0();
  if (qword_1002910E8 != -1) {
    goto LABEL_11;
  }
LABEL_6:
  uint64_t v8 = (void *)qword_100293A68;
  os_log_type_t v9 = v5;
  if (os_log_type_enabled((os_log_t)qword_100293A68, v5))
  {
    uint64_t v10 = v8;
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_1001A8090(v4, v3, &v12);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2048;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v10, v9, "ReadingHistoryServiceManager transactionDidBegin %s, count: %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v2 + OBJC_IVAR___BDSReadingHistoryServiceManager_serviceDirty) = 1;
}

uint64_t ReadingHistoryServiceManager.transactionWillEnd(withName:)(uint64_t a1)
{
  unint64_t v3 = *(NSObject **)&v1[OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCountAccessQueue];
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v1;
  v4[3] = a1;
  void v4[4] = 0x403E000000000000;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100092C0C;
  *(void *)(v5 + 24) = v4;
  void v10[4] = sub_100093DC8;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100089470;
  v10[3] = &unk_100262818;
  uint64_t v6 = _Block_copy(v10);
  unint64_t v7 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_10008BF70(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v7 = OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCount;
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCount);
  BOOL v9 = __OFSUB__(v8, 1);
  uint64_t v10 = v8 - 1;
  if (v9)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v3 = a1;
  *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryServiceManager_outstandingTransactionCount) = v10;
  if (v10 > 0) {
    return;
  }
  uint64_t v6 = *(void *)&a3;
  *(void *)(a1 + v7) = 0;
  if (a2)
  {
    uint64_t v5 = sub_1001EC4A0();
    unint64_t v4 = v11;
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v5 = 7104878;
  }
  LOBYTE(v7) = sub_1001EC8E0();
  if (qword_1002910E8 != -1) {
    goto LABEL_16;
  }
LABEL_7:
  uint64_t v12 = (void *)qword_100293A68;
  os_log_type_t v13 = v7;
  if (os_log_type_enabled((os_log_t)qword_100293A68, (os_log_type_t)v7))
  {
    uint64_t v14 = v12;
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    sub_1001A8090(v5, v4, aBlock);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2048;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v14, v13, "ReadingHistoryServiceManager transactionWillEnd %s, count: %ld", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v3 + OBJC_IVAR___BDSReadingHistoryServiceManager_serviceDirty) = 0;
  os_log_type_t v16 = sub_1001EC910();
  unint64_t v17 = (void *)qword_100293A68;
  os_log_type_t v18 = v16;
  if (os_log_type_enabled((os_log_t)qword_100293A68, v16))
  {
    uint64_t v19 = v17;
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v20 = 134217984;
    aBlock[0] = v6;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v19, v18, "ReadingHistoryServiceManager Schedule teardown service in %f secs", v20, 0xCu);
    swift_slowDealloc();
  }
  uint64_t v21 = *(void **)(v3 + OBJC_IVAR___BDSReadingHistoryServiceManager_teardownServiceTimer);
  if (v21)
  {
    aBlock[4] = (uint64_t)MarkedAsFinishedMechanism.rawValue.getter;
    aBlock[5] = 0;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000DB998;
    aBlock[3] = (uint64_t)&unk_100263048;
    os_log_type_t v22 = _Block_copy(aBlock);
    id v23 = v21;
    [v23 signalWithCompletion:v22];
    _Block_release(v22);
  }
}

uint64_t ReadingHistoryServiceManager.bookWidgetReadingHistoryStateInfo()()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_10008C334, 0, 0);
}

uint64_t sub_10008C334()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  id v2 = (id)qword_100293A68;
  sub_1001EB530();

  *(void *)(swift_task_alloc() + 16) = v1;
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  swift_task_dealloc();
  v0[4] = v0[2];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10008C4B0;
  return ReadingHistoryService.bookWidgetReadingHistoryStateInfo()();
}

uint64_t sub_10008C4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(*v2 + 32);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  return v6(a1, a2);
}

uint64_t sub_10008C73C(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  void *v5 = v2;
  v5[1] = sub_10008C800;
  v5[3] = v4;
  return _swift_task_switch(sub_10008C334, 0, 0);
}

uint64_t sub_10008C800(void *a1, char a2)
{
  uint64_t v5 = *(void (***)(void, void, void))(*v2 + 24);
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v9 = *v2;
  swift_task_dealloc();

  ((void (**)(void, void *, void))v5)[2](v5, a1, a2 & 1);
  _Block_release(v5);

  uint64_t v7 = *(uint64_t (**)(void))(v9 + 8);
  return v7();
}

uint64_t ReadingHistoryServiceManager.mergeMovedReadingHistoryData()()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_10008C974, 0, 0);
}

uint64_t sub_10008C974()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  id v2 = (id)qword_100293A68;
  sub_1001EB530();

  *(void *)(swift_task_alloc() + 16) = v1;
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  swift_task_dealloc();
  v0[4] = v0[2];
  sub_1001EC910();
  id v3 = (id)qword_100293A68;
  sub_1001EB530();

  id v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  void *v4 = v0;
  v4[1] = sub_10008CB38;
  return sub_1000DFAC8();
}

uint64_t sub_10008CB38(uint64_t a1)
{
  id v3 = *(void **)(*v1 + 32);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  id v4 = *(uint64_t (**)(uint64_t))(v6 + 8);
  return v4(a1);
}

uint64_t sub_10008CDB8(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  void *v5 = v2;
  v5[1] = sub_10008CE7C;
  v5[3] = v4;
  return _swift_task_switch(sub_10008C974, 0, 0);
}

uint64_t sub_10008CE7C(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v9 = *(void *)(v5 + 24);
  if (v3)
  {
    uint64_t v10 = (void *)sub_1001EAE50();
    swift_errorRelease();
    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 24));
  unint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t ReadingHistoryServiceManager.backup(name:)(uint64_t a1, uint64_t a2)
{
  void v3[4] = a2;
  void v3[5] = v2;
  v3[3] = a1;
  return _swift_task_switch(sub_10008D030, 0, 0);
}

uint64_t sub_10008D030()
{
  uint64_t v1 = v0[5];
  *(void *)(swift_task_alloc() + 16) = v1;
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  swift_task_dealloc();
  v0[6] = v0[2];
  v0[7] = sub_1000DE584();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  void *v2 = v0;
  v2[1] = sub_10008D148;
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  return ReadingHistoryBackupManager.backup(name:)(v4, v3);
}

uint64_t sub_10008D148()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10008D290, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[6];
    swift_release();

    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(1);
  }
}

uint64_t sub_10008D290()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_10008D478(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  if (a1)
  {
    a1 = sub_1001EC370();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0;
  }
  void v3[4] = v7;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  void v3[5] = v9;
  void *v9 = v3;
  v9[1] = sub_10008D570;
  void v9[4] = v7;
  void v9[5] = v8;
  v9[3] = a1;
  return _swift_task_switch(sub_10008D030, 0, 0);
}

uint64_t sub_10008D570(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v9 = *(void *)(v5 + 24);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v10 = (void *)sub_1001EAE50();
    swift_errorRelease();
    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 24));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t ReadingHistoryServiceManager.listBackup()()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_10008D738, 0, 0);
}

uint64_t sub_10008D738()
{
  uint64_t v1 = v0[3];
  *(void *)(swift_task_alloc() + 16) = v1;
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  swift_task_dealloc();
  v0[4] = v0[2];
  v0[5] = sub_1000DE584();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  void *v2 = v0;
  v2[1] = sub_10008D844;
  return sub_100145A94();
}

uint64_t sub_10008D844(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10008D9E0;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_10008D974;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10008D974()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 64);
  return v1(v2, 1);
}

uint64_t sub_10008D9E0()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10008DBB4(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  void *v5 = v2;
  v5[1] = sub_10008DC78;
  v5[3] = v4;
  return _swift_task_switch(sub_10008D738, 0, 0);
}

uint64_t sub_10008DC78(uint64_t a1, char a2)
{
  uint64_t v5 = *v3;
  uint64_t v6 = *(void **)(*v3 + 16);
  uint64_t v7 = *v3;
  swift_task_dealloc();

  uint64_t v8 = *(void (***)(void, void, void, void))(v5 + 24);
  if (v2)
  {
    uint64_t v9 = (void *)sub_1001EAE50();
    swift_errorRelease();
    ((void (**)(void, void, void, void *))v8)[2](v8, 0, 0, v9);

    _Block_release(v8);
  }
  else
  {
    Class isa = sub_1001EC5D0().super.isa;
    ((void (**)(void, Class, void, void))v8)[2](v8, isa, a2 & 1, 0);

    _Block_release(v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = *(uint64_t (**)(void))(v7 + 8);
  return v11();
}

uint64_t ReadingHistoryServiceManager.restore(name:)(uint64_t a1, uint64_t a2)
{
  void v3[4] = a2;
  void v3[5] = v2;
  v3[3] = a1;
  return _swift_task_switch(sub_10008DE64, 0, 0);
}

uint64_t sub_10008DE64()
{
  uint64_t v1 = v0[5];
  *(void *)(swift_task_alloc() + 16) = v1;
  type metadata accessor for ReadingHistoryService();
  sub_1001EC9E0();
  swift_task_dealloc();
  v0[6] = v0[2];
  v0[7] = sub_1000DE584();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  void *v2 = v0;
  v2[1] = sub_10008DF7C;
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  return ReadingHistoryBackupManager.restore(name:)(v4, v3);
}

uint64_t sub_10008DF7C()
{
  uint64_t v2 = (void *)*v1;
  v2[9] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100093EAC, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[6];
    swift_release();

    uint64_t v4 = (uint64_t (*)(uint64_t))v2[1];
    return v4(1);
  }
}

uint64_t sub_10008E240(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_1001EC370();
  uint64_t v7 = v6;
  void v3[4] = v6;
  id v8 = a3;
  uint64_t v9 = (void *)swift_task_alloc();
  void v3[5] = v9;
  void *v9 = v3;
  v9[1] = sub_10008E32C;
  void v9[4] = v7;
  void v9[5] = v8;
  v9[3] = v5;
  return _swift_task_switch(sub_10008DE64, 0, 0);
}

uint64_t sub_10008E32C(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v5 + 24);
  if (v3)
  {
    uint64_t v10 = (void *)sub_1001EAE50();
    swift_errorRelease();
    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v9 + 16))(v9, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 24));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

id sub_10008E4E0()
{
  sub_100091204();
  uint64_t v1 = v0;
  sub_1001ECD40();
  v6._countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  sub_1001EC490(v6);
  type metadata accessor for ReadingHistoryModel(0);
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  v7._countAndFlagsBits = sub_1001EC3D0();
  sub_1001EC490(v7);
  swift_bridgeObjectRelease();
  id v2 = objc_allocWithZone((Class)BCCloudDataSource);
  NSString v3 = sub_1001EC340();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithManagedObjectModel:v1 nameOnDisk:v3];

  return v4;
}

uint64_t sub_10008E5C8(void *a1)
{
  uint64_t v2 = sub_1001EBAA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EBA60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    sub_1001EBA50();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = a1;
    aBlock[4] = sub_100093578;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000DB998;
    aBlock[3] = &unk_100262CD8;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = a1;
    id v15 = v11;
    sub_1001EBA80();
    sub_1001EC9F0();
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    return swift_release();
  }
  return result;
}

uint64_t sub_10008E828(char *a1, void *a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100291BB8);
  __chkstk_darwin(v4 - 8);
  uint64_t v104 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v95 - v10;
  uint64_t v12 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v12);
  id v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v103 = *(void *)(v105 - 8);
  uint64_t v15 = __chkstk_darwin(v105);
  uint64_t v99 = (uint64_t)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v98 = (uint64_t)&v95 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v101 = (uint64_t)&v95 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v102 = (uint64_t)&v95 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v95 - v23;
  uint64_t v106 = qword_100292380;
  swift_retain();
  uint64_t v100 = v12;
  sub_1001EC9E0();
  swift_release();
  uint64_t v107 = v24;
  sub_100093B98((uint64_t)v14, (uint64_t)v24, type metadata accessor for ReadingHistoryModel);
  sub_1000816A4((uint64_t)v14, (uint64_t *)&unk_100291CA0);
  uint64_t v25 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v108 = v11;
  v26(v11, 1, 1, v25);
  if (!a2)
  {
LABEL_10:
    int v48 = sub_1001EB540();
    os_log_type_t v49 = sub_1001EC910();
    if (os_log_type_enabled(v48, v49))
    {
      Swift::Int v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "CRDTModelSyncManager Init: empty cloudData", v50, 2u);
      swift_slowDealloc();
    }

    uint64_t v51 = *(void *)&a1[v106];
    __chkstk_darwin(v52);
    uint64_t v53 = (uint64_t)v108;
    *(&v95 - 2) = (uint64_t)v107;
    *(&v95 - 1) = v53;
    uint64_t v54 = *(NSObject **)(v51 + 16);
    Swift::Int v55 = (void *)swift_allocObject();
    v55[2] = sub_10009359C;
    v55[3] = &v95 - 4;
    v55[4] = v51;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = sub_1000935DC;
    *(void *)(v56 + 24) = v55;
    uint64_t v115 = sub_100093DC8;
    uint64_t v116 = v56;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v112 = 1107296256;
    uint64_t v113 = sub_100089470;
    id v114 = &unk_100262D50;
    unint64_t v57 = _Block_copy(&aBlock);
    swift_retain_n();
    swift_retain();
    swift_release();
    dispatch_sync(v54, v57);
    _Block_release(v57);
    LODWORD(v54) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (v54) {
      goto LABEL_25;
    }
LABEL_13:
    sub_1000816A4((uint64_t)v108, (uint64_t *)&unk_100291B90);
    return sub_100093C10((uint64_t)v107, type metadata accessor for ReadingHistoryModel);
  }
  uint64_t v27 = a2;
  sub_1000B68E0(v9);
  uint64_t v28 = (uint64_t)v108;
  sub_1000816A4((uint64_t)v108, (uint64_t *)&unk_100291B90);
  sub_1000935F8((uint64_t)v9, v28, (uint64_t *)&unk_100291B90);
  unint64_t v29 = sub_1001EB540();
  os_log_type_t v30 = sub_1001EC910();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "CRDTModelSyncManager Init: About to deserialize existing data", v31, 2u);
    swift_slowDealloc();
  }

  uint64_t v32 = (uint64_t *)&v27[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
  unint64_t v33 = *(void *)&v27[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8];
  if (v33 >> 60 == 15)
  {
    uint64_t v39 = sub_1001EB540();
    os_log_type_t v40 = sub_1001EC8F0();
    if (os_log_type_enabled(v39, v40))
    {
      unint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "CRDTModelSyncManager Init: couldn't deserialize existing data", v41, 2u);
      swift_slowDealloc();
    }

    uint64_t v42 = *(void *)&a1[v106];
    __chkstk_darwin(v43);
    uint64_t v44 = (uint64_t)v108;
    *(&v95 - 2) = (uint64_t)v107;
    *(&v95 - 1) = v44;
    uint64_t v45 = *(NSObject **)(v42 + 16);
    uint64_t v46 = (void *)swift_allocObject();
    v46[2] = sub_100093EB0;
    v46[3] = &v95 - 4;
    v46[4] = v42;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_100093EA4;
    *(void *)(v47 + 24) = v46;
    uint64_t v115 = sub_100093DC8;
    uint64_t v116 = v47;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v112 = 1107296256;
    uint64_t v113 = sub_100089470;
    id v114 = &unk_100262DC8;
    a1 = (char *)_Block_copy(&aBlock);
    swift_retain_n();
    swift_retain();
    swift_release();
    dispatch_sync(v45, a1);
    _Block_release(a1);
    LOBYTE(v45) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    if ((v45 & 1) == 0) {
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v34 = *v32;
  unint64_t v35 = *(void **)&a1[qword_100292378];
  sub_10009366C(*v32, *(void *)&v27[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8]);
  sub_10009366C(v34, v33);
  sub_10009343C((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  id v36 = v35;
  dispatch_queue_t v38 = v104;
  uint64_t v37 = v105;
  sub_1001EC020();
  uint64_t v95 = v34;
  unint64_t v96 = v33;
  id v97 = v27;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v38, 0, 1, v37);
  uint64_t v59 = (uint64_t)v38;
  uint64_t v60 = v102;
  sub_100093C70(v59, v102, type metadata accessor for ReadingHistoryModel);
  uint64_t v104 = a1;
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  uint64_t v61 = v101;
  sub_100093B98((uint64_t)v14, v101, type metadata accessor for ReadingHistoryModel);
  sub_1000816A4((uint64_t)v14, (uint64_t *)&unk_100291CA0);
  char v62 = sub_1001EBFE0();
  sub_100093C10(v61, type metadata accessor for ReadingHistoryModel);
  if (v62)
  {
    uint64_t v63 = v98;
    sub_100093B98(v60, v98, type metadata accessor for ReadingHistoryModel);
    char v64 = sub_1001EB540();
    os_log_type_t v65 = sub_1001EC910();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315394;
      unint64_t v67 = ReadingHistoryModel.description.getter();
      uint64_t v110 = sub_1001A8090(v67, v68, &aBlock);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_100093C10(v63, type metadata accessor for ReadingHistoryModel);
      *(_WORD *)(v66 + 12) = 2080;
      uint64_t v69 = (uint64_t)v107;
      swift_beginAccess();
      sub_100093B98(v69, v61, type metadata accessor for ReadingHistoryModel);
      unint64_t v70 = ReadingHistoryModel.description.getter();
      unint64_t v72 = v71;
      sub_100093C10(v61, type metadata accessor for ReadingHistoryModel);
      uint64_t v109 = sub_1001A8090(v70, v72, &aBlock);
      uint64_t v73 = v102;
      sub_1001ECBC0();
      uint64_t v60 = v73;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "CRDTModelSyncManager Init: loaded stored model=%s, merging into existing=%s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100093C10(v63, type metadata accessor for ReadingHistoryModel);
    }
    unint64_t v79 = v96;
    uint64_t v80 = v95;
    uint64_t v81 = (uint64_t)v107;
    swift_beginAccess();
    sub_10009343C((unint64_t *)&unk_1002924B0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
    sub_1001EBE70();
    swift_endAccess();

    sub_100081700(v80, v79);
    uint64_t v82 = sub_100093C10(v60, type metadata accessor for ReadingHistoryModel);
    char v74 = *(NSObject **)&v104[v106];
    __chkstk_darwin(v82);
    uint64_t v83 = (uint64_t)v108;
    *(&v95 - 2) = v81;
    *(&v95 - 1) = v83;
    Class isa = v74[2].isa;
    uint64_t v85 = (void *)swift_allocObject();
    v85[2] = sub_100093EB0;
    v85[3] = &v95 - 4;
    v85[4] = v74;
    uint64_t v86 = swift_allocObject();
    *(void *)(v86 + 16) = sub_100093EA4;
    *(void *)(v86 + 24) = v85;
    uint64_t v115 = sub_100093DC8;
    uint64_t v116 = v86;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v112 = 1107296256;
    uint64_t v113 = sub_100089470;
    id v114 = &unk_100262EB8;
    uint64_t v87 = _Block_copy(&aBlock);
    swift_retain_n();
    swift_retain();
    swift_release();
    dispatch_sync(isa, v87);
    _Block_release(v87);
    LOBYTE(isa) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    if ((isa & 1) == 0) {
      goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
    uint64_t v61 = v99;
    sub_100093B98(v60, v99, type metadata accessor for ReadingHistoryModel);
    char v74 = sub_1001EB540();
    os_log_type_t v75 = sub_1001EC910();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v76 = 136315138;
      unint64_t v77 = ReadingHistoryModel.description.getter();
      uint64_t v110 = sub_1001A8090(v77, v78, &aBlock);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_100093C10(v61, type metadata accessor for ReadingHistoryModel);
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "CRDTModelSyncManager Init: loaded stored model=%s, no delta", v76, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100081700(v95, v96);
      goto LABEL_23;
    }
  }
  sub_100081700(v95, v96);
  sub_100093C10(v61, type metadata accessor for ReadingHistoryModel);

LABEL_23:
  uint64_t v88 = sub_100093C10(v60, type metadata accessor for ReadingHistoryModel);
  uint64_t v89 = *(void *)&v104[v106];
  __chkstk_darwin(v88);
  uint64_t v90 = (uint64_t)v108;
  *(&v95 - 2) = (uint64_t)v107;
  *(&v95 - 1) = v90;
  BOOL v91 = *(NSObject **)(v89 + 16);
  uint64_t v92 = (void *)swift_allocObject();
  v92[2] = sub_100093EB0;
  v92[3] = &v95 - 4;
  v92[4] = v89;
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = sub_100093EA4;
  *(void *)(v93 + 24) = v92;
  uint64_t v115 = sub_100093DC8;
  uint64_t v116 = v93;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  uint64_t v113 = sub_100089470;
  id v114 = &unk_100262E40;
  long long v94 = _Block_copy(&aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v91, v94);
  _Block_release(v94);
  LOBYTE(v91) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((v91 & 1) == 0) {
    goto LABEL_13;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10008F934(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000936F8(a1, (uint64_t)v9, (uint64_t *)&unk_100291B90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    id v14 = (uint64_t *)&unk_100291B90;
    uint64_t v15 = (uint64_t)v9;
    return sub_1000816A4(v15, v14);
  }
  sub_100093C70((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  uint64_t v16 = qword_100292380;
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  uint64_t v17 = (uint64_t)&v6[*(int *)(v4 + 52)];
  sub_1000816A4(v17, (uint64_t *)&unk_100291B90);
  sub_100093B98((uint64_t)v13, v17, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  uint64_t v19 = *(void *)(v2 + v16);
  __chkstk_darwin(v18);
  *(&v25 - 2) = (uint64_t)v6;
  uint64_t v20 = *(NSObject **)(v19 + 16);
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = sub_100093DC4;
  v21[3] = &v25 - 4;
  v21[4] = v19;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_100093EA4;
  *(void *)(v22 + 24) = v21;
  aBlock[4] = sub_100093DC8;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  aBlock[3] = &unk_100263020;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v20, v23);
  _Block_release(v23);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((v20 & 1) == 0)
  {
    sub_100093C10((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
    id v14 = (uint64_t *)&unk_100291CA0;
    uint64_t v15 = (uint64_t)v6;
    return sub_1000816A4(v15, v14);
  }
  __break(1u);
  return result;
}

uint64_t sub_10008FD34(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v95 = a3;
  uint64_t v87 = sub_10007DC14(&qword_100291BE0);
  __chkstk_darwin(v87);
  uint64_t v86 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v93 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t)v79 - v9;
  uint64_t v11 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v12 = __chkstk_darwin(v11);
  id v14 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  long long v94 = (uint8_t *)v79 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v79 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v79 - v20;
  uint64_t v96 = qword_100292380;
  swift_retain();
  uint64_t v97 = v6;
  sub_1001EC9E0();
  swift_release();
  sub_100093B98(v10, (uint64_t)v21, type metadata accessor for ReadingHistoryModel);
  uint64_t v92 = v10;
  sub_1000816A4(v10, (uint64_t *)&unk_100291CA0);
  sub_10009343C((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  uint64_t v90 = v11;
  LOBYTE(v10) = sub_1001EBFE0();
  BOOL v91 = v21;
  uint64_t v22 = a2;
  sub_100093C10((uint64_t)v21, type metadata accessor for ReadingHistoryModel);
  uint64_t v23 = &a2[qword_1002A41C0];
  if (v10)
  {
    sub_100093B98(a1, (uint64_t)v19, type metadata accessor for ReadingHistoryModel);
    uint64_t v85 = a1;
    sub_100093B98(a1, (uint64_t)v94, type metadata accessor for ReadingHistoryModel);
    uint64_t v24 = a2;
    uint64_t v83 = v23;
    uint64_t v25 = sub_1001EB540();
    os_log_type_t v26 = sub_1001EC910();
    int v27 = v26;
    uint64_t v84 = v25;
    BOOL v28 = os_log_type_enabled(v25, v26);
    uint64_t v88 = v24;
    uint64_t v89 = a2;
    if (v28)
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      aBlock[0] = v82;
      *(_DWORD *)uint64_t v29 = 136315650;
      int v81 = v27;
      unint64_t v30 = ReadingHistoryModel.description.getter();
      uint64_t v99 = sub_1001A8090(v30, v31, aBlock);
      v79[2] = v100;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_100093C10((uint64_t)v19, type metadata accessor for ReadingHistoryModel);
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v80 = v29 + 14;
      swift_retain();
      uint64_t v32 = v92;
      sub_1001EC9E0();
      swift_release();
      uint64_t v33 = (uint64_t)v91;
      sub_100093B98(v32, (uint64_t)v91, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v32, (uint64_t *)&unk_100291CA0);
      unint64_t v34 = ReadingHistoryModel.description.getter();
      unint64_t v36 = v35;
      sub_100093C10(v33, type metadata accessor for ReadingHistoryModel);
      uint64_t v99 = sub_1001A8090(v34, v36, aBlock);
      sub_1001ECBC0();
      uint64_t v37 = v88;

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2080;
      v79[1] = v29 + 24;
      swift_retain();
      uint64_t v38 = v97;
      sub_1001EC9E0();
      uint64_t v80 = 0;
      uint64_t v22 = v89;
      swift_release();
      sub_100093B98(v32, v33, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v32, (uint64_t *)&unk_100291CA0);
      sub_10009343C(&qword_100291BE8, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
      uint64_t v39 = v84;
      uint64_t v40 = (uint64_t)v94;
      sub_1001EC040();
      sub_100093C10(v33, type metadata accessor for ReadingHistoryModel);
      uint64_t v41 = v38;
      uint64_t v42 = sub_1001EC3F0();
      uint64_t v99 = sub_1001A8090(v42, v43, aBlock);
      sub_1001ECBC0();
      uint64_t v44 = v88;

      swift_bridgeObjectRelease();
      uint64_t v45 = v40;
      uint64_t v46 = v96;
      sub_100093C10(v45, type metadata accessor for ReadingHistoryModel);

      _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v81, "CRDTModelSyncManager resolveConflictsFor: merging resolved model: incoming=%s vs existing=%s with delta=%s", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100093C10((uint64_t)v19, type metadata accessor for ReadingHistoryModel);
      sub_100093C10((uint64_t)v94, type metadata accessor for ReadingHistoryModel);

      uint64_t v46 = v96;
      uint64_t v41 = v97;
    }
    swift_retain();
    uint64_t v58 = (uint64_t)v93;
    sub_1001EC9E0();
    swift_release();
    sub_10009343C((unint64_t *)&unk_1002924B0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
    uint64_t v59 = v85;
    sub_1001EBE70();
    uint64_t v60 = v58 + *(int *)(v41 + 48);
    sub_1000816A4(v60, (uint64_t *)&unk_100291BA0);
    sub_100093B98(v59, v60, type metadata accessor for ReadingHistoryModel);
    uint64_t v61 = sub_10007DC14((uint64_t *)&unk_1002963C0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 0, 2, v61);
    uint64_t v62 = sub_100093AD4(v95, v58 + *(int *)(v41 + 52));
    uint64_t v63 = *(void *)&v22[v46];
    __chkstk_darwin(v62);
    v79[-2] = v58;
    char v64 = *(NSObject **)(v63 + 16);
    os_log_type_t v65 = (void *)swift_allocObject();
    v65[2] = sub_100093B3C;
    v65[3] = &v79[-4];
    v65[4] = v63;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = sub_100093EA4;
    *(void *)(v66 + 24) = v65;
    aBlock[4] = (uint64_t)sub_100093DC8;
    aBlock[5] = v66;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100089470;
    aBlock[3] = (uint64_t)&unk_100262FA8;
    unint64_t v67 = _Block_copy(aBlock);
    swift_retain_n();
    swift_retain();
    swift_release();
    dispatch_sync(v64, v67);
    _Block_release(v67);
    LOBYTE(v64) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (v64)
    {
      __break(1u);
    }
    else
    {
      uint64_t v69 = v88;
      unint64_t v70 = sub_1001EB540();
      os_log_type_t v71 = sub_1001EC910();
      if (os_log_type_enabled(v70, v71))
      {
        unint64_t v72 = (uint8_t *)swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v95 = v73;
        *(_DWORD *)unint64_t v72 = 136315138;
        aBlock[0] = v73;
        long long v94 = v72 + 4;
        swift_retain();
        uint64_t v74 = v92;
        sub_1001EC9E0();
        swift_release();
        uint64_t v75 = (uint64_t)v91;
        sub_100093B98(v74, (uint64_t)v91, type metadata accessor for ReadingHistoryModel);
        sub_1000816A4(v74, (uint64_t *)&unk_100291CA0);
        unint64_t v76 = ReadingHistoryModel.description.getter();
        unint64_t v78 = v77;
        sub_100093C10(v75, type metadata accessor for ReadingHistoryModel);
        uint64_t v99 = sub_1001A8090(v76, v78, aBlock);
        sub_1001ECBC0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "CRDTModelSyncManager resolveConflictsFor: resolved model=%s", v72, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      return sub_1000816A4((uint64_t)v93, (uint64_t *)&unk_100291CA0);
    }
  }
  else
  {
    sub_100093B98(a1, (uint64_t)v14, type metadata accessor for ReadingHistoryModel);
    uint64_t v47 = a2;
    int v48 = sub_1001EB540();
    os_log_type_t v49 = sub_1001EC910();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      long long v94 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = (uint64_t)v94;
      *(_DWORD *)uint64_t v50 = 136315394;
      unint64_t v51 = ReadingHistoryModel.description.getter();
      uint64_t v99 = sub_1001A8090(v51, v52, aBlock);
      uint64_t v93 = v100;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_100093C10((uint64_t)v14, type metadata accessor for ReadingHistoryModel);
      *(_WORD *)(v50 + 12) = 2080;
      uint64_t v90 = v50 + 14;
      swift_retain();
      uint64_t v53 = v92;
      sub_1001EC9E0();
      swift_release();
      uint64_t v54 = (uint64_t)v91;
      sub_100093B98(v53, (uint64_t)v91, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v53, (uint64_t *)&unk_100291CA0);
      unint64_t v55 = ReadingHistoryModel.description.getter();
      unint64_t v57 = v56;
      sub_100093C10(v54, type metadata accessor for ReadingHistoryModel);
      uint64_t v99 = sub_1001A8090(v55, v57, aBlock);
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "CRDTModelSyncManager resolveConflictsFor: incoming=%s has no delta from existing=%s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100093C10((uint64_t)v14, type metadata accessor for ReadingHistoryModel);
    }
    return sub_10008F934(v95);
  }
  return result;
}

uint64_t sub_100090AB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

char *sub_100090B34(uint64_t a1)
{
  return sub_100090B80(a1, (uint64_t)&unk_100291CA0, (void (*)(uint64_t, char *, uint64_t))sub_1000935F8);
}

char *sub_100090B54(uint64_t a1)
{
  return sub_100090B80(a1, (uint64_t)type metadata accessor for CRDTModelSyncVersion, (void (*)(uint64_t, char *, uint64_t))sub_100093C70);
}

char *sub_100090B80(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t))
{
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v4 = v3;
  uint64_t v16 = a1;
  uint64_t v15 = sub_1001EC9C0();
  uint64_t v5 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EC990();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_1001EBAA0();
  __chkstk_darwin(v9 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA80();
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_10009343C((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  uint64_t v10 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v11 = v15;
  v10(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v15);
  *((void *)v3 + 2) = sub_1001ECA00();
  sub_1001EBA90();
  sub_1001EC980();
  v10(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v11);
  *((void *)v3 + 3) = sub_1001ECA00();
  *((void *)v3 + 4) = &_swiftEmptyDictionarySingleton;
  uint64_t v12 = &v4[*(void *)(*(void *)v4 + 128)];
  *((void *)v12 + 1) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *((void *)v12 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v18(v16, &v4[*(void *)(*(void *)v4 + 120)], v17);
  return v4;
}

uint64_t sub_100090ED0(uint64_t a1, int a2, double a3)
{
  int v15 = a2;
  uint64_t v14 = a1;
  uint64_t v13 = sub_1001EC9C0();
  uint64_t v5 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EC990();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_1001EBAA0();
  __chkstk_darwin(v9 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA80();
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_10009343C((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  uint64_t v10 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v11 = v13;
  v10(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)(v3 + 16) = sub_1001ECA00();
  sub_1001EBA90();
  sub_1001EC980();
  v10(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v11);
  *(void *)(v3 + 24) = sub_1001ECA00();
  *(void *)(v3 + 32) = &_swiftEmptyDictionarySingleton;
  *(void *)(v3 + 72) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *(void *)(v3 + 72) = 0;
  swift_unknownObjectWeakAssign();
  *(void *)(v3 + 40) = v14;
  *(double *)(v3 + 4_Block_object_dispose(&STACK[0x3B0], 8) = a3;
  *(unsigned char *)(v3 + 56) = v15;
  return v3;
}

void sub_100091204()
{
  uint64_t v0 = sub_1001EAF60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14(&qword_100291A00);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = [self bundleForClass:ObjCClassFromMetadata];
  sub_1001ECAE0();

  sub_1001EAEA0();
  swift_bridgeObjectRelease();
  id v6 = objc_allocWithZone((Class)NSManagedObjectModel);
  sub_1001EAEC0(v7);
  uint64_t v9 = v8;
  id v10 = [v6 initWithContentsOfURL:v8];

  if (v10) {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else {
    __break(1u);
  }
}

void sub_100091390(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a4();
    return;
  }
  uint64_t v8 = (void *)Strong;
  if (a2)
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC8F0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_getErrorValue();
      uint64_t v12 = sub_1001ED110();
      sub_1001A8090(v12, v13, &v20);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "CRDTModelCloudDataManager cloudData: couldn't load existing data: %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_16;
  }
  if (a1)
  {
    type metadata accessor for CRDTModelSync();
    uint64_t v14 = swift_dynamicCastClass();
    if (v14)
    {
      uint64_t v15 = v14;
      swift_unknownObjectRetain();
      ((void (*)(uint64_t))a4)(v15);

      swift_unknownObjectRelease();
      return;
    }
    uint64_t v16 = sub_1001EB540();
    os_log_type_t v17 = sub_1001EC8F0();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_15;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    uint64_t v19 = "CRDTModelCloudDataManager cloudData: loaded existing data with the wrong type";
    goto LABEL_14;
  }
  uint64_t v16 = sub_1001EB540();
  os_log_type_t v17 = sub_1001EC910();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    uint64_t v19 = "CRDTModelCloudDataManager cloudData: no existing data";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v16, v17, v19, v18, 2u);
    swift_slowDealloc();
  }
LABEL_15:

LABEL_16:
  ((void (*)(void))a4)(0);
}

uint64_t sub_1000916AC(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_100093DBC, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_100091740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000816A4(a1, (uint64_t *)&unk_100291CA0);
  swift_beginAccess();
  sub_100093B98(a2, (uint64_t)v18, type metadata accessor for ReadingHistoryModel);
  uint64_t v19 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 2, 2, v19);
  sub_1000936F8(a3, (uint64_t)v12, (uint64_t *)&unk_100291B90);
  uint64_t v20 = (uint64_t)&v9[v7[15]];
  uint64_t v21 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  sub_100093C70((uint64_t)v18, (uint64_t)v9, type metadata accessor for ReadingHistoryModel);
  v9[v7[13]] = 1;
  sub_1000935F8((uint64_t)v15, (uint64_t)&v9[v7[14]], (uint64_t *)&unk_100291BA0);
  sub_100093484((uint64_t)v12, v20);
  return sub_1000935F8((uint64_t)v9, a1, (uint64_t *)&unk_100291CA0);
}

char *sub_1000919F4(void *a1, void *a2, void *a3, char *a4)
{
  uint64_t v82 = a1;
  uint64_t v83 = a3;
  unint64_t v78 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v5 - 8);
  uint64_t v80 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v7 - 8);
  unint64_t v76 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10007DC14((uint64_t *)&unk_100291CA0) - 8;
  uint64_t v9 = __chkstk_darwin(v77);
  uint64_t v81 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v75 = (char *)&v70 - v12;
  __chkstk_darwin(v11);
  uint64_t v79 = (uint64_t)&v70 - v13;
  uint64_t v14 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v72 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v74 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v70 - v17;
  uint64_t v85 = (char *)sub_1001EC9C0();
  uint64_t v73 = *((void *)v85 - 1);
  __chkstk_darwin(v85);
  uint64_t v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1001EC990();
  __chkstk_darwin(v21 - 8);
  uint64_t v22 = sub_1001EBAA0();
  __chkstk_darwin(v22 - 8);
  unint64_t v70 = &a4[qword_1002A41C0];
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  uint64_t v23 = a4;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&aBlock, "CRDTModelSync.");
  HIBYTE(aBlock) = -18;
  uint64_t v91 = v14;
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  uint64_t v24 = sub_1001EC3D0();
  unint64_t v26 = v25;
  sub_1001EC530();
  uint64_t v27 = sub_1001EC3E0();
  unint64_t v29 = v28;
  swift_bridgeObjectRelease();
  Swift::Int v30 = sub_100152E34(15, v27, v29, v24, v26);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v93._countAndFlagsBits = v30;
  v93._object = v32;
  sub_1001EC490(v93);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  uint64_t v33 = qword_100292370;
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA90();
  sub_1001EC980();
  (*(void (**)(char *, void, char *))(v73 + 104))(v20, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v85);
  *(void *)&v23[v33] = sub_1001ECA00();
  v23[direct field offset for CRDTModelSyncManager.enableCloudSync] = 0;
  unint64_t v34 = v23;
  os_log_type_t v71 = v23;
  sub_10007DC14(&qword_100291FC0);
  sub_1000815A4(&qword_100291240, &qword_100291FC0);
  sub_1000815A4(&qword_100291248, &qword_100291FC0);
  sub_1001EBF00();
  uint64_t v35 = v72;
  sub_1001EB0C0();
  sub_10009343C(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001EBF00();
  *(void *)&v18[*(int *)(v35 + 24)] = &_swiftEmptyDictionarySingleton;
  unint64_t v36 = v78;
  *(void *)&v34[qword_100292378] = v78;
  uint64_t v85 = v18;
  uint64_t v37 = v74;
  sub_100093B98((uint64_t)v18, v74, type metadata accessor for ReadingHistoryModel);
  uint64_t v38 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v39 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v76, 1, 2, v38);
  uint64_t v40 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  uint64_t v42 = (uint64_t)v80;
  v41(v80, 1, 1, v40);
  uint64_t v43 = v77;
  uint64_t v44 = (uint64_t)v75;
  uint64_t v45 = (uint64_t)&v75[*(int *)(v77 + 60)];
  v41((char *)v45, 1, 1, v40);
  sub_100093C70(v37, v44, type metadata accessor for ReadingHistoryModel);
  *(unsigned char *)(v44 + *(int *)(v43 + 52)) = 0;
  sub_1000935F8(v39, v44 + *(int *)(v43 + 56), (uint64_t *)&unk_100291BA0);
  id v46 = v36;
  sub_100093484(v42, v45);
  uint64_t v47 = v79;
  sub_1000935F8(v44, v79, (uint64_t *)&unk_100291CA0);
  uint64_t v48 = v47;
  sub_1000936F8(v47, v44, (uint64_t *)&unk_100291CA0);
  sub_10007DC14(&qword_100291BB0);
  swift_allocObject();
  uint64_t v49 = v81;
  sub_1000936F8(v44, v81, (uint64_t *)&unk_100291CA0);
  uint64_t v50 = sub_100090B80(v49, (uint64_t)&unk_100291CA0, (void (*)(uint64_t, char *, uint64_t))sub_1000935F8);
  sub_1000816A4(v44, (uint64_t *)&unk_100291CA0);
  unint64_t v51 = v71;
  *(void *)&v71[qword_100292380] = v50;
  uint64_t v53 = v82;
  unint64_t v52 = v83;
  *(void *)&v51[qword_100292390] = v82;
  *(void *)&v51[qword_100292398] = v52;
  uint64_t v54 = v51;
  type metadata accessor for ObservableTransaction();
  unint64_t v55 = (void *)swift_allocObject();
  id v56 = v52;
  unint64_t v57 = v53;
  *(void *)&v54[qword_100292388] = sub_100080734(0xD000000000000030, 0x8000000100222280, (uint64_t)v56, v55);

  v92.receiver = v54;
  v92.super_class = ObjectType;
  uint64_t v58 = (char *)objc_msgSendSuper2(&v92, "init");
  uint64_t v59 = *(void *)&v58[qword_100292380] + *(void *)(**(void **)&v58[qword_100292380] + 128);
  swift_beginAccess();
  *(void *)(v59 + _Block_object_dispose(&STACK[0x3B0], 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  uint64_t v60 = v58;
  uint64_t v61 = sub_1001EB540();
  os_log_type_t v62 = sub_1001EC910();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v63 = 0;
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "CRDTModelSyncManager Init: About to load cloudData", v63, 2u);
    swift_slowDealloc();
  }

  uint64_t v64 = swift_allocObject();
  swift_unknownObjectWeakInit();
  os_log_type_t v65 = *(void **)&v57[qword_100296A00];
  uint64_t v66 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v67 = (void *)swift_allocObject();
  v67[2] = v66;
  v67[3] = sub_1000934EC;
  v67[4] = v64;
  uint64_t v89 = sub_100093EA8;
  uint64_t v90 = v67;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v87 = sub_100090AB4;
  uint64_t v88 = &unk_100262C88;
  unint64_t v68 = _Block_copy(&aBlock);
  swift_retain_n();
  swift_release();
  [v65 cloudDataWithPredicate:0 sortDescriptors:0 completion:v68];
  _Block_release(v68);

  swift_release();
  sub_1000816A4(v48, (uint64_t *)&unk_100291CA0);
  sub_100093C10((uint64_t)v85, type metadata accessor for ReadingHistoryModel);
  swift_release();
  return v60;
}

char *sub_1000924CC(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = a5;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v53, "CRDTModelSync.");
  HIBYTE(v53[1]) = -18;
  uint64_t v52 = type metadata accessor for ReadingHistoryModel(0);
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  uint64_t v10 = sub_1001EC3D0();
  unint64_t v12 = v11;
  sub_1001EC530();
  uint64_t v13 = sub_1001EC3E0();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  Swift::Int v16 = sub_100152E34(15, v13, v15, v10, v12);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54._countAndFlagsBits = v16;
  v54._object = v18;
  sub_1001EC490(v54);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  *(void *)&v9[qword_100296A18] = 0;
  *(void *)&v9[qword_100296A28] = 0;
  *(void *)&v9[qword_1002A4308 + 8] = 0;
  swift_unknownObjectWeakInit();
  v9[qword_1002A4310] = 0;
  *(void *)&v9[qword_100296A20] = a2;
  *(void *)&v9[qword_100296A30] = a4;
  id v48 = a2;
  id v49 = a4;
  id v19 = [a3 managedObjectContext];
  *(void *)&v9[qword_1002969F0] = a3;
  *(void *)&v9[qword_100296A10] = a1;
  type metadata accessor for CRDTModelSyncMapper();
  swift_allocObject();
  id v20 = a3;
  id v21 = a1;
  uint64_t v22 = CRDTModelSyncMapper.init()();
  id v23 = [objc_allocWithZone((Class)BCCloudDataSyncManager) initWithCloudKitController:v21 dataMapper:v22];
  *(void *)&v9[qword_1002969F8] = v23;
  id v24 = v23;
  id v47 = v19;
  sub_1001EC3D0();
  NSString v25 = sub_1001EC340();
  swift_bridgeObjectRelease();
  id v26 = [objc_allocWithZone((Class)BCCloudChangeTokenController) initWithMOC:v47 zoneName:v25 cloudKitController:v21];

  *(void *)&v9[qword_100296A08] = v26;
  v53[0] = type metadata accessor for CRDTModelSyncEntity();
  id v27 = v20;
  sub_10007DC14((uint64_t *)&unk_100291C00);
  sub_1001EC3D0();
  type metadata accessor for CRDTModelSync();
  id v28 = objc_allocWithZone((Class)BCCloudDataManager);
  id v29 = v21;
  id v30 = v24;
  swift_retain();
  NSString v31 = sub_1001EC340();
  swift_bridgeObjectRelease();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v33 = [v28 initWithCloudDataSource:v27 entityName:v31 notificationName:0 immutableClass:ObjCClassFromMetadata mutableClass:swift_getObjCClassFromMetadata() syncManager:v30 cloudKitController:v29 dataMapper:v22];

  swift_release();
  *(void *)&v9[qword_100296A00] = v33;

  v51.receiver = v9;
  v51.super_class = ObjectType;
  unint64_t v34 = (char *)objc_msgSendSuper2(&v51, "init");
  uint64_t v35 = *(void **)&v34[qword_100296A08];
  unint64_t v36 = *(void **)&v34[qword_100296A10];
  uint64_t v37 = v34;
  id v38 = v35;
  id v39 = [v36 privateCloudDatabaseController];
  id v40 = [objc_allocWithZone((Class)BDSSaltVersionIdentifierManager) initWithZoneDataManager:v37 tokenController:v38 databaseController:v39];

  uint64_t v41 = *(void **)&v37[qword_100296A18];
  *(void *)&v37[qword_100296A18] = v40;

  uint64_t v42 = *(void **)&v37[qword_1002969F8];
  uint64_t v43 = v37;
  id v44 = v42;
  [v44 setDelegate:v43];

  swift_release();
  return v43;
}

uint64_t sub_1000929C8()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100092A00(uint64_t (*a1)(void))
{
  return sub_1000884F4(a1);
}

uint64_t sub_100092A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100092A18()
{
  return swift_release();
}

void sub_100092A20(void *a1)
{
}

void sub_100092A2C(uint64_t a1, uint64_t a2)
{
  sub_100091390(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

id sub_100092A38@<X0>(char **a1@<X8>)
{
  return sub_100093384(a1);
}

uint64_t sub_100092A50()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100092A88()
{
  sub_10008AC54(*(void *)(v0 + 16), *(void ***)(v0 + 24));
}

uint64_t sub_100092A90()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100092AA0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_100092AC8()
{
  unint64_t result = qword_100291A30;
  if (!qword_100291A30)
  {
    sub_100081668(255, (unint64_t *)&unk_100293170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100291A30);
  }
  return result;
}

uint64_t sub_100092B30()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_100092B68()
{
  sub_10008B068(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100092B74()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100092B84()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100092BBC()
{
  sub_10008BBB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100092BC4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100092BD4()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100092C0C()
{
  sub_10008BF70(*(void *)(v0 + 16), *(void *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_100092C18()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for ReadingHistoryServiceManager()
{
  return self;
}

uint64_t sub_100092C50()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_100291AF0 + dword_100291AF0);
  return v6(v2, v3, v4);
}

uint64_t sub_100092D08()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100294260 + dword_100294260);
  return v6(v2, v3, v4);
}

uint64_t sub_100092DD0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_100291B10 + dword_100291B10);
  return v5(v2, v3);
}

uint64_t sub_100092E84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100093EB4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_100294270 + dword_100294270);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100092F54()
{
  _Block_release(*(const void **)(v0 + 24));
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100092F9C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_100291B30 + dword_100291B30);
  return v6(v2, v3, v4);
}

uint64_t sub_10009305C()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_100291B50 + dword_100291B50);
  return v5(v2, v3);
}

uint64_t sub_100093114()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100093154()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093200;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_100291B70 + dword_100291B70);
  return v5(v2, v3);
}

uint64_t sub_100093200()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000932FC()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10009333C()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100093374(uint64_t a1, char a2)
{
  return sub_1000DD374(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10009337C(char a1)
{
  return sub_1000DBD24(a1, *(void *)(v1 + 16));
}

id sub_100093384@<X0>(char **a1@<X8>)
{
  uint64_t v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService);
  if (v3)
  {
    uint64_t v4 = *(char **)(*(void *)(v1 + 16) + OBJC_IVAR___BDSReadingHistoryServiceManager__readingHistoryService);
  }
  else
  {
    uint64_t v4 = sub_100087B48();
    uint64_t v3 = 0;
  }
  *a1 = v4;
  return v3;
}

uint64_t sub_1000933E0()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_100093420()
{
  sub_10008B3D4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_10009342C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009343C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100093484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000934EC(void *a1)
{
  return sub_10008E5C8(a1);
}

uint64_t sub_1000934F8()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100093538()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100093578()
{
  return sub_10008E828(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100093580@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A6750(v1, a1);
}

uint64_t sub_10009359C(uint64_t a1)
{
  return sub_100091740(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000935A4()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000935DC()
{
  return sub_100118C74(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000935E8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000935F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10007DC14(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009365C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009366C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100093680(a1, a2);
  }
  return a1;
}

uint64_t sub_100093680(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1000936D8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000936E8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000936F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10007DC14(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009375C()
{
  uint64_t v1 = (int *)(type metadata accessor for ReadingHistoryModel(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_10007DC14((uint64_t *)&unk_100291B90) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + v6 + 8) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = v0 + v3;
  uint64_t v10 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v9 + v1[7];
  uint64_t v12 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();

  uint64_t v13 = type metadata accessor for CRDTModelRevisionInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v0 + v7, 1, v13))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v0 + v7 + *(int *)(v13 + 24);
    uint64_t v15 = sub_1001EB0C0();
    uint64_t v16 = *(void *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
  }
  return _swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

uint64_t sub_1000939E4()
{
  uint64_t v1 = *(void *)(type metadata accessor for ReadingHistoryModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_10007DC14((uint64_t *)&unk_100291B90) - 8);
  uint64_t v5 = *(char **)(v0 + v3);
  uint64_t v6 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_10008FD34(v0 + v2, v5, v6);
}

uint64_t sub_100093AC4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100093AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100093B3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_1000816A4(a1, (uint64_t *)&unk_100291CA0);
  return sub_1000936F8(v3, a1, (uint64_t *)&unk_100291CA0);
}

uint64_t sub_100093B88()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100093B98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100093C00()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100093C10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100093C70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100093CD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100093D10()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(*(void *)(v0 + 24) + OBJC_IVAR___BDSReadingHistoryServiceManager_serviceDirty);
}

uint64_t sub_100093D28()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100093D38()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100093D70()
{
  sub_100089498(*(void *)(v0 + 16));
}

uint64_t sub_100093D78()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100093D88()
{
  uint64_t v0 = sub_100087B48();
}

uint64_t sub_100093DBC()
{
  return sub_1001AE220(*(void *)(v0 + 16));
}

uint64_t sub_100093EB8()
{
  uint64_t v0 = sub_1001EB560();
  sub_10008176C(v0, qword_1002A4198);
  sub_10007CFF8(v0, (uint64_t)qword_1002A4198);
  return sub_1001EB550();
}

uint64_t _s14ThresholdErrorOwCP(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t _s14ThresholdErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14ThresholdErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100093FE0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100093FE8(uint64_t result, char a2)
{
  *(unsigned char *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = a2 & 1;
  return result;
}

ValueMetadata *_s14ThresholdErrorOMa()
{
  return &_s14ThresholdErrorON;
}

__n128 initializeBufferWithCopyOfBuffer for ReadingGoals.State(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *_s9ThresholdVMa()
{
  return &_s9ThresholdVN;
}

uint64_t sub_100094074(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) != 0 && v2 == v3) {
      return 1;
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1000940C8(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100291C20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_10009479C();
  sub_1001ED1F0();
  char v10 = 0;
  sub_1001ED000();
  if (!v1)
  {
    char v9 = 1;
    sub_1001ED000();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL sub_100094230(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void sub_10009425C(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1000945AC(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v5;
  }
}

uint64_t sub_100094288(void *a1)
{
  return sub_1000940C8(a1);
}

uint64_t sub_1000942A4(char *a1, char *a2)
{
  return sub_1000D5608(*a1, *a2);
}

Swift::Int sub_1000942B0()
{
  return sub_1001ED1A0();
}

uint64_t sub_100094328()
{
  sub_1001EC440();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100094384()
{
  return sub_1001ED1A0();
}

uint64_t sub_1000943F8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1002621F8;
  v8._object = v3;
  Swift::Int v5 = sub_1001ECF20(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_100094458(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6574756C6F736261;
  if (*v1) {
    uint64_t v2 = 0x65766974616C6572;
  }
  *a1 = v2;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_100094490()
{
  if (*v0) {
    return 0x65766974616C6572;
  }
  else {
    return 0x6574756C6F736261;
  }
}

uint64_t sub_1000944C4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_1002621F8;
  v9._object = a2;
  Swift::Int v6 = sub_1001ECF20(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void sub_100094528(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100094534(uint64_t a1)
{
  unint64_t v2 = sub_10009479C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100094570(uint64_t a1)
{
  unint64_t v2 = sub_10009479C();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1000945AC(void *a1)
{
  uint64_t v4 = sub_10007DC14(&qword_100291C10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_10009479C();
  sub_1001ED1D0();
  if (!v1)
  {
    v10[15] = 0;
    sub_1001ECF80();
    double v2 = v8;
    v10[14] = 1;
    sub_1001ECF80();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1000947F0((uint64_t)a1);
  return v2;
}

void *sub_100094758(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_10009479C()
{
  unint64_t result = qword_100291C18;
  if (!qword_100291C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100291C18);
  }
  return result;
}

uint64_t sub_1000947F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unsigned char *initializeBufferWithCopyOfBuffer for ReadingGoals.StateChange.ChangeOrigin(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s9ThresholdV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s9ThresholdV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000949A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1000949D0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1000949D8(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *_s9ThresholdV10CodingKeysOMa()
{
  return &_s9ThresholdV10CodingKeysON;
}

unint64_t sub_1000949F8()
{
  unint64_t result = qword_100291C28;
  if (!qword_100291C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100291C28);
  }
  return result;
}

unint64_t sub_100094A50()
{
  unint64_t result = qword_100291C30;
  if (!qword_100291C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100291C30);
  }
  return result;
}

unint64_t sub_100094AA8()
{
  unint64_t result = qword_100291C38;
  if (!qword_100291C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100291C38);
  }
  return result;
}

uint64_t _ReadingHistoryServiceStatus.isLoaded.getter(char a1)
{
  return a1 & 1;
}

uint64_t ReadingHistoryDataStore.updateCollector.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1000936F8(v1 + 16, a1, (uint64_t *)&unk_100291C40);
}

uint64_t ReadingHistoryDataStore.updateCollector.setter(uint64_t a1)
{
  swift_beginAccess();
  sub_1000AF3B4(a1, v1 + 16, (uint64_t *)&unk_100291C40);
  return swift_endAccess();
}

uint64_t (*ReadingHistoryDataStore.updateCollector.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_100094C0C()
{
  uint64_t v1 = sub_10007DC14(&qword_100291C78);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unsigned int v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unsigned int v6 = (char *)&v25 - v5;
  sub_10007DC14(&qword_100291EC8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100215850;
  v27[0] = 0x3D6C65646F6DLL;
  v27[1] = 0xE600000000000000;
  v28._countAndFlagsBits = ReadingHistoryModel.description.getter();
  sub_1001EC490(v28);
  swift_bridgeObjectRelease();
  uint64_t v8 = v27[1];
  *(void *)(v7 + 32) = v27[0];
  *(void *)(v7 + 40) = v8;
  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "currentStreak=");
  HIBYTE(v27[1]) = -18;
  uint64_t v9 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v26 = v0;
  sub_1000936F8(v0 + v10, (uint64_t)v6, &qword_100291C78);
  uint64_t v11 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v6, 1, v11) == 1)
  {
    sub_1000816A4((uint64_t)v6, &qword_100291C78);
    uint64_t v13 = (void *)0xE300000000000000;
    uint64_t v14 = 7104878;
  }
  else
  {
    uint64_t v14 = ReadingHistory.Streak.description.getter();
    uint64_t v13 = v15;
    sub_1000AC2D4((uint64_t)v6, type metadata accessor for ReadingHistory.Streak);
  }
  v29._countAndFlagsBits = v14;
  v29._object = v13;
  sub_1001EC490(v29);
  swift_bridgeObjectRelease();
  uint64_t v16 = v27[1];
  *(void *)(v7 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v27[0];
  *(void *)(v7 + 56) = v16;
  v27[0] = 0x3D7961646F74;
  v27[1] = 0xE600000000000000;
  uint64_t v17 = v26;
  v30._countAndFlagsBits = sub_1001EB040();
  sub_1001EC490(v30);
  swift_bridgeObjectRelease();
  uint64_t v18 = v27[1];
  *(void *)(v7 + 64) = v27[0];
  *(void *)(v7 + 72) = v18;
  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "longestStreak=");
  HIBYTE(v27[1]) = -18;
  sub_1000936F8(v17 + *(int *)(v9 + 28), (uint64_t)v4, &qword_100291C78);
  if (v12(v4, 1, v11) == 1)
  {
    sub_1000816A4((uint64_t)v4, &qword_100291C78);
    id v19 = (void *)0xE300000000000000;
    uint64_t v20 = 7104878;
  }
  else
  {
    uint64_t v20 = ReadingHistory.Streak.description.getter();
    id v19 = v21;
    sub_1000AC2D4((uint64_t)v4, type metadata accessor for ReadingHistory.Streak);
  }
  v31._countAndFlagsBits = v20;
  v31._object = v19;
  sub_1001EC490(v31);
  swift_bridgeObjectRelease();
  uint64_t v22 = v27[1];
  *(void *)(v7 + 80) = v27[0];
  *(void *)(v7 + 8_Block_object_dispose(&STACK[0x3B0], 8) = v22;
  v27[0] = v7;
  sub_10007DC14(&qword_100292710);
  sub_1000815A4((unint64_t *)&qword_100291F60, &qword_100292710);
  uint64_t v23 = sub_1001EC300();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100094FC0()
{
  uint64_t v1 = v0;
  uint64_t v57 = sub_1001EBA60();
  uint64_t v62 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v60 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1001EBAA0();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v58 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EBA70();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100291C78);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v52 = v15;
  uint64_t v53 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  id v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v1 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_1000AE830(v22, (uint64_t)v21, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v23 = *(int *)(v19 + 28);
  unint64_t v55 = v21;
  uint64_t v24 = (uint64_t)&v21[v23];
  sub_1000936F8((uint64_t)&v21[v23], (uint64_t)v12, &qword_100291C78);
  uint64_t v25 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  int v27 = v26(v12, 1, v25);
  id v56 = v17;
  if (v27 == 1)
  {
    sub_1000816A4((uint64_t)v12, &qword_100291C78);
    uint64_t v28 = sub_1001EB0C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
  }
  else
  {
    uint64_t v29 = sub_1001EB0C0();
    uint64_t v50 = v4;
    Swift::String v30 = v17;
    uint64_t v49 = v5;
    uint64_t v31 = v29;
    uint64_t v32 = *(void *)(v29 - 8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v30, v12, v29);
    sub_1000AC2D4((uint64_t)v12, type metadata accessor for ReadingHistory.Streak);
    uint64_t v4 = v50;
    uint64_t v33 = v31;
    uint64_t v5 = v49;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v33);
  }
  sub_1000936F8(v24, (uint64_t)v10, &qword_100291C78);
  if (v26(v10, 1, v25) == 1)
  {
    sub_1000816A4((uint64_t)v10, &qword_100291C78);
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v34 = *(void *)&v10[*(int *)(v25 + 20)];
    sub_1000AC2D4((uint64_t)v10, type metadata accessor for ReadingHistory.Streak);
  }
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  uint64_t v35 = v54;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v54, enum case for DispatchQoS.QoSClass.background(_:), v4);
  unint64_t v36 = (void *)sub_1001ECA10();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v35, v4);
  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  uint64_t v38 = (uint64_t)v56;
  uint64_t v39 = v53;
  sub_1000936F8((uint64_t)v56, v53, (uint64_t *)&unk_1002924C0);
  unint64_t v40 = (*(unsigned __int8 *)(v51 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v41 = (v52 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v37;
  sub_1000935F8(v39, v42 + v40, (uint64_t *)&unk_1002924C0);
  *(void *)(v42 + v41) = v34;
  aBlock[4] = sub_1000AF5C4;
  aBlock[5] = v42;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  aBlock[3] = &unk_100263CD0;
  uint64_t v43 = _Block_copy(aBlock);
  swift_retain();
  id v44 = v58;
  sub_1001EBA80();
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_1000AF658((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  uint64_t v45 = v60;
  uint64_t v46 = v57;
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v43);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v61);
  sub_1000816A4(v38, (uint64_t *)&unk_1002924C0);
  sub_1000AC2D4((uint64_t)v55, type metadata accessor for ReadingHistoryDataStore.State);
  swift_release();
  return swift_release();
}

void sub_1000957C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EB0C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - v13;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = *(void **)(Strong + 112);
    sub_1000936F8(a2, (uint64_t)v7, (uint64_t *)&unk_1002924C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      id v17 = v16;
      sub_1000816A4((uint64_t)v7, (uint64_t *)&unk_1002924C0);
      NSString v18 = sub_1001EC340();
      [v17 removeObjectForKey:v18];

LABEL_7:
      NSString v25 = sub_1001EC340();
      [v16 setInteger:a3 forKey:v25];
      swift_release();

      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    id v19 = v16;
    uint64_t v20 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v12);
    uint64_t v22 = 100 * v20;
    if ((unsigned __int128)(v20 * (__int128)100) >> 64 == (100 * v20) >> 63)
    {
      uint64_t v23 = v22 + v21;
      if (!__OFADD__(v22, v21))
      {
        NSString v24 = sub_1001EC340();
        [v19 setInteger:v23 forKey:v24];

        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t *ReadingHistoryDataStore.recalculationCount.unsafeMutableAddressor()
{
  return &static ReadingHistoryDataStore.recalculationCount;
}

uint64_t static ReadingHistoryDataStore.recalculationCount.getter()
{
  return static ReadingHistoryDataStore.recalculationCount;
}

uint64_t static ReadingHistoryDataStore.recalculationCount.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  static ReadingHistoryDataStore.recalculationCount = a1;
  return result;
}

uint64_t (*static ReadingHistoryDataStore.recalculationCount.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ReadingHistoryDataStore.__allocating_init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6, void (*a7)(void), uint64_t a8)
{
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v18 = sub_100095C78(a2, v17);
  uint64_t v19 = sub_1000ABFF0(a1, v18, a3, a4, a5, a6, a7, a8, v8, v17, v16);
  swift_unknownObjectRelease();

  swift_release();
  sub_1000947F0(a2);
  return v19;
}

uint64_t sub_100095C78(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t ReadingHistoryDataStore.init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6, void (*a7)(void), uint64_t a8)
{
  uint64_t v23 = a5;
  NSString v24 = a7;
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v17 = sub_100095C78(a2, v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  uint64_t v21 = sub_1000AB21C(a1, (uint64_t)v19, a3, a4, v23, a6, v24, a8, v8, v16, v15);
  swift_unknownObjectRelease();

  swift_release();
  sub_1000947F0(a2);
  return v21;
}

uint64_t sub_100095E14(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100095E74(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100095E74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292018);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EACA0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v22 = 0;
  uint64_t v11 = *(NSObject **)(v2 + 144);
  uint64_t v12 = swift_allocObject();
  sub_1000935F8(a1, v12 + 16, &qword_100291ED8);
  *(void *)(v12 + 64) = v2;
  *(void *)(v12 + 72) = &v22;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1000AF7E0;
  *(void *)(v13 + 24) = v12;
  uint64_t v20 = sub_1000B0738;
  uint64_t v21 = v13;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v19 = sub_100089470;
  *((void *)&v19 + 1) = &unk_100263D48;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);
  _Block_release(v14);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    if (v22 == 1)
    {
      sub_1000AF7FC();
      long long aBlock = 0u;
      long long v19 = 0u;
      sub_1001EB230();
      sub_1000816A4((uint64_t)&aBlock, &qword_100295B50);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_1000816A4((uint64_t)v6, &qword_100292018);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        id v16 = [self defaultCenter];
        Class isa = sub_1001EAC70().super.isa;
        [v16 postNotification:isa];

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1000961B4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100096214(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100096214(uint64_t a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100291F40);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = *(NSObject **)(v1 + 144);
  sub_1000936F8(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100291F40);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1000935F8((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, &qword_100291F40);
  *(void *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1000AF290;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1000B0738;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  aBlock[3] = &unk_100263B90;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall ReadingHistoryDataStore.observeSignificantDateChange(_:)(NSNotificationName a1)
{
  id v3 = [self defaultCenter];
  [v3 addObserver:v1 selector:"_handleSignificantDateChange:" name:a1 object:0];
}

uint64_t sub_1000964A0@<X0>(void (*a1)(char *, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_1001EB180();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EB0C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v30 - v12);
  sub_1001EB0F0();
  sub_1001EB020();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  BOOL v14 = sub_1001D1B18(a1, 1);
  if (!sub_1001D1B18(v13, 1))
  {
    sub_1001EC910();
    if (qword_1002910E8 == -1)
    {
LABEL_6:
      id v16 = (id)qword_100293A68;
      sub_1001EB530();

      (*(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v8 + 8))(v13, v7);
      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  if (__OFADD__(static ReadingHistoryDataStore.recalculationCount, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  ++static ReadingHistoryDataStore.recalculationCount;
  if (v14) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = v13;
  }
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v8 + 16))(v11, v15, v7);
  uint64_t v17 = sub_1001D1E60((uint64_t)v11, 1);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100215310;
  id v20 = v18;
  uint64_t v21 = sub_1001EB040();
  uint64_t v23 = v22;
  *(void *)(v19 + 56) = &type metadata for String;
  unint64_t v24 = sub_10007DC58();
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v23;
  *(void *)(v19 + 96) = &type metadata for Int;
  *(void *)(v19 + 104) = &protocol witness table for Int;
  *(void *)(v19 + 64) = v24;
  *(void *)(v19 + 72) = v17;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  NSString v25 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v8 + 8);
  v25(v13, v7);
  if (v17 >= 2)
  {
    uint64_t v26 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v30, v11, v7);
    uint64_t v27 = type metadata accessor for ReadingHistory.Streak(0);
    *(void *)(v26 + *(int *)(v27 + 20)) = v17;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  }
  v25((void (*)(char *, uint64_t, uint64_t, uint64_t))v11, v7);
LABEL_13:
  uint64_t v29 = type metadata accessor for ReadingHistory.Streak(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v30, 1, 1, v29);
}

uint64_t sub_100096910@<X0>(void (*a1)(char *, uint64_t, uint64_t, uint64_t)@<X0>, int64_t a2@<X1>, void (*a3)(char *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  int64_t v81 = a2;
  uint64_t v82 = a1;
  uint64_t v79 = a4;
  uint64_t v5 = sub_10007DC14(&qword_100291C78);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v74 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v73 - v8;
  uint64_t v10 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v80 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v77 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001EB180();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1001EB0C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v76 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v73 - v21;
  __chkstk_darwin(v20);
  unint64_t v24 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v73 - v23);
  sub_1001EB0F0();
  sub_1001EB020();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v78 = v17;
  NSString v25 = *(void (**)(void))(v17 + 16);
  uint64_t v83 = a3;
  ((void (*)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v25)(v22, a3, v16);
  uint64_t v26 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v22);
  uint64_t v28 = v27;
  uint64_t v84 = v24;
  uint64_t v75 = v25;
  ((void (*)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v25)(v22, v24, v16);
  uint64_t v29 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v22);
  uint64_t v31 = v30;
  uint64_t v32 = v82;
  uint64_t v33 = sub_1001D25D0(v81);
  uint64_t v34 = *(void *)(sub_1000A98F4(v33, v26, v28, v29, v31) + 16);
  swift_release();
  uint64_t v35 = type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_1000936F8((uint64_t)v32 + *(int *)(v35 + 20), (uint64_t)v9, &qword_100291C78);
  uint64_t v36 = v80;
  uint64_t v37 = v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v9, 1, v10) == 1)
  {
    sub_1000816A4((uint64_t)v9, &qword_100291C78);
LABEL_5:
    uint64_t v39 = v78;
    unint64_t v40 = v84;
    sub_1000964A0(v83, v79);
    return (*(uint64_t (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v39 + 8))(v40, v16);
  }
  uint64_t v38 = v77;
  sub_1000AF720((uint64_t)v9, v77, type metadata accessor for ReadingHistory.Streak);
  if (v34)
  {
    sub_1000AC2D4(v38, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_5;
  }
  uint64_t v42 = v76;
  uint64_t v82 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v16;
  ((void (*)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v75)(v76, v38, v16);
  uint64_t v43 = *(void *)(v38 + *(int *)(v37 + 20));
  id v44 = v83;
  BOOL v45 = sub_1001D1B18(v83, 1);
  uint64_t v46 = v84;
  BOOL v47 = sub_1001D1B18(v84, 1);
  if ((sub_1001EB090() & 1) == 0)
  {
    if ((sub_1001EB090() & 1) == 0)
    {
      if ((sub_1001EB080() & 1) != 0 && !v47)
      {
        os_log_type_t v71 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))(v78 + 8);
        uint64_t v72 = v82;
        v71(v42, v82);
        sub_1000AC2D4(v77, type metadata accessor for ReadingHistory.Streak);
        v71(v46, v72);
        id v44 = v74;
        if (v45)
        {
          v75();
          *(void *)((char *)v44 + *(int *)(v37 + 20)) = 1;
          (*(void (**)(void, void, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v37);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))((uint64_t)v74, 1, 1, v37);
        }
      }
      else
      {
        os_log_type_t v65 = v44;
        id v44 = v74;
        sub_1000964A0(v65, (uint64_t)v74);
        uint64_t v66 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))(v78 + 8);
        unint64_t v67 = v82;
        v66(v42, v82);
        sub_1000AC2D4(v77, type metadata accessor for ReadingHistory.Streak);
        v66(v46, v67);
      }
      return sub_1000935F8((uint64_t)v44, v79, &qword_100291C78);
    }
    if (v45)
    {
      uint64_t v52 = (uint64_t)v74;
      ((void (*)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))v75)(v74, v44, v82);
      BOOL v53 = __OFADD__(v43, 1);
      uint64_t v54 = v43 + 1;
      if (!v53)
      {
        uint64_t v55 = v77;
        *(void *)(v52 + *(int *)(v37 + 20)) = v54;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v52, 0, 1, v37);
        sub_1001EC910();
        if (qword_1002910E8 != -1) {
          swift_once();
        }
        id v56 = (void *)qword_100293A68;
        sub_10007DC14((uint64_t *)&unk_100291A20);
        uint64_t v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = xmmword_100215310;
        id v58 = v56;
        uint64_t v59 = sub_1001EB040();
        uint64_t v61 = v60;
        *(void *)(v57 + 56) = &type metadata for String;
        unint64_t v62 = sub_10007DC58();
        *(void *)(v57 + 32) = v59;
        *(void *)(v57 + 40) = v61;
        *(void *)(v57 + 96) = &type metadata for Int;
        *(void *)(v57 + 104) = &protocol witness table for Int;
        *(void *)(v57 + 64) = v62;
        *(void *)(v57 + 72) = v54;
        sub_1001EB530();

        swift_bridgeObjectRelease();
        uint64_t v63 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))(v78 + 8);
        uint64_t v64 = v82;
        v63(v76, v82);
        sub_1000AC2D4(v55, type metadata accessor for ReadingHistory.Streak);
        v63(v84, v64);
        id v44 = v74;
        return sub_1000935F8((uint64_t)v44, v79, &qword_100291C78);
      }
      __break(1u);
    }
    else
    {
      id v44 = v74;
      uint64_t v42 = v84;
      uint64_t v46 = v82;
      ((void (*)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))v75)(v74, v84, v82);
      *(void *)((char *)v44 + *(int *)(v37 + 20)) = v43;
      (*(void (**)(void, void, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v37);
      sub_1001EC8E0();
      if (qword_1002910E8 == -1) {
        goto LABEL_24;
      }
    }
LABEL_34:
    swift_once();
    goto LABEL_24;
  }
  id v44 = v74;
  if (v45)
  {
    uint64_t v48 = v77;
    sub_1000AE830(v77, (uint64_t)v74, type metadata accessor for ReadingHistory.Streak);
    (*(void (**)(void, void, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v37);
    sub_1001EC8E0();
    uint64_t v46 = v82;
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v49 = (id)qword_100293A68;
    sub_1001EB530();

    uint64_t v50 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))(v78 + 8);
    v50(v76, v46);
    uint64_t v51 = v48;
LABEL_28:
    sub_1000AC2D4(v51, type metadata accessor for ReadingHistory.Streak);
    v50(v84, v46);
    return sub_1000935F8((uint64_t)v44, v79, &qword_100291C78);
  }
  uint64_t v46 = v82;
  if (v43 < 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))((uint64_t)v74, 1, 1, v37);
    sub_1001EC8E0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v70 = (id)qword_100293A68;
    sub_1001EB530();

    uint64_t v50 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))(v78 + 8);
    v50(v76, v46);
    uint64_t v51 = v77;
    goto LABEL_28;
  }
  uint64_t v42 = v84;
  ((void (*)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))v75)(v74, v84, v82);
  *(void *)((char *)v44 + *(int *)(v37 + 20)) = v43 - 1;
  (*(void (**)(void, void, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v37);
  sub_1001EC8E0();
  if (qword_1002910E8 != -1) {
    goto LABEL_34;
  }
LABEL_24:
  id v68 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v69 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t, uint64_t)))(v78 + 8);
  v69(v76, v46);
  sub_1000AC2D4(v77, type metadata accessor for ReadingHistory.Streak);
  v69(v42, v46);
  return sub_1000935F8((uint64_t)v44, v79, &qword_100291C78);
}

uint64_t sub_100097410(uint64_t a1)
{
  uint64_t v121 = *v1;
  uint64_t v131 = sub_10007DC14(&qword_100291C50);
  long long v138 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 - 8);
  __chkstk_darwin(v131);
  Swift::Int v130 = (char *)&v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007DC14(&qword_100296830);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v129 = (uint64_t)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v128 = (uint64_t)&v115 - v7;
  uint64_t v133 = sub_1001EB180();
  uint64_t v139 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v134 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100291FC8);
  __chkstk_darwin(v9 - 8);
  long long v147 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100291FD0);
  __chkstk_darwin(v11 - 8);
  id v146 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_1001EAD80();
  long long v136 = *(void (***)(uint64_t, uint64_t, uint64_t))(v145 - 8);
  __chkstk_darwin(v145);
  v144 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v14 - 8);
  long long v150 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for ReadingHistoryDataStore.State(0);
  __chkstk_darwin(v142);
  long long v135 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1001EB0C0();
  uint64_t v125 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v143 = (uint64_t)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  Swift::Int v141 = (void (**)(char *, uint64_t))((char *)&v115 - v21);
  __chkstk_darwin(v20);
  Swift::Int v137 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v115 - v22);
  uint64_t v23 = sub_10007DC14(&qword_100291C78);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v120 = (uint64_t)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v124 = (uint64_t)&v115 - v26;
  uint64_t v27 = sub_10007DC14(&qword_100291FD8);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10007DC14((uint64_t *)&unk_100291FE0);
  uint64_t v148 = *(void *)(v30 - 8);
  int64_t v149 = v30;
  __chkstk_darwin(v30);
  Swift::Int v140 = (char *)&v115 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v115 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v115 - v37;
  __chkstk_darwin(v36);
  unint64_t v40 = (char *)&v115 - v39;
  uint64_t v41 = (uint64_t)v1;
  uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))((char *)v1
                                                       + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state);
  swift_beginAccess();
  sub_1000AE830((uint64_t)v42, (uint64_t)v40, type metadata accessor for ReadingHistoryModel);
  sub_1000AF658((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  char v43 = sub_1001EBD20();
  uint64_t v119 = v40;
  uint64_t result = sub_1000AC2D4((uint64_t)v40, type metadata accessor for ReadingHistoryModel);
  if ((v43 & 1) == 0) {
    return result;
  }
  uint64_t v132 = v17;
  uint64_t v118 = v41;
  uint64_t v123 = v42;
  sub_1000AE830((uint64_t)v42, (uint64_t)v38, type metadata accessor for ReadingHistoryModel);
  sub_1000AF658((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  uint64_t v117 = a1;
  sub_1001EC010();
  sub_10007DC14(&qword_100291BD8);
  sub_1000815A4((unint64_t *)&unk_100291FF0, &qword_100291BD8);
  sub_1001EC040();
  uint64_t v46 = v148;
  int64_t v45 = v149;
  if ((*(unsigned int (**)(char *, uint64_t, int64_t))(v148 + 48))(v29, 1, v149) == 1)
  {
    sub_1000816A4((uint64_t)v29, &qword_100291FD8);
    uint64_t v116 = 0;
  }
  else
  {
    BOOL v47 = v140;
    (*(void (**)(char *, char *, int64_t))(v46 + 32))(v140, v29, v45);
    uint64_t v48 = sub_1001EBEA0();
    __chkstk_darwin(v48);
    uint64_t v113 = v38;
    id v114 = v35;
    sub_100115AD8(sub_1000AF704, (uint64_t)&v111, v48);
    uint64_t v116 = 0;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, int64_t))(v46 + 8))(v47, v45);
  }
  uint64_t v49 = v125;
  uint64_t v50 = v137;
  uint64_t v51 = v38;
  uint64_t v52 = v134;
  uint64_t v53 = (uint64_t)v150;
  uint64_t v54 = v142;
  int64_t v55 = (int64_t)v35;
  id v56 = v123;
  sub_1000936F8((uint64_t)v123 + *(int *)(v142 + 20), v124, &qword_100291C78);
  uint64_t v57 = v49;
  id v58 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), char *, uint64_t))(v49 + 16);
  uint64_t v59 = v132;
  v58(v50, (char *)v56 + *(int *)(v54 + 24), v132);
  uint64_t v127 = (uint64_t)v51;
  uint64_t v60 = sub_1001D25D0(v55);
  if (!*(void *)(v60 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v74 = v124;
    sub_1000993B0(v55, v124, (uint64_t)v50, v118, v117);
    (*(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v57 + 8))(v50, v59);
    uint64_t v76 = v127;
    goto LABEL_52;
  }
  int64_t v126 = v55;
  uint64_t v61 = (uint64_t)v141;
  v58((void (*)(char *, uint64_t, uint64_t, uint64_t))v141, (char *)v50, v59);
  Swift::UInt v62 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(v61);
  uint64_t v64 = v59;
  if (*(void *)(v60 + 16) == 1 && (sub_1000F3618(v62, v63, v60) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1001EC8E0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    os_log_type_t v65 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_100215320;
    id v67 = v65;
    uint64_t v68 = sub_1001EB040();
    uint64_t v70 = v69;
    *(void *)(v66 + 56) = &type metadata for String;
    *(void *)(v66 + 64) = sub_10007DC58();
    *(void *)(v66 + 32) = v68;
    *(void *)(v66 + 40) = v70;
    os_log_type_t v71 = v137;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    uint64_t v72 = v135;
    sub_1000AE830((uint64_t)v123, (uint64_t)v135, type metadata accessor for ReadingHistoryDataStore.State);
    uint64_t v73 = v120;
    int64_t v55 = v126;
    sub_100096910(v72, v126, v71, v120);
    sub_1000AC2D4((uint64_t)v72, type metadata accessor for ReadingHistoryDataStore.State);
    uint64_t v74 = v124;
    sub_1000816A4(v124, &qword_100291C78);
    sub_1000935F8(v73, v74, &qword_100291C78);
    uint64_t v75 = (uint64_t)v119;
    sub_1000996D8(v55, v74, (uint64_t)v119);
    uint64_t v76 = v127;
    uint64_t v77 = v117;
    uint64_t v78 = v125;
    goto LABEL_50;
  }
  uint64_t v79 = *(void *)(v60 + 56);
  uint64_t v148 = v60 + 56;
  uint64_t v80 = 1 << *(unsigned char *)(v60 + 32);
  uint64_t v81 = -1;
  if (v80 < 64) {
    uint64_t v81 = ~(-1 << v80);
  }
  unint64_t v82 = v81 & v79;
  int64_t v149 = (unint64_t)(v80 + 63) >> 6;
  Swift::Int v141 = (void (**)(char *, uint64_t))(v139 + 1);
  uint64_t v142 = (uint64_t)(v139 + 7);
  Swift::Int v140 = (char *)(v136 + 1);
  uint64_t v139 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  long long v135 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v125 + 8);
  long long v136 = (void (**)(uint64_t, uint64_t, uint64_t))(v125 + 32);
  uint64_t v123 = (void (**)(char *, uint64_t, uint64_t))(v138 + 2);
  unint64_t v122 = (void (**)(char *, uint64_t))(v138 + 1);
  long long v138 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v125 + 56);
  swift_bridgeObjectRetain();
  uint64_t v83 = 0;
  uint64_t v84 = v133;
  while (1)
  {
    if (v82)
    {
      unint64_t v85 = __clz(__rbit64(v82));
      v82 &= v82 - 1;
      unint64_t v86 = v85 | (v83 << 6);
      goto LABEL_29;
    }
    if (__OFADD__(v83++, 1)) {
      goto LABEL_56;
    }
    if (v83 >= v149) {
      break;
    }
    unint64_t v88 = *(void *)(v148 + 8 * v83);
    if (!v88)
    {
      uint64_t v89 = v83 + 1;
      if (v83 + 1 >= v149) {
        break;
      }
      unint64_t v88 = *(void *)(v148 + 8 * v89);
      if (!v88)
      {
        uint64_t v89 = v83 + 2;
        if (v83 + 2 >= v149) {
          break;
        }
        unint64_t v88 = *(void *)(v148 + 8 * v89);
        if (!v88)
        {
          uint64_t v89 = v83 + 3;
          if (v83 + 3 >= v149) {
            break;
          }
          unint64_t v88 = *(void *)(v148 + 8 * v89);
          if (!v88)
          {
            while (1)
            {
              uint64_t v83 = v89 + 1;
              if (__OFADD__(v89, 1)) {
                goto LABEL_57;
              }
              if (v83 >= v149) {
                goto LABEL_48;
              }
              unint64_t v88 = *(void *)(v148 + 8 * v83);
              ++v89;
              if (v88) {
                goto LABEL_28;
              }
            }
          }
        }
      }
      uint64_t v83 = v89;
    }
LABEL_28:
    unint64_t v82 = (v88 - 1) & v88;
    unint64_t v86 = __clz(__rbit64(v88)) + (v83 << 6);
LABEL_29:
    uint64_t v90 = *(void *)(v60 + 48);
    uint64_t v91 = *(void *)(v90 + 16 * v86);
    uint64_t v92 = 100 * v91;
    if ((unsigned __int128)(v91 * (__int128)100) >> 64 != (100 * v91) >> 63)
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    uint64_t v93 = *(void *)(v90 + 16 * v86 + 8);
    if (__OFADD__(v92, v93)) {
      goto LABEL_55;
    }
    if (v92 + v93 <= 9999)
    {
      (*v138)(v53, 1, 1, v64);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v142)(v146, 1, 1, v84);
    uint64_t v94 = sub_1001EB190();
    uint64_t v95 = v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v147, 1, 1, v94);
    LOBYTE(v114) = 1;
    uint64_t v113 = 0;
    char v112 = 1;
    uint64_t v111 = 0;
    uint64_t v96 = v144;
    uint64_t v53 = (uint64_t)v150;
    sub_1001EAD70();
    sub_1001EB0F0();
    sub_1001EB130();
    (*v141)(v52, v84);
    (*(void (**)(char *, uint64_t))v140)(v96, v145);
    if ((*v139)(v53, 1, v64) == 1)
    {
LABEL_15:
      sub_1000816A4(v53, (uint64_t *)&unk_1002924C0);
    }
    else
    {
      uint64_t v97 = v143;
      (*v136)(v143, v53, v64);
      if (sub_1001EB080())
      {
        uint64_t v98 = v128;
        ReadingHistoryModel.readingHistoryDay(for:)(v128);
        uint64_t v99 = type metadata accessor for ReadingHistoryDay(0);
        uint64_t v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 48);
        if (v100(v98, 1, v99) == 1)
        {
          sub_1000816A4(v98, &qword_100296830);
          uint64_t v101 = 0;
        }
        else
        {
          uint64_t v102 = v130;
          uint64_t v103 = v131;
          (*v123)(v130, v98 + *(int *)(v99 + 20), v131);
          sub_1000AC2D4(v98, type metadata accessor for ReadingHistoryDay);
          sub_1001EBAE0();
          (*v122)(v102, v103);
          uint64_t v101 = v151;
        }
        uint64_t v104 = v129;
        ReadingHistoryModel.readingHistoryDay(for:)(v129);
        if (v100(v104, 1, v99) == 1)
        {
          sub_1000816A4(v104, &qword_100296830);
          uint64_t v64 = v132;
          uint64_t v84 = v133;
          uint64_t v105 = v143;
        }
        else
        {
          uint64_t v106 = v104 + *(int *)(v99 + 20);
          uint64_t v107 = v130;
          uint64_t v108 = v131;
          (*v123)(v130, v106, v131);
          sub_1000AC2D4(v104, type metadata accessor for ReadingHistoryDay);
          sub_1001EBAE0();
          (*v122)(v107, v108);
          uint64_t v64 = v132;
          uint64_t v84 = v133;
          uint64_t v105 = v143;
          if (v101 >= 1 && v101 < v151) {
            ReadingHistoryModel.setGoal(_:date:)(v101, v143);
          }
        }
        (*(void (**)(uint64_t, uint64_t))v135)(v105, v64);
        uint64_t v52 = v134;
        uint64_t v53 = (uint64_t)v150;
        uint64_t v60 = v95;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))v135)(v97, v64);
      }
    }
  }
LABEL_48:
  swift_release();
  sub_1001EC910();
  uint64_t v83 = v60;
  if (qword_1002910E8 == -1) {
    goto LABEL_49;
  }
LABEL_58:
  swift_once();
LABEL_49:
  id v109 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v110 = v120;
  int64_t v55 = v126;
  os_log_type_t v71 = v137;
  sub_1000964A0(v137, v120);
  uint64_t v74 = v124;
  sub_1000816A4(v124, &qword_100291C78);
  sub_1000935F8(v110, v74, &qword_100291C78);
  sub_100099BE4(v55, v83, v110);
  swift_bridgeObjectRelease();
  uint64_t v75 = (uint64_t)v119;
  sub_1000996D8(v55, v110, (uint64_t)v119);
  sub_1000816A4(v110, &qword_100291C78);
  uint64_t v77 = v117;
  uint64_t v78 = v125;
  uint64_t v76 = v127;
LABEL_50:
  sub_1000AF6A0(v75, v55);
  sub_1000993B0(v55, v74, (uint64_t)v71, v118, v77);
  (*(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v78 + 8))(v71, v64);
LABEL_52:
  sub_1000816A4(v74, &qword_100291C78);
  sub_1000AC2D4(v76, type metadata accessor for ReadingHistoryModel);
  return sub_1000AC2D4(v55, type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1000987C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v30 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v33 = (char *)&v27 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_1001EB0C0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v31 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v34 = (char *)&v27 - v16;
  uint64_t v17 = *a1;
  type metadata accessor for ReadingHistoryModel(0);
  uint64_t v35 = v17;
  sub_10007DC14(&qword_100291BD8);
  sub_1001EBF50();
  uint64_t v18 = v13;
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v19(v11, 1, v12) == 1) {
    return sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_1002924C0);
  }
  uint64_t v29 = v3;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v28(v34, v11, v12);
  uint64_t v21 = (uint64_t)v33;
  uint64_t v35 = v17;
  sub_1001EBF50();
  if (v19((char *)v21, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v34, v12);
    return sub_1000816A4(v21, (uint64_t *)&unk_1002924C0);
  }
  else
  {
    uint64_t v22 = v31;
    v28(v31, (char *)v21, v12);
    if (sub_1001EB080())
    {
      uint64_t v23 = v30;
      uint64_t v24 = v34;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v30, v34, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v12);
      uint64_t v35 = v17;
      sub_1001EBF60();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v18 + 8);
      v25(v22, v12);
      return ((uint64_t (*)(char *, uint64_t))v25)(v24, v12);
    }
    else
    {
      uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
      v26(v22, v12);
      return ((uint64_t (*)(char *, uint64_t))v26)(v34, v12);
    }
  }
}

uint64_t sub_100098B54(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v2 = sub_10007DC14(&qword_100291F90);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10007DC14(&qword_100291F98);
  uint64_t v4 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100291FA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14(&qword_100291BD0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10007DC14(&qword_100291FA8);
  uint64_t v29 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v33, v10);
  uint64_t v17 = (uint64_t *)v6;
  sub_1000815A4(&qword_100291FB0, &qword_100291BD0);
  uint64_t v31 = v10;
  sub_1001EC560();
  sub_1000815A4(&qword_100291FB8, &qword_100291FA8);
  uint64_t v33 = v14;
  sub_1001ECBB0();
  uint64_t v18 = v28;
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v20 = v4 + 48;
  uint64_t v19 = v21;
  if (v21(v9, 1, v28) != 1)
  {
    do
    {
      sub_1000935F8((uint64_t)v9, (uint64_t)v17, &qword_100291F98);
      uint64_t v22 = v20;
      uint64_t v23 = v18;
      uint64_t v24 = *v17;
      uint64_t v25 = sub_10007DC14(&qword_100291FC0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v30, 1, 1, v25);
      uint64_t v34 = v24;
      sub_1001EBF60();
      sub_1000816A4((uint64_t)v17, &qword_100291F98);
      sub_1001ECBB0();
      uint64_t v18 = v23;
      uint64_t v20 = v22;
    }
    while (v19(v9, 1, v18) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v33);
}

uint64_t sub_100098F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10007DC14(&qword_100291F68);
  uint64_t v4 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100291F70);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14(&qword_100291BD8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10007DC14(&qword_100291F78);
  uint64_t v29 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v33, v10);
  uint64_t v17 = (uint64_t *)v6;
  sub_1000815A4(&qword_100291F80, &qword_100291BD8);
  uint64_t v31 = v10;
  sub_1001EC560();
  sub_1000815A4(&qword_100291F88, &qword_100291F78);
  uint64_t v33 = v14;
  sub_1001ECBB0();
  uint64_t v18 = v28;
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v20 = v4 + 48;
  uint64_t v19 = v21;
  if (v21(v9, 1, v28) != 1)
  {
    do
    {
      sub_1000935F8((uint64_t)v9, (uint64_t)v17, &qword_100291F68);
      uint64_t v22 = v20;
      uint64_t v23 = v18;
      uint64_t v24 = *v17;
      uint64_t v25 = sub_1001EB0C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v30, 1, 1, v25);
      uint64_t v34 = v24;
      type metadata accessor for ReadingHistoryModel(0);
      sub_1001EBF60();
      sub_1000816A4((uint64_t)v17, &qword_100291F68);
      sub_1001ECBB0();
      uint64_t v18 = v23;
      uint64_t v20 = v22;
    }
    while (v19(v9, 1, v18) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v33);
}

uint64_t sub_1000993B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v36 = a4;
  uint64_t v34 = a3;
  uint64_t v32 = a2;
  uint64_t v33 = sub_1001EB0C0();
  uint64_t v6 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v8;
  uint64_t v9 = sub_10007DC14(&qword_100291C78);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v31 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v20 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v21 = (int *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AE830(a1, (uint64_t)v19, type metadata accessor for ReadingHistoryModel);
  sub_1000936F8(v32, (uint64_t)v13, &qword_100291C78);
  uint64_t v24 = v8;
  uint64_t v26 = v33;
  uint64_t v25 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v24, v34, v33);
  sub_1000AE830(a1, (uint64_t)v17, type metadata accessor for ReadingHistoryModel);
  uint64_t v27 = v31;
  sub_1001D1644(v25, v31);
  sub_1000AC2D4((uint64_t)v17, type metadata accessor for ReadingHistoryModel);
  sub_1000AF720((uint64_t)v19, (uint64_t)v23, type metadata accessor for ReadingHistoryModel);
  sub_1000935F8((uint64_t)v13, (uint64_t)&v23[v21[7]], &qword_100291C78);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v23[v21[8]], v30, v26);
  sub_1000935F8((uint64_t)v27, (uint64_t)&v23[v21[9]], &qword_100291C78);
  sub_10009B5A8((uint64_t)v23, v35, 0x656772656DLL, 0xE500000000000000);
  return sub_1000AC2D4((uint64_t)v23, type metadata accessor for ReadingHistoryDataStore.State);
}

uint64_t sub_1000996D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v41 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v38 - v9;
  uint64_t v11 = sub_10007DC14(&qword_100291C78);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v38 - v15;
  uint64_t v17 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000936F8(a2, (uint64_t)v16, &qword_100291C78);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v21(v16, 1, v17) == 1)
  {
    sub_1000816A4((uint64_t)v16, &qword_100291C78);
    return sub_1000AE830(a1, a3, type metadata accessor for ReadingHistoryModel);
  }
  uint64_t v40 = a3;
  sub_1000AF720((uint64_t)v16, (uint64_t)v20, type metadata accessor for ReadingHistory.Streak);
  uint64_t v22 = *(int *)(v17 + 20);
  uint64_t v23 = *(void *)&v20[v22];
  sub_1001D1644((uint64_t)v20, v14);
  if (v21(v14, 1, v17) == 1)
  {
    sub_1000816A4((uint64_t)v14, &qword_100291C78);
    if (v23 < 1) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v24 = *(void *)&v14[*(int *)(v17 + 20)];
    sub_1000AC2D4((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
    if (v24 >= v23)
    {
LABEL_11:
      sub_1000AC2D4((uint64_t)v20, type metadata accessor for ReadingHistory.Streak);
      a3 = v40;
      return sub_1000AE830(a1, a3, type metadata accessor for ReadingHistoryModel);
    }
  }
  type metadata accessor for ReadingHistoryModel(0);
  uint64_t v42 = *(void *)&v20[v22];
  uint64_t v25 = sub_10007DC14(&qword_100291BD8);
  sub_1001EBF50();
  uint64_t v26 = sub_1001EB0C0();
  uint64_t v27 = *(void *)(v26 - 8);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v10, 1, v26);
  sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_1002924C0);
  if (v28 != 1) {
    goto LABEL_11;
  }
  uint64_t v39 = v25;
  v38[3] = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v29 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = *(void *)&v20[v22];
  *(_OWORD *)(v30 + 16) = xmmword_100215310;
  *(void *)(v30 + 56) = &type metadata for Int;
  *(void *)(v30 + 64) = &protocol witness table for Int;
  *(void *)(v30 + 32) = v31;
  id v32 = v29;
  uint64_t v33 = sub_1001EB040();
  uint64_t v35 = v34;
  *(void *)(v30 + 96) = &type metadata for String;
  *(void *)(v30 + 104) = sub_10007DC58();
  *(void *)(v30 + 72) = v33;
  *(void *)(v30 + 80) = v35;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  sub_1000AE830(a1, v40, type metadata accessor for ReadingHistoryModel);
  uint64_t v36 = v41;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v41, v20, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v36, 0, 1, v26);
  uint64_t v42 = v31;
  sub_1001EBF60();
  return sub_1000AC2D4((uint64_t)v20, type metadata accessor for ReadingHistory.Streak);
}

uint64_t sub_100099BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v140 = a3;
  uint64_t v148 = sub_10007DC14(&qword_100294F90);
  uint64_t v155 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  long long v147 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReadingHistoryMonth(0);
  __chkstk_darwin(v6 - 8);
  id v146 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100291F90);
  __chkstk_darwin(v8 - 8);
  v161 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14((uint64_t *)&unk_100292000);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_1001EB160();
  v157 = *(void (***)(char *, uint64_t))(v163 - 8);
  __chkstk_darwin(v163);
  v162 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10007DC14(&qword_100296830);
  __chkstk_darwin(v14 - 8);
  v160 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ReadingHistoryDay(0);
  NSErrorUserInfoKey v153 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v169 = (uint64_t)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10007DC14(&qword_100291C78);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  long long v138 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  Swift::Int v141 = (char *)&v131 - v21;
  uint64_t v185 = sub_1001EB180();
  uint64_t v180 = *(void *)(v185 - 8);
  uint64_t v22 = __chkstk_darwin(v185);
  v176 = (char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v183 = (char *)&v131 - v24;
  uint64_t v25 = sub_10007DC14(&qword_100291FC8);
  __chkstk_darwin(v25 - 8);
  v178 = (char *)&v131 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10007DC14(&qword_100291FD0);
  __chkstk_darwin(v27 - 8);
  v182 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = (void (**)(char *, char *, uint64_t))sub_1001EAD80();
  uint64_t v29 = (uint64_t)*(v181 - 1);
  __chkstk_darwin(v181);
  v179 = (char *)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v139 = (char *)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v131 - v34;
  uint64_t v36 = sub_1001EB0C0();
  v184 = *(char **)(v36 - 8);
  uint64_t v37 = __chkstk_darwin(v36);
  v165 = (char *)&v131 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  v168 = (char *)&v131 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  v167 = (char *)&v131 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v142 = (char *)&v131 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v177 = (char *)&v131 - v46;
  __chkstk_darwin(v45);
  v164 = (char *)&v131 - v47;
  uint64_t v166 = a1;
  uint64_t v188 = a1;
  swift_bridgeObjectRetain();
  sub_1000A9AA0((uint64_t)sub_1000AF788, (uint64_t)v187, a2);
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v49 = sub_10013A6C0(v48);
  swift_release();
  v189 = v49;
  sub_1000A6784((uint64_t *)&v189);
  swift_release();
  uint64_t v50 = (uint64_t)v189;
  uint64_t v51 = v189[2];
  uint64_t v145 = v12;
  uint64_t v159 = v16;
  if (v51)
  {
    v174 = (void (*)(void))(v180 + 8);
    v175 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v180 + 56);
    v172 = (unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48);
    v173 = (void (**)(char *, void (**)(char *, char *, uint64_t)))(v29 + 8);
    uint64_t v171 = (uint64_t)(v184 + 32);
    v170 = (void (*)(char *, char *, uint64_t))(v184 + 56);
    swift_retain();
    id v158 = (void (**)(char *, void, uint64_t))v50;
    uint64_t v52 = (void *)(v50 + 40);
    v186 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v53 = *(v52 - 1);
      uint64_t v54 = 100 * v53;
      if ((unsigned __int128)(v53 * (__int128)100) >> 64 != (100 * v53) >> 63)
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      if (__OFADD__(v54, *v52)) {
        goto LABEL_53;
      }
      if (v54 + *v52 <= 9999)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v170)(v35, 1, 1, v36);
      }
      else
      {
        uint64_t v55 = v185;
        (*v175)(v182, 1, 1, v185);
        uint64_t v56 = sub_1001EB190();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v178, 1, 1, v56);
        uint64_t v57 = v179;
        sub_1001EAD70();
        id v58 = v183;
        sub_1001EB0F0();
        sub_1001EB130();
        (*(void (**)(char *, uint64_t))v174)(v58, v55);
        (*v173)(v57, v181);
        if ((*v172)(v35, 1, v36) != 1)
        {
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))v171;
          uint64_t v60 = v164;
          (*(void (**)(char *, char *, uint64_t))v171)(v164, v35, v36);
          v59(v177, v60, v36);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v61 = (unint64_t)v186;
          }
          else {
            unint64_t v61 = sub_1000A6C20(0, v186[2] + 1, 1, (unint64_t)v186, &qword_100292010, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
          }
          unint64_t v63 = *(void *)(v61 + 16);
          unint64_t v62 = *(void *)(v61 + 24);
          if (v63 >= v62 >> 1) {
            unint64_t v61 = sub_1000A6C20(v62 > 1, v63 + 1, 1, v61, &qword_100292010, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
          }
          *(void *)(v61 + 16) = v63 + 1;
          unint64_t v64 = (v184[80] + 32) & ~(unint64_t)v184[80];
          v186 = (void *)v61;
          v59((char *)(v61 + v64 + *((void *)v184 + 9) * v63), v177, v36);
          goto LABEL_5;
        }
      }
      sub_1000816A4((uint64_t)v35, (uint64_t *)&unk_1002924C0);
LABEL_5:
      v52 += 2;
      if (!--v51)
      {
        swift_release();
        os_log_type_t v65 = v186;
        goto LABEL_18;
      }
    }
  }
  os_log_type_t v65 = _swiftEmptyArrayStorage;
LABEL_18:
  swift_release();
  uint64_t v66 = v168;
  if (v65[2])
  {
    id v67 = v184;
    v178 = (char *)v65[2];
    unint64_t v68 = (v67[80] + 32) & ~(unint64_t)v67[80];
    v186 = v65;
    uint64_t v69 = (void (*)(void))*((void *)v184 + 2);
    v177 = (char *)v65 + v68;
    v174 = v69;
    v175 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v184 + 16);
    v69();
    uint64_t v70 = v183;
    sub_1001EB0F0();
    uint64_t v71 = (uint64_t)v167;
    sub_1001EB020();
    uint64_t v171 = sub_1001D1E60(v71, 1);
    uint64_t v72 = (void (*)(uint64_t, uint64_t))*((void *)v67 + 1);
    v67 += 8;
    v72(v71, v36);
    uint64_t v73 = v180 + 8;
    uint64_t v74 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v180 + 8);
    uint64_t v75 = v185;
    ((void (*)(char *, uint64_t))v74)(v70, v185);
    sub_1001EB0F0();
    sub_1001EB020();
    uint64_t v76 = v75;
    uint64_t v77 = (void (*)(char *, uint64_t))v72;
    uint64_t v180 = v73;
    v172 = v74;
    ((void (*)(char *, uint64_t))v74)(v70, v76);
    uint64_t v78 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v79 = *(void *)(v78 - 8);
    uint64_t v80 = *(void (**)(char *, void, uint64_t))(v79 + 56);
    uint64_t v81 = v79 + 56;
    uint64_t v82 = (uint64_t)v141;
    uint64_t v137 = v78;
    uint64_t v134 = v80;
    v80(v141, 1, 1);
    uint64_t v83 = 0;
    v179 = v67 + 48;
    v173 = (void (**)(char *, void (**)(char *, char *, uint64_t)))(v67 + 40);
    v181 = (void (**)(char *, char *, uint64_t))(v67 + 24);
    v182 = v67;
    LODWORD(v164) = enum case for Calendar.Component.year(_:);
    id v158 = (void (**)(char *, void, uint64_t))(v157 + 13);
    ++v157;
    v144 = (void (**)(char *, uint64_t, uint64_t))(v155 + 16);
    unsigned int v156 = enum case for Calendar.Component.month(_:);
    uint64_t v143 = (void (**)(char *, uint64_t))(v155 + 8);
    CFStringRef v154 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 7);
    LODWORD(v155) = enum case for Calendar.Component.day(_:);
    v153 += 6;
    uint64_t v133 = v81;
    long long v136 = (unsigned int (**)(char *, uint64_t, uint64_t))(v81 - 8);
    long long v135 = v178 - 1;
    uint64_t v84 = v139;
    unint64_t v85 = v165;
    while (1)
    {
LABEL_20:
      if ((unint64_t)v83 >= v186[2]) {
        goto LABEL_54;
      }
      unint64_t v86 = v184;
      ((void (*)(char *, char *, uint64_t))v174)(v84, &v177[*((void *)v184 + 9) * (void)v83], v36);
      uint64_t v87 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v86 + 7);
      v87(v84, 0, 1, v36);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v86 + 6))(v84, 1, v36) == 1)
      {
        uint64_t v128 = v77;
LABEL_51:
        swift_bridgeObjectRelease();
        v128(v66, v36);
        v128(v142, v36);
        return sub_1000935F8(v82, v140, &qword_100291C78);
      }
      unint64_t v88 = *v181;
      (*v181)(v85, v84, v36);
      if (sub_1001EB070()) {
        break;
      }
      ++v83;
      v77(v85, v36);
      if (v178 == v83)
      {
LABEL_48:
        uint64_t v128 = v77;
        v87(v84, 1, 1, v36);
        goto LABEL_51;
      }
    }
    uint64_t v89 = v183;
    sub_1001EB0F0();
    v170 = v88;
    uint64_t v90 = v167;
    sub_1001EB030();
    ((void (*)(char *, uint64_t))v172)(v89, v185);
    v77(v66, v36);
    v170(v66, v90, v36);
    if (!__OFADD__(v171, 1))
    {
      ++v171;
      int64_t v149 = v87;
      id v152 = v77;
      uint64_t v151 = v36;
      long long v150 = v83;
      uint64_t v132 = v83 + 1;
      while (1)
      {
        sub_1001EB0F0();
        uint64_t v91 = *v158;
        uint64_t v92 = v162;
        uint64_t v93 = v163;
        (*v158)(v162, v164, v163);
        uint64_t v94 = sub_1001EB170();
        uint64_t v95 = *v157;
        (*v157)(v92, v93);
        v91(v92, v156, v93);
        uint64_t v96 = sub_1001EB170();
        v95(v92, v93);
        v91(v92, v155, v93);
        uint64_t v97 = sub_1001EB170();
        v95(v92, v93);
        uint64_t v98 = 100 * v94;
        if ((unsigned __int128)(v94 * (__int128)100) >> 64 != (100 * v94) >> 63) {
          goto LABEL_55;
        }
        BOOL v99 = __OFADD__(v98, v96);
        uint64_t v100 = v98 + v96;
        if (v99) {
          goto LABEL_56;
        }
        v189 = (void *)v100;
        sub_10007DC14(&qword_100291BD0);
        uint64_t v101 = (uint64_t)v161;
        sub_1001EBF50();
        uint64_t v102 = sub_10007DC14(&qword_100291FC0);
        uint64_t v103 = *(void *)(v102 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102) == 1)
        {
          ((void (*)(char *, uint64_t))v172)(v176, v185);
          sub_1000816A4(v101, &qword_100291F90);
          uint64_t v104 = 1;
          uint64_t v105 = (uint64_t)v160;
          uint64_t v66 = v168;
          uint64_t v36 = v151;
          uint64_t v106 = v150;
          uint64_t v87 = v149;
          uint64_t v107 = v170;
        }
        else
        {
          uint64_t v108 = v101;
          uint64_t v109 = (uint64_t)v146;
          sub_1001EC100();
          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v108, v102);
          uint64_t v110 = v147;
          uint64_t v111 = v148;
          (*v144)(v147, v109, v148);
          sub_1000AC2D4(v109, type metadata accessor for ReadingHistoryMonth);
          v189 = (void *)v97;
          uint64_t v112 = (uint64_t)v145;
          sub_1001EBF50();
          (*v143)(v110, v111);
          uint64_t v113 = sub_10007DC14(&qword_100291220);
          uint64_t v114 = *(void *)(v113 - 8);
          int v115 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113);
          uint64_t v36 = v151;
          uint64_t v106 = v150;
          uint64_t v87 = v149;
          uint64_t v107 = v170;
          if (v115 == 1)
          {
            ((void (*)(char *, uint64_t))v172)(v176, v185);
            sub_1000816A4(v112, (uint64_t *)&unk_100292000);
            uint64_t v104 = 1;
            uint64_t v105 = (uint64_t)v160;
          }
          else
          {
            uint64_t v105 = (uint64_t)v160;
            sub_1001EC100();
            ((void (*)(char *, uint64_t))v172)(v176, v185);
            (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v112, v113);
            uint64_t v104 = 0;
          }
          uint64_t v66 = v168;
        }
        uint64_t v116 = v159;
        (*v154)(v105, v104, 1, v159);
        int v117 = (*v153)(v105, 1, v116);
        unint64_t v85 = v165;
        if (v117 == 1)
        {
          sub_1000816A4(v105, &qword_100296830);
          goto LABEL_41;
        }
        sub_1000AF720(v105, v169, type metadata accessor for ReadingHistoryDay);
        uint64_t v118 = sub_1001EC1A0();
        sub_10007DC14(&qword_100291C50);
        sub_1001EBAE0();
        if (v118 < (uint64_t)v189) {
          break;
        }
        if (__OFADD__(v171, 1)) {
          goto LABEL_57;
        }
        ++v171;
        uint64_t v119 = v183;
        sub_1001EB0F0();
        uint64_t v120 = v167;
        sub_1001EB030();
        ((void (*)(char *, uint64_t))v172)(v119, v185);
        sub_1000AC2D4(v169, type metadata accessor for ReadingHistoryDay);
        v152(v66, v36);
        v107(v66, v120, v36);
      }
      sub_1000AC2D4(v169, type metadata accessor for ReadingHistoryDay);
LABEL_41:
      uint64_t v82 = (uint64_t)v141;
      uint64_t v84 = v139;
      uint64_t v121 = v137;
      if ((*v136)(v141, 1, v137))
      {
        uint64_t v122 = v171;
        if (v171 >= 1) {
          goto LABEL_43;
        }
LABEL_45:
        uint64_t v77 = v152;
        v152(v85, v36);
      }
      else
      {
        uint64_t v122 = v171;
        if (*(void *)(v82 + *(int *)(v121 + 20)) >= v171) {
          goto LABEL_45;
        }
LABEL_43:
        uint64_t v171 = v122;
        uint64_t v123 = v183;
        sub_1001EB0F0();
        uint64_t v124 = v167;
        sub_1001EB020();
        uint64_t v82 = (uint64_t)v141;
        ((void (*)(char *, uint64_t))v172)(v123, v185);
        v152(v85, v36);
        uint64_t v125 = v138;
        v170(v138, v124, v36);
        *(void *)&v125[*(int *)(v137 + 20)] = v171;
        v134(v125, 0, 1);
        uint64_t v126 = (uint64_t)v125;
        uint64_t v77 = v152;
        sub_1000AF3B4(v126, v82, &qword_100291C78);
      }
      uint64_t v171 = 0;
      BOOL v127 = v135 == v106;
      uint64_t v83 = v132;
      if (v127) {
        goto LABEL_48;
      }
      goto LABEL_20;
    }
    goto LABEL_58;
  }
  uint64_t v129 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v140, 1, 1, v129);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10009B350(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ReadingHistoryDataStore.State(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000AE830(a1, (uint64_t)v7, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v8 = v2 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_1000AF418((uint64_t)v7, v8, type metadata accessor for ReadingHistoryDataStore.State);
  swift_endAccess();
  sub_100094FC0();
  sub_1000AC2D4((uint64_t)v7, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange);
  uint64_t v16 = a2;
  uint64_t v10 = *(NSObject **)(v9 + 16);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = sub_100093B3C;
  v11[3] = v15;
  void v11[4] = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100093EA4;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_1000B0738;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  aBlock[3] = &unk_100263C80;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v10) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10009B5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100215850;
  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v10 = sub_10007DC58();
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  id v11 = v8;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100094C0C();
  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v10;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = v13;
  uint64_t v14 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v15 = 0x676E6964616F6CLL;
  if (*(unsigned char *)(a2 + *(int *)(v14 + 44))) {
    uint64_t v15 = 0x7964616572;
  }
  unint64_t v16 = 0xE700000000000000;
  if (*(unsigned char *)(a2 + *(int *)(v14 + 44))) {
    unint64_t v16 = 0xE500000000000000;
  }
  *(void *)(v9 + 136) = &type metadata for String;
  *(void *)(v9 + 144) = v10;
  *(void *)(v9 + 112) = v15;
  *(void *)(v9 + 120) = v16;
  uint64_t v17 = sub_100170DF8();
  *(void *)(v9 + 176) = &type metadata for String;
  *(void *)(v9 + 184) = v10;
  *(void *)(v9 + 152) = v17;
  *(void *)(v9 + 160) = v18;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  return sub_10009B350(a1, a2);
}

uint64_t sub_10009B748(uint64_t a1, uint64_t a2, void (*a3)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))
{
  v160 = a3;
  uint64_t v164 = a2;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v155 = (char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v153);
  uint64_t v151 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v143 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v147 = (char *)&v135 - v10;
  uint64_t v159 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v157 = *(void *)(v159 - 8);
  uint64_t v11 = __chkstk_darwin(v159);
  uint64_t v148 = (uint64_t)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v150 = (uint64_t)&v135 - v13;
  uint64_t v163 = (int *)type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v14 = __chkstk_darwin(v163);
  CFStringRef v154 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unsigned int v156 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v135 - v16);
  uint64_t v17 = sub_10007DC14(&qword_100291C78);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v144 = (uint64_t)&v135 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v146 = (uint64_t)&v135 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v149 = (uint64_t)&v135 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  id v158 = (char *)&v135 - v25;
  __chkstk_darwin(v24);
  uint64_t v161 = (uint64_t)&v135 - v26;
  uint64_t v145 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v27 = __chkstk_darwin(v145);
  uint64_t v152 = (uint64_t)&v135 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v135 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v135 - v32;
  uint64_t v34 = sub_1001EB0C0();
  uint64_t v162 = *(void *)(v34 - 8);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v135 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v40 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v135 - v39);
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v43 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v135 - v42);
  __chkstk_darwin(v41);
  uint64_t v45 = (int *)((char *)&v135 - v44);
  sub_1000935F8(a1, (uint64_t)v168, &qword_100291ED8);
  uint64_t result = sub_1000935F8(a1, (uint64_t)v173, &qword_100291ED8);
  uint64_t v47 = v164;
  if (v174) {
    uint64_t v48 = (double *)&v171;
  }
  else {
    uint64_t v48 = (double *)&v169;
  }
  double v49 = *v48;
  if (v174) {
    uint64_t v50 = v172;
  }
  else {
    uint64_t v50 = &v170;
  }
  if (*(double *)(v164 + 136) != v49)
  {
    uint64_t v140 = v33;
    long long v138 = v40;
    uint64_t v137 = v37;
    uint64_t v51 = v163;
    uint64_t v139 = v43;
    Swift::Int v141 = v31;
    uint64_t v142 = v34;
    uint64_t v52 = v164;
    char v53 = *v50;
    if (*v50 == 3)
    {
      *(double *)(v164 + 136) = v49;
      uint64_t v54 = v47 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
      swift_beginAccess();
      uint64_t v55 = v54 + v51[6];
      uint64_t v56 = v162;
      uint64_t v57 = v142;
      (*(void (**)(int *, uint64_t, uint64_t))(v162 + 16))(v45, v55, v142);
      uint64_t v58 = (uint64_t)v140;
      sub_1000AE830(v54, (uint64_t)v140, type metadata accessor for ReadingHistoryModel);
      ReadingHistoryModel.readingDay(for:)();
      LODWORD(v54) = v59;
      sub_1000AC2D4(v58, type metadata accessor for ReadingHistoryModel);
      uint64_t result = (*(uint64_t (**)(int *, uint64_t))(v56 + 8))(v45, v57);
      if (v54 == 2) {
        *(unsigned char *)v160 = 1;
      }
      return result;
    }
    uint64_t result = sub_1000935F8(a1, (uint64_t)v168, &qword_100291ED8);
    if ((v172[1] & 1) == 0 || !v53)
    {
      *(double *)(v52 + 136) = v49;
      return result;
    }
    uint64_t v60 = v142;
    uint64_t v61 = v162;
    uint64_t v62 = (uint64_t)v141;
    unint64_t v63 = v139;
    if (v53 == 1)
    {
      uint64_t v64 = v52 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
      swift_beginAccess();
      uint64_t v65 = v64 + v51[6];
      uint64_t v66 = v61 + 16;
      v160 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v61 + 16);
      v160(v63, v65, v60);
      sub_1000AE830(v64, v62, type metadata accessor for ReadingHistoryModel);
      if ((~*(void *)&v49 & 0x7FF0000000000000) != 0)
      {
        id v67 = v63;
        uint64_t v45 = v51;
        uint64_t v68 = v161;
        uint64_t v69 = (uint64_t)v158;
        if (v49 > -9.22337204e18)
        {
          if (v49 < 9.22337204e18)
          {
            uint64_t v70 = v60;
            ReadingHistoryModel.setGoal(_:date:)((uint64_t)v49, (uint64_t)v67);
            type metadata accessor for ReadingHistoryDataStore(0);
            uint64_t v71 = v156;
            sub_1000AE830(v64, (uint64_t)v156, type metadata accessor for ReadingHistoryDataStore.State);
            sub_100096910(v71, (int64_t)v141, v67, v68);
            sub_1000AC2D4((uint64_t)v71, type metadata accessor for ReadingHistoryDataStore.State);
            uint64_t v72 = (uint64_t)v140;
            sub_1000996D8((uint64_t)v141, v68, (uint64_t)v140);
            uint64_t v73 = (uint64_t)v141;
            sub_1000AC2D4((uint64_t)v141, type metadata accessor for ReadingHistoryModel);
            sub_1000AF720(v72, v73, type metadata accessor for ReadingHistoryModel);
            uint64_t v74 = (uint64_t)v138;
            uint64_t v75 = v70;
            unsigned int v156 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v66;
            v160(v138, (uint64_t)v67, v70);
            uint64_t v140 = (char *)_s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(v74);
            uint64_t v77 = v76;
            sub_1000936F8(v64 + v45[5], v69, &qword_100291C78);
            uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
            uint64_t v79 = v159;
            int v80 = v78(v69, 1, v159);
            uint64_t v136 = v64;
            if (v80 == 1)
            {
              sub_1000816A4(v69, &qword_100291C78);
              uint64_t v81 = (uint64_t)v151;
              uint64_t v82 = (uint64_t)v155;
              uint64_t v83 = (uint64_t)v154;
              uint64_t v84 = v153;
LABEL_32:
              uint64_t v163 = (int *)type metadata accessor for ReadingHistoryModel;
              sub_1000AE830(v73, v83, type metadata accessor for ReadingHistoryModel);
              sub_1000936F8(v161, v83 + v45[5], &qword_100291C78);
              uint64_t v102 = v83 + v45[6];
              uint64_t v103 = v45;
              uint64_t v104 = (uint64_t)v139;
              v160((void (*)(char *, uint64_t, uint64_t, uint64_t))v102, (uint64_t)v139, v75);
              sub_1001D1644(v104, (char *)(v83 + v103[7]));
              swift_retain();
              sub_1001EC9E0();
              swift_release();
              uint64_t v105 = sub_10007DC14((uint64_t *)&unk_1002963C0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v82, 1, 2, v105);
              sub_1000AF418(v83, v81, type metadata accessor for ReadingHistoryModel);
              sub_1000AF3B4(v82, v81 + *(int *)(v84 + 48), (uint64_t *)&unk_100291BA0);
              sub_10009B5A8(v83, v81, 0xD000000000000015, 0x8000000100222BB0);
              *(double *)(v52 + 136) = v49;
              sub_1000AF9BC(v52 + 56, (uint64_t)v165);
              uint64_t v106 = v166;
              uint64_t v107 = v167;
              sub_100094758(v165, v166);
              uint64_t v108 = v152;
              sub_1000AE830(v136, v152, (uint64_t (*)(void))v163);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v108, v106, v107);
              sub_1000AC2D4(v108, type metadata accessor for ReadingHistoryModel);
              sub_1000947F0((uint64_t)v165);
              sub_1000816A4(v81, (uint64_t *)&unk_100291CA0);
              sub_1000AC2D4(v83, type metadata accessor for ReadingHistoryDataStore.State);
              sub_1000AC2D4((uint64_t)v141, type metadata accessor for ReadingHistoryModel);
              (*(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v162 + 8))(v139, v142);
              return sub_1000816A4(v161, &qword_100291C78);
            }
            uint64_t v85 = v150;
            sub_1000AF720(v69, v150, type metadata accessor for ReadingHistory.Streak);
            uint64_t v86 = v149;
            sub_1000936F8(v64 + v45[7], v149, &qword_100291C78);
            if (v78(v86, 1, v79) == 1)
            {
              sub_1000AC2D4(v85, type metadata accessor for ReadingHistory.Streak);
              sub_1000816A4(v86, &qword_100291C78);
LABEL_30:
              uint64_t v81 = (uint64_t)v151;
              uint64_t v82 = (uint64_t)v155;
              uint64_t v83 = (uint64_t)v154;
              uint64_t v84 = v153;
LABEL_31:
              uint64_t v75 = v142;
              uint64_t v45 = v163;
              goto LABEL_32;
            }
            uint64_t v87 = v148;
            sub_1000AF720(v86, v148, type metadata accessor for ReadingHistory.Streak);
            uint64_t v88 = (uint64_t)v138;
            v160(v138, v85, v142);
            uint64_t v89 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(v88);
            uint64_t v91 = (uint64_t)v140;
            if ((char *)v89 != v140 || v90 != v77)
            {
              sub_1000AC2D4(v87, type metadata accessor for ReadingHistory.Streak);
              uint64_t v73 = (uint64_t)v141;
              sub_1000AC2D4(v85, type metadata accessor for ReadingHistory.Streak);
              goto LABEL_30;
            }
            v160((void (*)(char *, uint64_t, uint64_t, uint64_t))v88, v87, v142);
            if (_s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(v88) != v91 || v92 != v77)
            {
              sub_1000AC2D4(v87, type metadata accessor for ReadingHistory.Streak);
              sub_1000AC2D4(v85, type metadata accessor for ReadingHistory.Streak);
              uint64_t v81 = (uint64_t)v151;
              uint64_t v82 = (uint64_t)v155;
              uint64_t v83 = (uint64_t)v154;
              uint64_t v84 = v153;
              uint64_t v73 = (uint64_t)v141;
              goto LABEL_31;
            }
            uint64_t v93 = v161;
            uint64_t v94 = v159;
            int v95 = v78(v161, 1, v159);
            uint64_t v96 = v93;
            uint64_t v97 = v146;
            sub_1000936F8(v96, v146, &qword_100291C78);
            if (v95 == 1)
            {
              sub_1000816A4(v97, &qword_100291C78);
              uint64_t v98 = (uint64_t)v141;
              uint64_t v75 = v142;
              uint64_t v99 = v145;
              uint64_t v100 = (uint64_t)v138;
              uint64_t v101 = v162;
              uint64_t v45 = v163;
              goto LABEL_40;
            }
            uint64_t v109 = v144;
            sub_1000936F8(v97, v144, &qword_100291C78);
            uint64_t result = v78(v109, 1, v94);
            if (result == 1)
            {
              __break(1u);
              return result;
            }
            uint64_t v110 = v97;
            uint64_t v100 = (uint64_t)v138;
            v160(v138, v109, v142);
            sub_1000AC2D4(v109, type metadata accessor for ReadingHistory.Streak);
            uint64_t v111 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(v100);
            uint64_t v113 = v112;
            sub_1000816A4(v110, &qword_100291C78);
            uint64_t v114 = 100 * v111;
            uint64_t v45 = v163;
            if ((unsigned __int128)(v111 * (__int128)100) >> 64 == (100 * v111) >> 63)
            {
              BOOL v115 = __OFADD__(v114, v113);
              uint64_t v116 = v114 + v113;
              uint64_t v99 = v145;
              uint64_t v101 = v162;
              if (!v115)
              {
                uint64_t v117 = 100 * v91;
                uint64_t v75 = v142;
                uint64_t v98 = (uint64_t)v141;
                if ((unsigned __int128)(v91 * (__int128)100) >> 64 == (100 * v91) >> 63)
                {
                  BOOL v115 = __OFADD__(v117, v77);
                  uint64_t v118 = v117 + v77;
                  if (!v115)
                  {
                    if (v116 >= v118)
                    {
                      sub_1000AC2D4(v148, type metadata accessor for ReadingHistory.Streak);
                      uint64_t v73 = (uint64_t)v141;
                      sub_1000AC2D4(v150, type metadata accessor for ReadingHistory.Streak);
                      uint64_t v81 = (uint64_t)v151;
                      uint64_t v82 = (uint64_t)v155;
                      uint64_t v83 = (uint64_t)v154;
                      uint64_t v84 = v153;
                      goto LABEL_32;
                    }
LABEL_40:
                    uint64_t v119 = v148;
                    uint64_t v120 = (int *)(v98 + *(int *)(v99 + 20));
                    uint64_t v159 = *(void *)(v148 + *(int *)(v159 + 20));
                    v165[0] = v159;
                    id v158 = (char *)sub_10007DC14(&qword_100291BD8);
                    uint64_t v163 = v120;
                    sub_1001EBF50();
                    uint64_t v121 = (uint64_t)v147;
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v147, 1, v75) == 1)
                    {
                      sub_1000AC2D4(v119, type metadata accessor for ReadingHistory.Streak);
                      sub_1000AC2D4(v150, type metadata accessor for ReadingHistory.Streak);
                      sub_1000816A4(v121, (uint64_t *)&unk_1002924C0);
LABEL_49:
                      uint64_t v81 = (uint64_t)v151;
                      uint64_t v82 = (uint64_t)v155;
                      uint64_t v83 = (uint64_t)v154;
                      uint64_t v84 = v153;
                      uint64_t v73 = (uint64_t)v141;
                      goto LABEL_32;
                    }
                    uint64_t v122 = v137;
                    (*(void (**)(void))(v101 + 32))();
                    v160((void (*)(char *, uint64_t, uint64_t, uint64_t))v100, (uint64_t)v122, v75);
                    uint64_t v123 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0(v100);
                    if ((char *)v123 != v140 || v124 != v77)
                    {
                      (*(void (**)(char *, uint64_t))(v101 + 8))(v122, v75);
                      uint64_t v134 = v148;
                      goto LABEL_48;
                    }
                    sub_1001EC910();
                    if (qword_1002910E8 == -1)
                    {
LABEL_45:
                      uint64_t v125 = (void *)qword_100293A68;
                      sub_10007DC14((uint64_t *)&unk_100291A20);
                      uint64_t v126 = swift_allocObject();
                      *(_OWORD *)(v126 + 16) = xmmword_100215310;
                      *(void *)(v126 + 56) = &type metadata for Int;
                      *(void *)(v126 + 64) = &protocol witness table for Int;
                      uint64_t v127 = v159;
                      *(void *)(v126 + 32) = v159;
                      id v128 = v125;
                      uint64_t v129 = v148;
                      uint64_t v130 = sub_1001EB040();
                      uint64_t v132 = v131;
                      *(void *)(v126 + 96) = &type metadata for String;
                      *(void *)(v126 + 104) = sub_10007DC58();
                      *(void *)(v126 + 72) = v130;
                      *(void *)(v126 + 80) = v132;
                      sub_1001EB530();

                      swift_bridgeObjectRelease();
                      uint64_t v133 = v162;
                      uint64_t v75 = v142;
                      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v162 + 56))(v143, 1, 1, v142);
                      v165[0] = v127;
                      sub_1001EBF60();
                      (*(void (**)(char *, uint64_t))(v133 + 8))(v137, v75);
                      uint64_t v134 = v129;
LABEL_48:
                      sub_1000AC2D4(v134, type metadata accessor for ReadingHistory.Streak);
                      sub_1000AC2D4(v150, type metadata accessor for ReadingHistory.Streak);
                      goto LABEL_49;
                    }
LABEL_57:
                    swift_once();
                    goto LABEL_45;
                  }
LABEL_56:
                  __break(1u);
                  goto LABEL_57;
                }
LABEL_55:
                __break(1u);
                goto LABEL_56;
              }
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
LABEL_53:
            __break(1u);
            goto LABEL_54;
          }
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_52;
    }
  }
  return result;
}

uint64_t ReadingHistoryModel.readingDay(for:)()
{
  uint64_t v0 = sub_10007DC14(&qword_100296830);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000816A4((uint64_t)v2, &qword_100296830);
    return 0;
  }
  else
  {
    sub_1000AF720((uint64_t)v2, (uint64_t)v6, type metadata accessor for ReadingHistoryDay);
    uint64_t v7 = sub_1001EC1A0();
    sub_10007DC14(&qword_100291C50);
    sub_1001EBAE0();
    sub_1001EC1A0();
    sub_1001EBAE0();
    sub_1000AC2D4((uint64_t)v6, type metadata accessor for ReadingHistoryDay);
  }
  return v7;
}

uint64_t sub_10009CCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = a2;
  uint64_t v63 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v3 = __chkstk_darwin(v63);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v57 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v57 - v9;
  uint64_t v11 = sub_10007DC14(&qword_100291F40);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v57 - v15;
  uint64_t v62 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v17 = __chkstk_darwin(v62);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v57 = (uint64_t)&v57 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v59 = (uint64_t)&v57 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v58 = (uint64_t)&v57 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v57 - v26;
  uint64_t v60 = a1;
  sub_1000936F8(a1, (uint64_t)v16, &qword_100291F40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v61 = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v29 = sub_10007DC14(&qword_100291F48);
    sub_1000935F8((uint64_t)&v16[*(int *)(v29 + 48)], (uint64_t)v27, (uint64_t *)&unk_100291CA0);
    sub_1000816A4((uint64_t)v16, (uint64_t *)&unk_100291CA0);
  }
  else
  {
    sub_1000935F8((uint64_t)v16, (uint64_t)v27, (uint64_t *)&unk_100291CA0);
  }
  sub_1000AE830((uint64_t)v27, (uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  uint64_t v30 = v64;
  uint64_t v31 = v64 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_1000AE830(v31, (uint64_t)v8, type metadata accessor for ReadingHistoryModel);
  sub_1000AF658((unint64_t *)&unk_100291F50, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  char v32 = sub_1001EBD20();
  sub_1000AC2D4((uint64_t)v8, type metadata accessor for ReadingHistoryModel);
  sub_1000AC2D4((uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  if (v32)
  {
    uint64_t v33 = v27;
    sub_100097410((uint64_t)v27);
    sub_1000936F8(v60, (uint64_t)v14, &qword_100291F40);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = (uint64_t)&v14[*(int *)(sub_10007DC14(&qword_100291F48) + 48)];
      uint64_t v35 = (uint64_t)v14;
      uint64_t v36 = v58;
      sub_1000935F8(v35, v58, (uint64_t *)&unk_100291CA0);
      uint64_t v37 = v59;
      sub_1000935F8(v34, v59, (uint64_t *)&unk_100291CA0);
      uint64_t v38 = v62;
      LOBYTE(v34) = *(unsigned char *)(v36 + *(int *)(v62 + 44));
      uint64_t v39 = v57;
      sub_1000936F8(v37, v57, (uint64_t *)&unk_100291CA0);
      if (v34)
      {
        sub_1000816A4(v39, (uint64_t *)&unk_100291CA0);
      }
      else
      {
        char v53 = *(unsigned char *)(v39 + *(int *)(v38 + 44));
        sub_1000816A4(v39, (uint64_t *)&unk_100291CA0);
        if ((v53 & 1) != 0 && *(unsigned char *)(v30 + 152) == 1) {
          sub_10009D3E4();
        }
      }
      sub_1000816A4(v37, (uint64_t *)&unk_100291CA0);
      uint64_t v52 = v36;
      uint64_t v51 = (uint64_t *)&unk_100291CA0;
    }
    else
    {
      uint64_t v51 = &qword_100291F40;
      uint64_t v52 = (uint64_t)v14;
    }
    sub_1000816A4(v52, v51);
    sub_1000AF9BC(v30 + 56, (uint64_t)aBlock);
    uint64_t v54 = v66;
    uint64_t v55 = v67;
    sub_100094758(aBlock, (uint64_t)v66);
    uint64_t v56 = (uint64_t)v61;
    sub_1000AE830(v31, (uint64_t)v61, type metadata accessor for ReadingHistoryModel);
    (*((void (**)(uint64_t, void *, uint64_t (*)()))v55 + 6))(v56, v54, v55);
    sub_1000AC2D4(v56, type metadata accessor for ReadingHistoryModel);
    sub_1000947F0((uint64_t)aBlock);
    uint64_t v27 = v33;
    return sub_1000816A4((uint64_t)v27, (uint64_t *)&unk_100291CA0);
  }
  uint64_t v40 = v62;
  int v41 = v27[*(int *)(v62 + 44)];
  uint64_t v42 = OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange;
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  int v43 = v19[*(int *)(v40 + 44)];
  uint64_t v44 = sub_1000816A4((uint64_t)v19, (uint64_t *)&unk_100291CA0);
  if (v41 == v43) {
    return sub_1000816A4((uint64_t)v27, (uint64_t *)&unk_100291CA0);
  }
  uint64_t v45 = *(void *)(v30 + v42);
  __chkstk_darwin(v44);
  *(&v57 - 2) = (uint64_t)v27;
  uint64_t v46 = *(NSObject **)(v45 + 16);
  uint64_t v47 = (void *)swift_allocObject();
  v47[2] = sub_1000AF330;
  v47[3] = &v57 - 4;
  v47[4] = v45;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = sub_1000935DC;
  *(void *)(v48 + 24) = v47;
  id v67 = sub_1000B0738;
  uint64_t v68 = v48;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  uint64_t v66 = &unk_100263C08;
  double v49 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v46, v49);
  _Block_release(v49);
  LOBYTE(v46) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((v46 & 1) == 0) {
    return sub_1000816A4((uint64_t)v27, (uint64_t *)&unk_100291CA0);
  }
  __break(1u);
  return result;
}

uint64_t sub_10009D3E4()
{
  uint64_t v1 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v1 - 8);
  char v53 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for ReadingHistoryDataStore.State(0);
  __chkstk_darwin(v50);
  uint64_t v54 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007DC14(&qword_100291BD8);
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  __chkstk_darwin(v4);
  uint64_t v47 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10007DC14(&qword_100291BD0);
  uint64_t v6 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v9 = __chkstk_darwin(v44);
  uint64_t v52 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v51 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = v0;
  uint64_t v46 = OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange;
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  int v19 = v17[*(int *)(v13 + 44)];
  uint64_t result = sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_100291CA0);
  if (v19 == 1)
  {
    *(void *)(v18 + 136) = 0x4072C00000000000;
    uint64_t v21 = v18 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
    uint64_t v43 = v18 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
    swift_beginAccess();
    uint64_t v42 = type metadata accessor for ReadingHistoryModel;
    sub_1000AE830(v21, (uint64_t)v12, type metadata accessor for ReadingHistoryModel);
    uint64_t v22 = v45;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v45);
    sub_100098B54((uint64_t)v8, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
    uint64_t v24 = (uint64_t)v47;
    uint64_t v23 = v48;
    uint64_t v25 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, &v12[*(int *)(v44 + 20)], v49);
    sub_100098F7C(v24, (uint64_t)v12);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    uint64_t v26 = v54;
    sub_1000AE830((uint64_t)v12, v54, type metadata accessor for ReadingHistoryModel);
    uint64_t v27 = v50;
    uint64_t v28 = v26 + *(int *)(v50 + 20);
    uint64_t v29 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    v30(v28, 1, 1, v29);
    uint64_t v31 = v43 + *(int *)(v27 + 24);
    v30(v26 + *(int *)(v27 + 28), 1, 1, v29);
    uint64_t v32 = v26 + *(int *)(v27 + 24);
    uint64_t v33 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v32, v31, v33);
    swift_retain();
    uint64_t v34 = (uint64_t)v51;
    sub_1001EC9E0();
    swift_release();
    uint64_t v35 = sub_10007DC14((uint64_t *)&unk_1002963C0);
    uint64_t v36 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v53, 1, 2, v35);
    sub_1000AF418((uint64_t)v12, v34, type metadata accessor for ReadingHistoryModel);
    sub_1000AF3B4(v36, v34 + *(int *)(v13 + 48), (uint64_t *)&unk_100291BA0);
    sub_10009B5A8(v26, v34, 0x7461447261656C63, 0xE900000000000061);
    sub_1000AF9BC(v18 + 56, (uint64_t)v55);
    uint64_t v37 = v56;
    uint64_t v38 = v57;
    sub_100094758(v55, v56);
    uint64_t v39 = v52;
    sub_1000AE830(v43, v52, v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v39, v37, v38);
    sub_1000AC2D4(v39, type metadata accessor for ReadingHistoryModel);
    sub_1000947F0((uint64_t)v55);
    sub_1000816A4(v34, (uint64_t *)&unk_100291CA0);
    sub_1000AC2D4(v26, type metadata accessor for ReadingHistoryDataStore.State);
    uint64_t result = sub_1000AC2D4((uint64_t)v12, type metadata accessor for ReadingHistoryModel);
    char v40 = 0;
  }
  else
  {
    char v40 = 1;
  }
  *(unsigned char *)(v18 + 152) = v40;
  return result;
}

Swift::Void __swiftcall ReadingHistoryDataStore.handleSignificantDateChange()()
{
  uint64_t v1 = sub_1001EB180();
  Class isa = v1[-1].isa;
  dispatch_queue_t v45 = v1;
  __chkstk_darwin(v1);
  uint64_t v42 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1001EB0C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v46 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v36 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v47 = (char *)&v36 - v10;
  uint64_t v41 = v11;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v36 - v12;
  int v38 = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100215320;
  uint64_t v16 = *(void (**)(void))(v0 + 120);
  id v17 = v14;
  uint64_t v37 = v0;
  v16();
  uint64_t v18 = sub_1001EB040();
  uint64_t v20 = v19;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v40 = v4 + 8;
  v39(v13, v3);
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_10007DC58();
  *(void *)(v15 + 32) = v18;
  *(void *)(v15 + 40) = v20;
  sub_1001EB530();

  uint64_t v21 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v16)(v21);
  uint64_t v22 = v42;
  sub_1001EB0F0();
  uint64_t v23 = v47;
  sub_1001EB100();
  (*((void (**)(char *, dispatch_queue_t))isa + 1))(v22, v45);
  uint64_t v24 = v37;
  dispatch_queue_t v45 = *(dispatch_queue_t *)(v37 + 144);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v26 = v43;
  v25(v43, v23, v3);
  uint64_t v27 = v46;
  v25(v46, v13, v3);
  uint64_t v28 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v29 = (v28 + 24) & ~v28;
  uint64_t v30 = (v41 + v28 + v29) & ~v28;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v24;
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v32(v31 + v29, v26, v3);
  v32(v31 + v30, v27, v3);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1000AC214;
  *(void *)(v33 + 24) = v31;
  aBlock[4] = sub_1000AC2B4;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  void aBlock[3] = &unk_1002633C8;
  uint64_t v34 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v45, v34);
  _Block_release(v34);
  uint64_t v35 = v39;
  v39(v23, v3);
  v35(v13, v3);
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v35) {
    __break(1u);
  }
}

void sub_10009E050(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v78 = a3;
  uint64_t v92 = a2;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v86 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v88 = (uint64_t)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v91 = (uint64_t)v72 - v10;
  __chkstk_darwin(v9);
  uint64_t v81 = (uint64_t)v72 - v11;
  uint64_t v80 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v12 = __chkstk_darwin(v80);
  uint64_t v87 = (char *)v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v72 - v14);
  uint64_t v16 = sub_10007DC14(&qword_100291C78);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v77 = (char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v82 = (uint64_t)v72 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v79 = (uint64_t)v72 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v72 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)v72 - v27;
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)v72 - v29;
  uint64_t v30 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v90 = (uint64_t)v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)v72 - v33;
  uint64_t v83 = OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange;
  uint64_t v35 = a1;
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  uint64_t v84 = v30;
  LODWORD(a1) = v34[*(int *)(v30 + 44)];
  sub_1000816A4((uint64_t)v34, (uint64_t *)&unk_100291CA0);
  if (a1 == 1)
  {
    uint64_t v74 = 0;
    uint64_t v75 = v35;
    uint64_t v36 = v35 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
    swift_beginAccess();
    uint64_t v37 = (int *)v80;
    uint64_t v38 = v89;
    sub_1000936F8(v36 + *(int *)(v80 + 20), v89, &qword_100291C78);
    uint64_t v39 = type metadata accessor for ReadingHistoryDataStore(0);
    sub_1000AE830(v36, (uint64_t)v15, type metadata accessor for ReadingHistoryDataStore.State);
    int64_t v40 = v81;
    sub_1000AE830(v36, v81, type metadata accessor for ReadingHistoryModel);
    v72[1] = v39;
    sub_100096910(v15, v40, v92, (uint64_t)v28);
    sub_1000AC2D4(v40, type metadata accessor for ReadingHistoryModel);
    sub_1000AC2D4((uint64_t)v15, type metadata accessor for ReadingHistoryDataStore.State);
    sub_1000AE830(v36, v91, type metadata accessor for ReadingHistoryModel);
    uint64_t v41 = v37[7];
    uint64_t v73 = v36;
    uint64_t v85 = v25;
    sub_1000936F8(v36 + v41, (uint64_t)v25, &qword_100291C78);
    uint64_t v42 = v79;
    sub_1000936F8((uint64_t)v28, v79, &qword_100291C78);
    uint64_t v43 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48);
    int v45 = v44(v42, 1, v43);
    uint64_t v76 = v28;
    uint64_t v46 = v40;
    if (v45 == 1)
    {
      sub_1000816A4(v42, &qword_100291C78);
      uint64_t v47 = 0;
    }
    else
    {
      uint64_t v47 = *(void *)(v42 + *(int *)(v43 + 20));
      sub_1000AC2D4(v42, type metadata accessor for ReadingHistory.Streak);
    }
    uint64_t v49 = v82;
    sub_1000936F8(v38, v82, &qword_100291C78);
    int v50 = v44(v49, 1, v43);
    uint64_t v51 = v92;
    uint64_t v52 = v37;
    if (v50 == 1)
    {
      sub_1000816A4(v49, &qword_100291C78);
      uint64_t v53 = 0;
    }
    else
    {
      uint64_t v54 = v49;
      uint64_t v53 = *(void *)(v49 + *(int *)(v43 + 20));
      sub_1000AC2D4(v54, type metadata accessor for ReadingHistory.Streak);
    }
    uint64_t v55 = v75;
    uint64_t v56 = (uint64_t)v85;
    uint64_t v57 = v91;
    BOOL v58 = sub_1001D4A24(v51, 1);
    uint64_t v59 = (uint64_t)v87;
    if (v53 < v47 || v58)
    {
      sub_1000996D8(v57, (uint64_t)v76, v46);
      sub_1000AC2D4(v57, type metadata accessor for ReadingHistoryModel);
      sub_1000AF720(v46, v57, type metadata accessor for ReadingHistoryModel);
      uint64_t v60 = v77;
      sub_1001D1644(v78, v77);
      sub_1000816A4(v56, &qword_100291C78);
      sub_1000935F8((uint64_t)v60, v56, &qword_100291C78);
    }
    sub_1000AE830(v57, v59, type metadata accessor for ReadingHistoryModel);
    uint64_t v61 = (uint64_t)v76;
    sub_1000936F8((uint64_t)v76, v59 + v52[5], &qword_100291C78);
    uint64_t v62 = v59 + v52[6];
    uint64_t v63 = sub_1001EB0C0();
    (*(void (**)(uint64_t, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(*(void *)(v63 - 8) + 16))(v62, v92, v63);
    sub_1000936F8(v56, v59 + v52[7], &qword_100291C78);
    swift_retain();
    uint64_t v64 = v90;
    uint64_t v65 = v84;
    uint64_t v66 = v74;
    sub_1001EC9E0();
    swift_release();
    uint64_t v67 = sub_10007DC14((uint64_t *)&unk_1002963C0);
    uint64_t v68 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v86, 1, 2, v67);
    sub_1000AF418(v59, v64, type metadata accessor for ReadingHistoryModel);
    sub_1000AF3B4(v68, v64 + *(int *)(v65 + 48), (uint64_t *)&unk_100291BA0);
    sub_10009B5A8(v59, v64, 0xD00000000000001BLL, 0x8000000100222CD0);
    sub_1000AF9BC(v55 + 56, (uint64_t)v93);
    uint64_t v69 = v94;
    uint64_t v70 = v95;
    sub_100094758(v93, v94);
    uint64_t v71 = v88;
    sub_1000AE830(v73, v88, type metadata accessor for ReadingHistoryModel);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v71, v69, v70);
    if (v66) {
      swift_errorRelease();
    }
    sub_1000AC2D4(v71, type metadata accessor for ReadingHistoryModel);
    sub_1000947F0((uint64_t)v93);
    sub_1000816A4(v90, (uint64_t *)&unk_100291CA0);
    sub_1000AC2D4(v59, type metadata accessor for ReadingHistoryDataStore.State);
    sub_1000816A4((uint64_t)v85, &qword_100291C78);
    sub_1000AC2D4(v91, type metadata accessor for ReadingHistoryModel);
    sub_1000816A4(v61, &qword_100291C78);
    sub_1000816A4(v89, &qword_100291C78);
  }
  else
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v48 = (id)qword_100293A68;
    sub_1001EB530();
  }
}

uint64_t sub_10009EA00(uint64_t *a1, uint64_t a2)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_10007DC14(&qword_100296830);
  __chkstk_darwin(v3 - 8);
  uint64_t v41 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1001EB180();
  uint64_t v6 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100291FC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007DC14(&qword_100291FD0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1001EAD80();
  uint64_t v42 = *(void *)(v15 - 8);
  uint64_t v43 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1001EB0C0();
  uint64_t v21 = *(void *)(v45 - 8);
  uint64_t result = __chkstk_darwin(v45);
  uint64_t v37 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 100 * *a1;
  if ((unsigned __int128)(*a1 * (__int128)100) >> 64 == v24 >> 63)
  {
    uint64_t v25 = a1[1];
    if (!__OFADD__(v24, v25))
    {
      if (v24 + v25 > 9999)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v44);
        uint64_t v26 = sub_1001EB190();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 1, 1, v26);
        sub_1001EAD70();
        sub_1001EB0F0();
        sub_1001EB130();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v44);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v43);
        uint64_t v27 = v45;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v45) != 1)
        {
          uint64_t v31 = v37;
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v37, v20, v27);
          uint64_t v32 = v41;
          ReadingHistoryModel.readingHistoryDay(for:)(v41);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v32, 1, v40) != 1)
          {
            uint64_t v33 = v36;
            sub_1000AF720(v32, v36, type metadata accessor for ReadingHistoryDay);
            uint64_t v34 = sub_1001EC1A0();
            sub_10007DC14(&qword_100291C50);
            sub_1001EBAE0();
            BOOL v30 = v34 >= v46;
            sub_1000AC2D4(v33, type metadata accessor for ReadingHistoryDay);
            (*(void (**)(char *, uint64_t))(v21 + 8))(v31, v27);
            return v30;
          }
          (*(void (**)(char *, uint64_t))(v21 + 8))(v31, v27);
          uint64_t v28 = &qword_100296830;
          uint64_t v29 = v32;
LABEL_7:
          sub_1000816A4(v29, v28);
          return 0;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v20, 1, 1, v45);
      }
      uint64_t v28 = (uint64_t *)&unk_1002924C0;
      uint64_t v29 = (uint64_t)v20;
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ReadingHistoryDataStore.deinit()
{
  sub_1000816A4(v0 + 16, (uint64_t *)&unk_100291C40);
  sub_1000947F0(v0 + 56);

  swift_release();
  sub_1000AC2D4(v0 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state, type metadata accessor for ReadingHistoryDataStore.State);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ReadingHistoryDataStore.__deallocating_deinit()
{
  ReadingHistoryDataStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t ReadingHistoryDataStore.addObserver(_:modelChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  swift_retain();
  sub_1000A4274(a1, (uint64_t)sub_100092AA0, v6);
  swift_release();
  return swift_release();
}

uint64_t sub_10009F240(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t ReadingHistoryDataStore.addObserverWithEvent(_:modelChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_1000A4274(a1, a2, a3);
  return swift_release();
}

uint64_t ReadingHistoryDataStore.removeObserver(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange);
  uint64_t v4 = *(NSObject **)(v3 + 16);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1000AC394;
  *(void *)(v6 + 24) = v5;
  void v9[4] = sub_1000B0738;
  void v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100089470;
  v9[3] = &unk_100263468;
  uint64_t v7 = _Block_copy(v9);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t ReadingHistoryDataStore.increment(date:by:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = *(NSObject **)(v2 + 144);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v10 + ((v7 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1000AC484;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1000B0738;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  void aBlock[3] = &unk_1002634E0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v12);
  _Block_release(v12);
  LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10009F684(uint64_t a1, uint64_t a2, Swift::Int a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100296830);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = *(double *)(a1 + 136);
  uint64_t v17 = a1 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t result = sub_1000AE830(v17, (uint64_t)v15, type metadata accessor for ReadingHistoryModel);
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v28 = v12;
  ReadingHistoryModel.incrementReadingTime(date:amount:defaultGoal:)(a2, a3, (uint64_t)v16);
  sub_10007DC14(&qword_100292010);
  uint64_t v19 = sub_1001EB0C0();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v29 = v9;
  uint64_t v23 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_100215320;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v22 + v21, a2, v19);
  sub_10009FAF4(v23, (int64_t)v15, 0x6E656D6572636E69, 0xE900000000000074);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v29) == 1)
  {
    sub_1000AC2D4((uint64_t)v15, type metadata accessor for ReadingHistoryModel);
    return sub_1000816A4((uint64_t)v8, &qword_100296830);
  }
  else
  {
    uint64_t v24 = (uint64_t)v28;
    sub_1000AF720((uint64_t)v8, (uint64_t)v28, type metadata accessor for ReadingHistoryDay);
    swift_beginAccess();
    if (*(void *)(a1 + 40))
    {
      sub_1000AF9BC(a1 + 16, (uint64_t)v30);
      swift_endAccess();
      uint64_t v25 = v31;
      uint64_t v26 = v32;
      sub_100094758(v30, v31);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8))(a2, v24, v25, v26);
      sub_1000AC2D4(v24, type metadata accessor for ReadingHistoryDay);
      sub_1000AC2D4((uint64_t)v15, type metadata accessor for ReadingHistoryModel);
      return sub_1000947F0((uint64_t)v30);
    }
    else
    {
      sub_1000AC2D4(v24, type metadata accessor for ReadingHistoryDay);
      sub_1000AC2D4((uint64_t)v15, type metadata accessor for ReadingHistoryModel);
      return swift_endAccess();
    }
  }
}

uint64_t sub_10009FAF4(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v77 = a3;
  uint64_t v78 = a4;
  uint64_t v69 = a1;
  uint64_t v68 = *v4;
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v75 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v74);
  uint64_t v80 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v76 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v72 = (uint64_t)&v66 - v13;
  __chkstk_darwin(v12);
  uint64_t v70 = (uint64_t)&v66 - v14;
  uint64_t v15 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v73 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v66 - v21);
  uint64_t v23 = sub_10007DC14(&qword_100291C78);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v67 = (uint64_t)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v66 - v26;
  uint64_t v28 = sub_1001EB0C0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v66 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v66 = (char *)&v66 - v34;
  __chkstk_darwin(v33);
  uint64_t v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v66 - v35);
  uint64_t v79 = v4;
  uint64_t v37 = (uint64_t)v4 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v71 = v18;
  uint64_t v38 = v37 + *(int *)(v18 + 24);
  uint64_t v81 = v29;
  uint64_t v39 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v29 + 16);
  uint64_t v85 = v28;
  v39(v36, v38, v28);
  uint64_t v82 = v37;
  sub_1000AE830(v37, (uint64_t)v22, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v83 = v27;
  uint64_t v84 = v36;
  sub_100096910(v22, a2, v36, (uint64_t)v27);
  sub_1000AC2D4((uint64_t)v22, type metadata accessor for ReadingHistoryDataStore.State);
  if (*(void *)(v69 + 16) == 1)
  {
    uint64_t v40 = v81;
    uint64_t v41 = v85;
    v39((void (*)(char *, uint64_t, uint64_t, uint64_t))v17, v69 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80)), v85);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v17, 0, 1, v41);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v17, 1, v41) == 1)
    {
      sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_1002924C0);
    }
    else
    {
      uint64_t v42 = v66;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v66, v17, v41);
      v39(v32, (uint64_t)v42, v41);
      uint64_t v43 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v32);
      uint64_t v69 = v44;
      v39(v32, (uint64_t)v84, v41);
      uint64_t v45 = _s14bookdatastored19ReadingHistoryModelV6DayKeyVyAE10Foundation4DateVcfC_0((uint64_t)v32);
      uint64_t v47 = v46;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
      if (v43 == v45 && v69 == v47)
      {
        uint64_t v48 = v70;
        sub_1000996D8(a2, (uint64_t)v83, v70);
        sub_1000AC2D4(a2, type metadata accessor for ReadingHistoryModel);
        goto LABEL_8;
      }
    }
  }
  uint64_t v48 = v70;
  sub_1000AE830(v82, v70, type metadata accessor for ReadingHistoryModel);
  uint64_t v49 = sub_1001D25D0(a2);
  sub_1000AC2D4(v48, type metadata accessor for ReadingHistoryModel);
  uint64_t v50 = v67;
  sub_100099BE4(a2, v49, v67);
  swift_bridgeObjectRelease();
  sub_1000996D8(a2, v50, v48);
  sub_1000AC2D4(a2, type metadata accessor for ReadingHistoryModel);
  sub_1000816A4(v50, &qword_100291C78);
LABEL_8:
  uint64_t v51 = (void (*)(uint64_t, void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))v39;
  sub_1000AF720(v48, a2, type metadata accessor for ReadingHistoryModel);
  uint64_t v52 = v79;
  uint64_t v53 = (uint64_t)v80;
  uint64_t v54 = (uint64_t)v73;
  uint64_t v55 = v72;
  if (*((unsigned char *)v79 + 96) == 1)
  {
    uint64_t v56 = v79[13];
    sub_1000AE830(a2, v72, type metadata accessor for ReadingHistoryModel);
    sub_1001D66AC(v56);
  }
  else
  {
    sub_1000AE830(a2, v72, type metadata accessor for ReadingHistoryModel);
  }
  uint64_t v57 = (uint64_t)v76;
  sub_1000AC2D4(a2, type metadata accessor for ReadingHistoryModel);
  sub_1000AF720(v55, a2, type metadata accessor for ReadingHistoryModel);
  sub_1000AE830(a2, v54, type metadata accessor for ReadingHistoryModel);
  uint64_t v58 = v71;
  sub_1000936F8((uint64_t)v83, v54 + *(int *)(v71 + 20), &qword_100291C78);
  uint64_t v59 = (uint64_t)v84;
  v51(v54 + *(int *)(v58 + 24), v84, v85);
  sub_1001D1644(v59, (char *)(v54 + *(int *)(v58 + 28)));
  swift_retain();
  uint64_t v60 = v74;
  sub_1001EC9E0();
  swift_release();
  uint64_t v61 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v62 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v75, 1, 2, v61);
  sub_1000AF418(v54, v53, type metadata accessor for ReadingHistoryModel);
  sub_1000AF3B4(v62, v53 + *(int *)(v60 + 48), (uint64_t *)&unk_100291BA0);
  sub_10009B5A8(v54, v53, v77, v78);
  sub_1000AF9BC((uint64_t)(v52 + 7), (uint64_t)v86);
  uint64_t v63 = v87;
  uint64_t v64 = v88;
  sub_100094758(v86, v87);
  sub_1000AE830(v82, v57, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v57, v63, v64);
  sub_1000AC2D4(v57, type metadata accessor for ReadingHistoryModel);
  sub_1000947F0((uint64_t)v86);
  sub_1000816A4(v53, (uint64_t *)&unk_100291CA0);
  sub_1000AC2D4(v54, type metadata accessor for ReadingHistoryDataStore.State);
  sub_1000816A4((uint64_t)v83, &qword_100291C78);
  return (*(uint64_t (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v81 + 8))(v84, v85);
}

uint64_t ReadingHistoryDataStore.applyUpdate(update:)(void *a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 144);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1000AC564;
  *(void *)(v5 + 24) = v4;
  void v9[4] = sub_1000B0738;
  void v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100089470;
  v9[3] = &unk_100263558;
  uint64_t v6 = _Block_copy(v9);
  swift_retain();
  id v7 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A05E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v42 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v41 = (uint64_t)&v36 - v5;
  uint64_t v6 = sub_1001EB0C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v44 = v15;
  sub_1000AE830(v16, (uint64_t)v15, type metadata accessor for ReadingHistoryModel);
  uint64_t v17 = ReadingHistoryUpdate.days.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_10013A6E0(v17);
  swift_bridgeObjectRelease();
  uint64_t v50 = v18;
  sub_1000A67F0(&v50);
  uint64_t v38 = a1;
  swift_bridgeObjectRelease();
  uint64_t v19 = v50[2];
  uint64_t v37 = v50;
  if (v19)
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v20 = v7 + 16;
    uint64_t v21 = v22;
    uint64_t v23 = (char *)v50 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v47 = *(void *)(v20 + 56);
    uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
    uint64_t v45 = (void (**)(char *, uint64_t))(v20 - 8);
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v20 + 16);
    swift_retain();
    uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
    unint64_t v36 = (v20 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v39 = v22;
    uint64_t v40 = v17;
    while (1)
    {
      v21(v12, v23, v6);
      uint64_t v24 = *v49;
      (*v49)(v12, 0, 1, v6);
      if ((*v48)(v12, 1, v6) == 1) {
        break;
      }
      (*v46)(v9, v12, v6);
      if (*(void *)(v17 + 16))
      {
        uint64_t v25 = v20;
        unint64_t v26 = sub_1001A8708((uint64_t)v9);
        if (v27)
        {
          uint64_t v28 = v42;
          sub_1000AE830(*(void *)(v17 + 56) + *(void *)(v43 + 72) * v26, v42, type metadata accessor for ReadingHistoryDay);
          uint64_t v29 = (uint64_t)v9;
          uint64_t v30 = v41;
          sub_1000AF720(v28, v41, type metadata accessor for ReadingHistoryDay);
          ReadingHistoryModel.mergeDay(date:day:)(v29, v30);
          uint64_t v20 = v25;
          uint64_t v31 = v30;
          uint64_t v9 = (char *)v29;
          uint64_t v21 = v39;
          uint64_t v17 = v40;
          sub_1000AC2D4(v31, type metadata accessor for ReadingHistoryDay);
        }
      }
      (*v45)(v9, v6);
      v23 += v47;
      if (!--v19)
      {
        v24(v12, 1, 1, v6);
        break;
      }
    }
  }
  else
  {
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_retain();
    v32(v12, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t)v37;
  swift_release();
  uint64_t v34 = (uint64_t)v44;
  sub_10009FAF4(v33, (int64_t)v44, 0x647055796C707061, 0xEB00000000657461);
  swift_release();
  return sub_1000AC2D4(v34, type metadata accessor for ReadingHistoryModel);
}

Swift::Void __swiftcall ReadingHistoryDataStore.clearData()()
{
  uint64_t v1 = *(NSObject **)(v0 + 144);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1000AC57C;
  *(void *)(v2 + 24) = v0;
  void v4[4] = sub_1000B0738;
  void v4[5] = v2;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_100089470;
  v4[3] = &unk_1002635A8;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v1) {
    __break(1u);
  }
}

uint64_t sub_1000A0BD4()
{
  return sub_10009D3E4();
}

void static ReadingHistoryDataStore.clearCachedData(in:)(void *a1)
{
  NSString v2 = sub_1001EC340();
  [a1 removeObjectForKey:v2];

  id v3 = sub_1001EC340();
  [a1 setInteger:0 forKey:v3];
}

uint64_t ReadingHistoryDataStore.longestStreak.getter()
{
  return sub_1001EC9E0();
}

uint64_t sub_1000A0D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for ReadingHistoryDataStore.State(0);
  return sub_1000936F8(v3 + *(int *)(v4 + 28), a2, &qword_100291C78);
}

uint64_t ReadingHistoryDataStore.currentStreakLength.getter()
{
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_1000A0DEC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v8 = type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_1000936F8(v7 + *(int *)(v8 + 20), (uint64_t)v6, &qword_100291C78);
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9) == 1)
  {
    uint64_t result = sub_1000816A4((uint64_t)v6, &qword_100291C78);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = *(void *)&v6[*(int *)(v9 + 20)];
    uint64_t result = sub_1000AC2D4((uint64_t)v6, type metadata accessor for ReadingHistory.Streak);
  }
  *a2 = v11;
  return result;
}

uint64_t ReadingHistoryDataStore.readingHistoryDay(for:)()
{
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_1000A0FAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = sub_10007DC14(&qword_100291C50);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1001EC1D0();
  uint64_t v4 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14(&qword_100296830);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v47 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v40 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v42 = a1;
  uint64_t v21 = a1 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_1000AE830(v21, (uint64_t)v9, type metadata accessor for ReadingHistoryModel);
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v20);
  sub_1000AC2D4((uint64_t)v9, type metadata accessor for ReadingHistoryModel);
  sub_1000936F8((uint64_t)v20, (uint64_t)v18, &qword_100296830);
  uint64_t v22 = type metadata accessor for ReadingHistoryDay(0);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  if (v23(v18, 1, v22) == 1)
  {
    sub_1000816A4((uint64_t)v18, &qword_100296830);
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v25 = v6;
    unint64_t v26 = v6;
    uint64_t v27 = v41;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v26, v18, v41);
    sub_1000AC2D4((uint64_t)v18, type metadata accessor for ReadingHistoryDay);
    uint64_t v24 = sub_1001EC1A0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v25, v27);
  }
  sub_1000936F8((uint64_t)v20, (uint64_t)v15, &qword_100296830);
  unsigned int v28 = v23(v15, 1, v22);
  uint64_t v29 = (uint64_t)v47;
  if (v28 != 1)
  {
    uint64_t v33 = &v15[*(int *)(v22 + 20)];
    uint64_t v42 = v24;
    uint64_t v34 = v43;
    uint64_t v35 = v44;
    uint64_t v36 = v46;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v33, v46);
    sub_1000AC2D4((uint64_t)v15, type metadata accessor for ReadingHistoryDay);
    sub_1001EBAE0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
    uint64_t v24 = v42;
    uint64_t v32 = v48;
    goto LABEL_10;
  }
  uint64_t result = sub_1000816A4((uint64_t)v15, &qword_100296830);
  double v31 = *(double *)(v42 + 136);
  if ((~*(void *)&v31 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v31 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v32 = (uint64_t)v31;
LABEL_10:
  sub_1000936F8((uint64_t)v20, v29, &qword_100296830);
  if (v23((char *)v29, 1, v22) == 1)
  {
    sub_1000816A4((uint64_t)v20, &qword_100296830);
    uint64_t result = sub_1000816A4(v29, &qword_100296830);
    BOOL v37 = 0;
  }
  else
  {
    uint64_t v38 = sub_1001EC1A0();
    sub_1001EBAE0();
    BOOL v37 = v38 >= v48;
    sub_1000816A4((uint64_t)v20, &qword_100296830);
    uint64_t result = sub_1000AC2D4(v29, type metadata accessor for ReadingHistoryDay);
  }
  uint64_t v39 = v45;
  uint64_t *v45 = v24;
  v39[1] = v32;
  *((unsigned char *)v39 + 16) = v37;
  return result;
}

void *ReadingHistoryDataStore.readingHistory(range:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v57 = (char *)&v45 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = sub_1001EB180();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007DC14(&qword_100291C80);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v5;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v58 = v4;
  v20(v19, v54, v4);
  v20(&v19[*(int *)(v17 + 56)], v55, v4);
  id v21 = [objc_allocWithZone((Class)NSDateFormatter) init];
  sub_1001EB0F0();
  Class isa = sub_1001EB120().super.isa;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v15, v12);
  [v21 setCalendar:isa];

  NSString v24 = sub_1001EC340();
  [v21 setDateFormat:v24];

  sub_1001EB0F0();
  uint64_t v45 = v19;
  sub_1001EB100();
  v23(v15, v12);
  sub_1001EB0F0();
  sub_1001EB100();
  uint64_t v53 = v15;
  uint64_t v54 = v13 + 8;
  uint64_t v55 = v12;
  uint64_t v51 = v23;
  v23(v15, v12);
  uint64_t v50 = sub_1000AF658(&qword_100291C88, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = sub_1001EC320();
  if (v25)
  {

    unint64_t v26 = *(void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v27 = _swiftEmptyArrayStorage;
  }
  else
  {
    id v52 = v21;
    uint64_t v28 = *(void *)(v3 + 144);
    uint64_t v49 = (void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v48 + 32);
    uint64_t v47 = v28;
    uint64_t v27 = _swiftEmptyArrayStorage;
    uint64_t v48 = v3;
    do
    {
      __chkstk_darwin(v25);
      *(&v45 - 2) = (char *)v3;
      *(&v45 - 1) = v11;
      sub_1001EC9E0();
      uint64_t v29 = v59;
      uint64_t v30 = v60;
      char v31 = v61;
      Class v32 = sub_1001EB060().super.isa;
      id v33 = [v52 stringFromDate:v32];

      uint64_t v34 = sub_1001EC370();
      uint64_t v36 = v35;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_1000A69DC(0, v27[2] + 1, 1, v27);
      }
      unint64_t v38 = v27[2];
      unint64_t v37 = v27[3];
      if (v38 >= v37 >> 1) {
        uint64_t v27 = sub_1000A69DC((void *)(v37 > 1), v38 + 1, 1, v27);
      }
      void v27[2] = v38 + 1;
      uint64_t v39 = &v27[5 * v38];
      void v39[4] = v34;
      v39[5] = v36;
      v39[6] = v29;
      v39[7] = v30;
      *((unsigned char *)v39 + 64) = v31;
      uint64_t v40 = v53;
      sub_1001EB0F0();
      uint64_t v41 = v56;
      sub_1001EB030();
      v51(v40, v55);
      unint64_t v26 = *v49;
      uint64_t v42 = v58;
      (*v49)(v11, v58);
      (*v46)(v11, v41, v42);
      uint64_t v25 = sub_1001EC320();
      uint64_t v3 = v48;
    }
    while ((v25 & 1) == 0);
  }
  uint64_t v43 = v58;
  v26(v57, v58);
  v26(v11, v43);
  sub_1000816A4((uint64_t)v45, &qword_100291C80);
  return v27;
}

uint64_t ReadingHistoryDataStore.readingHistoryState(range:currentTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v38 = a2;
  uint64_t v43 = a1;
  uint64_t v49 = a4;
  uint64_t v48 = type metadata accessor for ReadingHistory.State(0) - 8;
  __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10007DC14(&qword_100291C78);
  uint64_t v5 = __chkstk_darwin(v45);
  uint64_t v46 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v42 = (char *)&v37 - v7;
  uint64_t v8 = sub_1001EB180();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001EB0C0();
  uint64_t v40 = *(void *)(v12 - 8);
  uint64_t v13 = v40;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007DC14(&qword_100291C80);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v50 = (uint64_t)&v37 - v21;
  unint64_t v37 = (char *)&v37 + *(int *)(v17 + 56) - v21;
  uint64_t v22 = v37;
  uint64_t v23 = *(void (**)(void))(v13 + 16);
  v23();
  ((void (*)(char *, uint64_t, uint64_t))v23)(v22, v38, v12);
  sub_1001EB0F0();
  NSString v24 = v15;
  uint64_t v41 = v15;
  sub_1001EB100();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v25 = v39;
  sub_1001EC9E0();
  uint64_t v44 = v53;
  uint64_t v26 = (uint64_t)v42;
  sub_1001EC9E0();
  uint64_t v51 = v25;
  id v52 = v24;
  sub_1001EC9E0();
  uint64_t v45 = v53;
  uint64_t v43 = v54;
  LODWORD(v3_Block_object_dispose(&STACK[0x3B0], 8) = v55;
  uint64_t v27 = (uint64_t)&v20[*(int *)(v17 + 56)];
  ((void (*)(char *, uint64_t, uint64_t))v23)(v20, v50, v12);
  ((void (*)(uint64_t, char *, uint64_t))v23)(v27, v37, v12);
  uint64_t v39 = ReadingHistoryDataStore.readingHistory(range:)((uint64_t)v20, v27);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v28(v27, v12);
  v28((uint64_t)v20, v12);
  uint64_t v29 = v46;
  sub_1000936F8(v26, v46, &qword_100291C78);
  char v31 = (uint64_t *)v47;
  uint64_t v30 = v48;
  uint64_t v32 = (uint64_t)&v47[*(int *)(v48 + 28)];
  uint64_t v33 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  uint64_t *v31 = v44;
  sub_1000AF3B4(v29, v32, &qword_100291C78);
  uint64_t v34 = (char *)v31 + *(int *)(v30 + 32);
  uint64_t v35 = v43;
  *(void *)uint64_t v34 = v45;
  *((void *)v34 + 1) = v35;
  v34[16] = v38;
  *(uint64_t *)((char *)v31 + *(int *)(v30 + 36)) = (uint64_t)v39;
  sub_1000AF720((uint64_t)v31, v49, type metadata accessor for ReadingHistory.State);
  sub_1000816A4(v26, &qword_100291C78);
  v28((uint64_t)v41, v12);
  return sub_1000816A4(v50, &qword_100291C80);
}

uint64_t sub_1000A1FB4()
{
  return sub_1001EC9E0();
}

uint64_t sub_1000A2020()
{
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_1000A2080()
{
  sub_1001EC9E0();
  return v1;
}

void *sub_1000A20EC(uint64_t a1, uint64_t a2)
{
  return ReadingHistoryDataStore.readingHistory(range:)(a1, a2);
}

uint64_t sub_1000A2110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return ReadingHistoryDataStore.readingHistoryState(range:currentTime:)(a1, a2, a3, a4);
}

uint64_t sub_1000A2134@<X0>(uint64_t (*a1)(uint64_t a1)@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistoryDataStore.readingHistoryModelSnapshot(currentTime:)(a1, a2);
}

uint64_t ReadingHistoryDataStore.readingHistoryModelSnapshot(currentTime:)@<X0>(uint64_t (*a1)(uint64_t a1)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v79 = a1;
  uint64_t v2 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v69 = (uint64_t)v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  __chkstk_darwin(v76);
  uint64_t v77 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291C90);
  __chkstk_darwin(v5 - 8);
  uint64_t v81 = (uint64_t)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v68 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v70 = (char *)v67 - v14;
  __chkstk_darwin(v13);
  uint64_t v82 = (uint64_t)v67 - v15;
  uint64_t v16 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v72 = (uint64_t)v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v67 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v67 - v22;
  uint64_t v24 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  uint64_t v27 = *(int *)(v24 + 48);
  int v71 = v26[*(int *)(v24 + 44)];
  uint64_t v28 = (uint64_t)&v26[v27];
  uint64_t v80 = v23;
  sub_1000936F8((uint64_t)&v26[v27], (uint64_t)v23, (uint64_t *)&unk_100291BA0);
  uint64_t v29 = v79;
  uint64_t v30 = ReadingHistoryModel.readingDay(for:)();
  uint64_t v32 = v31;
  char v34 = v33;
  uint64_t v74 = v26;
  uint64_t v35 = (uint64_t)v70;
  sub_1001D1644((uint64_t)v29, v9);
  uint64_t v75 = v10;
  uint64_t v36 = v35 + *(int *)(v10 + 20);
  uint64_t v37 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v67[1] = v38 + 56;
  v39(v36, 1, 1, v37);
  *(void *)uint64_t v35 = v30;
  *(void *)(v35 + _Block_object_dispose(&STACK[0x3B0], 8) = v32;
  *(unsigned char *)(v35 + 16) = v34;
  sub_1000AF3B4((uint64_t)v9, v36, &qword_100291C78);
  sub_1000AF720(v35, v82, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  sub_1000936F8(v28, (uint64_t)v21, (uint64_t *)&unk_100291BA0);
  uint64_t v40 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v21, 2, v40))
  {
    uint64_t v41 = (uint64_t)v80;
    uint64_t v42 = v72;
    sub_1000936F8((uint64_t)v80, v72, (uint64_t *)&unk_100291BA0);
    uint64_t v43 = v82;
    sub_1000AE830(v82, v35, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
    uint64_t v45 = v75;
    v44(v81, 1, 1, v75);
    uint64_t v47 = v76;
    uint64_t v46 = v77;
    uint64_t v48 = (uint64_t)&v77[*(int *)(v76 + 28)];
    v44(v48, 1, 1, v45);
    *uint64_t v46 = v71;
    sub_1000935F8(v42, (uint64_t)&v46[*(int *)(v47 + 20)], (uint64_t *)&unk_100291BA0);
    sub_1000AF720(v35, (uint64_t)&v46[*(int *)(v47 + 24)], type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    sub_1000AF3B4(v81, v48, (uint64_t *)&unk_100291C90);
    sub_1000AF720((uint64_t)v46, v78, type metadata accessor for ReadingHistory.ModelSnapshot);
  }
  else
  {
    sub_1000AF720((uint64_t)v21, v69, type metadata accessor for ReadingHistoryModel);
    v67[0] = v39;
    uint64_t v49 = v79;
    uint64_t v50 = ReadingHistoryModel.readingDay(for:)();
    uint64_t v52 = v51;
    char v54 = v53;
    uint64_t v55 = (uint64_t)v9;
    sub_1001D1644((uint64_t)v49, v9);
    uint64_t v56 = v75;
    uint64_t v57 = (uint64_t)v68;
    uint64_t v58 = (uint64_t)&v68[*(int *)(v75 + 20)];
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v67[0])(v58, 1, 1, v37);
    *(void *)uint64_t v57 = v50;
    *(void *)(v57 + _Block_object_dispose(&STACK[0x3B0], 8) = v52;
    *(unsigned char *)(v57 + 16) = v54;
    sub_1000AF3B4(v55, v58, &qword_100291C78);
    uint64_t v79 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues;
    sub_1000AF720(v57, v35, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    uint64_t v59 = v72;
    sub_1000936F8((uint64_t)v80, v72, (uint64_t *)&unk_100291BA0);
    sub_1000AE830(v82, v57, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    uint64_t v60 = v81;
    sub_1000AE830(v35, v81, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    char v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
    v61(v60, 0, 1, v56);
    uint64_t v63 = v76;
    uint64_t v62 = v77;
    uint64_t v64 = (uint64_t)&v77[*(int *)(v76 + 28)];
    v61(v64, 1, 1, v56);
    unsigned char *v62 = v71;
    sub_1000935F8(v59, (uint64_t)&v62[*(int *)(v63 + 20)], (uint64_t *)&unk_100291BA0);
    uint64_t v65 = (uint64_t)&v62[*(int *)(v63 + 24)];
    uint64_t v43 = v82;
    sub_1000AF720(v57, v65, v79);
    uint64_t v41 = (uint64_t)v80;
    sub_1000AF3B4(v60, v64, (uint64_t *)&unk_100291C90);
    sub_1000AF720((uint64_t)v62, v78, type metadata accessor for ReadingHistory.ModelSnapshot);
    sub_1000AC2D4(v35, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    sub_1000AC2D4(v69, type metadata accessor for ReadingHistoryModel);
  }
  sub_1000AC2D4(v43, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  sub_1000816A4(v41, (uint64_t *)&unk_100291BA0);
  return sub_1000816A4((uint64_t)v74, (uint64_t *)&unk_100291CA0);
}

uint64_t sub_1000A2948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  swift_retain();
  sub_1000A4274(a1, (uint64_t)sub_100093DC8, v6);
  swift_release();
  return swift_release();
}

uint64_t sub_1000A29F8(uint64_t a1)
{
  return ReadingHistoryDataStore.removeObserver(_:)(a1);
}

void sub_1000A2A1C()
{
}

uint64_t sub_1000A2A40()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(void *)v0 + 120))(v3);
  sub_1000A2C70((uint64_t)v5, 0x646F547261656C63, 0xEA00000000007961);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

Swift::Void __swiftcall ReadingHistoryDataStore.clearToday()()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v0 + 120))(v3);
  sub_1000A2C70((uint64_t)v5, 0x646F547261656C63, 0xEA00000000007961);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_1000A2C30(uint64_t a1, uint64_t a2)
{
  return ReadingHistoryDataStore.increment(date:by:)(a1, a2);
}

uint64_t ReadingHistoryDataStore.clearDate(_:)(uint64_t a1)
{
  return sub_1000A2C70(a1, 0x7461447261656C63, 0xE900000000000065);
}

uint64_t sub_1000A2C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1001EB0C0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_queue_t v19 = *(dispatch_queue_t *)(v3 + 144);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v12 = (v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v11, v10, v7);
  *(void *)(v13 + v12) = v3;
  uint64_t v14 = (void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8));
  void *v14 = a2;
  v14[1] = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1000AF910;
  *(void *)(v15 + 24) = v13;
  aBlock[4] = sub_1000B0738;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  void aBlock[3] = &unk_100263DC0;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v19, v16);
  _Block_release(v16);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A2EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v57 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v54);
  char v53 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v9 = (int *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v51 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v59 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v49 - v12);
  uint64_t v13 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v52 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v56 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v49 - v20);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v49 - v21;
  uint64_t v23 = sub_1001EB0C0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v49 - v28;
  uint64_t v58 = v24;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v30((char *)&v49 - v28, a1, v23);
  uint64_t v31 = v62 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  v30((char *)v27, v31 + v9[8], v23);
  uint64_t v50 = v31;
  sub_1000AE830(v31, (uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  uint64_t v55 = v29;
  sub_1001D57FC((uint64_t)v29);
  type metadata accessor for ReadingHistoryDataStore(0);
  uint64_t v32 = v31;
  char v33 = v59;
  sub_1000AE830(v32, (uint64_t)v59, type metadata accessor for ReadingHistoryDataStore.State);
  sub_100096910(v33, (int64_t)v22, v27, (uint64_t)v15);
  sub_1000AC2D4((uint64_t)v33, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v34 = (uint64_t)v56;
  sub_1000996D8((uint64_t)v22, (uint64_t)v15, (uint64_t)v56);
  sub_1000AC2D4((uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  sub_1000AF720(v34, (uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  uint64_t v35 = v51;
  sub_1000AE830((uint64_t)v22, v51, type metadata accessor for ReadingHistoryModel);
  uint64_t v36 = v35 + v9[7];
  uint64_t v59 = v15;
  sub_1000936F8((uint64_t)v15, v36, &qword_100291C78);
  v30((char *)(v35 + v9[8]), (uint64_t)v27, v23);
  uint64_t v37 = (uint64_t)v53;
  uint64_t v38 = (char *)(v35 + v9[9]);
  uint64_t v56 = v27;
  sub_1001D1644((uint64_t)v27, v38);
  uint64_t v39 = v62;
  swift_retain();
  uint64_t v40 = v54;
  sub_1001EC9E0();
  swift_release();
  uint64_t v41 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v42 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v57, 1, 2, v41);
  sub_1000AF418(v35, v37, type metadata accessor for ReadingHistoryModel);
  uint64_t v43 = *(int *)(v40 + 48);
  uint64_t v44 = (uint64_t)v52;
  sub_1000AF3B4(v42, v37 + v43, (uint64_t *)&unk_100291BA0);
  sub_10009B5A8(v35, v37, v60, v61);
  sub_1000AF9BC(v39 + 56, (uint64_t)v63);
  uint64_t v45 = v64;
  uint64_t v46 = v65;
  sub_100094758(v63, v64);
  sub_1000AE830(v50, v44, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, v45, v46);
  sub_1000AC2D4(v44, type metadata accessor for ReadingHistoryModel);
  sub_1000947F0((uint64_t)v63);
  sub_1000816A4(v37, (uint64_t *)&unk_100291CA0);
  sub_1000AC2D4(v35, type metadata accessor for ReadingHistoryDataStore.State);
  sub_1000816A4((uint64_t)v59, &qword_100291C78);
  sub_1000AC2D4((uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  uint64_t v47 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v58 + 8);
  v47(v56, v23);
  return ((uint64_t (*)(char *, uint64_t))v47)(v55, v23);
}

uint64_t ReadingHistoryDataStore.serializedModel(_:)(void *a1)
{
  uint64_t v2 = v1;
  long long v12 = xmmword_100215AF0;
  uint64_t v4 = *(NSObject **)(v1 + 144);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = v2;
  void v5[4] = a1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1000AC63C;
  *(void *)(v6 + 24) = v5;
  void v11[4] = sub_1000B0738;
  void v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100089470;
  v11[3] = &unk_100263620;
  uint64_t v7 = _Block_copy(v11);
  swift_retain();
  id v8 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_1000A36B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EBF80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_1000AE830(v11, (uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for CRCodableVersion.version1(_:), v4);
  sub_1000AF658((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  uint64_t v12 = sub_1001EBFF0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000AC2D4((uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  uint64_t v15 = *a1;
  unint64_t v16 = a1[1];
  *a1 = v12;
  a1[1] = v14;
  return sub_100081700(v15, v16);
}

Swift::Void __swiftcall ReadingHistoryDataStore.forceSummarizeAndPrune(year:month:)(Swift::Int year, Swift::Int month)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 144);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = v3;
  v7[3] = year;
  void v7[4] = month;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1000AC690;
  *(void *)(v8 + 24) = v7;
  void v10[4] = sub_1000B0738;
  v10[5] = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100089470;
  v10[3] = &unk_100263698;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v6) {
    __break(1u);
  }
}

uint64_t sub_1000A3B54(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = (char *)a2;
  uint64_t v53 = a1;
  uint64_t v3 = *v2;
  uint64_t v44 = v2;
  uint64_t v49 = v3;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v52);
  uint64_t v51 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistoryDataStore.State(0);
  uint64_t v8 = (int *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v48 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v46 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v43 - v11);
  uint64_t v12 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v50 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = sub_1001EB0C0();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = (uint64_t)v2 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  swift_beginAccess();
  uint64_t v25 = v24 + v8[8];
  uint64_t v55 = v21;
  uint64_t v26 = *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v21 + 16);
  v26(v23, v25, v20);
  uint64_t v47 = v24;
  uint64_t v45 = type metadata accessor for ReadingHistoryModel;
  sub_1000AE830(v24, (uint64_t)v19, type metadata accessor for ReadingHistoryModel);
  sub_1001D5BF0(v53, (uint64_t)v56);
  uint64_t v27 = v24;
  uint64_t v28 = v46;
  sub_1000AE830(v27, (uint64_t)v46, type metadata accessor for ReadingHistoryDataStore.State);
  sub_100096910(v28, (int64_t)v19, v23, (uint64_t)v14);
  sub_1000AC2D4((uint64_t)v28, type metadata accessor for ReadingHistoryDataStore.State);
  uint64_t v29 = v48;
  sub_1000AE830((uint64_t)v19, v48, type metadata accessor for ReadingHistoryModel);
  uint64_t v30 = v29 + v8[7];
  uint64_t v56 = v14;
  sub_1000936F8((uint64_t)v14, v30, &qword_100291C78);
  v26((void (*)(char *, uint64_t, uint64_t, uint64_t))(v29 + v8[8]), (uint64_t)v23, v20);
  uint64_t v31 = (uint64_t)v51;
  uint64_t v32 = (char *)(v29 + v8[9]);
  uint64_t v53 = (uint64_t)v23;
  sub_1001D1644((uint64_t)v23, v32);
  char v33 = v44;
  swift_retain();
  uint64_t v34 = v52;
  sub_1001EC9E0();
  swift_release();
  uint64_t v35 = v31 + *(int *)(v34 + 48);
  uint64_t v36 = v54;
  sub_1000936F8(v35, v54, (uint64_t *)&unk_100291BA0);
  sub_1000AF418((uint64_t)v19, v31, type metadata accessor for ReadingHistoryModel);
  sub_1000AF3B4(v36, v35, (uint64_t *)&unk_100291BA0);
  uint64_t v37 = v29;
  uint64_t v38 = v29;
  uint64_t v39 = (uint64_t)v50;
  sub_10009B5A8(v38, v31, 0xD000000000000016, 0x8000000100222C10);
  sub_1000AF9BC((uint64_t)(v33 + 7), (uint64_t)v57);
  uint64_t v40 = v58;
  uint64_t v41 = v59;
  sub_100094758(v57, v58);
  sub_1000AE830(v47, v39, v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, v40, v41);
  sub_1000AC2D4(v39, type metadata accessor for ReadingHistoryModel);
  sub_1000947F0((uint64_t)v57);
  sub_1000816A4(v31, (uint64_t *)&unk_100291CA0);
  sub_1000AC2D4(v37, type metadata accessor for ReadingHistoryDataStore.State);
  sub_1000816A4((uint64_t)v56, &qword_100291C78);
  sub_1000AC2D4((uint64_t)v19, type metadata accessor for ReadingHistoryModel);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v53, v20);
}

uint64_t ReadingHistoryDataStore.readingHistoryModelLoadedState()()
{
  sub_10007DC14(&qword_100291CB0);
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_1000A4174@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  char v5 = v4[*(int *)(v2 + 44)];
  uint64_t result = sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_100291CA0);
  *a1 = v5;
  return result;
}

uint64_t sub_1000A4274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(NSObject **)(v4 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a2;
  void v9[4] = a3;
  void v9[5] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000AFA6C;
  *(void *)(v10 + 24) = v9;
  void v13[4] = sub_1000B0738;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  _DWORD v13[2] = sub_100089470;
  v13[3] = &unk_100263E38;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A43F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(NSObject **)(v4 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a2;
  void v9[4] = a3;
  void v9[5] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000AE8D4;
  *(void *)(v10 + 24) = v9;
  void v13[4] = sub_1000B0738;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  _DWORD v13[2] = sub_100089470;
  v13[3] = &unk_1002639D8;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A456C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(NSObject **)(v4 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a2;
  void v9[4] = a3;
  void v9[5] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000AE638;
  *(void *)(v10 + 24) = v9;
  void v13[4] = sub_1000B0738;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  _DWORD v13[2] = sub_100089470;
  v13[3] = &unk_100263820;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A46E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v6 = sub_1001EBAA0();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  __chkstk_darwin(v6);
  uint64_t v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EBA60();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100291F40);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = (uint64_t)a1 + *(void *)(*a1 + 120);
  swift_beginAccess();
  sub_1000936F8(v18, (uint64_t)v17, (uint64_t *)&unk_100291CA0);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (char *)a1 + *(void *)(*a1 + 128);
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v20 = *((void *)v19 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v20 + 8))(a1, ObjectType, v20);
    swift_unknownObjectRelease();
  }
  sub_1001EBA50();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  sub_1000936F8((uint64_t)v17, (uint64_t)v15, &qword_100291F40);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v38 = v17;
  unint64_t v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  uint64_t v37 = a2;
  uint64_t v26 = v44;
  *(void *)(v25 + 24) = v44;
  sub_1000935F8((uint64_t)v15, v25 + v23, &qword_100291F40);
  *(void *)(v25 + v24) = v22;
  aBlock[4] = sub_1000AFFF8;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100263EB0;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v28 = v39;
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
  swift_release();
  swift_release();
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v45;
  swift_unknownObjectWeakInit();
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v29;
  v32[3] = v30;
  uint64_t v33 = v37;
  v32[4] = v31;
  v32[5] = v33;
  v32[6] = v26;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v46 = a1[4];
  a1[4] = 0x8000000000000000;
  sub_10019A688((uint64_t)sub_1000B00D0, (uint64_t)v32, v31, isUniquelyReferenced_nonNull_native);
  a1[4] = v46;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1000816A4((uint64_t)v38, &qword_100291F40);
  swift_release();
  return swift_release();
}

uint64_t sub_1000A4C18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v6 = sub_1001EBAA0();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  __chkstk_darwin(v6);
  uint64_t v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EBA60();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100291F18);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = (uint64_t)a1 + *(void *)(*a1 + 120);
  swift_beginAccess();
  sub_1000AE830(v18, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (char *)a1 + *(void *)(*a1 + 128);
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v20 = *((void *)v19 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v20 + 8))(a1, ObjectType, v20);
    swift_unknownObjectRelease();
  }
  sub_1001EBA50();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  sub_1000936F8((uint64_t)v17, (uint64_t)v15, &qword_100291F18);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v38 = v17;
  unint64_t v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  uint64_t v37 = a2;
  uint64_t v26 = v44;
  *(void *)(v25 + 24) = v44;
  sub_1000935F8((uint64_t)v15, v25 + v23, &qword_100291F18);
  *(void *)(v25 + v24) = v22;
  aBlock[4] = sub_1000AEABC;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100263A50;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v28 = v39;
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
  swift_release();
  swift_release();
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v45;
  swift_unknownObjectWeakInit();
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v29;
  v32[3] = v30;
  uint64_t v33 = v37;
  v32[4] = v31;
  v32[5] = v33;
  v32[6] = v26;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v46 = a1[4];
  a1[4] = 0x8000000000000000;
  sub_10019A6B4((uint64_t)sub_1000AEACC, (uint64_t)v32, v31, isUniquelyReferenced_nonNull_native);
  a1[4] = v46;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1000816A4((uint64_t)v38, &qword_100291F18);
  swift_release();
  return swift_release();
}

uint64_t sub_1000A5154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v29 = a2;
  uint64_t v28 = sub_1001EBAA0();
  uint64_t v5 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1001EBA60();
  uint64_t v8 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v13 = *(unsigned __int8 *)(a1 + 56);
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v14 = *(void *)(a1 + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  sub_1001EBA50();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  v33[0] = v12;
  v33[1] = v11;
  v33[3] = 0;
  v33[4] = 0;
  v33[2] = v13;
  __int16 v34 = 0;
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v19 = v29;
  uint64_t v18 = v30;
  v17[2] = v29;
  v17[3] = v18;
  sub_1000935F8((uint64_t)v33, (uint64_t)(v17 + 4), &qword_100291ED8);
  v17[10] = v16;
  aBlock[4] = sub_1000AE694;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100263898;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v28);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  swift_release();
  swift_release();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v31;
  swift_unknownObjectWeakInit();
  unint64_t v24 = (void *)swift_allocObject();
  v24[2] = v21;
  v24[3] = v22;
  void v24[4] = v23;
  v24[5] = v19;
  v24[6] = v18;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0x8000000000000000;
  sub_10019A6E0((uint64_t)sub_1000AE72C, (uint64_t)v24, v23, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 32) = v33[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1000A5570(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  a1(a3);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result + *(void *)(*(void *)result + 128);
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v5 = *(void *)(v4 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      uint64_t v8 = swift_retain();
      v7(v8, ObjectType, v5);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A566C(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3)
{
  sub_1000935F8(a3, (uint64_t)v10, &qword_100291ED8);
  a1(v10);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v6 = *(void *)(v5 + 72);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v9 = swift_retain();
      v8(v9, ObjectType, v6);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000A5770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v31 = a4;
  uint64_t v7 = sub_1001EBA60();
  uint64_t v35 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EBAA0();
  uint64_t v34 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14(&qword_100291F40);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong)
    {
      uint64_t v31 = *(void *)(v18 + 24);
      sub_1000936F8(a1, (uint64_t)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100291F40);
      unint64_t v20 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v21 = swift_allocObject();
      uint64_t v22 = v33;
      *(void *)(v21 + 16) = v32;
      *(void *)(v21 + 24) = v22;
      sub_1000935F8((uint64_t)v16, v21 + v20, &qword_100291F40);
      aBlock[4] = sub_1000B0664;
      aBlock[5] = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_100263F28;
      uint64_t v23 = _Block_copy(aBlock);
      swift_retain();
      sub_1001EBA80();
      uint64_t v36 = _swiftEmptyArrayStorage;
      sub_1000AF658((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10007DC14((uint64_t *)&unk_100291BF0);
      sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
      sub_1001ECC30();
      sub_1001EC9F0();
      _Block_release(v23);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_1001EC910();
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_100215320;
      uint64_t v25 = v31;
      aBlock[0] = v31;
      uint64_t v26 = sub_1001EC3D0();
      uint64_t v28 = v27;
      *(void *)(v24 + 56) = &type metadata for String;
      *(void *)(v24 + 64) = sub_10007DC58();
      *(void *)(v24 + 32) = v26;
      *(void *)(v24 + 40) = v28;
      sub_100081668(0, (unint64_t *)&qword_100291EE0);
      uint64_t v29 = (void *)sub_1001ECB30();
      sub_1001EB530();
      swift_bridgeObjectRelease();

      swift_beginAccess();
      uint64_t v30 = sub_1001C08EC(v25);
      swift_endAccess();
      uint64_t result = swift_release();
      if (v30) {
        return sub_1000B0100(v30);
      }
    }
  }
  return result;
}

uint64_t sub_1000A5C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v31 = a4;
  uint64_t v7 = sub_1001EBA60();
  uint64_t v35 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EBAA0();
  uint64_t v34 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14(&qword_100291F18);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong)
    {
      uint64_t v31 = *(void *)(v18 + 24);
      sub_1000936F8(a1, (uint64_t)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100291F18);
      unint64_t v20 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v21 = swift_allocObject();
      uint64_t v22 = v33;
      *(void *)(v21 + 16) = v32;
      *(void *)(v21 + 24) = v22;
      sub_1000935F8((uint64_t)v16, v21 + v20, &qword_100291F18);
      aBlock[4] = sub_1000AEC5C;
      aBlock[5] = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_100263AC8;
      uint64_t v23 = _Block_copy(aBlock);
      swift_retain();
      sub_1001EBA80();
      uint64_t v36 = _swiftEmptyArrayStorage;
      sub_1000AF658((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10007DC14((uint64_t *)&unk_100291BF0);
      sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
      sub_1001ECC30();
      sub_1001EC9F0();
      _Block_release(v23);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_1001EC910();
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_100215320;
      uint64_t v25 = v31;
      aBlock[0] = v31;
      uint64_t v26 = sub_1001EC3D0();
      uint64_t v28 = v27;
      *(void *)(v24 + 56) = &type metadata for String;
      *(void *)(v24 + 64) = sub_10007DC58();
      *(void *)(v24 + 32) = v26;
      *(void *)(v24 + 40) = v28;
      sub_100081668(0, (unint64_t *)&qword_100291EE0);
      uint64_t v29 = (void *)sub_1001ECB30();
      sub_1001EB530();
      swift_bridgeObjectRelease();

      swift_beginAccess();
      uint64_t v30 = sub_1001C0918(v25);
      swift_endAccess();
      uint64_t result = swift_release();
      if (v30) {
        return sub_1000B0100(v30);
      }
    }
  }
  return result;
}

uint64_t sub_1000A6150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a4;
  uint64_t v9 = sub_1001EBA60();
  uint64_t v29 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001EBAA0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong)
    {
      uint64_t v28 = *(void *)(v17 + 24);
      sub_1000935F8(a1, (uint64_t)v32, &qword_100291ED8);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = a5;
      *(void *)(v19 + 24) = a6;
      sub_1000935F8((uint64_t)v32, v19 + 32, &qword_100291ED8);
      aBlock[4] = sub_1000AE7D8;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_100263938;
      unint64_t v20 = _Block_copy(aBlock);
      swift_retain();
      sub_1001EBA80();
      uint64_t v30 = _swiftEmptyArrayStorage;
      sub_1000AF658((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10007DC14((uint64_t *)&unk_100291BF0);
      sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
      sub_1001ECC30();
      sub_1001EC9F0();
      _Block_release(v20);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_1001EC910();
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_100215320;
      uint64_t v22 = v28;
      aBlock[0] = v28;
      uint64_t v23 = sub_1001EC3D0();
      uint64_t v25 = v24;
      *(void *)(v21 + 56) = &type metadata for String;
      *(void *)(v21 + 64) = sub_10007DC58();
      *(void *)(v21 + 32) = v23;
      *(void *)(v21 + 40) = v25;
      sub_100081668(0, (unint64_t *)&qword_100291EE0);
      uint64_t v26 = (void *)sub_1001ECB30();
      sub_1001EB530();
      swift_bridgeObjectRelease();

      swift_beginAccess();
      uint64_t v27 = sub_1001C0944(v22);
      swift_endAccess();
      uint64_t result = swift_release();
      if (v27) {
        return sub_1000B0100(v27);
      }
    }
  }
  return result;
}

uint64_t sub_1000A65BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a2 + 32);
  swift_beginAccess();
  unint64_t v4 = sub_1001A86C4(a1);
  if ((v5 & 1) == 0) {
    return swift_endAccess();
  }
  unint64_t v6 = v4;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  uint64_t v10 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001AB7E0();
    uint64_t v8 = v10;
  }
  sub_1001520E4(v6, v8);
  *uint64_t v3 = v8;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1000A6688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000A66C8(a1, (uint64_t)type metadata accessor for CRDTModelSyncVersion, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000AE830, a2);
}

uint64_t sub_1000A66C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + *(void *)(*(void *)a1 + 120);
  swift_beginAccess();
  return a3(v7, a4, a2);
}

uint64_t sub_1000A6750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000A66C8(a1, (uint64_t)&unk_100291CA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000936F8, a2);
}

Swift::Int sub_1000A6784(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001CFD58(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1000A78BC(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1000A67F0(void **a1)
{
  uint64_t v2 = *(void *)(sub_1001EB0C0() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1001CFD6C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1000A8008(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1000A6898(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A6C20(a1, a2, a3, a4, &qword_100291EA0, (uint64_t (*)(void))_s21PriceDropNotificationVMa, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
}

void *sub_1000A68CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007DC14(&qword_100291ED0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A9F70(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000A69DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007DC14(&qword_100292030);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000AB030(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000A6AFC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A767C(a1, a2, a3, a4, &qword_100291F08, &qword_100291F10);
}

void *sub_1000A6B10(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007DC14(&qword_100291EC8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000AB128(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A6C20(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10007DC14(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1001ECE80();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000AE3D0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1000A6EA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007DC14(&qword_100292038);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A9F70(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000A6FB0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007DC14(&qword_100291E60);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000AE0BC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000A70C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007DC14(&qword_100291EA8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000AE2C4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A71D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A6C20(a1, a2, a3, a4, &qword_100291E98, (uint64_t (*)(void))_s4DealVMa, (uint64_t (*)(void))_s4DealVMa);
}

void *sub_1000A7204(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007DC14(&qword_100291E90);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000AA05C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A7328(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A6C20(a1, a2, a3, a4, &qword_100291E88, (uint64_t (*)(void))_s11TrackedItemVMa, (uint64_t (*)(void))_s11TrackedItemVMa);
}

uint64_t sub_1000A735C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10007DC14(&qword_100291EB8);
  uint64_t v10 = *(void *)(sub_10007DC14(&qword_100291EC0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1001ECE80();
    __break(1u);
    return result;
  }
  _DWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10007DC14(&qword_100291EC0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000AA154(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1000A75CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A6C20(a1, a2, a3, a4, &qword_100291F00, type metadata accessor for PBPropertyBundle, type metadata accessor for PBPropertyBundle);
}

uint64_t sub_1000A7600(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A6C20(a1, a2, a3, a4, &qword_100291EF8, type metadata accessor for PBPropertyValue, type metadata accessor for PBPropertyValue);
}

uint64_t sub_1000A7634(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A6C20(a1, a2, a3, a4, &qword_100291EF0, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.PendingRecordZoneChange, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.PendingRecordZoneChange);
}

void *sub_1000A7668(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1000A767C(a1, a2, a3, a4, &qword_100291E78, &qword_100291E80);
}

void *sub_1000A767C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10007DC14(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      _DWORD v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000AE52C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1000A7798(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007DC14(&qword_100291E68);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000AE1B4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

Swift::Int sub_1000A78BC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1001ED030(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1000A8BC8(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_156;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_164;
  }
  Swift::Int v6 = result;
  uint64_t v108 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = &_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v51 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_112:
      uint64_t v100 = v12;
      uint64_t v111 = v9;
      if (v51 < 2)
      {
LABEL_123:
        swift_bridgeObjectRelease();
        v111[2] = 0;
        return swift_bridgeObjectRelease();
      }
      uint64_t v101 = *v108;
      while (1)
      {
        unint64_t v102 = v51 - 2;
        if (v51 < 2) {
          goto LABEL_146;
        }
        if (!v101) {
          goto LABEL_163;
        }
        uint64_t v103 = v100;
        uint64_t v104 = *(void *)&v100[16 * v102 + 32];
        uint64_t v105 = *(void *)&v100[16 * v51 + 24];
        sub_1000A8FAC((uint64_t *)(v101 + 16 * v104), (uint64_t *)(v101 + 16 * *(void *)&v100[16 * v51 + 16]), v101 + 16 * v105, __dst);
        if (v1) {
          goto LABEL_123;
        }
        if (v105 < v104) {
          goto LABEL_147;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v103 = sub_1001CEE74((uint64_t)v103);
        }
        if (v102 >= *((void *)v103 + 2)) {
          goto LABEL_148;
        }
        uint64_t v106 = &v103[16 * v102 + 32];
        *(void *)uint64_t v106 = v104;
        *((void *)v106 + 1) = v105;
        unint64_t v107 = *((void *)v103 + 2);
        if (v51 > v107) {
          goto LABEL_149;
        }
        memmove(&v103[16 * v51 + 16], &v103[16 * v51 + 32], 16 * (v107 - v51));
        uint64_t v100 = v103;
        *((void *)v103 + 2) = v107 - 1;
        unint64_t v51 = v107 - 1;
        if (v107 <= 2) {
          goto LABEL_123;
        }
      }
    }
    uint64_t v111 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1001EC630();
    *(void *)(v8 + 16) = v7;
    uint64_t v111 = (void *)v8;
    __dst = (uint64_t *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v109 = *a1 - 16;
  uint64_t v110 = *a1 + 40;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v112 = v6;
  Swift::Int v113 = v3;
  uint64_t v114 = v11;
  while (1)
  {
    Swift::Int v13 = v10++;
    if (v10 >= v3) {
      goto LABEL_36;
    }
    uint64_t v14 = *(void *)(v11 + 16 * v10);
    uint64_t v15 = 100 * v14;
    if ((unsigned __int128)(v14 * (__int128)100) >> 64 != (100 * v14) >> 63) {
      goto LABEL_151;
    }
    uint64_t v16 = *(void *)(v11 + 16 * v10 + 8);
    BOOL v65 = __OFADD__(v15, v16);
    uint64_t v17 = v15 + v16;
    if (v65) {
      goto LABEL_152;
    }
    unint64_t v18 = (uint64_t *)(v11 + 16 * v13);
    uint64_t v19 = 100 * *v18;
    if ((unsigned __int128)(*v18 * (__int128)100) >> 64 != v19 >> 63) {
      goto LABEL_153;
    }
    uint64_t v20 = v18[1];
    BOOL v65 = __OFADD__(v19, v20);
    uint64_t v21 = v19 + v20;
    if (v65) {
      goto LABEL_154;
    }
    Swift::Int v10 = v13 + 2;
    if (v13 + 2 >= v3) {
      goto LABEL_27;
    }
    unint64_t v22 = (void *)(v110 + 16 * v13);
    do
    {
      uint64_t v23 = *(v22 - 1);
      uint64_t v24 = 100 * v23;
      if ((unsigned __int128)(v23 * (__int128)100) >> 64 != (100 * v23) >> 63) {
        goto LABEL_132;
      }
      uint64_t v25 = *v22;
      BOOL v65 = __OFADD__(v24, *v22);
      uint64_t v26 = v24 + *v22;
      if (v65)
      {
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
      uint64_t v27 = 100 * v14;
      BOOL v65 = __OFADD__(v27, v16);
      uint64_t v28 = v27 + v16;
      if (v65) {
        goto LABEL_134;
      }
      if (v17 < v21 == v26 >= v28) {
        goto LABEL_27;
      }
      ++v10;
      v22 += 2;
      uint64_t v16 = v25;
      uint64_t v14 = v23;
    }
    while (v3 != v10);
    Swift::Int v10 = v3;
LABEL_27:
    if (v17 < v21) {
      break;
    }
LABEL_36:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v13)) {
        goto LABEL_155;
      }
      if (v10 - v13 < v6)
      {
        Swift::Int v34 = v13 + v6;
        if (__OFADD__(v13, v6)) {
          goto LABEL_157;
        }
        if (v34 >= v3) {
          Swift::Int v34 = v3;
        }
        if (v34 < v13) {
          goto LABEL_158;
        }
        if (v10 != v34)
        {
          uint64_t v35 = (uint64_t *)(v109 + 16 * v10);
          do
          {
            long long v36 = *(_OWORD *)(v11 + 16 * v10);
            uint64_t v37 = *(void *)(v11 + 16 * v10);
            uint64_t v38 = 100 * v37;
            BOOL v39 = (unsigned __int128)(v37 * (__int128)100) >> 64 != (100 * v37) >> 63;
            BOOL v65 = __OFADD__(v38, *((void *)&v36 + 1));
            uint64_t v40 = v38 + *((void *)&v36 + 1);
            char v41 = v65;
            Swift::Int v42 = v13;
            uint64_t v43 = v35;
            do
            {
              if (v39)
              {
                __break(1u);
LABEL_125:
                __break(1u);
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
LABEL_129:
                __break(1u);
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
LABEL_132:
                __break(1u);
                goto LABEL_133;
              }
              if (v41) {
                goto LABEL_125;
              }
              uint64_t v44 = 100 * *v43;
              if ((unsigned __int128)(*v43 * (__int128)100) >> 64 != v44 >> 63) {
                goto LABEL_126;
              }
              uint64_t v45 = v43[1];
              BOOL v65 = __OFADD__(v44, v45);
              uint64_t v46 = v44 + v45;
              if (v65) {
                goto LABEL_127;
              }
              if (v40 >= v46) {
                break;
              }
              if (!v11) {
                goto LABEL_160;
              }
              uint64_t v47 = v43 + 2;
              long long v48 = *(_OWORD *)v43;
              *(_OWORD *)uint64_t v43 = v36;
              v43 -= 2;
              _OWORD *v47 = v48;
              ++v42;
            }
            while (v10 != v42);
            ++v10;
            v35 += 2;
          }
          while (v10 != v34);
          Swift::Int v10 = v34;
        }
      }
    }
    if (v10 < v13) {
      goto LABEL_150;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1001CE928(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v50 = *((void *)v12 + 2);
    unint64_t v49 = *((void *)v12 + 3);
    unint64_t v51 = v50 + 1;
    uint64_t v11 = v114;
    if (v50 >= v49 >> 1)
    {
      uint64_t v99 = sub_1001CE928((char *)(v49 > 1), v50 + 1, 1, v12);
      uint64_t v11 = v114;
      uint64_t v12 = v99;
    }
    *((void *)v12 + 2) = v51;
    uint64_t v52 = v12 + 32;
    uint64_t v53 = &v12[16 * v50 + 32];
    *(void *)uint64_t v53 = v13;
    *((void *)v53 + 1) = v10;
    if (v50)
    {
      while (1)
      {
        unint64_t v54 = v51 - 1;
        if (v51 >= 4)
        {
          uint64_t v59 = &v52[16 * v51];
          uint64_t v60 = *((void *)v59 - 8);
          uint64_t v61 = *((void *)v59 - 7);
          BOOL v65 = __OFSUB__(v61, v60);
          uint64_t v62 = v61 - v60;
          if (v65) {
            goto LABEL_135;
          }
          uint64_t v64 = *((void *)v59 - 6);
          uint64_t v63 = *((void *)v59 - 5);
          BOOL v65 = __OFSUB__(v63, v64);
          uint64_t v57 = v63 - v64;
          char v58 = v65;
          if (v65) {
            goto LABEL_136;
          }
          unint64_t v66 = v51 - 2;
          uint64_t v67 = &v52[16 * v51 - 32];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v65 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v65) {
            goto LABEL_138;
          }
          BOOL v65 = __OFADD__(v57, v70);
          uint64_t v71 = v57 + v70;
          if (v65) {
            goto LABEL_141;
          }
          if (v71 >= v62)
          {
            uint64_t v89 = &v52[16 * v54];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v65 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v65) {
              goto LABEL_145;
            }
            BOOL v82 = v57 < v92;
            goto LABEL_96;
          }
        }
        else
        {
          if (v51 != 3)
          {
            uint64_t v83 = *((void *)v12 + 4);
            uint64_t v84 = *((void *)v12 + 5);
            BOOL v65 = __OFSUB__(v84, v83);
            uint64_t v76 = v84 - v83;
            char v77 = v65;
            goto LABEL_90;
          }
          uint64_t v56 = *((void *)v12 + 4);
          uint64_t v55 = *((void *)v12 + 5);
          BOOL v65 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          char v58 = v65;
        }
        if (v58) {
          goto LABEL_137;
        }
        unint64_t v66 = v51 - 2;
        uint64_t v72 = &v52[16 * v51 - 32];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v75 = __OFSUB__(v73, v74);
        uint64_t v76 = v73 - v74;
        char v77 = v75;
        if (v75) {
          goto LABEL_140;
        }
        uint64_t v78 = &v52[16 * v54];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v65 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v65) {
          goto LABEL_143;
        }
        if (__OFADD__(v76, v81)) {
          goto LABEL_144;
        }
        if (v76 + v81 >= v57)
        {
          BOOL v82 = v57 < v81;
LABEL_96:
          if (v82) {
            unint64_t v54 = v66;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v77) {
          goto LABEL_139;
        }
        uint64_t v85 = &v52[16 * v54];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v65 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v65) {
          goto LABEL_142;
        }
        if (v88 < v76) {
          goto LABEL_107;
        }
LABEL_98:
        unint64_t v93 = v54 - 1;
        if (v54 - 1 >= v51) {
          goto LABEL_128;
        }
        if (!v11) {
          goto LABEL_161;
        }
        uint64_t v94 = &v52[16 * v93];
        uint64_t v95 = *(void *)v94;
        uint64_t v96 = &v52[16 * v54];
        uint64_t v97 = *((void *)v96 + 1);
        sub_1000A8FAC((uint64_t *)(v11 + 16 * *(void *)v94), (uint64_t *)(v11 + 16 * *(void *)v96), v11 + 16 * v97, __dst);
        if (v1) {
          goto LABEL_123;
        }
        if (v97 < v95) {
          goto LABEL_129;
        }
        if (v54 > *((void *)v12 + 2)) {
          goto LABEL_130;
        }
        *(void *)uint64_t v94 = v95;
        *(void *)&v52[16 * v93 + 8] = v97;
        unint64_t v98 = *((void *)v12 + 2);
        if (v54 >= v98) {
          goto LABEL_131;
        }
        unint64_t v51 = v98 - 1;
        memmove(&v52[16 * v54], v96 + 16, 16 * (v98 - 1 - v54));
        *((void *)v12 + 2) = v98 - 1;
        uint64_t v11 = v114;
        if (v98 <= 2) {
          goto LABEL_107;
        }
      }
    }
    unint64_t v51 = 1;
LABEL_107:
    Swift::Int v6 = v112;
    Swift::Int v3 = v113;
    if (v10 >= v113)
    {
      uint64_t v9 = v111;
      goto LABEL_112;
    }
  }
  if (v10 >= v13)
  {
    if (v13 < v10)
    {
      uint64_t v29 = (long long *)(v109 + 16 * v10);
      Swift::Int v30 = v10;
      Swift::Int v31 = v13;
      uint64_t v32 = (long long *)(v11 + 16 * v13);
      while (1)
      {
        if (v31 != --v30)
        {
          if (!v11) {
            goto LABEL_162;
          }
          long long v33 = *v32;
          long long *v32 = *v29;
          long long *v29 = v33;
        }
        ++v31;
        --v29;
        ++v32;
        if (v31 >= v30) {
          goto LABEL_36;
        }
      }
    }
    goto LABEL_36;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  Swift::Int result = sub_1001ECE80();
  __break(1u);
  return result;
}

Swift::Int sub_1000A8008(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v136 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v151 = (char *)&v131 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v146 = (char *)&v131 - v11;
  __chkstk_darwin(v10);
  long long v147 = (char *)&v131 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = sub_1001ED030(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      return sub_1000A8C8C(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  uint64_t v150 = a1;
  Swift::Int v133 = result;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    uint64_t v132 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_1000A92C0(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_1001CEE74((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[16 * v126 + 32];
          *(void *)uint64_t v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_1001EC630();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v132 = (void *)v17;
    unint64_t v138 = v17 + v18;
  }
  Swift::Int v20 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  CFStringRef v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  uint64_t v139 = v5;
  while (1)
  {
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    Swift::Int v142 = v20 + 1;
    Swift::Int v153 = v139[9];
    Swift::Int v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_1000AF658(&qword_100291C88, (void (*)(uint64_t))&type metadata accessor for Date);
    Swift::Int v31 = v147;
    Swift::Int v148 = v30;
    LODWORD(v152) = sub_1001EC320();
    Swift::Int v32 = v13;
    long long v33 = (void (*)(char *, uint64_t))v139[1];
    Swift::Int v34 = v29;
    Swift::Int v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    Swift::Int v35 = v153;
    Swift::Int v23 = v22 + 2;
    Swift::Int v143 = v32;
    if (v22 + 2 >= v32)
    {
      Swift::Int v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      Swift::Int v37 = v153 * v23;
      while (1)
      {
        Swift::Int v38 = v23;
        BOOL v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        char v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = sub_1001EC320();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        Swift::Int v23 = v38 + 1;
        Swift::Int v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          Swift::Int v13 = v143;
          Swift::Int v23 = v143;
          uint64_t v2 = v131;
          uint64_t v19 = v134;
          Swift::Int v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      uint64_t v19 = v134;
      Swift::Int v23 = v38;
      Swift::Int v22 = v137;
      Swift::Int v13 = v143;
      Swift::Int v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      uint64_t v47 = v150;
      goto LABEL_38;
    }
    uint64_t v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    Swift::Int v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    uint64_t v47 = v150;
    Swift::Int v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        uint64_t v52 = (char *)(v141 + v44);
        uint64_t v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        uint64_t v47 = v150;
        Swift::Int v23 = v148;
        Swift::Int v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    uint64_t v19 = v134;
    Swift::Int v22 = v137;
    Swift::Int v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    Swift::Int v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      uint64_t v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      Swift::Int v57 = v23 * v55;
      Swift::Int v135 = v54;
      do
      {
        uint64_t v59 = 0;
        Swift::Int v148 = v23;
        Swift::Int v142 = v57;
        Swift::Int v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          uint64_t v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          Swift::Int v153 = v22;
          Swift::Int v61 = v57 + v59 + v60;
          uint64_t v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          unint64_t v66 = v146;
          v64(v146, v65, v53);
          sub_1000AF658(&qword_100291C88, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v60) = sub_1001EC320();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          uint64_t v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          Swift::Int v22 = v153 + 1;
          Swift::Int v58 = v148;
          uint64_t v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v58 = v148;
        uint64_t v53 = v149;
        uint64_t v47 = v63;
        Swift::Int v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        Swift::Int v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        Swift::Int v22 = v137;
      }
      while (v23 != v135);
      Swift::Int v23 = v135;
      uint64_t v2 = v131;
      uint64_t v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_1001CE928(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      uint64_t v19 = sub_1001CE928((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    BOOL v75 = v19 + 32;
    uint64_t v76 = &v19[16 * v74 + 32];
    Swift::Int v77 = v148;
    *(void *)uint64_t v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          uint64_t v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            Swift::Int v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        uint64_t v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        unint64_t v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        uint64_t v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        uint64_t v118 = v19;
        uint64_t v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_1000A92C0(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        uint64_t v123 = v118;
        *(void *)uint64_t v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        uint64_t v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = v150[1];
    Swift::Int v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_1001ECE80();
  __break(1u);
  return result;
}

uint64_t sub_1000A8BC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3 - 16;
LABEL_5:
    long long v6 = *(_OWORD *)(v4 + 16 * a3);
    uint64_t v7 = *(void *)(v4 + 16 * a3);
    uint64_t v8 = 100 * v7;
    BOOL v9 = (unsigned __int128)(v7 * (__int128)100) >> 64 != (100 * v7) >> 63;
    BOOL v10 = __OFADD__(v8, *((void *)&v6 + 1));
    uint64_t v11 = v8 + *((void *)&v6 + 1);
    char v12 = v10;
    uint64_t v13 = result;
    uint64_t v14 = (uint64_t *)v5;
    while (!v9)
    {
      if (v12) {
        goto LABEL_18;
      }
      uint64_t v15 = 100 * *v14;
      if ((unsigned __int128)(*v14 * (__int128)100) >> 64 != v15 >> 63) {
        goto LABEL_19;
      }
      uint64_t v16 = v14[1];
      BOOL v10 = __OFADD__(v15, v16);
      uint64_t v17 = v15 + v16;
      if (v10) {
        goto LABEL_20;
      }
      if (v11 < v17)
      {
        if (!v4) {
          goto LABEL_21;
        }
        unint64_t v18 = v14 + 2;
        long long v19 = *(_OWORD *)v14;
        *(_OWORD *)uint64_t v14 = v6;
        v14 -= 2;
        _OWORD *v18 = v19;
        if (a3 != ++v13) {
          continue;
        }
      }
      ++a3;
      v5 += 16;
      if (a3 == a2) {
        return result;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A8C8C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_1001EB0C0();
  uint64_t v8 = __chkstk_darwin(v7);
  char v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    Swift::Int v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    long long v33 = v16;
    Swift::Int v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      Swift::Int v22 = v33;
      v33(v36, v20, v7);
      Swift::Int v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_1000AF658(&qword_100291C88, (void (*)(uint64_t))&type metadata accessor for Date);
      LOBYTE(v22) = sub_1001EC320();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A8FAC(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t v4 = __dst;
  long long v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v38 = __src;
  Swift::Int v37 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      Swift::Int v23 = &v4[2 * v13];
      uint64_t v36 = v23;
      uint64_t v38 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v24 = (uint64_t *)(a3 - 16);
        while (1)
        {
          uint64_t v25 = *(v23 - 2);
          uint64_t v26 = 100 * v25;
          if ((unsigned __int128)(v25 * (__int128)100) >> 64 != (100 * v25) >> 63) {
            break;
          }
          uint64_t v27 = *(v23 - 1);
          BOOL v17 = __OFADD__(v26, v27);
          uint64_t v28 = v26 + v27;
          if (v17) {
            goto LABEL_52;
          }
          uint64_t v29 = v6 - 2;
          uint64_t v30 = *(v6 - 2);
          uint64_t v31 = 100 * v30;
          if ((unsigned __int128)(v30 * (__int128)100) >> 64 != (100 * v30) >> 63) {
            goto LABEL_53;
          }
          uint64_t v32 = *(v6 - 1);
          BOOL v17 = __OFADD__(v31, v32);
          uint64_t v33 = v31 + v32;
          if (v17) {
            goto LABEL_54;
          }
          Swift::Int v34 = v24 + 2;
          if (v28 >= v33)
          {
            uint64_t v36 = v23 - 2;
            if (v34 < v23 || v24 >= v23 || v34 != v23) {
              *(_OWORD *)uint64_t v24 = *((_OWORD *)v23 - 1);
            }
            uint64_t v29 = v6;
            v23 -= 2;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v34 != v6 || v24 >= v6) {
              *(_OWORD *)uint64_t v24 = *(_OWORD *)v29;
            }
            uint64_t v38 = v6 - 2;
            if (v29 <= v7) {
              goto LABEL_50;
            }
          }
          v24 -= 2;
          long long v6 = v29;
          if (v23 <= v4) {
            goto LABEL_50;
          }
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
LABEL_50:
      sub_1001CEA48((void **)&v38, (const void **)&v37, &v36);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[2 * v10];
    uint64_t v36 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      while (1)
      {
        uint64_t v15 = 100 * *v6;
        if ((unsigned __int128)(*v6 * (__int128)100) >> 64 != v15 >> 63) {
          break;
        }
        uint64_t v16 = v6[1];
        BOOL v17 = __OFADD__(v15, v16);
        uint64_t v18 = v15 + v16;
        if (v17) {
          goto LABEL_56;
        }
        uint64_t v19 = 100 * *v4;
        if ((unsigned __int128)(*v4 * (__int128)100) >> 64 != v19 >> 63) {
          goto LABEL_57;
        }
        uint64_t v20 = v4[1];
        BOOL v17 = __OFADD__(v19, v20);
        uint64_t v21 = v19 + v20;
        if (v17) {
          goto LABEL_58;
        }
        if (v18 >= v21)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 2;
          Swift::Int v37 = v4;
          Swift::Int v22 = v6;
        }
        else
        {
          Swift::Int v22 = v6 + 2;
          if (v7 < v6 || v7 >= v22 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 2;
        if (v4 < v14)
        {
          long long v6 = v22;
          if ((unint64_t)v22 < a3) {
            continue;
          }
        }
        uint64_t v38 = v7;
        goto LABEL_50;
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    goto LABEL_50;
  }
LABEL_59:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000A92C0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1001EB0C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v56 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          char v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_1000AF658(&qword_100291C88, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v41) = sub_1001EC320();
          Swift::Int v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      Swift::Int v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_1000AF658(&qword_100291C88, (void (*)(uint64_t))&type metadata accessor for Date);
        char v27 = sub_1001EC320();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_1001CEBC0(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000A98F4(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = isStackAllocationSafe;
  char v11 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v12 = (unint64_t)((1 << v11) + 63) >> 6;
  size_t v13 = 8 * v12;
  if ((v11 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v17 = (uint64_t)&v17;
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v13);
    uint64_t v14 = sub_1000A9C24((uint64_t)&v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v12, v10, a2, a3, a4, a5);
    swift_release();
    if (v5) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v15 = (void *)swift_slowAlloc();
    bzero(v15, v13);
    uint64_t v14 = sub_1000A9C24((uint64_t)v15, v12, v10, a2, a3, a4, a5);
    swift_release();
    swift_slowDealloc();
  }
  return v14;
}

uint64_t sub_1000A9AA0(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(long long *))isStackAllocationSafe;
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_1000A9DAC((uint64_t)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = sub_1000A9DAC((uint64_t)v10, v7, a3, v5);
    swift_release();
    swift_slowDealloc();
  }
  return v9;
}

uint64_t sub_1000A9C24(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = (unint64_t *)result;
  uint64_t v10 = 0;
  int64_t v11 = 0;
  uint64_t v12 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a3 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_20:
    Swift::Int v22 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v18);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    if ((v23 != a4 || v24 != a5) && (v23 != a6 || v24 != a7))
    {
      *(void *)(result + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v10++, 1))
      {
        __break(1u);
LABEL_31:
        swift_retain();
        return sub_10016F6E0(v9, a2, v10, a3);
      }
    }
  }
  int64_t v19 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v19 >= v16) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v19);
  ++v11;
  if (v20) {
    goto LABEL_19;
  }
  int64_t v11 = v19 + 1;
  if (v19 + 1 >= v16) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v11);
  if (v20) {
    goto LABEL_19;
  }
  int64_t v11 = v19 + 2;
  if (v19 + 2 >= v16) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v11);
  if (v20)
  {
LABEL_19:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v16) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v16) {
      goto LABEL_31;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_19;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1000A9DAC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(long long *))
{
  unint64_t v20 = (unint64_t *)result;
  uint64_t v7 = 0;
  int64_t v8 = 0;
  uint64_t v9 = a3 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
LABEL_4:
  uint64_t v22 = v7;
  while (v12)
  {
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v15 = v14 | (v8 << 6);
LABEL_18:
    long long v21 = *(_OWORD *)(*(void *)(a3 + 48) + 16 * v15);
    uint64_t result = a4(&v21);
    if (v4) {
      return result;
    }
    if (result)
    {
      *(unint64_t *)((char *)v20 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v7 = v22 + 1;
      if (!__OFADD__(v22, 1)) {
        goto LABEL_4;
      }
      __break(1u);
LABEL_28:
      swift_retain();
      return sub_10016F6E0(v20, a2, v22, a3);
    }
  }
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_17:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_18;
  }
  int64_t v18 = v8 + 1;
  if (v8 + 1 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v8 + 2;
  if (v8 + 2 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v8 + 3;
  if (v8 + 3 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v8 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

char *sub_1000A9F70(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AA05C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AA154(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_10007DC14(&qword_100291EC0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AA2B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v97 = a6;
  uint64_t v92 = a5;
  int v90 = a4;
  uint64_t v95 = a3;
  uint64_t v93 = a1;
  uint64_t v9 = sub_10007DC14(&qword_100291C78);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  BOOL v99 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v102 = (char **)((char *)&v86 - v12);
  uint64_t v13 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v98 = (uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v101 = (uint64_t)&v86 - v16;
  uint64_t v91 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v17 = __chkstk_darwin(v91);
  uint64_t v94 = (uint64_t)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v89 = (uint64_t)&v86 - v20;
  __chkstk_darwin(v19);
  uint64_t v104 = (uint64_t)&v86 - v21;
  uint64_t v88 = sub_1001EB180();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1001EB0C0();
  uint64_t v96 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v105 - 8);
  uint64_t v24 = __chkstk_darwin(v105);
  uint64_t v86 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v103 = (char *)&v86 - v27;
  __chkstk_darwin(v26);
  unint64_t v29 = (char *)&v86 - v28;
  uint64_t v30 = sub_1001EC990();
  __chkstk_darwin(v30);
  uint64_t v31 = sub_1001EBAA0();
  __chkstk_darwin(v31 - 8);
  uint64_t v32 = sub_1001EC9C0();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v86 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109[3] = sub_10007DC14((uint64_t *)&unk_100291F30);
  v109[4] = &protocol witness table for <> CRDTModelSyncManager<A>;
  v109[0] = a2;
  uint64_t v100 = (char *)sub_100081668(0, (unint64_t *)&qword_1002919A0);
  *(_OWORD *)(a7 + 16) = 0u;
  *(_OWORD *)(a7 + 32) = 0u;
  *(void *)(a7 + 4_Block_object_dispose(&STACK[0x3B0], 8) = 0;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v35, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v32);
  sub_1001EBA80();
  uint64_t v107 = _swiftEmptyArrayStorage;
  sub_1000AF658((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  *(void *)(a7 + 144) = sub_1001ECA00();
  sub_1001EB0B0();
  sub_1001EB0F0();
  uint64_t v100 = v29;
  sub_1001EB100();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v23, v88);
  *(unsigned char *)(a7 + 96) = v90;
  uint64_t v36 = v92;
  *(void *)(a7 + 120) = sub_100095BB0;
  *(void *)(a7 + 12_Block_object_dispose(&STACK[0x3B0], 8) = 0;
  uint64_t v37 = v97;
  *(void *)(a7 + 104) = v36;
  *(void *)(a7 + 112) = v37;
  uint64_t v38 = v37;
  sub_1001EC9E0();
  *(void *)(a7 + 136) = v108;
  uint64_t v97 = (void *)(a7 + 56);
  sub_1000AF9BC((uint64_t)v109, a7 + 56);
  uint64_t v106 = v109[0];
  sub_10007DC14(&qword_100291BB0);
  sub_1001EC9E0();
  uint64_t v39 = v104;
  sub_1001EC9E0();
  swift_release();
  uint64_t v40 = v95;
  *(void *)(a7 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_transactionProvider) = v95;
  uint64_t v41 = v89;
  sub_1000936F8(v39, v89, (uint64_t *)&unk_100291CA0);
  swift_allocObject();
  uint64_t v42 = v94;
  sub_1000936F8(v41, v94, (uint64_t *)&unk_100291CA0);
  swift_unknownObjectRetain();
  unint64_t v43 = sub_100090B34(v42);
  sub_1000816A4(v41, (uint64_t *)&unk_100291CA0);
  *(void *)(a7 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange) = v43;
  type metadata accessor for ObservableTransaction();
  uint64_t v44 = (void *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain();
  *(void *)(a7 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChangeObservableTransaction) = sub_10017800C(0xD000000000000038, 0x8000000100222890, v40, v44);
  *(unsigned char *)(a7 + 152) = 0;
  id v45 = *(id *)(a7 + 112);
  NSString v46 = sub_1001EC340();
  id v47 = [v45 integerForKey:v46];

  uint64_t v48 = sub_1001E3240((uint64_t)v47);
  if (v50)
  {
    unint64_t v52 = v96;
    uint64_t v51 = v101;
    v96[7](v101, 1, 1, v105);
  }
  else
  {
    uint64_t v51 = v101;
    sub_1001D1254(v48, v49, v101);
    unint64_t v52 = v96;
  }
  id v53 = *(id *)(a7 + 112);
  NSString v54 = sub_1001EC340();
  uint64_t v55 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))[v53 integerForKey:v54];

  uint64_t v56 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v57 = *(void (**)(char **, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56);
  uint64_t v58 = (uint64_t)v102;
  v57(v102, 1, 1, v56);
  uint64_t v59 = v98;
  sub_1000936F8(v51, v98, (uint64_t *)&unk_1002924C0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52[6])(v59, 1, v105) == 1)
  {
    sub_1000816A4(v59, (uint64_t *)&unk_1002924C0);
  }
  else
  {
    sub_1000816A4(v58, &qword_100291C78);
    unint64_t v60 = v52[4];
    uint64_t v96 = v55;
    Swift::Int v61 = v86;
    uint64_t v62 = v59;
    uint64_t v63 = v52;
    uint64_t v64 = v105;
    ((void (*)(char *, uint64_t, uint64_t))v60)(v86, v62, v105);
    uint64_t v65 = v64;
    unint64_t v52 = v63;
    ((void (*)(char **, char *, uint64_t))v60)(v102, v61, v65);
    uint64_t v58 = (uint64_t)v102;
    *(char **)((char *)v102 + *(int *)(v56 + 20)) = (char *)v96;
    v57((char **)v58, 0, 1, v56);
  }
  unint64_t v66 = v99;
  uint64_t v67 = v104;
  sub_1001D1644((uint64_t)v100, v99);
  uint64_t v68 = a7 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  sub_1000AE830(v67, a7 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state, type metadata accessor for ReadingHistoryModel);
  uint64_t v69 = (int *)type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_1000936F8(v58, v68 + v69[5], &qword_100291C78);
  uint64_t v70 = v105;
  ((void (*)(uint64_t, char *, uint64_t))v52[2])(v68 + v69[6], v103, v105);
  sub_1000936F8((uint64_t)v66, v68 + v69[7], &qword_100291C78);
  uint64_t v71 = *(void *)(a7 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange)
      + *(void *)(**(void **)(a7 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange) + 128);
  swift_beginAccess();
  *(void *)(v71 + _Block_object_dispose(&STACK[0x3B0], 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  uint64_t v72 = swift_allocObject();
  swift_weakInit();
  unint64_t v73 = v52;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_1000AED18;
  *(void *)(v74 + 24) = v72;
  swift_retain();
  swift_retain();
  swift_retain_n();
  sub_1000A456C(a7, (uint64_t)sub_1000AED20, v74);
  swift_release();
  swift_release();
  swift_release_n();
  swift_release();
  uint64_t v75 = *(void *)(a7 + 80);
  uint64_t v76 = *(void *)(a7 + 88);
  Swift::Int v77 = sub_100094758(v97, v75);
  unint64_t v102 = &v86;
  uint64_t v78 = v58;
  uint64_t v79 = *(void *)(v75 - 8);
  __chkstk_darwin(v77);
  uint64_t v81 = (char *)&v86 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v79 + 16))(v81);
  (*(void (**)(uint64_t, uint64_t))(v76 + 40))(v75, v76);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v81, v75);
  uint64_t v82 = swift_allocObject();
  swift_weakInit();
  uint64_t v83 = swift_retain();
  sub_1000A4274(v83, (uint64_t)sub_1000AED28, v82);
  swift_release();
  swift_release();
  swift_release();
  sub_1000816A4((uint64_t)v66, &qword_100291C78);
  sub_1000816A4(v78, &qword_100291C78);
  sub_1000816A4(v101, (uint64_t *)&unk_1002924C0);
  sub_1000816A4(v104, (uint64_t *)&unk_100291CA0);
  uint64_t v84 = v73[1];
  ((void (*)(char *, uint64_t))v84)(v103, v70);
  ((void (*)(char *, uint64_t))v84)(v100, v70);
  sub_1000947F0((uint64_t)v109);
  return a7;
}

uint64_t sub_1000AB030(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AB128(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AB21C(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v109 = a8;
  uint64_t v108 = a7;
  uint64_t v115 = a6;
  uint64_t v112 = a5;
  int v110 = a4;
  uint64_t v113 = a3;
  uint64_t v119 = (char *)a2;
  uint64_t v123 = a1;
  uint64_t v103 = a11;
  uint64_t v11 = sub_10007DC14(&qword_100291C78);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  unint64_t v117 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v124 = (char *)&v99 - v14;
  uint64_t v15 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v116 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v120 = (uint64_t)&v99 - v18;
  uint64_t v19 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v111 = (uint64_t)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v107 = (uint64_t)&v99 - v23;
  __chkstk_darwin(v22);
  uint64_t v121 = (uint64_t)&v99 - v24;
  uint64_t v106 = sub_1001EB180();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v104 = (char *)&v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1001EB0C0();
  uint64_t v114 = *(void *)(v118 - 8);
  uint64_t v26 = __chkstk_darwin(v118);
  uint64_t v100 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v122 = (char *)&v99 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v99 - v30;
  uint64_t v32 = sub_1001EC990();
  __chkstk_darwin(v32);
  uint64_t v33 = sub_1001EBAA0();
  __chkstk_darwin(v33 - 8);
  uint64_t v34 = sub_1001EC9C0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v99 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128[3] = a10;
  v128[4] = a11;
  unint64_t v102 = sub_1000B06D4(v128);
  uint64_t v101 = a10;
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v102, v119, v101);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  *(_OWORD *)(a9 + 16) = 0u;
  *(_OWORD *)(a9 + 32) = 0u;
  *(void *)(a9 + 4_Block_object_dispose(&STACK[0x3B0], 8) = 0;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v37, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v34);
  sub_1001EBA80();
  v125[0] = _swiftEmptyArrayStorage;
  sub_1000AF658((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  uint64_t v38 = v123;
  sub_1001ECC30();
  *(void *)(a9 + 144) = sub_1001ECA00();
  uint64_t v39 = v109;
  uint64_t v40 = v108;
  v108();
  uint64_t v41 = v104;
  sub_1001EB0F0();
  uint64_t v119 = v31;
  sub_1001EB100();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v41, v106);
  *(unsigned char *)(a9 + 96) = v110;
  *(void *)(a9 + 120) = v40;
  *(void *)(a9 + 12_Block_object_dispose(&STACK[0x3B0], 8) = v39;
  uint64_t v42 = v115;
  *(void *)(a9 + 104) = v112;
  *(void *)(a9 + 112) = v42;
  uint64_t v43 = v38[3];
  uint64_t v44 = v38[4];
  sub_100094758(v38, v43);
  id v45 = *(double (**)(uint64_t, uint64_t))(v44 + 8);
  swift_retain();
  NSString v46 = v42;
  *(double *)(a9 + 136) = v45(v43, v44);
  uint64_t v115 = (void *)(a9 + 56);
  sub_1000AF9BC((uint64_t)v128, a9 + 56);
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v103 + 40))(v101);
  uint64_t v48 = v121;
  (*(void (**)(uint64_t))(*(void *)v47 + 184))(v47);
  swift_release();
  uint64_t v49 = v113;
  *(void *)(a9 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_transactionProvider) = v113;
  uint64_t v50 = v107;
  sub_1000936F8(v48, v107, (uint64_t *)&unk_100291CA0);
  sub_10007DC14(&qword_100291BB0);
  swift_allocObject();
  uint64_t v51 = v111;
  sub_1000936F8(v50, v111, (uint64_t *)&unk_100291CA0);
  uint64_t v52 = v49;
  swift_unknownObjectRetain();
  id v53 = sub_100090B34(v51);
  sub_1000816A4(v50, (uint64_t *)&unk_100291CA0);
  *(void *)(a9 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange) = v53;
  type metadata accessor for ObservableTransaction();
  NSString v54 = (void *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain();
  *(void *)(a9 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChangeObservableTransaction) = sub_10017800C(0xD000000000000038, 0x8000000100222890, v52, v54);
  *(unsigned char *)(a9 + 152) = 0;
  id v55 = *(id *)(a9 + 112);
  NSString v56 = sub_1001EC340();
  id v57 = [v55 integerForKey:v56];

  uint64_t v58 = sub_1001E3240((uint64_t)v57);
  if (v60)
  {
    uint64_t v62 = v114;
    uint64_t v61 = v120;
    uint64_t v63 = v118;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(v120, 1, 1, v118);
  }
  else
  {
    uint64_t v61 = v120;
    sub_1001D1254(v58, v59, v120);
    uint64_t v62 = v114;
    uint64_t v63 = v118;
  }
  id v64 = *(id *)(a9 + 112);
  NSString v65 = sub_1001EC340();
  id v66 = [v64 integerForKey:v65];

  uint64_t v67 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56);
  uint64_t v69 = (uint64_t)v124;
  v68((uint64_t)v124, 1, 1, v67);
  uint64_t v70 = v116;
  sub_1000936F8(v61, v116, (uint64_t *)&unk_1002924C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v70, 1, v63) == 1)
  {
    sub_1000816A4(v70, (uint64_t *)&unk_1002924C0);
  }
  else
  {
    sub_1000816A4(v69, &qword_100291C78);
    uint64_t v71 = v63;
    uint64_t v72 = v70;
    uint64_t v73 = v62;
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    uint64_t v75 = v100;
    v74(v100, v72, v71);
    v74(v124, (uint64_t)v75, v71);
    uint64_t v62 = v73;
    uint64_t v63 = v71;
    uint64_t v69 = (uint64_t)v124;
    *(void *)&v124[*(int *)(v67 + 20)] = v66;
    v68(v69, 0, 1, v67);
  }
  uint64_t v76 = v117;
  uint64_t v77 = v121;
  sub_1001D1644((uint64_t)v119, v117);
  uint64_t v78 = a9 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state;
  sub_1000AE830(v77, a9 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore__state, type metadata accessor for ReadingHistoryModel);
  uint64_t v79 = (int *)type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_1000936F8(v69, v78 + v79[5], &qword_100291C78);
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v78 + v79[6], v122, v63);
  sub_1000936F8((uint64_t)v76, v78 + v79[7], &qword_100291C78);
  uint64_t v80 = *(void *)(a9 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange)
      + *(void *)(**(void **)(a9 + OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange) + 128);
  swift_beginAccess();
  *(void *)(v80 + _Block_object_dispose(&STACK[0x3B0], 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  uint64_t v81 = v62;
  uint64_t v82 = v123[3];
  uint64_t v83 = v123[4];
  sub_100094758(v123, v82);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v83 + 16))(v125, v82, v83);
  uint64_t v84 = v126;
  uint64_t v85 = v127;
  sub_100094758(v125, v126);
  uint64_t v86 = swift_allocObject();
  swift_weakInit();
  uint64_t v87 = *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v85 + 8);
  swift_retain();
  swift_retain();
  v87(a9, sub_1000AED18, v86, v84, v85);
  swift_release();
  swift_release_n();
  sub_1000947F0((uint64_t)v125);
  uint64_t v88 = *(void *)(a9 + 80);
  uint64_t v89 = *(void *)(a9 + 88);
  int v90 = sub_100094758(v115, v88);
  uint64_t v91 = *(void *)(v88 - 8);
  __chkstk_darwin(v90);
  uint64_t v93 = (char *)&v99 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v91 + 16))(v93);
  (*(void (**)(uint64_t, uint64_t))(v89 + 40))(v88, v89);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v88);
  uint64_t v94 = swift_allocObject();
  swift_weakInit();
  uint64_t v95 = swift_retain();
  sub_1000A4274(v95, (uint64_t)sub_1000AED28, v94);
  swift_release();
  swift_release();
  swift_release();
  sub_1000816A4((uint64_t)v76, &qword_100291C78);
  sub_1000816A4((uint64_t)v124, &qword_100291C78);
  sub_1000816A4(v120, (uint64_t *)&unk_1002924C0);
  sub_1000816A4(v121, (uint64_t *)&unk_100291CA0);
  uint64_t v96 = *(void (**)(char *, uint64_t))(v81 + 8);
  uint64_t v97 = v118;
  v96(v122, v118);
  v96(v119, v97);
  sub_1000947F0((uint64_t)v128);
  sub_1000947F0((uint64_t)v123);
  return a9;
}

uint64_t sub_1000ABFF0(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void *a6, void (*a7)(void), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v23 = a7;
  uint64_t v24 = a8;
  uint64_t v22 = a6;
  uint64_t v16 = *(void *)(a10 - 8);
  __chkstk_darwin(a9);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a2, a10);
  return sub_1000AB21C(a1, (uint64_t)v18, a3, a4, a5, v22, v23, v24, v19, a10, a11);
}

uint64_t sub_1000AC120()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = v7 + v5;
  swift_release();
  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  return _swift_deallocObject(v0, v8, v6);
}

void sub_1000AC214()
{
  uint64_t v1 = *(void *)(sub_1001EB0C0() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + v3) & ~v2);
  sub_10009E050(v4, (void (*)(char *, uint64_t, uint64_t, uint64_t))(v0 + v3), v5);
}

uint64_t sub_1000AC2A4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC2B4()
{
  return sub_100089448(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000AC2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000AC2CC()
{
  return swift_release();
}

uint64_t sub_1000AC2D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for ReadingHistoryDataStore.State(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_100291E18);
}

uint64_t sub_1000AC354()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC394()
{
  return sub_1000A65BC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000AC39C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC3AC()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000AC484()
{
  uint64_t v1 = *(void *)(sub_1001EB0C0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  Swift::Int v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_10009F684(v3, v0 + v2, v4);
}

uint64_t sub_1000AC514()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC524()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC564()
{
  return sub_1000A05E4(*(void *)(v0 + 16));
}

uint64_t sub_1000AC56C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC580()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC590@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A0D14(v1, a1);
}

uint64_t sub_1000AC5AC@<X0>(void *a1@<X8>)
{
  return sub_1000A0DEC(v1, a1);
}

uint64_t sub_1000AC5C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000A0FAC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000AC5E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AECA0(a1);
}

uint64_t sub_1000AC5FC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000AC63C()
{
  return sub_1000A36B8(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000AC648()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC658()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000AC690()
{
  return sub_1000A3B54(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000AC6BC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AC6CC@<X0>(char *a1@<X8>)
{
  return sub_1000A4174(a1);
}

uint64_t sub_1000AC6E8()
{
  return type metadata accessor for ReadingHistoryDataStore(0);
}

uint64_t type metadata accessor for ReadingHistoryDataStore(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100291CE0);
}

uint64_t sub_1000AC710(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000AC748()
{
  uint64_t result = type metadata accessor for ReadingHistoryDataStore.State(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingHistoryDataStore.Config(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryDataStore.Config(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistoryDataStore.Config()
{
  return &type metadata for ReadingHistoryDataStore.Config;
}

uint64_t *sub_1000AC8E4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10007DC14(&qword_100291BD0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for ReadingHistoryModel(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_10007DC14(&qword_100291BD8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
    uint64_t v13 = a3[5];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    uint64_t v32 = v17;
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_10007DC14(&qword_100291C78);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
      *(void *)&v14[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v22 = a3[6];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_1001EB0C0();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    uint64_t v27 = a3[7];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    if (v18(v29, 1, v16))
    {
      uint64_t v30 = sub_10007DC14(&qword_100291C78);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v26(v28, v29, v25);
      *(void *)&v28[*(int *)(v16 + 20)] = *(void *)&v29[*(int *)(v16 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_1000ACC30(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for ReadingHistoryModel(0) + 20);
  uint64_t v6 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    uint64_t v10 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
  }
  uint64_t v11 = a1 + a2[6];
  uint64_t v12 = sub_1001EB0C0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v15(v11, v12);
  uint64_t v13 = a1 + a2[7];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v13, 1, v8);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v13, v12);
  }
  return result;
}

uint64_t sub_1000ACE3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  uint64_t v30 = v16;
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_10007DC14(&qword_100291C78);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
    *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1001EB0C0();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  uint64_t v25 = a3[7];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  if (v17(v27, 1, v15))
  {
    uint64_t v28 = sub_10007DC14(&qword_100291C78);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v24((uint64_t)v26, (uint64_t)v27, v23);
    *(void *)&v26[*(int *)(v15 + 20)] = *(void *)&v27[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1000AD138(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[5];
  uint64_t v36 = a1;
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v17;
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      uint64_t v20 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v13, v14, v20);
      *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_1000AC2D4((uint64_t)v13, type metadata accessor for ReadingHistory.Streak);
LABEL_6:
    uint64_t v21 = sub_10007DC14(&qword_100291C78);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v33 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v13, v14, v33);
  *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = v36 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1001EB0C0();
  uint64_t v34 = *(void *)(v25 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24);
  v26(v23, v24, v25);
  uint64_t v27 = a3[7];
  uint64_t v28 = (char *)(v36 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  LODWORD(v23) = v35(v36 + v27, 1, v15);
  int v30 = v35((uint64_t)v29, 1, v15);
  if (!v23)
  {
    if (!v30)
    {
      v26((uint64_t)v28, (uint64_t)v29, v25);
      *(void *)&v28[*(int *)(v15 + 20)] = *(void *)&v29[*(int *)(v15 + 20)];
      return v36;
    }
    sub_1000AC2D4((uint64_t)v28, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_10007DC14(&qword_100291C78);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    return v36;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v28, v29, v25);
  *(void *)&v28[*(int *)(v15 + 20)] = *(void *)&v29[*(int *)(v15 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
  return v36;
}

uint64_t sub_1000AD56C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v16 = *(void *)(v15 - 8);
  int v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v29 = v16;
  if (v30(v14, 1, v15))
  {
    uint64_t v17 = sub_10007DC14(&qword_100291C78);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
    *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[6];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1001EB0C0();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  if (v30(v26, 1, v15))
  {
    uint64_t v27 = sub_10007DC14(&qword_100291C78);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v23((uint64_t)v25, (uint64_t)v26, v22);
    *(void *)&v25[*(int *)(v15 + 20)] = *(void *)&v26[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1000AD860(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[5];
  uint64_t v36 = a1;
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v17;
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      uint64_t v20 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v13, v14, v20);
      *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_1000AC2D4((uint64_t)v13, type metadata accessor for ReadingHistory.Streak);
LABEL_6:
    uint64_t v21 = sub_10007DC14(&qword_100291C78);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v33 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v13, v14, v33);
  *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = v36 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1001EB0C0();
  uint64_t v34 = *(void *)(v25 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 40);
  v26(v23, v24, v25);
  uint64_t v27 = a3[7];
  uint64_t v28 = (char *)(v36 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  LODWORD(v23) = v35(v36 + v27, 1, v15);
  int v30 = v35((uint64_t)v29, 1, v15);
  if (!v23)
  {
    if (!v30)
    {
      v26((uint64_t)v28, (uint64_t)v29, v25);
      *(void *)&v28[*(int *)(v15 + 20)] = *(void *)&v29[*(int *)(v15 + 20)];
      return v36;
    }
    sub_1000AC2D4((uint64_t)v28, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v31 = sub_10007DC14(&qword_100291C78);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    return v36;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v28, v29, v25);
  *(void *)&v28[*(int *)(v15 + 20)] = *(void *)&v29[*(int *)(v15 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
  return v36;
}

uint64_t sub_1000ADC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000ADCA0);
}

uint64_t sub_1000ADCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10007DC14(&qword_100291C78);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_1001EB0C0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);
  return v15(v17, a2, v16);
}

uint64_t sub_1000ADDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000ADE04);
}

uint64_t sub_1000ADE04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_10007DC14(&qword_100291C78);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_1001EB0C0();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);
  return v17(v19, a2, a2, v18);
}

void sub_1000ADF60()
{
  type metadata accessor for ReadingHistoryModel(319);
  if (v0 <= 0x3F)
  {
    sub_1000AE064();
    if (v1 <= 0x3F)
    {
      sub_1001EB0C0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000AE064()
{
  if (!qword_100291E28)
  {
    type metadata accessor for ReadingHistory.Streak(255);
    unint64_t v0 = sub_1001ECB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100291E28);
    }
  }
}

uint64_t sub_1000AE0BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AE1B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10007DC14(&qword_100291E70);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AE2C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_10007DC14(&qword_100291EB0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AE3D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AE52C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_10007DC14(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000AE638()
{
  return sub_1000A5154(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1000AE644()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AE654()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1000AE694()
{
  uint64_t v1 = *(void (**)(unsigned char *))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1000935F8(v0 + 32, (uint64_t)v4, &qword_100291ED8);
  return sub_1000A566C(v1, v2, (uint64_t)v4);
}

uint64_t sub_1000AE6F0()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AE72C(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  sub_1000935F8(a1, (uint64_t)v8, &qword_100291ED8);
  return sub_1000A6150((uint64_t)v8, v2, v3, v4, v5, v6);
}

uint64_t sub_1000AE7A0()
{
  swift_release();
  return _swift_deallocObject(v0, 74, 7);
}

uint64_t sub_1000AE7D8()
{
  uint64_t v1 = *(uint64_t (**)(_OWORD *))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 64);
  char v3 = *(unsigned char *)(v0 + 72);
  char v4 = *(unsigned char *)(v0 + 73);
  long long v5 = *(_OWORD *)(v0 + 48);
  v7[0] = *(_OWORD *)(v0 + 32);
  v7[1] = v5;
  uint64_t v8 = v2;
  char v9 = v3;
  char v10 = v4;
  return v1(v7);
}

uint64_t sub_1000AE830(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000AE898()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AE8D4()
{
  return sub_1000A4C18(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000AE8E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AE8F0()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AE928()
{
  uint64_t v1 = *(void *)(sub_10007DC14(&qword_100291F18) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v11 = *(void *)(v1 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();

  uint64_t v5 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v6 = v0 + v3 + *(int *)(v5 + 20);
  uint64_t v7 = sub_1001EC210();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    char v9 = (id *)(v0 + v3 + *(int *)(sub_10007DC14((uint64_t *)&unk_100291F20) + 48));

    v8((uint64_t)v9 + *(int *)(v5 + 20), v7);
  }
  swift_release();
  return _swift_deallocObject(v0, ((v11 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1000AEABC()
{
  return sub_1000B0004(&qword_100291F18);
}

uint64_t sub_1000AEACC(uint64_t a1)
{
  return sub_1000B00E8(a1, sub_1000A5C60);
}

uint64_t sub_1000AEAE4()
{
  uint64_t v1 = *(void *)(sub_10007DC14(&qword_100291F18) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v11 = *(void *)(v1 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();

  uint64_t v5 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v6 = v0 + v3 + *(int *)(v5 + 20);
  uint64_t v7 = sub_1001EC210();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    char v9 = (id *)(v0 + v3 + *(int *)(sub_10007DC14((uint64_t *)&unk_100291F20) + 48));

    v8((uint64_t)v9 + *(int *)(v5 + 20), v7);
  }
  return _swift_deallocObject(v0, v3 + v11, v2 | 7);
}

uint64_t sub_1000AEC5C()
{
  return sub_1000B0670(&qword_100291F18);
}

double sub_1000AEC68@<D0>(uint64_t a1@<X8>)
{
  return sub_100118E44(v1, a1);
}

uint64_t sub_1000AEC84@<X0>(void *a1@<X8>)
{
  return sub_1000BF320(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000AECA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  return sub_1000936F8(v3, a1, (uint64_t *)&unk_100291CA0);
}

uint64_t sub_1000AED18(uint64_t a1)
{
  return sub_100095E14(a1);
}

uint64_t sub_1000AED20(uint64_t a1)
{
  return sub_10017575C(a1, *(uint64_t (**)(unsigned char *))(v1 + 16));
}

uint64_t sub_1000AED28(uint64_t a1)
{
  return sub_1000961B4(a1);
}

uint64_t sub_1000AED30()
{
  uint64_t v1 = *(void *)(sub_10007DC14(&qword_100291F40) - 8);
  uint64_t v40 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v39 = *(void *)(v1 + 64);
  uint64_t v41 = v0;
  uint64_t v2 = v0 + ((v40 + 16) & ~v40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = sub_10007DC14(&qword_100291BD0);
  uint64_t v37 = (void (**)(uint64_t))(*(void *)(v36 - 8) + 8);
  uint64_t v38 = *v37;
  (*v37)(v2);
  uint64_t v3 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_10007DC14(&qword_100291BD8);
  uint64_t v6 = *(void (**)(uint64_t))(*(void *)(v5 - 8) + 8);
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  v6(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v10 = v2 + *(int *)(v9 + 48);
  uint64_t v11 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  unsigned int v13 = v12(v10, 2, v11);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = v12;
    uint64_t v14 = v8;
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = (void (*)(uint64_t, uint64_t))v6;
    uint64_t v15 = v9;
    uint64_t v16 = v2 + *(int *)(v9 + 52);
    uint64_t v17 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    if (!v34(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + *(int *)(v17 + 24);
      uint64_t v19 = sub_1001EB0C0();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
    }
    uint64_t v21 = v2 + *(int *)(sub_10007DC14(&qword_100291F48) + 48);
    ((void (*)(uint64_t, uint64_t))v38)(v21, v36);
    v43(v21 + *(int *)(v3 + 20), v14);
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 + *(int *)(v15 + 48);
    if (!v35(v22, 2, v11))
    {
      ((void (*)(uint64_t, uint64_t))v38)(v22, v36);
      v43(v22 + *(int *)(v3 + 20), v14);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v21 + *(int *)(v15 + 52);
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 16) & ~v40;
    if (!v34(v23, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v17 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v2 + *(int *)(v9 + 52);
    uint64_t v29 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 16) & ~v40;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v29 + 24);
LABEL_15:
      uint64_t v30 = v23 + v28;
      uint64_t v31 = sub_1001EB0C0();
      uint64_t v32 = *(void *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
    }
  }
  swift_release();
  return _swift_deallocObject(v24, ((v27 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v25 | 7);
}

uint64_t sub_1000AF290()
{
  uint64_t v1 = *(void *)(sub_10007DC14(&qword_100291F40) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_10009CCD0(v0 + v2, v3);
}

uint64_t sub_1000AF320()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AF330(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = sub_10007DC14((uint64_t *)&unk_100291CA0);
  *(unsigned char *)(a1 + *(int *)(result + 44)) = *(unsigned char *)(v3 + *(int *)(result + 44));
  return result;
}

uint64_t sub_1000AF36C()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000AF3A4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AF3B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10007DC14(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000AF418(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000AF480()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AF490()
{
  uint64_t v1 = *(void *)(sub_10007DC14((uint64_t *)&unk_1002924C0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1000AF5C4()
{
  uint64_t v1 = *(void *)(sub_10007DC14((uint64_t *)&unk_1002924C0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1000957C4(v3, v0 + v2, v4);
}

uint64_t sub_1000AF658(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000AF6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistoryModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AF704(uint64_t *a1)
{
  return sub_1000987C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000AF720(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000AF788(uint64_t *a1)
{
  return sub_10009EA00(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1000AF7A8()
{
  swift_release();
  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1000AF7E0()
{
  return sub_10009B748(v0 + 16, *(void *)(v0 + 64), *(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v0 + 72));
}

uint64_t sub_1000AF7EC()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1000AF7FC()
{
  unint64_t result = qword_100292020;
  if (!qword_100292020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292020);
  }
  return result;
}

uint64_t sub_1000AF850()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1000AF910()
{
  uint64_t v1 = *(void *)(sub_1001EB0C0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = *(void *)(v0 + v3);
  unint64_t v6 = (uint64_t *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  return sub_1000A2EC4(v4, v5, v7, v8);
}

uint64_t sub_1000AF9AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AF9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000AFA24()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000AFA6C()
{
  return sub_1000A46E8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000AFA78()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AFA88()
{
  uint64_t v1 = *(void *)(sub_10007DC14(&qword_100291F40) - 8);
  uint64_t v40 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v39 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v41 = v0;
  uint64_t v2 = v0 + ((v40 + 32) & ~v40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = sub_10007DC14(&qword_100291BD0);
  uint64_t v37 = (void (**)(uint64_t))(*(void *)(v36 - 8) + 8);
  uint64_t v38 = *v37;
  (*v37)(v2);
  uint64_t v3 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_10007DC14(&qword_100291BD8);
  unint64_t v6 = *(void (**)(uint64_t))(*(void *)(v5 - 8) + 8);
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  v6(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v10 = v2 + *(int *)(v9 + 48);
  uint64_t v11 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  unsigned int v13 = v12(v10, 2, v11);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = v12;
    uint64_t v14 = v8;
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = (void (*)(uint64_t, uint64_t))v6;
    uint64_t v15 = v9;
    uint64_t v16 = v2 + *(int *)(v9 + 52);
    uint64_t v17 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    if (!v34(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + *(int *)(v17 + 24);
      uint64_t v19 = sub_1001EB0C0();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
    }
    uint64_t v21 = v2 + *(int *)(sub_10007DC14(&qword_100291F48) + 48);
    ((void (*)(uint64_t, uint64_t))v38)(v21, v36);
    v43(v21 + *(int *)(v3 + 20), v14);
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 + *(int *)(v15 + 48);
    if (!v35(v22, 2, v11))
    {
      ((void (*)(uint64_t, uint64_t))v38)(v22, v36);
      v43(v22 + *(int *)(v3 + 20), v14);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v21 + *(int *)(v15 + 52);
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 32) & ~v40;
    if (!v34(v23, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v17 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v2 + *(int *)(v9 + 52);
    uint64_t v29 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 32) & ~v40;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v29 + 24);
LABEL_15:
      uint64_t v30 = v23 + v28;
      uint64_t v31 = sub_1001EB0C0();
      uint64_t v32 = *(void *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
    }
  }
  swift_release();
  return _swift_deallocObject(v24, ((v27 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v25 | 7);
}

uint64_t sub_1000AFFF8()
{
  return sub_1000B0004(&qword_100291F40);
}

uint64_t sub_1000B0004(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_10007DC14(a1) - 8);
  return sub_1000A5570(*(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t sub_1000B0088()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000B00D0(uint64_t a1)
{
  return sub_1000B00E8(a1, sub_1000A5770);
}

uint64_t sub_1000B00E8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1000B0100(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B0110()
{
  uint64_t v1 = *(void *)(sub_10007DC14(&qword_100291F40) - 8);
  uint64_t v40 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v39 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v41 = v0;
  uint64_t v2 = v0 + ((v40 + 32) & ~v40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = sub_10007DC14(&qword_100291BD0);
  uint64_t v37 = (void (**)(uint64_t))(*(void *)(v36 - 8) + 8);
  uint64_t v38 = *v37;
  (*v37)(v2);
  uint64_t v3 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_10007DC14(&qword_100291BD8);
  unint64_t v6 = *(void (**)(uint64_t))(*(void *)(v5 - 8) + 8);
  uint64_t v7 = v4;
  uint64_t v8 = v5;
  v6(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v10 = v2 + *(int *)(v9 + 48);
  uint64_t v11 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  unsigned int v13 = v12(v10, 2, v11);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = v12;
    uint64_t v14 = v8;
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = (void (*)(uint64_t, uint64_t))v6;
    uint64_t v15 = v9;
    uint64_t v16 = v2 + *(int *)(v9 + 52);
    uint64_t v17 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    if (!v34(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + *(int *)(v17 + 24);
      uint64_t v19 = sub_1001EB0C0();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
    }
    uint64_t v21 = v2 + *(int *)(sub_10007DC14(&qword_100291F48) + 48);
    ((void (*)(uint64_t, uint64_t))v38)(v21, v36);
    v43(v21 + *(int *)(v3 + 20), v14);
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 + *(int *)(v15 + 48);
    if (!v35(v22, 2, v11))
    {
      ((void (*)(uint64_t, uint64_t))v38)(v22, v36);
      v43(v22 + *(int *)(v3 + 20), v14);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v21 + *(int *)(v15 + 52);
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 32) & ~v40;
    if (!v34(v23, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v17 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v13)
    {
      ((void (*)(uint64_t, uint64_t))v38)(v10, v36);
      ((void (*)(uint64_t, uint64_t))v6)(v10 + *(int *)(v3 + 20), v8);
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v2 + *(int *)(v9 + 52);
    uint64_t v29 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v27 = v39;
    uint64_t v26 = (v40 + 32) & ~v40;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v28 = *(int *)(v29 + 24);
LABEL_15:
      uint64_t v30 = v23 + v28;
      uint64_t v31 = sub_1001EB0C0();
      uint64_t v32 = *(void *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
    }
  }
  return _swift_deallocObject(v24, v26 + v27, v25 | 7);
}

uint64_t sub_1000B0664()
{
  return sub_1000B0670(&qword_100291F40);
}

uint64_t sub_1000B0670(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_10007DC14(a1) - 8);
  return (*(uint64_t (**)(unint64_t))(v1 + 16))(v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t *sub_1000B06D4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1000B07FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000AC5C8(a1);
}

void *initializeBufferWithCopyOfBuffer for TimeIntervalParseError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for TimeIntervalParseError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for TimeIntervalParseError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TimeIntervalParseError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeIntervalParseError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TimeIntervalParseError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeIntervalParseError()
{
  return &type metadata for TimeIntervalParseError;
}

uint64_t sub_1000B095C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1001ED080();
  }
}

uint64_t sub_1000B0990()
{
  uint64_t v0 = sub_1001EB250();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EB270();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1001EB1F0();
  sub_10008176C(v5, qword_100292040);
  sub_10007CFF8(v5, (uint64_t)qword_100292040);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for MClientIdentifier.booksWidget(_:), v0);
  id v6 = [self sharedProvider];
  id v7 = [v6 activeStoreAccount];

  sub_1001EB260();
  return sub_1001EB1E0();
}

uint64_t BDSBookWidgetInfoManager.fetch(adamIDs:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_100292060 + dword_100292060);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000B2524;
  return v5(a1);
}

void sub_1000B0BD0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v35 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v34 = v2;
  if (!v5) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v6 << 6);
  while (1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    unint64_t v12 = *(void **)(*(void *)(a1 + 56) + 8 * v8);
    uint64_t v13 = swift_dynamicCastObjCProtocolConditional();
    if (v13)
    {
      uint64_t v18 = v13;
      unint64_t v19 = *((void *)&_swiftEmptyDictionarySingleton + 2);
      if (*((void *)&_swiftEmptyDictionarySingleton + 3) <= v19)
      {
        uint64_t v21 = v19 + 1;
        id v22 = v12;
        swift_bridgeObjectRetain();
        sub_1001A99A4(v21, 1);
      }
      else
      {
        id v20 = v12;
        swift_bridgeObjectRetain();
      }
      sub_1001ED170();
      sub_1001EC440();
      Swift::Int v23 = sub_1001ED1A0();
      uint64_t v24 = (char *)&_swiftEmptyDictionarySingleton + 64;
      uint64_t v25 = -1 << *((unsigned char *)&_swiftEmptyDictionarySingleton + 32);
      unint64_t v26 = v23 & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*((void *)&_swiftEmptyDictionarySingleton + (v26 >> 6) + 8)) == 0)
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v25) >> 6;
        uint64_t v2 = v34;
        while (++v27 != v30 || (v29 & 1) == 0)
        {
          BOOL v31 = v27 == v30;
          if (v27 == v30) {
            unint64_t v27 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)&v24[8 * v27];
          if (v32 != -1)
          {
            unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*((void *)&_swiftEmptyDictionarySingleton + (v26 >> 6) + 8))) | v26 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v2 = v34;
LABEL_37:
      *(void *)&v24[(v28 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v28;
      uint64_t v33 = (void *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + 16 * v28);
      *uint64_t v33 = v11;
      v33[1] = v10;
      *(void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 8 * v2_Block_object_dispose(&STACK[0x3B0], 8) = v18;
      ++*((void *)&_swiftEmptyDictionarySingleton + 2);

      if (v5) {
        goto LABEL_5;
      }
    }
    else if (v5)
    {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v35) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v14);
    int64_t v16 = v6 + 1;
    if (!v15)
    {
      int64_t v16 = v6 + 2;
      if (v6 + 2 >= v35) {
        goto LABEL_39;
      }
      unint64_t v15 = *(void *)(v2 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v6 + 3;
        if (v6 + 3 >= v35) {
          goto LABEL_39;
        }
        unint64_t v15 = *(void *)(v2 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v6 + 4;
          if (v6 + 4 >= v35) {
            goto LABEL_39;
          }
          unint64_t v15 = *(void *)(v2 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v8 = __clz(__rbit64(v15)) + (v16 << 6);
    int64_t v6 = v16;
  }
  int64_t v17 = v6 + 5;
  if (v6 + 5 >= v35)
  {
LABEL_39:
    sub_1000B251C();
    return;
  }
  unint64_t v15 = *(void *)(v2 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v6 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v35) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1000B1084(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_1001EC5E0();
  void v3[4] = v5;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&dword_100292060 + dword_100292060);
  id v6 = a3;
  unint64_t v7 = (void *)swift_task_alloc();
  void v3[5] = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_1000B1168;
  return v9(v5);
}

uint64_t sub_1000B1168()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_1001EAE50();
    swift_errorRelease();
    Class isa = 0;
    unint64_t v8 = (void *)v6;
  }
  else
  {
    sub_10007DC14(&qword_1002920F0);
    Class isa = sub_1001EC250().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    unint64_t v8 = isa;
  }
  uint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  ((void (**)(void, Class, uint64_t))v9)[2](v9, isa, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t BDSBookWidgetInfoManager.fetch(bookAssets:audiobookAssets:)(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100292070 + dword_100292070);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1000B13E4;
  return v7(a1, a2);
}

uint64_t sub_1000B13E4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1000B1668(int a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_1001EC5E0();
  void v4[4] = v6;
  uint64_t v7 = sub_1001EC5E0();
  void v4[5] = v7;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100292070 + dword_100292070);
  id v8 = a4;
  uint64_t v9 = (void *)swift_task_alloc();
  void v4[6] = v9;
  void *v9 = v4;
  v9[1] = sub_1000B1770;
  return v11(v6, v7);
}

uint64_t sub_1000B1770()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_1001EAE50();
    swift_errorRelease();
    Class isa = 0;
    id v8 = (void *)v6;
  }
  else
  {
    sub_10007DC14(&qword_1002920F0);
    Class isa = sub_1001EC250().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    id v8 = isa;
  }
  uint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  ((void (**)(void, Class, uint64_t))v9)[2](v9, isa, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t sub_1000B1954(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1001EB200();
  v1[3] = v2;
  void v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_1000B1A14, 0, 0);
}

uint64_t sub_1000B1A14()
{
  sub_1001EB210();
  if (qword_1002910C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1001EB1F0();
  sub_10007CFF8(v1, (uint64_t)qword_100292040);
  unint64_t v2 = sub_100121230((uint64_t)&off_100262248);
  v0[6] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000B1B40;
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[2];
  return MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)(v5, 0, 0, v2, 150, v4);
}

uint64_t sub_1000B1B40(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1000B1D3C;
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    uint64_t v5 = sub_1000B1C8C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000B1C8C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_1000B0BD0(v0[9]);
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_1000B1D3C()
{
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000B1DBC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_1001EB200();
  v2[4] = v3;
  void v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_1000B1E7C, 0, 0);
}

uint64_t sub_1000B1E7C()
{
  sub_1001EB210();
  if (qword_1002910C0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = sub_1001EB1F0();
  sub_10007CFF8(v3, (uint64_t)qword_100292040);
  unint64_t v4 = sub_100121230((uint64_t)&off_100262288);
  v0[7] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  void *v5 = v0;
  v5[1] = sub_1000B1FB8;
  uint64_t v6 = v0[6];
  return MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)(v1, v2, 0, 0, v4, 150, v6);
}

uint64_t sub_1000B1FB8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1000B21B4;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_1000B2104;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000B2104()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  unint64_t v4 = sub_10016C328(v0[10]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(unint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_1000B21B4()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000B2234()
{
  _Block_release(*(const void **)(v0 + 32));
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000B2284()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  unint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100093EB4;
  uint64_t v7 = (uint64_t (*)(int, int, void *, void *))((char *)&dword_100292080 + dword_100292080);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1000B234C()
{
  _Block_release(*(const void **)(v0 + 24));
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000B2394()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  unint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1002920F8 + dword_1002920F8);
  return v6(v2, v3, v4);
}

uint64_t sub_1000B2450(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100093200;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_100294270 + dword_100294270);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1000B251C()
{
  return swift_release();
}

id static OS_os_log.crdtModelSync.getter()
{
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_100292120;
  return v0;
}

uint64_t sub_1000B2584()
{
  sub_1000B25F0();
  uint64_t result = sub_1001ECB40();
  qword_100292120 = result;
  return result;
}

unint64_t sub_1000B25F0()
{
  unint64_t result = qword_100291EE0;
  if (!qword_100291EE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100291EE0);
  }
  return result;
}

uint64_t CRDTModelRevisionInfo.changeToken.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t CRDTModelRevisionInfo.description.getter()
{
  uint64_t v1 = 0x296C696E28;
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  if (v0[1])
  {
    uint64_t v5 = *v0;
    uint64_t v6 = (void *)v0[1];
  }
  else
  {
    uint64_t v6 = (void *)0xE500000000000000;
    uint64_t v5 = 0x296C696E28;
  }
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = v5;
  v16._object = v6;
  sub_1001EC490(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 8251;
  v17._object = (void *)0xE200000000000000;
  sub_1001EC490(v17);
  if (v0[3])
  {
    uint64_t v7 = v0[2];
    uint64_t v8 = (void *)v0[3];
  }
  else
  {
    uint64_t v8 = (void *)0xE500000000000000;
    uint64_t v7 = 0x296C696E28;
  }
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v7;
  v18._object = v8;
  sub_1001EC490(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 8251;
  v19._object = (void *)0xE200000000000000;
  sub_1001EC490(v19);
  uint64_t v9 = type metadata accessor for CRDTModelRevisionInfo();
  sub_1000B2884((uint64_t)v0 + *(int *)(v9 + 24), (uint64_t)v4);
  uint64_t v10 = sub_1001EB0C0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) == 1)
  {
    sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_1002924C0);
    uint64_t v12 = (void *)0xE500000000000000;
  }
  else
  {
    uint64_t v1 = sub_1001EB040();
    uint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  v20._countAndFlagsBits = v1;
  v20._object = v12;
  sub_1001EC490(v20);
  swift_bridgeObjectRelease();
  return v15[0];
}

uint64_t type metadata accessor for CRDTModelRevisionInfo()
{
  uint64_t result = qword_1002921A8;
  if (!qword_1002921A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B2884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_1000B28F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_1000B2904()
{
  Swift::UInt v1 = *v0;
  sub_1001ED170();
  sub_1001ED180(v1);
  return sub_1001ED1A0();
}

void sub_1000B294C()
{
  sub_1001ED180(*v0);
}

Swift::Int sub_1000B2978()
{
  Swift::UInt v1 = *v0;
  sub_1001ED170();
  sub_1001ED180(v1);
  return sub_1001ED1A0();
}

uint64_t sub_1000B29BC()
{
  unint64_t v1 = 0x684364726F636572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F697369766572;
  }
}

uint64_t sub_1000B2A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B42D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000B2A58(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1000B2A64(uint64_t a1)
{
  unint64_t v2 = sub_1000B3424();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B2AA0(uint64_t a1)
{
  unint64_t v2 = sub_1000B3424();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CRDTModelRevisionInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100292128);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1000B3424();
  sub_1001ED1F0();
  v8[15] = 0;
  sub_1001ECFB0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1001ECFB0();
    type metadata accessor for CRDTModelRevisionInfo();
    v8[13] = 2;
    sub_1001EB0C0();
    sub_1000B4468(&qword_100292138);
    sub_1001ECFD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CRDTModelRevisionInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100292140);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRDTModelRevisionInfo();
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100094758(a1, a1[3]);
  sub_1000B3424();
  sub_1001ED1D0();
  if (v2) {
    return sub_1000947F0((uint64_t)a1);
  }
  uint64_t v19 = v10;
  uint64_t v13 = v21;
  char v25 = 0;
  uint64_t v14 = (uint64_t)v12;
  *uint64_t v12 = sub_1001ECF30();
  v12[1] = v15;
  char v24 = 1;
  _DWORD v12[2] = sub_1001ECF30();
  v12[3] = v16;
  sub_1001EB0C0();
  char v23 = 2;
  sub_1000B4468(&qword_100292148);
  uint64_t v17 = v22;
  sub_1001ECF50();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v17);
  sub_1000B3478((uint64_t)v6, v14 + *(int *)(v19 + 24));
  sub_1000B34E0(v14, v20);
  sub_1000947F0((uint64_t)a1);
  return sub_1000B3544(v14);
}

uint64_t sub_1000B2FB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CRDTModelRevisionInfo.init(from:)(a1, a2);
}

uint64_t sub_1000B2FCC(void *a1)
{
  return CRDTModelRevisionInfo.encode(to:)(a1);
}

BOOL _s14bookdatastored21CRDTModelRevisionInfoV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100292208);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v38 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v21) {
    return 0;
  }
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_1001ED080(), BOOL result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    uint64_t v24 = a1[3];
    uint64_t v25 = a2[3];
    if (v24)
    {
      if (!v25) {
        return 0;
      }
      if (a1[2] != a2[2] || v24 != v25)
      {
        char v26 = sub_1001ED080();
        BOOL result = 0;
        if ((v26 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v25)
    {
      return 0;
    }
    uint64_t v39 = v7;
    uint64_t v27 = v4;
    uint64_t v28 = v5;
    uint64_t v29 = type metadata accessor for CRDTModelRevisionInfo();
    sub_1000B2884((uint64_t)a1 + *(int *)(v29 + 24), (uint64_t)v19);
    uint64_t v30 = *(int *)(v29 + 24);
    uint64_t v31 = v28;
    uint64_t v32 = v27;
    sub_1000B2884((uint64_t)a2 + v30, (uint64_t)v17);
    uint64_t v33 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1000B2884((uint64_t)v19, (uint64_t)v10);
    sub_1000B2884((uint64_t)v17, v33);
    uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
    if (v34((uint64_t)v10, 1, v27) == 1)
    {
      sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_1002924C0);
      sub_1000816A4((uint64_t)v19, (uint64_t *)&unk_1002924C0);
      if (v34(v33, 1, v27) == 1)
      {
        sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_1002924C0);
        return 1;
      }
      goto LABEL_20;
    }
    sub_1000B2884((uint64_t)v10, (uint64_t)v14);
    if (v34(v33, 1, v27) == 1)
    {
      sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_1002924C0);
      sub_1000816A4((uint64_t)v19, (uint64_t *)&unk_1002924C0);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v27);
LABEL_20:
      sub_1000816A4((uint64_t)v10, &qword_100292208);
      return 0;
    }
    int64_t v35 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v39, v33, v32);
    sub_1000B4468(&qword_100291250);
    char v36 = sub_1001EC330();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
    v37(v35, v32);
    sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_1002924C0);
    sub_1000816A4((uint64_t)v19, (uint64_t *)&unk_1002924C0);
    v37(v14, v32);
    sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_1002924C0);
    return (v36 & 1) != 0;
  }
  return result;
}

unint64_t sub_1000B3424()
{
  unint64_t result = qword_100292130;
  if (!qword_100292130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292130);
  }
  return result;
}

uint64_t sub_1000B3478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B34E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B3544(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for CRDTModelRevisionInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1001EB0C0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_10007DC14((uint64_t *)&unk_1002924C0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for CRDTModelRevisionInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for CRDTModelRevisionInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB0C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10007DC14((uint64_t *)&unk_1002924C0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithCopy for CRDTModelRevisionInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB0C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10007DC14((uint64_t *)&unk_1002924C0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for CRDTModelRevisionInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001EB0C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_10007DC14((uint64_t *)&unk_1002924C0);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithTake for CRDTModelRevisionInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1001EB0C0();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_10007DC14((uint64_t *)&unk_1002924C0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRDTModelRevisionInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B3DB8);
}

uint64_t sub_1000B3DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002924C0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for CRDTModelRevisionInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B3E8C);
}

uint64_t sub_1000B3E8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_10007DC14((uint64_t *)&unk_1002924C0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000B3F38()
{
  sub_1000B3FD0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000B3FD0()
{
  if (!qword_1002921B8)
  {
    sub_1001EB0C0();
    unint64_t v0 = sub_1001ECB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002921B8);
    }
  }
}

void *sub_1000B4028()
{
  return &protocol witness table for String;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.StateChange.ChangeOrigin(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRDTModelRevisionInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B4190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000B41B8(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRDTModelRevisionInfo.CodingKeys()
{
  return &type metadata for CRDTModelRevisionInfo.CodingKeys;
}

unint64_t sub_1000B41D4()
{
  unint64_t result = qword_1002921F0;
  if (!qword_1002921F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002921F0);
  }
  return result;
}

unint64_t sub_1000B422C()
{
  unint64_t result = qword_1002921F8;
  if (!qword_1002921F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002921F8);
  }
  return result;
}

unint64_t sub_1000B4284()
{
  unint64_t result = qword_100292200;
  if (!qword_100292200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292200);
  }
  return result;
}

uint64_t sub_1000B42D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697369766572 && a2 == 0xEC000000746E6948;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x684364726F636572 && a2 == 0xEF67615465676E61 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100222DC0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000B4468(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001EB0C0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B44AC()
{
  id v0 = [self standardUserDefaults];
  uint64_t result = sub_100081668(0, (unint64_t *)&unk_100292360);
  qword_100292228 = result;
  unk_100292230 = &protocol witness table for NSUserDefaults;
  qword_100292210 = (uint64_t)v0;
  return result;
}

uint64_t sub_1000B451C()
{
  id v0 = [self defaultStore];
  uint64_t result = sub_100081668(0, &qword_100292358);
  qword_100292250 = result;
  unk_100292258 = &protocol witness table for NSUbiquitousKeyValueStore;
  qword_100292238 = (uint64_t)v0;
  return result;
}

id ReadingGoalsService.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = qword_1002910D0;
  int v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  sub_1000AF9BC((uint64_t)&qword_100292210, (uint64_t)v9);
  if (qword_1002910D8 != -1) {
    swift_once();
  }
  sub_1000AF9BC((uint64_t)&qword_100292238, (uint64_t)v8);
  type metadata accessor for ReadingGoalsDataStore();
  swift_allocObject();
  *(void *)&v3[OBJC_IVAR___BDSReadingGoalsService_goalsDataStore] = ReadingGoalsDataStore.init(localStore:syncStore:)(v9, v8);
  type metadata accessor for ReadingGoalsController();
  unsigned int v4 = (void *)swift_allocObject();
  uint64_t v5 = swift_retain();
  *(void *)&v3[OBJC_IVAR___BDSReadingGoalsService_goalsController] = sub_1000B617C(v5, v4);

  v7.receiver = v3;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "init");
}

uint64_t ReadingGoalsService.changeBooksFinishedGoal(to:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1000B4710, 0, 0);
}

uint64_t sub_1000B4710()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  Swift::Int v1 = *(void *)(v0 + 16);
  uint64_t v2 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100215320;
  *(void *)(v3 + 56) = &type metadata for Int;
  *(void *)(v3 + 64) = &protocol witness table for Int;
  *(void *)(v3 + 32) = v1;
  id v4 = v2;
  sub_1001EB530();
  swift_bridgeObjectRelease();

  ReadingGoalsController.changeBooksFinishedGoal(to:)(v1);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(1);
}

uint64_t sub_1000B49C8(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  void v3[4] = _Block_copy(aBlock);
  id v5 = a3;
  return _swift_task_switch(sub_1000B4A44, 0, 0);
}

uint64_t sub_1000B4A44()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[3];
  Swift::Int v1 = (void (**)(void, void))v0[4];
  Swift::Int v3 = v0[2];
  id v4 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100215320;
  *(void *)(v5 + 56) = &type metadata for Int;
  *(void *)(v5 + 64) = &protocol witness table for Int;
  *(void *)(v5 + 32) = v3;
  id v6 = v4;
  sub_1001EB530();
  swift_bridgeObjectRelease();

  ReadingGoalsController.changeBooksFinishedGoal(to:)(v3);
  v1[2](v1, 1);
  _Block_release(v1);
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t ReadingGoalsService.changeDailyGoal(to:)(double a1)
{
  *(void *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  return _swift_task_switch(sub_1000B4BD0, 0, 0);
}

uint64_t sub_1000B4BD0()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  Swift::Double v1 = *(double *)(v0 + 16);
  uint64_t v2 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100215320;
  *(void *)(v3 + 56) = &type metadata for Double;
  *(void *)(v3 + 64) = &protocol witness table for Double;
  *(Swift::Double *)(v3 + 32) = v1;
  id v4 = v2;
  sub_1001EB530();
  swift_bridgeObjectRelease();

  ReadingGoalsController.changeDailyGoal(to:)(v1);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(1);
}

uint64_t sub_1000B4E8C(const void *a1, void *a2, double a3)
{
  *(void *)(v3 + 24) = a2;
  *(double *)(v3 + 16) = a3;
  *(void *)(v3 + 32) = _Block_copy(a1);
  id v5 = a2;
  return _swift_task_switch(sub_1000B4F08, 0, 0);
}

uint64_t sub_1000B4F08()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)*((void *)v0 + 3);
  Swift::Double v1 = (void (**)(void, void))*((void *)v0 + 4);
  Swift::Double v3 = v0[2];
  id v4 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100215320;
  *(void *)(v5 + 56) = &type metadata for Double;
  *(void *)(v5 + 64) = &protocol witness table for Double;
  *(Swift::Double *)(v5 + 32) = v3;
  id v6 = v4;
  sub_1001EB530();
  swift_bridgeObjectRelease();

  ReadingGoalsController.changeDailyGoal(to:)(v3);
  v1[2](v1, 1);
  _Block_release(v1);
  uint64_t v7 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v7();
}

uint64_t ReadingGoalsService.clearData()()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1000B5088, 0, 0);
}

uint64_t sub_1000B5088()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_100293A68;
  sub_1001EB530();

  ReadingGoalsController.clearData()();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

uint64_t sub_1000B52E0(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_1000B5358, 0, 0);
}

uint64_t sub_1000B5358()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[2];
  id v1 = (void (**)(void, void))v0[3];
  id v3 = (id)qword_100293A68;
  sub_1001EB530();

  ReadingGoalsController.clearData()();
  v1[2](v1, 1);
  _Block_release(v1);
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t ReadingGoalsService.clearLocalCachedData()()
{
  return _swift_task_switch(sub_1000B5480, 0, 0);
}

uint64_t sub_1000B5480()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_100293A68;
  sub_1001EB530();

  if (qword_1002910D0 != -1) {
    swift_once();
  }
  _s14bookdatastored21ReadingGoalsDataStoreC011clearCachedD02inyAA0b4GoaldE8Protocol_p_tFZ_0(qword_100292210);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

uint64_t sub_1000B56F8(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_1000B5770, 0, 0);
}

uint64_t sub_1000B5770()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_100293A68;
  sub_1001EB530();

  if (qword_1002910D0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[2];
  id v3 = (void (**)(void, void))v0[3];
  _s14bookdatastored21ReadingGoalsDataStoreC011clearCachedD02inyAA0b4GoaldE8Protocol_p_tFZ_0(qword_100292210);

  v3[2](v3, 1);
  _Block_release(v3);
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

bookdatastored::ReadingGoals::State __swiftcall ReadingGoalsService.state()()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v0 = (id)qword_100293A68;
  sub_1001EB530();

  sub_1001EC9E0();
  Swift::Int v1 = v4;
  double v2 = v5;
  result.streakDayGoal = v2;
  result.booksFinishedGoal = v1;
  return result;
}

uint64_t ReadingGoalsService.stateInfo()()
{
  *(void *)(v1 + 40) = v0;
  return _swift_task_switch(sub_1000B59A8, 0, 0);
}

uint64_t sub_1000B59A8()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_100293A68;
  sub_1001EB530();

  sub_1001EC9E0();
  double v2 = v0[3];
  id v3 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*((void *)v0 + 2)];
  id v4 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v2];
  id v5 = [objc_allocWithZone((Class)BDSReadingGoalsStateInfo) initWithBooksFinishedGoal:v3 streakDayGoal:v4];

  uint64_t v6 = (uint64_t (*)(id, uint64_t))*((void *)v0 + 1);
  return v6(v5, 1);
}

uint64_t sub_1000B5CAC(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_1000B5D24, 0, 0);
}

uint64_t sub_1000B5D24()
{
  uint64_t v2 = (void *)v0[2];
  id v1 = (void (**)(void, void, void))v0[3];
  bookdatastored::ReadingGoals::State v3 = ReadingGoalsService.state()();
  id v4 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v3.booksFinishedGoal];
  id v5 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v3.streakDayGoal];
  id v6 = [objc_allocWithZone((Class)BDSReadingGoalsStateInfo) initWithBooksFinishedGoal:v4 streakDayGoal:v5];

  ((void (**)(void, id, uint64_t))v1)[2](v1, v6, 1);
  _Block_release(v1);

  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

id ReadingHistoryServiceStatus.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

NSNotificationName sub_1000B5EB0()
{
  return NSUbiquitousKeyValueStoreDidChangeExternallyNotification;
}

id sub_1000B5EC0()
{
  return [*v0 synchronize];
}

void sub_1000B5EE8(uint64_t a1)
{
  objc_super v2 = *v1;
  if (a1) {
    v3.super.Class isa = sub_1001EC250().super.isa;
  }
  else {
    v3.super.Class isa = 0;
  }
  id v4 = sub_1001EC340();
  [v2 setDictionary:v3.super.isa forKey:v4];
}

Swift::Void __swiftcall NSUserDefaults.set(_:forKey:)(Swift::OpaquePointer_optional _, Swift::String forKey)
{
  if (_.value._rawValue) {
    v3.super.Class isa = sub_1001EC250().super.isa;
  }
  else {
    v3.super.Class isa = 0;
  }
  id v4 = sub_1001EC340();
  [v2 setValue:v3.super.isa forKey:v4];
  swift_unknownObjectRelease();
}

uint64_t sub_1000B6040()
{
  id v1 = *v0;
  NSString v2 = sub_1001EC340();
  id v3 = [v1 dictionaryForKey:v2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1001EC260();

  return v4;
}

void sub_1000B60C8(uint64_t a1)
{
  NSString v2 = *v1;
  if (a1) {
    v3.super.Class isa = sub_1001EC250().super.isa;
  }
  else {
    v3.super.Class isa = 0;
  }
  id v4 = sub_1001EC340();
  [v2 setValue:v3.super.isa forKey:v4];
  swift_unknownObjectRelease();
}

void *sub_1000B617C(uint64_t a1, void *a2)
{
  v24[3] = type metadata accessor for ReadingGoalsDataStore();
  void v24[4] = &protocol witness table for ReadingGoalsDataStore;
  v24[0] = a1;
  sub_1000AF9BC((uint64_t)v24, (uint64_t)(a2 + 2));
  uint64_t v4 = sub_10016E81C(0);
  if (v5) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = v4;
  }
  double v7 = COERCE_DOUBLE(sub_10016E828(1));
  if (v8) {
    double v9 = 300.0;
  }
  else {
    double v9 = v7;
  }
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v10 = (id)qword_100293A68;
  sub_1001EB530();

  sub_10007DC14(&qword_100292350);
  swift_allocObject();
  a2[7] = sub_100090ED0(v6, 2, v9);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v12 = a2[5];
  uint64_t v13 = a2[6];
  sub_100095C78((uint64_t)(a2 + 2), v12);
  int v14 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 24);
  swift_retain();
  v14(sub_1000B688C, v11, v12, v13);
  swift_endAccess();
  swift_release();
  sub_1001EC9E0();
  uint64_t v15 = sub_10016E81C(0);
  if (v16) {
    uint64_t v17 = 3;
  }
  else {
    uint64_t v17 = v15;
  }
  double v18 = COERCE_DOUBLE(sub_10016E828(1));
  if (v19)
  {
    if (v22 != v17 || v23 != 300.0) {
      goto LABEL_18;
    }
  }
  else if (v22 != v17 || v23 != v18)
  {
LABEL_18:
    sub_1001EC910();
    id v20 = (id)qword_100293A68;
    sub_1001EB530();

    sub_100116E24();
  }
  sub_1000947F0((uint64_t)v24);
  return a2;
}

uint64_t type metadata accessor for ReadingGoalsService()
{
  return self;
}

uint64_t sub_1000B6470()
{
  NSString v2 = *(const void **)(v0 + 16);
  NSDictionary v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093EB4;
  char v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1002922C0 + dword_1002922C0);
  return v5(v2, v3);
}

uint64_t sub_1000B6528()
{
  NSString v2 = *(const void **)(v0 + 16);
  NSDictionary v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093EB4;
  char v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1002922D0 + dword_1002922D0);
  return v5(v2, v3);
}

uint64_t sub_1000B65E0()
{
  NSString v2 = *(const void **)(v0 + 16);
  NSDictionary v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093EB4;
  char v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1002922F0 + dword_1002922F0);
  return v5(v2, v3);
}

uint64_t sub_1000B6698()
{
  double v2 = v0[2];
  NSDictionary v3 = (const void *)*((void *)v0 + 3);
  uint64_t v4 = (void *)*((void *)v0 + 4);
  char v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100093200;
  uint64_t v6 = (uint64_t (*)(const void *, void *, double))((char *)&dword_100292310 + dword_100292310);
  return v6(v3, v4, v2);
}

uint64_t sub_1000B6758()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000B6798()
{
  uint64_t v2 = v0[2];
  NSDictionary v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  char v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_100292330 + dword_100292330);
  return v6(v2, v3, v4);
}

uint64_t sub_1000B6854()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B688C()
{
  return sub_100116D4C();
}

char *sub_1000B6894(void *a1, void *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return sub_1000B7DF4(a1, a2, a3);
}

uint64_t sub_1000B68E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  double v9 = (char *)&v36 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = (uint64_t *)&v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
  unint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8];
  if (v13 >> 60 == 15)
  {
    uint64_t v14 = 0;
    unint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = *v12;
    sub_100093680(*v12, *(void *)&v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8]);
    Class isa = sub_1001EAFD0().super.isa;
    id v18 = [(objc_class *)isa bu_sha256];

    uint64_t v19 = sub_1001EC370();
    uint64_t v21 = v20;

    uint64_t v38 = 0x2D363532616873;
    unint64_t v39 = 0xE700000000000000;
    v40._countAndFlagsBits = v19;
    v40._object = v21;
    sub_1001EC490(v40);
    swift_bridgeObjectRelease();
    sub_100081700(v16, v13);
    uint64_t v14 = v38;
    unint64_t v15 = v39;
  }
  id v22 = [v2 systemFields];
  double v23 = v22;
  if (v22)
  {
    id v24 = [v22 recordChangeTag];

    if (v24)
    {
      double v23 = (void *)sub_1001EC370();
      uint64_t v26 = v25;

      goto LABEL_9;
    }
    double v23 = 0;
  }
  uint64_t v26 = 0;
LABEL_9:
  id v27 = [v2 modificationDate];
  if (v27)
  {
    uint64_t v28 = v27;
    sub_1001EB0A0();

    uint64_t v29 = sub_1001EB0C0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 0, 1, v29);
  }
  else
  {
    uint64_t v30 = sub_1001EB0C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v9, 1, 1, v30);
  }
  sub_1000935F8((uint64_t)v9, (uint64_t)v11, (uint64_t *)&unk_1002924C0);
  if (v15)
  {
    uint64_t v31 = v37;
    sub_1000936F8((uint64_t)v11, v37, (uint64_t *)&unk_1002924C0);
  }
  else
  {
    uint64_t v31 = v37;
    sub_1000936F8((uint64_t)v11, v37, (uint64_t *)&unk_1002924C0);
    if (!v26)
    {
      uint64_t v32 = sub_1001EB0C0();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32) == 1)
      {
        swift_bridgeObjectRelease_n();
        sub_1000816A4(v31, (uint64_t *)&unk_1002924C0);
        sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_1002924C0);
        uint64_t v33 = type metadata accessor for CRDTModelRevisionInfo();
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 1, 1, v33);
      }
    }
  }
  sub_1000816A4(v31, (uint64_t *)&unk_1002924C0);
  *a1 = v14;
  a1[1] = v15;
  a1[2] = (uint64_t)v23;
  a1[3] = v26;
  uint64_t v35 = type metadata accessor for CRDTModelRevisionInfo();
  sub_1000935F8((uint64_t)v11, (uint64_t)a1 + *(int *)(v35 + 24), (uint64_t *)&unk_1002924C0);
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a1, 0, 1, v35);
}

uint64_t sub_1000B6CD4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v49 = (void *)(swift_isaMask & *v2);
  uint64_t v4 = v49[10];
  uint64_t v5 = sub_1001ECB50();
  Class isa = v5[-1].isa;
  dispatch_queue_t v47 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v6);
  __chkstk_darwin(v11);
  uint64_t v48 = (char *)&v39 - v12;
  uint64_t v13 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v43 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v43 + 64);
  uint64_t v15 = __chkstk_darwin(v13 - 8);
  uint64_t v44 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - v16;
  sub_1000B68E0((uint64_t *)((char *)&v39 - v16));
  unint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8);
  if (v18 >> 60 == 15)
  {
    id v22 = sub_1001EB540();
    os_log_type_t v23 = sub_1001EC8F0();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "CRDTModelSyncManager resolveConflictsFor: couldn't deserialize resolved data", v24, 2u);
      swift_slowDealloc();
    }

    sub_1000BBC60((uint64_t)v17);
    return sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_100291B90);
  }
  else
  {
    uint64_t v41 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v45 = v9;
    uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData);
    id v20 = *(void **)((char *)v2 + qword_100292378);
    sub_10009366C(v19, v18);
    sub_10009366C(v19, v18);
    uint64_t v40 = v49[11];
    id v21 = v20;
    uint64_t v42 = v19;
    sub_1001EC020();
    uint64_t v25 = v45;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v8, 0, 1, v4);
    unint64_t v39 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    Class isa = (Class)(v25 + 32);
    uint64_t v26 = v48;
    v39(v48, v8, v4);
    dispatch_queue_t v47 = *(dispatch_queue_t *)((char *)v2 + qword_100292370);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v41, v26, v4);
    uint64_t v27 = v44;
    sub_1000936F8((uint64_t)v17, v44, (uint64_t *)&unk_100291B90);
    unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    unint64_t v29 = (v10 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (*(unsigned __int8 *)(v43 + 80) + v29 + 8) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v31 = (char *)swift_allocObject();
    uint64_t v33 = v40;
    uint64_t v32 = v41;
    *((void *)v31 + 2) = v4;
    *((void *)v31 + 3) = v33;
    *((void *)v31 + 4) = v49[12];
    v39(&v31[v28], v32, v4);
    *(void *)&v31[v29] = v2;
    sub_1000935F8(v27, (uint64_t)&v31[v30], (uint64_t *)&unk_100291B90);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_1000C050C;
    *(void *)(v34 + 24) = v31;
    aBlock[4] = sub_1000B0738;
    aBlock[5] = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100089470;
    void aBlock[3] = &unk_100264770;
    uint64_t v35 = _Block_copy(aBlock);
    uint64_t v36 = v2;
    swift_retain();
    swift_release();
    dispatch_sync(v47, v35);
    _Block_release(v35);
    sub_100081700(v42, v18);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v4);
    sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_100291B90);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

Swift::Int sub_1000B72E4()
{
  swift_getMetatypeMetadata();
  uint64_t v0 = sub_1001EC3D0();
  unint64_t v2 = v1;
  sub_1001EC530();
  uint64_t v3 = sub_1001EC3E0();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();
  Swift::Int v6 = sub_100152E34(15, v3, v5, v0, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

BOOL static CRDTModelLocalFileManager.SyncError.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void CRDTModelLocalFileManager.SyncError.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int CRDTModelLocalFileManager.SyncError.hashValue.getter(char a1)
{
  return sub_1001ED1A0();
}

BOOL sub_1000B7418(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static CRDTModelLocalFileManager.SyncError.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1000B7424()
{
  return CRDTModelLocalFileManager.SyncError.hashValue.getter(*v0);
}

void sub_1000B742C(uint64_t a1)
{
  CRDTModelLocalFileManager.SyncError.hash(into:)(a1, *v1);
}

Swift::Int sub_1000B7434()
{
  sub_1001ED170();
  CRDTModelLocalFileManager.SyncError.hash(into:)((uint64_t)v2, *v0);
  return sub_1001ED1A0();
}

id static CRDTModelSyncManager.defaultDataSource.getter()
{
  return sub_1001ADDAC();
}

uint64_t sub_1000B74A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)((swift_isaMask & *v1) + 0x50);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CRDTModelSyncManager.observable.getter()
{
  type metadata accessor for ModelState();
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  sub_1001EC9E0();
  return v1;
}

uint64_t CRDTModelSyncManager.model.getter()
{
  return sub_1001EC9E0();
}

uint64_t sub_1000B778C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  sub_100093B98((uint64_t)v4, a1, type metadata accessor for ReadingHistoryModel);
  return sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_100291CA0);
}

uint64_t sub_1000B7898@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)((swift_isaMask & *a1) + 0x50);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a2, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000B7A18@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B7898(*(void **)(v1 + 16), a1);
}

void sub_1000B7A34(char a1)
{
  int v2 = a1 & 1;
  uint64_t v3 = (unsigned __int8 *)(v1 + direct field offset for CRDTModelSyncManager.enableCloudSync);
  swift_beginAccess();
  int v4 = *v3;
  if (v4 != v2) {
    sub_1001ADD84(v4);
  }
}

uint64_t CRDTModelSyncManager.enableCloudSync.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + direct field offset for CRDTModelSyncManager.enableCloudSync);
  swift_beginAccess();
  return *v1;
}

void CRDTModelSyncManager.enableCloudSync.setter(char a1)
{
  uint64_t v3 = (char *)(v1 + direct field offset for CRDTModelSyncManager.enableCloudSync);
  swift_beginAccess();
  char v4 = *v3;
  *uint64_t v3 = a1;
  sub_1000B7A34(v4);
}

void (*sub_1000B7B44(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = direct field offset for CRDTModelSyncManager.enableCloudSync;
  v3[3] = v1;
  void v3[4] = v4;
  uint64_t v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_1000B7BC4;
}

void sub_1000B7BC4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  int v4 = *(unsigned __int8 *)(*(void *)a1 + 40);
  int v5 = *(unsigned __int8 *)(v3 + v2);
  *(unsigned char *)(v3 + v2) = v4;
  if ((v4 ^ v5))
  {
    uint64_t v6 = *(void *)(v1[3] + qword_100292390);
    int v7 = *(unsigned __int8 *)(v6 + qword_1002A4310);
    *(unsigned char *)(v6 + qword_1002A4310) = v4;
    if (v4 != v7) {
      sub_1000EF388(v4);
    }
  }
  free(v1);
}

void (*CRDTModelSyncManager.enableCloudSync.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  int v4 = (unsigned char *)(v1 + direct field offset for CRDTModelSyncManager.enableCloudSync);
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *v4;
  return sub_1000B7CC4;
}

void sub_1000B7CC4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  CRDTModelSyncManager.enableCloudSync.setter(*(unsigned char *)(*(void *)a1 + 32));
  free(v1);
}

char *CRDTModelSyncManager.__allocating_init(cloudKitController:crdtContext:dataSource:transactionProvider:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  int v5 = v4;
  type metadata accessor for CRDTModelCloudDataManager();
  id v10 = a1;
  id v11 = a2;
  id v12 = a3;
  swift_unknownObjectRetain();
  uint64_t v13 = sub_1001ADBA0(v10, v11, v12, a4);
  id v14 = objc_allocWithZone(v5);
  uint64_t v15 = sub_1000B7DF4(v13, v11, a4);

  *(void *)&v13[qword_1002A4308 + 8] = &off_100264430;
  swift_unknownObjectWeakAssign();

  return v15;
}

char *sub_1000B7DF4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v54 = a3;
  id v56 = a2;
  uint64_t v58 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  int v4 = (void *)(swift_isaMask & *v3);
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v5 - 8);
  id v57 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v4[10];
  uint64_t v8 = v4[11];
  uint64_t v9 = v4[12];
  uint64_t v51 = v8;
  uint64_t v55 = v9;
  uint64_t v10 = type metadata accessor for ModelState.Source();
  __chkstk_darwin(v10 - 8);
  id v53 = (char *)&v49 - v11;
  uint64_t v50 = type metadata accessor for ModelState();
  uint64_t v60 = *(void *)(v50 - 8);
  uint64_t v12 = __chkstk_darwin(v50);
  uint64_t v61 = (uint64_t)&v49 - v13;
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v59 = sub_1001EC9C0();
  uint64_t v18 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  id v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1001EC990();
  __chkstk_darwin(v21 - 8);
  uint64_t v22 = sub_1001EBAA0();
  __chkstk_darwin(v22 - 8);
  v63[0] = 0;
  v63[1] = 0xE000000000000000;
  os_log_type_t v23 = v3;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v63, "CRDTModelSync.");
  HIBYTE(v63[1]) = -18;
  v65._countAndFlagsBits = sub_1000B72E4();
  sub_1001EC490(v65);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  uint64_t v24 = qword_100292370;
  sub_1000C0728();
  sub_1001EBA90();
  sub_1001EC980();
  uint64_t v25 = v54;
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v59);
  uint64_t v26 = v50;
  *(void *)((char *)v23 + v24) = sub_1001ECA00();
  uint64_t v27 = v51;
  *((unsigned char *)v23 + direct field offset for CRDTModelSyncManager.enableCloudSync) = 0;
  sub_1001EBEE0();
  id v28 = v56;
  *(void *)((char *)v23 + qword_10029237_Block_object_dispose(&STACK[0x3B0], 8) = v56;
  uint64_t v29 = v62;
  unint64_t v30 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  uint64_t v31 = (uint64_t)v49;
  uint64_t v59 = (uint64_t)v17;
  v30(v49, v17, v7);
  uint64_t v32 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v53, 1, 2, v7);
  uint64_t v33 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v34 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v57, 1, 1, v33);
  id v56 = v28;
  uint64_t v35 = v61;
  uint64_t v36 = v55;
  ModelState.init(model:loaded:source:revisionInfo:)(v31, 0, v32, v34, v7, v61);
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  *(void *)((char *)v23 + qword_100292380) = sub_1001783E4(v35);
  uint64_t v37 = v58;
  *(void *)((char *)v23 + qword_100292390) = v58;
  *(void *)((char *)v23 + qword_10029239_Block_object_dispose(&STACK[0x3B0], 8) = v25;
  type metadata accessor for ObservableTransaction();
  uint64_t v38 = (void *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain_n();
  id v39 = v37;
  *(void *)((char *)v23 + qword_10029238_Block_object_dispose(&STACK[0x3B0], 8) = sub_10017800C(0xD000000000000030, 0x8000000100222280, v25, v38);

  v64.receiver = v23;
  v64.super_class = ObjectType;
  uint64_t v40 = (char *)objc_msgSendSuper2(&v64, "init");
  uint64_t v41 = *(void *)&v40[qword_100292380] + *(void *)(**(void **)&v40[qword_100292380] + 128);
  swift_beginAccess();
  *(void *)(v41 + _Block_object_dispose(&STACK[0x3B0], 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  uint64_t v42 = v40;
  uint64_t v43 = sub_1001EB540();
  os_log_type_t v44 = sub_1001EC910();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "CRDTModelSyncManager Init: About to load cloudData", v45, 2u);
    swift_slowDealloc();
  }

  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  dispatch_queue_t v47 = (void *)swift_allocObject();
  v47[2] = v7;
  v47[3] = v27;
  v47[4] = v36;
  v47[5] = v46;
  swift_retain();
  sub_1001ADBFC((uint64_t)sub_1000C0850, (uint64_t)v47);

  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v61, v26);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v59, v7);
  swift_release();
  return v42;
}

uint64_t sub_1000B8604(void *a1)
{
  uint64_t v2 = sub_1001EBAA0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EBA60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    sub_1001EBA50();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = a1;
    aBlock[4] = sub_1000C089C;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000DB998;
    void aBlock[3] = &unk_100264888;
    uint64_t v13 = _Block_copy(aBlock);
    id v14 = a1;
    id v15 = v11;
    sub_1001EBA80();
    sub_1001EC9F0();
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

    return swift_release();
  }
  return result;
}

uint64_t sub_1000B8864(void *a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = swift_isaMask & *a1;
  uint64_t v5 = *(void *)(v4 + 0x50);
  uint64_t v6 = sub_1001ECB50();
  uint64_t v83 = *(char **)(v6 - 8);
  unint64_t v84 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v75 - v7;
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __chkstk_darwin(v10);
  id v15 = (char *)&v75 - v14;
  uint64_t v87 = *(void *)(v5 - 8);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v81 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v80 = (char *)&v75 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v75 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v82 = (char *)&v75 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v75 - v25;
  sub_1000B74A8((uint64_t)&v75 - v25);
  uint64_t v27 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 1, 1, v27);
  if (!a2)
  {
    uint64_t v40 = sub_1001EB540();
    uint64_t v43 = sub_1001EC910();
    if (os_log_type_enabled(v40, (os_log_type_t)v43))
    {
      os_log_type_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v43, "CRDTModelSyncManager Init: empty cloudData", v44, 2u);
      swift_slowDealloc();
    }
    goto LABEL_11;
  }
  uint64_t v86 = a2;
  sub_1000B68E0(v12);
  sub_1000816A4((uint64_t)v15, (uint64_t *)&unk_100291B90);
  sub_1000935F8((uint64_t)v12, (uint64_t)v15, (uint64_t *)&unk_100291B90);
  uint64_t v85 = (void (*)(char *, uint64_t))((char *)v3 + qword_1002A41C0);
  id v28 = sub_1001EB540();
  os_log_type_t v29 = sub_1001EC910();
  if (os_log_type_enabled(v28, v29))
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "CRDTModelSyncManager Init: About to deserialize existing data", v30, 2u);
    swift_slowDealloc();
  }

  id v31 = v86;
  unint64_t v32 = *(void *)&v86[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8];
  if (v32 >> 60 == 15)
  {
    uint64_t v40 = sub_1001EB540();
    os_log_type_t v41 = sub_1001EC8F0();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "CRDTModelSyncManager Init: couldn't deserialize existing data", v42, 2u);
      id v31 = v86;
      swift_slowDealloc();
    }

LABEL_11:
    goto LABEL_12;
  }
  uint64_t v33 = v3;
  uint64_t v34 = v4;
  uint64_t v35 = *(void *)&v86[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
  uint64_t v78 = v33;
  uint64_t v79 = v5;
  uint64_t v36 = *(void **)((char *)v33 + qword_100292378);
  sub_10009366C(v35, v32);
  sub_10009366C(v35, v32);
  uint64_t v37 = *(void *)(*(void *)(v34 + 88) + 8);
  id v38 = v36;
  uint64_t v39 = v79;
  uint64_t v77 = v37;
  sub_1001EC020();
  uint64_t v75 = v34;
  uint64_t v76 = v35;
  uint64_t v83 = v26;
  unint64_t v84 = v32;
  uint64_t v46 = v87;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v8, 0, 1, v39);
  dispatch_queue_t v47 = v82;
  (*(void (**)(void))(v46 + 32))();
  uint64_t v3 = v78;
  sub_1000B74A8((uint64_t)v22);
  uint64_t v48 = v39;
  char v49 = sub_1001EBFE0();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
  v50(v22, v48);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  if (v49)
  {
    uint64_t v52 = v80;
    v51(v80, v47, v48);
    id v53 = sub_1001EB540();
    os_log_type_t v54 = sub_1001EC910();
    int v55 = v54;
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v85 = v50;
      uint64_t v57 = v56;
      v90[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 136315394;
      LODWORD(v81) = v55;
      uint64_t v58 = sub_1001ED040();
      uint64_t v89 = sub_1001A8090(v58, v59, v90);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      v85(v52, v79);
      *(_WORD *)(v57 + 12) = 2080;
      uint64_t v60 = v83;
      swift_beginAccess();
      uint64_t v61 = sub_1001ED040();
      uint64_t v88 = sub_1001A8090(v61, v62, v90);
      uint64_t v5 = v79;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v81, "CRDTModelSyncManager Init: loaded stored model=%s, merging into existing=%s", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v50 = v85;
      id v63 = v86;
      swift_slowDealloc();

      objc_super v64 = v82;
      uint64_t v65 = v76;
    }
    else
    {
      uint64_t v5 = v48;

      v50(v52, v48);
      objc_super v64 = v82;
      uint64_t v60 = v83;
      uint64_t v65 = v76;
      id v63 = v86;
    }
    swift_beginAccess();
    sub_1001EBE70();
    swift_endAccess();

    sub_100081700(v65, v84);
    v50(v64, v5);
    uint64_t v26 = v60;
  }
  else
  {
    id v66 = v81;
    v51(v81, v47, v48);
    uint64_t v67 = sub_1001EB540();
    uint64_t v68 = v47;
    os_log_type_t v69 = sub_1001EC910();
    if (os_log_type_enabled(v67, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v85 = v50;
      uint64_t v71 = (uint8_t *)v70;
      v90[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 136315138;
      uint64_t v80 = (char *)(v71 + 4);
      uint64_t v72 = sub_1001ED040();
      uint64_t v89 = sub_1001A8090(v72, v73, v90);
      uint64_t v5 = v79;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      uint64_t v74 = v85;
      v85(v66, v5);
      _os_log_impl((void *)&_mh_execute_header, v67, v69, "CRDTModelSyncManager Init: loaded stored model=%s, no delta", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100081700(v76, v84);
      v74(v82, v5);
    }
    else
    {
      uint64_t v5 = v48;
      sub_100081700(v76, v84);

      v50(v66, v48);
      v50(v68, v48);
    }
    uint64_t v26 = v83;
  }
LABEL_12:
  sub_1000B92D0(v3, (uint64_t)v26, (uint64_t)v15);
  sub_1000816A4((uint64_t)v15, (uint64_t *)&unk_100291B90);
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v26, v5);
}

uint64_t sub_1000B92D0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = swift_isaMask & *a1;
  v5[1] = *(_OWORD *)(v3 + 0x50);
  uint64_t v6 = *(void *)(v3 + 96);
  uint64_t v7 = a2;
  uint64_t v8 = a3;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_1000C0718, (uint64_t)v5);
  return swift_release();
}

id CRDTModelSyncManager.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1001EB540();
  os_log_type_t v4 = sub_1001EC910();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "CRDTModelSyncManager deinit", v5, 2u);
    swift_slowDealloc();
  }

  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "dealloc");
}

id sub_1000B9458(void *a1)
{
  id v1 = a1;
  return CRDTModelSyncManager.__deallocating_deinit();
}

uint64_t sub_1000B9480(uint64_t a1)
{
  uint64_t v2 = a1 + qword_1002A41C0;
  uint64_t v3 = sub_1001EB560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t CRDTModelSyncManager.sync(_:)(uint64_t a1)
{
  return CRDTModelSyncManager.sync(_:isRemote:)(a1, 0);
}

uint64_t CRDTModelSyncManager.sync(_:isRemote:)(uint64_t a1, char a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001EBA50();
  uint64_t v11 = v2;
  uint64_t v12 = a1;
  char v13 = a2;
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1000B969C(uint64_t a1, uint64_t a2, int a3)
{
}

void sub_1000B96C8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v118 = a2;
  uint64_t v134 = a1;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v122 = (uint64_t)v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v116 = (uint64_t)v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v7 - 8);
  uint64_t v129 = (void *)((char *)v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1001EBF80();
  uint64_t v126 = *(void *)(v9 - 8);
  unint64_t v127 = v9;
  __chkstk_darwin(v9);
  uint64_t v125 = (char *)v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v128 = (uint64_t)v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v15 = (char *)v111 - v14;
  uint64_t v16 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v117 = (uint64_t)v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v121 = (uint64_t)v111 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v135 = (uint64_t)v111 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v111 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)v111 - v26;
  id v28 = [*(id *)&v2[qword_100292398] createTransactionWithName:"com.apple.ibooks.CRDTModelSyncManager.q_sync"];
  uint64_t v133 = qword_100292380;
  swift_retain();
  uint64_t v130 = v11;
  unint64_t v29 = v132;
  sub_1001EC9E0();
  unint64_t v132 = v29;
  swift_release();
  sub_100093B98((uint64_t)v15, (uint64_t)v27, type metadata accessor for ReadingHistoryModel);
  sub_1000816A4((uint64_t)v15, (uint64_t *)&unk_100291CA0);
  uint64_t v30 = sub_1000C0768((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  uint64_t v31 = v134;
  uint64_t v123 = v30;
  uint64_t v124 = v16;
  LOBYTE(v16) = sub_1001EBFE0();
  sub_100093C10((uint64_t)v27, type metadata accessor for ReadingHistoryModel);
  if (v16)
  {
    id v114 = v28;
    unint64_t v32 = &v2[qword_1002A41C0];
    sub_100093B98(v31, (uint64_t)v25, type metadata accessor for ReadingHistoryModel);
    uint64_t v131 = v3;
    uint64_t v115 = v32;
    uint64_t v33 = sub_1001EB540();
    os_log_type_t v34 = sub_1001EC910();
    int v35 = v34;
    uint64_t v36 = v3;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      uint64_t aBlock = v113;
      *(_DWORD *)uint64_t v37 = 136315394;
      int v112 = v35;
      unint64_t v38 = ReadingHistoryModel.description.getter();
      uint64_t v142 = sub_1001A8090(v38, v39, &aBlock);
      v111[2] = &v143;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_100093C10((uint64_t)v25, type metadata accessor for ReadingHistoryModel);
      *(_WORD *)(v37 + 12) = 2080;
      v111[1] = v37 + 14;
      swift_retain();
      unint64_t v40 = v132;
      sub_1001EC9E0();
      unint64_t v132 = v40;
      swift_release();
      sub_100093B98((uint64_t)v15, (uint64_t)v27, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4((uint64_t)v15, (uint64_t *)&unk_100291CA0);
      unint64_t v41 = ReadingHistoryModel.description.getter();
      unint64_t v43 = v42;
      uint64_t v36 = v3;
      sub_100093C10((uint64_t)v27, type metadata accessor for ReadingHistoryModel);
      uint64_t v142 = sub_1001A8090(v41, v43, &aBlock);
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v112, "CRDTModelSyncManager q_sync: incoming=%s and existing=%s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v44 = v132;
      uint64_t v45 = v126;
    }
    else
    {

      sub_100093C10((uint64_t)v25, type metadata accessor for ReadingHistoryModel);
      dispatch_queue_t v47 = v131;

      uint64_t v45 = v126;
      unint64_t v44 = v132;
    }
    swift_retain();
    sub_1001EC9E0();
    uint64_t v48 = v36;
    swift_release();
    sub_100093B98((uint64_t)v15, (uint64_t)v27, type metadata accessor for ReadingHistoryModel);
    sub_1000816A4((uint64_t)v15, (uint64_t *)&unk_100291CA0);
    sub_1001EC010();
    sub_100093C10((uint64_t)v27, type metadata accessor for ReadingHistoryModel);
    char v49 = v125;
    unint64_t v50 = v127;
    (*(void (**)(char *, void, unint64_t))(v45 + 104))(v125, enum case for CRCodableVersion.version1(_:), v127);
    sub_1000C0768((unint64_t *)&unk_1002924B0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
    uint64_t v51 = sub_1001EBE50();
    if (v44)
    {
      swift_errorRelease();
      (*(void (**)(char *, unint64_t))(v45 + 8))(v49, v50);
      uint64_t v53 = v121;
      sub_100093B98(v135, v121, type metadata accessor for ReadingHistoryModel);
      os_log_type_t v54 = sub_1001EB540();
      os_log_type_t v55 = sub_1001EC8F0();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 136315138;
        unint64_t v57 = ReadingHistoryModel.description.getter();
        uint64_t v142 = sub_1001A8090(v57, v58, &aBlock);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_100093C10(v53, type metadata accessor for ReadingHistoryModel);
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "CRDTModelSyncManager q_sync: couldn't serialize model to sync: %s", v56, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_100093C10(v53, type metadata accessor for ReadingHistoryModel);
      }
      unint64_t v84 = v114;
      sub_10007DC14(&qword_1002924A0);
      sub_1000815A4(&qword_1002924A8, &qword_1002924A0);
      swift_allocError();
      *uint64_t v85 = 1;
      swift_willThrow();

      sub_100093C10(v135, type metadata accessor for ReadingHistoryModel);
    }
    else
    {
      uint64_t v59 = v51;
      unint64_t v60 = v52;
      (*(void (**)(char *, unint64_t))(v45 + 8))(v49, v50);
      unint64_t v132 = v60;
      sub_100093680(v59, v60);
      swift_retain();
      uint64_t v61 = v128;
      uint64_t v62 = v130;
      sub_1001EC9E0();
      swift_release();
      uint64_t v63 = v119;
      objc_super v64 = *(uint64_t (**)(void))(v119 + 48);
      uint64_t v65 = 1;
      uint64_t v126 = v61 + *(int *)(v62 + 52);
      uint64_t v66 = v120;
      int v67 = v64();
      uint64_t v68 = v62;
      unint64_t v127 = v59;
      if (!v67)
      {
        uint64_t v69 = v116;
        sub_100093B98(v126, v116, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
        Class isa = sub_1001EAFD0().super.isa;
        id v71 = [(objc_class *)isa bu_sha256];

        uint64_t v72 = sub_1001EC370();
        uint64_t v74 = v73;

        uint64_t aBlock = 0x2D363532616873;
        unint64_t v137 = 0xE700000000000000;
        v144._countAndFlagsBits = v72;
        v144._object = v74;
        sub_1001EC490(v144);
        swift_bridgeObjectRelease();
        uint64_t v75 = aBlock;
        unint64_t v76 = v137;
        uint64_t v78 = *(void *)(v69 + 16);
        uint64_t v77 = *(void *)(v69 + 24);
        uint64_t v79 = *(int *)(v66 + 24);
        uint64_t v80 = v48;
        uint64_t v81 = v129;
        sub_1000936F8(v69 + v79, (uint64_t)v129 + v79, (uint64_t *)&unk_1002924C0);
        *uint64_t v81 = v75;
        v81[1] = v76;
        uint64_t v63 = v119;
        uint64_t v68 = v130;
        v81[2] = v78;
        v81[3] = v77;
        uint64_t v48 = v80;
        uint64_t v66 = v120;
        swift_bridgeObjectRetain();
        sub_100093C10(v69, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
        uint64_t v65 = 0;
      }
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v129, v65, 1, v66);
      if (v118)
      {
        uint64_t v82 = v122;
        sub_100093B98(v134, v122, type metadata accessor for ReadingHistoryModel);
        uint64_t v83 = sub_10007DC14((uint64_t *)&unk_1002963C0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 0, 2, v83);
      }
      else
      {
        uint64_t v86 = sub_10007DC14((uint64_t *)&unk_1002963C0);
        uint64_t v82 = v122;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v122, 1, 2, v86);
      }
      uint64_t v87 = v133;
      uint64_t v88 = v128;
      sub_1000C0094(v135, v128);
      sub_1000C00F8(v82, v88 + *(int *)(v68 + 48), (uint64_t *)&unk_100291BA0);
      uint64_t v89 = sub_1000C00F8((uint64_t)v129, v126, (uint64_t *)&unk_100291B90);
      uint64_t v90 = *(void *)&v48[v87];
      __chkstk_darwin(v89);
      v111[-2] = v88;
      uint64_t v91 = *(NSObject **)(v90 + 16);
      uint64_t v92 = (void *)swift_allocObject();
      v92[2] = sub_100093B3C;
      v92[3] = &v111[-4];
      v92[4] = v90;
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 16) = sub_1000935DC;
      *(void *)(v93 + 24) = v92;
      uint64_t v140 = sub_1000AC2B4;
      uint64_t v141 = v93;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v137 = 1107296256;
      unint64_t v138 = sub_100089470;
      uint64_t v139 = &unk_1002645E0;
      uint64_t v94 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_release();
      dispatch_sync(v91, v94);
      _Block_release(v94);
      LOBYTE(v91) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      if (v91)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        JUMPOUT(0x1000BA8F8);
      }
      uint64_t v95 = v117;
      sub_100093B98(v135, v117, type metadata accessor for ReadingHistoryModel);
      uint64_t v96 = v127;
      unint64_t v97 = v132;
      sub_100093680(v127, v132);
      sub_100093680(v96, v97);
      uint64_t v98 = sub_1001EB540();
      os_log_type_t v99 = sub_1001EC910();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v100 = swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v100 = 136315394;
        unint64_t v101 = ReadingHistoryModel.description.getter();
        uint64_t v142 = sub_1001A8090(v101, v102, &aBlock);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_100093C10(v95, type metadata accessor for ReadingHistoryModel);
        *(_WORD *)(v100 + 12) = 2048;
        uint64_t v96 = v127;
        switch(v97 >> 62)
        {
          case 1uLL:
            unint64_t v106 = HIDWORD(v127);
            sub_100081714(v127, v132);
            LODWORD(v104) = v106 - v96;
            if (__OFSUB__(v106, v96)) {
              goto LABEL_31;
            }
            uint64_t v104 = (int)v104;
            break;
          case 2uLL:
            uint64_t v108 = *(void *)(v127 + 16);
            uint64_t v107 = *(void *)(v127 + 24);
            sub_100081714(v127, v132);
            uint64_t v104 = v107 - v108;
            if (__OFSUB__(v107, v108)) {
              goto LABEL_32;
            }
            uint64_t v96 = v127;
            break;
          case 3uLL:
            unint64_t v103 = v132;
            sub_100081714(v127, v132);
            uint64_t v104 = 0;
            goto LABEL_27;
          default:
            unint64_t v103 = v132;
            sub_100081714(v127, v132);
            uint64_t v104 = BYTE6(v103);
            goto LABEL_27;
        }
        unint64_t v103 = v132;
LABEL_27:
        uint64_t v142 = v104;
        sub_1001ECBC0();
        sub_100081714(v96, v103);
        _os_log_impl((void *)&_mh_execute_header, v98, v99, "CRDTModelSyncManager q_sync: sending merged=%s as %ld bytes to BCCloudDataManager", (uint8_t *)v100, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v105 = v114;
        unint64_t v97 = v103;
      }
      else
      {
        sub_100081714(v96, v97);

        sub_100093C10(v95, type metadata accessor for ReadingHistoryModel);
        sub_100081714(v96, v97);
        uint64_t v105 = v114;
      }
      uint64_t v109 = swift_allocObject();
      *(void *)(v109 + 16) = v105;
      id v110 = v105;
      sub_1000BB950(v96, v97, (uint64_t)sub_1000C01F4, v109);

      swift_release();
      sub_100081714(v96, v97);
      sub_100081714(v96, v97);
      sub_1000816A4(v122, (uint64_t *)&unk_100291BA0);
      sub_1000816A4((uint64_t)v129, (uint64_t *)&unk_100291B90);
      sub_100093C10(v135, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v128, (uint64_t *)&unk_100291CA0);
    }
  }
  else
  {
    sub_10007DC14(&qword_1002924A0);
    sub_1000815A4(&qword_1002924A8, &qword_1002924A0);
    swift_allocError();
    *uint64_t v46 = 0;
    swift_willThrow();
  }
}

void sub_1000BA908(char *a1, int a2)
{
  uint64_t v3 = v2;
  int v132 = a2;
  uint64_t v5 = *(void *)((swift_isaMask & *(void *)v2) + 0x50);
  uint64_t v6 = *(void *)((swift_isaMask & *(void *)v2) + 0x58);
  uint64_t v7 = *(void *)((swift_isaMask & *(void *)v2) + 0x60);
  uint64_t v130 = type metadata accessor for ModelState.Source();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v135 = (char *)&v115 - v8;
  uint64_t v131 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v134 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v125 = (uint64_t)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v10 - 8);
  uint64_t v145 = (uint64_t *)((char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v149 = v7;
  uint64_t v144 = type metadata accessor for ModelState();
  uint64_t v128 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v143 = (char *)&v115 - v12;
  uint64_t v13 = sub_1001EBF80();
  uint64_t v140 = *(void *)(v13 - 8);
  unint64_t v141 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v139 = (uint64_t (*)())((char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v136 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v133 = (char *)&v115 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  Swift::Int v148 = (char *)&v115 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v137 = (char *)&v115 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v115 - v25;
  id v27 = [*(id *)&v3[qword_100292398] createTransactionWithName:"com.apple.ibooks.CRDTModelSyncManager.q_sync"];
  sub_1000B74A8((uint64_t)v26);
  id v28 = a1;
  uint64_t v138 = *(void *)(v6 + 8);
  LOBYTE(v7) = sub_1001EBFE0();
  uint64_t v29 = v16 + 8;
  long long v147 = *(void (**)(char *, uint64_t))(v16 + 8);
  v147(v26, v5);
  if (v7)
  {
    uint64_t v124 = v6;
    uint64_t v30 = &v3[qword_1002A41C0];
    uint64_t v119 = v16;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    unint64_t v32 = v137;
    unint64_t v127 = v28;
    uint64_t v122 = v16 + 16;
    uint64_t v126 = v31;
    v31(v137, v28, v5);
    uint64_t v33 = v3;
    uint64_t v123 = v30;
    os_log_type_t v34 = sub_1001EB540();
    os_log_type_t v35 = sub_1001EC910();
    int v36 = v35;
    BOOL v37 = os_log_type_enabled(v34, v35);
    id v121 = v27;
    uint64_t v146 = v29;
    if (v37)
    {
      unint64_t v38 = v33;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v118 = swift_slowAlloc();
      uint64_t v150 = v118;
      *(_DWORD *)uint64_t v39 = 136315394;
      int v117 = v36;
      os_log_t v116 = v34;
      uint64_t v40 = sub_1001ED040();
      uint64_t v152 = sub_1001A8090(v40, v41, &v150);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      unint64_t v42 = v32;
      unint64_t v43 = v147;
      v147(v42, v5);
      *(_WORD *)(v39 + 12) = 2080;
      unint64_t v137 = (char *)(v39 + 14);
      sub_1000B74A8((uint64_t)v26);
      uint64_t v44 = sub_1001ED040();
      unint64_t v46 = v45;
      v43(v26, v5);
      uint64_t v152 = sub_1001A8090(v44, v46, &v150);
      sub_1001ECBC0();

      dispatch_queue_t v47 = v38;
      swift_bridgeObjectRelease();
      os_log_t v48 = v116;
      _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v117, "CRDTModelSyncManager q_sync: incoming=%s and existing=%s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v50 = v32;
      unint64_t v43 = v147;
      v147(v50, v5);

      dispatch_queue_t v47 = v33;
    }
    unint64_t v51 = v141;
    sub_1000B74A8((uint64_t)v26);
    sub_1001EC010();
    v43(v26, v5);
    uint64_t v120 = v47;
    uint64_t v53 = v139;
    uint64_t v52 = v140;
    uint64_t v54 = v5;
    (*(void (**)(uint64_t (*)(), void, unint64_t))(v140 + 104))(v139, enum case for CRCodableVersion.version1(_:), v51);
    unint64_t v55 = v142;
    uint64_t v56 = sub_1001EBE50();
    unint64_t v58 = v51;
    if (v55)
    {
      swift_errorRelease();
      (*(void (**)(uint64_t (*)(), unint64_t))(v52 + 8))(v53, v51);
      uint64_t v59 = v136;
      unint64_t v60 = v148;
      v126(v136, v148, v54);
      uint64_t v61 = sub_1001EB540();
      os_log_type_t v62 = sub_1001EC8F0();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        uint64_t v150 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315138;
        uint64_t v64 = sub_1001ED040();
        uint64_t v152 = sub_1001A8090(v64, v65, &v150);
        uint64_t v66 = v147;
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        v66(v136, v54);
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "CRDTModelSyncManager q_sync: couldn't serialize model to sync: %s", v63, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v60 = v148;
      }
      else
      {

        uint64_t v66 = v147;
        v147(v59, v54);
      }
      type metadata accessor for CRDTModelSyncManager.SyncError();
      swift_getWitnessTable();
      swift_allocError();
      *unint64_t v106 = 1;
      swift_willThrow();

      v66(v60, v54);
    }
    else
    {
      uint64_t v67 = v56;
      unint64_t v68 = v57;
      uint64_t v138 = 0;
      (*(void (**)(uint64_t (*)(), unint64_t))(v52 + 8))(v53, v58);
      unint64_t v141 = v68;
      unint64_t v142 = v67;
      sub_100093680(v67, v68);
      swift_retain();
      uint64_t v69 = v143;
      MutableObservableContainer.value.getter();
      swift_release();
      uint64_t v70 = (uint64_t)&v69[*(int *)(v144 + 52)];
      uint64_t v71 = v134;
      uint64_t v72 = 1;
      uint64_t v73 = v131;
      int v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v70, 1, v131);
      uint64_t v75 = (uint64_t)v148;
      if (!v74)
      {
        uint64_t v139 = type metadata accessor for CRDTModelRevisionInfo;
        uint64_t v76 = v125;
        sub_100093B98(v70, v125, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
        Class isa = sub_1001EAFD0().super.isa;
        id v78 = [(objc_class *)isa bu_sha256];

        uint64_t v79 = sub_1001EC370();
        uint64_t v140 = v5;
        uint64_t v81 = v80;

        uint64_t v150 = 0x2D363532616873;
        unint64_t v151 = 0xE700000000000000;
        v153._countAndFlagsBits = v79;
        v153._object = v81;
        sub_1001EC490(v153);
        swift_bridgeObjectRelease();
        uint64_t v82 = v150;
        unint64_t v83 = v151;
        uint64_t v85 = *(void *)(v76 + 16);
        uint64_t v84 = *(void *)(v76 + 24);
        uint64_t v86 = v145;
        sub_1000936F8(v76 + *(int *)(v73 + 24), (uint64_t)v145 + *(int *)(v73 + 24), (uint64_t *)&unk_1002924C0);
        *uint64_t v86 = v82;
        v86[1] = v83;
        v86[2] = v85;
        void v86[3] = v84;
        uint64_t v54 = v140;
        uint64_t v71 = v134;
        swift_bridgeObjectRetain();
        sub_100093C10(v76, (uint64_t (*)(void))v139);
        uint64_t v72 = 0;
      }
      uint64_t v87 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v71 + 56);
      uint64_t v88 = 1;
      v87(v145, v72, 1, v73);
      if (v132)
      {
        v126(v135, v127, v54);
        uint64_t v88 = 0;
      }
      uint64_t v89 = v135;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v119 + 56))(v135, v88, 2, v54);
      uint64_t v90 = (uint64_t)v89;
      uint64_t v91 = v143;
      uint64_t v92 = ModelState.updating(model:source:revisionInfo:)(v75, v90, (uint64_t)v145, v144);
      __chkstk_darwin(v92);
      uint64_t v93 = v124;
      *(&v115 - 4) = v54;
      *(&v115 - 3) = v93;
      uint64_t v94 = v75;
      *(&v115 - 2) = v149;
      *(&v115 - 1) = (uint64_t)v91;
      swift_retain();
      MutableObservableContainer.mutate(_:)((uint64_t)sub_1000C02B4, (uint64_t)(&v115 - 6));
      swift_release();
      uint64_t v95 = v133;
      v126(v133, (char *)v75, v54);
      unint64_t v96 = v141;
      uint64_t v97 = v142;
      sub_100093680(v142, v141);
      sub_100093680(v97, v96);
      uint64_t v98 = sub_1001EB540();
      os_log_type_t v99 = sub_1001EC910();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v100 = v95;
        uint64_t v101 = swift_slowAlloc();
        uint64_t v140 = swift_slowAlloc();
        uint64_t v150 = v140;
        *(_DWORD *)uint64_t v101 = 136315394;
        uint64_t v102 = sub_1001ED040();
        uint64_t v152 = sub_1001A8090(v102, v103, &v150);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        v147(v100, v54);
        *(_WORD *)(v101 + 12) = 2048;
        uint64_t v104 = v147;
        switch(v96 >> 62)
        {
          case 1uLL:
            int v108 = v142;
            unint64_t v109 = HIDWORD(v142);
            sub_100081714(v142, v141);
            LODWORD(v105) = v109 - v108;
            if (__OFSUB__(v109, v108))
            {
              __break(1u);
LABEL_28:
              __break(1u);
              JUMPOUT(0x1000BB940);
            }
            uint64_t v105 = (int)v105;
LABEL_22:
            unint64_t v96 = v141;
            uint64_t v97 = v142;
LABEL_24:
            uint64_t v152 = v105;
            sub_1001ECBC0();
            sub_100081714(v97, v96);
            _os_log_impl((void *)&_mh_execute_header, v98, v99, "CRDTModelSyncManager q_sync: sending merged=%s as %ld bytes to BCCloudDataManager", (uint8_t *)v101, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v107 = v148;
            break;
          case 2uLL:
            uint64_t v111 = *(void *)(v142 + 16);
            uint64_t v110 = *(void *)(v142 + 24);
            sub_100081714(v142, v141);
            uint64_t v105 = v110 - v111;
            if (!__OFSUB__(v110, v111)) {
              goto LABEL_22;
            }
            goto LABEL_28;
          case 3uLL:
            unint64_t v96 = v141;
            uint64_t v97 = v142;
            sub_100081714(v142, v141);
            uint64_t v105 = 0;
            goto LABEL_24;
          default:
            unint64_t v96 = v141;
            uint64_t v97 = v142;
            sub_100081714(v142, v141);
            uint64_t v105 = BYTE6(v96);
            goto LABEL_24;
        }
      }
      else
      {
        sub_100081714(v97, v96);

        uint64_t v107 = (char *)v94;
        uint64_t v104 = v147;
        v147(v95, v54);
        sub_100081714(v97, v96);
      }
      uint64_t v112 = swift_allocObject();
      id v113 = v121;
      *(void *)(v112 + 16) = v121;
      id v114 = v113;
      sub_1001ADE34(v97, v96, (uint64_t)sub_1000C0904, v112);

      swift_release();
      sub_100081714(v97, v96);
      sub_100081714(v97, v96);
      (*(void (**)(char *, uint64_t))(v129 + 8))(v135, v130);
      sub_1000816A4((uint64_t)v145, (uint64_t *)&unk_100291B90);
      v104(v107, v54);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v143, v144);
    }
  }
  else
  {
    type metadata accessor for CRDTModelSyncManager.SyncError();
    swift_getWitnessTable();
    swift_allocError();
    *char v49 = 0;
    swift_willThrow();
  }
}

void sub_1000BB950(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [*(id *)&v4[qword_100296A30] createTransactionWithName:"com.apple.ibooks.CRDTModelSyncManager.setCloudData"];
  aBlock[0] = type metadata accessor for ReadingHistoryModel(0);
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  uint64_t v8 = sub_1001EC3D0();
  uint64_t v10 = v9;
  uint64_t v11 = (objc_class *)type metadata accessor for CRDTModelSync();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  uint64_t v13 = &v12[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0xE000000000000000;
  *(_OWORD *)&v12[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData] = xmmword_100215AF0;
  sub_100093680(a1, a2);
  v29.receiver = v12;
  v29.super_class = v11;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v29, "init");
  uint64_t v15 = (uint64_t *)&v14[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type];
  *uint64_t v15 = v8;
  v15[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)&v14[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
  uint64_t v17 = *(void *)&v14[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
  unint64_t v18 = *(void *)&v14[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8];
  uint64_t *v16 = a1;
  v16[1] = a2;
  sub_100081700(v17, v18);
  uint64_t v19 = *(void **)&v4[qword_100296A00];
  uint64_t v20 = v14;
  sub_1000BCD84();
  sub_10007DC14(&qword_1002924D0);
  Class isa = sub_1001EC250().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v4;
  v22[3] = a3;
  void v22[4] = a4;
  void v22[5] = v7;
  aBlock[4] = sub_1000C024C;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000BF040;
  void aBlock[3] = &unk_100264658;
  uint64_t v23 = _Block_copy(aBlock);
  uint64_t v24 = v4;
  swift_retain();
  id v25 = v7;
  swift_release();
  [v19 setCloudData:v20 predicate:0 mergers:isa completion:v23];
  _Block_release(v23);
}

void CRDTModelSyncManager.init()()
{
}

void sub_1000BBC08()
{
}

uint64_t sub_1000BBC60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + 0x50);
  uint64_t v5 = *(void *)((swift_isaMask & *v2) + 0x60);
  uint64_t v21 = *(void *)((swift_isaMask & *v2) + 0x58);
  uint64_t v22 = v4;
  uint64_t v6 = type metadata accessor for ModelState();
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000936F8(a1, (uint64_t)v11, (uint64_t *)&unk_100291B90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_100291B90);
  }
  sub_1000C05F8((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  uint64_t v17 = (uint64_t)&v8[*(int *)(v6 + 52)];
  sub_1000816A4(v17, (uint64_t *)&unk_100291B90);
  sub_100093B98((uint64_t)v15, v17, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  __chkstk_darwin(v18);
  uint64_t v19 = v21;
  *(&v20 - 4) = v22;
  *(&v20 - 3) = v19;
  *(&v20 - 2) = v5;
  *(&v20 - 1) = (uint64_t)v8;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_1000C02B4, (uint64_t)(&v20 - 6));
  swift_release();
  sub_100093C10((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, v6);
}

uint64_t sub_1000BBFA8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v95 = (uint8_t *)a3;
  uint64_t v5 = *(void *)((swift_isaMask & *a2) + 0x50);
  uint64_t v6 = *(void *)((swift_isaMask & *a2) + 0x58);
  uint64_t v94 = *(void *)((swift_isaMask & *a2) + 0x60);
  uint64_t v93 = type metadata accessor for ModelState();
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  os_log_t v92 = (os_log_t)((char *)&v75 - v7);
  uint64_t v90 = v6;
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v87 = *(void *)(v8 + 16);
  swift_getAssociatedTypeWitness();
  uint64_t v86 = sub_1001ECB50();
  uint64_t v9 = __chkstk_darwin(v86);
  uint64_t v85 = (char *)&v75 - v10;
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v75 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v75 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v75 - v21;
  sub_1000B74A8((uint64_t)&v75 - v21);
  uint64_t v88 = v8;
  LOBYTE(v6) = sub_1001EBFE0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v96 = v11 + 8;
  uint64_t v97 = v23;
  v23(v22, v5);
  uint64_t v24 = (char *)a2 + qword_1002A41C0;
  uint64_t v89 = v11;
  id v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  if (v6)
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v25(v20, a1, v5);
    uint64_t v84 = a1;
    uint64_t v82 = v26;
    v26(v17, a1, v5);
    id v27 = a2;
    unint64_t v83 = v24;
    id v28 = sub_1001EB540();
    os_log_type_t v29 = sub_1001EC910();
    int v30 = v29;
    BOOL v31 = os_log_type_enabled(v28, v29);
    uint64_t v81 = v22;
    if (v31)
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      v99[0] = v79;
      *(_DWORD *)uint64_t v32 = 136315650;
      int v78 = v30;
      os_log_t v77 = v28;
      uint64_t v33 = sub_1001ED040();
      uint64_t v98 = sub_1001A8090(v33, v34, v99);
      uint64_t v80 = v99;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      os_log_type_t v35 = v97;
      v97(v20, v5);
      uint64_t v76 = v17;
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v75 = v32 + 14;
      sub_1000B74A8((uint64_t)v22);
      uint64_t v36 = sub_1001ED040();
      unint64_t v38 = v37;
      v35(v22, v5);
      uint64_t v98 = sub_1001A8090(v36, v38, v99);
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2080;
      sub_1000B74A8((uint64_t)v22);
      uint64_t v39 = v76;
      sub_1001EC040();
      uint64_t v40 = v97;
      v97(v22, v5);
      uint64_t v41 = sub_1001EC3F0();
      uint64_t v98 = sub_1001A8090(v41, v42, v99);
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      v40(v39, v5);

      os_log_t v43 = v77;
      _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v78, "CRDTModelSyncManager resolveConflictsFor: merging resolved model: incoming=%s vs existing=%s with delta=%s", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v56 = v97;
      v97(v20, v5);

      v56(v17, v5);
    }
    swift_retain();
    os_log_t v57 = v92;
    MutableObservableContainer.value.getter();
    swift_release();
    uint64_t v58 = v84;
    sub_1001EBE70();
    uint64_t v59 = v93;
    unint64_t v60 = (char *)v57 + *(int *)(v93 + 48);
    uint64_t v61 = v90;
    os_log_type_t v62 = v27;
    uint64_t v63 = v94;
    uint64_t v64 = type metadata accessor for ModelState.Source();
    (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v60, v64);
    v82(v60, v58, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v60, 0, 2, v5);
    uint64_t v65 = sub_1000C00F8((uint64_t)v95, (uint64_t)v57 + *(int *)(v59 + 52), (uint64_t *)&unk_100291B90);
    __chkstk_darwin(v65);
    *(&v75 - 4) = v5;
    *(&v75 - 3) = v61;
    *(&v75 - 2) = v63;
    *(&v75 - 1) = (uint64_t)v57;
    swift_retain();
    MutableObservableContainer.mutate(_:)((uint64_t)sub_1000C02B4, (uint64_t)(&v75 - 6));
    swift_release();
    id v66 = v62;
    uint64_t v67 = sub_1001EB540();
    os_log_type_t v68 = sub_1001EC910();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      v99[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 136315138;
      uint64_t v95 = v69 + 4;
      uint64_t v70 = (uint64_t)v81;
      sub_1000B74A8((uint64_t)v81);
      uint64_t v71 = sub_1001ED040();
      unint64_t v73 = v72;
      v97((char *)v70, v5);
      uint64_t v98 = sub_1001A8090(v71, v73, v99);
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "CRDTModelSyncManager resolveConflictsFor: resolved model=%s", v69, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return (*(uint64_t (**)(os_log_t, uint64_t))(v91 + 8))(v92, v93);
  }
  else
  {
    v25(v14, a1, v5);
    uint64_t v44 = a2;
    unint64_t v45 = sub_1001EB540();
    os_log_type_t v46 = sub_1001EC910();
    int v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      v99[0] = v93;
      *(_DWORD *)uint64_t v48 = 136315394;
      os_log_t v92 = v45;
      uint64_t v49 = sub_1001ED040();
      uint64_t v98 = sub_1001A8090(v49, v50, v99);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      LODWORD(v91) = v47;
      unint64_t v51 = v97;
      v97(v14, v5);
      *(_WORD *)(v48 + 12) = 2080;
      uint64_t v90 = v48 + 14;
      sub_1000B74A8((uint64_t)v22);
      uint64_t v52 = sub_1001ED040();
      unint64_t v54 = v53;
      v51(v22, v5);
      uint64_t v98 = sub_1001A8090(v52, v54, v99);
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      os_log_t v55 = v92;
      _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v91, "CRDTModelSyncManager resolveConflictsFor: incoming=%s has no delta from existing=%s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v97(v14, v5);
    }
    return sub_1000BBC60((uint64_t)v95);
  }
}

uint64_t sub_1000BCA68()
{
  return sub_1001EC9E0();
}

uint64_t sub_1000BCACC()
{
  id v1 = (unsigned __int8 *)(*v0 + direct field offset for CRDTModelSyncManager.enableCloudSync);
  swift_beginAccess();
  return *v1;
}

void sub_1000BCB18(char a1)
{
}

void (*sub_1000BCB3C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1000B7B44(v2);
  return sub_1000BCB98;
}

void sub_1000BCB98(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1000BCBE0()
{
  sub_10007DC14(&qword_100291BB0);
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_1000BCC58(uint64_t a1)
{
  uint64_t v3 = sub_1001EBA60();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *v1;
  sub_1001EBA50();
  uint64_t v10 = v7;
  uint64_t v11 = a1;
  char v12 = 0;
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1000BCD84()
{
  uint64_t v1 = qword_100296A28;
  if (*(void *)(v0 + qword_100296A28))
  {
    unint64_t v2 = *(void *)(v0 + qword_100296A28);
  }
  else
  {
    unint64_t v2 = sub_1000BCDEC();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t sub_1000BCDEC()
{
  type metadata accessor for ReadingHistoryModel(0);
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  uint64_t v0 = sub_1001EC3D0();
  unint64_t v2 = v1;
  sub_1001EC530();
  uint64_t v3 = sub_1001EC3E0();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();
  Swift::Int v6 = sub_100152E34(15, v3, v5, v0, v2);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = v6;
  void v10[4] = v8;
  uint64_t v18 = sub_1000C02A8;
  uint64_t v19 = v10;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_1001B08A8;
  uint64_t v17 = &unk_1002646D0;
  uint64_t v11 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  sub_10007DC14((uint64_t *)&unk_1002924E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215320;
  uint64_t aBlock = (void **)v6;
  uint64_t v15 = v8;
  sub_1001ECCD0();
  *(void *)(inited + 72) = v11;
  return sub_100121104(inited);
}

void sub_1000BCFB8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  unint64_t v201 = a4;
  uint64_t v200 = a3;
  v199 = (uint8_t *)a2;
  v203 = a6;
  uint64_t v202 = sub_1001EB560();
  uint64_t v8 = *(void *)(v202 - 8);
  __chkstk_darwin(v202);
  uint64_t v10 = (char *)&v176 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_1001EBF80();
  uint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  v190 = (char *)&v176 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v197 = *(void *)(v196 - 8);
  uint64_t v12 = __chkstk_darwin(v196);
  uint64_t v188 = (uint64_t)&v176 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v192 = (uint64_t)&v176 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v182 = (uint64_t)&v176 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v189 = (uint64_t)&v176 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v186 = (uint64_t)&v176 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v187 = (uint64_t)&v176 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v185 = (uint64_t)&v176 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v193 = (uint64_t)&v176 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v191 = (uint64_t)&v176 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v194 = (uint64_t)&v176 - v31;
  __chkstk_darwin(v30);
  uint64_t v195 = (uint64_t)&v176 - v32;
  uint64_t v33 = sub_10007DC14(&qword_100291BB8);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v36 = (char *)&v176 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v176 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v198 = (uint64_t)&v176 - v41;
  __chkstk_darwin(v40);
  os_log_t v43 = (char *)&v176 - v42;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  unint64_t v45 = (char *)Strong;
  sub_100087AE8(a1, (uint64_t)v209);
  if (!swift_dynamicCast())
  {

    goto LABEL_7;
  }
  uint64_t v180 = v43;
  v181 = v45;
  if (v213[0] != v201 || v213[1] != a5)
  {
    char v57 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v57) {
      goto LABEL_14;
    }

LABEL_7:
    swift_beginAccess();
    uint64_t v46 = swift_unknownObjectWeakLoadStrong();
    if (v46)
    {
      int v47 = (void *)v46;
      uint64_t v48 = v202;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v46 + qword_1002A4300, v202);

      sub_100087AE8(a1, (uint64_t)v209);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v49 = sub_1001EB540();
      os_log_type_t v50 = sub_1001EC910();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = swift_slowAlloc();
        uint64_t v206 = swift_slowAlloc();
        *(_DWORD *)uint64_t v51 = 136315650;
        uint64_t v200 = v8;
        swift_beginAccess();
        v213[0] = swift_unknownObjectWeakLoadStrong();
        sub_10007DC14((uint64_t *)&unk_1002924F0);
        uint64_t v52 = sub_1001EC3D0();
        v213[0] = sub_1001A8090(v52, v53, &v206);
        sub_1001ECBC0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 12) = 2080;
        sub_100087AE8((uint64_t)v209, (uint64_t)v213);
        uint64_t v54 = sub_1001EC3D0();
        v213[0] = sub_1001A8090(v54, v55, &v206);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1000947F0((uint64_t)v209);
        *(_WORD *)(v51 + 22) = 2080;
        swift_bridgeObjectRetain();
        v213[0] = sub_1001A8090(v201, a5, &v206);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "CloudSyncConflictResolver: self=%s key=%s is not equal to recordType=%s", (uint8_t *)v51, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v200 + 8))(v10, v202);
      }
      else
      {
        swift_release_n();
        sub_1000947F0((uint64_t)v209);

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v48);
      }
    }
    uint64_t v56 = v203;
    *(_OWORD *)v203 = 0u;
    *((_OWORD *)v56 + 1) = 0u;
    return;
  }
  swift_bridgeObjectRelease();
LABEL_14:
  sub_1000936F8((uint64_t)v199, (uint64_t)v209, &qword_100295B50);
  sub_1000936F8(v200, (uint64_t)v211, &qword_100295B50);
  uint64_t v58 = v181;
  if (v210)
  {
    sub_1000936F8((uint64_t)v209, (uint64_t)v213, &qword_100295B50);
    char v59 = swift_dynamicCast();
    unint64_t v60 = v203;
    if (v59)
    {
      uint64_t v61 = v213[4];
      unint64_t v62 = v213[5];
      if (!v212)
      {
        unint64_t v72 = sub_1001EB540();
        os_log_type_t v73 = sub_1001EC910();
        if (os_log_type_enabled(v72, v73))
        {
          int v74 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v74 = 0;
          _os_log_impl((void *)&_mh_execute_header, v72, v73, "CloudSyncConflictResolver: no incoming data", v74, 2u);
          swift_slowDealloc();
        }

        sub_1000947F0((uint64_t)v213);
        sub_1000816A4((uint64_t)v211, &qword_100295B50);
        sub_1000816A4((uint64_t)v209, &qword_100295B50);
        uint64_t v75 = v61;
        goto LABEL_31;
      }
      sub_1000936F8((uint64_t)v211, (uint64_t)v208, &qword_100295B50);
      if (swift_dynamicCast())
      {
        uint64_t v202 = v206;
        unint64_t v201 = v207;
        if (sub_1001578E8(v61, v62, v206, v207))
        {
          uint64_t v63 = sub_1001EB540();
          os_log_type_t v64 = sub_1001EC910();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v65 = 0;
            _os_log_impl((void *)&_mh_execute_header, v63, v64, "CloudSyncConflictResolver: incoming data and existing data are identical", v65, 2u);
            swift_slowDealloc();
          }

          v60[3] = (uint64_t)&type metadata for Data;
          sub_100081714(v202, v201);

          *unint64_t v60 = v61;
          v60[1] = v62;
          goto LABEL_52;
        }
        uint64_t v76 = qword_100296A20;
        os_log_t v77 = *(void **)&v58[qword_100296A20];
        sub_100093680(v61, v62);
        uint64_t v78 = sub_1000C0768((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
        id v79 = v77;
        uint64_t v80 = (uint64_t)v180;
        uint64_t v200 = v61;
        uint64_t v81 = v196;
        v199 = (uint8_t *)v78;
        sub_1001EC020();
        unint64_t v179 = v62;
        uint64_t v82 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v197 + 56);
        v82(v80, 0, 1, v81);
        uint64_t v178 = v76;
        id v83 = *(id *)&v58[v76];
        sub_100093680(v202, v201);
        sub_1001EC020();
        uint64_t v84 = v81;
        unint64_t v85 = v179;
        uint64_t v86 = v197;
        uint64_t v87 = v198;
        v82(v198, 0, 1, v84);
        sub_1000936F8((uint64_t)v180, (uint64_t)v39, &qword_100291BB8);
        uint64_t v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
        if (v88(v39, 1, v84) == 1)
        {
          sub_1000816A4((uint64_t)v39, &qword_100291BB8);
          uint64_t v89 = v200;
          sub_100093680(v200, v85);
          sub_100093680(v89, v85);
          uint64_t v90 = sub_1001EB540();
          os_log_type_t v91 = sub_1001EC910();
          if (os_log_type_enabled(v90, v91))
          {
            os_log_t v92 = (uint8_t *)swift_slowAlloc();
            v205[0] = swift_slowAlloc();
            *(_DWORD *)os_log_t v92 = 136315138;
            v199 = v92 + 4;
            sub_100093680(v200, v85);
            uint64_t v93 = sub_1001EAF90();
            unint64_t v95 = v94;
            sub_100081714(v200, v85);
            uint64_t v204 = sub_1001A8090(v93, v95, v205);
            uint64_t v89 = v200;
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            sub_100081714(v89, v85);
            sub_100081714(v89, v85);
            _os_log_impl((void *)&_mh_execute_header, v90, v91, "CloudSyncConflictResolver: failed to deserialize either existingModel from %s", v92, 0xCu);
            swift_arrayDestroy();
            uint64_t v87 = v198;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100081714(v89, v85);
            sub_100081714(v89, v85);
          }
          unint64_t v108 = v201;
          unint64_t v109 = v203;
          v203[3] = (uint64_t)&type metadata for Data;

          sub_100081714(v202, v108);
          uint64_t *v109 = v89;
          v109[1] = v85;
LABEL_50:
          uint64_t v130 = v87;
LABEL_51:
          sub_1000816A4(v130, &qword_100291BB8);
          sub_1000816A4((uint64_t)v180, &qword_100291BB8);
LABEL_52:
          sub_1000947F0((uint64_t)v208);
          sub_1000947F0((uint64_t)v213);
          sub_1000816A4((uint64_t)v211, &qword_100295B50);
          sub_1000816A4((uint64_t)v209, &qword_100295B50);
          return;
        }
        uint64_t v96 = (uint64_t)v39;
        uint64_t v97 = v195;
        sub_1000C05F8(v96, v195, type metadata accessor for ReadingHistoryModel);
        sub_1000936F8(v87, (uint64_t)v36, &qword_100291BB8);
        if (v88(v36, 1, v84) == 1)
        {
          sub_1000816A4((uint64_t)v36, &qword_100291BB8);
          uint64_t v98 = v202;
          unint64_t v99 = v201;
          sub_100093680(v202, v201);
          sub_100093680(v98, v99);
          uint64_t v100 = sub_1001EB540();
          os_log_type_t v101 = sub_1001EC910();
          if (os_log_type_enabled(v100, v101))
          {
            uint64_t v102 = (uint8_t *)swift_slowAlloc();
            v205[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v102 = 136315138;
            v199 = v102 + 4;
            sub_100093680(v202, v201);
            unint64_t v103 = v85;
            uint64_t v104 = sub_1001EAF90();
            unint64_t v106 = v105;
            sub_100081714(v202, v201);
            uint64_t v107 = v104;
            unint64_t v85 = v103;
            unint64_t v99 = v201;
            uint64_t v204 = sub_1001A8090(v107, v106, v205);
            uint64_t v98 = v202;
            sub_1001ECBC0();
            uint64_t v97 = v195;
            swift_bridgeObjectRelease();
            sub_100081714(v98, v99);
            sub_100081714(v98, v99);
            _os_log_impl((void *)&_mh_execute_header, v100, v101, "CloudSyncConflictResolver: failed to deserialize either incomingModel from %s", v102, 0xCu);
            swift_arrayDestroy();
            uint64_t v87 = v198;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100081714(v98, v99);
            sub_100081714(v98, v99);
          }
          uint64_t v128 = v200;
          uint64_t v129 = v203;
          v203[3] = (uint64_t)&type metadata for Data;

          sub_100081714(v98, v99);
          *uint64_t v129 = v128;
          v129[1] = v85;
          sub_100093C10(v97, type metadata accessor for ReadingHistoryModel);
          goto LABEL_50;
        }
        uint64_t v110 = (uint64_t)v36;
        uint64_t v111 = v194;
        sub_1000C05F8(v110, v194, type metadata accessor for ReadingHistoryModel);
        char v112 = sub_1001EBFE0();
        uint64_t v113 = v202;
        if (v112)
        {
          if (sub_1001EBFE0())
          {
            uint64_t v114 = v185;
            sub_100093B98(v97, v185, type metadata accessor for ReadingHistoryModel);
            uint64_t v115 = v187;
            sub_100093B98(v111, v187, type metadata accessor for ReadingHistoryModel);
            os_log_t v116 = sub_1001EB540();
            os_log_type_t v117 = sub_1001EC910();
            int v118 = v117;
            BOOL v119 = os_log_type_enabled(v116, v117);
            v177 = v211;
            if (v119)
            {
              uint64_t v120 = swift_slowAlloc();
              uint64_t v197 = swift_slowAlloc();
              v205[0] = v197;
              *(_DWORD *)uint64_t v120 = 136315394;
              uint64_t v191 = v120 + 4;
              LODWORD(v193) = v118;
              uint64_t v121 = v182;
              sub_100093B98(v114, v182, type metadata accessor for ReadingHistoryModel);
              sub_100093C10(v114, type metadata accessor for ReadingHistoryModel);
              unint64_t v122 = ReadingHistoryModel.description.getter();
              unint64_t v124 = v123;
              sub_100093C10(v121, type metadata accessor for ReadingHistoryModel);
              uint64_t v204 = sub_1001A8090(v122, v124, v205);
              sub_1001ECBC0();
              swift_bridgeObjectRelease();
              *(_WORD *)(v120 + 12) = 2080;
              uint64_t v191 = v120 + 14;
              sub_100093B98(v115, v121, type metadata accessor for ReadingHistoryModel);
              sub_100093C10(v115, type metadata accessor for ReadingHistoryModel);
              unint64_t v125 = ReadingHistoryModel.description.getter();
              unint64_t v127 = v126;
              sub_100093C10(v121, type metadata accessor for ReadingHistoryModel);
              uint64_t v204 = sub_1001A8090(v125, v127, v205);
              sub_1001ECBC0();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v193, "CloudSyncConflictResolver: merging existing=%s with incoming=%s", (uint8_t *)v120, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_100093C10(v115, type metadata accessor for ReadingHistoryModel);
              sub_100093C10(v114, type metadata accessor for ReadingHistoryModel);
            }

            uint64_t v156 = v192;
            sub_1001EC010();
            uint64_t v157 = v188;
            sub_100093B98(v156, v188, type metadata accessor for ReadingHistoryModel);
            id v158 = sub_1001EB540();
            os_log_type_t v159 = sub_1001EC910();
            if (os_log_type_enabled(v158, v159))
            {
              v160 = (uint8_t *)swift_slowAlloc();
              v205[0] = swift_slowAlloc();
              *(_DWORD *)v160 = 136315138;
              v199 = v160 + 4;
              uint64_t v161 = v182;
              sub_100093B98(v157, v182, type metadata accessor for ReadingHistoryModel);
              sub_100093C10(v157, type metadata accessor for ReadingHistoryModel);
              unint64_t v162 = ReadingHistoryModel.description.getter();
              unint64_t v164 = v163;
              sub_100093C10(v161, type metadata accessor for ReadingHistoryModel);
              uint64_t v204 = sub_1001A8090(v162, v164, v205);
              sub_1001ECBC0();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v158, v159, "CloudSyncConflictResolver: merged=%s", v160, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_100093C10(v157, type metadata accessor for ReadingHistoryModel);
            }

            uint64_t v58 = v181;
            uint64_t v169 = (uint64_t)v177;
            unint64_t v170 = v179;
            uint64_t v171 = (uint64_t)v180;
            uint64_t v172 = v184;
            uint64_t v173 = v183;
            (*(void (**)(char *, void, uint64_t))(v183 + 104))(v190, enum case for CRCodableVersion.version1(_:), v184);
            sub_1000C0768((unint64_t *)&unk_1002924B0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
            uint64_t v174 = sub_1001EBE50();
            unint64_t v62 = v175;
            sub_100081714(v202, v201);
            sub_100081714(v200, v170);
            unint64_t v60 = v203;
            (*(void (**)(char *, uint64_t))(v173 + 8))(v190, v172);
            sub_100093C10(v192, type metadata accessor for ReadingHistoryModel);
            sub_100093C10(v194, type metadata accessor for ReadingHistoryModel);
            sub_100093C10(v195, type metadata accessor for ReadingHistoryModel);
            sub_1000816A4(v198, &qword_100291BB8);
            sub_1000816A4(v171, &qword_100291BB8);
            sub_1000947F0((uint64_t)v208);
            sub_1000947F0((uint64_t)v213);
            sub_1000816A4(v169, &qword_100295B50);
            sub_1000816A4((uint64_t)v209, &qword_100295B50);
            if (v62 >> 60 != 15)
            {
              uint64_t v61 = v174;
              uint64_t v75 = v174;
LABEL_31:
              sub_100093680(v75, v62);
              v60[3] = (uint64_t)&type metadata for Data;
              sub_100081700(v61, v62);

              *unint64_t v60 = v61;
              v60[1] = v62;
              return;
            }
LABEL_35:

            *(_OWORD *)unint64_t v60 = 0u;
            *((_OWORD *)v60 + 1) = 0u;
            return;
          }
          uint64_t v142 = v186;
          sub_100093B98(v97, v186, type metadata accessor for ReadingHistoryModel);
          uint64_t v143 = v189;
          sub_100093B98(v111, v189, type metadata accessor for ReadingHistoryModel);
          uint64_t v144 = sub_1001EB540();
          os_log_type_t v145 = sub_1001EC910();
          int v146 = v145;
          if (os_log_type_enabled(v144, v145))
          {
            uint64_t v147 = swift_slowAlloc();
            v205[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v147 = 136315394;
            LODWORD(v199) = v146;
            unint64_t v148 = ReadingHistoryModel.description.getter();
            uint64_t v204 = sub_1001A8090(v148, v149, v205);
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            sub_100093C10(v142, type metadata accessor for ReadingHistoryModel);
            *(_WORD *)(v147 + 12) = 2080;
            uint64_t v150 = v189;
            unint64_t v151 = ReadingHistoryModel.description.getter();
            uint64_t v204 = sub_1001A8090(v151, v152, v205);
            uint64_t v97 = v195;
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            uint64_t v111 = v194;
            sub_100093C10(v150, type metadata accessor for ReadingHistoryModel);
            _os_log_impl((void *)&_mh_execute_header, v144, (os_log_type_t)v199, "CloudSyncConflictResolver: no delta on existing=%s from incoming=%s", (uint8_t *)v147, 0x16u);
            swift_arrayDestroy();
            uint64_t v113 = v202;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100093C10(v142, type metadata accessor for ReadingHistoryModel);
            sub_100093C10(v143, type metadata accessor for ReadingHistoryModel);
          }
          v165 = v203;
          unint64_t v166 = v179;
          uint64_t v167 = v200;
          unint64_t v168 = v201;
          v203[3] = (uint64_t)&type metadata for Data;

          sub_100081714(v167, v166);
          uint64_t *v165 = v113;
          v165[1] = v168;
        }
        else
        {
          uint64_t v131 = v191;
          sub_100093B98(v111, v191, type metadata accessor for ReadingHistoryModel);
          uint64_t v132 = v193;
          sub_100093B98(v97, v193, type metadata accessor for ReadingHistoryModel);
          uint64_t v133 = sub_1001EB540();
          os_log_type_t v134 = sub_1001EC910();
          int v135 = v134;
          if (os_log_type_enabled(v133, v134))
          {
            uint64_t v136 = swift_slowAlloc();
            v205[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v136 = 136315394;
            LODWORD(v199) = v135;
            unint64_t v137 = ReadingHistoryModel.description.getter();
            uint64_t v204 = sub_1001A8090(v137, v138, v205);
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            sub_100093C10(v131, type metadata accessor for ReadingHistoryModel);
            *(_WORD *)(v136 + 12) = 2080;
            uint64_t v139 = v193;
            unint64_t v140 = ReadingHistoryModel.description.getter();
            uint64_t v204 = sub_1001A8090(v140, v141, v205);
            unint64_t v85 = v179;
            uint64_t v97 = v195;
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            uint64_t v111 = v194;
            sub_100093C10(v139, type metadata accessor for ReadingHistoryModel);
            _os_log_impl((void *)&_mh_execute_header, v133, (os_log_type_t)v199, "CloudSyncConflictResolver: no delta on incoming=%s from existing=%s", (uint8_t *)v136, 0x16u);
            swift_arrayDestroy();
            uint64_t v113 = v202;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100093C10(v131, type metadata accessor for ReadingHistoryModel);
            sub_100093C10(v132, type metadata accessor for ReadingHistoryModel);
          }
          Swift::String v153 = v203;
          uint64_t v154 = v200;
          unint64_t v155 = v201;
          v203[3] = (uint64_t)&type metadata for Data;

          sub_100081714(v113, v155);
          *Swift::String v153 = v154;
          v153[1] = v85;
        }
        sub_100093C10(v111, type metadata accessor for ReadingHistoryModel);
        sub_100093C10(v97, type metadata accessor for ReadingHistoryModel);
        uint64_t v130 = v198;
        goto LABEL_51;
      }
      sub_100081714(v61, v62);
      sub_1000947F0((uint64_t)v208);
    }
    goto LABEL_33;
  }
  unint64_t v60 = v203;
  if (!v212)
  {
LABEL_34:
    sub_1000816A4((uint64_t)v209, &qword_100292500);
    goto LABEL_35;
  }
  sub_1000936F8((uint64_t)v211, (uint64_t)v213, &qword_100295B50);
  if (!swift_dynamicCast())
  {
LABEL_33:
    sub_1000947F0((uint64_t)v213);
    goto LABEL_34;
  }
  id v66 = v60;
  uint64_t v67 = v208[0];
  uint64_t v68 = v208[1];
  uint64_t v69 = sub_1001EB540();
  os_log_type_t v70 = sub_1001EC910();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v71 = 0;
    _os_log_impl((void *)&_mh_execute_header, v69, v70, "CloudSyncConflictResolver: no existing data", v71, 2u);
    swift_slowDealloc();
  }

  sub_1000947F0((uint64_t)v213);
  sub_1000816A4((uint64_t)v211, &qword_100295B50);
  sub_1000816A4((uint64_t)v209, &qword_100295B50);
  v66[3] = (uint64_t)&type metadata for Data;

  *id v66 = v67;
  v66[1] = v68;
}

id sub_1000BEDF4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, void *a7)
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = sub_1001EB540();
  os_log_type_t v12 = sub_1001EC910();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v17 = a5;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134218498;
    sub_1001ECBC0();
    *(_WORD *)(v13 + 12) = 2048;
    sub_1001ECBC0();
    *(_WORD *)(v13 + 22) = 2080;
    if (a3)
    {
      swift_getErrorValue();
      sub_1001ED110();
    }
    sub_10007DC14(&qword_1002924D8);
    uint64_t v14 = sub_1001EC3D0();
    sub_1001A8090(v14, v15, &v18);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "CRDTModelCloudDataManager q_sync: BCCloudDataManager is done: success=%ld hasChanges=%ld error=%s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a5 = v17;
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  a5(a1 & 1);
  return [a7 endTransaction];
}

void sub_1000BF040(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t sub_1000BF0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ModelState.Source();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(a4 - 8);
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ModelState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, a4);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, 2, 2, a4);
  sub_1000936F8(a3, (uint64_t)v10, (uint64_t *)&unk_100291B90);
  return ModelState.init(model:loaded:source:revisionInfo:)((uint64_t)v17, 1, (uint64_t)v14, (uint64_t)v10, a4, a1);
}

uint64_t sub_1000BF2F4()
{
  return sub_1000C0060((uint64_t (*)(void, void))sub_1000BA908);
}

uint64_t sub_1000BF320@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + qword_100292380);
  return swift_retain();
}

char *sub_1000BF348(void *a1, void *a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v80 = a3;
  uint64_t v81 = a5;
  id v84 = a2;
  id v79 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v6 - 8);
  os_log_t v77 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v75 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10007DC14((uint64_t *)&unk_100291CA0) - 8;
  uint64_t v10 = __chkstk_darwin(v73);
  uint64_t v78 = (uint64_t)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  int v74 = (char *)v68 - v13;
  __chkstk_darwin(v12);
  uint64_t v76 = (uint64_t)v68 - v14;
  uint64_t v15 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v70 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v72 = (uint64_t)v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v68 - v18;
  id v83 = (char *)sub_1001EC9C0();
  uint64_t v71 = *((void *)v83 - 1);
  __chkstk_darwin(v83);
  uint64_t v21 = (char *)v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1001EC990();
  __chkstk_darwin(v22 - 8);
  uint64_t v23 = sub_1001EBAA0();
  __chkstk_darwin(v23 - 8);
  v68[1] = &a4[qword_1002A41C0];
  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  uint64_t v24 = a4;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&aBlock, "CRDTModelSync.");
  HIBYTE(aBlock) = -18;
  uint64_t v90 = v15;
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  uint64_t v25 = sub_1001EC3D0();
  unint64_t v27 = v26;
  sub_1001EC530();
  uint64_t v28 = sub_1001EC3E0();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  Swift::Int v31 = sub_100152E34(15, v28, v30, v25, v27);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v92._countAndFlagsBits = v31;
  v92._object = v33;
  sub_1001EC490(v92);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  uint64_t v34 = qword_100292370;
  sub_1000C0728();
  sub_1001EBA90();
  sub_1001EC980();
  (*(void (**)(char *, void, char *))(v71 + 104))(v21, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v83);
  *(void *)&v24[v34] = sub_1001ECA00();
  v24[direct field offset for CRDTModelSyncManager.enableCloudSync] = 0;
  uint64_t v69 = v24;
  sub_10007DC14(&qword_100291FC0);
  sub_1000815A4(&qword_100291240, &qword_100291FC0);
  sub_1000815A4(&qword_100291248, &qword_100291FC0);
  sub_1001EBF00();
  uint64_t v35 = v70;
  sub_1001EB0C0();
  sub_1000C0768(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001EBF00();
  *(void *)&v19[*(int *)(v35 + 24)] = &_swiftEmptyDictionarySingleton;
  *(void *)&v24[qword_100292378] = v84;
  id v83 = v19;
  uint64_t v36 = v72;
  sub_100093B98((uint64_t)v19, v72, type metadata accessor for ReadingHistoryModel);
  uint64_t v37 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v38 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v75, 1, 2, v37);
  uint64_t v39 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
  uint64_t v41 = (uint64_t)v77;
  v40(v77, 1, 1, v39);
  uint64_t v42 = v73;
  uint64_t v43 = (uint64_t)v74;
  uint64_t v44 = (uint64_t)&v74[*(int *)(v73 + 60)];
  v40((char *)v44, 1, 1, v39);
  sub_1000C05F8(v36, v43, type metadata accessor for ReadingHistoryModel);
  *(unsigned char *)(v43 + *(int *)(v42 + 52)) = 0;
  sub_1000935F8(v38, v43 + *(int *)(v42 + 56), (uint64_t *)&unk_100291BA0);
  id v45 = v84;
  sub_100093484(v41, v44);
  uint64_t v46 = v76;
  sub_1000935F8(v43, v76, (uint64_t *)&unk_100291CA0);
  uint64_t v47 = v46;
  sub_1000936F8(v46, v43, (uint64_t *)&unk_100291CA0);
  sub_10007DC14(&qword_100291BB0);
  swift_allocObject();
  uint64_t v48 = v78;
  sub_1000936F8(v43, v78, (uint64_t *)&unk_100291CA0);
  uint64_t v49 = sub_100090B34(v48);
  sub_1000816A4(v43, (uint64_t *)&unk_100291CA0);
  os_log_type_t v50 = v69;
  *(void *)&v69[qword_100292380] = v49;
  uint64_t v51 = v79;
  uint64_t v52 = v80;
  *(void *)&v50[qword_100292390] = v79;
  *(void *)&v50[qword_100292398] = v52;
  unint64_t v53 = v50;
  type metadata accessor for ObservableTransaction();
  uint64_t v54 = (void *)swift_allocObject();
  swift_unknownObjectRetain_n();
  unint64_t v55 = v51;
  *(void *)&v53[qword_100292388] = sub_10017800C(0xD000000000000030, 0x8000000100222280, v52, v54);

  v91.receiver = v53;
  v91.super_class = ObjectType;
  uint64_t v56 = (char *)objc_msgSendSuper2(&v91, "init");
  uint64_t v57 = *(void *)&v56[qword_100292380] + *(void *)(**(void **)&v56[qword_100292380] + 128);
  swift_beginAccess();
  *(void *)(v57 + _Block_object_dispose(&STACK[0x3B0], 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  uint64_t v58 = v56;
  char v59 = sub_1001EB540();
  os_log_type_t v60 = sub_1001EC910();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v61 = 0;
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "CRDTModelSyncManager Init: About to load cloudData", v61, 2u);
    swift_slowDealloc();
  }

  uint64_t v62 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v63 = *(void **)&v55[qword_100296A00];
  uint64_t v64 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v65 = (void *)swift_allocObject();
  v65[2] = v64;
  v65[3] = sub_1000934EC;
  v65[4] = v62;
  uint64_t v88 = sub_100092A2C;
  uint64_t v89 = v65;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v86 = sub_100090AB4;
  uint64_t v87 = &unk_1002647E8;
  id v66 = _Block_copy(&aBlock);
  swift_retain_n();
  swift_release();
  [v63 cloudDataWithPredicate:0 sortDescriptors:0 completion:v66];
  _Block_release(v66);

  swift_unknownObjectRelease();
  swift_release();

  sub_1000816A4(v47, (uint64_t *)&unk_100291CA0);
  sub_100093C10((uint64_t)v83, type metadata accessor for ReadingHistoryModel);
  swift_release();
  return v58;
}

void sub_1000BFDF4()
{
}

uint64_t sub_1000BFE24()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000BFE44()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelSyncManager()
{
  return sub_1000C08A4();
}

uint64_t sub_1000BFF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

unsigned char *sub_1000BFF28(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BFFF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelSyncManager.SyncError()
{
  return sub_1000C08A4();
}

uint64_t sub_1000C0034()
{
  return sub_1000C0060((uint64_t (*)(void, void))sub_1000B96C8);
}

uint64_t sub_1000C0060(uint64_t (*a1)(void, void))
{
  return a1(*(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_1000C0094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistoryModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C00F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10007DC14(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C015C()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000C0194()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C01A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C01B4()
{
  return swift_release();
}

uint64_t sub_1000C01BC()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000C01F4()
{
  return [*(id *)(v0 + 16) endTransaction];
}

uint64_t sub_1000C0204()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

id sub_1000C024C(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1000BEDF4(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(void))(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1000C0258()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C0290()
{
  return sub_1000C07C8((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1000C02A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1000BCFB8(a1, a2, a3, *(void *)(v4 + 24), *(void *)(v4 + 32), a4);
}

uint64_t sub_1000C02B8@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 16) + qword_100292380);
  return swift_retain();
}

uint64_t sub_1000C02E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B778C(a1);
}

uint64_t sub_1000C0300()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_10007DC14((uint64_t *)&unk_100291B90) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  uint64_t v10 = type metadata accessor for CRDTModelRevisionInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v0 + v8, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v0 + v8 + *(int *)(v10 + 24);
    uint64_t v12 = sub_1001EB0C0();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
  }
  return _swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_1000C050C()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v3 = *(void *)(sub_10007DC14((uint64_t *)&unk_100291B90) - 8);
  uint64_t v4 = *(void **)(v0 + v2);
  uint64_t v5 = v0 + ((v2 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1000BBFA8(v0 + v1, v4, v5);
}

uint64_t sub_1000C05E8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C05F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C0660(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1000C0718(uint64_t a1)
{
  return sub_1000BF0C8(a1, v1[5], v1[6], v1[2]);
}

unint64_t sub_1000C0728()
{
  unint64_t result = qword_1002919A0;
  if (!qword_1002919A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002919A0);
  }
  return result;
}

uint64_t sub_1000C0768(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C07B0()
{
  return sub_1000C07C8((void (*)(void))&_swift_release);
}

uint64_t sub_1000C07C8(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_1000C0818()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000C0850(void *a1)
{
  return sub_1000B8604(a1);
}

uint64_t sub_1000C085C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C089C()
{
  return sub_1000B8864(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000C08A4()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000C08D4@<X0>(void *a1@<X8>)
{
  return sub_1000C02B8(a1);
}

uint64_t sub_1000C0924(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_1002925C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1000C1950();
  sub_1001ED1F0();
  uint64_t v9 = v3[1];
  uint64_t v12 = *v3;
  uint64_t v13 = v9;
  v11[15] = 0;
  sub_1000C1AB8();
  sub_1001ED020();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1001ECFF0();
    _s8CardItemVMa();
    LOBYTE(v12) = 2;
    sub_1001EB0C0();
    sub_1000B4468(&qword_100292138);
    sub_1001ED020();
    LOBYTE(v12) = 3;
    sub_1001ED000();
    LOBYTE(v12) = 4;
    sub_1001ECFE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000C0B68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v28 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10007DC14(&qword_1002925A8);
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s8CardItemVMa();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  unint64_t v30 = a1;
  sub_100094758(a1, v12);
  sub_1000C1950();
  sub_1001ED1D0();
  if (v2) {
    return sub_1000947F0((uint64_t)v30);
  }
  uint64_t v13 = v6;
  uint64_t v25 = v9;
  uint64_t v14 = (uint64_t)v11;
  uint64_t v15 = v28;
  char v33 = 0;
  sub_1000C19A4();
  uint64_t v16 = v29;
  sub_1001ECFA0();
  uint64_t v17 = v32;
  *(void *)uint64_t v14 = v31;
  *(void *)(v14 + _Block_object_dispose(&STACK[0x3B0], 8) = v17;
  LOBYTE(v31) = 1;
  *(unsigned char *)(v14 + 16) = sub_1001ECF70() & 1;
  LOBYTE(v31) = 2;
  sub_1000B4468(&qword_100292148);
  sub_1001ECFA0();
  uint64_t v18 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14 + *(int *)(v25 + 24), v13, v4);
  LOBYTE(v31) = 3;
  sub_1001ECF80();
  *(void *)(v14 + *(int *)(v18 + 28)) = v19;
  LOBYTE(v31) = 4;
  uint64_t v20 = sub_1001ECF60();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v16);
  uint64_t v23 = (uint64_t *)(v14 + *(int *)(v18 + 32));
  uint64_t *v23 = v20;
  v23[1] = v22;
  sub_1000C19F8(v14, v26);
  sub_1000947F0((uint64_t)v30);
  return sub_1000C1A5C(v14);
}

uint64_t sub_1000C0F8C()
{
  uint64_t result = 0x44496D616461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x626F696475417369;
      break;
    case 2:
      uint64_t result = 1702125924;
      break;
    case 3:
      uint64_t result = 0x6563697270;
      break;
    case 4:
      uint64_t result = 0x657474616D726F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000C103C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000C1DA8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000C1064(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1000C1070(uint64_t a1)
{
  unint64_t v2 = sub_1000C1950();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000C10AC(uint64_t a1)
{
  unint64_t v2 = sub_1000C1950();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C10EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000C0B68(a1, a2);
}

uint64_t sub_1000C1104(void *a1)
{
  return sub_1000C0924(a1);
}

uint64_t sub_1000C111C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_1001ED080(), result = 0, (v5 & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16)
      && (uint64_t v7 = _s8CardItemVMa(), (sub_1001EB090() & 1) != 0)
      && *(double *)(a1 + *(int *)(v7 + 28)) == *(double *)(a2 + *(int *)(v7 + 28)))
    {
      uint64_t v8 = *(int *)(v7 + 32);
      uint64_t v9 = *(void *)(a1 + v8);
      uint64_t v10 = *(void *)(a1 + v8 + 8);
      uint64_t v11 = (void *)(a2 + v8);
      if (v9 == *v11 && v10 == v11[1])
      {
        return 1;
      }
      else
      {
        return sub_1001ED080();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t _s8CardItemVMa()
{
  uint64_t result = qword_100292560;
  if (!qword_100292560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1000C1254(uint64_t a1, uint64_t *a2, int *a3)
{
  BOOL v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    void *v4 = *a2;
    BOOL v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1001EB0C0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000C1374(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C1404(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001EB0C0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000C14D4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000C15B8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  return a1;
}

uint64_t sub_1000C1660(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000C1720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C1734);
}

uint64_t sub_1000C1734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001EB0C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000C17E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C17F8);
}

uint64_t sub_1000C17F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001EB0C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000C18A0()
{
  uint64_t result = sub_1001EB0C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1000C1950()
{
  unint64_t result = qword_1002925B0;
  if (!qword_1002925B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002925B0);
  }
  return result;
}

unint64_t sub_1000C19A4()
{
  unint64_t result = qword_1002925B8;
  if (!qword_1002925B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002925B8);
  }
  return result;
}

uint64_t sub_1000C19F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8CardItemVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C1A5C(uint64_t a1)
{
  uint64_t v2 = _s8CardItemVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000C1AB8()
{
  unint64_t result = qword_1002925C8;
  if (!qword_1002925C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002925C8);
  }
  return result;
}

uint64_t _s8CardItemV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8CardItemV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C1C68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8CardItemV10CodingKeysOMa()
{
  return &_s8CardItemV10CodingKeysON;
}

unint64_t sub_1000C1CA4()
{
  unint64_t result = qword_1002925D0;
  if (!qword_1002925D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002925D0);
  }
  return result;
}

unint64_t sub_1000C1CFC()
{
  unint64_t result = qword_1002925D8;
  if (!qword_1002925D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002925D8);
  }
  return result;
}

unint64_t sub_1000C1D54()
{
  unint64_t result = qword_1002925E0;
  if (!qword_1002925E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002925E0);
  }
  return result;
}

uint64_t sub_1000C1DA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D616461 && a2 == 0xE600000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x626F696475417369 && a2 == 0xEB000000006B6F6FLL || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6563697270 && a2 == 0xE500000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657474616D726F66 && a2 == 0xEE00656369725064)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t CRDTModelSyncVersion.hasDelta(from:)()
{
  return sub_1001EC200() & 1;
}

uint64_t type metadata accessor for CRDTModelSyncVersion()
{
  uint64_t result = qword_100292648;
  if (!qword_100292648) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CRDTModelSyncVersion.serializedData()()
{
  uint64_t v0 = sub_1001EBF80();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for CRCodableVersion.version3(_:), v0);
  sub_1001EC210();
  uint64_t v4 = sub_1001EC060();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t CRDTModelSyncVersion.description.getter()
{
  return sub_1001EC1E0();
}

uint64_t static CRDTModelSyncVersion.__derived_struct_equals(_:_:)()
{
  sub_1000C225C();
  if ((sub_1001ECB00() & 1) == 0) {
    return 0;
  }
  type metadata accessor for CRDTModelSyncVersion();
  return sub_1001EC1F0();
}

unint64_t sub_1000C225C()
{
  unint64_t result = qword_1002925E8;
  if (!qword_1002925E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002925E8);
  }
  return result;
}

uint64_t sub_1000C229C()
{
  sub_1000C225C();
  if ((sub_1001ECB00() & 1) == 0) {
    return 0;
  }
  return sub_1001EC1F0();
}

uint64_t sub_1000C2318()
{
  return sub_1001EC1E0();
}

void **initializeBufferWithCopyOfBuffer for CRDTModelSyncVersion(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    BOOL v7 = (char *)a1 + v6;
    int v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001EC210();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for CRDTModelSyncVersion(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001EC210();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void **initializeWithCopy for CRDTModelSyncVersion(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  BOOL v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001EC210();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **assignWithCopy for CRDTModelSyncVersion(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  BOOL v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1001EC210();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *initializeWithTake for CRDTModelSyncVersion(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EC210();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **assignWithTake for CRDTModelSyncVersion(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001EC210();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRDTModelSyncVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C26D8);
}

uint64_t sub_1000C26D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001EC210();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CRDTModelSyncVersion(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C279C);
}

void *sub_1000C279C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001EC210();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000C2844()
{
  uint64_t result = sub_1001EC210();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1000C28E0(char a1)
{
  if (v1[OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync] != (a1 & 1))
  {
    uint64_t v2 = v1;
    v1[OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync] = a1 & 1;
    if (qword_100291198 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1001EB560();
    sub_10007CFF8(v4, (uint64_t)qword_100296BB8);
    uint64_t v5 = sub_1001EB540();
    os_log_type_t v6 = sub_1001EC8E0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 67109120;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "CloudSecureEngagementManagerService #enableCloudSync setEnableCloudSync %{BOOL}d", v7, 8u);
      swift_slowDealloc();
    }

    uint64_t v8 = *(void **)&v2[OBJC_IVAR___BDSSecureEngagementManagerService_cloudKitController];
    id v9 = [v8 privateCloudDatabaseController];
    id v10 = v9;
    uint64_t v11 = *(void *)&v2[OBJC_IVAR___BDSSecureEngagementManagerService_syncManager];
    if (a1)
    {
      [v9 addObserver:*(void *)&v2[OBJC_IVAR___BDSSecureEngagementManagerService_syncManager] recordType:@"SecureEngagement"];

      id v12 = [v8 transactionManager];
      id v10 = [v2 entityName];
      [v12 signalSyncToCKTransactionForEntityName:v10 syncManager:v11];
    }
    else
    {
      [v9 removeObserver:*(void *)&v2[OBJC_IVAR___BDSSecureEngagementManagerService_syncManager] recordType:@"SecureEngagement"];
    }
  }
}

char *sub_1000C2AE4(void *a1, void *a2)
{
  uint64_t v5 = &v2[OBJC_IVAR___BDSSecureEngagementManagerService_dataModelName];
  void *v5 = 0xD000000000000013;
  v5[1] = 0x8000000100223280;
  os_log_type_t v6 = &v2[OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey];
  *os_log_type_t v6 = 0xD000000000000014;
  v6[1] = 0x80000001002232A0;
  v2[OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync] = 0;
  uint64_t v7 = qword_100291198;
  uint64_t v8 = v2;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1001EB560();
  sub_10007CFF8(v9, (uint64_t)qword_100296BB8);
  id v10 = sub_1001EB540();
  os_log_type_t v11 = sub_1001EC910();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Initializing BDSSecureEngagementManagerService", v12, 2u);
    swift_slowDealloc();
  }

  uint64_t v13 = OBJC_IVAR___BDSSecureEngagementManagerService_secureDataSource;
  *(void *)&v8[OBJC_IVAR___BDSSecureEngagementManagerService_secureDataSource] = a1;
  *(void *)&v8[OBJC_IVAR___BDSSecureEngagementManagerService_cloudKitController] = a2;
  id v14 = objc_allocWithZone((Class)BCCloudDataSyncManager);
  id v35 = a1;
  id v15 = a2;
  id v16 = [v14 initWithCloudKitController:v15];
  uint64_t v17 = OBJC_IVAR___BDSSecureEngagementManagerService_syncManager;
  *(void *)&v8[OBJC_IVAR___BDSSecureEngagementManagerService_syncManager] = v16;
  id v18 = [v35 managedObjectContext];
  id v19 = [objc_allocWithZone((Class)BCCloudChangeTokenController) initWithMOC:v18 zoneName:@"SecureUserDataZone" cloudKitController:v15];

  *(void *)&v8[OBJC_IVAR___BDSSecureEngagementManagerService_changeTokenController] = v19;
  uint64_t v20 = *(void **)&v8[v13];
  uint64_t v37 = sub_100081668(0, &qword_1002926E8);
  id v34 = v20;
  sub_10007DC14(&qword_1002926F0);
  sub_1001EC3D0();
  sub_1001EC370();
  sub_100081668(0, &qword_1002926F8);
  uint64_t v21 = *(void **)&v8[v17];
  id v22 = objc_allocWithZone((Class)BCCloudDataManager);
  id v23 = v15;
  id v24 = v21;
  NSString v25 = sub_1001EC340();
  swift_bridgeObjectRelease();
  NSString v26 = sub_1001EC340();
  swift_bridgeObjectRelease();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v28 = [v22 initWithCloudDataSource:v34 entityName:v25 notificationName:v26 immutableClass:ObjCClassFromMetadata mutableClass:swift_getObjCClassFromMetadata() syncManager:v24 cloudKitController:v23];

  *(void *)&v8[OBJC_IVAR___BDSSecureEngagementManagerService_dataManager] = v28;
  v36.receiver = v8;
  v36.super_class = (Class)type metadata accessor for CloudSecureEngagementManagerService();
  uint64_t v29 = (char *)objc_msgSendSuper2(&v36, "init");
  unint64_t v30 = *(void **)&v29[OBJC_IVAR___BDSSecureEngagementManagerService_syncManager];
  uint64_t v31 = v29;
  id v32 = v30;
  [v32 setDelegate:v31];

  return v31;
}

id sub_1000C2EE0()
{
  id v1 = [*(id *)&v0[OBJC_IVAR___BDSSecureEngagementManagerService_cloudKitController] privateCloudDatabaseController];
  uint64_t v2 = OBJC_IVAR___BDSSecureEngagementManagerService_syncManager;
  [v1 removeObserver:*(void *)&v0[OBJC_IVAR___BDSSecureEngagementManagerService_syncManager]];

  [*(id *)&v0[v2] setDelegate:0];
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CloudSecureEngagementManagerService();
  return objc_msgSendSuper2(&v4, "dealloc");
}

void sub_1000C30C0(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1000C3378(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
  sub_10007DC14(&qword_100292700);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100215310;
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey);
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey + 8);
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v9;
  swift_bridgeObjectRetain();
  id v11 = [a1 startTimestampString];
  uint64_t v12 = sub_1001EC370();
  uint64_t v14 = v13;

  *(void *)(v8 + 8_Block_object_dispose(&STACK[0x3B0], 8) = &type metadata for String;
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 72) = v14;
  NSString v15 = sub_1001EC340();
  Class isa = sub_1001EC5D0().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [self predicateWithFormat:v15 argumentArray:isa];

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  v20[4] = sub_1000C6640;
  v20[5] = v18;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_1000C3580;
  void v20[3] = &unk_100264D50;
  id v19 = _Block_copy(v20);
  swift_retain();
  swift_release();
  [v7 setCloudData:a1 predicate:v17 isEqualCheckIgnoringEmptySalt:1 completion:v19];
  _Block_release(v19);
}

void sub_1000C3580(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, id))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, v8);
  swift_release();
}

void sub_1000C36AC(char a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    uint64_t v7 = sub_1001EAE50();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, void, void))(a4 + 16))(a4, a1 & 1, a2 & 1);
}

void sub_1000C372C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
  sub_10016C91C(a1);
  sub_10007DC14(&qword_100292708);
  Class isa = sub_1001EC250().super.isa;
  swift_bridgeObjectRelease();
  sub_10007DC14(&qword_100292700);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100215310;
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey);
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey + 8);
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  *(void *)(v9 + 8_Block_object_dispose(&STACK[0x3B0], 8) = sub_10007DC14(&qword_100292780);
  *(void *)(v9 + 64) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v12 = sub_1001EC340();
  Class v13 = sub_1001EC5D0().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [self predicateWithFormat:v12 argumentArray:v13];

  NSString v15 = sub_1001EC340();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  void v18[4] = sub_1000C650C;
  v18[5] = v16;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  void v18[2] = sub_1000C3580;
  v18[3] = &unk_100264D00;
  id v17 = _Block_copy(v18);
  swift_retain();
  swift_release();
  [v7 setCloudData:isa predicate:v14 propertyIDKey:v15 isEqualCheckIgnoringEmptySalt:1 completion:v17];
  _Block_release(v17);
}

void sub_1000C3A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void **)(v4 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
  sub_10007DC14(&qword_100292700);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100215310;
  uint64_t v11 = *(void *)(v4 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey + 8);
  *(void *)(v10 + 32) = *(void *)(v4 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey);
  *(void *)(v10 + 40) = v11;
  *(void *)(v10 + 8_Block_object_dispose(&STACK[0x3B0], 8) = &type metadata for String;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = a1;
  *(void *)(v10 + 72) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v12 = sub_1001EC340();
  Class isa = sub_1001EC5D0().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [self predicateWithFormat:v12 argumentArray:isa];

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  void v17[4] = sub_1000C6720;
  v17[5] = v15;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100090AB4;
  v17[3] = &unk_100264CB0;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  [v9 cloudDataWithPredicate:v14 sortDescriptors:0 completion:v16];
  _Block_release(v16);
}

void sub_1000C3C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1001EAE50();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void sub_1000C3CBC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    uint64_t v10 = *(void **)(v5 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
    sub_10007DC14(&qword_100292700);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100215310;
    uint64_t v12 = *(void *)(v5 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey + 8);
    *(void *)(v11 + 32) = *(void *)(v5 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey);
    *(void *)(v11 + 40) = v12;
    *(void *)(v11 + 8_Block_object_dispose(&STACK[0x3B0], 8) = &type metadata for String;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = a2;
    *(void *)(v11 + 72) = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v13 = sub_1001EC340();
    Class isa = sub_1001EC5D0().super.isa;
    swift_bridgeObjectRelease();
    id v15 = [self predicateWithFormat:v13 argumentArray:isa];

    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a4;
    *(void *)(v16 + 24) = a5;
    void v18[4] = sub_1000C64F0;
    v18[5] = v16;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    void v18[2] = sub_100090AB4;
    v18[3] = &unk_100264C60;
    id v17 = _Block_copy(v18);
    swift_retain();
    swift_release();
    [v10 cloudDataWithPredicate:v15 sortDescriptors:0 completion:v17];
    _Block_release(v17);
  }
  else
  {
    sub_1000C3A38(a2, a3, a4, a5);
  }
}

void sub_1000C3ED8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1)
  {
    self;
    a1 = swift_dynamicCastObjCClass();
    if (a1)
    {
      id v4 = (id)a1;
      swift_unknownObjectRetain();
      a1 = (uint64_t)v4;
    }
  }
  id v5 = (id)a1;
  a3();
}

uint64_t sub_1000C402C(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void))
{
  if (a1)
  {
    uint64_t v12 = a4;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1001ECEA0();
      uint64_t v7 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        if ((a1 & 0xC000000000000001) != 0)
        {
          for (uint64_t i = 0; i != v7; ++i)
          {
            sub_1001ECD50();
            self;
            if (swift_dynamicCastObjCClass())
            {
              sub_1001EC5C0();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1001EC610();
              }
              sub_1001EC640();
              sub_1001EC600();
            }
            else
            {
              swift_unknownObjectRelease();
            }
          }
        }
        else
        {
          unint64_t v11 = a1 + 32;
          do
          {
            self;
            if (swift_dynamicCastObjCClass())
            {
              swift_unknownObjectRetain();
              sub_1001EC5C0();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1001EC610();
              }
              sub_1001EC640();
              sub_1001EC600();
            }
            v11 += 8;
            --v7;
          }
          while (v7);
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    a4 = v12;
    goto LABEL_22;
  }
  uint64_t v10 = 0;
LABEL_22:
  a4(v10, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C4268(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = *(void (**)(uint64_t, id, void *))(a1 + 32);
  if (a2)
  {
    sub_10007DC14(&qword_100292708);
    uint64_t v6 = sub_1001EC5E0();
  }
  swift_retain();
  id v8 = a3;
  id v9 = a4;
  v7(v6, v8, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1000C4458(objc_class *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Class isa = a1;
  if (a1)
  {
    sub_100081668(0, &qword_1002926F8);
    Class isa = sub_1001EC5D0().super.isa;
  }
  if (a3) {
    uint64_t v8 = sub_1001EAE50();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = (id)v8;
  (*(void (**)(uint64_t, Class, uint64_t))(a4 + 16))(a4, isa, a2);
}

void sub_1000C450C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  id v9 = *(void (**)(uint64_t, uint64_t, id, void *, uint64_t))(a1 + 32);
  sub_100081668(0, &qword_100292788);
  sub_1000C659C();
  uint64_t v10 = sub_1001EC750();
  uint64_t v11 = sub_1001EC750();
  swift_retain();
  id v13 = a4;
  id v12 = a5;
  v9(v10, v11, v13, a5, a6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_1000C4794(objc_class *a1, Class a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  Class isa = a1;
  if (a1)
  {
    sub_100081668(0, &qword_100292788);
    sub_1000C659C();
    Class isa = sub_1001EC740().super.isa;
  }
  if (a2) {
    a2 = sub_1001EC740().super.isa;
  }
  if (a4) {
    uint64_t v11 = sub_1001EAE50();
  }
  else {
    uint64_t v11 = 0;
  }
  id v12 = (id)v11;
  (*(void (**)(uint64_t, Class, Class, uint64_t))(a6 + 16))(a6, isa, a2, a3);
}

uint64_t type metadata accessor for CloudSecureEngagementManagerService()
{
  return self;
}

void sub_1000C4C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_10013A814(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
  sub_10007DC14(&qword_100292708);
  Class isa = sub_1001EC250().super.isa;
  sub_10007DC14(&qword_100292700);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100215310;
  uint64_t v11 = *(void *)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey);
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey + 8);
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v12;
  *(void *)(v10 + 8_Block_object_dispose(&STACK[0x3B0], 8) = sub_10007DC14(&qword_100292710);
  *(void *)(v10 + 64) = v7;
  swift_bridgeObjectRetain();
  NSString v13 = sub_1001EC340();
  Class v14 = sub_1001EC5D0().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [self predicateWithFormat:v13 argumentArray:v14];

  NSString v16 = sub_1001EC340();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  v19[4] = sub_1000C648C;
  void v19[5] = v17;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1001AE0C0;
  void v19[3] = &unk_100264AA8;
  uint64_t v18 = _Block_copy(v19);
  swift_retain();
  swift_release();
  [v8 updateSyncGenerationFromCloudData:isa predicate:v15 propertyIDKey:v16 completion:v18];
  _Block_release(v18);
}

uint64_t sub_1000C4F50(void *a1, int a2, void *a3, int a4, void *aBlock, unint64_t *a6, uint64_t a7, void (*a8)(uint64_t, id, void *))
{
  uint64_t v12 = _Block_copy(aBlock);
  sub_100081668(0, a6);
  uint64_t v13 = sub_1001EC5E0();
  _Block_copy(v12);
  id v14 = a3;
  id v15 = a1;
  a8(v13, v15, v12);
  _Block_release(v12);
  _Block_release(v12);

  return swift_bridgeObjectRelease();
}

void sub_1000C5048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = *(void **)(v4 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
  sub_10007DC14(&qword_100292700);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100215310;
  uint64_t v11 = *(void *)(v4 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey + 8);
  *(void *)(v10 + 32) = *(void *)(v4 + OBJC_IVAR___BDSSecureEngagementManagerService_propertyIDKey);
  *(void *)(v10 + 40) = v11;
  *(void *)(v10 + 8_Block_object_dispose(&STACK[0x3B0], 8) = &type metadata for String;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = a1;
  *(void *)(v10 + 72) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v12 = sub_1001EC340();
  Class isa = sub_1001EC5D0().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [self predicateWithFormat:v12 argumentArray:isa];

  void v16[4] = a3;
  v16[5] = a4;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  id v16[2] = sub_1001AE1A8;
  v16[3] = &unk_100264968;
  id v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  [v9 deleteCloudDataForPredicate:v14 completion:v15];
  _Block_release(v15);
}

uint64_t sub_1000C522C(void *a1, int a2, int a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = sub_1001EC370();
  uint64_t v13 = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v10;
  id v15 = a1;
  a7(v11, v13, a6, v14);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1000C52EC()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C5324(char a1, uint64_t a2)
{
  sub_1001AE138(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1000C532C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C533C()
{
  return swift_release();
}

void sub_1000C5344(uint64_t a1, uint64_t a2)
{
  if (qword_100291198 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1001EB560();
  sub_10007CFF8(v4, (uint64_t)qword_100296BB8);
  id v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC910();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "CloudSecureEngagementManagerService deleteCloudDataWithCompletion:", v7, 2u);
    swift_slowDealloc();
  }

  if (a1)
  {
    void v9[4] = a1;
    void v9[5] = a2;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1001AE1A8;
    v9[3] = &unk_100264BC0;
    uint64_t v8 = _Block_copy(v9);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v8 = 0;
  }
  [self deleteCloudDataWithCompletion:v8];
  _Block_release(v8);
}

uint64_t sub_1000C54CC(uint64_t a1, void (**a2)(void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  if (*(unsigned char *)(a1 + OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync) == 1)
  {
    id v5 = *(void **)(a1 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
    uint64_t v6 = *(void *)(a1 + OBJC_IVAR___BDSSecureEngagementManagerService_syncManager);
    void v9[4] = sub_100093DBC;
    void v9[5] = v4;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1000DB998;
    v9[3] = &unk_100264B70;
    uint64_t v7 = _Block_copy(v9);
    _Block_copy(a2);
    swift_retain();
    swift_release();
    [v5 startSyncToCKWithSyncManager:v6 completion:v7];
    _Block_release(v7);
    return swift_release();
  }
  else
  {
    _Block_copy(a2);
    a2[2](a2);
    return swift_release();
  }
}

void sub_1000C563C()
{
  if (v0[OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync] == 1)
  {
    id v1 = [*(id *)&v0[OBJC_IVAR___BDSSecureEngagementManagerService_cloudKitController] transactionManager];
    id v2 = [v0 entityName];
    [v1 signalSyncToCKTransactionForEntityName:v2 syncManager:*(void *)&v0[OBJC_IVAR___BDSSecureEngagementManagerService_syncManager]];
  }
}

void sub_1000C56FC(uint64_t a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  if (*(void *)(a1 + 16))
  {
    uint64_t v7 = *(void **)(a2 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
    sub_100081668(0, &qword_100293480);
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100215320;
    *(void *)(v8 + 56) = sub_10007DC14(&qword_100292710);
    *(void *)(v8 + 64) = sub_1000C6494();
    *(void *)(v8 + 32) = a1;
    _Block_copy(a3);
    swift_bridgeObjectRetain();
    id v9 = (void *)sub_1001EC8C0();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_1000C6638;
    *(void *)(v10 + 24) = v6;
    void v16[4] = sub_1000C671C;
    v16[5] = v10;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    id v16[2] = sub_1001AE0C0;
    v16[3] = &unk_100264B20;
    uint64_t v11 = _Block_copy(v16);
    swift_retain();
    swift_release();
    [v7 removeCloudDataForPredicate:v9 completion:v11];
    _Block_release(v11);
    swift_release();
  }
  else
  {
    _Block_copy(a3);
    if (qword_100291198 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1001EB560();
    sub_10007CFF8(v12, (uint64_t)qword_100296BB8);
    uint64_t v13 = sub_1001EB540();
    os_log_type_t v14 = sub_1001EC8F0();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Trying to remove without IDs - EngagementData", v15, 2u);
      swift_slowDealloc();
    }

    a3[2](a3, 1, 0);
    swift_release();
  }
}

void sub_1000C59D0(unint64_t a1, uint64_t a2, void *aBlock)
{
  if (*(unsigned char *)(a2 + OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync) == 1)
  {
    if (a1 >> 62)
    {
      _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_1001ECEA0();
      uint64_t v19 = a2;
      aBlocka = aBlock;
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      uint64_t v19 = a2;
      aBlocka = aBlock;
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v7 = 0;
        uint64_t v8 = _swiftEmptyArrayStorage;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v9 = (id)sub_1001ECD50();
          }
          else {
            id v9 = *(id *)(a1 + 8 * v7 + 32);
          }
          uint64_t v10 = v9;
          id v11 = objc_msgSend(v9, "recordName", v19);
          uint64_t v12 = sub_1001EC370();
          uint64_t v14 = v13;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1000A6B10(0, v8[2] + 1, 1, v8);
          }
          unint64_t v16 = v8[2];
          unint64_t v15 = v8[3];
          if (v16 >= v15 >> 1) {
            uint64_t v8 = sub_1000A6B10((void *)(v15 > 1), v16 + 1, 1, v8);
          }
          ++v7;
          void v8[2] = v16 + 1;
          uint64_t v17 = &v8[2 * v16];
          void v17[4] = v12;
          v17[5] = v14;
        }
        while (v6 != v7);
        goto LABEL_20;
      }
    }
    uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    _Block_copy(aBlocka);
    sub_1000C56FC((uint64_t)v8, v19, (void (**)(void, void, void))aBlocka);
    _Block_release(aBlocka);
    swift_bridgeObjectRelease();
    _Block_release(aBlocka);
    return;
  }
  uint64_t v18 = (void (*)(void *, void, void))*((void *)aBlock + 2);
  v18(aBlock, 0, 0);
}

uint64_t sub_1000C5C04(unint64_t a1, uint64_t a2, uint64_t isUniquelyReferenced_nonNull_native)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = isUniquelyReferenced_nonNull_native;
  if (*(unsigned char *)(a2 + OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync) == 1)
  {
    if (a1 >> 62)
    {
LABEL_37:
      _Block_copy((const void *)isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1001ECEA0();
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      _Block_copy((const void *)isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        long long aBlock = (void *)isUniquelyReferenced_nonNull_native;
        uint64_t v38 = v6;
        unint64_t v39 = a1 & 0xC000000000000001;
        char isUniquelyReferenced_nonNull_native = (uint64_t)&_swiftEmptyDictionarySingleton;
        uint64_t v8 = 4;
        while (1)
        {
          uint64_t v10 = v8 - 4;
          if (v39)
          {
            id v11 = (void *)sub_1001ECD50();
            uint64_t v6 = v8 - 3;
            if (__OFADD__(v10, 1)) {
              goto LABEL_34;
            }
          }
          else
          {
            id v11 = *(void **)(a1 + 8 * v8);
            swift_unknownObjectRetain();
            uint64_t v6 = v8 - 3;
            if (__OFADD__(v10, 1))
            {
LABEL_34:
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
              goto LABEL_37;
            }
          }
          id v12 = objc_msgSend(v11, "identifier", aBlock);
          if (!v12)
          {
            if (qword_100291198 != -1) {
              swift_once();
            }
            uint64_t v26 = sub_1001EB560();
            sub_10007CFF8(v26, (uint64_t)qword_100296BB8);
            swift_unknownObjectRetain_n();
            uint64_t v27 = sub_1001EB540();
            os_log_type_t v28 = sub_1001EC8F0();
            if (os_log_type_enabled(v27, v28))
            {
              uint64_t v41 = v6;
              uint64_t v29 = swift_slowAlloc();
              uint64_t v42 = swift_slowAlloc();
              *(_DWORD *)uint64_t v29 = 136315138;
              swift_unknownObjectRetain();
              sub_10007DC14(&qword_100292708);
              uint64_t v30 = sub_1001EC3D0();
              *(void *)(v29 + 4) = sub_1001A8090(v30, v31, &v42);
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v27, v28, "Property %s has nil identifier, skipping updating sync generation", (uint8_t *)v29, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              uint64_t v6 = v41;
              swift_slowDealloc();
              swift_unknownObjectRelease();
            }
            else
            {

              swift_unknownObjectRelease_n();
            }
            goto LABEL_7;
          }
          uint64_t v13 = v12;
          uint64_t v40 = v6;
          uint64_t v14 = v7;
          unint64_t v15 = a1;
          uint64_t v6 = sub_1001EC370();
          uint64_t v17 = v16;

          swift_unknownObjectRetain();
          uint64_t v18 = isUniquelyReferenced_nonNull_native;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v42 = v18;
          a1 = sub_1001A87A0(v6, v17);
          uint64_t v20 = *(void *)(v18 + 16);
          BOOL v21 = (v19 & 1) == 0;
          uint64_t v22 = v20 + v21;
          if (__OFADD__(v20, v21)) {
            goto LABEL_35;
          }
          char v23 = v19;
          if (*(void *)(v18 + 24) >= v22)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              char isUniquelyReferenced_nonNull_native = v42;
              if ((v19 & 1) == 0) {
                goto LABEL_25;
              }
            }
            else
            {
              sub_1001ABD04();
              char isUniquelyReferenced_nonNull_native = v42;
              if ((v23 & 1) == 0) {
                goto LABEL_25;
              }
            }
          }
          else
          {
            sub_1001A99B0(v22, isUniquelyReferenced_nonNull_native);
            unint64_t v24 = sub_1001A87A0(v6, v17);
            if ((v23 & 1) != (v25 & 1))
            {
              swift_release();
              _Block_release(aBlock);
              uint64_t result = sub_1001ED0E0();
              __break(1u);
              return result;
            }
            a1 = v24;
            char isUniquelyReferenced_nonNull_native = v42;
            if ((v23 & 1) == 0)
            {
LABEL_25:
              *(void *)(isUniquelyReferenced_nonNull_native + 8 * (a1 >> 6) + 64) |= 1 << a1;
              id v32 = (uint64_t *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 16 * a1);
              uint64_t *v32 = v6;
              v32[1] = v17;
              *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 8 * a1) = v11;
              uint64_t v33 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
              BOOL v34 = __OFADD__(v33, 1);
              uint64_t v35 = v33 + 1;
              if (v34) {
                goto LABEL_36;
              }
              *(void *)(isUniquelyReferenced_nonNull_native + 16) = v35;
              swift_bridgeObjectRetain();
              goto LABEL_6;
            }
          }
          uint64_t v9 = *(void *)(isUniquelyReferenced_nonNull_native + 56);
          swift_unknownObjectRelease();
          *(void *)(v9 + 8 * a1) = v11;
LABEL_6:
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = v15;
          uint64_t v7 = v14;
          uint64_t v6 = v40;
LABEL_7:
          ++v8;
          if (v6 == v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v6 = v38;
            goto LABEL_39;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = (uint64_t)&_swiftEmptyDictionarySingleton;
LABEL_39:
    sub_1000C4C3C(isUniquelyReferenced_nonNull_native, (uint64_t)sub_1000C6638, v6);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    _Block_copy((const void *)isUniquelyReferenced_nonNull_native);
    (*(void (**)(uint64_t, void, void))(isUniquelyReferenced_nonNull_native + 16))(isUniquelyReferenced_nonNull_native, 0, 0);
    return swift_release();
  }
}

void sub_1000C6100(uint64_t a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  if (*(unsigned char *)(a2 + OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync) == 1)
  {
    uint64_t v6 = *(void **)(a2 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
    _Block_copy(a3);
    sub_100081668(0, (unint64_t *)&unk_1002915B0);
    Class isa = sub_1001EC5D0().super.isa;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1000C6638;
    *(void *)(v8 + 24) = v5;
    void v10[4] = sub_1000C6460;
    v10[5] = v8;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1001AE22C;
    v10[3] = &unk_100264A30;
    uint64_t v9 = _Block_copy(v10);
    swift_retain();
    swift_release();
    [v6 resolveConflictsForRecords:isa completion:v9];
    _Block_release(v9);
    swift_release();
  }
  else
  {
    _Block_copy(a3);
    a3[2](a3, 0, 0);
    swift_release();
  }
}

void sub_1000C62C4(uint64_t a1, uint64_t a2, void (**a3)(void, void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  if (*(unsigned char *)(a2 + OBJC_IVAR___BDSSecureEngagementManagerService__enableCloudSync) == 1)
  {
    uint64_t v6 = *(void **)(a2 + OBJC_IVAR___BDSSecureEngagementManagerService_dataManager);
    _Block_copy(a3);
    sub_100081668(0, (unint64_t *)&unk_100293740);
    Class isa = sub_1001EC5D0().super.isa;
    void v9[4] = sub_1000C6638;
    void v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1001AE1A8;
    v9[3] = &unk_1002649B8;
    uint64_t v8 = _Block_copy(v9);
    swift_retain();
    swift_release();
    [v6 failedRecordIDs:isa completion:v8];
    _Block_release(v8);
    swift_release();
  }
  else
  {
    _Block_copy(a3);
    a3[2](a3, 0, 0);
    swift_release();
  }
}

uint64_t sub_1000C6460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(a1, a3);
}

uint64_t sub_1000C648C(uint64_t a1, uint64_t a2)
{
  return sub_1001AE098(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

unint64_t sub_1000C6494()
{
  unint64_t result = qword_100292718;
  if (!qword_100292718)
  {
    sub_10008155C(&qword_100292710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292718);
  }
  return result;
}

void sub_1000C64F0(uint64_t a1, uint64_t a2)
{
  sub_1000C3ED8(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_1000C650C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1000C6534(objc_class *a1, objc_class *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1000C4794(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_1000C653C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C6574()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1000C659C()
{
  unint64_t result = qword_100292790;
  if (!qword_100292790)
  {
    sub_100081668(255, &qword_100292788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292790);
  }
  return result;
}

void sub_1000C6604(objc_class *a1, uint64_t a2, uint64_t a3)
{
  sub_1000C4458(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1000C660C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C402C(a1, a2, a3, *(void (**)(void, void, void))(v3 + 16));
}

void sub_1000C6614(uint64_t a1, uint64_t a2)
{
  sub_1000C3C4C(a1, a2, *(void *)(v2 + 16));
}

void sub_1000C661C(char a1, char a2, uint64_t a3)
{
  sub_1000C36AC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1000C6624()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1000C6728()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000C6780();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C6780()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = v0[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  if (result)
  {
    uint64_t v6 = sub_1001EB540();
    os_log_type_t v7 = sub_1001EC910();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "CRDTModelFileSyncTransport: assume connection is healthy", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = v1[5];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    *(void *)(v10 + 24) = v2;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1000CB190;
    *(void *)(v11 + 24) = v10;
    void v14[4] = sub_1000B0738;
    void v14[5] = v11;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_100089470;
    v14[3] = &unk_100265610;
    id v12 = _Block_copy(v14);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v12);
    _Block_release(v12);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000C69A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "CRDTModelFileSyncTransport: disconnected", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(NSObject **)(v1 + 40);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1000CA61C;
  *(void *)(v6 + 24) = v1;
  void v9[4] = sub_1000AC2B4;
  void v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100089470;
  v9[3] = &unk_1002652F0;
  os_log_type_t v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v7);
  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

void sub_1000C6B50(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48) == 1)
  {
    sub_1000C6C48(*(double *)(a1 + 56));
    double v2 = *(double *)(a1 + 56) + *(double *)(a1 + 56);
    *(double *)(a1 + 56) = v2;
    if (v2 > 3600.0) {
      *(void *)(a1 + 56) = 0x40AC200000000000;
    }
  }
  else
  {
    oslog = sub_1001EB540();
    os_log_type_t v3 = sub_1001EC910();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "CRDTModelFileSyncTransport: not reconnecting automatically", v4, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1000C6C48(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EB540();
  os_log_type_t v5 = sub_1001EC910();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    uint64_t v17 = *(void ***)&a1;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "CRDTModelFileSyncTransport: attempt auto-reconnect in %f sec", v6, 0xCu);
    swift_slowDealloc();
  }

  os_log_type_t v7 = *(void **)(v2 + 64);
  if (v7) {
    goto LABEL_5;
  }
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  id v9 = objc_allocWithZone((Class)BUCoalescingCallBlock);
  BOOL v21 = sub_1000CA634;
  uint64_t v22 = v8;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  char v19 = sub_1000916AC;
  uint64_t v20 = &unk_100265368;
  uint64_t v10 = _Block_copy(&v17);
  swift_retain();
  NSString v11 = sub_1001EC340();
  id v12 = [v9 initWithNotifyBlock:v10 blockDescription:v11];

  _Block_release(v10);
  swift_release();
  swift_release();
  uint64_t v13 = *(void **)(v2 + 64);
  *(void *)(v2 + 64) = v12;

  os_log_type_t v7 = *(void **)(v2 + 64);
  if (v7)
  {
LABEL_5:
    objc_msgSend(v7, "setCoalescingDelay:", a1, v17);
    uint64_t v14 = *(void **)(v2 + 64);
    if (v14)
    {
      BOOL v21 = MarkedAsFinishedMechanism.rawValue.getter;
      uint64_t v22 = 0;
      uint64_t v17 = _NSConcreteStackBlock;
      uint64_t v18 = 1107296256;
      char v19 = sub_1000DB998;
      uint64_t v20 = &unk_100265318;
      unint64_t v15 = _Block_copy(&v17);
      id v16 = v14;
      [v16 signalWithCompletion:v15];
      _Block_release(v15);
    }
  }
}

uint64_t sub_1000C6EE4()
{
  uint64_t v0 = sub_1001EB560();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  os_log_type_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, Strong + OBJC_IVAR____TtC14bookdatastoredP33_27AA06B3302E8EDAEF33D49870C28CD227_TransportConnectionManager_logger, v0);
    swift_release();
    os_log_type_t v5 = sub_1001EB540();
    os_log_type_t v6 = sub_1001EC910();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "CRDTModelFileSyncTransport: About to auto-reconnect", v7, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000C70A8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C70A8()
{
  uint64_t v1 = *(NSObject **)(v0 + 40);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1000CA63C;
  *(void *)(v2 + 24) = v0;
  void v7[4] = sub_1000B0738;
  void v7[5] = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_100089470;
  v7[3] = &unk_1002653B8;
  os_log_type_t v3 = _Block_copy(v7);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 40))(ObjectType, v5);
    return swift_release();
  }
  return result;
}

void sub_1000C7204()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC8E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "CRDTModelFileSyncTransport: reconnected", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(void **)(v1 + 32);
  if (v5)
  {
    void v8[4] = MarkedAsFinishedMechanism.rawValue.getter;
    void v8[5] = 0;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    void v8[2] = sub_1000DB998;
    v8[3] = &unk_100265278;
    os_log_type_t v6 = _Block_copy(v8);
    id v7 = v5;
    [v7 signalWithCompletion:v6];
    _Block_release(v6);
  }
}

uint64_t sub_1000C733C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  os_log_type_t v3 = v1[5];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1000CAD20;
  *(void *)(v5 + 24) = v4;
  void v8[4] = sub_1000B0738;
  void v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_100089470;
  v8[3] = &unk_1002654F8;
  os_log_type_t v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000C74B8()
{
  swift_unknownObjectRelease();

  uint64_t v1 = (char *)v0
     + OBJC_IVAR____TtC14bookdatastoredP33_27AA06B3302E8EDAEF33D49870C28CD227_TransportConnectionManager_logger;
  uint64_t v2 = sub_1001EB560();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1000C7578()
{
  return type metadata accessor for _TransportConnectionManager();
}

uint64_t type metadata accessor for _TransportConnectionManager()
{
  uint64_t result = qword_100292830;
  if (!qword_100292830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000C75CC()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000C7698()
{
  uint64_t result = sub_1001EC0F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001EAF60();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1001EB560();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1000C77F4()
{
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_1000C7868(char a1)
{
  uint64_t v3 = sub_1001EBA60();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  os_log_type_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EBAA0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = *(void *)(v1 + *(void *)(*(void *)v1 + 152));
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(unsigned char *)(v11 + 24) = a1;
  aBlock[4] = sub_1000CB160;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100265660;
  id v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1001EBA80();
  v14[1] = _swiftEmptyArrayStorage;
  sub_1000CA678((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000CA6C0(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1000C7B2C(uint64_t result, char a2)
{
  uint64_t v2 = *(void *)(*(void *)result + 184);
  if (*(unsigned char *)(result + v2) != (a2 & 1))
  {
    *(unsigned char *)(result + v2) = a2 & 1;
    if (*(void *)(result + *(void *)(*(void *)result + 168)))
    {
      swift_retain();
      sub_1001EBF90();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000C7BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CB0AC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000C7BD8);
}

void *sub_1000C7BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v18 = *v3;
  uint64_t v19 = a1;
  uint64_t v5 = sub_1001EC990();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_1001EC9C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EBAA0();
  __chkstk_darwin(v10 - 8);
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v11 = (void *)((char *)v4 + *(void *)(*v4 + 144));
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = *(void *)(*v3 + 152);
  sub_1000C0728();
  sub_1001EBA90();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v6);
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_1000CA678((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000CA6C0((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  *(void *)((char *)v3 + v12) = sub_1001ECA00();
  *(void *)((char *)v3 + *(void *)(*v3 + 160)) = &_swiftEmptySetSingleton;
  *(void *)((char *)v3 + *(void *)(*v3 + 168)) = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 176)) = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 184)) = 0;
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1001ECD20(20);
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)0xD000000000000012;
  unint64_t v23 = 0x80000001002214C0;
  v24._countAndFlagsBits = (*(uint64_t (**)(void))(*(void *)(v18 + 104) + 8))(*(void *)(v18 + 80));
  sub_1001EC490(v24);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  void v3[4] = v19;
  uint64_t v13 = (char *)v4 + *(void *)(*v4 + 136);
  uint64_t v14 = sub_1001EAF60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, v20, v14);
  unint64_t v15 = (char *)v4 + *(void *)(*v4 + 128);
  uint64_t v16 = sub_1001EC0F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, v21, v16);
  return v4;
}

uint64_t sub_1000C8068(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 144));
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  sub_1000B0100(v4);
  swift_retain();
  sub_1000C80CC();
  return swift_release();
}

void sub_1000C80CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v49 = v2;
  uint64_t v3 = sub_1001EBF80();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EAF60();
  uint64_t v46 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2[10];
  uint64_t v10 = v2[11];
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t v12 = sub_1001EC0F0();
  uint64_t v13 = sub_1001ECB50();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = v2[21];
  if (*(void *)((char *)v1 + v15))
  {
    swift_retain_n();
    uint64_t v16 = sub_1001EB540();
    os_log_type_t v17 = sub_1001EC910();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      v50[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      if (*((unsigned char *)v1 + *(void *)(*v1 + 176))) {
        uint64_t v19 = 0x657463656E6E6F63;
      }
      else {
        uint64_t v19 = 0x697463656E6E6F63;
      }
      if (*((unsigned char *)v1 + *(void *)(*v1 + 176))) {
        unint64_t v20 = 0xE900000000000064;
      }
      else {
        unint64_t v20 = 0xEA0000000000676ELL;
      }
      v50[3] = sub_1001A8090(v19, v20, v50);
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "CRDTModelFileSyncTransport reconnect: Already %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    if (*(void *)((char *)v1 + v15)) {
      swift_retain();
    }
    else {
      __break(1u);
    }
  }
  else
  {
    uint64_t v38 = v11;
    unint64_t v39 = (char *)&v38 - v14;
    uint64_t v40 = v6;
    uint64_t v41 = v8;
    uint64_t v42 = v5;
    uint64_t v43 = v12;
    uint64_t v44 = v10;
    uint64_t v45 = v15;
    uint64_t v21 = v9;
    uint64_t v22 = sub_1001EB540();
    os_log_type_t v23 = sub_1001EC910();
    if (os_log_type_enabled(v22, v23))
    {
      Swift::String v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "CRDTModelFileSyncTransport reconnect: About to initialize file sync manager", v24, 2u);
      swift_slowDealloc();
    }

    sub_1001EBF70();
    swift_getWitnessTable();
    sub_1001EBFC0();
    char v25 = (void *)v1[4];
    uint64_t v26 = v43;
    uint64_t v27 = *(void *)(v43 - 8);
    os_log_type_t v28 = v39;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v39, (char *)v1 + *(void *)(*v1 + 128), v43);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v41, (char *)v1 + *(void *)(*v1 + 136), v40);
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v42, enum case for CRCodableVersion.version3(_:), v48);
    id v29 = v25;
    *(void *)((char *)v1 + v45) = sub_1001EBFD0();
    swift_retain();
    swift_release();
    sub_1001EBF90();
    v50[0] = sub_1001EBFB0();
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    unint64_t v31 = (void *)swift_allocObject();
    uint64_t v32 = v44;
    void v31[2] = v21;
    v31[3] = v32;
    uint64_t v33 = v49;
    uint64_t v34 = v49[12];
    v31[4] = v34;
    uint64_t v35 = v33[13];
    v31[5] = v35;
    v31[6] = v30;
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    uint64_t v37 = (void *)swift_allocObject();
    v37[2] = v21;
    v37[3] = v32;
    v37[4] = v34;
    v37[5] = v35;
    void v37[6] = v36;
    sub_10008155C(&qword_1002929F0);
    sub_1001EB570();
    swift_getWitnessTable();
    sub_1001EB5C0();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_1001EB580();
    swift_endAccess();
    swift_release();
  }
}

uint64_t sub_1000C87F8(void *a1)
{
  uint64_t v2 = sub_1001EB560();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - v7;
  if (*a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, Strong + *(void *)(*(void *)Strong + 192), v2);
      swift_errorRetain();
      swift_release();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v10 = sub_1001EB540();
      os_log_type_t v11 = sub_1001EC8F0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        v22[0] = v20;
        *(_DWORD *)uint64_t v12 = 136315138;
        v19[1] = v12 + 4;
        swift_getErrorValue();
        uint64_t v13 = sub_1001ED110();
        uint64_t v21 = sub_1001A8090(v13, v14, v22);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "CRDTModelFileSyncTransport sink: error: %s", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      swift_errorRetain();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1000C8BF4((uint64_t)sub_1000CA618, (uint64_t)&unk_1002652A0);
      swift_errorRelease();
      return swift_release();
    }
    else
    {
      return swift_errorRelease();
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, result + *(void *)(*(void *)result + 192), v2);
      swift_release();
      uint64_t v16 = sub_1001EB540();
      os_log_type_t v17 = sub_1001EC910();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "CRDTModelFileSyncTransport sink: finished", v18, 2u);
        swift_slowDealloc();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  return result;
}

uint64_t sub_1000C8BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EBAA0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + *(void *)(*(void *)v2 + 152));
  aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1001EBA80();
  v15[1] = _swiftEmptyArrayStorage;
  sub_1000CA678((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000CA6C0(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_1000C8E88(uint64_t a1)
{
  uint64_t v2 = sub_1001EB560();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, Strong + *(void *)(*(void *)Strong + 192), v2);
    swift_release();
    uint64_t v7 = sub_1001EB540();
    os_log_type_t v8 = sub_1001EC8E0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "CRDTModelFileSyncTransport sink: receiveValue", v9, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000C9060(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C9060(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v22 = sub_1001EBA60();
  uint64_t v25 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v21 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EBAA0();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  uint64_t v10 = sub_1001EC0F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v20 - v12;
  v20[1] = *(void *)((char *)v1 + v3[19]);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v20 - v12, a1, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = v8;
  *((void *)v15 + 3) = v9;
  *((void *)v15 + 4) = v3[12];
  *((void *)v15 + 5) = v3[13];
  *((void *)v15 + 6) = v1;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v15[v14], v13, v10);
  aBlock[4] = sub_1000CA5A8;
  void aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100265250;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1001EBA80();
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_1000CA678((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000CA6C0(&qword_100296750, (uint64_t *)&unk_100291BF0);
  uint64_t v18 = v21;
  uint64_t v17 = v22;
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  return swift_release();
}

void sub_1000C9454(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 176);
  if ((*(unsigned char *)(v1 + v4) & 1) == 0)
  {
    if (*(void *)(v1 + *(void *)(*(void *)v1 + 168)))
    {
      *(unsigned char *)(v1 + v4) = 1;
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_1000C7204();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v5 = sub_1001EB540();
      os_log_type_t v6 = sub_1001EC8F0();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "CRDTModelFileSyncTransport: got disconnected before load complete", v7, 2u);
        swift_slowDealloc();
      }
    }
  }
  uint64_t v8 = *(void (**)(uint64_t))(v2 + *(void *)(*(void *)v2 + 144));
  if (v8)
  {
    swift_retain();
    v8(a1);
    sub_1000B0100((uint64_t)v8);
  }
}

uint64_t sub_1000C95DC()
{
  uint64_t v1 = (void *)(v0 + *(void *)(*(void *)v0 + 160));
  swift_beginAccess();
  void *v1 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  *(void *)(v0 + *(void *)(*(void *)v0 + 168)) = 0;
  swift_release();
  *(unsigned char *)(v0 + *(void *)(*(void *)v0 + 176)) = 0;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000C69A0();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000C9694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  unint64_t v31 = (void *)*v3;
  uint64_t v5 = v31;
  uint64_t v6 = sub_1001EBA60();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  __chkstk_darwin(v6);
  uint64_t v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1001EBAA0();
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v5[10];
  uint64_t v11 = v5[11];
  uint64_t v12 = sub_1001EC0F0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  if (*(void *)((char *)v3 + v5[21]))
  {
    swift_retain();
    sub_1001EBFA0();
    return swift_release();
  }
  else
  {
    id v29 = v9;
    uint64_t v18 = v31;
    uint64_t v30 = *(void *)((char *)v3 + v31[19]);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
    unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v21 = (char *)swift_allocObject();
    *((void *)v21 + 2) = v10;
    *((void *)v21 + 3) = v11;
    *((void *)v21 + 4) = v18[12];
    *((void *)v21 + 5) = v18[13];
    *((void *)v21 + 6) = v3;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v21[v19], v16, v12);
    uint64_t v22 = &v21[v20];
    uint64_t v23 = v38;
    *(void *)uint64_t v22 = v37;
    *((void *)v22 + 1) = v23;
    aBlock[4] = sub_1000CA830;
    void aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000DB998;
    void aBlock[3] = &unk_100265408;
    uint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    uint64_t v25 = v29;
    sub_1001EBA80();
    unint64_t v39 = _swiftEmptyArrayStorage;
    sub_1000CA678((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10007DC14((uint64_t *)&unk_100291BF0);
    sub_1000CA6C0(&qword_100296750, (uint64_t *)&unk_100291BF0);
    uint64_t v26 = v33;
    uint64_t v27 = v36;
    sub_1001ECC30();
    sub_1001EC9F0();
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v34);
    return swift_release();
  }
}

id *sub_1000C9B20()
{
  sub_1000CA710((uint64_t)(v0 + 2));

  uint64_t v1 = (char *)v0 + *((void *)*v0 + 16);
  uint64_t v2 = sub_1001EC0F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + *((void *)*v0 + 17);
  uint64_t v4 = sub_1001EAF60();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_1000B0100(*(uint64_t *)((char *)v0 + *((void *)*v0 + 18)));

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = (char *)v0 + *((void *)*v0 + 24);
  uint64_t v6 = sub_1001EB560();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t sub_1000C9CF0()
{
  sub_1000C9B20();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _CRDTModelFileSyncTransport()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000C9D5C()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000C9E00()
{
  return sub_1000C8BF4((uint64_t)sub_1000CA400, (uint64_t)&unk_100265188);
}

uint64_t sub_1000C9E34()
{
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_1000C9EA8(char a1)
{
  return sub_1000C7868(a1);
}

uint64_t sub_1000C9ECC(uint64_t a1, uint64_t a2)
{
  return sub_1000C8068(a1, a2);
}

uint64_t sub_1000C9EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000C9694(a1, a2, a3);
}

uint64_t sub_1000C9F14()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "CRDTModelFileSyncTransport: About to disconnect", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(NSObject **)(v5 + 40);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(unsigned char *)(v7 + 24) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1000CB18C;
  *(void *)(v8 + 24) = v7;
  void v11[4] = sub_1000B0738;
  void v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100089470;
  v11[3] = &unk_100265570;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v6 & 1) == 0) {
    return sub_1000C8BF4((uint64_t)sub_1000CA618, (uint64_t)&unk_1002652A0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000CA114()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "CRDTModelFileSyncTransport: About to reconnect", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(NSObject **)(v5 + 40);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(unsigned char *)(v7 + 24) = 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1000CACC8;
  *(void *)(v8 + 24) = v7;
  void v11[4] = sub_1000B0738;
  void v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100089470;
  v11[3] = &unk_100265480;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    sub_1000C733C();
    return sub_1000C8BF4((uint64_t)sub_1000CA400, (uint64_t)&unk_100265188);
  }
  return result;
}

uint64_t sub_1000CA31C()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_100292968;
  uint64_t v2 = sub_1001EB560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1000CA390()
{
  sub_1000CA31C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRDTModelFileSyncTransport()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000CA400()
{
  sub_1000C80CC();
  return swift_release();
}

uint64_t sub_1000CA428(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000CA438()
{
  return swift_release();
}

uint64_t sub_1000CA440()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000CA478()
{
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000CA4B0(void *a1)
{
  return sub_1000C87F8(a1);
}

uint64_t sub_1000CA4C0(uint64_t a1)
{
  return sub_1000C8E88(a1);
}

uint64_t sub_1000CA4D0()
{
  uint64_t v1 = sub_1001EC0F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000CA5A8()
{
  uint64_t v1 = *(void *)(sub_1001EC0F0() - 8);
  sub_1000C9454(v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

void sub_1000CA61C()
{
  sub_1000C6B50(v0);
}

uint64_t sub_1000CA624()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CA634()
{
  return sub_1000C6EE4();
}

void sub_1000CA63C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  *(void *)(v0 + 64) = 0;
}

uint64_t sub_1000CA648()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000CA658(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 176));
}

uint64_t sub_1000CA678(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000CA6C0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10008155C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000CA710(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000CA738()
{
  uint64_t v1 = sub_1001EC0F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000CA830()
{
  sub_1001EC0F0();
  sub_1000C80CC();
  sub_1001EBFA0();
  return swift_release();
}

uint64_t sub_1000CA900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  uint64_t v21 = a4;
  uint64_t v5 = sub_1001EC9C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EC990();
  __chkstk_darwin(v9);
  uint64_t v10 = sub_1001EBAA0();
  __chkstk_darwin(v10 - 8);
  *(void *)(a2 + 32) = 0;
  v19[1] = sub_1000C0728();
  sub_1001EBA90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000CA678((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000CA6C0((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v5);
  *(void *)(a2 + 40) = sub_1001ECA00();
  *(unsigned char *)(a2 + 4_Block_object_dispose(&STACK[0x3B0], 8) = 1;
  *(void *)(a2 + 64) = 0;
  sub_1001EB550();
  uint64_t v11 = v21;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 56) = 0x403E000000000000;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  id v13 = objc_allocWithZone((Class)BUCoalescingCallBlock);
  aBlock[4] = sub_1000CB110;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000916AC;
  void aBlock[3] = &unk_100265598;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  NSString v15 = sub_1001EC340();
  id v16 = [v13 initWithNotifyBlock:v14 blockDescription:v15];

  _Block_release(v14);
  swift_release();
  swift_release();
  [v16 setCoalescingDelay:60.0];
  uint64_t v17 = *(void **)(a2 + 32);
  *(void *)(a2 + 32) = v16;

  return a2;
}

void sub_1000CACC8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000CACD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CACE8()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000CAD20()
{
  *(void *)(*(void *)(v0 + 16) + 56) = 0x403E000000000000;
}

uint64_t sub_1000CAD30()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CAD40()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1000CAD50(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  id v30 = a1;
  uint64_t v5 = (void *)*v3;
  uint64_t v6 = sub_1001EAF60();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  __chkstk_darwin(v6);
  uint64_t v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = v5[10];
  unint64_t v23 = v5[11];
  uint64_t v24 = sub_1001EC0F0();
  uint64_t v9 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v11 = (char *)&v23 - v10;
  unint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_1001ECD20(20);
  swift_bridgeObjectRelease();
  unint64_t v31 = 0xD000000000000012;
  unint64_t v32 = 0x80000001002214C0;
  uint64_t v12 = v5[13];
  v35._countAndFlagsBits = (*(uint64_t (**)(unint64_t, uint64_t))(v12 + 8))(v8, v12);
  sub_1001EC490(v35);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  uint64_t v13 = v5[12];
  unint64_t v31 = v8;
  unint64_t v32 = v23;
  uint64_t v33 = v13;
  uint64_t v34 = v12;
  uint64_t v14 = type metadata accessor for _CRDTModelFileSyncTransport();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v28, v24);
  uint64_t v15 = (uint64_t)v25;
  uint64_t v16 = v26;
  uint64_t v17 = v29;
  uint64_t v18 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v25, v29, v27);
  swift_allocObject();
  v3[2] = sub_1000C7BD8((uint64_t)v30, (uint64_t)v11, v15);
  type metadata accessor for _TransportConnectionManager();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = swift_retain();
  uint64_t v21 = sub_1000CA900(v20, v19, v14, (uint64_t)&off_100265140);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  v4[3] = v21;
  *(void *)(v4[2] + 24) = &off_100265170;
  swift_unknownObjectWeakAssign();
  return v4;
}

uint64_t sub_1000CB094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CB0AC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000CAD50);
}

uint64_t sub_1000CB0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  return a4(a1, a2, a3);
}

uint64_t sub_1000CB110()
{
  return sub_1000C6728();
}

uint64_t sub_1000CB118()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CB128()
{
  swift_release();
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000CB160()
{
  return sub_1000C7B2C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1000CB16C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 184));
}

uint64_t sub_1000CB218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return _swift_task_switch(sub_1000CB23C, 0, 0);
}

uint64_t sub_1000CB23C()
{
  v0[11] = [objc_allocWithZone((Class)BDSOSTransaction) initWithTransactionName:sub_1001EC400() + 32];
  swift_release();
  id v1 = [self books];
  id v2 = [v1 userDefaults];
  v0[12] = v2;

  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1001EC370();
  uint64_t v5 = v4;
  id v6 = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1000CB3A8;
  uint64_t v8 = v0[10];
  return sub_10013F7A8((uint64_t)(v0 + 2), (uint64_t)v6, v3, v5, 0, v8);
}

uint64_t sub_1000CB3A8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000CB4A4, 0, 0);
}

uint64_t sub_1000CB4A4()
{
  uint64_t v1 = *(void **)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 56);

  [v1 endTransaction];
  long long v3 = *(_OWORD *)(v0 + 16);
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = *(void *)(v0 + 48);
  *(_OWORD *)uint64_t v2 = v3;
  *(_OWORD *)(v2 + 16) = v4;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t static CRDTModelContextStore.persistentContext()()
{
  uint64_t v0 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v0 - 8);
  uint64_t v48 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1001EADC0();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  long long v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EAF60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v45 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v45 - v14;
  sub_1000CBB18();
  sub_1000CBB18();
  sub_1000CBC5C();
  sub_1001EAEE0();
  swift_bridgeObjectRelease();
  uint64_t v47 = v5;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v53 = v4;
  os_log_type_t v50 = v16;
  v16(v10, v4);
  sub_1001EC8D0();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_100292120;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100215320;
  id v19 = v17;
  unint64_t v55 = v13;
  uint64_t v20 = sub_1001EAE90();
  uint64_t v22 = v21;
  *(void *)(v18 + 56) = &type metadata for String;
  unint64_t v23 = sub_10007DC58();
  *(void *)(v18 + 64) = v23;
  *(void *)(v18 + 32) = v20;
  *(void *)(v18 + 40) = v22;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  sub_1001EADB0();
  sub_1001EADA0();
  id v24 = [self defaultManager];
  sub_1001EAEC0(v25);
  uint64_t v27 = v26;
  *(void *)&long long v56 = 0;
  LODWORD(v22) = [v24 createDirectoryAtURL:v26 withIntermediateDirectories:1 attributes:0 error:&v56];

  uint64_t v51 = v15;
  uint64_t v49 = v3;
  if (v22)
  {
    id v28 = (id)v56;
    sub_1001EAEB0();
    uint64_t v29 = v53;
    sub_1001EC190();
    uint64_t v30 = v47;
    unint64_t v31 = v55;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v55, v29);
    uint64_t v58 = 0;
    long long v56 = 0u;
    long long v57 = 0u;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v48, 1, 1, v29);
    uint64_t v43 = sub_1001EC180();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v54);
    uint64_t v44 = v31;
  }
  else
  {
    id v32 = (id)v56;
    sub_1001EAE60();

    swift_willThrow();
    uint64_t v29 = v53;
    sub_1001EC8F0();
    uint64_t v33 = (void *)qword_100292120;
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_100215310;
    id v35 = v33;
    uint64_t v36 = v55;
    uint64_t v37 = sub_1001EAE90();
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = v23;
    *(void *)(v34 + 32) = v37;
    *(void *)(v34 + 40) = v38;
    swift_getErrorValue();
    uint64_t v39 = sub_1001ED110();
    *(void *)(v34 + 96) = &type metadata for String;
    *(void *)(v34 + 104) = v23;
    *(void *)(v34 + 72) = v39;
    *(void *)(v34 + 80) = v40;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    sub_1001EC190();
    uint64_t v58 = 0;
    long long v56 = 0u;
    long long v57 = 0u;
    uint64_t v43 = sub_1001EC170();
    swift_errorRelease();
    sub_1000CBCD4((uint64_t)&v56);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v54);
    uint64_t v44 = v36;
  }
  uint64_t v41 = v50;
  v50(v44, v29);
  v41(v51, v29);
  return v43;
}

uint64_t sub_1000CBB18()
{
  uint64_t v0 = sub_1001EAF60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self books];
  id v5 = [v4 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000CBC5C()
{
  swift_getMetatypeMetadata();
  uint64_t v1 = sub_1001EC3F0();
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 0x2E747865746E6F43;
  v2._object = (void *)0xEA00000000006264;
  sub_1001EC490(v2);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1000CBCD4(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_1002931D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000CBD34()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRDTModelContextStore()
{
  return sub_1000C08A4();
}

uint64_t ReadingHistory.Streak.description.getter()
{
  sub_1001ECD20(23);
  swift_bridgeObjectRelease();
  sub_1001EB0C0();
  sub_1000D16D0(&qword_100293430, (void (*)(uint64_t))&type metadata accessor for Date);
  v1._countAndFlagsBits = sub_1001ED040();
  sub_1001EC490(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 0x6874676E656C202CLL;
  v2._object = (void *)0xE90000000000003ALL;
  sub_1001EC490(v2);
  type metadata accessor for ReadingHistory.Streak(0);
  v3._countAndFlagsBits = sub_1001ED040();
  sub_1001EC490(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 125;
  v4._object = (void *)0xE100000000000000;
  sub_1001EC490(v4);
  return 0x65746144646E657BLL;
}

uint64_t type metadata accessor for ReadingHistory.Streak(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100292BE0);
}

uint64_t ReadingHistory.Streak.init(endDate:length:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for ReadingHistory.Streak(0);
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

bookdatastored::ReadingHistory::Day __swiftcall ReadingHistory.Day.init(readingTime:goal:isStreakDay:)(Swift::Int readingTime, Swift::Int goal, Swift::Bool isStreakDay)
{
  Swift::Bool v3 = isStreakDay;
  result.goal = goal;
  result.readingTime = readingTime;
  result.isStreakDay = v3;
  return result;
}

void __swiftcall ReadingHistory.DayEntry.init(date:day:)(bookdatastored::ReadingHistory::DayEntry *__return_ptr retstr, Swift::String date, bookdatastored::ReadingHistory::Day day)
{
  retstr->date = date;
  retstr->day = day;
}

uint64_t ReadingHistory.State.init(currentStreak:longestStreak:today:readingHistory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v14 = (int *)type metadata accessor for ReadingHistory.State(0);
  uint64_t v15 = (uint64_t)a7 + v14[5];
  uint64_t v16 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *a7 = a1;
  uint64_t result = sub_1000CC06C(a2, v15);
  uint64_t v18 = (char *)a7 + v14[6];
  *(void *)uint64_t v18 = a3;
  *((void *)v18 + 1) = a4;
  v18[16] = a5;
  *(void *)((char *)a7 + v14[7]) = a6;
  return result;
}

uint64_t type metadata accessor for ReadingHistory.State(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100292C70);
}

uint64_t sub_1000CC06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100291C78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t PBPropertyConfiguration.ageToExpire.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*PBPropertyMarkedAsFinishedParam.value.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t _ReadingHistoryUpdateProperties.editGeneration.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PBPropertyConfiguration.countLimit.setter(uint64_t result)
{
  *(void *)(v1 + _Block_object_dispose(&STACK[0x3B0], 8) = result;
  return result;
}

uint64_t (*PBPropertyConfiguration.countLimit.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.Day.isStreakDay.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t ReadingHistory.Day.isStreakDay.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*PBPropertyConfiguration.eventName.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.Day.description.getter(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001ECD20(29);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = sub_1001ED040();
  sub_1001EC490(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x3A6C616F67202CLL;
  v8._object = (void *)0xE700000000000000;
  sub_1001EC490(v8);
  v9._countAndFlagsBits = sub_1001ED040();
  sub_1001EC490(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x6B6165727473202CLL;
  v10._object = (void *)0xE90000000000003ALL;
  sub_1001EC490(v10);
  if (a3) {
    v4._countAndFlagsBits = 1702195828;
  }
  else {
    v4._countAndFlagsBits = 0x65736C6166;
  }
  if (a3) {
    id v5 = (void *)0xE400000000000000;
  }
  else {
    id v5 = (void *)0xE500000000000000;
  }
  v4._object = v5;
  sub_1001EC490(v4);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 125;
  v11._object = (void *)0xE100000000000000;
  sub_1001EC490(v11);
  return 0x3A656D69747BLL;
}

uint64_t static ReadingHistory.Day.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v7 = a1 == a4 && a2 == a5;
  return v7 & (a3 ^ a6 ^ 1u);
}

uint64_t sub_1000CC2DC()
{
  uint64_t v1 = 1818324839;
  if (*v0 != 1) {
    uint64_t v1 = 0x6B61657274537369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x54676E6964616572;
  }
}

uint64_t sub_1000CC340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D0FA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000CC368(uint64_t a1)
{
  unint64_t v2 = sub_1000CC578();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CC3A4(uint64_t a1)
{
  unint64_t v2 = sub_1000CC578();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingHistory.Day.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  v10[1] = a3;
  uint64_t v5 = sub_10007DC14(&qword_100292A80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_1000CC578();
  sub_1001ED1F0();
  char v13 = 0;
  sub_1001ED010();
  if (!v3)
  {
    char v12 = 1;
    sub_1001ED010();
    char v11 = 2;
    sub_1001ECFF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1000CC578()
{
  unint64_t result = qword_100292A88;
  if (!qword_100292A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292A88);
  }
  return result;
}

uint64_t ReadingHistory.Day.init(from:)(void *a1)
{
  uint64_t result = sub_1000D111C(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_1000CC5F4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000CC628@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000D111C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1000CC65C(void *a1)
{
  return ReadingHistory.Day.encode(to:)(a1, *v1, v1[1]);
}

uint64_t ReadingHistory.DayEntry.date.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReadingHistory.DayEntry.date.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t ReadingHistory.DayEntry.day.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ReadingHistory.DayEntry.day.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = result;
  *(void *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 32) = a3;
  return result;
}

uint64_t ReadingHistory.DayEntry.description.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v1;
  v4._object = v2;
  sub_1001EC490(v4);
  sub_100087A3C(v0);
  v5._countAndFlagsBits = 8250;
  v5._object = (void *)0xE200000000000000;
  sub_1001EC490(v5);
  v6._countAndFlagsBits = ReadingHistory.Day.description.getter(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_1001EC490(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 125;
  v7._object = (void *)0xE100000000000000;
  sub_1001EC490(v7);
  return 123;
}

BOOL static ReadingHistory.DayEntry.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_1001ED080(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    return v7 && (*(unsigned char *)(a1 + 32) & 1) == (*(unsigned char *)(a2 + 32) & 1);
  }
  return result;
}

uint64_t sub_1000CC828()
{
  if (*v0) {
    return 7954788;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1000CC854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D1390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000CC87C(uint64_t a1)
{
  unint64_t v2 = sub_1000D12E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CC8B8(uint64_t a1)
{
  unint64_t v2 = sub_1000D12E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingHistory.DayEntry.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_100292A90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1000D12E8();
  sub_1001ED1F0();
  LOBYTE(v11) = 0;
  sub_1001ECFE0();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + 16);
    char v12 = *(unsigned char *)(v3 + 32);
    v10[15] = 1;
    sub_1000D133C();
    sub_1001ED020();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

double ReadingHistory.DayEntry.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000D1464(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1000CCABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_1001ED080(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 ^ v7 ^ 1u;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000CCB40(void *a1)
{
  return ReadingHistory.DayEntry.encode(to:)(a1);
}

uint64_t ReadingHistory.Streak.length.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Streak(0) + 20));
}

BOOL static ReadingHistory.Streak.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1001EB090() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ReadingHistory.Streak(0);
  return *(void *)(a1 + *(int *)(v4 + 20)) == *(void *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_1000CCBD0()
{
  if (*v0) {
    return 0x6874676E656CLL;
  }
  else {
    return 0x65746144646E65;
  }
}

uint64_t sub_1000CCC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D3D00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000CCC30(uint64_t a1)
{
  unint64_t v2 = sub_1000D167C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CCC6C(uint64_t a1)
{
  unint64_t v2 = sub_1000D167C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingHistory.Streak.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100292AA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1000D167C();
  sub_1001ED1F0();
  v8[15] = 0;
  sub_1001EB0C0();
  sub_1000D16D0(&qword_100292138, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001ED020();
  if (!v1)
  {
    type metadata accessor for ReadingHistory.Streak(0);
    v8[14] = 1;
    sub_1001ED010();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ReadingHistory.Streak.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10007DC14(&qword_100292AB8);
  uint64_t v21 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  BOOL v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  __chkstk_darwin(v9);
  long long v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_1000D167C();
  sub_1001ED1D0();
  if (v2) {
    return sub_1000947F0((uint64_t)a1);
  }
  id v19 = v11;
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  char v26 = 0;
  sub_1000D16D0(&qword_100292148, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v14 = v23;
  sub_1001ECFA0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v6, v14);
  char v25 = 1;
  uint64_t v15 = sub_1001ECF90();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v24);
  uint64_t v17 = (uint64_t)v19;
  uint64_t v16 = v20;
  *(void *)&v19[*(int *)(v9 + 20)] = v15;
  sub_1000D199C(v17, v16, type metadata accessor for ReadingHistory.Streak);
  sub_1000947F0((uint64_t)a1);
  return sub_1000D1A04(v17, type metadata accessor for ReadingHistory.Streak);
}

BOOL sub_1000CD19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_1001EB090() & 1) != 0 && *(void *)(a1 + *(int *)(a3 + 20)) == *(void *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_1000CD1F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.Streak.init(from:)(a1, a2);
}

uint64_t sub_1000CD208(void *a1)
{
  return ReadingHistory.Streak.encode(to:)(a1);
}

uint64_t PBPropertyConfiguration.ageToExpire.getter()
{
  return *(void *)v0;
}

uint64_t ReadingHistory.State.longestStreak.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 20);
  return sub_1000D1718(v3, a1);
}

uint64_t ReadingHistory.State.longestStreak.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 20);
  return sub_1000CC06C(a1, v3);
}

uint64_t (*ReadingHistory.State.longestStreak.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.State.today.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 24));
}

uint64_t ReadingHistory.State.today.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for ReadingHistory.State(0);
  uint64_t v8 = v3 + *(int *)(result + 24);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + _Block_object_dispose(&STACK[0x3B0], 8) = a2;
  *(unsigned char *)(v8 + 16) = a3;
  return result;
}

uint64_t (*ReadingHistory.State.today.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.State.readingHistory.getter()
{
  type metadata accessor for ReadingHistory.State(0);
  return swift_bridgeObjectRetain();
}

uint64_t ReadingHistory.State.readingHistory.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ReadingHistory.State(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ReadingHistory.State.readingHistory.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.State.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100215850;
  uint64_t v39 = *v0;
  sub_100086354();
  uint64_t v6 = sub_1001ECBE0();
  uint64_t v8 = v7;
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v9 = sub_10007DC58();
  *(void *)(v5 + 64) = v9;
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  uint64_t v10 = (int *)type metadata accessor for ReadingHistory.State(0);
  sub_1000D1718((uint64_t)v1 + v10[5], (uint64_t)v4);
  uint64_t v11 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v4, 1, v11) == 1)
  {
    sub_1000816A4((uint64_t)v4, &qword_100291C78);
    uint64_t v12 = (uint64_t *)(v5 + 72);
    *(void *)(v5 + 96) = &type metadata for String;
    *(void *)(v5 + 104) = v9;
  }
  else
  {
    uint64_t v13 = ReadingHistory.Streak.description.getter();
    unint64_t v15 = v14;
    sub_1000D1A04((uint64_t)v4, type metadata accessor for ReadingHistory.Streak);
    uint64_t v12 = (uint64_t *)(v5 + 72);
    *(void *)(v5 + 96) = &type metadata for String;
    *(void *)(v5 + 104) = v9;
    if (v15)
    {
      *uint64_t v12 = v13;
      goto LABEL_6;
    }
  }
  *uint64_t v12 = 7104878;
  unint64_t v15 = 0xE300000000000000;
LABEL_6:
  *(void *)(v5 + 80) = v15;
  uint64_t v16 = ReadingHistory.Day.description.getter(*(uint64_t *)((char *)v1 + v10[6]), *(uint64_t *)((char *)v1 + v10[6] + 8), *((unsigned char *)v1 + v10[6] + 16));
  *(void *)(v5 + 136) = &type metadata for String;
  *(void *)(v5 + 144) = v9;
  *(void *)(v5 + 112) = v16;
  *(void *)(v5 + 120) = v17;
  uint64_t v18 = *(uint64_t *)((char *)v1 + v10[7]);
  int64_t v19 = *(void *)(v18 + 16);
  uint64_t v20 = _swiftEmptyArrayStorage;
  if (v19)
  {
    unint64_t v37 = v9;
    uint64_t v38 = v5;
    uint64_t v41 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1000CF7D0(0, v19, 0);
    uint64_t v20 = v41;
    uint64_t v36 = v18;
    uint64_t v21 = (char *)(v18 + 64);
    do
    {
      uint64_t v22 = *((void *)v21 - 4);
      uint64_t v23 = (void *)*((void *)v21 - 3);
      uint64_t v24 = *((void *)v21 - 2);
      uint64_t v25 = *((void *)v21 - 1);
      char v26 = *v21;
      uint64_t v39 = 123;
      unint64_t v40 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      v42._countAndFlagsBits = v22;
      v42._object = v23;
      sub_1001EC490(v42);
      v43._countAndFlagsBits = 8250;
      v43._object = (void *)0xE200000000000000;
      sub_1001EC490(v43);
      v44._countAndFlagsBits = ReadingHistory.Day.description.getter(v24, v25, v26);
      sub_1001EC490(v44);
      swift_bridgeObjectRelease();
      v45._countAndFlagsBits = 125;
      v45._object = (void *)0xE100000000000000;
      sub_1001EC490(v45);
      swift_bridgeObjectRelease();
      uint64_t v27 = v39;
      unint64_t v28 = v40;
      uint64_t v41 = v20;
      unint64_t v30 = v20[2];
      unint64_t v29 = v20[3];
      if (v30 >= v29 >> 1)
      {
        sub_1000CF7D0(v29 > 1, v30 + 1, 1);
        uint64_t v20 = v41;
      }
      void v20[2] = v30 + 1;
      unint64_t v31 = &v20[2 * v30];
      v31[4] = v27;
      v31[5] = v28;
      v21 += 40;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    unint64_t v9 = v37;
    uint64_t v5 = v38;
  }
  uint64_t v39 = (uint64_t)v20;
  sub_10007DC14(&qword_100292710);
  sub_1000D1780();
  uint64_t v32 = sub_1001EC300();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  *(void *)(v5 + 176) = &type metadata for String;
  *(void *)(v5 + 184) = v9;
  *(void *)(v5 + 152) = v32;
  *(void *)(v5 + 160) = v34;
  return sub_1001EC3A0();
}

uint64_t sub_1000CD7EC()
{
  uint64_t result = 0x53746E6572727563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x53747365676E6F6CLL;
      break;
    case 2:
      uint64_t result = 0x7961646F74;
      break;
    case 3:
      uint64_t result = 0x48676E6964616572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000CD88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D3DEC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000CD8B4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1000CD8C0(uint64_t a1)
{
  unint64_t v2 = sub_1000D17DC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CD8FC(uint64_t a1)
{
  unint64_t v2 = sub_1000D17DC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingHistory.State.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_100292AC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_1000D17DC();
  sub_1001ED1F0();
  LOBYTE(v15) = 0;
  sub_1001ED010();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for ReadingHistory.State(0);
    LOBYTE(v15) = 1;
    type metadata accessor for ReadingHistory.Streak(0);
    sub_1000D16D0(&qword_100292AD0, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Streak);
    sub_1001ECFD0();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 24));
    char v11 = *((unsigned char *)v10 + 16);
    long long v15 = *v10;
    char v16 = v11;
    char v14 = 2;
    sub_1000D133C();
    sub_1001ED020();
    *(void *)&long long v15 = *(void *)(v3 + *(int *)(v9 + 28));
    char v14 = 3;
    sub_10007DC14(&qword_100292AD8);
    sub_1000D18D8(&qword_100292AE0, (void (*)(void))sub_1000D1830);
    sub_1001ED020();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ReadingHistory.State.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v3 - 8);
  uint64_t v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10007DC14(&qword_100292AF0);
  uint64_t v26 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistory.State(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (uint64_t)v10 + *(int *)(v8 + 20);
  uint64_t v12 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_100094758(a1, a1[3]);
  sub_1000D17DC();
  unint64_t v28 = v6;
  uint64_t v13 = (uint64_t)v30;
  sub_1001ED1D0();
  if (v13)
  {
    sub_1000947F0((uint64_t)a1);
    return sub_1000816A4(v11, &qword_100291C78);
  }
  else
  {
    unint64_t v30 = a1;
    uint64_t v14 = (uint64_t)v10;
    uint64_t v24 = v7;
    uint64_t v16 = v26;
    uint64_t v15 = (uint64_t)v27;
    LOBYTE(v31) = 0;
    uint64_t v17 = v28;
    uint64_t v18 = v29;
    *uint64_t v10 = sub_1001ECF90();
    LOBYTE(v31) = 1;
    sub_1000D16D0(&qword_100292AF8, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Streak);
    sub_1001ECF50();
    sub_1000CC06C(v15, v11);
    char v33 = 2;
    sub_1000D1884();
    sub_1001ECFA0();
    char v19 = v32;
    uint64_t v20 = v24;
    uint64_t v21 = v14 + *(int *)(v24 + 24);
    *(_OWORD *)uint64_t v21 = v31;
    *(unsigned char *)(v21 + 16) = v19;
    sub_10007DC14(&qword_100292AD8);
    char v33 = 3;
    sub_1000D18D8(&qword_100292B08, (void (*)(void))sub_1000D1948);
    sub_1001ECFA0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    *(void *)(v14 + *(int *)(v20 + 28)) = v31;
    sub_1000D199C(v14, v25, type metadata accessor for ReadingHistory.State);
    sub_1000947F0((uint64_t)v30);
    return sub_1000D1A04(v14, type metadata accessor for ReadingHistory.State);
  }
}

uint64_t sub_1000CDFC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.State.init(from:)(a1, a2);
}

uint64_t sub_1000CDFD8(void *a1)
{
  return ReadingHistory.State.encode(to:)(a1);
}

void *ReadingHistory.UserDefaults.sessionStartOffset.unsafeMutableAddressor()
{
  return &static ReadingHistory.UserDefaults.sessionStartOffset;
}

unint64_t static ReadingHistory.UserDefaults.sessionStartOffset.getter()
{
  return 0xD00000000000002ELL;
}

void sub_1000CE018(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1000CE024(uint64_t a1)
{
  unint64_t v2 = sub_1000D1A64();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CE060(uint64_t a1)
{
  unint64_t v2 = sub_1000D1A64();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.encode(to:)(void *a1)
{
  return sub_1000CE94C(a1, &qword_100292B18, (void (*)(void))sub_1000D1A64);
}

uint64_t ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.init(from:)(uint64_t a1)
{
  return sub_1000947F0(a1);
}

uint64_t sub_1000CE10C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CEAA8(a1, a2, a3, &qword_100292B18, (void (*)(void))sub_1000D1A64);
}

uint64_t _s14bookdatastored14ReadingHistoryO6StreakV7endDate10Foundation0F0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001EB0C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

double ReadingHistory.Notification.AddFakeSession.duration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Notification.AddFakeSession(0) + 20));
}

uint64_t ReadingHistory.Notification.AddFakeSession.init(date:duration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  uint64_t result = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
  *(double *)(a2 + *(int *)(result + 20)) = a3;
  return result;
}

BOOL sub_1000CE250(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1000CE268()
{
  if (*v0) {
    return 0x6E6F697461727564;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1000CE29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D4004(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000CE2C4(uint64_t a1)
{
  unint64_t v2 = sub_1000D1AD8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CE300(uint64_t a1)
{
  unint64_t v2 = sub_1000D1AD8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingHistory.Notification.AddFakeSession.encode(to:)(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100292B28);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1000D1AD8();
  sub_1001ED1F0();
  v8[15] = 0;
  sub_1001EB0C0();
  sub_1000D16D0(&qword_100292138, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001ED020();
  if (!v1)
  {
    type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
    v8[14] = 1;
    sub_1001ED000();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ReadingHistory.Notification.AddFakeSession.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10007DC14(&qword_100292B38);
  uint64_t v23 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_1000D1AD8();
  sub_1001ED1D0();
  if (v2) {
    return sub_1000947F0((uint64_t)a1);
  }
  uint64_t v21 = v11;
  uint64_t v12 = v23;
  uint64_t v13 = v24;
  char v28 = 0;
  sub_1000D16D0(&qword_100292148, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v14 = v25;
  sub_1001ECFA0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v21, v6, v14);
  char v27 = 1;
  sub_1001ECF80();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v26);
  uint64_t v18 = (uint64_t)v21;
  uint64_t v17 = v22;
  *(void *)&v21[*(int *)(v9 + 20)] = v16;
  sub_1000D199C(v18, v17, type metadata accessor for ReadingHistory.Notification.AddFakeSession);
  sub_1000947F0((uint64_t)a1);
  return sub_1000D1A04(v18, type metadata accessor for ReadingHistory.Notification.AddFakeSession);
}

uint64_t sub_1000CE838@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.Notification.AddFakeSession.init(from:)(a1, a2);
}

uint64_t sub_1000CE850(void *a1)
{
  return ReadingHistory.Notification.AddFakeSession.encode(to:)(a1);
}

uint64_t sub_1000CE868@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1000CE898(uint64_t a1)
{
  unint64_t v2 = sub_1000D1B2C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000CE8D4(uint64_t a1)
{
  unint64_t v2 = sub_1000D1B2C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReadingHistory.Notification.ClearToday.encode(to:)(void *a1)
{
  return sub_1000CE94C(a1, &qword_100292B40, (void (*)(void))sub_1000D1B2C);
}

uint64_t sub_1000CE94C(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = sub_10007DC14(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  a3();
  sub_1001ED1F0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000CEA6C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000CEAA8(a1, a2, a3, &qword_100292B40, (void (*)(void))sub_1000D1B2C);
}

uint64_t sub_1000CEAA8(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = sub_10007DC14(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  a5();
  sub_1001ED1F0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

BDSReadingHistoryDayInfo __swiftcall ReadingHistory.Day.toInfo()()
{
  char v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  id v6 = objc_allocWithZone((Class)BDSReadingHistoryDayInfo);
  uint64_t v7 = (objc_class *)[v6 initWithReadingTime:v5 goal:v4 isStreakDay:v3 & 1];
  result._goal = v10;
  result._readingTime = v9;
  result.super.Class isa = v7;
  result._isStreakDay = v8;
  return result;
}

id static ReadingHistory.Day.from(info:)(void *a1)
{
  id v2 = [a1 readingTime];
  [a1 goal];
  [a1 isStreakDay];
  return v2;
}

BDSReadingHistoryDayEntryInfo __swiftcall ReadingHistory.DayEntry.toInfo()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(unsigned char *)(v0 + 32) & 1;
  id v4 = objc_allocWithZone((Class)BDSReadingHistoryDayInfo);
  swift_bridgeObjectRetain();
  id v5 = [v4 initWithReadingTime:v1 goal:v2 isStreakDay:v3];
  id v6 = objc_allocWithZone((Class)BDSReadingHistoryDayEntryInfo);
  NSString v7 = sub_1001EC340();
  sub_100087A3C(v0);
  BOOL v8 = (objc_class *)[v6 initWithDate:v7 day:v5];

  uint64_t v11 = v8;
  result._day = v10;
  result._date = v9;
  result.super.Class isa = v11;
  return result;
}

void static ReadingHistory.DayEntry.from(info:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 date];
  uint64_t v5 = sub_1001EC370();
  uint64_t v7 = v6;

  id v8 = [a1 day];
  id v9 = [v8 readingTime];
  id v10 = [v8 goal];
  unsigned __int8 v11 = [v8 isStreakDay];

  *(void *)a2 = v5;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v7;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v11;
}

BDSReadingHistoryStreakInfo __swiftcall ReadingHistory.Streak.toInfo()()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Streak(0) + 20));
  id v2 = objc_allocWithZone((Class)BDSReadingHistoryStreakInfo);
  Class isa = sub_1001EB060().super.isa;
  id v4 = (objc_class *)[v2 initWithEndDate:isa length:v1];

  uint64_t v7 = v4;
  result._length = v6;
  result._endDate = v5;
  result.super.Class isa = v7;
  return result;
}

uint64_t static ReadingHistory.Streak.from(info:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 endDate];
  sub_1001EB0A0();

  id v5 = [a1 length];
  uint64_t result = type metadata accessor for ReadingHistory.Streak(0);
  *(void *)(a2 + *(int *)(result + 20)) = v5;
  return result;
}

void __swiftcall ReadingHistory.State.toInfo()(BDSReadingHistoryStateInfo *__return_ptr retstr)
{
  id v2 = v1;
  uint64_t v3 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v2;
  uint64_t v7 = (int *)type metadata accessor for ReadingHistory.State(0);
  sub_1000D1718((uint64_t)v2 + v7[5], (uint64_t)v5);
  uint64_t v8 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100291C78);
    id v9 = 0;
  }
  else
  {
    uint64_t v10 = *(void *)&v5[*(int *)(v8 + 20)];
    id v11 = objc_allocWithZone((Class)BDSReadingHistoryStreakInfo);
    Class isa = sub_1001EB060().super.isa;
    id v9 = [v11 initWithEndDate:isa length:v10];

    sub_1000D1A04((uint64_t)v5, type metadata accessor for ReadingHistory.Streak);
  }
  uint64_t v13 = (char *)v2 + v7[6];
  id v14 = [objc_allocWithZone((Class)BDSReadingHistoryDayInfo) initWithReadingTime:*(void *)v13 goal:*((void *)v13 + 1) isStreakDay:v13[16]];
  uint64_t v15 = v14;
  uint64_t v16 = *(uint64_t *)((char *)v2 + v7[7]);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    id v29 = v14;
    id v30 = v9;
    uint64_t v31 = v6;
    char v32 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001ECDD0();
    v28[1] = v16;
    uint64_t v18 = (unsigned __int8 *)(v16 + 64);
    do
    {
      uint64_t v19 = *((void *)v18 - 2);
      uint64_t v20 = *((void *)v18 - 1);
      unsigned int v21 = *v18;
      v18 += 40;
      id v22 = objc_allocWithZone((Class)BDSReadingHistoryDayInfo);
      swift_bridgeObjectRetain();
      id v23 = [v22 initWithReadingTime:v19 goal:v20 isStreakDay:v21];
      id v24 = objc_allocWithZone((Class)BDSReadingHistoryDayEntryInfo);
      NSString v25 = sub_1001EC340();
      [v24 initWithDate:v25 day:v23];
      swift_bridgeObjectRelease();

      sub_1001ECDA0();
      sub_1001ECDE0();
      sub_1001ECDF0();
      sub_1001ECDB0();
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    id v9 = v30;
    uint64_t v6 = v31;
    uint64_t v15 = v29;
  }
  id v26 = objc_allocWithZone((Class)BDSReadingHistoryStateInfo);
  sub_1000D1B80();
  Class v27 = sub_1001EC5D0().super.isa;
  swift_bridgeObjectRelease();
  [v26 initWithCurrentStreak:v6 longestStreak:v9 today:v15 readingHistory:v27];
}

uint64_t static ReadingHistory.State.from(info:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 currentStreak];
  id v8 = [a1 longestStreak];
  if (v8)
  {
    id v9 = v8;
    id v10 = [v8 endDate];
    sub_1001EB0A0();

    id v11 = [v9 length];
    uint64_t v12 = type metadata accessor for ReadingHistory.Streak(0);
    *(void *)&v6[*(int *)(v12 + 20)] = v11;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v6, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = type metadata accessor for ReadingHistory.Streak(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  id v14 = [a1 today];
  id v15 = [v14 readingTime];
  id v16 = [v14 goal];
  unsigned int v17 = [v14 isStreakDay];

  id v18 = [a1 readingHistory];
  sub_1000D1B80();
  unint64_t v19 = sub_1001EC5E0();

  unint64_t v20 = v19;
  unint64_t v50 = v19;
  if (!(v19 >> 62))
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    id v24 = _swiftEmptyArrayStorage;
LABEL_17:
    uint64_t v38 = (int *)type metadata accessor for ReadingHistory.State(0);
    uint64_t v39 = (uint64_t)a2 + v38[5];
    uint64_t v40 = type metadata accessor for ReadingHistory.Streak(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    *a2 = v7;
    uint64_t result = sub_1000CC06C((uint64_t)v6, v39);
    uint64_t v41 = (char *)a2 + v38[6];
    *(void *)uint64_t v41 = v15;
    *((void *)v41 + 1) = v16;
    v41[16] = v17;
    *(void *)((char *)a2 + v38[7]) = v24;
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = v50;
  uint64_t v21 = sub_1001ECEA0();
  swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t v51 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000CF7F0(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v49 = v21;
    HIDWORD(v42) = v17;
    id v43 = v16;
    id v44 = v15;
    id v45 = v7;
    uint64_t v46 = v6;
    uint64_t v23 = 0;
    id v24 = v51;
    uint64_t v47 = a2;
    unint64_t v48 = v20 & 0xC000000000000001;
    do
    {
      if (v48) {
        id v25 = (id)sub_1001ECD50();
      }
      else {
        id v25 = *(id *)(v20 + 8 * v23 + 32);
      }
      id v26 = v25;
      id v27 = [v25 date];
      uint64_t v28 = sub_1001EC370();
      uint64_t v30 = v29;

      id v31 = [v26 day];
      id v32 = [v31 readingTime];
      id v33 = [v31 goal];
      unsigned __int8 v34 = [v31 isStreakDay];

      uint64_t v51 = v24;
      unint64_t v36 = v24[2];
      unint64_t v35 = v24[3];
      if (v36 >= v35 >> 1)
      {
        sub_1000CF7F0(v35 > 1, v36 + 1, 1);
        id v24 = v51;
      }
      ++v23;
      v24[2] = v36 + 1;
      unint64_t v37 = &v24[5 * v36];
      v37[4] = v28;
      v37[5] = v30;
      void v37[6] = v32;
      v37[7] = v33;
      *((unsigned char *)v37 + 64) = v34;
      unint64_t v20 = v50;
    }
    while (v49 != v23);
    swift_bridgeObjectRelease();
    uint64_t v6 = v46;
    a2 = v47;
    id v15 = v44;
    id v7 = v45;
    id v16 = v43;
    LOBYTE(v17) = BYTE4(v42);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t BDSReadingHistoryStreakInfo.toStreak()@<X0>(uint64_t a1@<X8>)
{
  id v3 = [v1 endDate];
  sub_1001EB0A0();

  id v4 = [v1 length];
  uint64_t result = type metadata accessor for ReadingHistory.Streak(0);
  *(void *)(a1 + *(int *)(result + 20)) = v4;
  return result;
}

bookdatastored::ReadingHistory::Day __swiftcall BDSReadingHistoryDayInfo.toDay()()
{
  id v1 = [v0 readingTime];
  id v2 = [v0 goal];
  unsigned __int8 v3 = [v0 isStreakDay];
  Swift::Int v4 = (Swift::Int)v1;
  Swift::Int v5 = (Swift::Int)v2;
  result.goal = v5;
  result.readingTime = v4;
  result.isStreakDay = v3;
  return result;
}

uint64_t sub_1000CF754(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000CF980(a1, a2, a3, *v3);
  *unsigned __int8 v3 = (char *)result;
  return result;
}

uint64_t sub_1000CF774(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000CFB08(a1, a2, a3, *v3);
  *unsigned __int8 v3 = (char *)result;
  return result;
}

uint64_t sub_1000CF794(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D03E8(a1, a2, a3, (void *)*v3, &qword_100291EA0, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
  *unsigned __int8 v3 = result;
  return result;
}

uint64_t sub_1000CF7D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000CFC88(a1, a2, a3, *v3);
  *unsigned __int8 v3 = (char *)result;
  return result;
}

uint64_t sub_1000CF7F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000CFF88(a1, a2, a3, *v3);
  *unsigned __int8 v3 = (char *)result;
  return result;
}

uint64_t sub_1000CF810(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D03E8(a1, a2, a3, (void *)*v3, &qword_100292E10, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.PendingDatabaseChange);
  *unsigned __int8 v3 = result;
  return result;
}

uint64_t sub_1000CF84C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D03E8(a1, a2, a3, (void *)*v3, &qword_100292DF0, (uint64_t (*)(void))_s8CardItemVMa);
  *unsigned __int8 v3 = result;
  return result;
}

uint64_t sub_1000CF888(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D0100(a1, a2, a3, *v3);
  *unsigned __int8 v3 = (char *)result;
  return result;
}

uint64_t sub_1000CF8A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D026C(a1, a2, a3, *v3);
  *unsigned __int8 v3 = (char *)result;
  return result;
}

uint64_t sub_1000CF8C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D03E8(a1, a2, a3, (void *)*v3, &qword_100291E98, (uint64_t (*)(void))_s4DealVMa);
  *unsigned __int8 v3 = result;
  return result;
}

uint64_t sub_1000CF904(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D03E8(a1, a2, a3, (void *)*v3, &qword_100291E88, (uint64_t (*)(void))_s11TrackedItemVMa);
  *unsigned __int8 v3 = result;
  return result;
}

uint64_t sub_1000CF940(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D0644(a1, a2, a3, *v3);
  *unsigned __int8 v3 = (char *)result;
  return result;
}

uint64_t sub_1000CF960(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000D07A4(a1, a2, a3, *v3);
  *unsigned __int8 v3 = (char *)result;
  return result;
}

uint64_t sub_1000CF980(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100292DF8);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[104 * v8] || v12 >= &v13[104 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000CFB08(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100291ED0);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000CFC68(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000D03E8(a1, a2, a3, a4, &qword_100291EA0, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
}

uint64_t sub_1000CFC88(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100291EC8);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000CFDF4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000D092C(a1, a2, a3, a4, &qword_100292E38, &qword_100292E40);
}

uint64_t sub_1000CFE08(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100292E18);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000CFF68(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000D03E8(a1, a2, a3, a4, &qword_100292010, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1000CFF88(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100292030);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000D0100(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100292DE8);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000D026C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100291E90);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000D03E8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    id v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10007DC14(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  id v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  id v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  id v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000D0630(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000D092C(a1, a2, a3, a4, &qword_100291EB8, &qword_100291EC0);
}

uint64_t sub_1000D0644(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100292DE0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000D07A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007DC14(&qword_100292DD8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_1000D0904(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000D092C(a1, a2, a3, a4, &qword_100292E00, &qword_100291F68);
}

uint64_t sub_1000D0918(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000D092C(a1, a2, a3, a4, &qword_100292E08, &qword_100291F98);
}

uint64_t sub_1000D092C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    id v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10007DC14(a5);
  uint64_t v13 = *(void *)(sub_10007DC14(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  id v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10007DC14(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  id v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  id v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t _s14bookdatastored14ReadingHistoryO5StateV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100292E20);
  __chkstk_darwin(v8);
  int64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100291C78);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  size_t v17 = (char *)&v37 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - v18;
  if (*a1 != *a2) {
    goto LABEL_13;
  }
  uint64_t v20 = type metadata accessor for ReadingHistory.State(0);
  uint64_t v21 = a1;
  uint64_t v22 = v20;
  uint64_t v23 = *(int *)(v20 + 20);
  uint64_t v38 = v21;
  sub_1000D1718((uint64_t)v21 + v23, (uint64_t)v19);
  uint64_t v39 = v22;
  uint64_t v40 = a2;
  sub_1000D1718((uint64_t)a2 + *(int *)(v22 + 20), (uint64_t)v17);
  uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000D1718((uint64_t)v19, (uint64_t)v10);
  sub_1000D1718((uint64_t)v17, v24);
  unint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) != 1)
  {
    sub_1000D1718((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v4) != 1)
    {
      sub_1000D40E8(v24, (uint64_t)v7);
      if (sub_1001EB090())
      {
        uint64_t v34 = *(int *)(v4 + 20);
        uint64_t v35 = *(void *)&v14[v34];
        uint64_t v36 = *(void *)&v7[v34];
        sub_1000D1A04((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
        sub_1000816A4((uint64_t)v17, &qword_100291C78);
        sub_1000816A4((uint64_t)v19, &qword_100291C78);
        sub_1000D1A04((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
        sub_1000816A4((uint64_t)v10, &qword_100291C78);
        if (v35 == v36) {
          goto LABEL_5;
        }
LABEL_13:
        char v26 = 0;
        return v26 & 1;
      }
      sub_1000D1A04((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
      sub_1000816A4((uint64_t)v17, &qword_100291C78);
      sub_1000816A4((uint64_t)v19, &qword_100291C78);
      sub_1000D1A04((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
      uint64_t v32 = (uint64_t)v10;
      id v31 = &qword_100291C78;
LABEL_12:
      sub_1000816A4(v32, v31);
      goto LABEL_13;
    }
    sub_1000816A4((uint64_t)v17, &qword_100291C78);
    sub_1000816A4((uint64_t)v19, &qword_100291C78);
    sub_1000D1A04((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
LABEL_11:
    id v31 = &qword_100292E20;
    uint64_t v32 = (uint64_t)v10;
    goto LABEL_12;
  }
  sub_1000816A4((uint64_t)v17, &qword_100291C78);
  sub_1000816A4((uint64_t)v19, &qword_100291C78);
  if (v25(v24, 1, v4) != 1) {
    goto LABEL_11;
  }
  sub_1000816A4((uint64_t)v10, &qword_100291C78);
LABEL_5:
  char v26 = 0;
  uint64_t v27 = *(int *)(v39 + 24);
  uint64_t v28 = (uint64_t)v38 + v27;
  uint64_t v29 = *(void *)((char *)v38 + v27);
  uint64_t v30 = (char *)v40 + v27;
  if (v29 == *(void *)v30
    && *(void *)(v28 + 8) == *((void *)v30 + 1)
    && ((*(unsigned __int8 *)(v28 + 16) ^ v30[16]) & 1) == 0)
  {
    char v26 = sub_1001B5D9C(*(void *)((char *)v38 + *(int *)(v39 + 28)), *(void *)((char *)v40 + *(int *)(v39 + 28)));
  }
  return v26 & 1;
}

uint64_t sub_1000D0FA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x54676E6964616572 && a2 == 0xEB00000000656D69;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1818324839 && a2 == 0xE400000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B61657274537369 && a2 == 0xEB00000000796144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000D111C(void *a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100292E30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1000CC578();
  sub_1001ED1D0();
  v8[15] = 0;
  uint64_t v6 = sub_1001ECF90();
  v8[14] = 1;
  sub_1001ECF90();
  v8[13] = 2;
  sub_1001ECF70();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1000947F0((uint64_t)a1);
  return v6;
}

unint64_t sub_1000D12E8()
{
  unint64_t result = qword_100292A98;
  if (!qword_100292A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292A98);
  }
  return result;
}

unint64_t sub_1000D133C()
{
  unint64_t result = qword_100292AA0;
  if (!qword_100292AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292AA0);
  }
  return result;
}

uint64_t sub_1000D1390(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7954788 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000D1464@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10007DC14(&qword_100292E28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_1000D12E8();
  sub_1001ED1D0();
  if (v2) {
    return sub_1000947F0((uint64_t)a1);
  }
  LOBYTE(v17) = 0;
  uint64_t v9 = sub_1001ECF60();
  uint64_t v11 = v10;
  char v20 = 1;
  sub_1000D1884();
  swift_bridgeObjectRetain();
  sub_1001ECFA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v17;
  uint64_t v13 = v18;
  char v14 = v19;
  sub_1000947F0((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v11;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v13;
  *(unsigned char *)(a2 + 32) = v14;
  return result;
}

unint64_t sub_1000D167C()
{
  unint64_t result = qword_100292AB0;
  if (!qword_100292AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292AB0);
  }
  return result;
}

uint64_t sub_1000D16D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D1718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100291C78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000D1780()
{
  unint64_t result = qword_100291F60;
  if (!qword_100291F60)
  {
    sub_10008155C(&qword_100292710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100291F60);
  }
  return result;
}

unint64_t sub_1000D17DC()
{
  unint64_t result = qword_100292AC8;
  if (!qword_100292AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292AC8);
  }
  return result;
}

unint64_t sub_1000D1830()
{
  unint64_t result = qword_100292AE8;
  if (!qword_100292AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292AE8);
  }
  return result;
}

unint64_t sub_1000D1884()
{
  unint64_t result = qword_100292B00;
  if (!qword_100292B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B00);
  }
  return result;
}

uint64_t sub_1000D18D8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10008155C(&qword_100292AD8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D1948()
{
  unint64_t result = qword_100292B10;
  if (!qword_100292B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B10);
  }
  return result;
}

uint64_t sub_1000D199C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D1A04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000D1A64()
{
  unint64_t result = qword_100292B20;
  if (!qword_100292B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B20);
  }
  return result;
}

uint64_t type metadata accessor for ReadingHistory.Notification.AddFakeSession(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100292D08);
}

unint64_t sub_1000D1AD8()
{
  unint64_t result = qword_100292B30;
  if (!qword_100292B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B30);
  }
  return result;
}

unint64_t sub_1000D1B2C()
{
  unint64_t result = qword_100292B48;
  if (!qword_100292B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B48);
  }
  return result;
}

unint64_t sub_1000D1B80()
{
  unint64_t result = qword_100292B50;
  if (!qword_100292B50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100292B50);
  }
  return result;
}

unint64_t sub_1000D1BC4()
{
  unint64_t result = qword_100292B58;
  if (!qword_100292B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B58);
  }
  return result;
}

unint64_t sub_1000D1C1C()
{
  unint64_t result = qword_100292B60;
  if (!qword_100292B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B60);
  }
  return result;
}

uint64_t sub_1000D1C70()
{
  return sub_1000D16D0(&qword_100292B68, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Notification.AddFakeSession);
}

uint64_t sub_1000D1CB8()
{
  return sub_1000D16D0(&qword_100292B70, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Notification.AddFakeSession);
}

unint64_t sub_1000D1D04()
{
  unint64_t result = qword_100292B78;
  if (!qword_100292B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B78);
  }
  return result;
}

unint64_t sub_1000D1D5C()
{
  unint64_t result = qword_100292B80;
  if (!qword_100292B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292B80);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory()
{
  return &type metadata for ReadingHistory;
}

__n128 initializeBufferWithCopyOfBuffer for ReadingGoals.StateChange(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Day(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Day(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.Day()
{
  return &type metadata for ReadingHistory.Day;
}

uint64_t initializeBufferWithCopyOfBuffer for ReadingHistory.DayEntry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t initializeWithCopy for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.DayEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.DayEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.DayEntry()
{
  return &type metadata for ReadingHistory.DayEntry;
}

uint64_t assignWithCopy for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D216C);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D2184);
}

uint64_t sub_1000D2188()
{
  return sub_1000D31F4();
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingHistory.State(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10007DC14(&qword_100291C78);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      *(void *)&v8[*(int *)(v10 + 20)] = *(void *)&v9[*(int *)(v10 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v4 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    v17[16] = v18[16];
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ReadingHistory.State(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for ReadingHistory.Streak(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    uint64_t v4 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ReadingHistory.State(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10007DC14(&qword_100291C78);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
    *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  unsigned char v15[16] = v16[16];
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ReadingHistory.State(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v20 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v7, v8, v20);
      *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
      goto LABEL_7;
    }
    sub_1000D1A04((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_10007DC14(&qword_100291C78);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  v17[16] = v18[16];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ReadingHistory.State(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10007DC14(&qword_100291C78);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  unsigned char v15[16] = v16[16];
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  return a1;
}

void *assignWithTake for ReadingHistory.State(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v21 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v7, v8, v21);
      *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
      goto LABEL_7;
    }
    sub_1000D1A04((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_10007DC14(&qword_100291C78);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
  *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v16;
  char v19 = (char *)a2 + v16;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.State(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D2B44);
}

uint64_t sub_1000D2B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100291C78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D2C20);
}

uint64_t sub_1000D2C20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10007DC14(&qword_100291C78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void sub_1000D2CE4()
{
  sub_1000AE064();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ReadingHistory.UserDefaults()
{
  return &type metadata for ReadingHistory.UserDefaults;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification()
{
  return &type metadata for ReadingHistory.Notification;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate()
{
  return &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate;
}

uint64_t *_s14bookdatastored14ReadingHistoryO6StreakVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001EB0C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s14bookdatastored14ReadingHistoryO6StreakVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_1001EB0C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s14bookdatastored14ReadingHistoryO6StreakVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s14bookdatastored14ReadingHistoryO6StreakVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D30FC);
}

uint64_t sub_1000D3100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB0C0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D3180);
}

uint64_t sub_1000D3184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB0C0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1000D31F4()
{
  uint64_t result = sub_1001EB0C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.ClearToday()
{
  return &type metadata for ReadingHistory.Notification.ClearToday;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.ClearToday.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.ClearToday.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.AddFakeSession.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.AddFakeSession.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.State.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReadingHistory.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D3428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.State.CodingKeys()
{
  return &type metadata for ReadingHistory.State.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Streak.CodingKeys()
{
  return &type metadata for ReadingHistory.Streak.CodingKeys;
}

unsigned char *_s14bookdatastored14ReadingHistoryO12NotificationO14AddFakeSessionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D353CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.DayEntry.CodingKeys()
{
  return &type metadata for ReadingHistory.DayEntry.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ReadingHistory.Day.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D3640);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.Day.CodingKeys()
{
  return &type metadata for ReadingHistory.Day.CodingKeys;
}

unint64_t sub_1000D367C()
{
  unint64_t result = qword_100292D40;
  if (!qword_100292D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D40);
  }
  return result;
}

unint64_t sub_1000D36D4()
{
  unint64_t result = qword_100292D48;
  if (!qword_100292D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D48);
  }
  return result;
}

unint64_t sub_1000D372C()
{
  unint64_t result = qword_100292D50;
  if (!qword_100292D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D50);
  }
  return result;
}

unint64_t sub_1000D3784()
{
  unint64_t result = qword_100292D58;
  if (!qword_100292D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D58);
  }
  return result;
}

unint64_t sub_1000D37DC()
{
  unint64_t result = qword_100292D60;
  if (!qword_100292D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D60);
  }
  return result;
}

unint64_t sub_1000D3834()
{
  unint64_t result = qword_100292D68;
  if (!qword_100292D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D68);
  }
  return result;
}

unint64_t sub_1000D388C()
{
  unint64_t result = qword_100292D70;
  if (!qword_100292D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D70);
  }
  return result;
}

unint64_t sub_1000D38E4()
{
  unint64_t result = qword_100292D78;
  if (!qword_100292D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D78);
  }
  return result;
}

unint64_t sub_1000D393C()
{
  unint64_t result = qword_100292D80;
  if (!qword_100292D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D80);
  }
  return result;
}

unint64_t sub_1000D3994()
{
  unint64_t result = qword_100292D88;
  if (!qword_100292D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D88);
  }
  return result;
}

unint64_t sub_1000D39EC()
{
  unint64_t result = qword_100292D90;
  if (!qword_100292D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D90);
  }
  return result;
}

unint64_t sub_1000D3A44()
{
  unint64_t result = qword_100292D98;
  if (!qword_100292D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292D98);
  }
  return result;
}

unint64_t sub_1000D3A9C()
{
  unint64_t result = qword_100292DA0;
  if (!qword_100292DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292DA0);
  }
  return result;
}

unint64_t sub_1000D3AF4()
{
  unint64_t result = qword_100292DA8;
  if (!qword_100292DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292DA8);
  }
  return result;
}

unint64_t sub_1000D3B4C()
{
  unint64_t result = qword_100292DB0;
  if (!qword_100292DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292DB0);
  }
  return result;
}

unint64_t sub_1000D3BA4()
{
  unint64_t result = qword_100292DB8;
  if (!qword_100292DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292DB8);
  }
  return result;
}

unint64_t sub_1000D3BFC()
{
  unint64_t result = qword_100292DC0;
  if (!qword_100292DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292DC0);
  }
  return result;
}

unint64_t sub_1000D3C54()
{
  unint64_t result = qword_100292DC8;
  if (!qword_100292DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292DC8);
  }
  return result;
}

unint64_t sub_1000D3CAC()
{
  unint64_t result = qword_100292DD0;
  if (!qword_100292DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292DD0);
  }
  return result;
}

uint64_t sub_1000D3D00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000D3DEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53746E6572727563 && a2 == 0xED00006B61657274;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53747365676E6F6CLL && a2 == 0xED00006B61657274 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7961646F74 && a2 == 0xE500000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x48676E6964616572 && a2 == 0xEE0079726F747369)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000D4004(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000D40E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000D4168()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PBPropertyBookImpressionParam(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v51 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  __chkstk_darwin(v49);
  unint64_t v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for PBPropertySingleFloatParam(0);
  __chkstk_darwin(v47);
  unint64_t v48 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Params = type metadata accessor for PBPropertyBookReadParams(0);
  __chkstk_darwin(Params - 8);
  uint64_t v52 = (unsigned __int8 *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v8 - 8);
  *(void *)&long long v55 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EB0C0();
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14(&qword_100292E58);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1001EB300();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)0xE000000000000000;
  unint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  uint64_t v21 = (int *)type metadata accessor for PBPropertyValue(0);
  uint64_t v22 = (void *)((char *)v0 + v21[8]);
  uint64_t v23 = v22[1];
  if (v23) {
    uint64_t v24 = *v22;
  }
  else {
    uint64_t v24 = 0;
  }
  if (v23) {
    uint64_t v20 = (void *)v22[1];
  }
  swift_bridgeObjectRetain();
  v59._countAndFlagsBits = v24;
  v59._object = v20;
  sub_1001EC490(v59);
  swift_bridgeObjectRelease();
  v60._countAndFlagsBits = 32;
  v60._object = (void *)0xE100000000000000;
  sub_1001EC490(v60);
  uint64_t v56 = *v0;
  v61._countAndFlagsBits = sub_1001ED040();
  sub_1001EC490(v61);
  swift_bridgeObjectRelease();
  v62._countAndFlagsBits = 32;
  v62._object = (void *)0xE100000000000000;
  sub_1001EC490(v62);
  sub_1000936F8((uint64_t)v0 + v21[7], (uint64_t)v15, &qword_100292E58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1001EB2F0();
    sub_1000816A4((uint64_t)v15, &qword_100292E58);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  }
  sub_1001EB2E0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_1000D4DE0();
  uint64_t v25 = v54;
  v63._countAndFlagsBits = sub_1001ED040();
  sub_1001EC490(v63);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v25);
  unint64_t v26 = v57;
  unint64_t v27 = v58;
  uint64_t v28 = v55;
  sub_1000936F8((uint64_t)v1 + v21[5], v55, &qword_100292E50);
  uint64_t v29 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) == 1)
  {
LABEL_10:
    uint64_t v30 = 0;
    id v31 = (void *)0xE000000000000000;
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v32 = v48;
        sub_1000D4E38(v28, (uint64_t)v48, type metadata accessor for PBPropertySingleFloatParam);
        unint64_t v57 = 0;
        unint64_t v58 = 0xE000000000000000;
        v64._countAndFlagsBits = 0x3D65756C617620;
        v64._object = (void *)0xE700000000000000;
        sub_1001EC490(v64);
        sub_1001ECE30();
        uint64_t v30 = v57;
        id v31 = (void *)v58;
        id v33 = type metadata accessor for PBPropertySingleFloatParam;
        goto LABEL_28;
      case 2u:
        uint64_t v34 = v52;
        sub_1000D4E38(v28, (uint64_t)v52, type metadata accessor for PBPropertyBookReadParams);
        unint64_t v57 = 0;
        unint64_t v58 = 0xE000000000000000;
        sub_1001ECD20(24);
        swift_bridgeObjectRelease();
        unint64_t v57 = 0x736572676F727020;
        unint64_t v58 = 0xEA00000000003D73;
        sub_10007DC14((uint64_t *)&unk_100291A20);
        uint64_t v35 = swift_allocObject();
        long long v55 = xmmword_100215320;
        *(_OWORD *)(v35 + 16) = xmmword_100215320;
        int v36 = *((_DWORD *)v34 + 1);
        *(void *)(v35 + 56) = &type metadata for Float;
        *(void *)(v35 + 64) = &protocol witness table for Float;
        *(_DWORD *)(v35 + 32) = v36;
        v65._countAndFlagsBits = sub_1001EC3A0();
        sub_1001EC490(v65);
        swift_bridgeObjectRelease();
        v66._countAndFlagsBits = 0x6C706D6153736920;
        v66._object = (void *)0xEA00000000003D65;
        sub_1001EC490(v66);
        uint64_t v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v55;
        int v38 = *v34;
        unint64_t v39 = sub_10007DC58();
        uint64_t v40 = 20302;
        if (v38) {
          uint64_t v40 = 5457241;
        }
        *(void *)(v37 + 56) = &type metadata for String;
        *(void *)(v37 + 64) = v39;
        if (v38) {
          unint64_t v41 = 0xE300000000000000;
        }
        else {
          unint64_t v41 = 0xE200000000000000;
        }
        *(void *)(v37 + 32) = v40;
        *(void *)(v37 + 40) = v41;
        v67._countAndFlagsBits = sub_1001EC3A0();
        sub_1001EC490(v67);
        swift_bridgeObjectRelease();
        uint64_t v30 = v57;
        id v31 = (void *)v58;
        uint64_t v42 = type metadata accessor for PBPropertyBookReadParams;
        uint64_t v43 = (uint64_t)v34;
        goto LABEL_29;
      case 3u:
        uint64_t v32 = v50;
        sub_1000D4E38(v28, (uint64_t)v50, type metadata accessor for PBPropertyMarkedAsFinishedParam);
        unint64_t v57 = 0;
        unint64_t v58 = 0xE000000000000000;
        v68._countAndFlagsBits = 0x3D65756C617620;
        v68._object = (void *)0xE700000000000000;
        sub_1001EC490(v68);
        sub_1001ECE30();
        uint64_t v30 = v57;
        id v31 = (void *)v58;
        id v33 = type metadata accessor for PBPropertyMarkedAsFinishedParam;
        goto LABEL_28;
      case 4u:
        uint64_t v32 = v51;
        sub_1000D4E38(v28, (uint64_t)v51, type metadata accessor for PBPropertyBookImpressionParam);
        unint64_t v57 = 0;
        unint64_t v58 = 0xE000000000000000;
        sub_1001ECD20(40);
        swift_bridgeObjectRelease();
        unint64_t v57 = 0xD000000000000026;
        unint64_t v58 = 0x8000000100223750;
        if (*v32) {
          v44._countAndFlagsBits = 1702195828;
        }
        else {
          v44._countAndFlagsBits = 0x65736C6166;
        }
        if (*v32) {
          id v45 = (void *)0xE400000000000000;
        }
        else {
          id v45 = (void *)0xE500000000000000;
        }
        v44._object = v45;
        sub_1001EC490(v44);
        swift_bridgeObjectRelease();
        uint64_t v30 = v57;
        id v31 = (void *)v58;
        id v33 = type metadata accessor for PBPropertyBookImpressionParam;
LABEL_28:
        uint64_t v42 = v33;
        uint64_t v43 = (uint64_t)v32;
LABEL_29:
        sub_1000D4EA0(v43, v42);
        break;
      default:
        sub_1000D4EA0(v28, type metadata accessor for PBPropertyValue.OneOf_Params);
        goto LABEL_10;
    }
  }
  unint64_t v57 = v26;
  unint64_t v58 = v27;
  v69._countAndFlagsBits = v30;
  v69._object = v31;
  sub_1001EC490(v69);
  swift_bridgeObjectRelease();
  return v57;
}

uint64_t sub_1000D4A08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PBPropertyValue(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007DC14(&qword_100292E48);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (void *)((char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  uint64_t v13 = type metadata accessor for PBPropertyBundle(0);
  sub_1000936F8(v1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_100292E48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    *unint64_t v12 = 0;
    v12[1] = 0;
    _DWORD v12[2] = 0;
    v12[3] = 0xE000000000000000;
    void v12[4] = 0;
    _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_1000816A4((uint64_t)v8, &qword_100292E48);
  }
  else
  {
    sub_1000D4E38((uint64_t)v8, (uint64_t)v12, type metadata accessor for PBPropertyConfiguration);
  }
  uint64_t v14 = v12[2];
  uint64_t v15 = (void *)v12[3];
  swift_bridgeObjectRetain();
  sub_1000D4EA0((uint64_t)v12, type metadata accessor for PBPropertyConfiguration);
  v30._countAndFlagsBits = v14;
  v30._object = v15;
  sub_1001EC490(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 32;
  v31._object = (void *)0xE100000000000000;
  sub_1001EC490(v31);
  uint64_t v16 = *(void *)(*(void *)v1 + 16);
  if (v16)
  {
    uint64_t v17 = *(void *)v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v18 = *(void *)(v3 + 72);
    v25[1] = *(void *)v1;
    swift_bridgeObjectRetain_n();
    uint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    do
    {
      sub_1000D4D7C(v17, (uint64_t)v5);
      uint64_t v26 = v19;
      unint64_t v27 = v20;
      uint64_t v21 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0) {
        uint64_t v21 = v19 & 0xFFFFFFFFFFFFLL;
      }
      if (v21) {
        uint64_t v22 = 8236;
      }
      else {
        uint64_t v22 = 0;
      }
      if (v21) {
        uint64_t v23 = (void *)0xE200000000000000;
      }
      else {
        uint64_t v23 = (void *)0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      v32._countAndFlagsBits = v22;
      v32._object = v23;
      sub_1001EC490(v32);
      swift_bridgeObjectRelease();
      v33._countAndFlagsBits = sub_1000D4168();
      sub_1001EC490(v33);
      swift_bridgeObjectRelease();
      uint64_t v19 = v26;
      unint64_t v20 = v27;
      sub_1000D4EA0((uint64_t)v5, type metadata accessor for PBPropertyValue);
      swift_bridgeObjectRelease();
      v17 += v18;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
  }
  v34._countAndFlagsBits = v19;
  v34._object = (void *)v20;
  sub_1001EC490(v34);
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1000D4D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PBPropertyValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000D4DE0()
{
  unint64_t result = qword_100293430;
  if (!qword_100293430)
  {
    sub_1001EB0C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100293430);
  }
  return result;
}

uint64_t sub_1000D4E38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D4EA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1000D4F00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    uint64_t v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[6] = a2[6];
    uint64_t v10 = sub_1001EAF60();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1000D5018(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1001EAF60();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1000D50A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(a2 + 48);
  uint64_t v9 = sub_1001EAF60();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *sub_1000D5168(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EAF60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1000D524C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000D52E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1000D5394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D53A8);
}

uint64_t sub_1000D53A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001EAF60();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000D5458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D546C);
}

uint64_t sub_1000D546C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001EAF60();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s21PriceDropNotificationVMa()
{
  uint64_t result = qword_100292EB8;
  if (!qword_100292EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000D5560()
{
  uint64_t result = sub_1001EAF60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000D5608(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x65766974616C6572;
  }
  else {
    uint64_t v2 = 0x6574756C6F736261;
  }
  if (a2) {
    uint64_t v3 = 0x65766974616C6572;
  }
  else {
    uint64_t v3 = 0x6574756C6F736261;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1001ED080();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1000D5688()
{
  sub_100086354();
  uint64_t v0 = sub_1001EC520();
  uint64_t v2 = v1;
  if (v0 == sub_1001EC520() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1001ED080();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1000D575C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_100292F20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_1000D6D3C();
  sub_1001ED1F0();
  uint64_t v11 = *v3;
  v10[7] = 0;
  sub_1000D6D90();
  sub_1001ED020();
  if (!v2)
  {
    void v10[6] = 1;
    sub_1001ECFE0();
    v10[5] = 2;
    sub_1001ECFE0();
    void v10[4] = 3;
    sub_1001ECFE0();
    _s21PriceDropNotificationVMa();
    v10[3] = 4;
    sub_1001EAF60();
    sub_1000D6DE4();
    sub_1001ED020();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1000D5974()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x656C746974627573;
      break;
    case 3:
      uint64_t result = 2036625250;
      break;
    case 4:
      uint64_t result = 0x6B6E694C70656564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D5A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D7058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000D5A38(uint64_t a1)
{
  unint64_t v2 = sub_1000D6D3C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D5A74(uint64_t a1)
{
  unint64_t v2 = sub_1000D6D3C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D5AB4(void *a1)
{
  return sub_1000D575C(a1);
}

unint64_t sub_1000D5AD0()
{
  unint64_t result = qword_100292F00;
  if (!qword_100292F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F00);
  }
  return result;
}

unint64_t sub_1000D5B28()
{
  unint64_t result = qword_100292F08;
  if (!qword_100292F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F08);
  }
  return result;
}

Swift::Int sub_1000D5B7C()
{
  return sub_1001ED1A0();
}

uint64_t sub_1000D5BFC()
{
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000D5C6C()
{
  return sub_1001ED1A0();
}

uint64_t sub_1000D5CE8()
{
  return sub_1001EC5B0();
}

uint64_t sub_1000D5D48()
{
  return sub_1001EC5A0();
}

uint64_t sub_1000D5D98()
{
  return sub_1000D5688();
}

uint64_t sub_1000D5DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000D6A94(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x3B0], 8) = v4 & 1;
  return result;
}

uint64_t sub_1000D5DDC@<X0>(uint64_t *a1@<X8>)
{
  sub_100086354();
  uint64_t result = sub_1001EC520();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000D5E30()
{
  return sub_1001EC520();
}

BOOL sub_1000D5E74(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_1000D5E88(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1000D5E9C(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1000D5EB0(void *a1, void *a2)
{
  return *a2 < *a1;
}

void *sub_1000D5EC4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_10007DC14(&qword_100292F10);
  char v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000D5F2C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1001EC500();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_1001EC4D0();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_1000D5FA8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D619C(a1, a2, a3);
}

unsigned __int8 *sub_1000D5FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1001EC540();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1000D6418();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1001ECD90();
  }
LABEL_7:
  uint64_t v11 = sub_1000D619C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1000D60A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1000D6CE8();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1001EC540();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1000D6418();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v9 = (unsigned __int8 *)sub_1001ECD90();
  }
LABEL_7:
  uint64_t v13 = sub_1000D619C(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1000D619C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1000D6418()
{
  unint64_t v0 = sub_1001EC550();
  uint64_t v4 = sub_1000D6498(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000D6498(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1000D65F0(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1000D5EC4(v9, 0),
          unint64_t v12 = sub_1000D66F0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_1001EC430();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_1001EC430();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_1001ECD90();
LABEL_4:
  return sub_1001EC430();
}

uint64_t sub_1000D65F0(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v_Block_object_dispose(&STACK[0x3B0], 8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_1000D5F2C(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_1000D5F2C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_1001EC4E0();
}

unint64_t sub_1000D66F0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1000D5F2C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1001EC4F0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1001ECD90();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1000D5F2C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1001EC4C0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1000D6904(void *a1, void *a2)
{
  sub_100086354();
  uint64_t v4 = sub_1001EC520();
  uint64_t v6 = v5;
  if (v4 == sub_1001EC520() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_1001ED080();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = 0;
    if ((v9 & 1) == 0) {
      return v10 & 1;
    }
  }
  if (a1[1] == a2[1] && a1[2] == a2[2] || (v11 = sub_1001ED080(), char v10 = 0, (v11 & 1) != 0))
  {
    if (a1[3] == a2[3] && a1[4] == a2[4] || (v12 = sub_1001ED080(), char v10 = 0, (v12 & 1) != 0))
    {
      if (a1[5] == a2[5] && a1[6] == a2[6] || (v13 = sub_1001ED080(), char v10 = 0, (v13 & 1) != 0))
      {
        _s21PriceDropNotificationVMa();
        char v10 = sub_1001EAF00();
      }
    }
  }
  return v10 & 1;
}

uint64_t sub_1000D6A94(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_1001ECD90();
      }
      uint64_t v7 = (uint64_t)sub_1000D619C(v6, v4, 36);
      char v9 = v8 & 1;
      goto LABEL_48;
    }
    v25[0] = result;
    v25[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v3)
      {
        uint64_t v15 = v3 - 1;
        if (v15)
        {
          uint64_t v7 = 0;
          uint64_t v16 = (unsigned __int8 *)v25 + 1;
          while (1)
          {
            int v17 = *v16;
            unsigned __int8 v18 = v17 - 48;
            if ((v17 - 48) >= 0xA)
            {
              if ((v17 - 65) < 0x1A)
              {
                unsigned __int8 v18 = v17 - 55;
              }
              else
              {
                if ((v17 - 97) > 0x19) {
                  goto LABEL_47;
                }
                unsigned __int8 v18 = v17 - 87;
              }
            }
            uint64_t v19 = 36 * v7;
            if ((unsigned __int128)(v7 * (__int128)36) >> 64 != (36 * v7) >> 63) {
              break;
            }
            uint64_t v7 = v19 + v18;
            if (__OFADD__(v19, v18)) {
              break;
            }
            ++v16;
            if (!--v15)
            {
LABEL_46:
              char v9 = 0;
              goto LABEL_48;
            }
          }
        }
        goto LABEL_47;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v3)
        {
          uint64_t v7 = 0;
          unsigned int v20 = (unsigned __int8 *)v25;
          while (1)
          {
            int v21 = *v20;
            unsigned __int8 v22 = v21 - 48;
            if ((v21 - 48) >= 0xA)
            {
              if ((v21 - 65) < 0x1A)
              {
                unsigned __int8 v22 = v21 - 55;
              }
              else
              {
                if ((v21 - 97) > 0x19) {
                  goto LABEL_47;
                }
                unsigned __int8 v22 = v21 - 87;
              }
            }
            uint64_t v23 = 36 * v7;
            if ((unsigned __int128)(v7 * (__int128)36) >> 64 != (36 * v7) >> 63) {
              break;
            }
            uint64_t v7 = v23 + v22;
            if (__OFADD__(v23, v22)) {
              break;
            }
            ++v20;
            if (!--v3) {
              goto LABEL_46;
            }
          }
        }
        goto LABEL_47;
      }
      if (v3)
      {
        uint64_t v10 = v3 - 1;
        if (v10)
        {
          uint64_t v7 = 0;
          char v11 = (unsigned __int8 *)v25 + 1;
          while (1)
          {
            int v12 = *v11;
            unsigned __int8 v13 = v12 - 48;
            if ((v12 - 48) >= 0xA)
            {
              if ((v12 - 65) < 0x1A)
              {
                unsigned __int8 v13 = v12 - 55;
              }
              else
              {
                if ((v12 - 97) > 0x19) {
                  break;
                }
                unsigned __int8 v13 = v12 - 87;
              }
            }
            uint64_t v14 = 36 * v7;
            if ((unsigned __int128)(v7 * (__int128)36) >> 64 != (36 * v7) >> 63) {
              break;
            }
            uint64_t v7 = v14 - v13;
            if (__OFSUB__(v14, v13)) {
              break;
            }
            ++v11;
            if (!--v10) {
              goto LABEL_46;
            }
          }
        }
LABEL_47:
        uint64_t v7 = 0;
        char v9 = 1;
        goto LABEL_48;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v7 = (uint64_t)sub_1000D5FC0(result, a2, 36);
  char v9 = v24;
LABEL_48:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

unint64_t sub_1000D6CE8()
{
  unint64_t result = qword_100292F18;
  if (!qword_100292F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F18);
  }
  return result;
}

unint64_t sub_1000D6D3C()
{
  unint64_t result = qword_100292F28;
  if (!qword_100292F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F28);
  }
  return result;
}

unint64_t sub_1000D6D90()
{
  unint64_t result = qword_100292F30;
  if (!qword_100292F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F30);
  }
  return result;
}

unint64_t sub_1000D6DE4()
{
  unint64_t result = qword_100292F38;
  if (!qword_100292F38)
  {
    sub_1001EAF60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F38);
  }
  return result;
}

unsigned char *_s21PriceDropNotificationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D6F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s21PriceDropNotificationV10CodingKeysOMa()
{
  return &_s21PriceDropNotificationV10CodingKeysON;
}

ValueMetadata *_s21PriceDropNotificationV2IDVMa()
{
  return &_s21PriceDropNotificationV2IDVN;
}

unint64_t sub_1000D6F54()
{
  unint64_t result = qword_100292F40;
  if (!qword_100292F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F40);
  }
  return result;
}

unint64_t sub_1000D6FAC()
{
  unint64_t result = qword_100292F48;
  if (!qword_100292F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F48);
  }
  return result;
}

unint64_t sub_1000D7004()
{
  unint64_t result = qword_100292F50;
  if (!qword_100292F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F50);
  }
  return result;
}

uint64_t sub_1000D7058(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B6E694C70656564 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1000D7260()
{
  unint64_t result = qword_100292F58;
  if (!qword_100292F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100292F58);
  }
  return result;
}

void sub_1000D72B4()
{
  uint64_t v1 = _s9SchedulerC5StateOMa(0);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
  swift_beginAccess();
  sub_1000DB3D8(v4, (uint64_t)v3);
  uint64_t v5 = sub_1000D74D8();
  unint64_t v7 = v6;
  sub_1000D8458((uint64_t)v3);
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1001EB560();
  sub_10007CFF8(v8, (uint64_t)qword_1002A4198);
  swift_bridgeObjectRetain();
  char v9 = sub_1001EB540();
  os_log_type_t v10 = sub_1001EC910();
  if (os_log_type_enabled(v9, v10))
  {
    char v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)char v11 = 136446210;
    swift_bridgeObjectRetain();
    v12[1] = sub_1001A8090(v5, v7, &v13);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[Scheduler] state → %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1000D74D8()
{
  uint64_t v1 = _s9SchedulerC5StateOMa(0);
  __chkstk_darwin(v1);
  int v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DB3D8(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 1701602409;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = 0x676E696E6E7572;
      break;
    case 2:
      swift_bridgeObjectRelease();
      unint64_t v7 = &v3[*(int *)(sub_10007DC14(&qword_100293048) + 48)];
      uint64_t v8 = sub_10007DC14(&qword_100293050);
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      uint64_t result = 0x676E6970706F7473;
      break;
    case 3:
      return result;
    default:
      long long v6 = *((_OWORD *)v3 + 1);
      v10[0] = *(_OWORD *)v3;
      v10[1] = v6;
      void v10[2] = *((_OWORD *)v3 + 2);
      char v11 = v3[48];
      v9[0] = 0x656C756465686373;
      v9[1] = 0xEA00000000002864;
      v12._countAndFlagsBits = sub_10018B34C();
      sub_1001EC490(v12);
      swift_bridgeObjectRelease();
      sub_100087A3C((uint64_t)v10);
      v13._countAndFlagsBits = 41;
      v13._object = (void *)0xE100000000000000;
      sub_1001EC490(v13);
      uint64_t result = v9[0];
      break;
  }
  return result;
}

uint64_t sub_1000D76B0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t ObjectType = swift_getObjectType();
    sub_1000D7730(a1, ObjectType, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000D7730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10007DC14(&qword_100293840);
  __chkstk_darwin(v8 - 8);
  os_log_type_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1001EB560();
  sub_10007CFF8(v11, (uint64_t)qword_1002A4198);
  Swift::String v12 = sub_1001EB540();
  os_log_type_t v13 = sub_1001EC910();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Scheduler] Launching BG task", v14, 2u);
    swift_slowDealloc();
  }

  uint64_t v15 = sub_1001EC6A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  id v16[2] = 0;
  v16[3] = 0;
  void v16[4] = a2;
  v16[5] = a3;
  void v16[6] = v4;
  v16[7] = a1;
  swift_retain();
  swift_unknownObjectRetain();
  sub_10018B8C0((uint64_t)v10, (uint64_t)&unk_100293130, (uint64_t)v16);
  return swift_release();
}

void *sub_1000D790C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10007DC14(&qword_100293050);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v21 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s9SchedulerC5StateOMa(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_log_type_t v10 = (char *)&v21 - v9;
  uint64_t v11 = (uint64_t)v1 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
  swift_beginAccess();
  sub_1000DB3D8(v11, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = v3;
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_10007DC14(&qword_100293048);
      uint64_t v12 = v3;
      (*(void (**)(char *, uint64_t))(v3 + 8))(&v10[*(int *)(v13 + 48)], v2);
      goto LABEL_5;
    case 3u:
      goto LABEL_6;
    default:
      uint64_t v12 = v3;
      swift_bridgeObjectRelease();
LABEL_5:
      uint64_t v14 = v1[17];
      uint64_t v15 = v1[18];
      sub_100094758(v1 + 14, v14);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v15 + 40))(0xD00000000000002CLL, 0x8000000100223820, v14, v15);
      uint64_t v3 = v12;
LABEL_6:
      sub_1000DB3D8(v11, (uint64_t)v8);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          swift_bridgeObjectRelease();
          sub_1001EC710();
          swift_release();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          uint64_t v16 = sub_10007DC14(&qword_100293048);
          int v17 = v21;
          (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v21, &v8[*(int *)(v16 + 48)], v2);
          char v22 = 1;
          sub_1001EC670();
          (*(void (**)(char *, uint64_t))(v3 + 8))(v17, v2);
          break;
        case 3u:
          break;
        default:
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v18 = v1[17];
      uint64_t v19 = v1[18];
      sub_100094758(v1 + 14, v18);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v19 + 16))(0xD00000000000002CLL, 0x8000000100223820, v18, v19);
      sub_1000947F0((uint64_t)(v1 + 14));
      swift_release();
      sub_1000D8458(v11);
      swift_defaultActor_destroy();
      return v1;
  }
}

uint64_t sub_1000D7CD8()
{
  sub_1000D790C();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1000D7D04()
{
  return _s9SchedulerCMa(0);
}

uint64_t _s9SchedulerCMa(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100292F90);
}

uint64_t sub_1000D7D2C()
{
  uint64_t result = _s9SchedulerC5StateOMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t _s9SchedulerC5StateOMa(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_1002930C8);
}

ValueMetadata *_s9SchedulerC6ConfigVMa()
{
  return &_s9SchedulerC6ConfigVN;
}

uint64_t sub_1000D7E10(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v10;
      *(void *)(a1 + 16) = a2[2];
      *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      uint64_t v11 = *(int *)(sub_10007DC14(&qword_100293048) + 48);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = (uint64_t)a2 + v11;
      uint64_t v14 = sub_10007DC14(&qword_100293050);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v15;
      *(void *)(a1 + 16) = a2[2];
      *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *((unsigned char *)a2 + 48);
      *(void *)(a1 + 56) = a2[7];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy((void *)a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v8;
      *(void *)(a1 + 16) = a2[2];
      *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000D7FF0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(sub_10007DC14(&qword_100293048) + 48);
      uint64_t v4 = sub_10007DC14(&qword_100293050);
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      return v5(v3, v4);
    case 1:
      swift_bridgeObjectRelease();
      return swift_release();
    case 0:
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000D80E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v8;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(a2 + 48);
    swift_bridgeObjectRetain();
    uint64_t v9 = *(int *)(sub_10007DC14(&qword_100293048) + 48);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_10007DC14(&qword_100293050);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v13;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = v7;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000D827C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000D8458(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      long long v8 = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = v8;
      swift_bridgeObjectRetain();
      uint64_t v9 = *(int *)(sub_10007DC14(&qword_100293048) + 48);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = sub_10007DC14(&qword_100293050);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      long long v13 = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = v13;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + _Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      long long v7 = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = v7;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1000D8458(uint64_t a1)
{
  uint64_t v2 = _s9SchedulerC5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1000D84B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    *((unsigned char *)a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *((unsigned char *)a2 + 48);
    uint64_t v7 = *(int *)(sub_10007DC14(&qword_100293048) + 48);
    long long v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10007DC14(&qword_100293050);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1000D85A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000D8458((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 4_Block_object_dispose(&STACK[0x3B0], 8) = *((unsigned char *)a2 + 48);
      uint64_t v7 = *(int *)(sub_10007DC14(&qword_100293048) + 48);
      long long v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_10007DC14(&qword_100293050);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000D86F0()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1000D8700()
{
  uint64_t v2 = "1";
  uint64_t v3 = &unk_100217458;
  sub_1000D87B0();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v1;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1000D87B0()
{
  if (!qword_1002930D8)
  {
    unint64_t v0 = sub_1001EC680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002930D8);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ReplaceableContinuationResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D88E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReplaceableContinuationResult()
{
  return &type metadata for ReplaceableContinuationResult;
}

unint64_t sub_1000D8920()
{
  unint64_t result = qword_100293108;
  if (!qword_100293108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100293108);
  }
  return result;
}

uint64_t sub_1000D8974()
{
  return v0;
}

uint64_t sub_1000D8980(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a2;
  int v3 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a2 + 8)) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = *(void *)a1 == *(void *)&v2;
  }
  unsigned int v5 = v4;
  BOOL v6 = *(double *)a1 == v2;
  if (v3 != 1) {
    BOOL v6 = 0;
  }
  BOOL v7 = *(double *)a1 == *(double *)a2;
  if (v3 != 2) {
    BOOL v7 = 0;
  }
  if (*(unsigned char *)(a1 + 8) != 1) {
    BOOL v6 = v7;
  }
  if (*(unsigned char *)(a1 + 8)) {
    return v6;
  }
  else {
    return v5;
  }
}

uint64_t sub_1000D89E4(uint64_t a1)
{
  *(void *)(v2 + 944) = v1;
  *(void *)(v2 + 936) = a1;
  sub_1000DB43C(a1, v2 + 856);
  *(void *)(v2 + 952) = *(void *)(v2 + 856);
  long long v3 = *(_OWORD *)(v2 + 880);
  *(_OWORD *)(v2 + 960) = *(_OWORD *)(v2 + 864);
  *(_OWORD *)(v2 + 976) = v3;
  *(void *)(v2 + 992) = *(void *)(v2 + 896);
  *(unsigned char *)(v2 + 6_Block_object_dispose(&STACK[0x3B0], 8) = *(unsigned char *)(v2 + 904);
  uint64_t v4 = sub_10007DC14(&qword_100293050);
  *(void *)(v2 + 1000) = v4;
  *(void *)(v2 + 100_Block_object_dispose(&STACK[0x3B0], 8) = *(void *)(v4 - 8);
  *(void *)(v2 + 1016) = swift_task_alloc();
  *(void *)(v2 + 1024) = _s9SchedulerC5StateOMa(0);
  *(void *)(v2 + 1032) = swift_task_alloc();
  return _swift_task_switch(sub_1000D8B04, v1, 0);
}

uint64_t sub_1000D8B04()
{
  uint64_t v1 = (_OWORD *)(v0 + 16);
  uint64_t v2 = (_OWORD *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 1032);
  uint64_t v4 = *(void *)(v0 + 944) + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
  swift_beginAccess();
  sub_1000DB3D8(v4, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = *(long long **)(v0 + 1032);
      uint64_t v16 = *(void *)(v0 + 936);
      long long v18 = v15[1];
      long long v17 = v15[2];
      long long v19 = *v15;
      *(unsigned char *)(v0 + 176) = *((unsigned char *)v15 + 48);
      *(_OWORD *)(v0 + 144) = v18;
      *(_OWORD *)(v0 + 160) = v17;
      _OWORD *v2 = v19;
      *(void *)(v0 + 1040) = *((void *)v15 + 7);
      sub_1000DB43C(v16, v0 + 408);
      if (*(void *)(v0 + 416))
      {
        char v20 = *(unsigned char *)(v0 + 68);
        int v21 = *(_DWORD *)(v0 + 976);
        uint64_t v22 = *(void *)(v0 + 968);
        *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 952);
        *(void *)(v0 + 8_Block_object_dispose(&STACK[0x3B0], 8) = v22;
        *(unsigned char *)(v0 + 96) = v21 & 1;
        *(unsigned char *)(v0 + 97) = BYTE1(v21) & 1;
        *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 984);
        *(unsigned char *)(v0 + 120) = v20 & 1;
        if (sub_10018B6DC((__n128 *)(v0 + 128), (__n128 *)(v0 + 72)))
        {
          sub_100087A3C(v0 + 128);
          swift_release();
          goto LABEL_15;
        }
      }
      else
      {
        sub_100087ABC(v0 + 128);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v48 = *(void *)(v0 + 944);
      sub_1001EC710();
      unint64_t v49 = sub_1000DB4A4();
      uint64_t v50 = swift_task_alloc();
      *(void *)(v0 + 104_Block_object_dispose(&STACK[0x3B0], 8) = v50;
      *(void *)(v50 + 16) = v48;
      *(void *)(v50 + 24) = v2;
      uint64_t v51 = (void *)swift_task_alloc();
      *(void *)(v0 + 1056) = v51;
      void *v51 = v0;
      v51[1] = sub_1000D9054;
      unint64_t v40 = 0xD000000000000019;
      unint64_t v35 = 0x8000000100223800;
      int v36 = sub_1000DB4FC;
      uint64_t v37 = v0 + 67;
      uint64_t v38 = v48;
      unint64_t v39 = v49;
      uint64_t v41 = v50;
      goto LABEL_20;
    case 2u:
      uint64_t v23 = *(long long **)(v0 + 1032);
      uint64_t v24 = *(void *)(v0 + 1016);
      uint64_t v25 = *(void *)(v0 + 1008);
      uint64_t v26 = *(void *)(v0 + 1000);
      uint64_t v27 = *(void *)(v0 + 944);
      long long v29 = v23[1];
      long long v28 = v23[2];
      long long v30 = *v23;
      *(unsigned char *)(v0 + 64) = *((unsigned char *)v23 + 48);
      *(_OWORD *)(v0 + 32) = v29;
      *(_OWORD *)(v0 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v28;
      _OWORD *v1 = v30;
      uint64_t v31 = sub_10007DC14(&qword_100293048);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24, (uint64_t)v23 + *(int *)(v31 + 48), v26);
      *(unsigned char *)(v0 + 65) = 1;
      sub_1001EC670();
      unint64_t v32 = sub_1000DB4A4();
      uint64_t v33 = swift_task_alloc();
      *(void *)(v0 + 1064) = v33;
      *(void *)(v33 + 16) = v27;
      *(void *)(v33 + 24) = v1;
      Swift::String v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 1072) = v34;
      void *v34 = v0;
      v34[1] = sub_1000D9274;
      unint64_t v35 = 0x80000001002237E0;
      int v36 = sub_1000DB82C;
      uint64_t v37 = v0 + 66;
      uint64_t v38 = v27;
      unint64_t v39 = v32;
      unint64_t v40 = 0xD000000000000018;
      uint64_t v41 = v33;
LABEL_20:
      return withCheckedContinuation<A>(isolation:function:_:)(v37, v38, v39, v40, v35, v36, v41, &type metadata for ReplaceableContinuationResult);
    case 3u:
      sub_1000DB43C(*(void *)(v0 + 936), v0 + 800);
      if (!*(void *)(v0 + 808)) {
        goto LABEL_15;
      }
      long long v42 = *(_OWORD *)(v0 + 816);
      *(_OWORD *)(v0 + 744) = *(_OWORD *)(v0 + 800);
      *(_OWORD *)(v0 + 760) = v42;
      *(_OWORD *)(v0 + 776) = *(_OWORD *)(v0 + 832);
      *(unsigned char *)(v0 + 792) = *(unsigned char *)(v0 + 848);
      uint64_t v43 = v0 + 744;
      goto LABEL_14;
    default:
      unsigned int v5 = *(long long **)(v0 + 1032);
      uint64_t v6 = *(void *)(v0 + 936);
      long long v8 = v5[1];
      long long v7 = v5[2];
      long long v9 = *v5;
      *(unsigned char *)(v0 + 28_Block_object_dispose(&STACK[0x3B0], 8) = *((unsigned char *)v5 + 48);
      *(_OWORD *)(v0 + 256) = v8;
      *(_OWORD *)(v0 + 272) = v7;
      *(_OWORD *)(v0 + 240) = v9;
      sub_1000DB43C(v6, v0 + 576);
      if (*(void *)(v0 + 584))
      {
        char v10 = *(unsigned char *)(v0 + 68);
        int v11 = *(_DWORD *)(v0 + 976);
        uint64_t v12 = *(void *)(v0 + 968);
        *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 952);
        *(void *)(v0 + 200) = v12;
        *(unsigned char *)(v0 + 20_Block_object_dispose(&STACK[0x3B0], 8) = v11 & 1;
        *(unsigned char *)(v0 + 209) = BYTE1(v11) & 1;
        *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 984);
        *(unsigned char *)(v0 + 232) = v10 & 1;
        char v13 = sub_10018B6DC((__n128 *)(v0 + 240), (__n128 *)(v0 + 184));
        sub_100087A3C(v0 + 240);
        uint64_t v14 = v0 + 688;
        if (v13) {
          goto LABEL_15;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = v0 + 688;
      }
      uint64_t v44 = *(void *)(v0 + 936);
      sub_1000D9A40();
      sub_1000DB43C(v44, v14);
      if (*(void *)(v0 + 696))
      {
        long long v45 = *(_OWORD *)(v14 + 16);
        uint64_t v43 = v0 + 632;
        *(_OWORD *)(v0 + 632) = *(_OWORD *)v14;
        *(_OWORD *)(v0 + 64_Block_object_dispose(&STACK[0x3B0], 8) = v45;
        *(_OWORD *)(v0 + 664) = *(_OWORD *)(v14 + 32);
        *(unsigned char *)(v0 + 680) = *(unsigned char *)(v14 + 48);
LABEL_14:
        sub_1000D94CC(v43);
      }
LABEL_15:
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
      return v46();
  }
}

uint64_t sub_1000D9054()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 944);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000D9180, v1, 0);
}

uint64_t sub_1000D9180()
{
  if (*(unsigned char *)(v0 + 67))
  {
    sub_100087A3C(v0 + 128);
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 936);
    sub_1000D9E9C((__n128 *)(v0 + 128));
    sub_100087A3C(v0 + 128);
    sub_1000D9A40();
    sub_1000DB43C(v1, v0 + 520);
    if (*(void *)(v0 + 528))
    {
      long long v2 = *(_OWORD *)(v0 + 536);
      *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 520);
      *(_OWORD *)(v0 + 480) = v2;
      *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 552);
      *(unsigned char *)(v0 + 512) = *(unsigned char *)(v0 + 568);
      sub_1000D94CC(v0 + 464);
    }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000D9274()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 944);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000D93A0, v1, 0);
}

uint64_t sub_1000D93A0()
{
  if (*(unsigned char *)(v0 + 66))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1008) + 8))(*(void *)(v0 + 1016), *(void *)(v0 + 1000));
    sub_100087A3C(v0 + 16);
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 936);
    sub_1000D9E9C((__n128 *)(v0 + 16));
    sub_100087A3C(v0 + 16);
    sub_1000D9A40();
    sub_1000DB43C(v1, v0 + 352);
    uint64_t v2 = *(void *)(v0 + 1016);
    uint64_t v3 = *(void *)(v0 + 1008);
    uint64_t v4 = *(void *)(v0 + 1000);
    if (*(void *)(v0 + 360))
    {
      long long v5 = *(_OWORD *)(v0 + 368);
      *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 352);
      *(_OWORD *)(v0 + 312) = v5;
      *(_OWORD *)(v0 + 32_Block_object_dispose(&STACK[0x3B0], 8) = *(_OWORD *)(v0 + 384);
      *(unsigned char *)(v0 + 344) = *(unsigned char *)(v0 + 400);
      sub_1000D94CC(v0 + 296);
    }
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000D94CC(uint64_t a1)
{
  uint64_t v3 = _s9SchedulerC5StateOMa(0);
  __chkstk_darwin(v3);
  long long v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1[17];
  uint64_t v7 = v1[18];
  sub_100094758(v1 + 14, v6);
  (*(void (**)(void *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 24))(v25, 0xD00000000000002CLL, 0x8000000100223820, v6, v7);
  sub_100087A3C((uint64_t)v25);
  sub_1000DB43C((uint64_t)v25, (uint64_t)v26);
  if (v27)
  {
    long long v8 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)long long v5 = *(_OWORD *)a1;
    *((_OWORD *)v5 + 1) = v8;
    *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
    v5[48] = *(unsigned char *)(a1 + 48);
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
    swift_beginAccess();
    sub_100087ABC(a1);
    sub_1000DB518((uint64_t)v5, v9);
    swift_endAccess();
    sub_1000D72B4();
    sub_1000D8458((uint64_t)v5);
    sub_1000DB3D8(v9, (uint64_t)v5);
    uint64_t v10 = sub_1000D74D8();
    unint64_t v12 = v11;
    sub_1000D8458((uint64_t)v5);
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1001EB560();
    sub_10007CFF8(v13, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1001EB540();
    os_log_type_t v15 = sub_1001EC8F0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      v24[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      uint64_t v23 = sub_1001A8090(0xD00000000000002CLL, 0x8000000100223820, v24);
      sub_1001ECBC0();
      *(_WORD *)(v16 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1001A8090(v10, v12, v24);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "[Scheduler] Found existing task request for %{public}s, assuming %{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v17 = v1[17];
    uint64_t v18 = v1[18];
    sub_100094758(v1 + 14, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(a1, v17, v18);
    long long v19 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)long long v5 = *(_OWORD *)a1;
    *((_OWORD *)v5 + 1) = v19;
    *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
    v5[48] = *(unsigned char *)(a1 + 48);
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = (uint64_t)v1 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
    swift_beginAccess();
    sub_100087ABC(a1);
    sub_1000DB518((uint64_t)v5, v20);
    swift_endAccess();
    sub_1000D72B4();
    sub_1000D8458((uint64_t)v5);
  }
  return 1;
}

uint64_t sub_1000D9A40()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s9SchedulerC5StateOMa(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  sub_100094758(v0 + 14, v5);
  (*(void (**)(void *__return_ptr, unint64_t, unint64_t, uint64_t, uint64_t))(v6 + 24))(v17, 0xD00000000000002CLL, 0x8000000100223820, v5, v6);
  sub_100087A3C((uint64_t)v17);
  sub_1000DB43C((uint64_t)v17, (uint64_t)v18);
  if (v19)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    sub_100094758(v0 + 14, v7);
    (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 40))(0xD00000000000002CLL, 0x8000000100223820, v7, v8);
  }
  else
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1001EB560();
    sub_10007CFF8(v9, (uint64_t)qword_1002A4198);
    uint64_t v10 = sub_1001EB540();
    os_log_type_t v11 = sub_1001EC8F0();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      v16[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v12 = 136446210;
      v15[1] = sub_1001A8090(0xD00000000000002CLL, 0x8000000100223820, v16);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Scheduler] Did not find existing task request for %{public}s, assuming idle", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
  swift_beginAccess();
  sub_1000DB518((uint64_t)v4, v13);
  swift_endAccess();
  sub_1000D72B4();
  sub_1000D8458((uint64_t)v4);
  return 1;
}

void sub_1000D9E9C(__n128 *a1)
{
  uint64_t v3 = _s9SchedulerC5StateOMa(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v28 - v7;
  uint64_t v9 = v1 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
  swift_beginAccess();
  sub_1000DB3D8(v9, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1000D8458((uint64_t)v8);
  }
  else
  {
    uint64_t v17 = *(void *)v8;
    uint64_t v18 = *((void *)v8 + 1);
    uint64_t v19 = *((void *)v8 + 2);
    int v20 = v8[24];
    int v21 = v8[25];
    double v22 = *((double *)v8 + 4);
    double v23 = *((double *)v8 + 5);
    char v24 = v8[48];
    if (a1->n128_u64[0] == v17 && a1->n128_u64[1] == v18)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1001ED080();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_3;
      }
    }
    if (a1[1].n128_u64[0] == v19 && ((v20 ^ a1[1].n128_u8[8]) & 1) == 0 && ((v21 ^ a1[1].n128_u8[9]) & 1) == 0)
    {
      sub_1000DB57C(a1 + 2, &v30);
      sub_1000DB57C(&v30, &v31);
      if (v32)
      {
        if (v24) {
          return;
        }
      }
      else if ((v24 & 1) == 0 && v31.n128_f64[0] == v22 && v31.n128_f64[1] == v23)
      {
        return;
      }
    }
  }
LABEL_3:
  sub_1000DB3D8(v9, (uint64_t)v6);
  uint64_t v10 = sub_1000D74D8();
  unint64_t v12 = v11;
  sub_1000D8458((uint64_t)v6);
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1001EB560();
  sub_10007CFF8(v13, (uint64_t)qword_1002A4198);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1001EB540();
  os_log_type_t v15 = sub_1001EC8F0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    v28[1] = sub_1001A8090(v10, v12, &v29);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[Scheduler] Unexpected state: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1000DA1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s9SchedulerC5StateOMa(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = &v8[*(int *)(sub_10007DC14(&qword_100293048) + 48)];
  unsigned char v8[48] = *(unsigned char *)(a3 + 48);
  long long v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a3;
  *((_OWORD *)v8 + 1) = v10;
  *((_OWORD *)v8 + 2) = *(_OWORD *)(a3 + 32);
  uint64_t v11 = sub_10007DC14(&qword_100293050);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, a1, v11);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a2 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
  swift_beginAccess();
  sub_100087ABC(a3);
  sub_1000DB518((uint64_t)v8, v12);
  swift_endAccess();
  sub_1000D72B4();
  return sub_1000D8458((uint64_t)v8);
}

uint64_t sub_1000DA324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[4] = a6;
  void v7[5] = a7;
  _OWORD v7[2] = a4;
  v7[3] = a5;
  return _swift_task_switch(sub_1000DA348, a4, 0);
}

uint64_t sub_1000DA348()
{
  sub_1000DA3AC(v0[3], v0[4], v0[5]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1000DA3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10007DC14(&qword_100293840);
  __chkstk_darwin(v8 - 8);
  long long v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = _s9SchedulerC5StateOMa(0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v16 = &v42[-v15];
  uint64_t v17 = v4 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
  swift_beginAccess();
  sub_1000DB3D8(v17, (uint64_t)v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 2u:
      swift_bridgeObjectRelease();
      Swift::String v34 = &v16[*(int *)(sub_10007DC14(&qword_100293048) + 48)];
      uint64_t v35 = sub_10007DC14(&qword_100293050);
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
LABEL_9:
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1001EB560();
      sub_10007CFF8(v36, (uint64_t)qword_1002A4198);
      uint64_t v37 = sub_1001EB540();
      os_log_type_t v38 = sub_1001EC8F0();
      if (!os_log_type_enabled(v37, v38)) {
        goto LABEL_18;
      }
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v39 = 0;
      unint64_t v40 = "[Scheduler] Attempting to start Task while already running";
      break;
    case 3u:
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1001EB560();
      sub_10007CFF8(v41, (uint64_t)qword_1002A4198);
      uint64_t v37 = sub_1001EB540();
      os_log_type_t v38 = sub_1001EC8F0();
      if (!os_log_type_enabled(v37, v38)) {
        goto LABEL_18;
      }
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v39 = 0;
      unint64_t v40 = "[Scheduler] BG task was cancelled before work started";
      break;
    default:
      uint64_t v51 = a1;
      uint64_t v18 = a3;
      uint64_t v19 = *(void *)v16;
      uint64_t v49 = *((void *)v16 + 1);
      uint64_t v50 = v19;
      uint64_t v48 = *((void *)v16 + 2);
      LODWORD(v19) = v16[24];
      int v46 = v16[25];
      int v47 = v19;
      uint64_t v20 = *((void *)v16 + 4);
      uint64_t v44 = *((void *)v16 + 5);
      uint64_t v45 = v20;
      int v43 = v16[48];
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v21 = a2;
      uint64_t v22 = sub_1001EB560();
      sub_10007CFF8(v22, (uint64_t)qword_1002A4198);
      double v23 = sub_1001EB540();
      os_log_type_t v24 = sub_1001EC910();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Scheduler] Starting Task", v25, 2u);
        swift_slowDealloc();
      }

      uint64_t v26 = sub_1001EC6A0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 1, 1, v26);
      unint64_t v27 = sub_1000DB4A4();
      long long v28 = (void *)swift_allocObject();
      void v28[2] = v4;
      v28[3] = v27;
      v28[4] = v21;
      void v28[5] = v18;
      uint64_t v29 = v51;
      v28[6] = v4;
      v28[7] = v29;
      swift_retain_n();
      swift_unknownObjectRetain();
      uint64_t v30 = sub_10018B8C0((uint64_t)v10, (uint64_t)&unk_100293140, (uint64_t)v28);
      __n128 v31 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v18 + 16);
      swift_retain();
      v31(sub_1000DB780, v30, v21, v18);
      uint64_t v32 = v49;
      *(void *)uint64_t v14 = v50;
      *((void *)v14 + 1) = v32;
      *((void *)v14 + 2) = v48;
      v14[24] = v47;
      v14[25] = v46;
      uint64_t v33 = v44;
      *((void *)v14 + 4) = v45;
      *((void *)v14 + 5) = v33;
      v14[48] = v43;
      *((void *)v14 + 7) = v30;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      swift_retain();
      sub_1000DB518((uint64_t)v14, v17);
      swift_endAccess();
      sub_1000D72B4();
      sub_1000D8458((uint64_t)v14);
      swift_release();
      return;
  }
  _os_log_impl((void *)&_mh_execute_header, v37, v38, v40, v39, 2u);
  swift_slowDealloc();
LABEL_18:
}

uint64_t sub_1000DA940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[4] = a6;
  void v7[5] = a7;
  _OWORD v7[2] = a4;
  v7[3] = a5;
  return _swift_task_switch(sub_1000DA964, a4, 0);
}

uint64_t sub_1000DA964()
{
  uint64_t v1 = *(void *)(v0 + 16);
  _s9SchedulerCMa(0);
  sub_1000DB4A4();
  sub_1001EC660();
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(v1 + 152) + **(int **)(v1 + 152));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v2;
  void *v2 = v0;
  v2[1] = sub_1000DAA7C;
  return v4();
}

uint64_t sub_1000DAA7C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return _swift_task_switch(sub_1000DAB8C, v1, 0);
}

uint64_t sub_1000DAB8C()
{
  sub_1000DABF0(v0[3], v0[4], v0[5]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1000DABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100293050);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s9SchedulerC5StateOMa(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  (*(void (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  uint64_t v16 = v3 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
  swift_beginAccess();
  sub_1000DB3D8(v16, (uint64_t)v15);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = *(void *)v15;
      uint64_t v22 = *((void *)v15 + 1);
      uint64_t v23 = *((void *)v15 + 2);
      LODWORD(v47) = v15[24];
      LODWORD(v46) = v15[25];
      uint64_t v24 = *((void *)v15 + 4);
      uint64_t v44 = *((void *)v15 + 5);
      uint64_t v45 = v24;
      LODWORD(v43) = v15[48];
      swift_release();
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1001EB560();
      sub_10007CFF8(v25, (uint64_t)qword_1002A4198);
      uint64_t v26 = sub_1001EB540();
      os_log_type_t v27 = sub_1001EC910();
      if (os_log_type_enabled(v26, v27))
      {
        long long v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Scheduler] Finished running Task", v28, 2u);
        swift_slowDealloc();
      }

      *(void *)uint64_t v13 = v21;
      *((void *)v13 + 1) = v22;
      *((void *)v13 + 2) = v23;
      v13[24] = v47;
      v13[25] = v46;
      uint64_t v29 = v44;
      *((void *)v13 + 4) = v45;
      *((void *)v13 + 5) = v29;
      v13[48] = v43;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_1000DB518((uint64_t)v13, v16);
      swift_endAccess();
      sub_1000D72B4();
      sub_1000D8458((uint64_t)v13);
      break;
    case 2u:
      uint64_t v31 = *(void *)v15;
      uint64_t v30 = *((void *)v15 + 1);
      uint64_t v46 = *((void *)v15 + 2);
      uint64_t v47 = v30;
      LODWORD(v45) = v15[24];
      LODWORD(v44) = v15[25];
      uint64_t v32 = *((void *)v15 + 4);
      uint64_t v42 = *((void *)v15 + 5);
      uint64_t v43 = v32;
      int v41 = v15[48];
      uint64_t v33 = sub_10007DC14(&qword_100293048);
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, &v15[*(int *)(v33 + 48)], v6);
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1001EB560();
      sub_10007CFF8(v34, (uint64_t)qword_1002A4198);
      uint64_t v35 = sub_1001EB540();
      os_log_type_t v36 = sub_1001EC910();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = v31;
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "[Scheduler] Finished stopping Task", v37, 2u);
        uint64_t v31 = v40;
        swift_slowDealloc();
      }

      uint64_t v38 = v47;
      *(void *)uint64_t v13 = v31;
      *((void *)v13 + 1) = v38;
      *((void *)v13 + 2) = v46;
      v13[24] = v45;
      v13[25] = v44;
      uint64_t v39 = v42;
      *((void *)v13 + 4) = v43;
      *((void *)v13 + 5) = v39;
      v13[48] = v41;
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_1000DB518((uint64_t)v13, v16);
      swift_endAccess();
      sub_1000D72B4();
      sub_1000D8458((uint64_t)v13);
      char v48 = 0;
      sub_1001EC670();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      break;
    case 3u:
      goto LABEL_3;
    default:
      swift_bridgeObjectRelease();
LABEL_3:
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1001EB560();
      sub_10007CFF8(v17, (uint64_t)qword_1002A4198);
      uint64_t v18 = sub_1001EB540();
      os_log_type_t v19 = sub_1001EC8F0();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "[Scheduler] Attempt to finsh Task while not running", v20, 2u);
        swift_slowDealloc();
      }

      break;
  }
}

void sub_1000DB1A0()
{
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1001EB560();
  sub_10007CFF8(v0, (uint64_t)qword_1002A4198);
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC910();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[Scheduler] BG task expired, requesting Task cancellation", v3, 2u);
    swift_slowDealloc();
  }

  sub_1001EC710();
}

void sub_1000DB2AC(double a1, double a2)
{
  double v3 = round(a2);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001ED040();
  v5._countAndFlagsBits = 47;
  v5._object = (void *)0xE100000000000000;
  sub_1001EC490(v5);
  double v4 = round(a1);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 < 9.22337204e18)
  {
    v6._countAndFlagsBits = sub_1001ED040();
    sub_1001EC490(v6);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1000DB3D0()
{
  sub_1000DB2AC(*v0, v0[1]);
}

uint64_t sub_1000DB3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9SchedulerC5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DB43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000DB4A4()
{
  unint64_t result = qword_100293120;
  if (!qword_100293120)
  {
    _s9SchedulerCMa(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100293120);
  }
  return result;
}

uint64_t sub_1000DB4FC(uint64_t a1)
{
  return sub_1000DA1D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000DB518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9SchedulerC5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

__n128 *sub_1000DB57C(__n128 *a1, __n128 *a2)
{
  return a2;
}

uint64_t sub_1000DB5DC()
{
  uint64_t v2 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v3 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + _Block_object_dispose(&STACK[0x3B0], 8) = sub_100093EB4;
  *(_OWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 32) = v4;
  return _swift_task_switch(sub_1000DA348, v3, 0);
}

uint64_t sub_1000DB68C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000DB6D4()
{
  uint64_t v2 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v3 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + _Block_object_dispose(&STACK[0x3B0], 8) = sub_100093200;
  *(_OWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 32) = v4;
  return _swift_task_switch(sub_1000DA964, v3, 0);
}

void sub_1000DB780()
{
}

uint64_t _s9SchedulerC11ConfigErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s9SchedulerC11ConfigErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000DB814(uint64_t result, char a2)
{
  *(unsigned char *)(result + _Block_object_dispose(&STACK[0x3B0], 8) = a2;
  return result;
}

ValueMetadata *_s9SchedulerC11ConfigErrorOMa()
{
  return &_s9SchedulerC11ConfigErrorON;
}

Swift::Void __swiftcall ReadingHistoryService.setEnableCloudSync(_:)(Swift::Bool a1)
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  unsigned int v3 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100215320;
  *(void *)(v4 + 56) = &type metadata for Bool;
  *(void *)(v4 + 64) = &protocol witness table for Bool;
  int v5 = a1;
  *(unsigned char *)(v4 + 32) = a1;
  id v6 = v3;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryService_historyCloudSyncManager);
  uint64_t v8 = (Swift::Bool *)(v7 + direct field offset for CRDTModelSyncManager.enableCloudSync);
  swift_beginAccess();
  int v9 = *v8;
  *uint64_t v8 = a1;
  if (v9 != v5)
  {
    uint64_t v10 = *(void *)(v7 + qword_100292390);
    int v11 = *(unsigned __int8 *)(v10 + qword_1002A4310);
    *(unsigned char *)(v10 + qword_1002A4310) = v5;
    if (v11 != v5) {
      sub_1000EF388(a1);
    }
  }
}

uint64_t sub_1000DB998(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t ReadingHistoryService.clearData(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v18 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1001EBAA0();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v11 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v2;
  v12[3] = a1;
  void v12[4] = a2;
  aBlock[4] = sub_1000EF744;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100265F00;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v2;
  swift_retain();
  sub_1001EBA80();
  os_log_type_t v19 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  return swift_release();
}

uint64_t sub_1000DBD24(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, a1 & 1);
}

uint64_t ReadingHistoryService.clearDefaultsCachedData(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v18 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1001EBAA0();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v11 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v2;
  v12[3] = a1;
  void v12[4] = a2;
  aBlock[4] = sub_1000EF76C;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100265F50;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v2;
  swift_retain();
  sub_1001EBA80();
  os_log_type_t v19 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  return swift_release();
}

uint64_t ReadingHistoryService.clearDate(_:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v24 = a1;
  uint64_t v4 = sub_1001EBA60();
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EBAA0();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EB0C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v14 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v23 = *(void *)&v3[OBJC_IVAR___BDSReadingHistoryService_modelReadyQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v15, v13, v10);
  uint64_t v18 = (void *)(v17 + v16);
  uint64_t v19 = v26;
  void *v18 = v25;
  v18[1] = v19;
  aBlock[4] = sub_1000EF864;
  void aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100265FA0;
  uint64_t v20 = _Block_copy(aBlock);
  uint64_t v21 = v3;
  swift_retain();
  sub_1001EBA80();
  uint64_t v30 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
  return swift_release();
}

uint64_t ReadingHistoryService.clearToday(completionHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v18 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1001EBAA0();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v11 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v2;
  v12[3] = a1;
  void v12[4] = a2;
  aBlock[4] = sub_1000EF93C;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100265FF0;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v2;
  swift_retain();
  sub_1001EBA80();
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  return swift_release();
}

uint64_t ReadingHistoryService.handleSyncFileChange(syncVersionInfo:updateInfo:completionHandler:)(void *a1, id a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v13 = type metadata accessor for CRDTModelSyncVersion();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v11 = a1;
  static CRDTModelSyncVersion.fromInfo(_:)(v11, (uint64_t)v10);

  if (a2) {
LABEL_3:
  }
    a2 = [a2 update];
LABEL_4:
  ReadingHistoryService.handleSyncFileChange(syncVersion:update:completionHandler:)((uint64_t)v10, a2, a3, a4);

  return sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_100293160);
}

uint64_t ReadingHistoryService.increment(date:by:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a4;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v5 = sub_1001EBA60();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  __chkstk_darwin(v5);
  int v41 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EBAA0();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin(v7);
  uint64_t v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EB0C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v33) = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100215310;
  id v15 = v13;
  uint64_t v16 = sub_1001EB040();
  uint64_t v18 = v17;
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v19 = sub_10007DC58();
  *(void *)(v14 + 32) = v16;
  *(void *)(v14 + 40) = v18;
  *(void *)(v14 + 96) = &type metadata for Int;
  *(void *)(v14 + 104) = &protocol witness table for Int;
  uint64_t v20 = v35;
  *(void *)(v14 + 64) = v19;
  *(void *)(v14 + 72) = v20;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v21 = v37;
  uint64_t v33 = *(void *)&v37[OBJC_IVAR___BDSReadingHistoryService_modelReadyQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24 + v22, v12, v9);
  *(void *)(v24 + v23) = v20;
  uint64_t v25 = (void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v38;
  void *v25 = v36;
  v25[1] = v26;
  aBlock[4] = sub_1000EFA3C;
  void aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100266040;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = v21;
  swift_retain();
  uint64_t v29 = v34;
  sub_1001EBA80();
  uint64_t v44 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  uint64_t v30 = v41;
  uint64_t v31 = v43;
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
  return swift_release();
}

uint64_t ReadingHistoryService.readingHistoryStateInfo(rangeStart:rangeEnd:currentTime:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v56 = a5;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v64 = a2;
  uint64_t v6 = sub_1001EBA60();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v62 = v6;
  __chkstk_darwin(v6);
  Swift::String v60 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EBAA0();
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  __chkstk_darwin(v8);
  unint64_t v57 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EB0C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::String v63 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v51 = v16;
  uint64_t v52 = (char *)v50 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v50 - v17;
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  unint64_t v19 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100215330;
  id v21 = v19;
  uint64_t v22 = sub_1001EB040();
  uint64_t v24 = v23;
  *(void *)(v20 + 56) = &type metadata for String;
  unint64_t v25 = sub_10007DC58();
  v50[0] = a1;
  unint64_t v26 = v25;
  *(void *)(v20 + 64) = v25;
  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v24;
  uint64_t v27 = sub_1001EB040();
  *(void *)(v20 + 96) = &type metadata for String;
  *(void *)(v20 + 104) = v26;
  *(void *)(v20 + 72) = v27;
  *(void *)(v20 + 80) = v28;
  uint64_t v29 = v53;
  uint64_t v30 = sub_1001EB040();
  *(void *)(v20 + 136) = &type metadata for String;
  *(void *)(v20 + 144) = v26;
  *(void *)(v20 + 112) = v30;
  *(void *)(v20 + 120) = v31;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v32 = v55;
  v50[1] = *(void *)&v55[OBJC_IVAR___BDSReadingHistoryService_modelReadyQueue];
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v33(v18, v50[0], v10);
  uint64_t v34 = v52;
  v33(v52, v64, v10);
  v33(v63, v29, v10);
  uint64_t v35 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = (v35 + 24) & ~v35;
  uint64_t v37 = (v51 + v35 + v36) & ~v35;
  uint64_t v38 = (v51 + v35 + v37) & ~v35;
  unint64_t v39 = (v51 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v32;
  int v41 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v41(v40 + v36, v18, v10);
  v41(v40 + v37, v34, v10);
  v41(v40 + v38, v63, v10);
  uint64_t v42 = (void *)(v40 + v39);
  uint64_t v43 = v56;
  *uint64_t v42 = v54;
  v42[1] = v43;
  aBlock[4] = sub_1000EFC0C;
  void aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100266090;
  uint64_t v44 = _Block_copy(aBlock);
  id v45 = v32;
  swift_retain();
  uint64_t v46 = v57;
  sub_1001EBA80();
  Swift::String v65 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  uint64_t v47 = v60;
  uint64_t v48 = v62;
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v44);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v48);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v59);
  return swift_release();
}

uint64_t sub_1000DD374(uint64_t a1, char a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a3 + 16))(a3, a1, a2 & 1);
}

BDSReadingHistoryServiceStatusInfo __swiftcall ReadingHistoryService.serviceStatusInfo()()
{
  id v0 = [objc_allocWithZone((Class)BDSReadingHistoryServiceStatusInfo) initWithIsLoaded:1];
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100215320;
  *(void *)(v2 + 56) = sub_100081668(0, (unint64_t *)&unk_100293170);
  *(void *)(v2 + 64) = sub_1000EFCBC((unint64_t *)&qword_100291A30, (unint64_t *)&unk_100293170);
  *(void *)(v2 + 32) = v0;
  id v3 = v1;
  uint64_t v4 = (objc_class *)v0;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v6 = v4;
  result._status = v5;
  result.super.Class isa = v6;
  return result;
}

uint64_t ReadingHistoryService.bookWidgetReadingHistoryStateInfo()()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_1000DD4F0, 0, 0);
}

uint64_t sub_1000DD4F0()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  id v2 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryService_viewStateChangeHandler);
  if (v3)
  {
    id v4 = [(id)swift_unknownObjectRetain() currentViewStateInfo];
    os_log_type_t v5 = sub_1001EC910();
    uint64_t v6 = (void *)qword_100293A68;
    os_log_type_t v7 = v5;
    if (os_log_type_enabled((os_log_t)qword_100293A68, v5))
    {
      id v4 = v4;
      log = v6;
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      v0[2] = v4;
      id v10 = v4;
      sub_1001ECBC0();
      void *v9 = v4;

      _os_log_impl((void *)&_mh_execute_header, log, v7, "ReadingHistoryService DONE bookWidgetReadingHistoryStateInfo: %@", v8, 0xCu);
      sub_10007DC14(&qword_100293190);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1001EC8F0();
    id v11 = (id)qword_100293A68;
    sub_1001EB530();

    id v4 = 0;
  }
  uint64_t v12 = (uint64_t (*)(id, BOOL))v0[1];
  return v12(v4, v3 != 0);
}

uint64_t ReadingHistoryService.mergeMovedReadingHistoryData()()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1000DD79C, 0, 0);
}

uint64_t sub_1000DD79C()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_100293A68;
  sub_1001EB530();

  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  void *v2 = v0;
  v2[1] = sub_1000DD8A4;
  return sub_1000DFAC8();
}

uint64_t sub_1000DD8A4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t ReadingHistoryService.backup(name:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_1000DD9C8, 0, 0);
}

uint64_t sub_1000DD9C8()
{
  v0[5] = sub_1000DE584();
  id v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_1000DDA70;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return ReadingHistoryBackupManager.backup(name:)(v3, v2);
}

uint64_t sub_1000DDA70()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000DDBB0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8);
    return v3(1);
  }
}

uint64_t sub_1000DDBB0()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t ReadingHistoryService.listBackup()()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1000DDC38, 0, 0);
}

uint64_t sub_1000DDC38()
{
  *(void *)(v0 + 24) = sub_1000DE584();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_1000DDCD4;
  return sub_100145A94();
}

uint64_t sub_1000DDCD4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1000DDE28, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    return v5(a1, 1);
  }
}

uint64_t sub_1000DDE28()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ReadingHistoryService.restore(name:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  void v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_1000DDEB4, 0, 0);
}

uint64_t sub_1000DDEB4()
{
  v0[5] = sub_1000DE584();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[6] = v1;
  void *v1 = v0;
  v1[1] = sub_1000DDF5C;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return ReadingHistoryBackupManager.restore(name:)(v3, v2);
}

uint64_t sub_1000DDF5C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000F351C, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8);
    return v3(1);
  }
}

void sub_1000DE09C(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + direct field offset for CRDTModelSyncManager.enableCloudSync);
  swift_beginAccess();
  int v4 = *v3;
  int v5 = a1 & 1;
  *uint64_t v3 = a1;
  if (v4 != v5)
  {
    uint64_t v6 = *(void *)(v1 + qword_100292390);
    int v7 = *(unsigned __int8 *)(v6 + qword_1002A4310);
    *(unsigned char *)(v6 + qword_1002A4310) = v5;
    if (v7 != v5) {
      sub_1000EF388(a1 & 1);
    }
  }
}

void *sub_1000DE134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = v3;
  uint64_t v20 = a3;
  uint64_t v21 = a2;
  uint64_t v19 = a1;
  uint64_t v5 = sub_1001EC990();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_1001EC9C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EBAA0();
  __chkstk_darwin(v10 - 8);
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  id v11 = (void *)((char *)v4 + *(void *)(*v4 + 144));
  *id v11 = 0;
  v11[1] = 0;
  uint64_t v12 = *(void *)(*v3 + 152);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA90();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v6);
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  *(void *)((char *)v3 + v12) = sub_1001ECA00();
  *(void *)((char *)v3 + *(void *)(*v3 + 160)) = &_swiftEmptySetSingleton;
  *(void *)((char *)v3 + *(void *)(*v3 + 168)) = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 176)) = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 184)) = 0;
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1001ECD20(20);
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)0xD000000000000012;
  unint64_t v23 = 0x80000001002214C0;
  v24._countAndFlagsBits = 0xD00000000000001CLL;
  v24._object = (void *)0x8000000100224330;
  sub_1001EC490(v24);
  sub_1001EB550();
  void v3[4] = v19;
  uint64_t v13 = (char *)v4 + *(void *)(*v4 + 136);
  uint64_t v14 = sub_1001EAF60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, v20, v14);
  uint64_t v15 = (char *)v4 + *(void *)(*v4 + 128);
  uint64_t v16 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, v21, v16);
  return v4;
}

uint64_t sub_1000DE584()
{
  uint64_t v1 = OBJC_IVAR___BDSReadingHistoryService____lazy_storage___historyBackupManager;
  if (*(void *)(v0 + OBJC_IVAR___BDSReadingHistoryService____lazy_storage___historyBackupManager))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___BDSReadingHistoryService____lazy_storage___historyBackupManager);
  }
  else
  {
    __chkstk_darwin(0);
    uint64_t v4 = v0;
    type metadata accessor for ReadingHistoryBackupManager();
    sub_1001EC9E0();
    uint64_t v2 = v5;
    *(void *)(v4 + v1) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1000DE660@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + OBJC_IVAR___BDSReadingHistoryService_historyServiceContext) + 64);
  type metadata accessor for ReadingHistoryBackupManager();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0xD000000000000055;
  v4[3] = 0x80000001002212C0;
  void v4[4] = 0xD000000000000012;
  void v4[5] = 0x8000000100221320;
  void v4[6] = 0xD000000000000013;
  v4[7] = 0x8000000100221340;
  v4[8] = 0x736B6F6F42;
  v4[9] = 0xE500000000000000;
  v4[10] = 0xD000000000000019;
  v4[11] = 0x8000000100221360;
  v4[12] = v3;
  *a2 = v4;
  return swift_unknownObjectRetain();
}

char *ReadingHistoryService.__allocating_init(readingGoalsService:transactionProvider:viewStateChangeHandler:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return ReadingHistoryService.init(readingGoalsService:transactionProvider:viewStateChangeHandler:)(a1, a2, a3);
}

char *ReadingHistoryService.init(readingGoalsService:transactionProvider:viewStateChangeHandler:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = self;
  swift_unknownObjectRetain();
  id v7 = [v6 sharedInstance];
  uint64_t v8 = (void *)sub_10007D428();
  id v9 = sub_10008E4E0();
  id v10 = objc_allocWithZone((Class)sub_10007DC14(&qword_100291A00));
  uint64_t v11 = swift_getObjectType();
  swift_unknownObjectRetain();
  id v12 = v7;
  id v13 = v8;
  id v14 = v9;
  uint64_t v15 = sub_1001B2DB0(v12, v13, v14, a2, v10);
  uint64_t v16 = (char *)objc_allocWithZone((Class)sub_10007DC14((uint64_t *)&unk_100291F30));
  uint64_t v17 = v15;
  uint64_t v18 = sub_1000BF348(v17, v13, a2, v16, v11);

  *(void *)&v17[qword_1002A4308 + 8] = &off_100264430;
  swift_unknownObjectWeakAssign();

  type metadata accessor for ReadingHistoryServiceContext();
  uint64_t v19 = sub_1001403FC(a2);
  id v20 = objc_allocWithZone(ObjectType);
  uint64_t v21 = sub_1000DE9B4(a1, v18, (uint64_t)v19, 0, a3);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v21;
}

char *sub_1000DE9B4(void *a1, NSObject *a2, uint64_t a3, NSObject *a4, uint64_t a5)
{
  uint64_t v104 = a3;
  uint64_t v105 = a5;
  os_log_t v100 = a4;
  id v102 = a1;
  os_log_t v103 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v85 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v89 = (uint64_t)&v84 - v9;
  uint64_t v91 = sub_1001EB0C0();
  uint64_t v90 = *(void *)(v91 - 8);
  uint64_t v10 = __chkstk_darwin(v91);
  uint64_t v87 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v88 = (char *)&v84 - v12;
  uint64_t v13 = sub_10007DC14(&qword_100293840);
  __chkstk_darwin(v13 - 8);
  uint64_t v86 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1001EC990();
  __chkstk_darwin(v98);
  uint64_t v15 = sub_1001EBAA0();
  __chkstk_darwin(v15 - 8);
  uint64_t v95 = sub_1001EC9C0();
  uint64_t v16 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = OBJC_IVAR___BDSReadingHistoryService_historyDefaults;
  id v20 = self;
  uint64_t v21 = v5;
  id v99 = [v20 standardUserDefaults];
  *(void *)&v5[v19] = v99;
  v21[OBJC_IVAR___BDSReadingHistoryService_isModelReady] = 0;
  uint64_t v97 = OBJC_IVAR___BDSReadingHistoryService_accessQueue;
  uint64_t v92 = sub_100081668(0, (unint64_t *)&qword_1002919A0);
  unsigned int v93 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v22 = *(void (**)(void))(v16 + 104);
  uint64_t v94 = v16 + 104;
  uint64_t v96 = (void (*)(char *, void, uint64_t))v22;
  v22(v18);
  sub_1001EBA80();
  unint64_t v109 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  *(void *)&v21[v97] = sub_1001ECA00();
  uint64_t v23 = OBJC_IVAR___BDSReadingHistoryService_modelReadyQueue;
  v96(v18, v93, v95);
  sub_1001EBA80();
  unint64_t v109 = _swiftEmptyArrayStorage;
  sub_1001ECC30();
  *(void *)&v21[v23] = sub_1001ECA00();
  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService_readingHistoryUpdatePendingSave] = 0;
  uint64_t v24 = OBJC_IVAR___BDSReadingHistoryService_readingHistoryUpdatePendingSaveAccessLock;
  sub_10007DC14(&qword_100293420);
  uint64_t v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  *(void *)&v21[v24] = v25;
  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService____lazy_storage___historyBackupManager] = 0;
  os_log_t v26 = v100;
  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService_lifetimeTransaction] = v100;
  uint64_t v27 = v104;
  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService_viewStateChangeHandler] = v105;
  id v29 = v102;
  os_log_t v28 = v103;
  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService_goalsService] = v102;
  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService_historyCloudSyncManager] = v28;
  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService_historyServiceContext] = v27;
  uint64_t v30 = *(void **)(v27 + 64);
  sub_10007DC14(&qword_100293428);
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v31 = v28;
  swift_unknownObjectRetain_n();
  uint64_t v32 = v31;
  uint64_t v33 = (char *)v29;
  swift_retain();
  os_log_t v103 = v26;
  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService_historyCloudSyncController] = sub_1000E7D9C(v32, (uint64_t)v30);
  id v102 = v33;
  uint64_t v34 = *(void *)&v33[OBJC_IVAR___BDSReadingGoalsService_goalsController];
  type metadata accessor for ReadingHistoryDataStore(0);
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v32;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v37 = v99;
  uint64_t v38 = sub_1000AA2B0(v34, (uint64_t)v36, (uint64_t)v30, 0, 14, v37, v35);
  swift_release();
  swift_unknownObjectRelease();

  *(void *)&v21[OBJC_IVAR___BDSReadingHistoryService_historyDataStore] = v38;
  v108.receiver = v21;
  v108.super_class = ObjectType;
  unint64_t v39 = (char *)objc_msgSendSuper2(&v108, "init");
  uint64_t v40 = *(void *)&v39[OBJC_IVAR___BDSReadingHistoryService_historyCloudSyncController];
  *(void *)(v40 + qword_1002A41C8 + _Block_object_dispose(&STACK[0x3B0], 8) = &off_1002931E8;
  swift_unknownObjectWeakAssign();
  uint64_t v106 = *(void *)(v40 + 16);
  int v41 = v39;
  swift_retain();
  sub_10007DC14(&qword_100291BB0);
  sub_1001EC9E0();
  uint64_t v42 = swift_allocObject();
  swift_weakInit();
  sub_1000A4274(v40, (uint64_t)sub_1000F2704, v42);
  swift_release();
  swift_release();
  swift_release();
  dispatch_suspend(*(dispatch_object_t *)&v41[OBJC_IVAR___BDSReadingHistoryService_modelReadyQueue]);
  id v43 = [self books];
  id v44 = [v43 userDefaults];

  NSString v45 = [self dataHasBeenMovedUserDefaultsKey];
  if (!v45)
  {
    sub_1001EC370();
    NSString v45 = sub_1001EC340();
    swift_bridgeObjectRelease();
  }
  unsigned int v46 = [v44 BOOLForKey:v45];

  if (v46
    && (uint64_t v47 = *(void **)&v41[OBJC_IVAR___BDSReadingHistoryService_historyDefaults],
        NSString v48 = sub_1001EC340(),
        LOBYTE(v47) = [v47 BOOLForKey:v48],
        v48,
        (v47 & 1) == 0))
  {
    uint64_t v66 = sub_1001EC6A0();
    uint64_t v67 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v86, 1, 1, v66);
    Swift::String v68 = (void *)swift_allocObject();
    void v68[2] = 0;
    v68[3] = 0;
    v68[4] = v41;
    Swift::String v69 = v41;
    sub_10018B898(v67, (uint64_t)&unk_100293440, (uint64_t)v68);
    swift_release();
  }
  else
  {
    uint64_t v49 = v89;
    sub_1000E0528(v89);
    uint64_t v50 = v90;
    uint64_t v51 = v91;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v49, 1, v91) == 1)
    {
      sub_1000816A4(v49, (uint64_t *)&unk_1002924C0);
      uint64_t v52 = *(void **)&v41[OBJC_IVAR___BDSReadingHistoryService_historyDefaults];
      NSString v53 = sub_1001EC340();
      LOBYTE(v52) = [v52 BOOLForKey:v53];

      if (v52)
      {
        uint64_t v54 = (uint64_t)v85;
        sub_1001EB0B0();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v54, 0, 1, v51);
        sub_1000E0694(v54);
        sub_1001EC910();
        if (qword_1002910E8 != -1) {
          swift_once();
        }
        id v55 = (id)qword_100293A68;
        sub_1001EB530();
      }
    }
    else
    {
      uint64_t v56 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v88, v49, v51);
      os_log_type_t v57 = sub_1001EC8D0();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      uint64_t v58 = qword_100293A68;
      uint64_t v59 = v87;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v87, v56, v51);
      os_log_type_t v60 = v57;
      if (os_log_type_enabled(v58, v57))
      {
        os_log_t v100 = v58;
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        unint64_t v109 = (void *)swift_slowAlloc();
        uint64_t ObjectType = v36;
        *(_DWORD *)uint64_t v61 = 136315138;
        id v99 = v61 + 4;
        sub_1000F04DC(&qword_100293430, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v62 = sub_1001ED040();
        uint64_t v107 = sub_1001A8090(v62, v63, (uint64_t *)&v109);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        uint64_t v64 = *(void (**)(char *, uint64_t))(v50 + 8);
        v64(v59, v51);
        os_log_t v65 = v100;
        _os_log_impl((void *)&_mh_execute_header, v100, v60, "Migration: skipping reading history migration in daemon. last migrated:%s", v61, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v64(v88, v51);
        uint64_t v36 = ObjectType;
      }
      else
      {
        uint64_t v70 = *(void (**)(char *, uint64_t))(v50 + 8);
        v70(v59, v51);
        v70(v56, v51);
      }
    }
  }
  id v71 = [v30 createTransactionWithName:"com.apple.bookdatastored.ReadingHistoryService.loadingModel"];
  sub_1000E0814();
  uint64_t v72 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = v72;
  *(void *)(v73 + 24) = v71;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_1000F27CC;
  *(void *)(v74 + 24) = v73;
  uint64_t v75 = v41;
  swift_retain();
  swift_retain();
  id v76 = v71;
  swift_retain();
  swift_retain();
  sub_1000A4274((uint64_t)v75, (uint64_t)sub_1000F27D4, v74);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  os_log_t v77 = self;
  id v78 = [v77 defaultCenter];
  sub_1000AF7FC();
  id v79 = v75;
  uint64_t v80 = (void *)sub_1001EB240();
  [v78 addObserver:v79 selector:"handlePlaceholderStreakDayGoalNeedsUpdate:" name:v80 object:0];

  id v81 = [v77 defaultCenter];
  uint64_t v82 = v79;
  [v81 addObserver:v82 selector:"handleSignificantDateChange:" name:@"BDSNotificationForwarderSignificantTimeChangeNotification" object:0];
  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  return v82;
}

uint64_t CRDTModelCloudSyncController.__allocating_init(cloudSyncManager:transactionProvider:)(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CRDTModelCloudSyncController.init(cloudSyncManager:transactionProvider:)(a1, a2);
  return v4;
}

uint64_t sub_1000DF914(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_1000DF9A8;
  return sub_1000DFAC8();
}

uint64_t sub_1000DF9A8(char a1)
{
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000DFAA8, 0, 0);
}

uint64_t sub_1000DFAA8()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000DFAC8()
{
  v1[22] = v0;
  uint64_t v2 = sub_1001EB0C0();
  v1[23] = v2;
  v1[24] = *(void *)(v2 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  sub_10007DC14((uint64_t *)&unk_1002924C0);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  uint64_t v3 = sub_1001EAF60();
  v1[29] = v3;
  v1[30] = *(void *)(v3 - 8);
  v1[31] = swift_task_alloc();
  return _swift_task_switch(sub_1000DFC34, 0, 0);
}

uint64_t sub_1000DFC34()
{
  uint64_t v58 = v0;
  uint64_t v1 = *(void **)(*(void *)(v0 + 176) + OBJC_IVAR___BDSReadingHistoryService_historyDefaults);
  NSString v2 = sub_1001EC340();
  unsigned __int8 v3 = [v1 BOOLForKey:v2];

  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 192);
    sub_1000E0528(v4);
    int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 192);
    if (v7 != 1)
    {
      (*(void (**)(void, void, void))(v9 + 32))(*(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 184));
      os_log_type_t v25 = sub_1001EC910();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      os_log_t v26 = qword_100293A68;
      (*(void (**)(void, void, void))(*(void *)(v0 + 192) + 16))(*(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 184));
      os_log_type_t v27 = v25;
      BOOL v28 = os_log_type_enabled(v26, v25);
      uint64_t v29 = *(void *)(v0 + 200);
      uint64_t v30 = *(void *)(v0 + 208);
      uint64_t v31 = *(void *)(v0 + 184);
      uint64_t v32 = *(void *)(v0 + 192);
      if (v28)
      {
        log = v26;
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136315138;
        sub_1000F04DC(&qword_100293430, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v34 = sub_1001ED040();
        *(void *)(v0 + 160) = sub_1001A8090(v34, v35, &v57);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
        v36(v29, v31);
        _os_log_impl((void *)&_mh_execute_header, log, v27, "Migration: Not needed in daemon. Last migrated at:%s", v33, 0xCu);
        uint64_t v37 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v36(v30, v31);
        goto LABEL_29;
      }
      uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v50(*(void *)(v0 + 200), *(void *)(v0 + 184));
      v50(v30, v31);
      goto LABEL_28;
    }
    uint64_t v10 = *(void *)(v0 + 224);
    sub_1000816A4(*(void *)(v0 + 216), (uint64_t *)&unk_1002924C0);
    sub_1001EB0B0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v10, 0, 1, v8);
    sub_1000E0694(v10);
    sub_1001EC910();
    if (qword_1002910E8 == -1)
    {
LABEL_4:
      id v11 = (id)qword_100293A68;
      sub_1001EB530();

LABEL_28:
      uint64_t v37 = 1;
      goto LABEL_29;
    }
LABEL_33:
    swift_once();
    goto LABEL_4;
  }
  id v54 = v1;
  uint64_t v12 = (unsigned char *)(v0 + 260);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void **)(v0 + 176);
  id v14 = (id)qword_100293A68;
  sub_1001EB530();

  *(_WORD *)(v0 + 260) = 0;
  id v15 = [self readingHistoryFileURL];
  sub_1001EAF10();

  id v16 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  sub_1001EAEC0(v17);
  uint64_t v19 = v18;
  id v20 = (void *)swift_allocObject();
  void v20[2] = v0 + 261;
  void v20[3] = v12;
  v20[4] = v13;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1000F3064;
  *(void *)(v21 + 24) = v20;
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x3B0], 8) = sub_1000F30B4;
  *(void *)(v0 + 56) = v21;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1000E62E0;
  *(void *)(v0 + 40) = &unk_100266DD0;
  uint64_t v22 = _Block_copy((const void *)(v0 + 16));
  id v23 = v13;
  swift_retain();
  swift_release();
  [v16 coordinateReadingItemAtURL:v19 options:0 error:0 byAccessor:v22];

  _Block_release(v22);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v19)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (*v12 == 1) {
    os_log_type_t v24 = sub_1001EC910();
  }
  else {
    os_log_type_t v24 = sub_1001EC8F0();
  }
  id v55 = (unsigned char *)(v0 + 260);
  uint64_t v38 = (void *)qword_100293A68;
  os_log_type_t v39 = v24;
  if (os_log_type_enabled((os_log_t)qword_100293A68, v24))
  {
    NSString v53 = v38;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315394;
    swift_beginAccess();
    if (*v55) {
      uint64_t v41 = 0x6673736563637573;
    }
    else {
      uint64_t v41 = 0x64656C696166;
    }
    if (*v55) {
      unint64_t v42 = 0xEC000000796C6C75;
    }
    else {
      unint64_t v42 = 0xE600000000000000;
    }
    *(void *)(v0 + 16_Block_object_dispose(&STACK[0x3B0], 8) = sub_1001A8090(v41, v42, &v57);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 1024;
    swift_beginAccess();
    *(_DWORD *)(v0 + 256) = *(unsigned __int8 *)(v0 + 261);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v53, v39, "Migration done in daemon %s, completed: %{BOOL}d", (uint8_t *)v40, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t v44 = *(void *)(v0 + 240);
  uint64_t v43 = *(void *)(v0 + 248);
  uint64_t v45 = *(void *)(v0 + 232);
  if (*(unsigned char *)(v0 + 261) == 1)
  {
    uint64_t v46 = *(void *)(v0 + 224);
    uint64_t v48 = *(void *)(v0 + 184);
    uint64_t v47 = *(void *)(v0 + 192);
    NSString v49 = sub_1001EC340();
    [v54 setBool:1 forKey:v49];

    sub_1001EB0B0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v46, 0, 1, v48);
    sub_1000E0694(v46);

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
  }
  else
  {
    (*(void (**)(void, void))(v44 + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
  }
  swift_beginAccess();
  uint64_t v37 = *v55;
  swift_release();
LABEL_29:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v51 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v51(v37);
}

uint64_t sub_1000E0528@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v3 = *(void **)(v1 + OBJC_IVAR___BDSReadingHistoryService_historyDefaults);
  NSString v4 = sub_1001EC340();
  id v5 = [v3 valueForKey:v4];

  if (v5)
  {
    sub_1001ECBF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1000935F8((uint64_t)v10, (uint64_t)v11, &qword_100295B50);
  if (v12)
  {
    uint64_t v6 = sub_1001EB0C0();
    int v7 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, v7 ^ 1u, 1, v6);
  }
  else
  {
    sub_1000816A4((uint64_t)v11, &qword_100295B50);
    uint64_t v9 = sub_1001EB0C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_1000E0694(uint64_t a1)
{
  uint64_t v3 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR___BDSReadingHistoryService_historyDefaults);
  sub_1000936F8(a1, (uint64_t)v5, (uint64_t *)&unk_1002924C0);
  uint64_t v7 = sub_1001EB0C0();
  uint64_t v8 = *(void *)(v7 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    Class isa = sub_1001EB060().super.isa;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  NSString v10 = sub_1001EC340();
  [v6 setObject:isa forKey:v10];
  swift_unknownObjectRelease();

  return sub_1000816A4(a1, (uint64_t *)&unk_1002924C0);
}

void sub_1000E0814()
{
  uint64_t v1 = type metadata accessor for ReadingHistory.State(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v36 = (uint64_t)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10007DC14(&qword_100291C80);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_1001EB0C0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14(&qword_100291CB0);
  sub_1001EC9E0();
  if (v37 != 1)
  {
    sub_1001EC910();
    if (qword_1002910E8 == -1) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (!*(void *)(v0 + OBJC_IVAR___BDSReadingHistoryService_viewStateChangeHandler))
  {
    sub_1001EC910();
    if (qword_1002910E8 == -1)
    {
LABEL_11:
      id v28 = (id)qword_100293A68;
      sub_1001EB530();

      return;
    }
LABEL_12:
    swift_once();
    goto LABEL_11;
  }
  id v35 = *(id *)(v0 + OBJC_IVAR___BDSReadingHistoryService_viewStateChangeHandler);
  swift_unknownObjectRetain();
  sub_1001EB0B0();
  uint64_t v13 = (uint64_t)&v8[*(int *)(v3 + 48)];
  sub_1000E46B8(v8, v13, (uint64_t)v12, 9);
  uint64_t v14 = (uint64_t)&v6[*(int *)(v3 + 48)];
  id v15 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v15(v6, v8, v9);
  v15((char *)v14, (char *)v13, v9);
  ReadingHistoryDataStore.readingHistoryState(range:currentTime:)((uint64_t)v6, v14, (uint64_t)v12, v36);
  id v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v16(v14, v9);
  v16((uint64_t)v6, v9);
  ReadingHistory.State.toInfo()(v17);
  uint64_t v19 = v18;
  os_log_type_t v20 = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v21 = (void *)qword_100293A68;
  if (os_log_type_enabled((os_log_t)qword_100293A68, v20))
  {
    id v22 = v19;
    uint64_t v33 = v19;
    id v23 = v22;
    os_log_t v32 = v21;
    int v31 = v20;
    os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v25 = (void *)swift_slowAlloc();
    uint64_t v34 = v16;
    uint64_t v30 = v24;
    *(_DWORD *)os_log_type_t v24 = 138412290;
    id v37 = v23;
    id v26 = v23;
    id v16 = v34;
    sub_1001ECBC0();
    void *v25 = v23;
    uint64_t v19 = v33;

    os_log_t v27 = v32;
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v31, "ReadingHistoryService updateViewStateIfNeeded: state: %@", v30, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  [v35 handleReadingHistoryViewStateChange:v19];

  swift_unknownObjectRelease();
  sub_1000F2664(v36, type metadata accessor for ReadingHistory.State);
  sub_1000816A4((uint64_t)v8, &qword_100291C80);
  v16((uint64_t)v12, v9);
}

void sub_1000E0D58(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v5 = (id)qword_100293A68;
    sub_1001EB530();

    __int16 v13 = 0;
    uint64_t v6 = *(NSObject **)&v4[OBJC_IVAR___BDSReadingHistoryService_accessQueue];
    uint64_t v7 = (void *)swift_allocObject();
    _OWORD v7[2] = (char *)&v13 + 1;
    v7[3] = v4;
    void v7[4] = &v13;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1000F2934;
    *(void *)(v8 + 24) = v7;
    void v12[4] = sub_1000B0738;
    v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_100089470;
    v12[3] = &unk_100266C68;
    uint64_t v9 = _Block_copy(v12);
    uint64_t v10 = v4;
    swift_retain();
    swift_release();
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v6)
    {
      __break(1u);
      return;
    }
    if ((v13 & 1) == 0)
    {
      if (HIBYTE(v13) != 1)
      {
LABEL_13:
        swift_release();

        return;
      }
      sub_1001EC910();
      id v11 = (id)qword_100293A68;
      sub_1001EB530();

      dispatch_resume(*(dispatch_object_t *)&v10[OBJC_IVAR___BDSReadingHistoryService_modelReadyQueue]);
    }
    if (HIBYTE(v13) == 1) {
      sub_1000E0814();
    }
    if ((v13 & 1) == 0 && HIBYTE(v13) == 1) {
      [a2 endTransaction];
    }
    goto LABEL_13;
  }
}

uint64_t sub_1000E100C(unsigned char *a1, uint64_t a2, unsigned char *a3)
{
  sub_10007DC14(&qword_100291CB0);
  uint64_t result = sub_1001EC9E0();
  *a1 = v8;
  uint64_t v7 = OBJC_IVAR___BDSReadingHistoryService_isModelReady;
  *a3 = *(unsigned char *)(a2 + OBJC_IVAR___BDSReadingHistoryService_isModelReady);
  *(unsigned char *)(a2 + v7) = *a1;
  return result;
}

id ReadingHistoryService.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *(char **)&v0[OBJC_IVAR___BDSReadingHistoryService_historyDataStore];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC14bookdatastored23ReadingHistoryDataStore_lastModelChange];
  id v5 = *(NSObject **)(v4 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1000AC394;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_1000AC2B4;
  void aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  void aBlock[3] = &unk_100266108;
  char v8 = _Block_copy(aBlock);
  id v9 = v1;
  swift_retain_n();
  id v10 = v9;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  if (v5)
  {
    __break(1u);
    goto LABEL_5;
  }
  id v11 = self;
  id v12 = [v11 defaultCenter];
  sub_1000AF7FC();
  uint64_t v3 = (char *)v10;
  __int16 v13 = (void *)sub_1001EB240();
  [v12 removeObserver:v3 name:v13 object:0];

  id v14 = [v11 defaultCenter];
  [v14 removeObserver:v3 name:@"BDSNotificationForwarderSignificantTimeChangeNotification" object:0];

  sub_1001EC910();
  if (qword_1002910E8 != -1) {
LABEL_5:
  }
    swift_once();
  id v15 = (id)qword_100293A68;
  sub_1001EB530();

  v17.receiver = v3;
  v17.super_class = ObjectType;
  return objc_msgSendSuper2(&v17, "dealloc");
}

uint64_t sub_1000E14C8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryService_historyDataStore);
  uint64_t v4 = *(NSObject **)(v3 + 144);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1000F33B8;
  *(void *)(v5 + 24) = v3;
  void v9[4] = sub_1000B0738;
  void v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  void v9[2] = sub_100089470;
  v9[3] = &unk_100266F88;
  uint64_t v6 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v6);
  _Block_release(v6);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v4)
  {
    __break(1u);
    goto LABEL_5;
  }
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
LABEL_5:
  }
    swift_once();
  id v7 = (id)qword_100293A68;
  sub_1001EB530();

  return a2(1);
}

uint64_t sub_1000E16D0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR___BDSReadingHistoryService_historyDefaults);
  NSString v4 = sub_1001EC340();
  [v3 removeObjectForKey:v4];

  NSString v5 = sub_1001EC340();
  [v3 setInteger:0 forKey:v5];

  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v6 = (id)qword_100293A68;
  sub_1001EB530();

  return a2(1);
}

uint64_t sub_1000E1838(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_1000A2C70(a2, 0x7461447261656C63, 0xE900000000000065);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v4 = (id)qword_100293A68;
  sub_1001EB530();

  return a3(1);
}

uint64_t sub_1000E1A4C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(void *)(a1 + OBJC_IVAR___BDSReadingHistoryService_historyDataStore) + 120))(v6);
  sub_1000A2C70((uint64_t)v8, 0x646F547261656C63, 0xEA00000000007961);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v9 = (id)qword_100293A68;
  sub_1001EB530();

  return a2(1);
}

uint64_t sub_1000E1C1C(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  id v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);

  return swift_release();
}

uint64_t static CRDTModelSyncVersion.fromInfo(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1001EC210();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 data];
  sub_1001EAFE0();

  sub_1001EC070();
  sub_1001EC190();
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  uint64_t v12 = sub_1001EC170();
  sub_1000816A4((uint64_t)v15, &qword_1002931D0);
  uint64_t v13 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))((char *)v6 + *(int *)(v13 + 20), v10, v7);
  *uint64_t v6 = v12;
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
  return sub_1000935F8((uint64_t)v6, a2, (uint64_t *)&unk_100293160);
}

uint64_t ReadingHistoryService.handleSyncFileChange(syncVersion:update:completionHandler:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v27 = a1;
  uint64_t v6 = sub_1001EBA60();
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EBAA0();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007DC14((uint64_t *)&unk_100293160);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  id v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v16 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v26 = *(void *)&v4[OBJC_IVAR___BDSReadingHistoryService_modelReadyQueue];
  sub_1000936F8(v27, (uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_100293160);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v4;
  sub_1000935F8((uint64_t)v15, v19 + v17, (uint64_t *)&unk_100293160);
  os_log_type_t v20 = (void *)(v19 + v18);
  uint64_t v21 = v29;
  *os_log_type_t v20 = v28;
  v20[1] = v21;
  aBlock[4] = sub_1000F02AC;
  void aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100266158;
  id v22 = _Block_copy(aBlock);
  id v23 = a2;
  os_log_type_t v24 = v4;
  swift_retain();
  sub_1001EBA80();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  return swift_release();
}

uint64_t sub_1000E251C(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v60 = a5;
  uint64_t v64 = (uint64_t (*)(void))a3;
  uint64_t v8 = type metadata accessor for CRDTModelSyncVersion();
  os_log_t v62 = *(os_log_t *)(v8 - 8);
  uint64_t v63 = v8;
  __chkstk_darwin(v8);
  uint64_t v57 = (uint64_t)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14((uint64_t *)&unk_100293160);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v56 - v12;
  uint64_t v59 = (char *)v14;
  if (a1) {
    uint64_t v61 = *(void *)&a1[OBJC_IVAR___BDSReadingHistoryUpdate_value + 8];
  }
  else {
    uint64_t v61 = 0;
  }
  id v15 = [self books];
  id v16 = [v15 userDefaults];

  NSString v17 = sub_1001EC340();
  id v18 = [v16 integerForKey:v17];

  id v66 = v18;
  if (a1)
  {
    uint64_t v19 = (os_unfair_lock_s *)(*(void *)(a2
                                         + OBJC_IVAR___BDSReadingHistoryService_readingHistoryUpdatePendingSaveAccessLock)
                             + 16);
    os_log_type_t v20 = a1;
    os_unfair_lock_lock(v19);
    uint64_t v21 = OBJC_IVAR___BDSReadingHistoryService_readingHistoryUpdatePendingSave;
    id v22 = *(char **)(a2 + OBJC_IVAR___BDSReadingHistoryService_readingHistoryUpdatePendingSave);
    if (v22)
    {
      id v18 = *(id *)&v22[OBJC_IVAR___BDSReadingHistoryUpdate_value + 8];
      id v66 = v18;
      id v23 = v22;
      uint64_t v24 = a2;
      id v25 = ReadingHistoryUpdate.coalesce(newerUpdate:)(v20);

      uint64_t v26 = *(void **)(v24 + v21);
      *(void *)(v24 + v21) = v25;
      a2 = v24;
    }
    else
    {
      *(void *)(a2 + OBJC_IVAR___BDSReadingHistoryService_readingHistoryUpdatePendingSave) = a1;
      uint64_t v27 = v20;
    }
    os_unfair_lock_unlock(v19);
  }
  uint64_t v28 = *(void *)(a2 + OBJC_IVAR___BDSReadingHistoryService_historyCloudSyncController);
  uint64_t result = sub_1001EC9E0();
  v56[1] = v28;
  int v58 = LOBYTE(aBlock[0]);
  if (!a1 || (aBlock[0] & 1) != 0)
  {
    sub_1000936F8((uint64_t)v64, (uint64_t)v13, (uint64_t *)&unk_100293160);
    goto LABEL_15;
  }
  if (!__OFADD__(v18, 1))
  {
    sub_1000936F8((uint64_t)v64, (uint64_t)v13, (uint64_t *)&unk_100293160);
    if ((uint64_t)v18 + 1 >= v61)
    {
      BOOL v30 = 0;
      goto LABEL_16;
    }
LABEL_15:
    BOOL v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v62[6].isa)(v13, 1, v63) != 1;
LABEL_16:
    sub_1000816A4((uint64_t)v13, (uint64_t *)&unk_100293160);
    os_log_type_t v31 = sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v32 = (void *)qword_100293A68;
    if (os_log_type_enabled((os_log_t)qword_100293A68, v31))
    {
      uint64_t v33 = v32;
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 67109888;
      LODWORD(aBlock[0]) = v30;
      sub_1001ECBC0();
      *(_WORD *)(v34 + _Block_object_dispose(&STACK[0x3B0], 8) = 2048;
      aBlock[0] = v61;
      sub_1001ECBC0();
      *(_WORD *)(v34 + 1_Block_object_dispose(&STACK[0x3B0], 8) = 2048;
      swift_beginAccess();
      aBlock[0] = v66;
      sub_1001ECBC0();
      *(_WORD *)(v34 + 2_Block_object_dispose(&STACK[0x3B0], 8) = 1024;
      LODWORD(aBlock[0]) = v58;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v33, v31, "ReadingHistoryService handleSyncFileChange - doFullSync=%{BOOL}d (editGen=%ld, lastSeenGen=%ld, loaded=%{BOOL}d)", (uint8_t *)v34, 0x22u);
      swift_slowDealloc();
    }
    if (v30)
    {
      id v35 = v59;
      sub_1000936F8((uint64_t)v64, (uint64_t)v59, (uint64_t *)&unk_100293160);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v62[6].isa)(v35, 1, v63) == 1)
      {
        sub_1000816A4((uint64_t)v35, (uint64_t *)&unk_100293160);
        sub_1001EC8F0();
        id v36 = (id)qword_100293A68;
LABEL_30:
        sub_1001EB530();

        goto LABEL_31;
      }
    }
    else
    {
      if (!a1)
      {
        sub_1001EC8F0();
        id v36 = (id)qword_100293A68;
        goto LABEL_30;
      }
      id v37 = a1;
      os_log_type_t v38 = sub_1001EC910();
      os_log_type_t v39 = (void *)qword_100293A68;
      os_log_type_t v40 = v38;
      if (os_log_type_enabled((os_log_t)qword_100293A68, v38))
      {
        uint64_t v41 = v37;
        os_log_t v62 = v39;
        unint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v64 = a4;
        uint64_t v44 = (void *)v43;
        uint64_t v63 = a2;
        *(_DWORD *)unint64_t v42 = 138412290;
        aBlock[0] = v41;
        uint64_t v45 = v41;
        a2 = v63;
        sub_1001ECBC0();
        *uint64_t v44 = a1;

        os_log_t v46 = v62;
        _os_log_impl((void *)&_mh_execute_header, v62, v40, "ReadingHistoryService handleSyncFileChange - received update: %@", v42, 0xCu);
        sub_10007DC14(&qword_100293190);
        swift_arrayDestroy();
        a4 = v64;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      uint64_t v47 = *(void *)(a2 + OBJC_IVAR___BDSReadingHistoryService_historyDataStore);
      uint64_t v48 = *(NSObject **)(v47 + 144);
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = v47;
      *(void *)(v49 + 24) = v37;
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = sub_1000AC564;
      *(void *)(v50 + 24) = v49;
      aBlock[4] = sub_1000B0738;
      void aBlock[5] = v50;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100089470;
      void aBlock[3] = &unk_100266948;
      uint64_t v51 = _Block_copy(aBlock);
      id v35 = v37;
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v48, v51);
      _Block_release(v51);
      LOBYTE(v4_Block_object_dispose(&STACK[0x3B0], 8) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if ((v48 & 1) == 0) {
        goto LABEL_31;
      }
      __break(1u);
    }
    uint64_t v52 = (uint64_t)v35;
    uint64_t v53 = v57;
    sub_1000F25A8(v52, v57, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
    sub_1001EC910();
    id v54 = (id)qword_100293A68;
    sub_1001EB530();

    sub_1000E2DD0(v53, 1);
    sub_1000F2664(v53, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
LABEL_31:
    sub_1001EC910();
    id v55 = (id)qword_100293A68;
    sub_1001EB530();

    return a4(1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E2DD0(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = *(NSObject **)(v2 + 48);
  sub_1000F2540(a1, (uint64_t)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  sub_1000F25A8((uint64_t)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  *(unsigned char *)(v10 + v9 + v7) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1000F2378;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1000B0738;
  void aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  void aBlock[3] = &unk_1002669C0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v12);
  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t CRDTModelCloudSyncController.checkLocalModelSyncVersion(syncVersion:createTransaction:)(uint64_t a1, char a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *v2;
  uint64_t v7 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = v2[6];
  sub_1000F2540(a1, (uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = *(void *)(v5 + 80);
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(v6 + 88);
  *(void *)(v12 + 40) = *(void *)(v5 + 104);
  *(void *)(v12 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v2;
  sub_1000F25A8((uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  *(unsigned char *)(v12 + v11 + v9) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1000F0444;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1000B0738;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  void aBlock[3] = &unk_1002661D0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v14);
  _Block_release(v14);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000E3268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v31 = a3;
  uint64_t v7 = sub_1001EBA60();
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  __chkstk_darwin(v7);
  uint64_t v28 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EB0C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v13);
  id v25 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReadingHistoryDataStore.increment(date:by:)(a2, v31);
  uint64_t v37 = *(void *)(a1 + OBJC_IVAR___BDSReadingHistoryService_historyCloudSyncManager);
  sub_1001EC9E0();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
  *(void *)(v17 + v16) = v31;
  id v18 = (void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v19 = v27;
  void *v18 = v26;
  v18[1] = v19;
  swift_retain();
  sub_10007DC14((uint64_t *)&unk_1002933B0);
  sub_1001EC9E0();
  uint64_t v20 = v38;
  uint64_t v21 = v28;
  sub_1001EBA50();
  uint64_t v22 = (uint64_t)v25;
  uint64_t v32 = v20;
  uint64_t v33 = v25;
  char v34 = 0;
  id v35 = sub_1000F32E0;
  uint64_t v36 = v17;
  sub_10007DC14((uint64_t *)&unk_100293450);
  sub_1001EC9D0();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v30);
  swift_release();
  swift_release();
  return sub_1000F2664(v22, type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_1000E35D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100215310;
  id v7 = v5;
  uint64_t v8 = sub_1001EB040();
  uint64_t v10 = v9;
  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v11 = sub_10007DC58();
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 40) = v10;
  *(void *)(v6 + 96) = &type metadata for Int;
  *(void *)(v6 + 104) = &protocol witness table for Int;
  *(void *)(v6 + 64) = v11;
  *(void *)(v6 + 72) = a2;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  return a3(1);
}

void sub_1000E3844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id, uint64_t), uint64_t a6)
{
  uint64_t v27 = a6;
  uint64_t v28 = a5;
  uint64_t v9 = type metadata accessor for ReadingHistory.State(0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReadingHistoryDataStore.readingHistoryState(range:currentTime:)(a2, a3, a4, (uint64_t)v11);
  ReadingHistory.State.toInfo()(v12);
  uint64_t v14 = v13;
  sub_1000F2664((uint64_t)v11, type metadata accessor for ReadingHistory.State);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  unint64_t v15 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100215850;
  id v17 = v15;
  uint64_t v18 = sub_1001EB040();
  uint64_t v20 = v19;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v21 = sub_10007DC58();
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  uint64_t v22 = sub_1001EB040();
  *(void *)(v16 + 96) = &type metadata for String;
  *(void *)(v16 + 104) = v21;
  *(void *)(v16 + 72) = v22;
  *(void *)(v16 + 80) = v23;
  uint64_t v24 = sub_1001EB040();
  *(void *)(v16 + 136) = &type metadata for String;
  *(void *)(v16 + 144) = v21;
  *(void *)(v16 + 112) = v24;
  *(void *)(v16 + 120) = v25;
  *(void *)(v16 + 176) = sub_100081668(0, &qword_100293488);
  *(void *)(v16 + 184) = sub_1000EFCBC((unint64_t *)&unk_100293490, &qword_100293488);
  *(void *)(v16 + 152) = v14;
  id v26 = v14;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  v28(v26, 1);
}

uint64_t sub_1000E3E0C()
{
  uint64_t v1 = sub_1001EBA60();
  uint64_t v16 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1001EBAA0();
  uint64_t v4 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v7 = (id)qword_100293A68;
  sub_1001EB530();

  id v8 = [*(id *)(*(void *)&v0[OBJC_IVAR___BDSReadingHistoryService_historyServiceContext] + 64) createTransactionWithName:"com.apple.bookdatastored.ReadingHistoryService.handlePlaceholderStreakDayGoalNeedsUpdate"];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1000F0B0C;
  void aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_1002666A0;
  uint64_t v10 = _Block_copy(aBlock);
  unint64_t v11 = v0;
  id v12 = v8;
  sub_1001EBA80();
  id v17 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v15);
  return swift_release();
}

uint64_t sub_1000E4264()
{
  uint64_t v1 = sub_1001EBA60();
  uint64_t v16 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1001EBAA0();
  uint64_t v4 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v7 = (id)qword_100293A68;
  sub_1001EB530();

  id v8 = [*(id *)(*(void *)&v0[OBJC_IVAR___BDSReadingHistoryService_historyServiceContext] + 64) createTransactionWithName:"com.apple.bookdatastored.ReadingHistoryService.handleSignificantDateChange"];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1000F0AB0;
  void aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100266650;
  uint64_t v10 = _Block_copy(aBlock);
  unint64_t v11 = v0;
  id v12 = v8;
  sub_1001EBA80();
  id v17 = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v15);
  return swift_release();
}

uint64_t sub_1000E46B8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = a2;
  uint64_t v58 = a4;
  uint64_t v60 = a3;
  uint64_t v56 = a1;
  uint64_t v54 = sub_10007DC14(&qword_100291C80);
  uint64_t v4 = __chkstk_darwin(v54);
  id v55 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)&v47 - v6;
  uint64_t v7 = sub_1001EB160();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1001EB180();
  uint64_t v11 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1001EB0C0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v52 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v50 = (char *)&v47 - v25;
  __chkstk_darwin(v24);
  uint64_t v51 = (char *)&v47 - v26;
  sub_1001EB0F0();
  uint64_t v27 = v8;
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Calendar.Component.day(_:), v7);
  if (__OFSUB__(0, v58))
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = v16;
    uint64_t v30 = v7;
    uint64_t v31 = v60;
    sub_1001EB150();
    uint64_t v32 = v30;
    uint64_t v33 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v32);
    char v34 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v58 = v11 + 8;
    uint64_t v49 = v34;
    v34(v13, v59);
    id v35 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v50, v31, v17);
    int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v29, 1, v17);
    uint64_t v48 = v18;
    if (v36 == 1)
    {
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      uint64_t v38 = v51;
      v37(v51, v35, v17);
      sub_1000816A4(v33, (uint64_t *)&unk_1002924C0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v17);
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
      uint64_t v38 = v51;
      v37(v51, (char *)v33, v17);
    }
    sub_1001EB0F0();
    sub_1001EB100();
    uint64_t v39 = v59;
    os_log_type_t v40 = v49;
    v49(v13, v59);
    sub_1001EB0F0();
    uint64_t v41 = v52;
    sub_1001EB100();
    v40(v13, v39);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v17);
    uint64_t v43 = v53;
    uint64_t v42 = v54;
    uint64_t v44 = &v53[*(int *)(v54 + 48)];
    v37(v53, v23, v17);
    v37(v44, v41, v17);
    uint64_t v45 = v55;
    os_log_t v46 = &v55[*(int *)(v42 + 48)];
    v37(v55, v43, v17);
    v37(v46, v44, v17);
    v37(v56, v45, v17);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v37)(v57, v46, v17);
  }
  return result;
}

uint64_t sub_1000E4D68(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  void *v5 = v2;
  v5[1] = sub_10008C800;
  v5[3] = v4;
  return _swift_task_switch(sub_1000DD4F0, 0, 0);
}

void ReadingHistoryService.init()()
{
}

void sub_1000E4E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v21[-v9];
  uint64_t v11 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000936F8(a1, (uint64_t)v10, (uint64_t *)&unk_100291B90);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v15 = sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_100291B90);
  }
  else
  {
    sub_1000F25A8((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
    uint64_t v16 = *(void *)(v2 + OBJC_IVAR___BDSReadingHistoryService_historyServiceContext);
    sub_1000F2540((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    sub_100140478(*(void *)(v16 + 16), *(void *)(v16 + 24), (uint64_t)v8);
    sub_1000816A4((uint64_t)v8, (uint64_t *)&unk_100291B90);
    uint64_t v15 = sub_1000F2664((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  }
  uint64_t v17 = __chkstk_darwin(v15);
  *(void *)&v21[-16] = v2;
  *(void *)&v21[-8] = a2;
  __chkstk_darwin(v17);
  *(void *)&v21[-16] = sub_1000F2CDC;
  *(void *)&v21[-8] = v18;
  uint64_t v20 = v19 + 4;
  os_unfair_lock_lock(v19 + 4);
  sub_1000F2CF8();
  os_unfair_lock_unlock(v20);
}

void sub_1000E5128(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = OBJC_IVAR___BDSReadingHistoryService_readingHistoryUpdatePendingSave;
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR___BDSReadingHistoryService_readingHistoryUpdatePendingSave);
  if (v3)
  {
    uint64_t v6 = v3;
    if ((ReadingHistoryUpdate.hasDelta(from:)(a2) & 1) == 0)
    {
      uint64_t v7 = *(void *)&v6[OBJC_IVAR___BDSReadingHistoryUpdate_value + 8];
      id v8 = [self books];
      id v9 = [v8 userDefaults];

      NSString v10 = sub_1001EC340();
      [v9 setInteger:v7 forKey:v10];

      uint64_t v11 = *(void **)(a1 + v2);
      *(void *)(a1 + v2) = 0;

      os_log_type_t v12 = sub_1001EC910();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      uint64_t v13 = (void *)qword_100293A68;
      if (os_log_type_enabled((os_log_t)qword_100293A68, v12))
      {
        uint64_t v14 = v13;
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 134217984;
        sub_1001ECBC0();
        _os_log_impl((void *)&_mh_execute_header, v14, v12, "ReadingHistoryService saved lastLocalUpdateSavedGeneration=%ld", v15, 0xCu);
        swift_slowDealloc();
      }
    }
  }
}

uint64_t sub_1000E5304(uint64_t a1)
{
  uint64_t v3 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v15 - v7;
  uint64_t v9 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  os_log_type_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000936F8(a1, (uint64_t)v8, (uint64_t *)&unk_100291B90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1000816A4((uint64_t)v8, (uint64_t *)&unk_100291B90);
  }
  sub_1000F25A8((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR___BDSReadingHistoryService_historyServiceContext);
  sub_1000F2540((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  sub_100140478(*(void *)(v14 + 32), *(void *)(v14 + 40), (uint64_t)v6);
  sub_1000816A4((uint64_t)v6, (uint64_t *)&unk_100291B90);
  return sub_1000F2664((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
}

uint64_t sub_1000E5670(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_1000E56E8, 0, 0);
}

uint64_t sub_1000E56E8()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  void *v2 = v0;
  v2[1] = sub_1000E57F0;
  return sub_1000DFAC8();
}

uint64_t sub_1000E57F0(char a1)
{
  uint64_t v3 = *(void (***)(void, void, void))(*v1 + 24);
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1, 0);
  _Block_release(v3);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_1000E593C()
{
  id v1 = v0;
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v2 = (id)qword_100293A68;
  sub_1001EB530();

  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = [*(id *)(*(void *)&v1[OBJC_IVAR___BDSReadingHistoryService_historyServiceContext] + 64) createTransactionWithName:"com.apple.bookdatastored.reading-history-migration"];
  uint64_t v3 = self;
  id v4 = [v3 books];
  id v5 = [v4 userDefaults];

  uint64_t v6 = self;
  NSString v7 = [v6 booksFinishedUserDefaultsKey];
  if (!v7)
  {
    sub_1001EC370();
    NSString v7 = sub_1001EC340();
    swift_bridgeObjectRelease();
  }
  id v8 = [v5 dictionaryForKey:v7];

  if (v8)
  {
    uint64_t v9 = (void *)sub_1001EC260();
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = [v3 books];
  id v11 = [v10 userDefaults];

  NSString v12 = [v6 streakDayUserDefaultsKey];
  if (!v12)
  {
    sub_1001EC370();
    NSString v12 = sub_1001EC340();
    swift_bridgeObjectRelease();
  }
  id v13 = [v11 dictionaryForKey:v12];

  if (v13)
  {
    char v15 = sub_1001EC260();
  }
  else
  {
    char v15 = 0;
  }
  v64.value._rawValue = v9;
  v64.is_nil = v15;
  ReadingGoalsDataStore.migrate(bookFinishedGoalDict:streakDayGoalDict:)(v64, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v16 = objc_allocWithZone((Class)NSPersistentContainer);
  NSString v17 = sub_1001EC340();
  id v18 = [v16 initWithName:v17];

  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = 0;
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 0;
  id v21 = [self defaultManager];
  sub_1001EAF30();
  NSString v22 = sub_1001EC340();
  swift_bridgeObjectRelease();
  LODWORD(v16) = [v21 fileExistsAtPath:v22];

  if (v16)
  {
    id v23 = objc_allocWithZone((Class)NSPersistentStoreDescription);
    sub_1001EAEC0(v24);
    uint64_t v26 = v25;
    id v27 = [v23 initWithURL:v25];

    [v27 setShouldInferMappingModelAutomatically:1];
    [v27 setShouldMigrateStoreAutomatically:1];
    [v27 setUsesPersistentHistoryTracking:1];
    sub_10007DC14(&qword_100293470);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_100217610;
    *(void *)(v28 + 32) = v27;
    sub_1001EC600();
    sub_100081668(0, &qword_100293478);
    id v60 = v27;
    Class isa = sub_1001EC5D0().super.isa;
    swift_bridgeObjectRelease();
    [v18 setPersistentStoreDescriptions:isa];

    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = v18;
    void v30[3] = v61;
    void v30[4] = v19;
    v30[5] = v1;
    v30[6] = v20;
    aBlock[4] = sub_1000F317C;
    void aBlock[5] = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000E767C;
    void aBlock[3] = &unk_100266E70;
    uint64_t v31 = _Block_copy(aBlock);
    id v32 = v18;
    swift_retain();
    swift_retain();
    uint64_t v33 = v1;
    swift_retain();
    swift_release();
    [v32 loadPersistentStoresWithCompletionHandler:v31];
    _Block_release(v31);
    swift_beginAccess();
    if (*(unsigned char *)(v20 + 16) != 1) {
      goto LABEL_23;
    }
    swift_beginAccess();
    *(unsigned char *)(v19 + 16) = 1;
    sub_1001EC910();
    id v34 = (id)qword_100293A68;
    sub_1001EB530();

    id v35 = [v32 persistentStoreCoordinator];
    sub_1001EAEC0(v36);
    uint64_t v38 = v37;
    NSString v39 = [v60 type];
    if (!v39)
    {
      sub_1001EC370();
      NSString v39 = sub_1001EC340();
      swift_bridgeObjectRelease();
    }
    v62[0] = 0;
    unsigned int v40 = [v35 destroyPersistentStoreAtURL:v38 withType:v39 options:0 error:v62];

    if (v40)
    {
      id v41 = v62[0];
    }
    else
    {
      id v44 = v62[0];
      sub_1001EAE60();

      swift_willThrow();
      sub_1001EC8F0();
      uint64_t v45 = (void *)qword_100293A68;
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_100215320;
      id v47 = v45;
      uint64_t v48 = sub_1001EAF30();
      uint64_t v50 = v49;
      *(void *)(v46 + 56) = &type metadata for String;
      *(void *)(v46 + 64) = sub_10007DC58();
      *(void *)(v46 + 32) = v48;
      *(void *)(v46 + 40) = v50;
      sub_1001EB530();

      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    if (*(unsigned char *)(v20 + 16) == 1) {
      os_log_type_t v51 = sub_1001EC910();
    }
    else {
LABEL_23:
    }
      os_log_type_t v51 = sub_1001EC8F0();
    uint64_t v52 = (void *)qword_100293A68;
    os_log_type_t v53 = v51;
    if (os_log_type_enabled((os_log_t)qword_100293A68, v51))
    {
      swift_retain();
      swift_retain();
      uint64_t v54 = v52;
      uint64_t v55 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 67109376;
      LODWORD(v62[0]) = *(unsigned __int8 *)(v20 + 16);
      sub_1001ECBC0();
      swift_release();
      *(_WORD *)(v55 + _Block_object_dispose(&STACK[0x3B0], 8) = 1024;
      swift_beginAccess();
      LODWORD(v62[0]) = *(unsigned __int8 *)(v19 + 16);
      sub_1001ECBC0();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v54, v53, "Daemon migration reading history - success: %{BOOL}d, completed: %{BOOL}d", (uint8_t *)v55, 0xEu);
      swift_slowDealloc();
    }
    swift_beginAccess();
  }
  else
  {
    sub_1001EC910();
    id v42 = (id)qword_100293A68;
    sub_1001EB530();

    *(unsigned char *)(v19 + 16) = 1;
    *(unsigned char *)(v20 + 16) = 1;
    uint64_t v43 = *(void **)(v61 + 16);
    *(void *)(v61 + 16) = 0;
  }
  unsigned int v56 = *(unsigned __int8 *)(v19 + 16);
  int v57 = *(unsigned __int8 *)(v20 + 16);
  swift_release();
  swift_release();
  swift_release();
  if (v57) {
    int v58 = 256;
  }
  else {
    int v58 = 0;
  }
  return v58 | v56;
}

uint64_t sub_1000E62E0(uint64_t a1)
{
  uint64_t v2 = sub_1001EAF60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1001EAF10();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000E63C4(int a1, uint64_t a2, id a3, id a4, uint64_t a5, uint64_t isEscapingClosureAtFileLocation, uint64_t a7)
{
  id v10 = (void *)(a5 + 16);
  uint64_t v11 = a7 + 16;
  if (!a2) {
    goto LABEL_4;
  }
  uint64_t v22 = a7 + 16;
  swift_errorRetain();
  sub_1001EC8F0();
  if (qword_1002910E8 != -1) {
    goto LABEL_6;
  }
  while (1)
  {
    NSString v12 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100215320;
    swift_getErrorValue();
    id v14 = v12;
    uint64_t v15 = sub_1001ED110();
    uint64_t v17 = v16;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_10007DC58();
    *(void *)(v13 + 32) = v15;
    *(void *)(v13 + 40) = v17;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v11 = v22;
LABEL_4:
    id v18 = [a3 newBackgroundContext];
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = a4;
    void v19[3] = v18;
    v19[4] = v10;
    void v19[5] = isEscapingClosureAtFileLocation;
    void v19[6] = v11;
    a3 = (id)swift_allocObject();
    *((void *)a3 + 2) = sub_1000F31D4;
    *((void *)a3 + 3) = v19;
    aBlock[4] = sub_1000B0738;
    void aBlock[5] = a3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100089470;
    void aBlock[3] = &unk_100266EE8;
    id v10 = _Block_copy(aBlock);
    swift_retain();
    a4 = v18;
    id v20 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    [a4 performBlockAndWait:v10];

    _Block_release(v10);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_6:
    swift_once();
  }
  return result;
}

unint64_t sub_1000E6670(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v51 = a5;
  uint64_t v52 = a4;
  id v56 = a3;
  uint64_t v58 = a1;
  uint64_t v54 = sub_1001EBA60();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v8 = __chkstk_darwin(v7);
  id v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)v46 - v11;
  id v12 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v13 = sub_1001EC340();
  id v14 = [v12 initWithEntityName:v13];

  sub_100081668(0, &qword_100293480);
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v15 = swift_allocObject();
  long long v57 = xmmword_100215320;
  *(_OWORD *)(v15 + 16) = xmmword_100215320;
  *(void *)(v15 + 56) = &type metadata for String;
  unint64_t v16 = sub_10007DC58();
  *(void *)(v15 + 64) = v16;
  *(void *)(v15 + 32) = 0xD000000000000013;
  *(void *)(v15 + 40) = 0x8000000100221340;
  uint64_t v17 = (void *)sub_1001EC8C0();
  [v14 setPredicate:v17];

  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v18 = (id)qword_100293A68;
  sub_1001EB530();

  type metadata accessor for CRDTModelSyncEntity();
  unint64_t result = sub_1001ECA20();
  unint64_t v20 = result;
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1001EC8F0();
    id v44 = (id)qword_100293A68;
    sub_1001EB530();

    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1001ECEA0();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v43) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v20 & 0xC000000000000001) != 0)
  {
    id v21 = (id)sub_1001ECD50();
    goto LABEL_8;
  }
  if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v21 = *(id *)(v20 + 32);
LABEL_8:
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    id v23 = [v22 protoData];
    if (v23)
    {
      uint64_t v24 = v23;
      unint64_t v50 = v16;
      id v47 = v6;
      id v56 = v22;
      uint64_t v25 = sub_1001EAFE0();
      unint64_t v27 = v26;

      sub_1001EC910();
      id v28 = (id)qword_100293A68;
      sub_1001EB530();

      sub_100093680(v25, v27);
      sub_1000F04DC((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
      uint64_t v29 = (uint64_t)v55;
      uint64_t v48 = v25;
      unint64_t v49 = v27;
      sub_1001EC000();
      os_log_type_t v31 = sub_1001EC910();
      id v32 = qword_100293A68;
      sub_1000F2540(v29, (uint64_t)v10, type metadata accessor for ReadingHistoryModel);
      if (os_log_type_enabled(v32, v31))
      {
        id v34 = v32;
        id v35 = (uint8_t *)swift_slowAlloc();
        v60[0] = swift_slowAlloc();
        *(_DWORD *)id v35 = 136315138;
        v46[1] = v35 + 4;
        unint64_t v36 = ReadingHistoryModel.description.getter();
        uint64_t v59 = sub_1001A8090(v36, v37, v60);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1000F2664((uint64_t)v10, type metadata accessor for ReadingHistoryModel);
        _os_log_impl((void *)&_mh_execute_header, v34, v31, "Migration: Model loaded! let's merge: %s", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1000F2664((uint64_t)v10, type metadata accessor for ReadingHistoryModel);
      }
      uint64_t v38 = v47;
      uint64_t v39 = *(void *)(v52 + OBJC_IVAR___BDSReadingHistoryService_historyCloudSyncManager);
      uint64_t v40 = sub_1001EBA50();
      __chkstk_darwin(v40);
      uint64_t v41 = (uint64_t)v55;
      v46[-4] = v39;
      v46[-3] = v41;
      LOBYTE(v46[-2]) = 1;
      sub_1001EC9D0();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v54);
      sub_1000F2664(v41, type metadata accessor for ReadingHistoryModel);
      sub_100081714(v48, v49);

      id v42 = &v61;
      goto LABEL_18;
    }
    sub_1001EC8F0();
    id v30 = (id)qword_100293A68;
    sub_1001EB530();

LABEL_17:
    id v42 = &v62;
LABEL_18:
    uint64_t v45 = (unsigned char *)*(v42 - 32);
    swift_beginAccess();
    unsigned char *v45 = 1;
    return sub_1000E71C8(v58);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E71C8(uint64_t a1)
{
  uint64_t v2 = sub_1001EBA60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v28 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EBAA0();
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1001EBAC0();
  uint64_t v26 = *(void *)(v29 - 8);
  uint64_t v8 = __chkstk_darwin(v29);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v22 - v11;
  uint64_t v13 = sub_1001EBA70();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  id v18 = *(void **)(a1 + 16);
  if (v18)
  {
    id v24 = v18;
    [v24 transactionNeedsMoreTime];
    sub_100081668(0, (unint64_t *)&qword_1002919A0);
    uint64_t v25 = v5;
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchQoS.QoSClass.background(_:), v13);
    uint64_t v23 = sub_1001ECA10();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_1001EBAB0();
    sub_1001EBAD0();
    uint64_t v26 = *(void *)(v26 + 8);
    ((void (*)(char *, uint64_t))v26)(v10, v29);
    aBlock[4] = sub_1000F31F4;
    void aBlock[5] = a1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000DB998;
    void aBlock[3] = &unk_100266F10;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    sub_1001EBA80();
    id v30 = _swiftEmptyArrayStorage;
    sub_1000F04DC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10007DC14((uint64_t *)&unk_100291BF0);
    sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
    unint64_t v20 = v28;
    sub_1001ECC30();
    id v21 = (void *)v23;
    sub_1001EC9A0();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v20, v2);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v25);
    ((void (*)(char *, uint64_t))v26)(v12, v29);
    return swift_release();
  }
  return result;
}

void sub_1000E767C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_1000E7708()
{
  long long v2 = *(_OWORD *)(*(void *)v0 + 80);
  type metadata accessor for CRDTModelFileSyncManager();
  sub_1001EC9E0();
  return v2;
}

void *sub_1000E77A0(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = v2;
  }
  else
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v4 = (id)qword_100293A68;
    sub_1001EB530();

    uint64_t v5 = *(void *)(a1 + 56);
    swift_unknownObjectRetain();
    id v6 = (void *)sub_1000EC4B8(0x617461646B6F6F62, 0xEE006465726F7473);
    sub_10007DC14((uint64_t *)&unk_1002933B0);
    id v7 = (void *)swift_allocObject();
    uint64_t v3 = sub_1000F0ED0(v6, v5, 0, 0, v7);

    swift_unknownObjectRelease();
    *(void *)(a1 + 24) = v3;
    swift_retain();
    swift_release();
    sub_1000E7A88();
  }
  swift_retain();
  return v3;
}

uint64_t sub_1000E7900@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v4 = *(void **)(a1 + 24);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v6 = (id)qword_100293A68;
    sub_1001EB530();

    type metadata accessor for CRDTModelFileSyncManager();
    id v7 = *(char **)(a1 + 56);
    swift_unknownObjectRetain();
    uint64_t v5 = sub_10018733C(0x617461646B6F6F62, 0xEE006465726F7473, 1, v7, 0, 0);
    swift_unknownObjectRelease();
    *(void *)(a1 + 24) = v5;
    swift_retain();
    swift_release();
    sub_1000E7BEC();
  }
  *a2 = v5;
  return swift_retain();
}

uint64_t sub_1000E7A88()
{
  sub_10007DC14(&qword_100291BB0);
  sub_1001EC9E0();
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  sub_1000A4274(v0, (uint64_t)sub_1000F24B0, v1);
  swift_release();
  swift_release();
  sub_10007DC14((uint64_t *)&unk_1002933C0);
  sub_1001EC9E0();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  sub_1000A43F0(v0, (uint64_t)sub_1000F2500, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_1000E7BEC()
{
  uint64_t v1 = (void *)*v0;
  CRDTModelFileSyncManager.observable.getter();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = (void *)swift_allocObject();
  uint64_t v4 = v1[10];
  v3[2] = v4;
  uint64_t v5 = v1[11];
  v3[3] = v5;
  uint64_t v6 = v1[12];
  void v3[4] = v6;
  uint64_t v7 = v1[13];
  void v3[5] = v7;
  v3[6] = v2;
  ObservableContainer.addObserver(_:callback:)(v0, sub_1000F21DC, v3);
  swift_release();
  swift_release();
  CRDTModelFileSyncManager.modelSyncVersionObservable.getter();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v4;
  v9[3] = v5;
  void v9[4] = v6;
  void v9[5] = v7;
  void v9[6] = v8;
  sub_1000A43F0((uint64_t)v0, (uint64_t)sub_1000F21F4, (uint64_t)v9);
  swift_release();
  return swift_release();
}

void *sub_1000E7D9C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v4 - 8);
  id v32 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EC990();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1001EBAA0();
  __chkstk_darwin(v7 - 8);
  uint64_t v31 = sub_1001EC9C0();
  uint64_t v8 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  id v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[3] = 0;
  v28[1] = sub_100081668(0, (unint64_t *)&qword_1002919A0);
  unsigned int v30 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v29 = *(void (**)(char *))(v8 + 104);
  v29(v10);
  sub_1001EBA80();
  aBlock[0] = _swiftEmptyArrayStorage;
  v28[0] = sub_1000F04DC((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  v2[4] = sub_1001ECA00();
  void v2[5] = 0;
  ((void (*)(char *, void, uint64_t))v29)(v10, v30, v31);
  sub_1001EBA80();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001ECC30();
  v2[6] = sub_1001ECA00();
  uint64_t v11 = (char *)v2 + qword_1002931D8;
  uint64_t v12 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  *(void *)((char *)v3 + qword_1002931E0) = 0;
  *(void *)((char *)v3 + qword_1002A41C8 + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v14 = v33;
  uint64_t v15 = v34;
  v3[2] = v33;
  v3[7] = v15;
  uint64_t v16 = (uint64_t)v32;
  v13(v32, 1, 1, v12);
  uint64_t v17 = (uint64_t)v3 + qword_1002931D8;
  swift_beginAccess();
  id v18 = v14;
  swift_unknownObjectRetain();
  sub_1000AF3B4(v16, v17, (uint64_t *)&unk_100293160);
  swift_endAccess();
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  id v20 = objc_allocWithZone((Class)BUCoalescingCallBlock);
  aBlock[4] = sub_1000F2FF8;
  void aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000916AC;
  void aBlock[3] = &unk_100266D08;
  id v21 = _Block_copy(aBlock);
  swift_retain();
  NSString v22 = sub_1001EC340();
  id v23 = [v20 initWithNotifyBlock:v21 blockDescription:v22];

  _Block_release(v21);
  swift_release();
  swift_release();
  [v23 setCoalescingDelay:30.0];

  swift_unknownObjectRelease();
  id v24 = (void **)((char *)v3 + qword_1002931E0);
  swift_beginAccess();
  uint64_t v25 = *v24;
  *id v24 = 0;

  uint64_t v26 = *v24;
  *id v24 = v23;

  return v3;
}

void *CRDTModelCloudSyncController.init(cloudSyncManager:transactionProvider:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v35 = a1;
  uint64_t v36 = a2;
  uint64_t v37 = *v2;
  uint64_t v38 = v37;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v4 - 8);
  uint64_t v34 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EC990();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1001EBAA0();
  __chkstk_darwin(v7 - 8);
  uint64_t v33 = sub_1001EC9C0();
  uint64_t v8 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[3] = 0;
  v30[1] = sub_100081668(0, (unint64_t *)&qword_1002919A0);
  unsigned int v32 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v31 = *(void (**)(char *))(v8 + 104);
  v31(v10);
  sub_1001EBA80();
  aBlock[0] = _swiftEmptyArrayStorage;
  v30[0] = sub_1000F04DC((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  v2[4] = sub_1001ECA00();
  void v2[5] = 0;
  ((void (*)(char *, void, uint64_t))v31)(v10, v32, v33);
  sub_1001EBA80();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001ECC30();
  v2[6] = sub_1001ECA00();
  uint64_t v11 = (char *)v2 + qword_1002931D8;
  uint64_t v12 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  *(void *)((char *)v3 + qword_1002931E0) = 0;
  *(void *)((char *)v3 + qword_1002A41C8 + _Block_object_dispose(&STACK[0x3B0], 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v14 = v35;
  uint64_t v15 = v36;
  v3[2] = v35;
  v3[7] = v15;
  uint64_t v16 = (uint64_t)v34;
  v13(v34, 1, 1, v12);
  uint64_t v17 = (uint64_t)v3 + qword_1002931D8;
  swift_beginAccess();
  id v18 = v14;
  swift_unknownObjectRetain();
  sub_1000AF3B4(v16, v17, (uint64_t *)&unk_100293160);
  swift_endAccess();
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v37;
  *(void *)(v20 + 16) = *(void *)(v37 + 80);
  *(_OWORD *)(v20 + 24) = *(_OWORD *)(v38 + 88);
  *(void *)(v20 + 40) = *(void *)(v21 + 104);
  *(void *)(v20 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v19;
  id v22 = objc_allocWithZone((Class)BUCoalescingCallBlock);
  aBlock[4] = sub_1000F0524;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000916AC;
  void aBlock[3] = &unk_100266248;
  id v23 = _Block_copy(aBlock);
  swift_retain();
  NSString v24 = sub_1001EC340();
  id v25 = [v22 initWithNotifyBlock:v23 blockDescription:v24];

  _Block_release(v23);
  swift_release();
  swift_release();
  [v25 setCoalescingDelay:30.0];

  swift_unknownObjectRelease();
  uint64_t v26 = (void **)((char *)v3 + qword_1002931E0);
  swift_beginAccess();
  uint64_t v27 = *v26;
  void *v26 = 0;

  id v28 = *v26;
  void *v26 = v25;

  return v3;
}

uint64_t sub_1000E8958(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(NSObject **)(result + 48);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1000F0BBC;
    *(void *)(v5 + 24) = v3;
    aBlock[4] = sub_1000B0738;
    void aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100089470;
    void aBlock[3] = &unk_100266D58;
    uint64_t v6 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v4, v6);
    _Block_release(v6);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v4)
    {
      __break(1u);
    }
    else
    {
      a1(result);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000E8AD4(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = sub_1000E8B4C();
    a1(v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E8B4C()
{
  uint64_t v1 = *(NSObject **)(v0 + 48);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1000F0BBC;
  *(void *)(v2 + 24) = v0;
  void v5[4] = sub_1000B0738;
  void v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_100089470;
  v5[3] = &unk_100266808;
  uint64_t v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000E8C80()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000E90E0();
    return swift_release();
  }
  return result;
}

void sub_1000E8CE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EBA60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100291F40);
  __chkstk_darwin(v8);
  id v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = [*(id *)(v2 + 56) createTransactionWithName:"com.apple.bookdatastored.CRDTModelCloudSyncController.handleLocalModelEvent"];
  sub_1000936F8(a1, (uint64_t)v10, &qword_100291F40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_10007DC14(&qword_100291F48);
    sub_1000935F8((uint64_t)&v10[*(int *)(v14 + 48)], (uint64_t)v13, (uint64_t *)&unk_100291CA0);
    sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_100291CA0);
  }
  else
  {
    sub_1000935F8((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_100291CA0);
  }
  int v15 = v13[*(int *)(v11 + 44)];
  sub_1001EC910();
  if (v15 == 1)
  {
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v16 = (id)qword_100293A68;
    sub_1001EB530();

    uint64_t v17 = *(void **)(v2 + 16);
    uint64_t v18 = sub_1001EBA50();
    __chkstk_darwin(v18);
    v20[-4] = v17;
    v20[-3] = v13;
    LOBYTE(v20[-2]) = 0;
    sub_1001EC9D0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1000E5304((uint64_t)&v13[*(int *)(v11 + 52)]);
      swift_unknownObjectRelease();
    }
    sub_1000816A4((uint64_t)v13, (uint64_t *)&unk_100291CA0);
  }
  else
  {
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v19 = (id)qword_100293A68;
    sub_1001EB530();

    sub_1000816A4((uint64_t)v13, (uint64_t *)&unk_100291CA0);
  }
}

void sub_1000E90E0()
{
  uint64_t v1 = type metadata accessor for ModelState();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - v3;
  id v5 = [*(id *)(v0 + 56) createTransactionWithName:"com.apple.bookdatastored.CRDTModelCloudSyncController.handleLocalModelEvent"];
  swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for ObservableContainer.Event();
  ObservableContainer.Event.currentValue.getter(v6, (uint64_t)v4);
  BOOL v7 = static CRDTModelLocalFileManager.SyncError.__derived_enum_equals(_:_:)(v4[*(int *)(v1 + 44)], 1);
  sub_1001EC910();
  if (v7)
  {
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v8 = (id)qword_100293A68;
    sub_1001EB530();

    CRDTModelSyncManager.sync(_:)((uint64_t)v4);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1000E5304((uint64_t)&v4[*(int *)(v1 + 52)]);
      swift_unknownObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v9 = (id)qword_100293A68;
    sub_1001EB530();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1000E93C8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000E94E8((uint64_t)&unk_100266A48, (uint64_t)sub_1000F2508, (uint64_t)sub_1000B0738, (uint64_t)&unk_100266A60);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E9458()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000E94E8((uint64_t)&unk_1002668B8, (uint64_t)sub_1000F2224, (uint64_t)sub_1000B0738, (uint64_t)&unk_1002668D0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E94E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v8 = (id)qword_100293A68;
  sub_1001EB530();

  id v9 = *(NSObject **)(v4 + 48);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = v4;
  void v13[4] = a3;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  _DWORD v13[2] = sub_100089470;
  v13[3] = a4;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v11);
  _Block_release(v11);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v11) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000E9680(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3(a1);
    return swift_release();
  }
  return result;
}

void sub_1000E96F4(uint64_t a1)
{
  uint64_t v3 = sub_1001EBA60();
  uint64_t v80 = *(void *)(v3 - 8);
  uint64_t v81 = v3;
  __chkstk_darwin(v3);
  id v78 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v79 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14(&qword_100291F40);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v76 = *((void *)v13 - 1);
  uint64_t v14 = *(void *)(v76 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v77 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v75 = (uint64_t)&v71 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v74 = (uint64_t)&v71 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = (char *)&v71 - v21;
  __chkstk_darwin(v20);
  NSString v24 = (char *)&v71 - v23;
  uint64_t v82 = v1;
  id v83 = [*(id *)(v1 + 56) createTransactionWithName:"com.apple.bookdatastored.CRDTModelCloudSyncController.handleCloudModelEvent"];
  sub_1000936F8(a1, (uint64_t)v12, &qword_100291F40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_10007DC14(&qword_100291F48);
    sub_1000935F8((uint64_t)&v12[*(int *)(v25 + 48)], (uint64_t)v24, (uint64_t *)&unk_100291CA0);
    sub_1000816A4((uint64_t)v12, (uint64_t *)&unk_100291CA0);
  }
  else
  {
    sub_1000935F8((uint64_t)v12, (uint64_t)v24, (uint64_t *)&unk_100291CA0);
  }
  if (v24[v13[11]] == 1)
  {
    uint64_t v26 = v82 + qword_1002A41C8;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v28 = *(void *)(v26 + 8);
    uint64_t v29 = (uint64_t)&v24[v13[13]];
    if ((sub_1000EA238(v29, 0xD000000000000015, 0x8000000100224590) & 1) == 0)
    {
      os_log_type_t v46 = sub_1001EC910();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      id v47 = qword_100293A68;
      sub_1000936F8((uint64_t)v24, (uint64_t)v22, (uint64_t *)&unk_100291CA0);
      if (os_log_type_enabled(v47, v46))
      {
        uint64_t v48 = v47;
        uint64_t v82 = Strong;
        unint64_t v49 = v24;
        unint64_t v50 = v48;
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        *(_DWORD *)uint64_t v51 = 136315138;
        uint64_t v52 = sub_100170DF8();
        uint64_t v84 = sub_1001A8090(v52, v53, &v85);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1000816A4((uint64_t)v22, (uint64_t *)&unk_100291CA0);
        _os_log_impl((void *)&_mh_execute_header, v50, v46, "handleCloudModelEvent - skip sync to local, no revision change, lastSource: %s", v51, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        NSString v24 = v49;
      }
      else
      {
        sub_1000816A4((uint64_t)v22, (uint64_t *)&unk_100291CA0);
      }
      goto LABEL_26;
    }
    uint64_t v30 = (uint64_t)&v24[v13[12]];
    uint64_t v31 = sub_10007DC14((uint64_t *)&unk_1002963C0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v9, 1, 2, v31);
    char v32 = sub_1001165C8(v30, (uint64_t)v9);
    sub_1000816A4((uint64_t)v9, (uint64_t *)&unk_100291BA0);
    os_log_type_t v33 = sub_1001EC910();
    if (v32)
    {
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      uint64_t v34 = qword_100293A68;
      uint64_t v35 = v74;
      sub_1000936F8((uint64_t)v24, v74, (uint64_t *)&unk_100291CA0);
      if (os_log_type_enabled(v34, v33))
      {
        uint64_t v36 = v34;
        uint64_t v82 = Strong;
        uint64_t v73 = v24;
        uint64_t v37 = v36;
        uint64_t v38 = v29;
        uint64_t v39 = v35;
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315138;
        uint64_t v41 = sub_100170DF8();
        uint64_t v84 = sub_1001A8090(v41, v42, &v85);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        uint64_t v43 = v39;
        uint64_t v29 = v38;
        sub_1000816A4(v43, (uint64_t *)&unk_100291CA0);
        _os_log_impl((void *)&_mh_execute_header, v37, v33, "handleCloudModelEvent - skip sync to local, lastSource: %s", v40, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        NSString v24 = v73;
        if (!v82) {
          goto LABEL_26;
        }
      }
      else
      {
        sub_1000816A4(v35, (uint64_t *)&unk_100291CA0);
        if (!Strong)
        {
LABEL_26:
          swift_unknownObjectRelease();
          sub_1000816A4((uint64_t)v24, (uint64_t *)&unk_100291CA0);

          return;
        }
      }
      swift_unknownObjectRetain();
      sub_1000E4E8C(v29, (uint64_t)v24);
      swift_unknownObjectRelease();
      goto LABEL_26;
    }
    uint64_t v74 = v28;
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v54 = qword_100293A68;
    uint64_t v55 = v75;
    sub_1000936F8((uint64_t)v24, v75, (uint64_t *)&unk_100291CA0);
    BOOL v56 = os_log_type_enabled(v54, v33);
    uint64_t v73 = v24;
    if (v56)
    {
      os_log_t v72 = v54;
      long long v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      *(_DWORD *)long long v57 = 136315138;
      uint64_t v58 = sub_100170DF8();
      uint64_t v84 = sub_1001A8090(v58, v59, &v85);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_1000816A4(v55, (uint64_t *)&unk_100291CA0);
      os_log_t v60 = v72;
      _os_log_impl((void *)&_mh_execute_header, v72, v33, "handleCloudModelEvent - sync to local, lastSource: %s", v57, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      NSString v24 = v73;
      swift_slowDealloc();
    }
    else
    {
      sub_1000816A4(v55, (uint64_t *)&unk_100291CA0);
    }
    uint64_t v61 = v79;
    sub_1000F2540((uint64_t)v24, v79, type metadata accessor for ReadingHistoryModel);
    sub_10007DC14((uint64_t *)&unk_1002933B0);
    sub_1001EC9E0();
    uint64_t v62 = v85;
    uint64_t v63 = v77;
    sub_1000936F8((uint64_t)v24, v77, (uint64_t *)&unk_100291CA0);
    unint64_t v64 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    uint64_t v65 = swift_allocObject();
    uint64_t v66 = v74;
    *(void *)(v65 + 16) = Strong;
    *(void *)(v65 + 24) = v66;
    sub_1000935F8(v63, v65 + v64, (uint64_t *)&unk_100291CA0);
    id v67 = v83;
    *(void *)(v65 + ((v14 + v64 + 7) & 0xFFFFFFFFFFFFFFF8)) = v83;
    swift_unknownObjectRetain();
    id v68 = v67;
    Swift::String v69 = v78;
    uint64_t v70 = sub_1001EBA50();
    __chkstk_darwin(v70);
    *(&v71 - 6) = v62;
    *(&v71 - 5) = v61;
    *((unsigned char *)&v71 - 32) = 1;
    *(&v71 - 3) = (uint64_t)sub_1000F2C4C;
    *(&v71 - 2) = v65;
    sub_10007DC14((uint64_t *)&unk_100293450);
    sub_1001EC9D0();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v69, v81);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
    sub_1000F2664(v61, type metadata accessor for ReadingHistoryModel);
    uint64_t v45 = (uint64_t)v73;
  }
  else
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v44 = (id)qword_100293A68;
    sub_1001EB530();

    uint64_t v45 = (uint64_t)v24;
  }
  sub_1000816A4(v45, (uint64_t *)&unk_100291CA0);
}

uint64_t sub_1000EA238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v49 = a2;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unint64_t v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v49 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (uint64_t *)((char *)&v49 - v11);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (uint64_t *)((char *)&v49 - v14);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v54 = v17;
  if (Strong)
  {
    sub_10013FFB0((uint64_t)v17);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v19 = type metadata accessor for CRDTModelRevisionInfo();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  }
  sub_1000936F8(a1, (uint64_t)v15, (uint64_t *)&unk_100291B90);
  uint64_t v20 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  if (v21((char *)v15, 1, v20) == 1)
  {
    sub_1000816A4((uint64_t)v15, (uint64_t *)&unk_100291B90);
    uint64_t v22 = 0;
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v22 = *v15;
    uint64_t v23 = v15[1];
    swift_bridgeObjectRetain();
    sub_1000F2664((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  }
  sub_1000936F8((uint64_t)v54, (uint64_t)v12, (uint64_t *)&unk_100291B90);
  unint64_t v53 = v21;
  if (v21((char *)v12, 1, v20) == 1)
  {
    sub_1000816A4((uint64_t)v12, (uint64_t *)&unk_100291B90);
    if (!v23) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  uint64_t v24 = *v12;
  uint64_t v25 = v12[1];
  swift_bridgeObjectRetain();
  sub_1000F2664((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  if (!v23)
  {
    if (!v25) {
      goto LABEL_22;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    int v28 = 1;
    goto LABEL_20;
  }
  if (!v25) {
    goto LABEL_19;
  }
  if (v22 != v24 || v23 != v25)
  {
    int v27 = sub_1001ED080();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v28 = v27 ^ 1;
LABEL_20:
    int v52 = v28;
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_22:
  int v52 = 0;
LABEL_23:
  uint64_t v29 = v49;
  LODWORD(v49) = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v30 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100215850;
  *(void *)(v31 + 56) = &type metadata for String;
  unint64_t v32 = sub_10007DC58();
  *(void *)(v31 + 64) = v32;
  uint64_t v33 = v51;
  *(void *)(v31 + 32) = v29;
  *(void *)(v31 + 40) = v33;
  *(void *)(v31 + 96) = &type metadata for Bool;
  *(void *)(v31 + 104) = &protocol witness table for Bool;
  *(unsigned char *)(v31 + 72) = v52 & 1;
  sub_1000936F8(a1, (uint64_t)v9, (uint64_t *)&unk_100291B90);
  unsigned int v34 = v53(v9, 1, v20);
  id v35 = v30;
  swift_bridgeObjectRetain();
  if (v34 == 1)
  {
    sub_1000816A4((uint64_t)v9, (uint64_t *)&unk_100291B90);
    uint64_t v36 = (uint64_t *)(v31 + 112);
    *(void *)(v31 + 136) = &type metadata for String;
    *(void *)(v31 + 144) = v32;
  }
  else
  {
    uint64_t v37 = CRDTModelRevisionInfo.description.getter();
    unint64_t v39 = v38;
    sub_1000F2664((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
    uint64_t v36 = (uint64_t *)(v31 + 112);
    *(void *)(v31 + 136) = &type metadata for String;
    *(void *)(v31 + 144) = v32;
    if (v39)
    {
      *uint64_t v36 = v37;
      uint64_t v40 = (uint64_t)v50;
      goto LABEL_30;
    }
  }
  uint64_t v40 = (uint64_t)v50;
  *uint64_t v36 = 7104878;
  unint64_t v39 = 0xE300000000000000;
LABEL_30:
  unint64_t v42 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v53;
  uint64_t v41 = (uint64_t)v54;
  *(void *)(v31 + 120) = v39;
  sub_1000936F8(v41, v40, (uint64_t *)&unk_100291B90);
  if (v42(v40, 1, v20) == 1)
  {
    sub_1000816A4(v40, (uint64_t *)&unk_100291B90);
    uint64_t v43 = (uint64_t *)(v31 + 152);
    *(void *)(v31 + 176) = &type metadata for String;
    *(void *)(v31 + 184) = v32;
LABEL_34:
    uint64_t v47 = (uint64_t)v54;
    uint64_t *v43 = 7104878;
    unint64_t v46 = 0xE300000000000000;
    goto LABEL_35;
  }
  uint64_t v44 = CRDTModelRevisionInfo.description.getter();
  unint64_t v46 = v45;
  sub_1000F2664(v40, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  uint64_t v43 = (uint64_t *)(v31 + 152);
  *(void *)(v31 + 176) = &type metadata for String;
  *(void *)(v31 + 184) = v32;
  if (!v46) {
    goto LABEL_34;
  }
  uint64_t *v43 = v44;
  uint64_t v47 = (uint64_t)v54;
LABEL_35:
  *(void *)(v31 + 160) = v46;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  sub_1000816A4(v47, (uint64_t *)&unk_100291B90);
  return v52 & 1;
}

uint64_t sub_1000EA7D0(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + qword_1002931D8;
  swift_beginAccess();
  sub_1000936F8(v9, (uint64_t)v4, (uint64_t *)&unk_100293160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_100293160);
  }
  sub_1000F25A8((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  sub_1000EAB38((uint64_t)v8, 0);
  return sub_1000F2664((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
}

uint64_t sub_1000EA984(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + qword_1002931D8;
  swift_beginAccess();
  sub_1000936F8(v9, (uint64_t)v4, (uint64_t *)&unk_100293160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_100293160);
  }
  sub_1000F25A8((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  sub_1000EB01C(v8, 0);
  return sub_1000F2664((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
}

uint64_t sub_1000EAB38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14((uint64_t *)&unk_1002933B0);
  sub_1001EC9E0();
  sub_1001EC9E0();
  swift_release();
  char v13 = sub_1001EC200();
  os_log_type_t v14 = sub_1001EC910();
  if (v13)
  {
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)qword_100293A68;
    if (os_log_type_enabled((os_log_t)qword_100293A68, v14))
    {
      uint64_t v16 = v15;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 67109120;
      LODWORD(aBlock[0]) = a2 & 1;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v16, v14, "checkLocalModelSyncVersion(%{BOOL}d): has delta", v17, 8u);
      swift_slowDealloc();
    }
    if (a2)
    {
      sub_1000F2540(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      uint64_t v18 = v3 + qword_1002931D8;
      swift_beginAccess();
      sub_1000AF3B4((uint64_t)v8, v18, (uint64_t *)&unk_100293160);
      swift_endAccess();
      if (!*(void *)(v3 + 40))
      {
        id v19 = [*(id *)(v3 + 56) createTransactionWithName:"com.apple.bookdatastored.CRDTModelCloudSyncController.localModelSyncVersion"];
        uint64_t v20 = *(void **)(v3 + 40);
        *(void *)(v3 + 40) = v19;
      }
      uint64_t v21 = (void **)(v3 + qword_1002931E0);
      swift_beginAccess();
      uint64_t v22 = *v21;
      if (!*v21)
      {
        sub_1000F2664((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
        return swift_endAccess();
      }
      swift_endAccess();
      aBlock[4] = MarkedAsFinishedMechanism.rawValue.getter;
      void aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_1002669E8;
      uint64_t v23 = _Block_copy(aBlock);
      id v24 = v22;
      [v24 signalWithCompletion:v23];
      _Block_release(v23);
    }
  }
  else
  {
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v25 = (void *)qword_100293A68;
    if (os_log_type_enabled((os_log_t)qword_100293A68, v14))
    {
      uint64_t v26 = v25;
      int v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v27 = 67109120;
      LODWORD(aBlock[0]) = a2 & 1;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v26, v14, "checkLocalModelSyncVersion(%{BOOL}d): no delta", v27, 8u);
      swift_slowDealloc();
    }
    sub_1000EB628();
  }
  return sub_1000F2664((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
}

uint64_t sub_1000EB01C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E7708();
  CRDTModelFileSyncManager.modelSyncVersion.getter();
  swift_release();
  char v13 = sub_1001EC200();
  os_log_type_t v14 = sub_1001EC910();
  if (v13)
  {
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)qword_100293A68;
    if (os_log_type_enabled((os_log_t)qword_100293A68, v14))
    {
      uint64_t v16 = v15;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 67109120;
      LODWORD(aBlock[0]) = a2 & 1;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v16, v14, "checkLocalModelSyncVersion(%{BOOL}d): has delta", v17, 8u);
      swift_slowDealloc();
    }
    if (a2)
    {
      sub_1000F2540(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      uint64_t v18 = v3 + qword_1002931D8;
      swift_beginAccess();
      sub_1000AF3B4((uint64_t)v8, v18, (uint64_t *)&unk_100293160);
      swift_endAccess();
      if (!*(void *)(v3 + 40))
      {
        id v19 = [*(id *)(v3 + 56) createTransactionWithName:"com.apple.bookdatastored.CRDTModelCloudSyncController.localModelSyncVersion"];
        uint64_t v20 = *(void **)(v3 + 40);
        *(void *)(v3 + 40) = v19;
      }
      uint64_t v21 = (void **)(v3 + qword_1002931E0);
      swift_beginAccess();
      uint64_t v22 = *v21;
      if (!*v21)
      {
        sub_1000F2664((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
        return swift_endAccess();
      }
      swift_endAccess();
      aBlock[4] = MarkedAsFinishedMechanism.rawValue.getter;
      void aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_100266830;
      uint64_t v23 = _Block_copy(aBlock);
      id v24 = v22;
      [v24 signalWithCompletion:v23];
      _Block_release(v23);
    }
  }
  else
  {
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v25 = (void *)qword_100293A68;
    if (os_log_type_enabled((os_log_t)qword_100293A68, v14))
    {
      uint64_t v26 = v25;
      int v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v27 = 67109120;
      LODWORD(aBlock[0]) = a2 & 1;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v26, v14, "checkLocalModelSyncVersion(%{BOOL}d): no delta", v27, 8u);
      swift_slowDealloc();
    }
    sub_1000EB628();
  }
  return sub_1000F2664((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
}

void sub_1000EB4AC(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1 + qword_1002931D8;
  swift_beginAccess();
  sub_1000936F8(v5, (uint64_t)v4, (uint64_t *)&unk_100293160);
  uint64_t v6 = type metadata accessor for CRDTModelSyncVersion();
  LODWORD(v5) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6);
  sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_100293160);
  if (v5 != 1)
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v7 = (id)qword_100293A68;
    sub_1001EB530();

    sub_1000EB628();
  }
}

void sub_1000EB628()
{
  uint64_t v1 = sub_10007DC14((uint64_t *)&unk_100293160);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = v0 + qword_1002931D8;
  swift_beginAccess();
  sub_1000AF3B4((uint64_t)v3, v5, (uint64_t *)&unk_100293160);
  swift_endAccess();
  uint64_t v6 = *(void **)(v0 + 40);
  if (v6)
  {
    [v6 endTransaction];
    id v7 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = 0;
  }
}

id *CRDTModelCloudSyncController.deinit()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_1000816A4((uint64_t)v0 + qword_1002931D8, (uint64_t *)&unk_100293160);

  sub_1000CA710((uint64_t)v0 + qword_1002A41C8);
  return v0;
}

uint64_t CRDTModelCloudSyncController.__deallocating_deinit()
{
  CRDTModelCloudSyncController.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1000EB98C(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  if (a1)
  {
    uint64_t v6 = sub_1001EC370();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  void v3[4] = v6;
  void v3[5] = v7;
  id v8 = a3;
  return _swift_task_switch(sub_1000EBA28, 0, 0);
}

uint64_t sub_1000EBA28()
{
  v0[6] = sub_1000DE584();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_1000EBAD0;
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  return ReadingHistoryBackupManager.backup(name:)(v3, v2);
}

uint64_t sub_1000EBAD0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000EBC48, 0, 0);
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 16);
    uint64_t v3 = *(void *)(v2 + 24);
    swift_release();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, void))(v3 + 16))(v3, 1, 0);
    _Block_release(*(const void **)(v2 + 24));
    uint64_t v5 = *(uint64_t (**)(void))(v2 + 8);
    return v5();
  }
}

uint64_t sub_1000EBC48()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1001EAE50();
  swift_errorRelease();
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v3);

  _Block_release(*(const void **)(v0 + 24));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000EBE64(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_1000EBEDC, 0, 0);
}

uint64_t sub_1000EBEDC()
{
  *(void *)(v0 + 32) = sub_1000DE584();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_1000EBF78;
  return sub_100145A94();
}

uint64_t sub_1000EBF78(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 4_Block_object_dispose(&STACK[0x3B0], 8) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1000EC158;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 56) = a1;
    uint64_t v5 = sub_1000EC0A8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000EC0A8()
{
  uint64_t v1 = *(void (***)(void, void, void, void))(v0 + 24);

  Class isa = sub_1001EC5D0().super.isa;
  ((void (**)(void, Class, uint64_t, void))v1)[2](v1, isa, 1, 0);

  _Block_release(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000EC158()
{
  uint64_t v1 = (void (**)(void, void, void, void))v0[3];
  uint64_t v2 = (void *)v0[2];
  swift_release();

  uint64_t v3 = (void *)sub_1001EAE50();
  swift_errorRelease();
  ((void (**)(void, void, void, void *))v1)[2](v1, 0, 0, v3);

  _Block_release(v1);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000EC384(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  void v3[4] = sub_1001EC370();
  void v3[5] = v5;
  id v6 = a3;
  return _swift_task_switch(sub_1000EC410, 0, 0);
}

uint64_t sub_1000EC410()
{
  v0[6] = sub_1000DE584();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  void *v1 = v0;
  v1[1] = sub_1000EBAD0;
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  return ReadingHistoryBackupManager.restore(name:)(v3, v2);
}

uint64_t sub_1000EC4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EAF60();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v19 - v12;
  id v14 = [self books];
  id v15 = [v14 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v17 = sub_100146DD0((uint64_t)v13, (uint64_t)v6, a1, a2);
  sub_1000816A4((uint64_t)v6, &qword_100295230);
  v16(v13, v7);
  return v17;
}

uint64_t sub_1000EC6CC(uint64_t a1)
{
  uint64_t v2 = sub_1001EBA60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = sub_1001EBA50();
    __chkstk_darwin(v8);
    *(&v9 - 2) = v7;
    *(&v9 - 1) = a1;
    sub_1001EC9D0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000EC834(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v122 = a1;
  uint64_t v3 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v3 - 8);
  uint64_t v111 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v110 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v114 = (uint64_t)&v97 - v8;
  uint64_t v9 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v108 = (uint64_t)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v113 = (uint64_t)&v97 - v12;
  uint64_t v13 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v109 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v97 - v16;
  uint64_t v18 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10007DC14((uint64_t *)&unk_1002933E0);
  uint64_t v22 = __chkstk_darwin(v123);
  uint64_t v105 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v99 = (uint64_t)&v97 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v112 = (uint64_t)&v97 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v98 = (uint64_t)&v97 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v97 = (uint64_t)&v97 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  unsigned int v34 = (char *)&v97 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v97 - v35;
  uint64_t v37 = v1 + *(void *)(*(void *)v1 + 192);
  swift_beginAccess();
  unint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v115 = v37;
  uint64_t v104 = v19 + 16;
  os_log_t v103 = v38;
  v38(v21, v37, v18);
  uint64_t v39 = sub_1000815A4(&qword_1002933F0, (uint64_t *)&unk_1002933E0);
  sub_1001EC0D0();
  uint64_t v107 = v19;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v106 = v21;
  uint64_t v101 = v19 + 8;
  os_log_t v100 = v40;
  v40(v21, v18);
  uint64_t v117 = v18;
  uint64_t v102 = v39;
  sub_1001EC0D0();
  swift_retain();
  sub_1001EC9E0();
  uint64_t v41 = (uint64_t)v17;
  swift_release();
  uint64_t v120 = (int *)v13;
  int v116 = v17[*(int *)(v13 + 44)];
  sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_100291CA0);
  sub_1000815A4(&qword_100293408, (uint64_t *)&unk_1002933E0);
  char v42 = sub_1001EBC10();
  uint64_t v123 = v2;
  uint64_t v121 = v17;
  int v118 = v36;
  BOOL v119 = v34;
  if (v42)
  {
    uint64_t v122 = 0;
    uint64_t v43 = v97;
    sub_1000936F8((uint64_t)v34, v97, (uint64_t *)&unk_1002933E0);
    uint64_t v44 = v98;
    sub_1000936F8((uint64_t)v36, v98, (uint64_t *)&unk_1002933E0);
    unint64_t v45 = sub_1001EB540();
    os_log_type_t v46 = sub_1001EC910();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      v125[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315394;
      unint64_t v48 = ReadingHistoryModel.description.getter();
      uint64_t v124 = sub_1001A8090(v48, v49, v125);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_1000816A4(v43, (uint64_t *)&unk_1002933E0);
      *(_WORD *)(v47 + 12) = 2080;
      unint64_t v50 = ReadingHistoryModel.description.getter();
      uint64_t v124 = sub_1001A8090(v50, v51, v125);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      uint64_t v41 = (uint64_t)v121;
      sub_1000816A4(v44, (uint64_t *)&unk_1002933E0);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "CRDTModelFileSyncManager q_handle -- incoming=%s and existing=%s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1000816A4(v43, (uint64_t *)&unk_1002933E0);
      uint64_t v52 = sub_1000816A4(v44, (uint64_t *)&unk_1002933E0);
    }
    uint64_t v62 = v117;
    uint64_t v63 = v115;
    __chkstk_darwin(v52);
    *(&v97 - 2) = (uint64_t)v34;
    swift_beginAccess();
    uint64_t v64 = v122;
    sub_1001EC0A0();
    swift_endAccess();
    uint64_t v65 = v113;
    sub_1000F2540((uint64_t)v34, v113, type metadata accessor for ReadingHistoryModel);
    swift_retain();
    uint64_t v66 = v120;
    sub_1001EC9E0();
    uint64_t v122 = v64;
    swift_release();
    int v67 = *(unsigned __int8 *)(v41 + v66[11]);
    sub_1000816A4(v41, (uint64_t *)&unk_100291CA0);
    if (v67 == 1)
    {
      uint64_t v68 = v114;
      sub_1000F2540(v65, v114, type metadata accessor for ReadingHistoryModel);
      uint64_t v69 = sub_10007DC14((uint64_t *)&unk_1002963C0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 2, v69);
    }
    else
    {
      uint64_t v72 = sub_10007DC14((uint64_t *)&unk_1002963C0);
      uint64_t v68 = v114;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v114, 2, 2, v72);
    }
    uint64_t v73 = v106;
    v103(v106, v63, v62);
    uint64_t v74 = (uint64_t)v105;
    sub_1001EC0D0();
    v100(v73, v62);
    uint64_t v75 = v108;
    sub_1000F2540(v74, v108, type metadata accessor for ReadingHistoryModel);
    sub_1000816A4(v74, (uint64_t *)&unk_1002933E0);
    uint64_t v76 = v110;
    sub_1000936F8(v68, v110, (uint64_t *)&unk_100291BA0);
    uint64_t v77 = type metadata accessor for CRDTModelRevisionInfo();
    id v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56);
    uint64_t v79 = (uint64_t)v111;
    v78(v111, 1, 1, v77);
    uint64_t v80 = (uint64_t)v109;
    uint64_t v81 = (uint64_t)&v109[v66[13]];
    v78((char *)v81, 1, 1, v77);
    sub_1000F25A8(v75, v80, type metadata accessor for ReadingHistoryModel);
    *(unsigned char *)(v80 + v66[11]) = 1;
    sub_1000935F8(v76, v80 + v66[12], (uint64_t *)&unk_100291BA0);
    sub_1000AF3B4(v79, v81, (uint64_t *)&unk_100291B90);
    uint64_t v82 = (uint64_t)v121;
    sub_1000935F8(v80, (uint64_t)v121, (uint64_t *)&unk_100291CA0);
    sub_1001817A0(v82, 0x656C646E61685F71, 0xE800000000000000);
    sub_1000816A4(v82, (uint64_t *)&unk_100291CA0);
    sub_100181FD8();
    sub_1000816A4(v114, (uint64_t *)&unk_100291BA0);
    sub_1000F2664(v113, type metadata accessor for ReadingHistoryModel);
    if (v116) {
      goto LABEL_20;
    }
    swift_retain();
    sub_1001EC9E0();
    swift_release();
    int v83 = *(unsigned __int8 *)(v82 + v66[11]);
    sub_1000816A4(v82, (uint64_t *)&unk_100291CA0);
    if (v83 != 1) {
      goto LABEL_20;
    }
LABEL_19:
    sub_1000EF0CC();
    goto LABEL_20;
  }
  sub_1000936F8((uint64_t)v34, v112, (uint64_t *)&unk_1002933E0);
  uint64_t v53 = v99;
  sub_1000936F8((uint64_t)v36, v99, (uint64_t *)&unk_1002933E0);
  uint64_t v54 = sub_1001EB540();
  os_log_type_t v55 = sub_1001EC910();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    v125[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 136315394;
    uint64_t v57 = v112;
    unint64_t v58 = ReadingHistoryModel.description.getter();
    uint64_t v124 = sub_1001A8090(v58, v59, v125);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    sub_1000816A4(v57, (uint64_t *)&unk_1002933E0);
    *(_WORD *)(v56 + 12) = 2080;
    unint64_t v60 = ReadingHistoryModel.description.getter();
    uint64_t v124 = sub_1001A8090(v60, v61, v125);
    uint64_t v41 = (uint64_t)v121;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    sub_1000816A4(v53, (uint64_t *)&unk_1002933E0);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "CRDTModelFileSyncManager q_handle -- no delta, incoming=%s and existing=%s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_1000816A4(v112, (uint64_t *)&unk_1002933E0);
    sub_1000816A4(v53, (uint64_t *)&unk_1002933E0);
  }
  uint64_t v70 = v120;
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  char v71 = *(unsigned char *)(v41 + v70[11]);
  sub_1000816A4(v41, (uint64_t *)&unk_100291CA0);
  if (v71)
  {
    uint64_t v120 = 0;
  }
  else
  {
    swift_retain();
    uint64_t v84 = (uint64_t)v109;
    sub_1001EC9E0();
    uint64_t v120 = 0;
    swift_release();
    uint64_t v85 = v108;
    sub_1000F2540(v84, v108, type metadata accessor for ReadingHistoryModel);
    sub_1000816A4(v84, (uint64_t *)&unk_100291CA0);
    uint64_t v86 = sub_10007DC14((uint64_t *)&unk_1002963C0);
    uint64_t v87 = v110;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v110, 2, 2, v86);
    uint64_t v88 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56);
    uint64_t v90 = (uint64_t)v111;
    v89(v111, 1, 1, v88);
    uint64_t v91 = v84 + v70[13];
    v89((char *)v91, 1, 1, v88);
    sub_1000F25A8(v85, v84, type metadata accessor for ReadingHistoryModel);
    *(unsigned char *)(v84 + v70[11]) = 1;
    sub_1000935F8(v87, v84 + v70[12], (uint64_t *)&unk_100291BA0);
    uint64_t v92 = v91;
    uint64_t v41 = (uint64_t)v121;
    sub_1000AF3B4(v90, v92, (uint64_t *)&unk_100291B90);
    sub_1000935F8(v84, v41, (uint64_t *)&unk_100291CA0);
    sub_1001817A0(v41, 0xD000000000000012, 0x80000001002243A0);
    sub_1000816A4(v41, (uint64_t *)&unk_100291CA0);
  }
  uint64_t v93 = v117;
  uint64_t v94 = v115;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 24))(v94, v122, v93);
  swift_endAccess();
  sub_100181FD8();
  if ((v116 & 1) == 0)
  {
    swift_retain();
    sub_1001EC9E0();
    swift_release();
    char v95 = *(unsigned char *)(v41 + v70[11]);
    sub_1000816A4(v41, (uint64_t *)&unk_100291CA0);
    if (v95) {
      goto LABEL_19;
    }
  }
LABEL_20:
  sub_1000816A4((uint64_t)v118, (uint64_t *)&unk_1002933E0);
  return sub_1000816A4((uint64_t)v119, (uint64_t *)&unk_1002933E0);
}

uint64_t sub_1000ED844()
{
  sub_1000815A4(&qword_1002933F0, (uint64_t *)&unk_1002933E0);
  uint64_t v0 = (uint64_t (*)(uint64_t *, void))sub_1001EC090();
  sub_10007DC14((uint64_t *)&unk_1002933E0);
  sub_1000815A4(&qword_100293408, (uint64_t *)&unk_1002933E0);
  sub_1001EBBE0();
  return v0(&v2, 0);
}

void sub_1000ED928(void (*a1)(uint64_t, uint64_t), int a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v123 = a3;
  uint64_t v124 = a4;
  int v117 = a2;
  uint64_t v128 = a1;
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v111 = (uint64_t)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1001EBF80();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v114 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v113 = sub_10007DC14((uint64_t *)&unk_1002933E0);
  uint64_t v8 = __chkstk_darwin(v113);
  uint64_t v120 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v125 = (uint64_t)&v105 - v10;
  uint64_t v129 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v126 = *(void *)(v129 - 8);
  uint64_t v11 = __chkstk_darwin(v129);
  uint64_t v13 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v105 - v14;
  uint64_t v16 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v112 = (char *)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v119 = (uint64_t)&v105 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v105 - v24;
  id v122 = [v4[8] createTransactionWithName:"com.apple.ibooks.CRDTModelFileSyncManager.q_sync"];
  swift_retain();
  uint64_t v118 = v16;
  uint64_t v26 = (uint64_t)v130;
  sub_1001EC9E0();
  swift_release();
  sub_1000F2540((uint64_t)v18, (uint64_t)v25, type metadata accessor for ReadingHistoryModel);
  uint64_t v121 = v18;
  uint64_t v27 = (uint64_t)v128;
  sub_1000816A4((uint64_t)v18, (uint64_t *)&unk_100291CA0);
  sub_1000F04DC((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  char v28 = sub_1001EBFE0();
  sub_1000F2664((uint64_t)v25, type metadata accessor for ReadingHistoryModel);
  uint64_t v29 = *((void *)*v4 + 25);
  uint64_t v130 = v4;
  uint64_t v30 = (char *)v4 + v29;
  if (v28)
  {
    uint64_t v110 = v19;
    uint64_t v112 = v25;
    uint64_t v108 = v13;
    unint64_t v127 = v15;
    uint64_t v31 = v119;
    sub_1000F2540(v27, v119, type metadata accessor for ReadingHistoryModel);
    swift_retain_n();
    uint64_t v32 = sub_1001EB540();
    os_log_type_t v33 = sub_1001EC910();
    int v34 = v33;
    BOOL v35 = os_log_type_enabled(v32, v33);
    unint64_t v109 = v30;
    if (v35)
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      v133[0] = v107;
      *(_DWORD *)uint64_t v36 = 67109634;
      LODWORD(v132) = v117 & 1;
      sub_1001ECBC0();
      *(_WORD *)(v36 + _Block_object_dispose(&STACK[0x3B0], 8) = 2080;
      unint64_t v37 = ReadingHistoryModel.description.getter();
      uint64_t v132 = sub_1001A8090(v37, v38, v133);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_1000F2664(v31, type metadata accessor for ReadingHistoryModel);
      *(_WORD *)(v36 + 1_Block_object_dispose(&STACK[0x3B0], 8) = 2080;
      uint64_t v105 = v36 + 20;
      LODWORD(v106) = v34;
      swift_retain();
      uint64_t v39 = (uint64_t)v121;
      sub_1001EC9E0();
      uint64_t v119 = v26;
      swift_release();
      uint64_t v40 = (uint64_t)v112;
      sub_1000F2540(v39, (uint64_t)v112, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v39, (uint64_t *)&unk_100291CA0);
      unint64_t v41 = ReadingHistoryModel.description.getter();
      unint64_t v43 = v42;
      sub_1000F2664(v40, type metadata accessor for ReadingHistoryModel);
      uint64_t v132 = sub_1001A8090(v41, v43, v133);
      uint64_t v27 = (uint64_t)v128;
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v106, "CRDTModelFileSyncManager q_sync: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v36, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v44 = v129;
      unint64_t v45 = v127;
    }
    else
    {

      sub_1000F2664(v31, type metadata accessor for ReadingHistoryModel);
      swift_release_n();
      uint64_t v44 = v129;
      unint64_t v45 = v127;
      uint64_t v119 = v26;
      uint64_t v40 = (uint64_t)v112;
    }
    unint64_t v59 = (char *)v130 + *((void *)*v130 + 24);
    swift_beginAccess();
    unint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16);
    uint64_t v105 = (uint64_t)v59;
    uint64_t v107 = v126 + 16;
    uint64_t v106 = v60;
    v60((uint64_t)v45, (uint64_t)v59, v44);
    sub_1000F2540(v27, v40, type metadata accessor for ReadingHistoryModel);
    sub_10007DC14(&qword_100291FC0);
    sub_1000815A4(&qword_100291240, &qword_100291FC0);
    sub_1000815A4(&qword_100291248, &qword_100291FC0);
    uint64_t v61 = (uint64_t)v120;
    sub_1001EBF00();
    uint64_t v62 = v110;
    sub_1001EB0C0();
    sub_1000F04DC(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001EBF00();
    *(void *)(v61 + *(int *)(v62 + 24)) = &_swiftEmptyDictionarySingleton;
    *(void *)(v61 + *(int *)(v113 + 52)) = &_swiftEmptyDictionarySingleton;
    sub_1000AF6A0(v40, v61);
    uint64_t v63 = v125;
    uint64_t v64 = sub_1000935F8(v61, v125, (uint64_t *)&unk_1002933E0);
    __chkstk_darwin(v64);
    *(&v105 - 2) = v63;
    uint64_t v65 = v119;
    sub_1001EC0A0();
    uint64_t v66 = v115;
    int v67 = v114;
    uint64_t v68 = v116;
    (*(void (**)(char *, void, uint64_t))(v115 + 104))(v114, enum case for CRCodableVersion.version3(_:), v116);
    sub_1000815A4(&qword_1002933F0, (uint64_t *)&unk_1002933E0);
    uint64_t v69 = sub_1001EC0C0();
    if (v65)
    {
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
      char v71 = sub_1001EB540();
      os_log_type_t v72 = sub_1001EC8F0();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        uint64_t v134 = swift_slowAlloc();
        *(_DWORD *)uint64_t v73 = 136315138;
        uint64_t v130 = (id *)(v73 + 4);
        uint64_t v74 = v127;
        swift_beginAccess();
        uint64_t v75 = (uint64_t)v120;
        sub_1001EC0D0();
        unint64_t v76 = ReadingHistoryModel.description.getter();
        unint64_t v78 = v77;
        sub_1000816A4(v75, (uint64_t *)&unk_1002933E0);
        uint64_t v131 = sub_1001A8090(v76, v78, &v134);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "CRDTModelFileSyncManager q_sync: couldn't serialize model to sync: %s", v73, 0xCu);
        swift_arrayDestroy();
        uint64_t v79 = v129;
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v81 = v125;
        uint64_t v80 = v126;
      }
      else
      {

        uint64_t v81 = v125;
        uint64_t v80 = v126;
        uint64_t v74 = v127;
        uint64_t v79 = v129;
      }
      v123();
      sub_10007DC14((uint64_t *)&unk_100293460);
      sub_1000815A4((unint64_t *)&unk_1002963B0, (uint64_t *)&unk_100293460);
      swift_allocError();
      *uint64_t v86 = 1;
      swift_willThrow();

      sub_1000816A4(v81, (uint64_t *)&unk_1002933E0);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v74, v79);
    }
    else
    {
      unint64_t v113 = v70;
      uint64_t v119 = v69;
      uint64_t v83 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
      uint64_t v84 = v111;
      if (v117)
      {
        sub_1000F2540(v83, v111, type metadata accessor for ReadingHistoryModel);
        uint64_t v85 = sub_10007DC14((uint64_t *)&unk_1002963C0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v84, 0, 2, v85);
      }
      else
      {
        uint64_t v87 = sub_10007DC14((uint64_t *)&unk_1002963C0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v84, 1, 2, v87);
      }
      uint64_t v88 = v130;
      swift_retain();
      uint64_t v89 = (uint64_t)v121;
      uint64_t v90 = v118;
      sub_1001EC9E0();
      swift_release();
      uint64_t v91 = (uint64_t)v120;
      uint64_t v92 = v129;
      uint64_t v93 = v127;
      sub_1001EC0D0();
      uint64_t v94 = (uint64_t)v112;
      sub_1000F2540(v91, (uint64_t)v112, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v91, (uint64_t *)&unk_1002933E0);
      sub_1000C0094(v94, v89);
      sub_1000F2D3C(v84, v89 + *(int *)(v90 + 48));
      sub_1000F2664(v94, type metadata accessor for ReadingHistoryModel);
      sub_1001817A0(v89, 0x636E79735F71, 0xE600000000000000);
      uint64_t v95 = (uint64_t)v108;
      uint64_t v96 = v106;
      v106((uint64_t)v108, (uint64_t)v93, v92);
      uint64_t v97 = v105;
      swift_beginAccess();
      uint64_t v98 = v126;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 24))(v97, v95, v92);
      swift_endAccess();
      sub_100181FD8();
      uint64_t v128 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      v128(v95, v92);
      v96(v95, v97, v92);
      uint64_t v99 = (void *)swift_allocObject();
      os_log_t v100 = v123;
      uint64_t v101 = v124;
      uint64_t v99[2] = v88;
      v99[3] = v100;
      id v102 = v122;
      v99[4] = v101;
      v99[5] = v102;
      swift_retain();
      swift_retain();
      id v103 = v102;
      sub_10017E69C(v95, (uint64_t)sub_1000F2DEC, (uint64_t)v99);
      swift_release();
      sub_100081714(v119, v113);

      uint64_t v104 = (void (*)(char *, uint64_t))v128;
      v128(v95, v92);
      sub_1000816A4((uint64_t)v121, (uint64_t *)&unk_100291CA0);
      sub_1000816A4(v111, (uint64_t *)&unk_100291BA0);
      sub_1000816A4(v125, (uint64_t *)&unk_1002933E0);
      v104(v127, v92);
    }
  }
  else
  {
    uint64_t v119 = v26;
    uint64_t v46 = (uint64_t)v112;
    sub_1000F2540(v27, (uint64_t)v112, type metadata accessor for ReadingHistoryModel);
    swift_retain_n();
    uint64_t v47 = sub_1001EB540();
    os_log_type_t v48 = sub_1001EC910();
    int v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v50 = (uint64_t)v25;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v129 = swift_slowAlloc();
      v133[0] = v129;
      *(_DWORD *)uint64_t v51 = 67109634;
      LODWORD(v132) = v117 & 1;
      sub_1001ECBC0();
      *(_WORD *)(v51 + _Block_object_dispose(&STACK[0x3B0], 8) = 2080;
      LODWORD(v12_Block_object_dispose(&STACK[0x3B0], 8) = v49;
      unint64_t v52 = ReadingHistoryModel.description.getter();
      uint64_t v132 = sub_1001A8090(v52, v53, v133);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_1000F2664(v46, type metadata accessor for ReadingHistoryModel);
      *(_WORD *)(v51 + 1_Block_object_dispose(&STACK[0x3B0], 8) = 2080;
      unint64_t v127 = (char *)(v51 + 20);
      swift_retain();
      uint64_t v54 = (uint64_t)v121;
      sub_1001EC9E0();
      swift_release();
      sub_1000F2540(v54, v50, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v54, (uint64_t *)&unk_100291CA0);
      unint64_t v55 = ReadingHistoryModel.description.getter();
      unint64_t v57 = v56;
      sub_1000F2664(v50, type metadata accessor for ReadingHistoryModel);
      uint64_t v132 = sub_1001A8090(v55, v57, v133);
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v128, "CRDTModelFileSyncManager q_sync -- no delta: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v51, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1000F2664(v46, type metadata accessor for ReadingHistoryModel);
      uint64_t v58 = swift_release_n();
    }
    ((void (*)(uint64_t))v123)(v58);
    sub_10007DC14((uint64_t *)&unk_100293460);
    sub_1000815A4((unint64_t *)&unk_1002963B0, (uint64_t *)&unk_100293460);
    swift_allocError();
    *uint64_t v82 = 0;
    swift_willThrow();
  }
}

uint64_t sub_1000EEBD4(uint64_t a1, void (*a2)(uint64_t, uint64_t), char a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v16 = a5;
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  int v12 = v11[*(int *)(v9 + 44)];
  sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_100291CA0);
  int v13 = a3 & 1;
  if (v12 == 1)
  {
    sub_1000ED928(a2, v13, a4, v16);
    if (v5)
    {
      swift_errorRelease();
      return 1;
    }
  }
  else
  {
    sub_1000EED2C((uint64_t)a2, v13, (uint64_t)a4, v16);
  }
  return 0;
}

uint64_t sub_1000EED2C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v27 = a3;
  uint64_t v9 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  int v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = sub_1001EB540();
  os_log_type_t v14 = sub_1001EC910();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "CRDTModelFileSyncManager q_enqueuePendingSync", v15, 2u);
    swift_slowDealloc();
  }

  sub_1000F2540(a1, (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ReadingHistoryModel);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = v16 + v11;
  uint64_t v18 = swift_allocObject();
  unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + v18;
  *(void *)(v18 + 16) = v5;
  sub_1000F25A8((uint64_t)v12, v18 + v16, type metadata accessor for ReadingHistoryModel);
  *(unsigned char *)(v18 + v17) = a2 & 1;
  *(void *)(v19 + _Block_object_dispose(&STACK[0x3B0], 8) = v27;
  *(void *)(v19 + 16) = a4;
  uint64_t v20 = (void *)(v5 + 72);
  swift_beginAccess();
  uint64_t v21 = *(void **)(v5 + 72);
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v5 + 72) = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v21 = sub_1000A6AFC(0, v21[2] + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  unint64_t v24 = v21[2];
  unint64_t v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    uint64_t v21 = sub_1000A6AFC((void *)(v23 > 1), v24 + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  v21[2] = v24 + 1;
  uint64_t v25 = &v21[2 * v24];
  void v25[4] = sub_1000F2F54;
  v25[5] = v18;
  return swift_endAccess();
}

void sub_1000EEFA8(uint64_t a1, void (*a2)(uint64_t, uint64_t), char a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v9 = sub_1001EB540();
  os_log_type_t v10 = sub_1001EC910();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "CRDTModelFileSyncManager q_enqueuePendingSync -- about to run", v11, 2u);
    swift_slowDealloc();
  }

  sub_1000ED928(a2, a3 & 1, a4, a5);
}

uint64_t sub_1000EF0CC()
{
  uint64_t v19 = sub_1001EBAA0();
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001EBA60();
  uint64_t v4 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 72);
  *(void *)(v0 + 72) = _swiftEmptyArrayStorage;
  uint64_t v17 = v7;
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (long long *)(v17 + 32);
    os_log_type_t v10 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v11 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      uint64_t v12 = swift_allocObject();
      long long v13 = *v9++;
      *(_OWORD *)(v12 + 16) = v13;
      swift_retain();
      sub_1001EBA50();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_1000F26FC;
      *(void *)(v14 + 24) = v12;
      aBlock[4] = sub_1000AC2B4;
      void aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_100266B00;
      uint64_t v15 = _Block_copy(aBlock);
      swift_retain();
      sub_1001EBA80();
      sub_1001EC9F0();
      _Block_release(v15);
      swift_release();
      (*v10)(v3, v19);
      (*v11)(v6, v18);
      swift_release();
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

void sub_1000EF388(char a1)
{
  uint64_t v2 = v1;
  [*(id *)(v1 + qword_100296A08) setEnableCloudSync:a1 & 1];
  uint64_t v4 = *(void **)(v1 + qword_100296A10);
  id v5 = [v4 privateCloudDatabaseController];
  uint64_t v6 = sub_1001EB540();
  os_log_type_t v7 = sub_1001EC910();
  BOOL v8 = os_log_type_enabled(v6, v7);
  if (a1)
  {
    if (v8)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "CRDTModelCloudDataManager updateWithSyncEnabled: enabled sync to CK", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = *(void *)(v2 + qword_1002969F8);
    type metadata accessor for ReadingHistoryModel(0);
    sub_10007DC14((uint64_t *)&unk_1002915A0);
    uint64_t v11 = sub_1001EC3D0();
    unint64_t v13 = v12;
    sub_1001EC530();
    uint64_t v14 = sub_1001EC3E0();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    sub_100152E34(15, v14, v16, v11, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v17 = sub_1001EC340();
    swift_bridgeObjectRelease();
    [v5 addObserver:v10 recordType:v17];

    id v18 = [v4 transactionManager];
    uint64_t v19 = sub_1001EC3D0();
    unint64_t v21 = v20;
    sub_1001EC530();
    uint64_t v22 = sub_1001EC3E0();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    sub_100152E34(15, v22, v24, v19, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v25 = sub_1001EC340();
    swift_bridgeObjectRelease();
    [v18 signalSyncToCKTransactionForEntityName:v25 syncManager:v10];
  }
  else
  {
    if (v8)
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "CRDTModelCloudDataManager updateWithSyncEnabled: disabled sync to CK", v26, 2u);
      swift_slowDealloc();
    }

    uint64_t v27 = *(void *)(v2 + qword_1002969F8);
    type metadata accessor for ReadingHistoryModel(0);
    sub_10007DC14((uint64_t *)&unk_1002915A0);
    uint64_t v28 = sub_1001EC3D0();
    unint64_t v30 = v29;
    sub_1001EC530();
    uint64_t v31 = sub_1001EC3E0();
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    sub_100152E34(15, v31, v33, v28, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v25 = sub_1001EC340();
    swift_bridgeObjectRelease();
    [v5 removeObserver:v27 recordType:v25];
  }
}

uint64_t sub_1000EF744()
{
  return sub_1000E14C8(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1000EF750(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000EF760()
{
  return swift_release();
}

uint64_t sub_1000EF76C()
{
  return sub_1000E16D0(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1000EF778()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1000EF864()
{
  uint64_t v1 = *(void *)(sub_1001EB0C0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1000E1838(v3, v0 + v2, v4);
}

uint64_t sub_1000EF8FC()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000EF93C()
{
  return sub_1000E1A4C(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1000EF948()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1000EFA3C()
{
  uint64_t v1 = *(void *)(sub_1001EB0C0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + v3);
  os_log_type_t v7 = (uint64_t *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  return sub_1000E3268(v4, v5, v6, v8, v9);
}

uint64_t sub_1000EFADC()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = (v5 + v3 + v7) & ~v3;
  unint64_t v9 = (v5 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v10 = v0 + v4;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);
  v11(v0 + v7, v1);
  v11(v0 + v8, v1);
  swift_release();
  return _swift_deallocObject(v0, v9 + 16, v6);
}

void sub_1000EFC0C()
{
  uint64_t v1 = *(void *)(sub_1001EB0C0() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  uint64_t v6 = (v4 + v2 + v5) & ~v2;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v6;
  uint64_t v9 = v0 + ((v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void (**)(id, uint64_t))v9;
  uint64_t v11 = *(void *)(v9 + 8);
  sub_1000E3844(v7, v0 + v3, v0 + v5, v8, v10, v11);
}

uint64_t sub_1000EFCBC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100081668(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EFD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a1;
  uint64_t v15 = sub_1001EC9C0();
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EC990();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1001EBAA0();
  __chkstk_darwin(v7 - 8);
  *(void *)(a2 + 32) = 0;
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA90();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000F04DC((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v15);
  *(void *)(a2 + 40) = sub_1001ECA00();
  *(unsigned char *)(a2 + 4_Block_object_dispose(&STACK[0x3B0], 8) = 1;
  *(void *)(a2 + 64) = 0;
  sub_1001EB550();
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = &off_100265140;
  *(void *)(a2 + 56) = 0x403E000000000000;
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  id v9 = objc_allocWithZone((Class)BUCoalescingCallBlock);
  aBlock[4] = sub_1000CB110;
  void aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000916AC;
  void aBlock[3] = &unk_100266B50;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  NSString v11 = sub_1001EC340();
  id v12 = [v9 initWithNotifyBlock:v10 blockDescription:v11];

  _Block_release(v10);
  swift_release();
  swift_release();
  [v12 setCoalescingDelay:60.0];
  unint64_t v13 = *(void **)(a2 + 32);
  *(void *)(a2 + 32) = v12;

  return a2;
}

uint64_t sub_1000F00FC()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F013C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F014C()
{
  uint64_t v1 = *(void *)(sub_10007DC14((uint64_t *)&unk_100293160) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = (id *)(v0 + v3);
  uint64_t v6 = type metadata accessor for CRDTModelSyncVersion();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {

    uint64_t v7 = (char *)v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_1001EC210();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_release();
  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1000F02AC()
{
  uint64_t v1 = *(void *)(sub_10007DC14((uint64_t *)&unk_100293160) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(char **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(uint64_t (**)(void))v6;
  uint64_t v8 = *(void *)(v6 + 8);
  return sub_1000E251C(v3, v4, v5, v7, v8);
}

uint64_t sub_1000F0344()
{
  uint64_t v1 = (int *)(type metadata accessor for CRDTModelSyncVersion() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = v2 | 7;
  uint64_t v5 = *(void *)(*(void *)v1 + 64) + v3 + 1;
  swift_release();
  uint64_t v6 = (id *)(v0 + v3);

  uint64_t v7 = (char *)v6 + v1[7];
  uint64_t v8 = sub_1001EC210();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1000F0444()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRDTModelSyncVersion() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1000EB01C(v0 + v2, *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64)));
}

uint64_t sub_1000F04CC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F04DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F0524(void (*a1)(uint64_t))
{
  return sub_1000E8AD4(a1);
}

uint64_t type metadata accessor for ReadingHistoryService()
{
  return self;
}

void sub_1000F0558()
{
  sub_1000F0634();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t type metadata accessor for CRDTModelCloudSyncController()
{
  return swift_getGenericMetadata();
}

void sub_1000F0634()
{
  if (!qword_100293310)
  {
    type metadata accessor for CRDTModelSyncVersion();
    unint64_t v0 = sub_1001ECB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100293310);
    }
  }
}

uint64_t sub_1000F0690()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_100293320 + dword_100293320);
  return v6(v2, v3, v4);
}

uint64_t sub_1000F074C()
{
  return sub_1000F2784((void (*)(void))&__Block_release);
}

uint64_t sub_1000F0764()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_100293330 + dword_100293330);
  return v5(v2, v3);
}

uint64_t sub_1000F081C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_100293350 + dword_100293350);
  return v6(v2, v3, v4);
}

uint64_t sub_1000F08D8()
{
  return sub_1000F2784((void (*)(void))&__Block_release);
}

uint64_t sub_1000F08F0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_100293370 + dword_100293370);
  return v5(v2, v3);
}

uint64_t sub_1000F09A4()
{
  return sub_1000F2784((void (*)(void))&__Block_release);
}

uint64_t sub_1000F09BC()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_100093200;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_100293390 + dword_100293390);
  return v5(v2, v3);
}

uint64_t sub_1000F0A70()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000F0AB0()
{
  uint64_t v1 = *(void **)(v0 + 24);
  ReadingHistoryDataStore.handleSignificantDateChange()();
  sub_1000E0814();
  return [v1 endTransaction];
}

id sub_1000F0B0C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  sub_1000E0814();
  return [v1 endTransaction];
}

uint64_t sub_1000F0B50()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F0B88()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1000F0BA4(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

void sub_1000F0BBC()
{
  sub_1000EB4AC(v0);
}

uint64_t sub_1000F0BD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F0BE8@<X0>(void *a1@<X8>)
{
  return sub_1000E7900(v1, a1);
}

uint64_t sub_1000F0C04(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v22 = a2;
  id v24 = a1;
  uint64_t v23 = sub_1001EAF60();
  uint64_t v6 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v21 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_1001ECD20(20);
  swift_bridgeObjectRelease();
  unint64_t v25 = 0xD000000000000012;
  unint64_t v26 = 0x80000001002214C0;
  v27._countAndFlagsBits = 0xD00000000000001CLL;
  v27._object = (void *)0x8000000100224330;
  sub_1001EC490(v27);
  sub_1001EB550();
  uint64_t v13 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v22, v9);
  uint64_t v14 = a3;
  uint64_t v15 = a3;
  uint64_t v16 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v15, v23);
  sub_10007DC14((uint64_t *)&unk_100293410);
  swift_allocObject();
  *(void *)(v3 + 16) = sub_1000DE134((uint64_t)v24, (uint64_t)v12, (uint64_t)v8);
  type metadata accessor for _TransportConnectionManager();
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = swift_retain();
  uint64_t v19 = sub_1000EFD0C(v18, v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v21);
  *(void *)(v4 + 24) = v19;
  *(void *)(*(void *)(v4 + 16) + 24) = &off_100265170;
  swift_unknownObjectWeakAssign();
  return v4;
}

void *sub_1000F0ED0(void *a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), uint64_t a4, void *a5)
{
  uint64_t v126 = a4;
  uint64_t v128 = a3;
  uint64_t v129 = a2;
  uint64_t v124 = a1;
  uint64_t v125 = sub_1001EAF60();
  uint64_t v145 = *(void *)(v125 - 8);
  uint64_t v6 = __chkstk_darwin(v125);
  unint64_t v137 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v144 = (char *)&v115 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v143 = (char *)&v115 - v11;
  __chkstk_darwin(v10);
  int v146 = (char *)&v115 - v12;
  uint64_t v136 = sub_1001EC210();
  int v135 = *(void (**)(char *, uint64_t))(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v132 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for CRDTModelSyncVersion() - 8;
  uint64_t v14 = __chkstk_darwin(v133);
  uint64_t v134 = (void (*)(void))((char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v131 = (char *)&v115 - v16;
  uint64_t v139 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v130 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  unint64_t v141 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v18 - 8);
  id v122 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v20 - 8);
  uint64_t v120 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v118 = (uint64_t)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_10007DC14((uint64_t *)&unk_100291CA0) - 8;
  uint64_t v25 = __chkstk_darwin(v117);
  uint64_t v123 = (uint64_t)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v119 = (char *)&v115 - v28;
  __chkstk_darwin(v27);
  uint64_t v142 = (uint64_t)&v115 - v29;
  uint64_t v138 = sub_10007DC14((uint64_t *)&unk_1002933E0);
  uint64_t v30 = __chkstk_darwin(v138);
  uint64_t v121 = (uint64_t)&v115 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  unint64_t v33 = (char *)&v115 - v32;
  uint64_t v34 = sub_1001EC9C0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  unint64_t v37 = (char *)&v115 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1001EC990();
  __chkstk_darwin(v38 - 8);
  uint64_t v39 = sub_1001EBAA0();
  __chkstk_darwin(v39 - 8);
  a5[3] = 0;
  swift_unknownObjectWeakInit();
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA90();
  sub_1001EC980();
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v37, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v34);
  a5[6] = sub_1001ECA00();
  *((unsigned char *)a5 + 80) = 0;
  uint64_t v127 = (uint64_t)a5 + *(void *)(*a5 + 200);
  v148[3] = 0;
  v148[4] = (id)0xE000000000000000;
  sub_1001ECD20(20);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  sub_10007DC14(&qword_100291FC0);
  sub_1000815A4(&qword_100291240, &qword_100291FC0);
  sub_1000815A4(&qword_100291248, &qword_100291FC0);
  sub_1001EBF00();
  sub_1001EB0C0();
  sub_1000F04DC(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001EBF00();
  *(void *)&v33[*(int *)(v23 + 32)] = &_swiftEmptyDictionarySingleton;
  *(void *)&v33[*(int *)(v138 + 52)] = &_swiftEmptyDictionarySingleton;
  unint64_t v140 = v33;
  uint64_t v40 = v124;
  a5[12] = v124;
  swift_beginAccess();
  a5[3] = v126;
  swift_unknownObjectWeakAssign();
  uint64_t v41 = v129;
  a5[8] = v129;
  uint64_t v116 = a5;
  type metadata accessor for ObservableTransaction();
  unint64_t v42 = (void *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain_n();
  id v43 = v40;
  a5[7] = sub_10017800C(0xD000000000000034, 0x80000001002242D0, v41, v42);
  uint64_t v44 = (uint64_t)v33;
  uint64_t v45 = v118;
  sub_1000F2540(v44, v118, type metadata accessor for ReadingHistoryModel);
  uint64_t v46 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v47 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v120, 1, 2, v46);
  uint64_t v48 = type metadata accessor for CRDTModelRevisionInfo();
  int v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56);
  uint64_t v50 = (uint64_t)v122;
  v49(v122, 1, 1, v48);
  uint64_t v51 = v117;
  uint64_t v52 = (uint64_t)v119;
  uint64_t v53 = (uint64_t)&v119[*(int *)(v117 + 60)];
  v49((char *)v53, 1, 1, v48);
  sub_1000F25A8(v45, v52, type metadata accessor for ReadingHistoryModel);
  *(unsigned char *)(v52 + *(int *)(v51 + 52)) = 0;
  sub_1000935F8(v47, v52 + *(int *)(v51 + 56), (uint64_t *)&unk_100291BA0);
  sub_1000AF3B4(v50, v53, (uint64_t *)&unk_100291B90);
  uint64_t v54 = v142;
  sub_1000935F8(v52, v142, (uint64_t *)&unk_100291CA0);
  sub_1000936F8(v54, v52, (uint64_t *)&unk_100291CA0);
  sub_10007DC14(&qword_100291BB0);
  swift_allocObject();
  uint64_t v55 = v123;
  sub_1000936F8(v52, v123, (uint64_t *)&unk_100291CA0);
  unint64_t v56 = sub_100090B34(v55);
  sub_1000816A4(v52, (uint64_t *)&unk_100291CA0);
  unint64_t v57 = v116;
  v116[4] = v56;
  sub_1000936F8((uint64_t)v140, v121, (uint64_t *)&unk_1002933E0);
  sub_1000815A4(&qword_1002933F0, (uint64_t *)&unk_1002933E0);
  uint64_t v58 = v141;
  uint64_t v59 = v125;
  sub_1001EC0E0();
  unint64_t v60 = (char *)v57 + *(void *)(*v57 + 192);
  uint64_t v61 = v130;
  uint64_t v62 = v139;
  (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v60, v58, v139);
  uint64_t v63 = (void *)v57[12];
  swift_beginAccess();
  id v64 = v63;
  sub_1001EC080();
  swift_endAccess();

  uint64_t v65 = (void *)v57[12];
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
  uint64_t v138 = (uint64_t)v60;
  uint64_t v129 = v61 + 16;
  uint64_t v128 = v66;
  v66(v58, (uint64_t)v60, v62);
  id v67 = v65;
  uint64_t v68 = v132;
  sub_1001EC0B0();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v62);
  uint64_t v69 = v131;
  *(void *)uint64_t v131 = v67;
  uint64_t v70 = (uint64_t)v69;
  (*((void (**)(char *, char *, uint64_t))v135 + 4))(&v69[*(int *)(v133 + 28)], v68, v136);
  sub_10007DC14((uint64_t *)&unk_1002933C0);
  swift_allocObject();
  char v71 = v134;
  sub_1000F2540(v70, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  os_log_type_t v72 = sub_100090B54((uint64_t)v71);
  sub_1000F2664(v70, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  v57[5] = v72;
  id v73 = [self books];
  id v74 = [v73 containerURL];

  uint64_t v75 = v143;
  sub_1001EAF10();

  sub_1001EAEE0();
  uint64_t v76 = v145;
  uint64_t v77 = v145 + 8;
  unint64_t v78 = *(void (**)(char *, uint64_t))(v145 + 8);
  v78(v75, v59);
  sub_1001EAEE0();
  uint64_t v79 = *(void (**)(void))(v76 + 16);
  uint64_t v80 = v137;
  uint64_t v145 = v76 + 16;
  uint64_t v134 = v79;
  v79();
  uint64_t v81 = sub_1001EB540();
  os_log_type_t v82 = sub_1001EC8E0();
  BOOL v83 = os_log_type_enabled(v81, v82);
  uint64_t v136 = v77;
  int v135 = v78;
  if (v83)
  {
    uint64_t v84 = (uint8_t *)swift_slowAlloc();
    v148[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v84 = 136315138;
    sub_1000F04DC(&qword_100293400, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v85 = sub_1001ED040();
    uint64_t v147 = sub_1001A8090(v85, v86, (uint64_t *)v148);
    unint64_t v78 = v135;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    v78(v80, v59);
    _os_log_impl((void *)&_mh_execute_header, v81, v82, "CRDTModelFileSyncManager Init: modelFileURL: %s", v84, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v78(v80, v59);
  }

  id v87 = [self defaultManager];
  sub_1001EAEC0(v88);
  uint64_t v90 = v89;
  v148[0] = 0;
  unsigned int v91 = [v87 createDirectoryAtURL:v89 withIntermediateDirectories:1 attributes:0 error:v148];

  if (v91)
  {
    id v92 = v148[0];
  }
  else
  {
    uint64_t v93 = v59;
    id v94 = v148[0];
    sub_1001EAE60();

    swift_willThrow();
    sub_1001EC8F0();
    if (qword_1002910C8 != -1) {
      swift_once();
    }
    uint64_t v95 = (void *)qword_100292120;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = xmmword_100215310;
    id v97 = v95;
    uint64_t v98 = sub_1001EAE90();
    uint64_t v100 = v99;
    *(void *)(v96 + 56) = &type metadata for String;
    unint64_t v101 = sub_10007DC58();
    *(void *)(v96 + 64) = v101;
    *(void *)(v96 + 32) = v98;
    *(void *)(v96 + 40) = v100;
    swift_getErrorValue();
    uint64_t v102 = sub_1001ED110();
    *(void *)(v96 + 96) = &type metadata for String;
    *(void *)(v96 + 104) = v101;
    *(void *)(v96 + 72) = v102;
    *(void *)(v96 + 80) = v103;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v59 = v93;
    unint64_t v78 = v135;
  }
  uint64_t v104 = (void *)v57[12];
  uint64_t v105 = (uint64_t)v141;
  v128(v141, v138, v139);
  uint64_t v106 = (uint64_t)v143;
  uint64_t v107 = v144;
  ((void (*)(char *, char *, uint64_t))v134)(v143, v144, v59);
  sub_10007DC14(&qword_1002933F8);
  swift_allocObject();
  id v108 = v104;
  uint64_t v109 = sub_1000F0C04(v108, v105, v106);

  v57[11] = v109;
  uint64_t v110 = v57[4] + *(void *)(*(void *)v57[4] + 128);
  swift_beginAccess();
  *(void *)(v110 + _Block_object_dispose(&STACK[0x3B0], 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  v57[9] = _swiftEmptyArrayStorage;
  uint64_t v111 = swift_allocObject();
  swift_weakInit();
  uint64_t v112 = (uint64_t *)(*(void *)(v109 + 16) + *(void *)(**(void **)(v109 + 16) + 144));
  uint64_t v113 = *v112;
  uint64_t *v112 = (uint64_t)sub_1000F2610;
  v112[1] = v111;
  sub_1000B0100(v113);
  swift_retain();
  sub_10017D224();
  swift_release();
  swift_release();
  v78(v107, v59);
  v78(v146, v59);
  sub_1000816A4(v142, (uint64_t *)&unk_100291CA0);
  sub_1000816A4((uint64_t)v140, (uint64_t *)&unk_1002933E0);
  return v57;
}

uint64_t sub_1000F21A4()
{
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000F21DC(uint64_t a1)
{
  return sub_1000F220C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1000E8C80);
}

uint64_t sub_1000F21F4(uint64_t a1)
{
  return sub_1000F220C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1000E9458);
}

uint64_t sub_1000F220C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1000F2224()
{
  return sub_1000EA984(v0);
}

uint64_t sub_1000F222C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000F223C(BOOL *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24) != 0;
}

uint64_t sub_1000F2250()
{
  return sub_1000F2784((void (*)(void))&_swift_release);
}

uint64_t sub_1000F2268()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F2278()
{
  uint64_t v1 = (int *)(type metadata accessor for CRDTModelSyncVersion() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  uint64_t v5 = *(void *)(*(void *)v1 + 64) + v3 + 1;
  swift_release();
  uint64_t v6 = (id *)(v0 + v3);

  uint64_t v7 = (char *)v6 + v1[7];
  uint64_t v8 = sub_1001EC210();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1000F2378()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRDTModelSyncVersion() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1000EAB38(v0 + v2, *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64)));
}

uint64_t sub_1000F2400()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1000F2410@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1000E77A0(v1);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000F2440()
{
  return sub_100180568();
}

uint64_t sub_1000F245C@<X0>(void *a1@<X8>)
{
  return sub_100185F90(v1, a1);
}

uint64_t sub_1000F2478()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F24B0(uint64_t a1)
{
  return sub_1000E9680(a1, v1, sub_1000E8CE0);
}

uint64_t sub_1000F24E0@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t sub_1000F2500()
{
  return sub_1000E93C8();
}

uint64_t sub_1000F2508()
{
  return sub_1000EA7D0(v0);
}

uint64_t sub_1000F2510()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000F2520()
{
  sub_1000B969C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1000F2540(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F25A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F2610(uint64_t a1)
{
  return sub_1000EC6CC(a1);
}

uint64_t sub_1000F2618()
{
  return sub_1000EC834(*(void *)(v0 + 24));
}

uint64_t sub_1000F2648()
{
  return sub_1000ED844();
}

uint64_t sub_1000F2664(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F26C4()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F26FC()
{
  return sub_10017F46C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000F2704(uint64_t a1)
{
  return sub_1000E9680(a1, v1, sub_1000E96F4);
}

uint64_t sub_1000F2734()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F276C()
{
  return sub_1000F2784((void (*)(void))&_swift_release);
}

uint64_t sub_1000F2784(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

void sub_1000F27CC()
{
  sub_1000E0D58(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000F27D4(uint64_t a1)
{
  return sub_10009F240(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000F27DC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000F281C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100093EB4;
  v3[2] = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[3] = v4;
  void *v4 = v3;
  v4[1] = sub_1000DF9A8;
  return sub_1000DFAC8();
}

uint64_t sub_1000F28FC()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000F2934()
{
  return sub_1000E100C(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char **)(v0 + 32));
}

uint64_t sub_1000F2940()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F2950()
{
  uint64_t v1 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v20 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v18 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v21 = v0;
  uint64_t v19 = (v20 + 32) & ~v20;
  uint64_t v2 = sub_10007DC14(&qword_100291BD0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v0 + v19, v2);
  uint64_t v4 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v5 = v0 + v19 + *(int *)(v4 + 20);
  uint64_t v6 = sub_10007DC14(&qword_100291BD8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v19 + *(int *)(v1 + 48);
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 2, v9))
  {
    v3(v8, v2);
    v7(v8 + *(int *)(v4 + 20), v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v0 + v19 + *(int *)(v1 + 52);
  uint64_t v11 = type metadata accessor for CRDTModelRevisionInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + *(int *)(v11 + 24);
    uint64_t v13 = sub_1001EB0C0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  unint64_t v15 = (v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;

  return _swift_deallocObject(v21, v16, v20 | 7);
}

void sub_1000F2C4C()
{
  uint64_t v1 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  if (*(void *)(v0 + 16))
  {
    uint64_t v2 = v0
       + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
    sub_1000E4E8C(v2 + *(int *)(v1 + 52), v2);
  }
}

uint64_t sub_1000F2CC4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000F337C(a1);
}

void sub_1000F2CDC()
{
  sub_1000E5128(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000F2CF8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000F2D20()
{
  return sub_100185524();
}

uint64_t sub_1000F2D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F2DA4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000F2DEC()
{
  return sub_1001856F4(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1000F2DF8()
{
  uint64_t v1 = (int *)(type metadata accessor for ReadingHistoryModel(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((v3 + *(void *)(*(void *)v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + 24;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, v5, v4);
}

void sub_1000F2F54()
{
  uint64_t v1 = *(void *)(type metadata accessor for ReadingHistoryModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + v0;
  uint64_t v5 = *(void *)(v0 + 16);
  char v6 = *(unsigned char *)(v0 + v3);
  uint64_t v7 = *(void (**)(void))(v4 + 8);
  uint64_t v8 = *(void *)(v4 + 16);
  sub_1000EEFA8(v5, (void (*)(uint64_t, uint64_t))(v0 + v2), v6, v7, v8);
}

uint64_t sub_1000F2FF8(void (*a1)(uint64_t))
{
  return sub_1000E8958(a1);
}

uint64_t sub_1000F3000()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F3010@<X0>(void *a1@<X8>)
{
  return sub_1000DE660(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000F302C()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000F3064()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  unint64_t v2 = *(unsigned char **)(v0 + 24);
  uint64_t result = sub_1000E593C();
  unsigned char *v1 = result & 1;
  unsigned char *v2 = BYTE1(result) & 1;
  return result;
}

uint64_t sub_1000F30A4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F30B4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000F30DC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F3114()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000F3124()
{
  swift_release();
  swift_release();

  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000F317C(int a1, uint64_t a2)
{
  return sub_1000E63C4(a1, a2, *(id *)(v2 + 16), *(id *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1000F318C()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_1000F31D4()
{
  return sub_1000E6670(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1000F31E4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000F31F4()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = 0;
}

uint64_t sub_1000F3230()
{
  uint64_t v1 = sub_1001EB0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000F32E0()
{
  uint64_t v1 = *(void *)(sub_1001EB0C0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + v3);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1000E35D0(v0 + v2, v4, v5);
}

uint64_t sub_1000F337C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000EEBD4(*(void *)(v1 + 16), *(void (**)(uint64_t, uint64_t))(v1 + 24), *(unsigned char *)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48));
  if (!v2) {
    *a1 = result & 1;
  }
  return result;
}

uint64_t sub_1000F33B8()
{
  return sub_1000A0BD4();
}

uint64_t sub_1000F33C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_1000F346C@<X0>(void *a1@<X8>)
{
  return sub_1000F2410(a1);
}

void sub_1000F3500()
{
}

void *sub_1000F3520(void *a1, uint64_t a2)
{
  return sub_1000F3534(a1, a2, (unint64_t *)&unk_1002915B0);
}

void *sub_1000F3534(void *a1, uint64_t a2, unint64_t *a3)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v8 = sub_1001A8818((uint64_t)a1);
      if (v9)
      {
        uint64_t v7 = *(void **)(*(void *)(a2 + 56) + 8 * v8);
        id v10 = v7;
        return v7;
      }
    }
    return 0;
  }
  id v5 = a1;
  uint64_t v6 = sub_1001ECE60();

  if (!v6) {
    return 0;
  }
  sub_100081668(0, a3);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v7 = v12;
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_1000F3618(Swift::UInt a1, Swift::UInt a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1001ED170();
  sub_1001ED180(a1);
  sub_1001ED180(a2);
  Swift::Int v6 = sub_1001ED1A0();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  do
  {
    id v10 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    BOOL v13 = v12 == a1 && v11 == a2;
    uint64_t result = v13;
    if (v13) {
      break;
    }
    unint64_t v8 = (v8 + 1) & v9;
  }
  while (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  return result;
}

uint64_t sub_1000F36F0(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_1001ECCA0();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v6 = sub_1001ECAF0(*(void *)(a2 + 40)),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_100081668(0, (unint64_t *)&unk_100296550);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1001ECB00();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1001ECB00();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_1000F3850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1001ED170();
    sub_1001EC440();
    Swift::Int v6 = sub_1001ED1A0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1001ED080() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1001ED080() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000F3988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1001ED170();
    swift_bridgeObjectRetain();
    sub_1001EC440();
    swift_bridgeObjectRelease();
    Swift::Int v6 = sub_1001ED1A0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1001ED080() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          unint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1001ED080() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000F3AD0(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1001B9330(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = _swiftEmptyArrayStorage;
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1001EC530();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_1001EC460();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_1001EC460();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_1001EC550();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1000A6FB0(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_1000A6FB0((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  _DWORD v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  void v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_1001EC460();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_1001EC550();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1000A6FB0(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_1000A6FB0((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    _DWORD v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1001ECE80();
  __break(1u);
LABEL_42:
  uint64_t result = sub_1001ECE80();
  __break(1u);
  return result;
}

uint64_t sub_1000F3F74(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, unint64_t a5, unint64_t a6)
{
  v47[3] = a4;
  if (a1 < 0) {
    goto LABEL_35;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = a5;
  if (!a1 || (unint64_t v45 = a6 >> 14, a6 >> 14 == a5 >> 14))
  {
    sub_1001B948C(a6, v44, a2 & 1, v10);
    swift_bridgeObjectRelease();
    a6 = *(void *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_5:
    swift_release();
    return a6;
  }
  uint64_t v35 = a1;
  uint64_t v36 = v10;
  uint64_t v43 = _swiftEmptyArrayStorage;
  unint64_t v12 = a5;
  unint64_t v13 = a5;
  unint64_t v40 = a5;
  while (1)
  {
    v47[0] = sub_1001ECB80();
    v47[1] = v14;
    char v15 = a3(v47);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return a6;
    }
    char v16 = v15;
    swift_bridgeObjectRelease();
    if (v16) {
      break;
    }
    unint64_t v12 = sub_1001ECB60();
LABEL_9:
    if (v45 == v12 >> 14) {
      goto LABEL_24;
    }
  }
  if (v13 >> 14 == v12 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v12 = sub_1001ECB60();
    *(void *)(v44 + 16) = v12;
    unint64_t v13 = v12;
    unint64_t v40 = v12;
    goto LABEL_9;
  }
  if (v12 >> 14 < v13 >> 14) {
    goto LABEL_34;
  }
  uint64_t v17 = sub_1001ECB90();
  uint64_t v39 = v18;
  uint64_t v41 = v17;
  uint64_t v37 = v20;
  uint64_t v38 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v43 = sub_1000A6FB0(0, v43[2] + 1, 1, v43);
  }
  unint64_t v22 = v43[2];
  unint64_t v21 = v43[3];
  if (v22 >= v21 >> 1) {
    uint64_t v43 = sub_1000A6FB0((void *)(v21 > 1), v22 + 1, 1, v43);
  }
  void v43[2] = v22 + 1;
  uint64_t v23 = &v43[4 * v22];
  void v23[4] = v41;
  v23[5] = v39;
  v23[6] = v38;
  v23[7] = v37;
  *(void *)(v36 + 16) = v43;
  uint64_t v24 = sub_1001ECB60();
  unint64_t v12 = v24;
  *(void *)(v44 + 16) = v24;
  if (v43[2] != v35)
  {
    unint64_t v13 = v24;
    unint64_t v40 = v24;
    goto LABEL_9;
  }
  unint64_t v40 = v24;
  unint64_t v13 = v24;
LABEL_24:
  if (v45 == v13 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    a6 = (unint64_t)v43;
LABEL_33:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_5;
  }
  if (v45 >= v40 >> 14)
  {
    uint64_t v25 = sub_1001ECB90();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    a6 = (unint64_t)v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a6 = (unint64_t)sub_1000A6FB0(0, v43[2] + 1, 1, v43);
    }
    unint64_t v33 = *(void *)(a6 + 16);
    unint64_t v32 = *(void *)(a6 + 24);
    if (v33 >= v32 >> 1) {
      a6 = (unint64_t)sub_1000A6FB0((void *)(v32 > 1), v33 + 1, 1, (void *)a6);
    }
    *(void *)(a6 + 16) = v33 + 1;
    uint64_t v34 = (void *)(a6 + 32 * v33);
    v34[4] = v25;
    v34[5] = v27;
    v34[6] = v29;
    v34[7] = v31;
    *(void *)(v36 + 16) = a6;
    goto LABEL_33;
  }
LABEL_34:
  sub_1001ECE80();
  __break(1u);
LABEL_35:
  uint64_t result = sub_1001ECE80();
  __break(1u);
  return result;
}

Swift::String __swiftcall CKRecordID.bds_recordType()()
{
  id v1 = [v0 recordName];
  uint64_t v2 = sub_1001EC370();
  unint64_t v4 = v3;

  v13[0] = 46;
  v13[1] = 0xE100000000000000;
  void v12[2] = v13;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1000FFA1C, (uint64_t)v12, v2, v4);
  uint64_t v6 = swift_bridgeObjectRelease();
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1001EC410();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v6 = v8;
    uint64_t v7 = v10;
  }
  else
  {
    __break(1u);
  }
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

void *sub_1000F45E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  return sub_1000F465C(a1, a2, a3, a4, a5, a6);
}

void *sub_1000F465C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v141 = a6;
  uint64_t v142 = a5;
  uint64_t v139 = a3;
  unint64_t v140 = a4;
  uint64_t v135 = a2;
  uint64_t v146 = a1;
  uint64_t v134 = sub_10007DC14(&qword_100293760);
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v132 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_10007DC14(&qword_100293768);
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_10007DC14(&qword_100293770);
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v123 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_10007DC14(&qword_100293778);
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v126 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10007DC14(&qword_100293780);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (char *)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10007DC14(&qword_100293788);
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v119 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14(&qword_100293790);
  __chkstk_darwin(v13 - 8);
  uint64_t v115 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_10007DC14(&qword_100293798);
  uint64_t v122 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v112 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_10007DC14((uint64_t *)&unk_1002937A0);
  uint64_t v114 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v113 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1001EC9C0();
  uint64_t v150 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1001EC990();
  __chkstk_darwin(v20);
  uint64_t v21 = sub_1001EBAA0();
  __chkstk_darwin(v21 - 8);
  *(void *)&v6[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_kChangedRecordsBatchSize] = 32;
  *(void *)&v6[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_subscribers] = _swiftEmptyArrayStorage;
  unint64_t v22 = v6;
  sub_1001EB550();
  uint64_t v149 = OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue;
  uint64_t v145 = sub_100081668(0, (unint64_t *)&qword_1002919A0);
  if (qword_100291188 != -1) {
    swift_once();
  }
  unint64_t v148 = *(char **)(static BDSSyncEngine.shared + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_queue);
  uint64_t v23 = v148;
  sub_1001EBA80();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100100448((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  uint64_t v24 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 104);
  v25(v19, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v17);
  *(void *)&v22[v149] = sub_1001ECA00();
  uint64_t v150 = OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_stateQueue;
  sub_1001EC980();
  sub_1001EBA80();
  v25(v19, v24, v17);
  *(void *)&v22[v150] = sub_1001ECA00();
  v22[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline__hasPendingModifications] = 0;
  uint64_t v26 = OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_currentModifyBatchResponse;
  type metadata accessor for _BDSSyncEngineModifyBatchResponse();
  uint64_t v27 = (void *)swift_allocObject();
  void v27[2] = _swiftEmptyArrayStorage;
  void v27[3] = _swiftEmptyArrayStorage;
  v27[4] = _swiftEmptyArrayStorage;
  v27[5] = _swiftEmptyArrayStorage;
  v27[6] = &_swiftEmptyDictionarySingleton;
  *(void *)&v22[v26] = v27;
  *(void *)&v22[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_scheduleSyncBlock] = 0;
  uint64_t v28 = &v22[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType];
  uint64_t v29 = v146;
  *(void *)uint64_t v28 = v146;
  uint64_t v30 = v29;
  uint64_t v31 = v135;
  *((void *)v28 + 1) = v135;
  sub_100081668(0, (unint64_t *)&unk_100296550);
  uint64_t v32 = sub_1001EC370();
  uint64_t v34 = v33;
  swift_bridgeObjectRetain();
  uint64_t v35 = v140;
  swift_bridgeObjectRetain();
  v154._countAndFlagsBits = v139;
  v154._object = v35;
  v155._countAndFlagsBits = v32;
  v155._object = v34;
  *(CKRecordZoneID *)&v22[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_zoneID] = sub_1001EC920(v154, v155);
  uint64_t v36 = v142;
  *(void *)&v22[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_dataMapper] = v141;
  *(void *)&v22[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_delegate] = v36;
  *(void *)&v22[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_observer] = v36;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain_n();

  uint64_t v37 = (objc_class *)type metadata accessor for BDSSyncEnginePipeline();
  v153.receiver = v22;
  v153.super_class = v37;
  id v38 = objc_msgSendSuper2(&v153, "init");
  uint64_t v39 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_100100490;
  *(void *)(v40 + 24) = v39;
  id v41 = objc_allocWithZone((Class)BUCoalescingCallBlock);
  aBlock[4] = sub_1001004D0;
  void aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000916AC;
  void aBlock[3] = &unk_100267280;
  uint64_t v42 = _Block_copy(aBlock);
  uint64_t v43 = (char *)v38;
  swift_retain_n();
  NSString v44 = sub_1001EC340();
  id v45 = [v41 initWithNotifyBlock:v42 blockDescription:v44];

  _Block_release(v42);
  swift_release();
  [v45 setCoalescingDelay:5.0];
  [v45 setMaximumDelay:5.0];
  swift_release_n();
  uint64_t v46 = *(void **)&v43[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_scheduleSyncBlock];
  *(void *)&v43[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_scheduleSyncBlock] = v45;

  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = _swiftEmptyArrayStorage;
  uint64_t v48 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v49 = (void *)swift_allocObject();
  void v49[2] = v47;
  v49[3] = v48;
  void v49[4] = v30;
  v49[5] = v31;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = _swiftEmptyArrayStorage;
  uint64_t v51 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = (void *)swift_allocObject();
  v52[2] = v50;
  v52[3] = v51;
  v52[4] = v30;
  v52[5] = v31;
  uint64_t v53 = v30;
  uint64_t v54 = v31;
  uint64_t v136 = v52;
  uint64_t v55 = (void *)static BDSSyncEngine.shared;
  swift_bridgeObjectRetain_n();
  unint64_t v56 = v43;
  swift_retain();
  uint64_t v137 = v50;
  swift_retain();
  unint64_t v57 = v55;
  sub_1000FFAA0(v56, v53, v31, v57);

  uint64_t v58 = (void *)static BDSSyncEngine.shared;
  uint64_t v59 = v56;
  id v60 = v58;
  sub_1000FFC68((void *)v59, (uint64_t)v60);

  aBlock[0] = *(void *)(static BDSSyncEngine.shared
                        + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_recordChangePublisher);
  unint64_t v148 = (char *)OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue;
  id v151 = *(id *)(v59 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue);
  id v61 = v151;
  uint64_t v62 = sub_1001EC9B0();
  uint64_t v63 = *(void *)(v62 - 8);
  id v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
  uint64_t v65 = (uint64_t)v115;
  uint64_t v147 = v62;
  uint64_t v150 = v63 + 56;
  uint64_t v143 = v64;
  ((void (*)(char *, uint64_t, uint64_t))v64)(v115, 1, 1);
  swift_retain();
  id v66 = v61;
  sub_10007DC14(&qword_1002911F8);
  sub_1000815A4(&qword_1002937B0, &qword_1002911F8);
  uint64_t v67 = sub_100100404(&qword_1002937B8, (unint64_t *)&qword_1002919A0);
  uint64_t v68 = v112;
  uint64_t v149 = v67;
  sub_1001EB5E0();
  sub_1000816A4(v65, &qword_100293790);

  swift_release();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = v146;
  *(void *)(v69 + 24) = v54;
  sub_1000815A4(&qword_1002937C0, &qword_100293798);
  swift_bridgeObjectRetain();
  uint64_t v70 = v113;
  uint64_t v71 = v138;
  sub_1001EB5D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v68, v71);
  os_log_type_t v72 = (void *)swift_allocObject();
  void v72[2] = v47;
  v72[3] = 32;
  v72[4] = sub_100100550;
  v72[5] = v49;
  sub_1000815A4((unint64_t *)&unk_1002937C8, (uint64_t *)&unk_1002937A0);
  uint64_t v122 = v47;
  swift_retain();
  uint64_t v138 = (uint64_t)v49;
  swift_retain();
  uint64_t v73 = v144;
  sub_1001EB5C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v70, v73);
  id v74 = (void *)(v59 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_subscribers);
  swift_beginAccess();
  sub_1001EC5C0();
  uint64_t v75 = v65;
  uint64_t v76 = v135;
  if (*(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1001EC610();
  }
  sub_1001EC640();
  sub_1001EC600();
  swift_endAccess();
  aBlock[0] = *(void *)(static BDSSyncEngine.shared
                        + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_recordDeletionPublisher);
  id v151 = *(id *)&v148[v59];
  id v77 = v151;
  unint64_t v78 = v143;
  v143(v75, 1, 1, v147);
  swift_retain();
  id v79 = v77;
  sub_10007DC14(&qword_100291200);
  sub_1000815A4(&qword_1002937D8, &qword_100291200);
  uint64_t v80 = v116;
  sub_1001EB5E0();
  sub_1000816A4(v75, &qword_100293790);

  swift_release();
  uint64_t v144 = v59;
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = v146;
  *(void *)(v81 + 24) = v76;
  sub_1000815A4(&qword_1002937E0, &qword_100293780);
  os_log_type_t v82 = v119;
  uint64_t v83 = v118;
  sub_1001EB5D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v80, v83);
  uint64_t v84 = (void *)swift_allocObject();
  v84[2] = v137;
  v84[3] = 32;
  uint64_t v85 = v136;
  v84[4] = sub_1001005A8;
  v84[5] = v85;
  sub_1000815A4((unint64_t *)&unk_1002937E8, &qword_100293788);
  swift_retain();
  swift_retain();
  uint64_t v86 = v121;
  sub_1001EB5C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v82, v86);
  swift_beginAccess();
  sub_1001EC5C0();
  id v87 = v85;
  uint64_t v88 = v147;
  if (*(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1001EC610();
  }
  sub_1001EC640();
  sub_1001EC600();
  swift_endAccess();
  aBlock[0] = *(void *)(static BDSSyncEngine.shared
                        + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_endFetchingChangesPublisher);
  id v151 = *(id *)&v148[v144];
  id v89 = v151;
  v78(v75, 1, 1, v88);
  swift_retain();
  id v90 = v89;
  sub_10007DC14((uint64_t *)&unk_100291210);
  sub_1000815A4(&qword_1002937F8, (uint64_t *)&unk_100291210);
  unsigned int v91 = v123;
  sub_1001EB5E0();
  sub_1000816A4(v75, &qword_100293790);

  swift_release();
  uint64_t v92 = swift_allocObject();
  uint64_t v93 = v140;
  *(void *)(v92 + 16) = v139;
  *(void *)(v92 + 24) = v93;
  sub_1000815A4(&qword_100293800, &qword_100293770);
  id v94 = v126;
  uint64_t v95 = v125;
  sub_1001EB5D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v91, v95);
  uint64_t v96 = (void *)swift_allocObject();
  v96[2] = sub_1001005A8;
  v96[3] = v85;
  uint64_t v97 = v138;
  v96[4] = sub_100100550;
  v96[5] = v97;
  sub_1000815A4(&qword_100293808, &qword_100293778);
  swift_retain();
  swift_retain();
  uint64_t v98 = v128;
  sub_1001EB5C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v94, v98);
  swift_beginAccess();
  sub_1001EC5C0();
  uint64_t v99 = v148;
  if (*(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1001EC610();
  }
  sub_1001EC640();
  sub_1001EC600();
  swift_endAccess();
  aBlock[0] = *(void *)(static BDSSyncEngine.shared
                        + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_updateMetadataPublisher);
  id v151 = *(id *)&v99[v144];
  id v100 = v151;
  v143(v75, 1, 1, v147);
  swift_retain();
  id v101 = v100;
  sub_10007DC14(&qword_100293810);
  sub_1000815A4(&qword_100293818, &qword_100293810);
  uint64_t v102 = v129;
  sub_1001EB5E0();
  sub_1000816A4(v75, &qword_100293790);

  swift_release();
  uint64_t v103 = (void *)swift_allocObject();
  v103[2] = sub_1001005A8;
  v103[3] = v87;
  v103[4] = sub_100100550;
  v103[5] = v97;
  sub_1000815A4((unint64_t *)&unk_100293820, &qword_100293768);
  swift_retain();
  swift_retain();
  uint64_t v104 = v131;
  sub_1001EB5C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v102, v104);
  swift_beginAccess();
  sub_1001EC5C0();
  if (*(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1001EC610();
  }
  sub_1001EC640();
  sub_1001EC600();
  swift_endAccess();
  aBlock[0] = *(void *)(static BDSSyncEngine.shared
                        + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_accountChangedPublisher);
  uint64_t v105 = (void *)v144;
  id v151 = *(id *)&v148[v144];
  id v106 = v151;
  v143(v75, 1, 1, v147);
  swift_retain();
  id v107 = v106;
  sub_10007DC14(&qword_100291208);
  sub_1000815A4(&qword_100293830, &qword_100291208);
  id v108 = v132;
  sub_1001EB5E0();
  sub_1000816A4(v75, &qword_100293790);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000815A4(&qword_100293838, &qword_100293760);
  uint64_t v109 = v134;
  sub_1001EB5C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v108, v109);
  swift_beginAccess();
  sub_1001EC5C0();
  if (*(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1001EC610();
  }
  sub_1001EC640();
  sub_1001EC600();
  swift_endAccess();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v105;
}

void sub_1000F60AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    if (qword_100291188 != -1) {
      swift_once();
    }
    id v2 = (id)static BDSSyncEngine.shared;

    BDSSyncEngine.scheduleSync()();
  }
}

uint64_t sub_1000F6148(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = sub_1001EB560();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v53 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = (void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  unint64_t v15 = *(void *)(a1 + 16);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1001ECEA0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v40) {
      return result;
    }
  }
  else if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (char *)Strong;
    uint64_t v52 = a3;
    uint64_t v18 = *(void **)(Strong + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_observer);
    swift_beginAccess();
    uint64_t v47 = v13;
    unint64_t v19 = *v13;
    uint64_t v20 = qword_100291188;
    id v48 = v18;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v21 = *(void **)(static BDSSyncEngine.shared
                   + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_persistFetchCoordinatorGroup);
    id v49 = v17;
    uint64_t v50 = v7;
    uint64_t v51 = v8;
    id v45 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v45(v12, &v17[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_logger], v7);
    dispatch_group_t v46 = v21;
    dispatch_group_enter(v46);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v22 = a4;
    uint64_t v23 = sub_1001EB540();
    os_log_type_t v24 = sub_1001EC8E0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      aBlock[0] = v42;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1001A8090(v52, a4, aBlock);
      sub_1001ECBC0();
      Class isa = (Class)a4;
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2048;
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1001ECEA0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v26 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v54 = v26;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "BDSSyncEnginePipeline - processIncomingRecordChanges: [%s] Begin processing %ld updates", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v22 = (unint64_t)isa;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
    }
    NSString v44 = v12;
    sub_100081668(0, (unint64_t *)&unk_1002915B0);
    Class isa = sub_1001EC5D0().super.isa;
    uint64_t v27 = v53;
    uint64_t v28 = v12;
    uint64_t v29 = v50;
    v45(v53, v28, v50);
    uint64_t v30 = v51;
    unint64_t v31 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    unint64_t v32 = (v9 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v34 + v31, v27, v29);
    uint64_t v35 = (void *)(v34 + v32);
    *uint64_t v35 = v52;
    v35[1] = v22;
    *(void *)(v34 + v33) = v19;
    dispatch_group_t v36 = v46;
    *(void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v46;
    aBlock[4] = (uint64_t)sub_100100A6C;
    void aBlock[5] = v34;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000DB998;
    void aBlock[3] = (uint64_t)&unk_1002675C8;
    uint64_t v37 = _Block_copy(aBlock);
    id v38 = v36;
    swift_bridgeObjectRetain();
    swift_release();
    Class v39 = isa;
    [v48 updatedCloudRecords:isa completion:v37];
    _Block_release(v37);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v44, v29);
    uint64_t v13 = v47;
  }
  swift_beginAccess();
  *uint64_t v13 = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

void sub_1000F6758(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, NSObject *a5)
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1001EB540();
  os_log_type_t v10 = sub_1001EC8E0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_1001A8090(a2, a3, &v12);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2048;
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1001ECEA0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "BDSSyncEnginePipeline - processIncomingRecordChanges: [%s] Done processing %ld updates", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  dispatch_group_leave(a5);
}

uint64_t sub_1000F6954(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = sub_1001EB560();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = (uint64_t *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  unint64_t v15 = *(void *)(a1 + 16);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1001ECEA0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v40) {
      return result;
    }
  }
  else if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (char *)Strong;
    uint64_t v49 = a3;
    uint64_t v50 = v12;
    uint64_t v18 = *(void **)(Strong + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_observer);
    swift_beginAccess();
    uint64_t v19 = *v13;
    uint64_t v20 = qword_100291188;
    id v47 = v18;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v21 = *(void **)(static BDSSyncEngine.shared
                   + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_persistFetchCoordinatorGroup);
    id v48 = v17;
    id v45 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v45(v50, &v17[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_logger], v7);
    dispatch_group_t v46 = v21;
    dispatch_group_enter(v46);
    unint64_t v22 = a4;
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1001EB540();
    os_log_type_t v24 = sub_1001EC8E0();
    BOOL v25 = os_log_type_enabled(v23, v24);
    unint64_t v44 = a4;
    if (v25)
    {
      uint64_t v42 = v8;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v41 = v19;
      aBlock[0] = v27;
      Class isa = (Class)v7;
      *(_DWORD *)uint64_t v26 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1001A8090(v49, v22, aBlock);
      uint64_t v8 = v42;
      uint64_t v7 = (uint64_t)isa;
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "BDSSyncEnginePipeline - processIncomingRecordDeletions: [%s] Begin processing deletes", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_100081668(0, (unint64_t *)&unk_100293740);
    Class isa = sub_1001EC5D0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v29 = v50;
    uint64_t v28 = v51;
    v45(v51, v50, v7);
    unint64_t v30 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v31 = (v9 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = v8;
    uint64_t v33 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v33 + v30, v28, v7);
    uint64_t v34 = (void *)(v33 + v31);
    unint64_t v35 = v44;
    void *v34 = v49;
    v34[1] = v35;
    dispatch_group_t v36 = v46;
    *(void *)(v33 + ((v31 + 23) & 0xFFFFFFFFFFFFFFF8)) = v46;
    aBlock[4] = (uint64_t)sub_100100900;
    void aBlock[5] = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000DB998;
    void aBlock[3] = (uint64_t)&unk_100267578;
    uint64_t v37 = _Block_copy(aBlock);
    id v38 = v36;
    swift_bridgeObjectRetain();
    swift_release();
    Class v39 = isa;
    [v47 removedCloudRecordsWithIDs:isa completion:v37];
    _Block_release(v37);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v7);
  }
  swift_beginAccess();
  *uint64_t v13 = (uint64_t)_swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

void sub_1000F6ECC(uint64_t a1, uint64_t a2, unint64_t a3, NSObject *a4)
{
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1001EB540();
  os_log_type_t v8 = sub_1001EC8E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1001A8090(a2, a3, &v10);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "BDSSyncEnginePipeline - processIncomingRecordDeletions: [%s] Done processing deletes", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  dispatch_group_leave(a4);
}

uint64_t sub_1000F7040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_1001ECAB0() == a2 && v4 == a3) {
    char v6 = 1;
  }
  else {
    char v6 = sub_1001ED080();
  }
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1000F70B0(id *a1, uint64_t a2, uint64_t a3)
{
  id v5 = [*a1 recordName];
  uint64_t v6 = sub_1001EC370();
  unint64_t v8 = v7;

  v17[0] = 46;
  v17[1] = 0xE100000000000000;
  id v16[2] = v17;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1000FFA1C, (uint64_t)v16, v6, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1001EC410();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    if (v11 == a2 && v13 == a3) {
      char v15 = 1;
    }
    else {
      char v15 = sub_1001ED080();
    }
    swift_bridgeObjectRelease();
    return v15 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000F7200(void **a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v7 = *a1;
  unint64_t v8 = (unint64_t *)(a2 + 16);
  swift_beginAccess();
  id v9 = v7;
  sub_1001EC5C0();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1001EC610();
  sub_1001EC640();
  sub_1001EC600();
  swift_endAccess();
  uint64_t result = swift_beginAccess();
  unint64_t v11 = *v8;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1001ECEA0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v12 < a3) {
      return result;
    }
  }
  else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) < a3)
  {
    return result;
  }
  return a4(result);
}

uint64_t sub_1000F7320(void **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *a1;
  if (v3)
  {
    id v6 = [v3 zoneName];
    uint64_t v7 = sub_1001EC370();
    uint64_t v9 = v8;

    if (v7 == a2 && v9 == a3) {
      char v11 = 1;
    }
    else {
      char v11 = sub_1001ED080();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 1;
  }
  return v11 & 1;
}

void sub_1000F73CC(void **a1)
{
  id v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = (void *)Strong;
    sub_1000FE068(v1);
  }
}

Swift::Void __swiftcall BDSSyncEnginePipeline.signalSyncToCK()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001EBA60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = sub_1001EB540();
  os_log_type_t v7 = sub_1001EC910();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v16 = sub_1001A8090(0xD000000000000010, 0x8000000100224C30, aBlock);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "BDSSyncEnginePipeline - %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v9 = *(id *)(v1 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_stateQueue);
  uint64_t v10 = sub_1001EBA50();
  __chkstk_darwin(v10);
  *(&v16 - 2) = v1;
  *((unsigned char *)&v16 - _Block_object_dispose(&STACK[0x3B0], 8) = 1;
  sub_1001EC9D0();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v11 = os_transaction_create();
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_scheduleSyncBlock);
  if (v12)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v11;
    aBlock[4] = (uint64_t)MarkedAsFinishedMechanism.rawValue.getter;
    void aBlock[5] = v13;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000DB998;
    void aBlock[3] = (uint64_t)&unk_100266FD8;
    uint64_t v14 = _Block_copy(aBlock);
    id v15 = v12;
    swift_unknownObjectRetain();
    swift_release();
    [v15 signalWithCompletion:v14];
    swift_unknownObjectRelease();
    _Block_release(v14);
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t BDSSyncEnginePipeline.startSyncToCK()()
{
  v1[5] = v0;
  uint64_t v2 = sub_1001EBA60();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000F7958, 0, 0);
}

uint64_t sub_1000F7958()
{
  uint64_t v14 = v0;
  v0[9] = OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_logger;
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC910();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    v0[4] = sub_1001A8090(0x6E79537472617473, 0xEF29284B436F5463, &v13);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "BDSSyncEnginePipeline - %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  id v8 = *(id *)(v6 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_stateQueue);
  sub_1001EBA50();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v6;
  *(unsigned char *)(v9 + 24) = 1;
  sub_1001EC9D0();

  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v7);
  if (qword_100291188 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)static BDSSyncEngine.shared;
  v0[10] = static BDSSyncEngine.shared;
  v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[11] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1000F7BF8;
  return BDSSyncEngine.sendChangesIfReady()();
}

uint64_t sub_1000F7BF8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000F7D3C, 0, 0);
  }
  else
  {

    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000F7D3C()
{
  uint64_t v9 = v0;

  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC8F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    *(void *)(v0 + 16) = sub_1001A8090(0x6E79537472617473, 0xEF29284B436F5463, &v8);
    sub_1001ECBC0();
    *(_WORD *)(v3 + 12) = 2112;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v5;
    sub_1001ECBC0();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "BDSSyncEnginePipeline - %s error: %@", (uint8_t *)v3, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000F80F8(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  void *v4 = v2;
  v4[1] = sub_1000F81A0;
  return BDSSyncEnginePipeline.startSyncToCK()();
}

uint64_t sub_1000F81A0()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  os_log_type_t v2 = *(void **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t BDSSyncEnginePipeline.fetchRecord(for:)()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_100293530 + dword_100293530);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000F8378;
  return v3();
}

uint64_t sub_1000F8378(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1000F85F0(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  void v3[4] = _Block_copy(aBlock);
  uint64_t v9 = (uint64_t (__cdecl *)())((char *)&dword_100293530 + dword_100293530);
  id v6 = a1;
  a3;
  uint64_t v7 = (void *)swift_task_alloc();
  void v3[5] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1000F86C0;
  return v9();
}

uint64_t sub_1000F86C0(void *a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 32);
  uint64_t v4 = *(void **)(*v1 + 24);
  uint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v8 = *v1;
  swift_task_dealloc();

  ((void (**)(void, void *))v3)[2](v3, a1);
  _Block_release(v3);

  id v6 = *(uint64_t (**)(void))(v8 + 8);
  return v6();
}

id BDSSyncEnginePipeline.privacyDelegate()()
{
  if (qword_100291188 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static BDSSyncEngine.shared;
  return v0;
}

id sub_1000F88F4(id a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_dataMapper);
  if (v3)
  {
    id result = [v3 recordFromCloudData:a1];
    if (result) {
      return result;
    }
  }
  else
  {
    id result = [a1 configuredRecordFromAttributes];
    if (result) {
      return result;
    }
  }
  id v5 = a1;
  id v6 = sub_1001EB540();
  os_log_type_t v7 = sub_1001EC8F0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v13 = sub_1001A8090(0xD000000000000019, 0x8000000100225160, &v14);
    sub_1001ECBC0();
    *(_WORD *)(v8 + 12) = 2080;
    id v9 = objc_msgSend(v5, "localRecordID", v13);
    uint64_t v10 = sub_1001EC370();
    unint64_t v12 = v11;

    sub_1001A8090(v10, v12, &v14);
    sub_1001ECBC0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "BDSSyncEnginePipeline - %s: failed to create CKRecord for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t BDSSyncEnginePipeline.nextRecordZoneChangeBatch(zoneIDs:fetchLimit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[26] = a3;
  v4[27] = v3;
  v4[24] = a1;
  v4[25] = a2;
  uint64_t v5 = sub_1001EBA60();
  v4[28] = v5;
  v4[29] = *(void *)(v5 - 8);
  v4[30] = swift_task_alloc();
  return _swift_task_switch(sub_1000F8BD8, 0, 0);
}

uint64_t sub_1000F8BD8()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void **)(v0 + 216);
  *(void *)(v0 + 24_Block_object_dispose(&STACK[0x3B0], 8) = OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_logger;
  id v2 = v1;
  uint64_t v3 = sub_1001EB540();
  os_log_type_t v4 = sub_1001EC910();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(char **)(v0 + 216);
    uint64_t v6 = swift_slowAlloc();
    v38[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    *(void *)(v0 + 184) = sub_1001A8090(0xD00000000000002ELL, 0x8000000100224C50, v38);
    sub_1001ECBC0();
    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType];
    unint64_t v8 = *(void *)&v5[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType + 8];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 152) = sub_1001A8090(v7, v8, v38);
    sub_1001ECBC0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "BDSSyncEnginePipeline - %s: [%s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v9 = *(void **)(v0 + 216);
  }
  uint64_t v10 = *(void *)(v0 + 200);
  id v11 = *(id *)(*(void *)(v0 + 216) + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_zoneID);
  LOBYTE(v10) = sub_1000F36F0(v11, v10);

  if (v10)
  {
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v13 = OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_stateQueue;
    *(void *)(v0 + 256) = OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_stateQueue;
    uint64_t v14 = *(void **)(v12 + v13);
    *(void *)(swift_task_alloc() + 16) = v12;
    id v15 = v14;
    sub_1001EC9E0();
    *(void *)(v0 + 264) = 0;

    swift_task_dealloc();
    uint64_t v16 = *(char **)(v0 + 216);
    if (*(unsigned char *)(v0 + 328) == 1)
    {
      *(void *)(v0 + 272) = os_transaction_create();
      uint64_t v17 = &v16[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType];
      uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType];
      *(void *)(v0 + 280) = v18;
      unint64_t v19 = *((void *)v17 + 1);
      *(void *)(v0 + 28_Block_object_dispose(&STACK[0x3B0], 8) = v19;
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_1001EB540();
      os_log_type_t v21 = sub_1001EC910();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        v38[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136315394;
        *(void *)(v0 + 16_Block_object_dispose(&STACK[0x3B0], 8) = sub_1001A8090(0xD00000000000002ELL, 0x8000000100224C50, v38);
        sub_1001ECBC0();
        *(_WORD *)(v22 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 176) = sub_1001A8090(v18, v19, v38);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "BDSSyncEnginePipeline - %s: [%s] About to fetch dirty changes", (uint8_t *)v22, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v31 = *(void *)(v0 + 208);
      uint64_t v32 = *(void **)(*(void *)(v0 + 216) + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_delegate);
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 128;
      *(void *)(v0 + 24) = sub_1000F92AC;
      uint64_t v33 = swift_continuation_init();
      *(void *)(v0 + 80) = _NSConcreteStackBlock;
      *(void *)(v0 + 8_Block_object_dispose(&STACK[0x3B0], 8) = 0x40000000;
      *(void *)(v0 + 96) = sub_1000F9928;
      *(void *)(v0 + 104) = &unk_100267000;
      *(void *)(v0 + 112) = v33;
      [v32 nextBatchOfMutableCloudDataToSaveToCKWithFetchLimit:v31 completion:v0 + 80];
      return _swift_continuation_await(v0 + 16);
    }
    uint64_t v23 = v16;
    os_log_type_t v24 = sub_1001EB540();
    os_log_type_t v25 = sub_1001EC910();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = *(char **)(v0 + 216);
    if (v26)
    {
      uint64_t v28 = swift_slowAlloc();
      v38[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      *(void *)(v0 + 136) = sub_1001A8090(0xD00000000000002ELL, 0x8000000100224C50, v38);
      sub_1001ECBC0();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v29 = *(void *)&v27[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType];
      unint64_t v30 = *(void *)&v27[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType + 8];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 120) = sub_1001A8090(v29, v30, v38);
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "BDSSyncEnginePipeline - %s: [%s] No pending modifications. Returning nil", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  uint64_t v34 = *(void *)(v0 + 192);
  uint64_t v35 = sub_1001EB790();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  swift_task_dealloc();
  dispatch_group_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_1000F92AC()
{
  return _swift_task_switch(sub_1000F938C, 0, 0);
}

uint64_t sub_1000F938C()
{
  os_log_type_t v25 = v0;
  uint64_t v1 = v0[16];
  v0[37] = v1;
  if (v1)
  {
    uint64_t v2 = v0[34];
    swift_bridgeObjectRelease();
    uint64_t v3 = swift_allocObject();
    v0[38] = v3;
    swift_unknownObjectWeakInit();
    os_log_type_t v4 = (void *)swift_task_alloc();
    v0[39] = v4;
    v4[2] = v3;
    v4[3] = v1;
    void v4[4] = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[40] = v5;
    uint64_t v6 = sub_10007DC14(&qword_100293558);
    void *v5 = v0;
    v5[1] = sub_1000F9768;
    uint64_t v7 = v0[24];
    return withCheckedContinuation<A>(isolation:function:_:)(v7, 0, 0, 0xD00000000000002ELL, 0x8000000100224C50, sub_100100124, v4, v6);
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1001EB540();
    os_log_type_t v9 = sub_1001EC910();
    BOOL v10 = os_log_type_enabled(v8, v9);
    unint64_t v11 = v0[36];
    if (v10)
    {
      uint64_t v12 = v0[35];
      uint64_t v13 = swift_slowAlloc();
      v24[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      v0[18] = sub_1001A8090(0xD00000000000002ELL, 0x8000000100224C50, v24);
      sub_1001ECBC0();
      *(_WORD *)(v13 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_1001A8090(v12, v11, v24);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "BDSSyncEnginePipeline - %s: [%s] no more dirty changes", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v15 = v0[29];
    uint64_t v14 = v0[30];
    uint64_t v17 = v0[27];
    uint64_t v16 = v0[28];
    uint64_t v18 = v0[24];
    id v19 = *(id *)(v17 + v0[32]);
    sub_1001EBA50();
    uint64_t v20 = swift_task_alloc();
    *(void *)(v20 + 16) = v17;
    *(unsigned char *)(v20 + 24) = 0;
    sub_1001EC9D0();

    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    swift_unknownObjectRelease();
    uint64_t v21 = sub_1001EB790();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_1000F9768()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000F98C0, 0, 0);
}

uint64_t sub_1000F98C0()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000F9928(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_100081668(0, &qword_100292788);
    uint64_t v3 = sub_1001EC5E0();
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = v3;
  sub_100100F94((uint64_t)&v5, *(void *)(*(void *)(v2 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t sub_1000F99B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v5 = sub_1001EBA60();
  uint64_t v36 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EBAA0();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  __chkstk_darwin(v8);
  BOOL v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100293890);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = sub_10007DC14(&qword_100293558);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = (void *)Strong;
    id v31 = *(id *)(Strong + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
    unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v20 = swift_allocObject();
    unint64_t v30 = v10;
    uint64_t v21 = v5;
    uint64_t v22 = v33;
    *(void *)(v20 + 16) = v18;
    *(void *)(v20 + 24) = v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v20 + v19, (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    *(void *)(v20 + ((v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v32;
    aBlock[4] = sub_100100E98;
    void aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000DB998;
    void aBlock[3] = &unk_1002677A8;
    uint64_t v23 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    id v24 = v31;
    id v25 = v18;
    swift_bridgeObjectRetain();
    uint64_t v26 = v30;
    sub_1001EBA80();
    uint64_t v37 = _swiftEmptyArrayStorage;
    sub_100100448((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10007DC14((uint64_t *)&unk_100291BF0);
    sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
    sub_1001ECC30();
    sub_1001EC9F0();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v21);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v35);
    return swift_release();
  }
  else
  {
    uint64_t v28 = sub_1001EB790();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v16, 1, 1, v28);
    return sub_1001EC670();
  }
}

uint64_t sub_1000F9E50(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_10007DC14(&qword_100293558);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v10 - v7;
  sub_1000F9F3C(a2, (uint64_t)&v10 - v7);
  sub_100100F2C((uint64_t)v8, (uint64_t)v6);
  sub_10007DC14(&qword_100293890);
  sub_1001EC670();
  return sub_1000816A4((uint64_t)v8, &qword_100293558);
}

uint64_t sub_1000F9F3C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v51 = a2;
  uint64_t v50 = sub_1001EBA60();
  uint64_t v5 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType);
  unint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType + 8);
  uint64_t v10 = v2 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_logger;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v52 = v10;
  uint64_t v11 = sub_1001EB540();
  LOBYTE(v12) = sub_1001EC910();
  if (!os_log_type_enabled(v11, (os_log_type_t)v12))
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    goto LABEL_6;
  }
  uint64_t v49 = v7;
  uint64_t v47 = v5;
  uint64_t v13 = v9;
  uint64_t v9 = swift_slowAlloc();
  v55[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v9 = 136315650;
  uint64_t v54 = sub_1001A8090(0xD000000000000029, 0x8000000100225130, v55);
  sub_1001ECBC0();
  *(_WORD *)(v9 + 12) = 2080;
  swift_bridgeObjectRetain();
  uint64_t v48 = v13;
  uint64_t v54 = sub_1001A8090(v13, v8, v55);
  sub_1001ECBC0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v9 + 22) = 2048;
  if (a1 >> 62) {
    goto LABEL_33;
  }
  uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = v14;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v12, "BDSSyncEnginePipeline - %s: [%s] %ld dirty changes", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v47;
    uint64_t v9 = v48;
    uint64_t v7 = v49;
LABEL_6:
    unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v57 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v15 = *(void *)(v3 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_currentModifyBatchResponse);
    swift_beginAccess();
    swift_retain();
    sub_1000FE2C0(a1, (unint64_t)&v57, (uint64_t)&v56, (uint64_t *)(v15 + 48));
    swift_endAccess();
    swift_release();
    a1 = v57;
    if (v57 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1001ECEA0();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_10;
      }
    }
    else if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_10;
    }
    if (v56 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1001ECEA0();
      swift_bridgeObjectRelease();
      if (!v37)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        id v38 = sub_1001EB540();
        os_log_type_t v39 = sub_1001EC910();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v40 = swift_slowAlloc();
          uint64_t v41 = swift_slowAlloc();
          uint64_t v49 = v7;
          v55[0] = v41;
          *(_DWORD *)uint64_t v40 = 136315394;
          uint64_t v54 = sub_1001A8090(0xD000000000000029, 0x8000000100225130, v55);
          sub_1001ECBC0();
          *(_WORD *)(v40 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v54 = sub_1001A8090(v9, v8, v55);
          sub_1001ECBC0();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v38, v39, "BDSSyncEnginePipeline - %s: [%s] Cannot create CKRecords to save", (uint8_t *)v40, 0x16u);
          swift_arrayDestroy();
          uint64_t v7 = v49;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        uint64_t v43 = v50;
        uint64_t v42 = v51;
        id v44 = *(id *)(v3 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_stateQueue);
        uint64_t v45 = sub_1001EBA50();
        __chkstk_darwin(v45);
        *(&v47 - 2) = v3;
        *((unsigned char *)&v47 - _Block_object_dispose(&STACK[0x3B0], 8) = 0;
        sub_1001EC9D0();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v43);
        uint64_t v46 = sub_1001EB790();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v42, 1, 1, v46);
        return swift_bridgeObjectRelease();
      }
    }
    else if (!*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_37;
    }
LABEL_10:
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1001ECEA0();
      if (!v12)
      {
LABEL_20:
        uint64_t v16 = v9;
        swift_bridgeObjectRelease();
        unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_20;
      }
    }
    v55[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v11 = v55;
    sub_1001ECDD0();
    if ((v12 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = v9;
  uint64_t v17 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v18 = (id)sub_1001ECD50();
    }
    else {
      id v18 = *(id *)(a1 + 8 * v17 + 32);
    }
    unint64_t v19 = v18;
    ++v17;
    id v20 = [v18 recordID];

    sub_1001ECDA0();
    sub_1001ECDE0();
    sub_1001ECDF0();
    sub_1001ECDB0();
  }
  while (v12 != v17);
  unint64_t v21 = v55[0];
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1001EB540();
  os_log_type_t v23 = sub_1001EC910();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    v55[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136316418;
    uint64_t v54 = sub_1001A8090(0xD000000000000029, 0x8000000100225130, v55);
    sub_1001ECBC0();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_1001A8090(v16, v8, v55);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 22) = 2048;
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1001ECEA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v54 = v25;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 32) = 2080;
    sub_100081668(0, (unint64_t *)&unk_100293740);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1001EC5F0();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1001A8090(v26, v28, v55);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 42) = 2048;
    swift_beginAccess();
    if (v56 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1001ECEA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v53 = v29;
    sub_1001ECBC0();
    *(_WORD *)(v24 + 52) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1001EC5F0();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_1001A8090(v30, v32, v55);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "BDSSyncEnginePipeline - %s: [%s] Returning records %ld idsToSave=%s, %ld idsToDelete=%s", (uint8_t *)v24, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  uint64_t v33 = v51;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1001EB750();
  uint64_t v34 = sub_1001EB790();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall BDSSyncEnginePipeline.didSave(record:)(CKRecord record)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EBA60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EBAA0();
  uint64_t v32 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v31 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = record.super.isa;
  uint64_t v11 = sub_1001EB540();
  os_log_type_t v12 = sub_1001EC910();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v30 = v5;
    uint64_t v14 = v13;
    unint64_t v27 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v33 = (void *)sub_1001A8090(0xD000000000000010, 0x8000000100224CF0, aBlock);
    uint64_t v29 = v2;
    sub_1001ECBC0();
    *(_WORD *)(v14 + 12) = 2112;
    uint64_t v15 = v8;
    uint64_t v16 = v7;
    uint64_t v17 = v4;
    id v18 = [(objc_class *)v10 recordID];
    uint64_t v33 = v18;
    uint64_t v2 = v29;
    sub_1001ECBC0();
    *unint64_t v27 = v18;
    uint64_t v4 = v17;
    uint64_t v7 = v16;
    uint64_t v8 = v15;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v14, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v30;
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v19 = *(void **)&v2[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue];
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v2;
  *(void *)(v20 + 24) = v10;
  aBlock[4] = (uint64_t)sub_100100170;
  void aBlock[5] = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000DB998;
  void aBlock[3] = (uint64_t)&unk_100267068;
  unint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = v10;
  id v23 = v19;
  uint64_t v24 = v2;
  uint64_t v25 = v31;
  sub_1001EBA80();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_100100448((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v8);
  swift_release();
}

void sub_1000FAECC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_currentModifyBatchResponse);
  swift_retain();
  id v5 = [a1 recordID];
  swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  swift_release();
  id v7 = sub_1000F3534(v5, v6, &qword_100292788);

  swift_bridgeObjectRelease();
  if (!v7)
  {
    uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_delegate);
    id v9 = [a1 recordID];
    id v7 = [v8 mutableCloudDataForRecordID:v9];

    if (!v7) {
      return;
    }
    uint64_t v10 = sub_1001EB540();
    os_log_type_t v11 = sub_1001EC8F0();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v12 = 136315138;
      sub_1001A8090(0xD000000000000013, 0x8000000100225110, &v13);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "BDSSyncEnginePipeline - %s: Unable to find outstanding cloudData. Overwrite existing.", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  sub_1000FB104(a1, v7);
}

void sub_1000FB104(void *a1, id a2)
{
  [a2 setSystemFields:a1];
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_currentModifyBatchResponse);
  swift_retain();
  id v5 = [a1 recordID];
  swift_beginAccess();
  uint64_t v6 = (void *)sub_1001C0A2C((unint64_t)v5);
  swift_endAccess();

  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_1001EC5C0();
  if (*(void *)((*(void *)(v4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v4 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1001EC610();
  sub_1001EC640();
  sub_1001EC600();
  swift_endAccess();
  swift_release();
}

uint64_t BDSSyncEnginePipeline.failedToSaveRecordWith(recordID:error:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1001EBAA0();
  uint64_t v37 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v35 = v2;
  uint64_t v36 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v11 = a1;
  os_log_type_t v12 = sub_1001EB540();
  os_log_type_t v13 = sub_1001EC910();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v34 = v8;
    uint64_t v16 = v15;
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)uint64_t v16 = 136315394;
    os_log_t v31 = v12;
    id v38 = (void *)sub_1001A8090(0xD000000000000027, 0x8000000100224D10, aBlock);
    sub_1001ECBC0();
    *(_WORD *)(v16 + 12) = 2112;
    int v30 = v14;
    id v38 = v11;
    uint64_t v17 = v6;
    id v18 = v11;
    sub_1001ECBC0();
    void *v32 = v11;

    uint64_t v6 = v17;
    os_log_t v19 = v31;
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v30, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v16, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v34;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v20 = v35;
  unint64_t v21 = *(void **)&v35[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue];
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v20;
  uint64_t v22[3] = v11;
  void v22[4] = a2;
  aBlock[4] = (uint64_t)sub_10010019C;
  void aBlock[5] = (uint64_t)v22;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000DB998;
  void aBlock[3] = (uint64_t)&unk_1002670B8;
  id v23 = _Block_copy(aBlock);
  uint64_t v24 = v11;
  id v25 = v21;
  id v26 = v20;
  swift_errorRetain();
  unint64_t v27 = v36;
  sub_1001EBA80();
  id v38 = _swiftEmptyArrayStorage;
  sub_100100448((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v23);

  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v27, v9);
  return swift_release();
}

Swift::Void __swiftcall BDSSyncEnginePipeline.didDeleteRecordWith(recordID:)(CKRecordID recordID)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EBA60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1001EBAA0();
  uint64_t v33 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v32 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = recordID.super.isa;
  os_log_type_t v11 = sub_1001EB540();
  os_log_type_t v12 = sub_1001EC910();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    os_log_t v31 = v7;
    uint64_t v15 = v14;
    uint64_t v29 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    aBlock[0] = v30;
    *(_DWORD *)uint64_t v15 = 136315394;
    os_log_t v28 = v11;
    uint64_t v34 = (void *)sub_1001A8090(0xD00000000000001ELL, 0x8000000100224D40, aBlock);
    sub_1001ECBC0();
    *(_WORD *)(v15 + 12) = 2112;
    int v27 = v13;
    uint64_t v34 = v10;
    uint64_t v16 = v5;
    uint64_t v17 = v10;
    sub_1001ECBC0();
    void *v29 = v10;

    uint64_t v5 = v16;
    os_log_t v18 = v28;
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v27, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v15, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v7 = v31;
    swift_slowDealloc();
  }
  else
  {
  }
  os_log_t v19 = *(void **)&v2[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue];
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v2;
  *(void *)(v20 + 24) = v10;
  aBlock[4] = (uint64_t)sub_1001001A0;
  void aBlock[5] = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000DB998;
  void aBlock[3] = (uint64_t)&unk_100267108;
  unint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = v10;
  id v23 = v19;
  uint64_t v24 = v2;
  id v25 = v32;
  sub_1001EBA80();
  uint64_t v34 = _swiftEmptyArrayStorage;
  sub_100100448((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v21);

  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v25, v8);
  swift_release();
}

uint64_t sub_1000FBB90(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_currentModifyBatchResponse);
  swift_beginAccess();
  swift_retain();
  uint64_t v4 = (void *)sub_1001C0A2C((unint64_t)a1);
  swift_endAccess();

  swift_beginAccess();
  id v5 = a1;
  sub_1001EC5C0();
  if (*(void *)((*(void *)(v3 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1001EC610();
  sub_1001EC640();
  sub_1001EC600();
  swift_endAccess();
  return swift_release();
}

uint64_t BDSSyncEnginePipeline.failedToDeleteRecordWith(recordID:error:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1001EBAA0();
  uint64_t v37 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v35 = v2;
  uint64_t v36 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v11 = a1;
  os_log_type_t v12 = sub_1001EB540();
  os_log_type_t v13 = sub_1001EC910();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v34 = v8;
    uint64_t v16 = v15;
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)uint64_t v16 = 136315394;
    os_log_t v31 = v12;
    id v38 = (void *)sub_1001A8090(0xD000000000000029, 0x8000000100224D60, aBlock);
    sub_1001ECBC0();
    *(_WORD *)(v16 + 12) = 2112;
    int v30 = v14;
    id v38 = v11;
    uint64_t v17 = v6;
    os_log_t v18 = v11;
    sub_1001ECBC0();
    void *v32 = v11;

    uint64_t v6 = v17;
    os_log_t v19 = v31;
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v30, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v16, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v8 = v34;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v20 = v35;
  unint64_t v21 = *(void **)&v35[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue];
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v20;
  uint64_t v22[3] = v11;
  void v22[4] = a2;
  aBlock[4] = (uint64_t)sub_10010019C;
  void aBlock[5] = (uint64_t)v22;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000DB998;
  void aBlock[3] = (uint64_t)&unk_100267158;
  id v23 = _Block_copy(aBlock);
  uint64_t v24 = v11;
  id v25 = v21;
  id v26 = v20;
  swift_errorRetain();
  int v27 = v36;
  sub_1001EBA80();
  id v38 = _swiftEmptyArrayStorage;
  sub_100100448((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v23);

  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v27, v9);
  return swift_release();
}

uint64_t sub_1000FC134(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = v2 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType);
  unint64_t v7 = *(void *)(v5 + 8);
  id v38 = a1 + 2;
  swift_beginAccess();
  unint64_t v8 = a1[2];
  swift_beginAccess();
  unint64_t v9 = a1[3];
  swift_beginAccess();
  unint64_t v10 = a1[4];
  swift_beginAccess();
  unint64_t v11 = a1[5];
  uint64_t v36 = v6;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  os_log_type_t v13 = sub_1001EB540();
  unint64_t v14 = v8 >> 62;
  unint64_t v40 = v9 >> 62;
  unint64_t v41 = v10 >> 62;
  uint64_t v37 = v12;
  if (v12)
  {
    os_log_type_t v15 = sub_1001EC8F0();
    if (os_log_type_enabled(v13, v15))
    {
      os_log_type_t v34 = v15;
      uint64_t v35 = v13;
      uint64_t v16 = swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136316418;
      sub_1001A8090(0xD000000000000019, 0x8000000100225180, &aBlock);
      sub_1001ECBC0();
      *(_WORD *)(v16 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1001A8090(v36, v7, &aBlock);
      unint64_t v14 = v8 >> 62;
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 22) = 2048;
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1001ECEA0();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 32) = 2048;
      if (!v40) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_17:
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  uint64_t v17 = sub_1001EC910();
  if (!os_log_type_enabled(v13, (os_log_type_t)v17)) {
    goto LABEL_17;
  }
  os_log_type_t v34 = v17;
  uint64_t v35 = v13;
  uint64_t v16 = swift_slowAlloc();
  uint64_t aBlock = swift_slowAlloc();
  *(_DWORD *)uint64_t v16 = 136316418;
  sub_1001A8090(0xD000000000000019, 0x8000000100225180, &aBlock);
  sub_1001ECBC0();
  *(_WORD *)(v16 + 12) = 2080;
  swift_bridgeObjectRetain();
  sub_1001A8090(v36, v7, &aBlock);
  unint64_t v14 = v8 >> 62;
  sub_1001ECBC0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v16 + 22) = 2048;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1001ECBC0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 32) = 2048;
  if (!v40) {
    goto LABEL_8;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  sub_1001ECEA0();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  sub_1001ECBC0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 42) = 2048;
  if (v41)
  {
    swift_bridgeObjectRetain();
    sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1001ECBC0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 52) = 2048;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1001ECBC0();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v35, v34, "BDSSyncEnginePipeline - %s: [%s] %ld savedCloudDatas, %ld deletedRecordIDs, %ld serverVersionRecords, %ld failedRecordIDs", (uint8_t *)v16, 0x3Eu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_20:
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18)
  {
    os_log_t v19 = *(void **)(v3 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_delegate);
    sub_10007DC14(&qword_100292708);
    Class isa = sub_1001EC5D0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v46 = j___s14bookdatastored25MarkedAsFinishedMechanismO8rawValueSivg;
    uint64_t v47 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    id v44 = sub_1001AE1A8;
    uint64_t v45 = &unk_1002676E0;
    unint64_t v21 = _Block_copy(&aBlock);
    [v19 syncProvider:v3 updateSyncGenerationFromCloudData:isa completion:v21];
    _Block_release(v21);

    if (!v40) {
      goto LABEL_24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (!v40)
    {
LABEL_24:
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_25;
      }
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1001ECEA0();
  swift_bridgeObjectRelease();
  if (v31)
  {
LABEL_25:
    uint64_t v22 = *(void **)(v3 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_delegate);
    sub_100081668(0, (unint64_t *)&unk_100293740);
    Class v23 = sub_1001EC5D0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v46 = MarkedAsFinishedMechanism.rawValue.getter;
    uint64_t v47 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    id v44 = sub_1001AE1A8;
    uint64_t v45 = &unk_100267708;
    uint64_t v24 = _Block_copy(&aBlock);
    [v22 syncProvider:v3 removeCloudDataForIDs:v23 completion:v24];
    _Block_release(v24);

    if (!v41) {
      goto LABEL_26;
    }
    goto LABEL_32;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  if (!v41)
  {
LABEL_26:
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_27;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_28;
    }
    goto LABEL_34;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1001ECEA0();
  swift_bridgeObjectRelease();
  if (!v32) {
    goto LABEL_33;
  }
LABEL_27:
  id v25 = *(void **)(v3 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_delegate);
  sub_100081668(0, (unint64_t *)&unk_1002915B0);
  Class v26 = sub_1001EC5D0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v46 = j___s14bookdatastored25MarkedAsFinishedMechanismO8rawValueSivg;
  uint64_t v47 = 0;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  id v44 = sub_1001AE1A8;
  uint64_t v45 = &unk_100267730;
  int v27 = _Block_copy(&aBlock);
  [v25 syncProvider:v3 resolveConflictsForRecords:v26 completion:v27];
  _Block_release(v27);

  if (v37)
  {
LABEL_28:
    os_log_t v28 = *(void **)(v3 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_delegate);
    sub_100081668(0, (unint64_t *)&unk_100293740);
    Class v29 = sub_1001EC5D0().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v46 = j___s14bookdatastored25MarkedAsFinishedMechanismO8rawValueSivg;
    uint64_t v47 = 0;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    id v44 = sub_1001AE1A8;
    uint64_t v45 = &unk_100267758;
    int v30 = _Block_copy(&aBlock);
    [v28 syncProvider:v3 failedRecordIDs:v29 completion:v30];
    _Block_release(v30);

    goto LABEL_35;
  }
LABEL_34:
  swift_bridgeObjectRelease();
LABEL_35:
  void *v38 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  a1[3] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  a1[4] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  a1[5] = _swiftEmptyArrayStorage;
  uint64_t result = swift_bridgeObjectRelease();
  if (a2) {
    return sub_1000FF6AC();
  }
  return result;
}

void sub_1000FCBFC(void *a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v92 = a2;
  swift_errorRetain();
  sub_10007DC14(&qword_1002929F0);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    uint64_t v5 = (uint64_t)v91;
    unint64_t v92 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v6 = sub_1001EC240();
    if (v6)
    {
      unint64_t v7 = (void *)v6;
      uint64_t v90 = (uint64_t)v91;
      sub_100100448(&qword_100291670, type metadata accessor for CKError);
      sub_1001EAE20();
      if (v91 == (id)14)
      {
        id v8 = a1;
        id v9 = (id)0xE;
        id v10 = v8;
        id v11 = v9;
        uint64_t v12 = sub_1001EB540();
        os_log_type_t v13 = sub_1001EC8D0();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = swift_slowAlloc();
          uint64_t v83 = v2;
          os_log_type_t v15 = (void *)swift_slowAlloc();
          uint64_t v90 = swift_slowAlloc();
          *(_DWORD *)uint64_t v14 = 136315650;
          sub_1001A8090(0xD00000000000002ELL, 0x80000001002250E0, &v90);
          sub_1001ECBC0();
          *(_WORD *)(v14 + 12) = 2112;
          id v16 = v10;
          sub_1001ECBC0();
          *os_log_type_t v15 = v10;

          *(_WORD *)(v14 + 22) = 2112;
          id v17 = v11;
          id v9 = (id)_swift_stdlib_bridgeErrorToNSError();
          sub_1001ECBC0();
          v15[1] = v9;

          _os_log_impl((void *)&_mh_execute_header, v12, v13, "BDSSyncEnginePipeline - %s: CKErrorServerRecordChanged record %@ perRecordError %@", (uint8_t *)v14, 0x20u);
          sub_10007DC14(&qword_100293190);
          swift_arrayDestroy();
          uint64_t v3 = v83;
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v5 = 14;
        if (((unint64_t)&_swiftEmptyDictionarySingleton & 0xC000000000000001) != 0)
        {
          if ((uint64_t)&_swiftEmptyDictionarySingleton < 0) {
            uint64_t v59 = &_swiftEmptyDictionarySingleton;
          }
          else {
            uint64_t v59 = (void *)((unint64_t)&_swiftEmptyDictionarySingleton & 0xFFFFFFFFFFFFFF8);
          }
          id v60 = v10;
          id v61 = v7;
          uint64_t v62 = sub_1001ECE50();
          if (__OFADD__(v62, 1))
          {
            __break(1u);
LABEL_55:
            swift_once();
LABEL_16:
            id v44 = (void *)static BDSSyncEngine.shared;
            sub_10007DC14(&qword_100293470);
            uint64_t v45 = swift_allocObject();
            *(_OWORD *)(v45 + 16) = xmmword_100217610;
            uint64_t v46 = *(void **)(v3 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_zoneID);
            *(void *)(v45 + 32) = v46;
            uint64_t v90 = v45;
            sub_1001EC600();
            unint64_t v47 = v90;
            id v48 = v44;
            id v49 = v46;
            sub_10018C24C(v47);

            swift_bridgeObjectRelease();
LABEL_17:
            id v50 = v9;
            sub_1001EC5C0();
            if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1001EC610();
            }
            sub_1001EC640();
            sub_1001EC600();
            int v51 = 0;
LABEL_20:
            uint64_t v52 = (uint64_t)&_swiftEmptyDictionarySingleton;
            if (((unint64_t)&_swiftEmptyDictionarySingleton & 0xC000000000000001) == 0)
            {
LABEL_21:
              if (!*(void *)(v52 + 16))
              {
LABEL_31:
                unint64_t v58 = v92;
                if (v92 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v74 = sub_1001ECEA0();
                  swift_bridgeObjectRelease();
                  if (v74)
                  {
LABEL_33:
                    swift_retain();
                    sub_1000FF330(v58);
                    swift_bridgeObjectRelease();
                    swift_release();
                    if (!v51) {
                      goto LABEL_53;
                    }
                    goto LABEL_50;
                  }
                }
                else if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  goto LABEL_33;
                }
                swift_bridgeObjectRelease();
                if (!v51)
                {
LABEL_53:

                  swift_bridgeObjectRelease();
                  return;
                }
LABEL_50:
                sub_100081668(0, (unint64_t *)&unk_100296550);
                id v75 = [*(id *)(v3 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_zoneID) zoneName];
                uint64_t v76 = sub_1001EC370();
                unint64_t v78 = v77;

                v94._countAndFlagsBits = sub_1001EC370();
                v94._object = v79;
                v93._countAndFlagsBits = v76;
                v93._object = v78;
                v80.super.Class isa = sub_1001EC920(v93, v94).super.isa;
                id v81 = [objc_allocWithZone((Class)CKRecordZone) initWithZoneID:v80.super.isa];
                if (qword_100291188 != -1) {
                  swift_once();
                }
                id v82 = (id)static BDSSyncEngine.shared;
                BDSSyncEngine.resetCloudKitZone(_:)((CKRecordZone)v81);

                goto LABEL_53;
              }
LABEL_30:
              swift_retain();
              unint64_t v57 = swift_bridgeObjectRetain();
              sub_1000FEEFC(v57);
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_31;
            }
LABEL_29:
            swift_bridgeObjectRetain();
            uint64_t v56 = sub_1001ECE50();
            swift_bridgeObjectRelease();
            if (!v56) {
              goto LABEL_31;
            }
            goto LABEL_30;
          }
          uint64_t v55 = (void *)sub_10019A404((uint64_t)v59, v62 + 1);
        }
        else
        {
          id v53 = v10;
          id v54 = v7;
          uint64_t v55 = &_swiftEmptyDictionarySingleton;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v90 = (uint64_t)v55;
        sub_10019A8B4((uint64_t)v7, v10, isUniquelyReferenced_nonNull_native);
        uint64_t v52 = v90;

        swift_bridgeObjectRelease();
        int v51 = 0;
        if ((v52 & 0xC000000000000001) == 0) {
          goto LABEL_21;
        }
        goto LABEL_29;
      }
      uint64_t v85 = v2;
      id v35 = v91;
      id v36 = v7;
      id v37 = v35;
      id v38 = v36;
      os_log_type_t v39 = sub_1001EB540();
      os_log_type_t v40 = sub_1001EC8F0();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v87 = (uint64_t)v91;
        uint64_t v42 = (void *)swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 136315650;
        sub_1001A8090(0xD00000000000002ELL, 0x80000001002250E0, &v90);
        sub_1001ECBC0();
        *(_WORD *)(v41 + 12) = 2112;
        id v38 = v38;
        sub_1001ECBC0();
        *uint64_t v42 = v7;

        *(_WORD *)(v41 + 22) = 2112;
        id v43 = v37;
        uint64_t v89 = _swift_stdlib_bridgeErrorToNSError();
        sub_1001ECBC0();
        v42[1] = v89;

        _os_log_impl((void *)&_mh_execute_header, v39, v40, "BDSSyncEnginePipeline - %s: Unhandled error for record %@ perRecordError %@", (uint8_t *)v41, 0x20u);
        sub_10007DC14(&qword_100293190);
        swift_arrayDestroy();
        uint64_t v5 = v87;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      int v51 = 0;
      uint64_t v52 = (uint64_t)&_swiftEmptyDictionarySingleton;
    }
    else
    {
      id v25 = a1;
      id v26 = v91;
      id v9 = v25;
      id v27 = v26;
      os_log_t v28 = sub_1001EB540();
      os_log_type_t v29 = sub_1001EC8F0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v86 = (uint64_t)v91;
        uint64_t v30 = swift_slowAlloc();
        uint64_t v31 = (void *)swift_slowAlloc();
        id v91 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315650;
        sub_1001A8090(0xD00000000000002ELL, 0x80000001002250E0, (uint64_t *)&v91);
        sub_1001ECBC0();
        *(_WORD *)(v30 + 12) = 2112;
        id v32 = v27;
        uint64_t v84 = v3;
        id v33 = v9;
        sub_1001ECBC0();
        void *v31 = v9;

        *(_WORD *)(v30 + 22) = 2112;
        id v34 = v27;
        uint64_t v90 = _swift_stdlib_bridgeErrorToNSError();
        sub_1001ECBC0();
        v31[1] = v90;
        uint64_t v3 = v84;

        id v27 = v32;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "BDSSyncEnginePipeline - %s: Unable to retrieve serverRecord for recordID %@ perRecordError %@", (uint8_t *)v30, 0x20u);
        sub_10007DC14(&qword_100293190);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v5 = v86;
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v90 = (uint64_t)v27;
      sub_100100448(&qword_100291670, type metadata accessor for CKError);
      sub_1001EAE20();
      switch((unint64_t)v91)
      {
        case 0xEuLL:
        case 0x15uLL:
          goto LABEL_17;
        case 0x1AuLL:
        case 0x1CuLL:
          if (qword_100291188 == -1) {
            goto LABEL_16;
          }
          goto LABEL_55;
        default:
          uint64_t v90 = (uint64_t)v27;
          if (sub_1001EAE40() == 112)
          {
            int v51 = 1;
            goto LABEL_20;
          }
          uint64_t v85 = v3;
          uint64_t v88 = v5;
          id v64 = v9;
          id v65 = v27;
          id v66 = v64;
          id v67 = v65;
          uint64_t v68 = sub_1001EB540();
          os_log_type_t v69 = sub_1001EC8F0();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = swift_slowAlloc();
            uint64_t v71 = (void *)swift_slowAlloc();
            id v91 = (id)swift_slowAlloc();
            *(_DWORD *)uint64_t v70 = 136315650;
            sub_1001A8090(0xD00000000000002ELL, 0x80000001002250E0, (uint64_t *)&v91);
            sub_1001ECBC0();
            *(_WORD *)(v70 + 12) = 2112;
            id v72 = v66;
            sub_1001ECBC0();
            void *v71 = v66;

            *(_WORD *)(v70 + 22) = 2112;
            id v73 = v67;
            uint64_t v90 = _swift_stdlib_bridgeErrorToNSError();
            sub_1001ECBC0();
            v71[1] = v90;

            _os_log_impl((void *)&_mh_execute_header, v68, v69, "BDSSyncEnginePipeline - %s: Unhandled error for recordID %@ perRecordError %@", (uint8_t *)v70, 0x20u);
            sub_10007DC14(&qword_100293190);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          int v51 = 0;
          uint64_t v52 = (uint64_t)&_swiftEmptyDictionarySingleton;
          uint64_t v5 = v88;
          break;
      }
    }
    uint64_t v3 = v85;
    if (((unint64_t)&_swiftEmptyDictionarySingleton & 0xC000000000000001) == 0) {
      goto LABEL_21;
    }
    goto LABEL_29;
  }
  swift_errorRetain();
  id v18 = a1;
  swift_errorRetain();
  id v19 = v18;
  uint64_t v20 = sub_1001EB540();
  os_log_type_t v21 = sub_1001EC8F0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    Class v23 = (void *)swift_slowAlloc();
    unint64_t v92 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315650;
    sub_1001A8090(0xD00000000000002ELL, 0x80000001002250E0, (uint64_t *)&v92);
    sub_1001ECBC0();
    *(_WORD *)(v22 + 12) = 2112;
    id v24 = v19;
    sub_1001ECBC0();
    void *v23 = v19;

    *(_WORD *)(v22 + 22) = 2112;
    swift_errorRetain();
    id v91 = (id)_swift_stdlib_bridgeErrorToNSError();
    sub_1001ECBC0();
    v23[1] = v91;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "BDSSyncEnginePipeline - %s: Error modifying record:%@ error=%@", (uint8_t *)v22, 0x20u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
}

Swift::Void __swiftcall BDSSyncEnginePipeline.didCompleteModifyRecordsBatch()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001EBA60();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EBAA0();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType];
  unint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType + 8];
  swift_bridgeObjectRetain_n();
  id v10 = sub_1001EB540();
  os_log_type_t v11 = sub_1001EC910();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = v2;
    uint64_t v13 = v12;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v20 = v3;
    id v25 = (void *)sub_1001A8090(0xD00000000000001FLL, 0x8000000100224D90, aBlock);
    sub_1001ECBC0();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    id v25 = (void *)sub_1001A8090(v8, v9, aBlock);
    uint64_t v3 = v20;
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "BDSSyncEnginePipeline - %s: [%s]", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v21;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_workQueue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v1;
  aBlock[4] = (uint64_t)sub_100100278;
  void aBlock[5] = v15;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000DB998;
  void aBlock[3] = (uint64_t)&unk_1002671A8;
  id v16 = _Block_copy(aBlock);
  id v17 = v14;
  id v18 = v1;
  sub_1001EBA80();
  id v25 = _swiftEmptyArrayStorage;
  sub_100100448((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  id v19 = v22;
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v19, v2);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  swift_release();
}

uint64_t sub_1000FE018()
{
  uint64_t v0 = (void *)swift_retain();
  sub_1000FC134(v0, 1);
  return swift_release();
}

void sub_1000FE068(void *a1)
{
  id v2 = a1;
  oslog = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    sub_1001A8090(0xD000000000000025, 0x80000001002250B0, &v8);
    sub_1001ECBC0();
    *(_WORD *)(v4 + 12) = 2112;
    if (a1) {
      id v6 = v2;
    }
    sub_1001ECBC0();
    void *v5 = a1;

    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v4, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1000FE2C0(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = a1;
  unint64_t v10 = *(void *)(v5 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType + 8);
  uint64_t v70 = *(void *)(v5 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline_recordType);
  if (a1 >> 62) {
    goto LABEL_76;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_77:
    return swift_bridgeObjectRelease();
  }
  while (2)
  {
    if (v11 >= 1)
    {
      uint64_t v68 = (void *)a2;
      os_log_type_t v69 = (void *)a3;
      uint64_t v12 = 0;
      unint64_t v73 = v9 & 0xC000000000000001;
      uint64_t v67 = v5;
      uint64_t v71 = v9;
      unint64_t v74 = v10;
      uint64_t v72 = v11;
      while (1)
      {
        if (v73) {
          id v13 = (id)sub_1001ECD50();
        }
        else {
          id v13 = *(id *)(v9 + 8 * v12 + 32);
        }
        id v14 = v13;
        id v15 = [v13 systemFields];
        if (!v15)
        {
          swift_bridgeObjectRetain_n();
          id v21 = v14;
          uint64_t v22 = sub_1001EB540();
          os_log_type_t v23 = sub_1001EC8F0();
          a2 = v23;
          if (os_log_type_enabled(v22, v23))
          {
            uint64_t v24 = swift_slowAlloc();
            id v25 = (void *)swift_slowAlloc();
            unint64_t v75 = swift_slowAlloc();
            *(_DWORD *)uint64_t v24 = 136315394;
            swift_bridgeObjectRetain();
            *(void *)(v24 + 4) = sub_1001A8090(v70, v74, (uint64_t *)&v75);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v24 + 12) = 2112;
            *(void *)(v24 + 14) = v21;
            void *v25 = v21;

            _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)a2, "BDSSyncEnginePipeline - [%s] Unable to retrieve systemFields from %@", (uint8_t *)v24, 0x16u);
            sub_10007DC14(&qword_100293190);
            swift_arrayDestroy();
            uint64_t v11 = v72;
            swift_slowDealloc();
            swift_arrayDestroy();
            unint64_t v10 = v74;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
          goto LABEL_7;
        }
        id v16 = v15;
        if ([v14 deletedFlag]) {
          break;
        }
        id v26 = sub_1000F88F4(v14);
        if (v26)
        {
          id v18 = v26;
          id v27 = [v26 recordID];
          os_log_t v28 = v27;
          uint64_t v29 = *a4;
          if ((*a4 & 0xC000000000000001) != 0)
          {
            a2 = (unint64_t)v27;
            uint64_t v30 = sub_1001ECE60();

            if (!v30) {
              goto LABEL_58;
            }
            sub_100081668(0, &qword_100292788);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            a2 = v75;
            swift_unknownObjectRelease();
          }
          else
          {
            if (!*(void *)(v29 + 16) || (unint64_t v55 = sub_1001A8818((uint64_t)v27), (v56 & 1) == 0))
            {
LABEL_58:

LABEL_59:
              unint64_t v10 = (unint64_t)[v18 recordID];
              a3 = *a4;
              if ((*a4 & 0xC000000000000001) != 0)
              {
                if (a3 >= 0) {
                  a3 &= 0xFFFFFFFFFFFFFF8uLL;
                }
                id v62 = v14;
                uint64_t v63 = sub_1001ECE50();
                if (__OFADD__(v63, 1)) {
                  goto LABEL_75;
                }
                *a4 = sub_10019A3D4(a3, v63 + 1);
              }
              else
              {
                id v64 = v14;
              }
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v75 = *a4;
              *a4 = 0x8000000000000000;
              sub_10019A888((uint64_t)v14, (void *)v10, isUniquelyReferenced_nonNull_native);
              *a4 = v75;

              swift_bridgeObjectRelease();
              a2 = v18;
              sub_1001EC5C0();
              if (*(void *)((*v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1001EC610();
              }
              sub_1001EC640();
              sub_1001EC600();

              unint64_t v10 = v74;
              goto LABEL_6;
            }
            a2 = (unint64_t)*(id *)(*(void *)(v29 + 56) + 8 * v55);
          }

          if (!a2) {
            goto LABEL_59;
          }
          unint64_t v10 = v74;
          swift_bridgeObjectRetain_n();
          id v57 = v14;
          unint64_t v58 = sub_1001EB540();
          os_log_type_t v59 = sub_1001EC8F0();
          a2 = v59;
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v60 = swift_slowAlloc();
            id v61 = (void *)swift_slowAlloc();
            unint64_t v75 = swift_slowAlloc();
            *(_DWORD *)uint64_t v60 = 136315394;
            swift_bridgeObjectRetain();
            *(void *)(v60 + 4) = sub_1001A8090(v70, v74, (uint64_t *)&v75);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v60 + 12) = 2112;
            *(void *)(v60 + 14) = v57;
            *id v61 = v57;

            _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)a2, "BDSSyncEnginePipeline - [%s] cloudDataMap already contans an entry for saving %@", (uint8_t *)v60, 0x16u);
            sub_10007DC14(&qword_100293190);
            swift_arrayDestroy();
            uint64_t v5 = v67;
            swift_slowDealloc();
            swift_arrayDestroy();
            uint64_t v9 = v71;
            swift_slowDealloc();
            unint64_t v10 = v74;
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
          goto LABEL_51;
        }

LABEL_6:
        uint64_t v11 = v72;
LABEL_7:
        if (v11 == ++v12) {
          return swift_bridgeObjectRelease();
        }
      }
      id v17 = [v16 recordID];
      id v18 = v17;
      uint64_t v19 = *a4;
      if ((*a4 & 0xC000000000000001) != 0)
      {
        id v20 = v17;
        if (sub_1001ECE60())
        {
          sub_100081668(0, &qword_100292788);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          a2 = v75;
          swift_unknownObjectRelease();
          goto LABEL_27;
        }
      }
      else
      {
        if (!*(void *)(v19 + 16)) {
          goto LABEL_31;
        }
        unint64_t v31 = sub_1001A8818((uint64_t)v17);
        if (v32)
        {
          a2 = (unint64_t)*(id *)(*(void *)(v19 + 56) + 8 * v31);
LABEL_27:

          if (a2)
          {
            swift_bridgeObjectRetain_n();
            id v14 = v14;
            id v33 = sub_1001EB540();
            os_log_type_t v34 = sub_1001EC8F0();
            a2 = v34;
            if (os_log_type_enabled(v33, v34))
            {
              uint64_t v35 = swift_slowAlloc();
              id v36 = (void *)swift_slowAlloc();
              unint64_t v75 = swift_slowAlloc();
              *(_DWORD *)uint64_t v35 = 136315394;
              swift_bridgeObjectRetain();
              *(void *)(v35 + 4) = sub_1001A8090(v70, v74, (uint64_t *)&v75);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v35 + 12) = 2112;
              *(void *)(v35 + 14) = v14;
              *id v36 = v14;

              _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)a2, "BDSSyncEnginePipeline - [%s] cloudDataMap already contans an entry for deleting %@", (uint8_t *)v35, 0x16u);
              sub_10007DC14(&qword_100293190);
              swift_arrayDestroy();
              uint64_t v5 = v67;
              swift_slowDealloc();
              swift_arrayDestroy();
              uint64_t v9 = v71;
              swift_slowDealloc();
              unint64_t v10 = v74;
              swift_slowDealloc();
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }
LABEL_50:

LABEL_51:
            goto LABEL_6;
          }
LABEL_31:
          a3 = *a4;
          if ((*a4 & 0xC000000000000001) != 0)
          {
            if (a3 >= 0) {
              a3 &= 0xFFFFFFFFFFFFFF8uLL;
            }
            id v37 = v18;
            id v38 = v14;
            uint64_t v39 = sub_1001ECE50();
            if (__OFADD__(v39, 1)) {
              goto LABEL_73;
            }
            *a4 = sub_10019A3D4(a3, v39 + 1);
          }
          else
          {
            id v40 = v18;
            id v41 = v14;
          }
          uint64_t v9 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v75 = *a4;
          a3 = v75;
          *a4 = 0x8000000000000000;
          unint64_t v10 = sub_1001A8818((uint64_t)v18);
          uint64_t v43 = *(void *)(a3 + 16);
          BOOL v44 = (v42 & 1) == 0;
          uint64_t v45 = v43 + v44;
          if (__OFADD__(v43, v44))
          {
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            swift_bridgeObjectRetain();
            uint64_t v11 = sub_1001ECEA0();
            if (!v11) {
              goto LABEL_77;
            }
            continue;
          }
          a2 = v42;
          if (*(void *)(a3 + 24) >= v45)
          {
            if ((v9 & 1) == 0) {
              sub_1001AC410();
            }
          }
          else
          {
            sub_1001AA118(v45, v9);
            unint64_t v46 = sub_1001A8818((uint64_t)v18);
            if ((a2 & 1) != (v47 & 1)) {
              goto LABEL_81;
            }
            unint64_t v10 = v46;
          }
          uint64_t v9 = v71;
          a3 = v75;
          if (a2)
          {
            uint64_t v48 = *(void *)(v75 + 56);
            uint64_t v49 = 8 * v10;

            *(void *)(v48 + v49) = v14;
          }
          else
          {
            *(void *)(v75 + 8 * (v10 >> 6) + 64) |= 1 << v10;
            uint64_t v50 = 8 * v10;
            *(void *)(*(void *)(a3 + 48) + v50) = v18;
            *(void *)(*(void *)(a3 + 56) + v50) = v14;
            uint64_t v51 = *(void *)(a3 + 16);
            BOOL v52 = __OFADD__(v51, 1);
            uint64_t v53 = v51 + 1;
            if (v52) {
              goto LABEL_74;
            }
            *(void *)(a3 + 16) = v53;
            id v54 = v18;
          }
          *a4 = a3;
          swift_bridgeObjectRelease();
          sub_1001EC5C0();
          a2 = *(void *)((*v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
          unint64_t v10 = v74;
          if (a2 >= *(void *)((*v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1001EC610();
          }
          sub_1001EC640();
          sub_1001EC600();
          goto LABEL_50;
        }
      }

      goto LABEL_31;
    }
    break;
  }
  __break(1u);
LABEL_81:
  sub_100081668(0, (unint64_t *)&unk_100293740);
  uint64_t result = sub_1001ED0E0();
  __break(1u);
  return result;
}

void BDSSyncEnginePipeline.init()()
{
}

id BDSSyncEnginePipeline.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BDSSyncEnginePipeline();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1000FEEFC(unint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v34 = 0;
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    unint64_t v4 = sub_1001ECE40() | 0x8000000000000000;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v2 = ~v5;
    unint64_t v34 = a1 + 64;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v3 = v7 & *(void *)(a1 + 64);
    unint64_t v4 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v33 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v9 = (uint64_t *)(v1 + 48);
  while (1)
  {
    uint64_t v10 = v8;
    if ((v4 & 0x8000000000000000) != 0)
    {
      if (!sub_1001ECE70()) {
        goto LABEL_45;
      }
      swift_unknownObjectRelease();
      sub_100081668(0, (unint64_t *)&unk_1002915B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v13 = v36;
      swift_unknownObjectRelease();
      if (!v36) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v3)
      {
        unint64_t v11 = __clz(__rbit64(v3));
        v3 &= v3 - 1;
        unint64_t v12 = v11 | (v8 << 6);
      }
      else
      {
        int64_t v14 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_47;
        }
        if (v14 >= v33) {
          goto LABEL_45;
        }
        unint64_t v15 = *(void *)(v34 + 8 * v14);
        ++v8;
        if (!v15)
        {
          uint64_t v8 = v10 + 2;
          if (v10 + 2 >= v33) {
            goto LABEL_45;
          }
          unint64_t v15 = *(void *)(v34 + 8 * v8);
          if (!v15)
          {
            uint64_t v8 = v10 + 3;
            if (v10 + 3 >= v33) {
              goto LABEL_45;
            }
            unint64_t v15 = *(void *)(v34 + 8 * v8);
            if (!v15)
            {
              uint64_t v8 = v10 + 4;
              if (v10 + 4 >= v33) {
                goto LABEL_45;
              }
              unint64_t v15 = *(void *)(v34 + 8 * v8);
              if (!v15)
              {
                uint64_t v8 = v10 + 5;
                if (v10 + 5 >= v33) {
                  goto LABEL_45;
                }
                unint64_t v15 = *(void *)(v34 + 8 * v8);
                if (!v15)
                {
                  uint64_t v16 = v10 + 6;
                  while (v33 != v16)
                  {
                    unint64_t v15 = *(void *)(v34 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v8 = v16 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_45:
                  sub_1000B251C();
                  swift_beginAccess();
                  uint64_t v32 = swift_bridgeObjectRetain();
                  sub_1001B7084(v32);
                  swift_endAccess();
                  return;
                }
              }
            }
          }
        }
LABEL_31:
        unint64_t v3 = (v15 - 1) & v15;
        unint64_t v12 = __clz(__rbit64(v15)) + (v8 << 6);
      }
      id v13 = *(id *)(*(void *)(v4 + 56) + 8 * v12);
      if (!v13) {
        goto LABEL_45;
      }
    }
    id v17 = [v13 recordID];
    swift_beginAccess();
    uint64_t v18 = *v9;
    if ((*v9 & 0xC000000000000001) != 0) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1001A8818((uint64_t)v17);
    char v29 = v28;
    swift_bridgeObjectRelease();
    if (v29)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = *v9;
      uint64_t v35 = *v9;
      uint64_t *v9 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1001AC410();
        uint64_t v31 = v35;
      }

      id v21 = *(void **)(*(void *)(v31 + 56) + 8 * v27);
      sub_100152570(v27, v31);
      uint64_t *v9 = v31;
      goto LABEL_8;
    }
    id v21 = 0;
LABEL_9:
    swift_endAccess();
  }
  if (v18 < 0) {
    uint64_t v19 = *v9;
  }
  else {
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v20 = v17;
  id v21 = (void *)sub_1001ECE60();

  if (!v21)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_unknownObjectRelease();
  uint64_t v22 = sub_1001ECE50();
  Swift::Int v23 = sub_10019A3D4(v19, v22);
  swift_retain();
  unint64_t v24 = sub_1001A8818((uint64_t)v20);
  char v26 = v25;
  swift_release();
  if (v26)
  {

    id v21 = *(void **)(*(void *)(v23 + 56) + 8 * v24);
    sub_100152570(v24, v23);
    uint64_t *v9 = v23;
    goto LABEL_8;
  }
  __break(1u);
LABEL_47:
  __break(1u);
}

uint64_t sub_1000FF330(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v4)
  {
    while (v4 >= 1)
    {
      uint64_t v6 = (uint64_t *)(v2 + 48);
      if ((a1 & 0xC000000000000001) == 0)
      {
        uint64_t v20 = 0;
        while (1)
        {
          unint64_t v27 = *(void **)(a1 + 8 * v20 + 32);
          swift_beginAccess();
          uint64_t v28 = *v6;
          if ((*v6 & 0xC000000000000001) != 0)
          {
            if (v28 < 0) {
              uint64_t v29 = *v6;
            }
            else {
              uint64_t v29 = v28 & 0xFFFFFFFFFFFFFF8;
            }
            id v30 = v27;
            swift_bridgeObjectRetain();
            if (!sub_1001ECE60())
            {
              swift_bridgeObjectRelease();
LABEL_32:
              char v26 = 0;
              goto LABEL_22;
            }
            swift_unknownObjectRelease();
            uint64_t v21 = sub_1001ECE50();
            Swift::Int v22 = sub_10019A3D4(v29, v21);
            swift_retain();
            unint64_t v23 = sub_1001A8818((uint64_t)v30);
            char v25 = v24;
            swift_release();
            if ((v25 & 1) == 0) {
              goto LABEL_34;
            }
          }
          else
          {
            id v31 = v27;
            swift_bridgeObjectRetain();
            unint64_t v23 = sub_1001A8818((uint64_t)v31);
            char v33 = v32;
            swift_bridgeObjectRelease();
            if ((v33 & 1) == 0) {
              goto LABEL_32;
            }
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            Swift::Int v22 = *v6;
            Swift::Int v37 = *v6;
            *uint64_t v6 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1001AC410();
              Swift::Int v22 = v37;
            }
          }

          char v26 = *(void **)(*(void *)(v22 + 56) + 8 * v23);
          sub_100152570(v23, v22);
          *uint64_t v6 = v22;
          swift_bridgeObjectRelease();
LABEL_22:
          ++v20;
          swift_endAccess();

          if (v4 == v20) {
            goto LABEL_36;
          }
        }
      }
      uint64_t v7 = 0;
      while (1)
      {
        uint64_t v14 = sub_1001ECD50();
        swift_beginAccess();
        uint64_t v15 = *v6;
        if ((*v6 & 0xC000000000000001) == 0)
        {
          swift_bridgeObjectRetain();
          unint64_t v10 = sub_1001A8818(v14);
          char v18 = v17;
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0) {
            goto LABEL_18;
          }
          char v19 = swift_isUniquelyReferenced_nonNull_native();
          Swift::Int v9 = *v6;
          Swift::Int v36 = *v6;
          *uint64_t v6 = 0x8000000000000000;
          if ((v19 & 1) == 0)
          {
            sub_1001AC410();
            Swift::Int v9 = v36;
          }
          goto LABEL_7;
        }
        if (v15 < 0) {
          uint64_t v16 = *v6;
        }
        else {
          uint64_t v16 = v15 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        if (!sub_1001ECE60())
        {
          swift_bridgeObjectRelease();
LABEL_18:
          id v13 = 0;
          goto LABEL_8;
        }
        swift_unknownObjectRelease();
        uint64_t v8 = sub_1001ECE50();
        Swift::Int v9 = sub_10019A3D4(v16, v8);
        swift_retain();
        unint64_t v10 = sub_1001A8818(v14);
        char v12 = v11;
        swift_release();
        if ((v12 & 1) == 0) {
          break;
        }
LABEL_7:

        id v13 = *(void **)(*(void *)(v9 + 56) + 8 * v10);
        sub_100152570(v10, v9);
        *uint64_t v6 = v9;
        swift_bridgeObjectRelease();
LABEL_8:
        ++v7;
        swift_endAccess();
        swift_unknownObjectRelease();

        if (v4 == v7) {
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      swift_bridgeObjectRetain();
      uint64_t result = sub_1001ECEA0();
      uint64_t v4 = result;
      if (!result) {
        goto LABEL_36;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v35 = swift_bridgeObjectRetain();
    sub_1001B706C(v35);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1000FF6AC()
{
  uint64_t v1 = (void *)(v0 + 48);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 48);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1001ECE50();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return result;
    }
  }
  else if (!*(void *)(v3 + 16))
  {
    return result;
  }
  swift_retain_n();
  uint64_t v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC8F0();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t type = v6;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_1001A8090(0x676F6C28656E6F64, 0xED0000293A726567, &v12);
    sub_1001ECBC0();
    *(_WORD *)(v7 + 12) = 2080;
    sub_100081668(0, (unint64_t *)&unk_100293740);
    sub_100081668(0, &qword_100292788);
    sub_100100404((unint64_t *)&unk_100293750, (unint64_t *)&unk_100293740);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1001EC2A0();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_1001A8090(v8, v10, &v12);
    sub_1001ECBC0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, type, "BDSSyncEnginePipeline - %s: Unexpected outstanding IDs: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  void *v1 = &_swiftEmptyDictionarySingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000FF96C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1000FF9C4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1001ED080() & 1;
  }
}

uint64_t sub_1000FFA1C(void *a1)
{
  return sub_1001006EC(a1) & 1;
}

void sub_1000FFA38()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline__hasPendingModifications) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000FFA50()
{
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FFA88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FFA98()
{
  return swift_release();
}

uint64_t sub_1000FFAA0(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  v17[3] = type metadata accessor for BDSSyncEnginePipeline();
  void v17[4] = &off_1002671D0;
  v17[0] = a1;
  id v6 = a1;
  NSString v7 = sub_1001EC340();
  uint64_t v8 = *(NSObject **)&a4[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_queue];
  sub_1000AF9BC((uint64_t)v17, (uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = v7;
  sub_10010080C(v16, v9 + 32);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100100824;
  *(void *)(v10 + 24) = v9;
  v15[4] = sub_1000AC2B4;
  void v15[5] = v10;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_100089470;
  v15[3] = &unk_100267528;
  char v11 = _Block_copy(v15);
  uint64_t v12 = a4;
  id v13 = v7;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);

  _Block_release(v11);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v13 & 1) == 0) {
    return sub_1000947F0((uint64_t)v17);
  }
  __break(1u);
  return result;
}