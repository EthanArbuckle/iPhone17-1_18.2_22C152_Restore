uint64_t sub_1000FFC68(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void v16[2];
  uint64_t v17;
  void *v18;
  void aBlock[6];

  v4 = sub_1001EBA60();
  v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1001EBAA0();
  v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(void *)(a2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_queue);
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1001007BC;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  aBlock[3] = &unk_1002674B0;
  v13 = _Block_copy(aBlock);
  swift_retain();
  v14 = a1;
  sub_1001EBA80();
  v18 = _swiftEmptyArrayStorage;
  sub_100100448((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  swift_release();
  return swift_release();
}

uint64_t sub_1000FFF6C()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_1000FFF8C, 0, 0);
}

uint64_t sub_1000FFF8C()
{
  uint64_t v7 = v0;
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC910();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)v3 = 136315138;
    *(void *)(v0 + 16) = sub_1001A8090(0xD000000000000011, 0x80000001002251A0, &v6);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "BDSSyncEnginePipeline - %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4(0);
}

void sub_10010010C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(v1 + 16)
                 + OBJC_IVAR____TtC14bookdatastored21BDSSyncEnginePipeline__hasPendingModifications);
}

uint64_t sub_100100124(uint64_t a1)
{
  return sub_1000F99B0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100100130()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100100170()
{
  sub_1000FAECC(*(void **)(v0 + 24));
}

uint64_t sub_1001001A0()
{
  return sub_1000FBB90(*(void **)(v0 + 24));
}

uint64_t sub_1001001CC()
{
  swift_errorRelease();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100100214()
{
  sub_1000FCBFC(*(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100100240()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100100278()
{
  return sub_1000FE018();
}

uint64_t type metadata accessor for BDSSyncEnginePipeline()
{
  uint64_t result = qword_1002935C8;
  if (!qword_1002935C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001002CC()
{
  return type metadata accessor for BDSSyncEnginePipeline();
}

uint64_t sub_1001002D4()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for _BDSSyncEngineModifyBatchResponse()
{
  return self;
}

uint64_t sub_1001003F4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100100404(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100081668(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100100448(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100100490()
{
}

uint64_t sub_100100498()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001004D0(uint64_t (*a1)(uint64_t))
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 16))();
  return a1(v3);
}

uint64_t sub_100100514()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100100550()
{
  return sub_1000F6148(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100100560()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001005A8()
{
  return sub_1000F6954(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001005B4()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001005EC(uint64_t a1)
{
  return sub_1000F7040(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001005F4()
{
  return sub_100100D5C((void (*)(void))&_swift_release);
}

uint64_t sub_10010060C(id *a1)
{
  return sub_1000F70B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100100614()
{
  return sub_100100D5C((void (*)(void))&_swift_release);
}

uint64_t sub_10010062C(void **a1)
{
  return sub_1000F7200(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_10010064C(void **a1)
{
  return sub_1000F7320(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100100660()
{
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001006A0()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t v2 = (*(uint64_t (**)(void))(v0 + 16))();
  return v1(v2);
}

void sub_1001006E4(void **a1)
{
}

uint64_t sub_1001006EC(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1001ED080() & 1;
  }
}

uint64_t sub_100100744()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10010077C()
{
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001007BC()
{
  sub_10018E980(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001007C4()
{
  sub_1000947F0(v0 + 32);
  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10010080C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100100824()
{
  return sub_10018F188(*(void *)(v0 + 16), *(void **)(v0 + 24), v0 + 32);
}

uint64_t sub_100100830()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100100840()
{
  uint64_t v1 = sub_1001EB560();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100100900()
{
  uint64_t v1 = *(void *)(sub_1001EB560() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + v3);
  unint64_t v5 = *(void *)(v0 + v3 + 8);
  unint64_t v6 = *(NSObject **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  sub_1000F6ECC(v0 + v2, v4, v5, v6);
}

uint64_t sub_10010099C()
{
  uint64_t v1 = sub_1001EB560();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100100A6C()
{
  uint64_t v1 = *(void *)(sub_1001EB560() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = *(void *)(v0 + v4);
  unint64_t v6 = *(NSObject **)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *(void *)(v0 + v3);
  unint64_t v8 = *(void *)(v0 + v3 + 8);
  sub_1000F6758(v0 + v2, v7, v8, v5, v6);
}

uint64_t sub_100100B14()
{
  _Block_release(*(const void **)(v0 + 24));
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100100B5C()
{
  unint64_t v2 = (void *)v0[2];
  unint64_t v3 = (void *)v0[3];
  unint64_t v4 = (void *)v0[4];
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *unint64_t v5 = v1;
  v5[1] = sub_100093200;
  unint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_100293848 + dword_100293848);
  return v6(v2, v3, v4);
}

uint64_t sub_100100C10()
{
  return sub_100100D5C((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100100C28()
{
  return sub_100100D5C((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100100C40()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100100C80()
{
  unint64_t v2 = *(const void **)(v0 + 16);
  unint64_t v3 = *(void **)(v0 + 24);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unint64_t v4 = v1;
  v4[1] = sub_100093EB4;
  unint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_100293868 + dword_100293868);
  return v5(v2, v3);
}

uint64_t sub_100100D2C()
{
  return sub_100100D5C((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100100D44()
{
  return sub_100100D5C((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100100D5C(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  return _swift_deallocObject(v1, 48, 7);
}

uint64_t sub_100100DA4()
{
  uint64_t v1 = sub_10007DC14(&qword_100293890);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100100E98()
{
  sub_10007DC14(&qword_100293890);
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  return sub_1000F9E50(v1, v2);
}

uint64_t sub_100100F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100100F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100101098()
{
}

uint64_t sub_1001010B0(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100293A40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_100102A10();
  sub_1001ED1F0();
  v8[15] = 0;
  sub_1001ECFE0();
  if (!v1)
  {
    type metadata accessor for BDSSyncEngineStateMetadata();
    v8[14] = 1;
    sub_1001EB9C0();
    sub_100102B8C(&qword_100293A48, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization);
    sub_1001ECFD0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100101268@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = sub_10007DC14(&qword_100293988);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10007DC14(&qword_100293A28);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BDSSyncEngineStateMetadata();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (uint64_t)v12 + *(int *)(v10 + 28);
  uint64_t v14 = sub_1001EB9C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_100094758(a1, a1[3]);
  sub_100102A10();
  uint64_t v15 = v22;
  sub_1001ED1D0();
  if (v15)
  {
    sub_1000947F0((uint64_t)a1);
    return sub_1000816A4(v13, &qword_100293988);
  }
  else
  {
    char v24 = 0;
    uint64_t v16 = v21;
    uint64_t *v12 = sub_1001ECF60();
    v12[1] = v17;
    char v23 = 1;
    sub_100102B8C(&qword_100293A38, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization);
    sub_1001ECF50();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v16);
    sub_100102A64((uint64_t)v5, v13);
    sub_100102ACC((uint64_t)v12, v19);
    sub_1000947F0((uint64_t)a1);
    return sub_100102B30((uint64_t)v12);
  }
}

uint64_t sub_100101570()
{
  if (*v0) {
    return 0x6574617473;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1001015A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100102DE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001015C8(uint64_t a1)
{
  unint64_t v2 = sub_100102A10();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100101604(uint64_t a1)
{
  unint64_t v2 = sub_100102A10();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100101640@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100101268(a1, a2);
}

uint64_t sub_100101658(void *a1)
{
  return sub_1001010B0(a1);
}

uint64_t sub_100101670()
{
  uint64_t v0 = sub_1001EB560();
  sub_10008176C(v0, qword_1002938A0);
  sub_10007CFF8(v0, (uint64_t)qword_1002938A0);
  return sub_1001EB550();
}

uint64_t sub_1001016F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001EAF60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  id v9 = [self defaultManager];
  id v10 = [self books];
  id v11 = [v10 containerURL];

  sub_1001EAF10();
  sub_1001EAED0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  char v22 = 1;
  sub_1001EAF30();
  NSString v12 = sub_1001EC340();
  swift_bridgeObjectRelease();
  LOBYTE(v6) = [v9 fileExistsAtPath:v12 isDirectory:&v22];

  if ((v6 & 1) == 0)
  {
    sub_1001EAEC0(v13);
    uint64_t v15 = v14;
    id v21 = 0;
    unsigned int v16 = [v9 createDirectoryAtURL:v14 withIntermediateDirectories:1 attributes:0 error:&v21];

    if (!v16)
    {
      id v18 = v21;
      sub_1001EAE60();

      swift_willThrow();
      swift_errorRelease();
      goto LABEL_6;
    }
    id v17 = v21;
  }

LABEL_6:
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v8, v2);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
}

uint64_t sub_1001019A8()
{
  uint64_t v0 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1001EAF60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  id v10 = (char *)v36 - v9;
  __chkstk_darwin(v8);
  NSString v12 = (char *)v36 - v11;
  sub_1001016F0((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000816A4((uint64_t)v2, &qword_100295230);
    if (qword_1002910E0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1001EB560();
    sub_10007CFF8(v13, (uint64_t)qword_1002938A0);
    uint64_t v14 = sub_1001EB540();
    os_log_type_t v15 = sub_1001EC8F0();
    if (os_log_type_enabled(v14, v15))
    {
      unsigned int v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Could not get metadata. No BaseURL", v16, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v2, v3);
    id v17 = [self defaultManager];
    sub_1001EAEE0();
    sub_1001EAF30();
    NSString v18 = sub_1001EC340();
    swift_bridgeObjectRelease();
    unsigned int v19 = [v17 fileExistsAtPath:v18];

    if (v19)
    {
      if (qword_1002910E0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1001EB560();
      sub_10007CFF8(v20, (uint64_t)qword_1002938A0);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v10, v3);
      id v21 = sub_1001EB540();
      os_log_type_t v22 = sub_1001EC910();
      if (os_log_type_enabled(v21, v22))
      {
        char v23 = (uint8_t *)swift_slowAlloc();
        v38 = (void *)swift_slowAlloc();
        id v40 = v38;
        v37 = v23;
        *(_DWORD *)char v23 = 136315138;
        v36[1] = v23 + 4;
        sub_100102B8C(&qword_100293400, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v24 = sub_1001ED040();
        uint64_t v39 = sub_1001A8090(v24, v25, (uint64_t *)&v40);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        v26 = *(void (**)(char *, uint64_t))(v4 + 8);
        v26(v7, v3);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Removing sync engine metadata at: %s", v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v26 = *(void (**)(char *, uint64_t))(v4 + 8);
        v26(v7, v3);
      }

      sub_1001EAEC0(v28);
      v30 = v29;
      id v40 = 0;
      unsigned int v31 = [v17 removeItemAtURL:v29 error:&v40];

      if (!v31)
      {
        id v35 = v40;
        uint64_t v33 = sub_1001EAE60();

        swift_willThrow();
        v26(v10, v3);
        v26(v12, v3);
        return v33;
      }
      id v32 = v40;

      v26(v10, v3);
      v26(v12, v3);
    }
    else
    {

      v27 = *(void (**)(char *, uint64_t))(v4 + 8);
      v27(v10, v3);
      v27(v12, v3);
    }
  }
  return 0;
}

uint64_t type metadata accessor for BDSSyncEngineMetadataStore()
{
  return self;
}

uint64_t *sub_100101FB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001EB9C0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10007DC14(&qword_100293988);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_100102124(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001EB9C0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1001021F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001EB9C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_10007DC14(&qword_100293988);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_100102318(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB9C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10007DC14(&qword_100293988);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1001024B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB9C0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10007DC14(&qword_100293988);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *sub_1001025C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001EB9C0();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10007DC14(&qword_100293988);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_10010274C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100102760);
}

uint64_t sub_100102760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10007DC14(&qword_100293988);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100102814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100102828);
}

uint64_t sub_100102828(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10007DC14(&qword_100293988);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for BDSSyncEngineStateMetadata()
{
  uint64_t result = qword_1002939E8;
  if (!qword_1002939E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100102920()
{
  sub_1001029B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001029B8()
{
  if (!qword_1002939F8)
  {
    sub_1001EB9C0();
    unint64_t v0 = sub_1001ECB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002939F8);
    }
  }
}

unint64_t sub_100102A10()
{
  unint64_t result = qword_100293A30;
  if (!qword_100293A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293A30);
  }
  return result;
}

uint64_t sub_100102A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100102ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BDSSyncEngineStateMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100102B30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BDSSyncEngineStateMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100102B8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BDSSyncEngineStateMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100102CA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BDSSyncEngineStateMetadata.CodingKeys()
{
  return &type metadata for BDSSyncEngineStateMetadata.CodingKeys;
}

unint64_t sub_100102CDC()
{
  unint64_t result = qword_100293A50;
  if (!qword_100293A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293A50);
  }
  return result;
}

unint64_t sub_100102D34()
{
  unint64_t result = qword_100293A58;
  if (!qword_100293A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293A58);
  }
  return result;
}

unint64_t sub_100102D8C()
{
  unint64_t result = qword_100293A60;
  if (!qword_100293A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293A60);
  }
  return result;
}

uint64_t sub_100102DE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100102EBC(void *a1, void *a2, uint64_t a3)
{
  return sub_100102ED4(a1, a2, a3);
}

uint64_t sub_100102ED4(void *a1, void *a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a2 = sub_1001CFCCC(a2);
  }
  uint64_t v7 = a2[2];
  v12[0] = (uint64_t)(a2 + 4);
  v12[1] = v7;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_100103110(v12, a3);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return (uint64_t)a2;
  }
  unint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = a2[2];
    if (v11 >= v9)
    {
      *a1 = a2;
      a1[1] = a2 + 4;
      a1[2] = v9;
      a1[3] = (2 * v11) | 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      return (uint64_t)a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100102FEC(void *a1, void *a2)
{
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
LABEL_13:
    a2 = sub_1001CFD08(a2);
    int64_t v4 = a2[2];
    if (v4) {
      goto LABEL_3;
    }
LABEL_14:
    int64_t v5 = 0;
    goto LABEL_15;
  }
  int64_t v4 = a2[2];
  if (!v4) {
    goto LABEL_14;
  }
LABEL_3:
  int64_t v5 = 0;
  while (1)
  {
    uint64_t v9 = (uint64_t)&a2[3 * v5 + 4];
    if (*(unsigned char *)(v9 + 16) == 1) {
      break;
    }
LABEL_5:
    if (++v5 >= v4) {
      goto LABEL_11;
    }
  }
  if (v5 < v4 - 1)
  {
    uint64_t v10 = &a2[3 * v4-- + 3];
    while (*v10 == 1)
    {
      --v4;
      v10 -= 24;
      if (v5 >= v4) {
        goto LABEL_11;
      }
    }
    uint64_t v6 = *(void *)v9;
    uint64_t v7 = *(void *)(v9 + 8);
    long long v8 = *((_OWORD *)v10 - 1);
    *(void *)(v9 + 16) = *(void *)v10;
    *(_OWORD *)uint64_t v9 = v8;
    *((void *)v10 - 2) = v6;
    *((void *)v10 - 1) = v7;
    *uint64_t v10 = 1;
    goto LABEL_5;
  }
LABEL_11:
  int64_t v4 = a2[2];
  if (v4 < (unint64_t)v5)
  {
    __break(1u);
    goto LABEL_13;
  }
LABEL_15:
  *a1 = a2;
  a1[1] = a2 + 4;
  a1[2] = v5;
  a1[3] = (2 * v4) | 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100103110(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  if (v2 < 1) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v26 = *(void *)(a2 + 16);
  uint64_t v23 = *a1;
  while (!v26)
  {
LABEL_5:
    if (++v3 >= v2) {
      return v3;
    }
  }
  uint64_t v24 = v2;
  sub_100086354();
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = sub_1001EC520();
    uint64_t v9 = v8;
    if (v7 == sub_1001EC520() && v9 == v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
    char v12 = sub_1001ED080();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12) {
      break;
    }
    if (v26 == ++v6)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = v24;
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v13 = v24 - 1;
  if (v3 < v24 - 1)
  {
    uint64_t v22 = v3;
    while (2)
    {
      uint64_t v25 = v13;
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v14 = 0;
      while (1)
      {
        uint64_t v15 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_35:
          __break(1u);
          return result;
        }
        uint64_t v16 = sub_1001EC520();
        uint64_t v18 = v17;
        if (v16 == sub_1001EC520() && v18 == v19) {
          break;
        }
        char v21 = sub_1001ED080();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        ++v14;
        if (v15 == v26)
        {
          uint64_t result = swift_bridgeObjectRelease();
          if (v23)
          {
            uint64_t v3 = v22;
            uint64_t v5 = *(void *)(v23 + 8 * v22);
            uint64_t v2 = v25;
            *(void *)(v23 + 8 * v22) = *(void *)(v23 + 8 * v25);
            *(void *)(v23 + 8 * v25) = v5;
            goto LABEL_5;
          }
          goto LABEL_35;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_30:
      uint64_t v13 = v25 - 1;
      uint64_t v3 = v22;
      if (v22 < v25 - 1) {
        continue;
      }
      break;
    }
  }
  return v3;
}

id static OS_os_log.readingActivity.getter()
{
  return sub_1001034EC(&qword_1002910E8, (void **)&qword_100293A68);
}

uint64_t sub_1001033F0()
{
  sub_1000B25F0();
  uint64_t result = sub_1001ECB40();
  qword_100293A68 = result;
  return result;
}

uint64_t sub_10010345C()
{
  sub_1000B25F0();
  uint64_t result = sub_1001ECB40();
  qword_100293A70 = result;
  return result;
}

id static OS_os_log.widget.getter()
{
  return sub_1001034EC(&qword_1002910F0, (void **)&qword_100293A70);
}

id sub_1001034EC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

void *sub_100103538(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a1;
  uint64_t v5 = sub_10007DC14(&qword_100291968);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = _s21PriceDropNotificationVMa();
  uint64_t v8 = __chkstk_darwin(v24);
  uint64_t v23 = (uint64_t)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v22 = (uint64_t)&v20 - v11;
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v20 = v10;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v15 = _swiftEmptyArrayStorage;
  uint64_t v21 = a3;
  do
  {
    uint64_t v26 = *(void *)(a3 + 8 * v14 + 32);
    swift_bridgeObjectRetain();
    v25(&v26);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    if ((*v13)(v7, 1, v24) == 1)
    {
      sub_1000816A4((uint64_t)v7, &qword_100291968);
    }
    else
    {
      uint64_t v16 = v22;
      sub_100113198((uint64_t)v7, v22, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
      sub_100113198(v16, v23, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = (void *)sub_1000A6898(0, v15[2] + 1, 1, (unint64_t)v15);
      }
      unint64_t v18 = v15[2];
      unint64_t v17 = v15[3];
      if (v18 >= v17 >> 1) {
        uint64_t v15 = (void *)sub_1000A6898(v17 > 1, v18 + 1, 1, (unint64_t)v15);
      }
      v15[2] = v18 + 1;
      sub_100113198(v23, (uint64_t)v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v18, (uint64_t (*)(void))_s21PriceDropNotificationVMa);
      a3 = v21;
    }
    ++v14;
  }
  while (v12 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

void *sub_10010382C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100293C58);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100291EC0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v29 = (uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v27 = (uint64_t)&v23 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v15 = *(void *)(_s11TrackedItemVMa() - 8);
  uint64_t v16 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v24 = v10;
  unint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v28 = *(void *)(v15 + 72);
  uint64_t v23 = a3;
  swift_bridgeObjectRetain();
  unint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v25 = v9;
  uint64_t v26 = a1;
  do
  {
    a1(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v17)(v8, 1, v9) == 1)
    {
      sub_1000816A4((uint64_t)v8, &qword_100293C58);
    }
    else
    {
      uint64_t v19 = v27;
      sub_1000935F8((uint64_t)v8, v27, &qword_100291EC0);
      sub_1000935F8(v19, v29, &qword_100291EC0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = (void *)sub_1000A735C(0, v18[2] + 1, 1, (unint64_t)v18);
      }
      unint64_t v21 = v18[2];
      unint64_t v20 = v18[3];
      if (v21 >= v20 >> 1) {
        unint64_t v18 = (void *)sub_1000A735C(v20 > 1, v21 + 1, 1, (unint64_t)v18);
      }
      v18[2] = v21 + 1;
      sub_1000935F8(v29, (uint64_t)v18+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21, &qword_100291EC0);
      uint64_t v9 = v25;
      a1 = v26;
    }
    v16 += v28;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100103B40(uint64_t a1)
{
  uint64_t v3 = _s5StateVMa();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  sub_100108BC4(a1);
  uint64_t v9 = v1 + OBJC_IVAR___BDSPriceTracker_state;
  swift_beginAccess();
  sub_100113268(v9, (uint64_t)v8, (uint64_t (*)(void))_s5StateVMa);
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1001EB560();
  sub_10007CFF8(v10, (uint64_t)qword_1002A4198);
  sub_100113268((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v11 = sub_1001EB540();
  os_log_type_t v12 = sub_1001EC910();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134217984;
    uint64_t v14 = *(void *)(*(void *)v6 + 16);
    sub_100111F90((uint64_t)v6, (uint64_t (*)(void))_s5StateVMa);
    uint64_t v16 = v14;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[PriceTracker] Updated, tracking %ld item(s)", v13, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    sub_100111F90((uint64_t)v6, (uint64_t (*)(void))_s5StateVMa);
  }

  return sub_100111F90((uint64_t)v8, (uint64_t (*)(void))_s5StateVMa);
}

id sub_100103D90()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___BDSPriceTracker____lazy_storage___pricingService);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___BDSPriceTracker____lazy_storage___pricingService);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR___BDSPriceTracker____lazy_storage___pricingService + 8);
  if (v2)
  {
    id v4 = v2;
  }
  else
  {
    id v5 = [self sharedProvider];
    id v6 = [self defaultBag];
    uint64_t v7 = *v1;
    uint64_t v8 = (void *)v1[1];
    *uint64_t v1 = (uint64_t)v5;
    v1[1] = (uint64_t)v6;
    id v4 = v5;
    v6;
    sub_100112334(v7, v8);
  }
  sub_100112374(v2, v3);
  return v4;
}

char *sub_1001040E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v144 = _s4DealVMa();
  uint64_t v103 = *(void *)(v144 - 8);
  uint64_t v4 = __chkstk_darwin(v144);
  uint64_t v143 = (uint64_t)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v142 = (uint64_t)&v101 - v6;
  uint64_t v114 = sub_1001EB0C0();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  v146 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100293C90);
  __chkstk_darwin(v8 - 8);
  *(void *)&long long v145 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_10007DC14(&qword_100293CD0);
  v135 = *(void ***)(v141 - 8);
  __chkstk_darwin(v141);
  v125 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_10007DC14(&qword_100293CA0);
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  v132 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10007DC14(&qword_100293CD8);
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  unint64_t v138 = (unint64_t)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10007DC14(&qword_100293CE0);
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (uint64_t *)((char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v131 = sub_10007DC14(&qword_100293C98);
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  v140 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10007DC14(&qword_100293CE8);
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v137 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10007DC14(&qword_100293CF0);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (uint64_t *)((char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v129 = sub_10007DC14(&qword_100293C68);
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  v139 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10007DC14(&qword_100293CF8);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v136 = (uint64_t)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10007DC14(&qword_100293D00);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v127 = sub_10007DC14(&qword_100293B00);
  unint64_t v123 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v24 = (char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10007DC14(&qword_100293D08);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v26 = (char *)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10007DC14(&qword_100293CC8);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = _s5StateVMa();
  uint64_t v30 = __chkstk_darwin(v102);
  uint64_t v104 = (uint64_t)&v101 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v33 = (uint64_t *)((char *)&v101 - v32);
  swift_defaultActor_initialize();
  *(void *)&v2[OBJC_IVAR___BDSPriceTracker_streamTask] = 0;
  v34 = &v2[OBJC_IVAR___BDSPriceTracker____lazy_storage___pricingService];
  v115 = v2;
  *(void *)v34 = 0;
  *((void *)v34 + 1) = 0;
  uint64_t v124 = a1;
  sub_1000936F8(a1, (uint64_t)v29, &qword_100293CC8);
  swift_retain();
  sub_1001055F8((uint64_t)v29, v33);
  _s15PersistentStateO2V1VMa(0);
  uint64_t v35 = 1;
  *uint64_t v22 = 1;
  uint64_t v36 = enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:);
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:), v19);
  v126 = v26;
  v122 = v24;
  sub_1001EC6B0();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  sub_10007DC14(&qword_100293B10);
  v37 = v116;
  void *v116 = 1;
  uint64_t v38 = v117;
  uint64_t v39 = v118;
  (*(void (**)(void *, uint64_t, uint64_t))(v117 + 104))(v37, v36, v118);
  id v40 = v132;
  sub_1001EC6B0();
  (*(void (**)(void *, uint64_t))(v38 + 8))(v37, v39);
  sub_10007DC14(&qword_100291910);
  v41 = v119;
  void *v119 = 1;
  uint64_t v42 = v120;
  uint64_t v43 = v121;
  (*(void (**)(void *, uint64_t, uint64_t))(v120 + 104))(v41, v36, v121);
  sub_1001EC6B0();
  v44 = *(void (**)(void *, uint64_t))(v42 + 8);
  v45 = v41;
  v46 = v40;
  uint64_t v47 = v127;
  v44(v45, v43);
  v48 = v125;
  *(void *)v125 = 1;
  v49 = v135;
  uint64_t v50 = v36;
  unint64_t v51 = v123;
  uint64_t v52 = v141;
  ((void (*)(char *, uint64_t, uint64_t))v135[13])(v48, v50, v141);
  sub_1001EC6B0();
  ((void (*)(char *, uint64_t))v49[1])(v48, v52);
  v53 = v115;
  uint64_t v54 = v124;
  uint64_t v55 = v145;
  v135 = (void **)v33;
  sub_100113268((uint64_t)v33, (uint64_t)v115 + OBJC_IVAR___BDSPriceTracker_state, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v56 = _s11PersistenceVMa();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v54, 1, v56) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v55, v122, v47);
    uint64_t v35 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v55, v35, 1, v47);
  sub_1000935F8(v55, (uint64_t)v53 + OBJC_IVAR___BDSPriceTracker_persistentStateContinuation, &qword_100293C90);
  (*(void (**)(uint64_t, char *, uint64_t))(v128 + 16))((uint64_t)v53 + OBJC_IVAR___BDSPriceTracker_schedulerConfigContinuation, v139, v129);
  (*(void (**)(uint64_t, char *, uint64_t))(v130 + 16))((uint64_t)v53 + OBJC_IVAR___BDSPriceTracker_activeNotificationsContinuation, v140, v131);
  (*(void (**)(uint64_t, char *, uint64_t))(v133 + 16))((uint64_t)v53 + OBJC_IVAR___BDSPriceTracker_cardListContinuation, v46, v134);
  swift_release();
  v57 = (objc_class *)type metadata accessor for PriceTracker(0);
  v148.receiver = v53;
  v148.super_class = v57;
  id v58 = objc_msgSendSuper2(&v148, "init");
  uint64_t v59 = swift_allocObject();
  swift_weakInit();
  v125 = (char *)v58;
  swift_retain();
  v60 = v146;
  sub_1001EB0B0();
  v61 = v135;
  if ((*v135)[2])
  {
    sub_1001B81F0((uint64_t)v149);
    sub_1000935F8((uint64_t)v149, (uint64_t)v150, &qword_100293BE8);
    int v62 = v153;
    v63 = v61;
    if (v153 == 1)
    {
      uint64_t v120 = 0;
      v119 = 0;
    }
    else
    {
      int v62 = 0;
      uint64_t v120 = v151;
      v119 = v152;
    }
    uint64_t v64 = v142;
    uint64_t v65 = v114;
    uint64_t v66 = v113;
  }
  else
  {
    uint64_t v120 = 0;
    v119 = 0;
    uint64_t v64 = v142;
    v63 = v135;
    uint64_t v65 = v114;
    uint64_t v66 = v113;
    int v62 = 1;
  }
  LODWORD(v121) = v62;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v60, v65);
  uint64_t v67 = (uint64_t)v63[1];
  uint64_t v68 = *(void *)(v67 + 16);
  if (!v68)
  {
    v73 = _swiftEmptyArrayStorage;
LABEL_33:
    __chkstk_darwin(v67);
    uint64_t v68 = (uint64_t)v135;
    v85 = sub_100103538((void (*)(uint64_t *))sub_100115AC0, (uint64_t)&v100, (uint64_t)v73);
    swift_bridgeObjectRelease();
    v86 = sub_1001C52CC();
    uint64_t v87 = sub_10011026C(v54, (uint64_t)v126, (uint64_t)&unk_100293D18, v59, v120, (uint64_t)v119, v121, v136, (uint64_t)v85, v137, (uint64_t)v86, v138);
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v125[OBJC_IVAR___BDSPriceTracker_streamTask] = v87;
    swift_release();
    if (qword_1002910B8 != -1) {
      goto LABEL_40;
    }
    goto LABEL_34;
  }
  uint64_t v118 = v59;
  uint64_t v69 = *(unsigned __int8 *)(v103 + 80);
  uint64_t v70 = (v69 + 32) & ~v69;
  uint64_t v71 = v67 + v70;
  uint64_t v72 = *(void *)(v103 + 72);
  uint64_t v54 = v72 + v70;
  v146 = (char *)(v69 | 7);
  uint64_t v117 = v67;
  swift_bridgeObjectRetain();
  v73 = _swiftEmptyArrayStorage;
  long long v145 = xmmword_100215320;
  uint64_t v141 = v72 + v70;
  while (1)
  {
    uint64_t v74 = v73[2];
    if (!v74) {
      goto LABEL_25;
    }
    uint64_t v75 = v73[v74 + 3];
    uint64_t v76 = *(void *)(v75 + 16);
    if (!v76) {
      goto LABEL_25;
    }
    sub_100113268(v75 + v70 + (v76 - 1) * v72, v64, (uint64_t (*)(void))_s4DealVMa);
    if ((sub_1001EB090() & 1) == 0)
    {
      sub_100111F90(v64, (uint64_t (*)(void))_s4DealVMa);
LABEL_25:
      sub_10007DC14(&qword_100291E98);
      unint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v145;
      sub_100113268(v71, v51 + v70, (uint64_t (*)(void))_s4DealVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v73 = sub_1000A70C0(0, v73[2] + 1, 1, v73);
      }
      unint64_t v84 = v73[2];
      unint64_t v83 = v73[3];
      if (v84 >= v83 >> 1) {
        v73 = sub_1000A70C0((void *)(v83 > 1), v84 + 1, 1, v73);
      }
      v73[2] = v84 + 1;
      v73[v84 + 4] = v51;
      goto LABEL_12;
    }
    unint64_t v77 = v73[2];
    sub_100113268(v71, v143, (uint64_t (*)(void))_s4DealVMa);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if (!v77) {
        goto LABEL_39;
      }
    }
    else
    {
      v73 = sub_1001CFCF4(v73);
      if (!v77) {
        goto LABEL_39;
      }
    }
    if (v77 > v73[2]) {
      break;
    }
    unint64_t v78 = v77 - 1;
    v79 = v73 + 4;
    unint64_t v51 = v73[v78 + 4];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[v78 + 4] = v51;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v51 = sub_1000A71D0(0, *(void *)(v51 + 16) + 1, 1, v51);
      v79[v78] = v51;
    }
    unint64_t v82 = *(void *)(v51 + 16);
    unint64_t v81 = *(void *)(v51 + 24);
    if (v82 >= v81 >> 1)
    {
      unint64_t v51 = sub_1000A71D0(v81 > 1, v82 + 1, 1, v51);
      v79[v78] = v51;
    }
    uint64_t v54 = v141;
    *(void *)(v51 + 16) = v82 + 1;
    sub_100113198(v143, v51 + v70 + v82 * v72, (uint64_t (*)(void))_s4DealVMa);
    uint64_t v64 = v142;
    sub_100111F90(v142, (uint64_t (*)(void))_s4DealVMa);
LABEL_12:
    v71 += v72;
    if (!--v68)
    {
      uint64_t v67 = swift_bridgeObjectRelease();
      uint64_t v54 = v124;
      unint64_t v51 = v123;
      uint64_t v59 = v118;
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  swift_once();
LABEL_34:
  uint64_t v88 = sub_1001EB560();
  sub_10007CFF8(v88, (uint64_t)qword_1002A4198);
  uint64_t v89 = v104;
  sub_100113268(v68, v104, (uint64_t (*)(void))_s5StateVMa);
  v90 = sub_1001EB540();
  os_log_type_t v91 = sub_1001EC910();
  if (os_log_type_enabled(v90, v91))
  {
    v92 = (uint8_t *)swift_slowAlloc();
    uint64_t v93 = v89;
    v94 = v92;
    *(_DWORD *)v92 = 134217984;
    uint64_t v95 = *(void *)(*(void *)v93 + 16);
    sub_100111F90(v93, (uint64_t (*)(void))_s5StateVMa);
    uint64_t v147 = v95;
    uint64_t v68 = (uint64_t)v135;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "[PriceTracker] Started, tracking %ld item(s)", v94, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    sub_100111F90(v89, (uint64_t (*)(void))_s5StateVMa);
  }
  v96 = v132;
  v97 = v140;

  v98 = v125;
  (*(void (**)(char *, uint64_t))(v133 + 8))(v96, v134);
  (*(void (**)(unint64_t, uint64_t))(v111 + 8))(v138, v112);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v97, v131);
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v137, v110);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v139, v129);
  (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v136, v108);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v122, v127);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v126, v106);
  sub_100111F90(v68, (uint64_t (*)(void))_s5StateVMa);
  sub_1000816A4(v54, &qword_100293CC8);
  return v98;
}

uint64_t sub_1001055F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_10007DC14(&qword_100293BD8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v42 = (char *)&updated - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v41 = (char *)&updated - v6;
  uint64_t updated = _s14UpdateScheduleVMa();
  __chkstk_darwin(updated);
  uint64_t v44 = (uint64_t)&updated - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100293CC8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&updated - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&updated - v12;
  uint64_t v14 = sub_10007DC14(&qword_100293DF8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&updated - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _s15PersistentStateOMa(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&updated - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&updated - v22;
  uint64_t v45 = a1;
  sub_1000936F8(a1, (uint64_t)v13, &qword_100293CC8);
  uint64_t v24 = _s11PersistenceVMa();
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
  if (v25(v13, 1, v24) == 1)
  {
    sub_1000816A4((uint64_t)v13, &qword_100293CC8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  }
  else
  {
    sub_10017AB44((uint64_t)v16);
    sub_100111F90((uint64_t)v13, (uint64_t (*)(void))_s11PersistenceVMa);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      sub_100113198((uint64_t)v16, (uint64_t)v23, _s15PersistentStateOMa);
      sub_100113268((uint64_t)v23, (uint64_t)v21, _s15PersistentStateOMa);
      sub_10012C8CC((uint64_t)v21, v43);
      sub_1000816A4(v45, &qword_100293CC8);
      return sub_100111F90((uint64_t)v23, _s15PersistentStateOMa);
    }
  }
  sub_1000816A4((uint64_t)v16, &qword_100293DF8);
  sub_1000936F8(v45, (uint64_t)v11, &qword_100293CC8);
  if (v25(v11, 1, v24) == 1)
  {
    sub_1000816A4((uint64_t)v11, &qword_100293CC8);
  }
  else
  {
    sub_10017B330();
    sub_100111F90((uint64_t)v11, (uint64_t (*)(void))_s11PersistenceVMa);
  }
  if (qword_100291190 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_10007CFF8(updated, (uint64_t)qword_1002A4318);
  sub_100113268(v26, v44, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  uint64_t v27 = _s6UpdateVMa();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  uint64_t v29 = (uint64_t)v41;
  v28(v41, 1, 1, v27);
  uint64_t v30 = (uint64_t)v42;
  v28(v42, 1, 1, v27);
  uint64_t v31 = (int *)_s5StateVMa();
  uint64_t v32 = v43;
  uint64_t v33 = (char *)v43 + v31[7];
  v28(v33, 1, 1, v27);
  uint64_t v34 = (uint64_t)v32 + v31[8];
  v28((char *)v34, 1, 1, v27);
  uint64_t v35 = (void *)((char *)v32 + v31[9]);
  *uint64_t v35 = 0;
  v35[1] = 0;
  uint64_t v36 = (char *)v32 + v31[11];
  *((_OWORD *)v36 + 4) = 0u;
  *((_OWORD *)v36 + 5) = 0u;
  *((_OWORD *)v36 + 2) = 0u;
  *((_OWORD *)v36 + 3) = 0u;
  *(_OWORD *)uint64_t v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  *uint64_t v32 = _swiftEmptyArrayStorage;
  v32[1] = _swiftEmptyArrayStorage;
  uint64_t v37 = v44;
  sub_100113268(v44, (uint64_t)v32 + v31[6], (uint64_t (*)(void))_s14UpdateScheduleVMa);
  sub_100113200(v29, (uint64_t)v33);
  sub_100113200(v30, v34);
  swift_bridgeObjectRelease();
  *uint64_t v35 = 0;
  v35[1] = 0;
  uint64_t v38 = (void *)((char *)v32 + v31[10]);
  void *v38 = 0;
  v38[1] = 0;
  sub_10011215C(*(void *)v36, *((void *)v36 + 1));
  *((_OWORD *)v36 + 4) = 0u;
  *((_OWORD *)v36 + 5) = 0u;
  *((_OWORD *)v36 + 2) = 0u;
  *((_OWORD *)v36 + 3) = 0u;
  *(_OWORD *)uint64_t v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  *(void *)((char *)v32 + v31[12]) = 0;
  sub_1001C90B0((uint64_t)_swiftEmptyArrayStorage);
  sub_1000816A4(v30, &qword_100293BD8);
  sub_1000816A4(v29, &qword_100293BD8);
  sub_100111F90(v37, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  return sub_1000816A4(v45, &qword_100293CC8);
}

uint64_t sub_100105C54(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_100105C74, 0, 0);
}

uint64_t sub_100105C74()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[6] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100105D60;
    return sub_10010A768();
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100105D60()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100105E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 2696) = v13;
  *(_OWORD *)(v8 + 2680) = v12;
  *(_OWORD *)(v8 + 2664) = v11;
  *(_OWORD *)(v8 + 2648) = v10;
  *(unsigned char *)(v8 + 2736) = a8;
  *(void *)(v8 + 2640) = a7;
  *(void *)(v8 + 2632) = a6;
  *(void *)(v8 + 2624) = a5;
  *(void *)(v8 + 2616) = a4;
  return _swift_task_switch(sub_100105ECC, 0, 0);
}

uint64_t sub_100105ECC()
{
  uint64_t v1 = *(void *)(v0 + 2664);
  char v2 = *(unsigned char *)(v0 + 2736);
  uint64_t v3 = *(void *)(v0 + 2640);
  uint64_t v4 = *(void *)(v0 + 2632);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 2704) = v5;
  long long v11 = *(_OWORD *)(v0 + 2648);
  long long v12 = *(_OWORD *)(v0 + 2672);
  long long v13 = *(_OWORD *)(v0 + 2688);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 2616);
  swift_asyncLet_begin();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 2712) = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  *(unsigned char *)(v6 + 32) = v2 & 1;
  *(_OWORD *)(v6 + 40) = v11;
  *(void *)(v6 + 56) = v1;
  swift_asyncLet_begin();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 2720) = v7;
  *(_OWORD *)(v7 + 16) = v12;
  swift_asyncLet_begin();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 2728) = v8;
  *(_OWORD *)(v8 + 16) = v13;
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 16, v9, sub_100106098, v0 + 2576);
}

uint64_t sub_100106098(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_get(v2 + 656, a2, sub_1001060B4, v2 + 2576);
}

uint64_t sub_1001060B4(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_get(v2 + 1296, a2, sub_1001060D0, v2 + 2576);
}

uint64_t sub_1001060D0(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_get(v2 + 1936, a2, sub_1001060EC, v2 + 2576);
}

uint64_t sub_1001060EC()
{
  return _swift_task_switch(sub_100106108, 0, 0);
}

uint64_t sub_100106108()
{
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1001EB560();
  sub_10007CFF8(v1, (uint64_t)qword_1002A4198);
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC8F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[PriceTracker] streamTask ended", v4, 2u);
    swift_slowDealloc();
  }

  return _swift_asyncLet_finish(v0 + 1936);
}

uint64_t sub_100106224()
{
  return _swift_task_switch(sub_100106240, 0, 0);
}

uint64_t sub_100106240()
{
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 1296);
}

uint64_t sub_1001062B0()
{
  return _swift_task_switch(sub_1001062CC, 0, 0);
}

uint64_t sub_1001062CC()
{
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 656);
}

uint64_t sub_10010633C()
{
  return _swift_task_switch(sub_100106358, 0, 0);
}

uint64_t sub_100106358()
{
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_1001063C8()
{
  return _swift_task_switch(sub_1001063E4, 0, 0);
}

uint64_t sub_1001063E4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100106444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a2;
  v3[3] = a3;
  sub_10007DC14(&qword_100293CC8);
  v3[4] = swift_task_alloc();
  uint64_t v4 = _s11PersistenceVMa();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_100106534, 0, 0);
}

uint64_t sub_100106534()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_1000936F8(v0[2], v3, &qword_100293CC8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000816A4(v0[4], &qword_100293CC8);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[7];
    sub_100113198(v0[4], v6, (uint64_t (*)(void))_s11PersistenceVMa);
    uint64_t v7 = swift_task_alloc();
    v0[8] = v7;
    *(void *)(v7 + 16) = v6;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[9] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1001066D0;
    return sub_100106A6C(0xD000000000000018, 0x80000001002254F0, (uint64_t)&unk_100293DD8, v7);
  }
}

uint64_t sub_1001066D0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1001067E8, 0, 0);
}

uint64_t sub_1001067E8()
{
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1001EB560();
  sub_10007CFF8(v1, (uint64_t)qword_1002A4198);
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC8F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[PriceTracker] persistentStateTask ended", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 56);

  sub_100111F90(v5, (uint64_t (*)(void))_s11PersistenceVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100106934(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  _s15PersistentStateOMa(0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1001069C4, 0, 0);
}

uint64_t sub_1001069C4()
{
  uint64_t v1 = v0[4];
  sub_100113268(v0[2], v1, _s15PersistentStateO2V1VMa);
  sub_10017A3D4();
  sub_100111F90(v1, _s15PersistentStateOMa);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100106A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = _s15PersistentStateO2V1VMa(0);
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  sub_10007DC14(&qword_100293DE8);
  v5[10] = swift_task_alloc();
  uint64_t v7 = sub_10007DC14(&qword_100293DF0);
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return _swift_task_switch(sub_100106BC4, 0, 0);
}

uint64_t sub_100106BC4()
{
  sub_10007DC14(&qword_100293D08);
  sub_1001EC6F0();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100106C84;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  return AsyncStream.Iterator.next(isolation:)(v2, 0, 0, v3);
}

uint64_t sub_100106C84()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100106D80, 0, 0);
}

uint64_t sub_100106D80()
{
  uint64_t v1 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[8] + 48))(v1, 1, v0[7]) == 1)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (int *)v0[4];
    sub_100113198(v1, v0[9], _s15PersistentStateO2V1VMa);
    v0[15] = [objc_allocWithZone((Class)BDSOSTransaction) initWithTransactionName:sub_1001EC400() + 32];
    swift_release();
    uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[16] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100106F5C;
    uint64_t v6 = v0[9];
    return v7(v6);
  }
}

uint64_t sub_100106F5C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100107058, 0, 0);
}

uint64_t sub_100107058()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = v0[9];
  [v1 endTransaction];

  sub_100111F90(v2, _s15PersistentStateO2V1VMa);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  void *v3 = v0;
  v3[1] = sub_100106C84;
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  return AsyncStream.Iterator.next(isolation:)(v4, 0, 0, v5);
}

uint64_t sub_100107134(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v13 = a4 & 1;
  uint64_t v14 = swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *(void *)uint64_t v14 = v7;
  *(void *)(v14 + 40) = a6;
  *(void *)(v14 + 48) = a7;
  *(unsigned char *)(v14 + 96) = v13;
  *(void *)(v14 + 24) = a3;
  *(void *)(v14 + 32) = a5;
  *(void *)(v14 + 8) = sub_10010720C;
  *(void *)(v14 + 16) = a2;
  return _swift_task_switch(sub_100107330, 0, 0);
}

uint64_t sub_10010720C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100107304(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = a6;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a4;
  *(unsigned char *)(v6 + 96) = a3;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_100107330, 0, 0);
}

uint64_t sub_100107330()
{
  char v1 = *(unsigned char *)(v0 + 96);
  *(void *)(v0 + 56) = [objc_allocWithZone((Class)BDSOSTransaction) initWithTransactionName:"PriceTrackerCreateScheduler"];
  id v2 = [self sharedScheduler];
  *(void *)(v0 + 64) = v2;
  _s9SchedulerCMa(0);
  swift_allocObject();
  uint64_t v9 = (uint64_t (*)(void *, uint64_t, uint64_t, char, uint64_t, uint64_t))((char *)&dword_100293DB0
                                                                                + dword_100293DB0);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_10010746C;
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  return v9(v2, v6, v7, v1 & 1, v4, v5);
}

uint64_t sub_10010746C(uint64_t a1)
{
  id v2 = *(void **)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1001075A4, 0, 0);
}

uint64_t sub_1001075A4()
{
  uint64_t v1 = (void *)v0[7];
  [v1 endTransaction];

  swift_retain();
  id v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *id v2 = v0;
  v2[1] = sub_100107678;
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[6];
  return sub_10011089C(0xD00000000000001BLL, 0x80000001002254B0, v4, v3);
}

uint64_t sub_100107678()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100107790, 0, 0);
}

uint64_t sub_100107790()
{
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1001EB560();
  sub_10007CFF8(v1, (uint64_t)qword_1002A4198);
  id v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC8F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[PriceTracker] schedulerConfigTask ended", v4, 2u);
    swift_slowDealloc();
  }
  swift_release();

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1001078AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100115ABC;
  v6[7] = a2;
  v6[8] = a3;
  return _swift_task_switch(sub_10010797C, 0, 0);
}

uint64_t sub_10010795C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return _swift_task_switch(sub_10010797C, 0, 0);
}

uint64_t sub_10010797C()
{
  swift_bridgeObjectRetain();
  v0[9] = [objc_allocWithZone((Class)BDSOSTransaction) initWithTransactionName:sub_1001EC400() + 32];
  swift_release();
  if (qword_100291118 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1002950E0;
  v0[10] = qword_1002950E0;
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = [v2 standardUserDefaults];
  v0[11] = v4;
  _s12UserNotifierCMa();
  inited = (void *)swift_initStackObject();
  v0[12] = inited;
  inited[2] = v3;
  inited[3] = &off_100269520;
  inited[4] = v4;
  swift_bridgeObjectRetain();
  id v6 = v3;
  id v7 = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[13] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100107B2C;
  uint64_t v9 = v0[7];
  return sub_100081C2C(v9);
}

uint64_t sub_100107B2C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100107C44, 0, 0);
}

uint64_t sub_100107C44()
{
  uint64_t v1 = *(void **)(v0 + 72);
  uint64_t v2 = *(void **)(v0 + 80);

  [v1 endTransaction];
  swift_bridgeObjectRelease();
  swift_retain();
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  void *v3 = v0;
  v3[1] = sub_100107D34;
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 64);
  return sub_100110EC8(0xD00000000000001ELL, 0x8000000100225470, v5, v4);
}

uint64_t sub_100107D34()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100107E4C, 0, 0);
}

uint64_t sub_100107E4C()
{
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1001EB560();
  sub_10007CFF8(v1, (uint64_t)qword_1002A4198);
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC8F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[PriceTracker] activeNotificationsTask ended", v4, 2u);
    swift_slowDealloc();
  }
  swift_release();

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100107F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_100115ABC;
  v6[9] = a2;
  v6[10] = a3;
  return _swift_task_switch(sub_100108038, 0, 0);
}

uint64_t sub_100108018(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return _swift_task_switch(sub_100108038, 0, 0);
}

uint64_t sub_100108038()
{
  uint64_t v4 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t))((char *)&dword_1002929F8
                                                                                    + dword_1002929F8);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100108110;
  uint64_t v2 = *(void *)(v0 + 72);
  return v4(v0 + 16, 0xD00000000000001DLL, 0x8000000100225410, v2);
}

uint64_t sub_100108110()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100108228, 0, 0);
}

uint64_t sub_100108228()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 112) = v3;
  *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 40);
  id v4 = v1;
  swift_retain();
  swift_retain();
  sub_100087ABC(v0 + 56);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100108318;
  uint64_t v6 = *(void *)(v0 + 80);
  return sub_100111468(0xD000000000000014, 0x8000000100225430, v6, v0 + 16);
}

uint64_t sub_100108318()
{
  uint64_t v1 = *(void *)v0 + 56;
  uint64_t v2 = *(void **)(*(void *)v0 + 96);
  swift_task_dealloc();

  swift_release();
  swift_release();
  sub_100087A3C(v1);
  return _swift_task_switch(sub_100108478, 0, 0);
}

uint64_t sub_100108478()
{
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1001EB560();
  sub_10007CFF8(v1, (uint64_t)qword_1002A4198);
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC8F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[PriceTracker] cardListTask ended", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void **)(v0 + 96);
  swift_release();

  swift_release();
  sub_100087A3C(v0 + 56);

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1001085B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100293840);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000936F8(a1, (uint64_t)v8, &qword_100293840);
  uint64_t v9 = sub_1001EC6A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v8, &qword_100293840);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1001EC650();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1001EC690();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1001087A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10007DC14(&qword_100293C90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v1 + OBJC_IVAR___BDSPriceTracker_persistentStateContinuation;
  sub_1000936F8(v1 + OBJC_IVAR___BDSPriceTracker_persistentStateContinuation, (uint64_t)v4, &qword_100293C90);
  uint64_t v5 = sub_10007DC14(&qword_100293B00);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000816A4((uint64_t)v4, &qword_100293C90);
  }
  else
  {
    sub_1001EC6D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = v1 + OBJC_IVAR___BDSPriceTracker_schedulerConfigContinuation;
  uint64_t v8 = sub_10007DC14(&qword_100293C68);
  sub_1001EC6D0();
  uint64_t v9 = v1 + OBJC_IVAR___BDSPriceTracker_activeNotificationsContinuation;
  uint64_t v10 = sub_10007DC14(&qword_100293C98);
  sub_1001EC6D0();
  uint64_t v11 = v1 + OBJC_IVAR___BDSPriceTracker_cardListContinuation;
  uint64_t v12 = sub_10007DC14(&qword_100293CA0);
  sub_1001EC6D0();
  if (*(void *)(v1 + OBJC_IVAR___BDSPriceTracker_streamTask))
  {
    swift_retain();
    sub_1001EC710();
    swift_release();
  }
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1001EB560();
  sub_10007CFF8(v13, (uint64_t)qword_1002A4198);
  uint64_t v14 = sub_1001EB540();
  os_log_type_t v15 = sub_1001EC910();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = v12;
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[PriceTracker] Stopped", v16, 2u);
    uint64_t v12 = v18;
    swift_slowDealloc();
  }

  sub_1000816A4(v19, &qword_100293C90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  sub_100111F90(v1 + OBJC_IVAR___BDSPriceTracker_state, (uint64_t (*)(void))_s5StateVMa);
  sub_100112334(*(void *)(v1 + OBJC_IVAR___BDSPriceTracker____lazy_storage___pricingService), *(void **)(v1 + OBJC_IVAR___BDSPriceTracker____lazy_storage___pricingService + 8));
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_100108B70()
{
  sub_1001087A4();
  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100108B9C()
{
  return type metadata accessor for PriceTracker(0);
}

uint64_t type metadata accessor for PriceTracker(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_100293AD8);
}

uint64_t sub_100108BC4(uint64_t a1)
{
  uint64_t v224 = a1;
  uint64_t v203 = sub_10007DC14(&qword_100293C78);
  uint64_t v202 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  v201 = (char *)&v176 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_10007DC14(&qword_100293C80);
  uint64_t v199 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  v198 = (char *)&v176 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = _s4DealVMa();
  uint64_t v218 = *(void *)(v229 - 8);
  uint64_t v4 = __chkstk_darwin(v229);
  uint64_t v228 = (uint64_t)&v176 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v176 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v176 - v10;
  __chkstk_darwin(v9);
  v226 = (uint64_t *)((char *)&v176 - v12);
  uint64_t v211 = sub_10007DC14(&qword_100293C60);
  uint64_t v210 = *(void *)(v211 - 8);
  __chkstk_darwin(v211);
  v209 = (char *)&v176 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_1001EB0C0();
  uint64_t v213 = *(void *)(v214 - 8);
  __chkstk_darwin(v214);
  v222 = (char *)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_10007DC14(&qword_100293C88);
  uint64_t v196 = *(void *)(v197 - 8);
  __chkstk_darwin(v197);
  v195 = (char *)&v176 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007DC14(&qword_100293BD8);
  __chkstk_darwin(v16 - 8);
  uint64_t v221 = (uint64_t)&v176 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10007DC14(&qword_100293BE0);
  __chkstk_darwin(v18 - 8);
  uint64_t v232 = (uint64_t)&v176 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (int *)_s5StateVMa();
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v223 = (uint64_t)&v176 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  *(void *)&long long v230 = (char *)&v176 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (uint64_t *)((char *)&v176 - v25);
  uint64_t v207 = _s15PersistentStateO2V1VMa(0);
  uint64_t v27 = __chkstk_darwin(v207);
  v208 = (uint64_t *)((char *)&v176 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27);
  v220 = (uint64_t *)((char *)&v176 - v29);
  uint64_t v30 = sub_10007DC14(&qword_100293C90);
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)&v176 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10007DC14(&qword_100293B00);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  v215 = (char *)&v176 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v1;
  sub_1000936F8(v1 + OBJC_IVAR___BDSPriceTracker_persistentStateContinuation, (uint64_t)v32, &qword_100293C90);
  uint64_t v216 = v34;
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  uint64_t v217 = v33;
  int v38 = v37(v32, 1, v33);
  v227 = v8;
  v225 = v11;
  uint64_t v219 = v1;
  v212 = v26;
  *(void *)&long long v231 = v20;
  if (v38 == 1)
  {
    sub_1000816A4((uint64_t)v32, &qword_100293C90);
    uint64_t v39 = (uint64_t)v226;
    uint64_t v40 = v230;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v216 + 32))(v215, v32, v217);
    uint64_t v41 = v1 + OBJC_IVAR___BDSPriceTracker_state;
    swift_beginAccess();
    v204 = _s5StateVMa;
    sub_100113268(v41, (uint64_t)v26, (uint64_t (*)(void))_s5StateVMa);
    uint64_t v205 = *v26;
    uint64_t v206 = v26[1];
    uint64_t v42 = (uint64_t)v26 + v20[6];
    v194 = _s14UpdateScheduleVMa;
    uint64_t v43 = v232;
    sub_100113268(v42, v232, (uint64_t (*)(void))_s14UpdateScheduleVMa);
    uint64_t updated = _s14UpdateScheduleVMa();
    uint64_t v44 = *(void *)(updated - 8);
    v191 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56);
    uint64_t v193 = v44 + 56;
    v191(v43, 0, 1, updated);
    sub_1000936F8((uint64_t)v26 + v20[7], v221, &qword_100293BD8);
    uint64_t v45 = v20[10];
    v46 = (uint64_t *)((char *)v26 + v20[9]);
    uint64_t v47 = v46[1];
    uint64_t v187 = *v46;
    uint64_t v181 = v47;
    uint64_t v48 = *(uint64_t *)((char *)v26 + v45 + 8);
    uint64_t v188 = *(uint64_t *)((char *)v26 + v45);
    uint64_t v189 = v48;
    uint64_t v49 = v20[12];
    uint64_t v50 = (uint64_t *)((char *)v26 + v20[11]);
    uint64_t v52 = v50[1];
    uint64_t v179 = *v50;
    uint64_t v51 = v179;
    uint64_t v180 = v52;
    uint64_t v53 = v50[2];
    uint64_t v176 = v50[3];
    uint64_t v54 = v50[5];
    uint64_t v177 = v50[4];
    uint64_t v55 = v50[6];
    uint64_t v178 = v50[7];
    uint64_t v57 = v50[9];
    uint64_t v182 = v50[8];
    uint64_t v56 = v182;
    uint64_t v183 = v57;
    uint64_t v59 = v50[11];
    uint64_t v184 = v50[10];
    uint64_t v58 = v184;
    uint64_t v185 = v59;
    uint64_t v186 = *(uint64_t *)((char *)v26 + v49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v174 = v58;
    uint64_t v175 = v59;
    uint64_t v172 = v56;
    uint64_t v173 = v57;
    uint64_t v60 = v176;
    uint64_t v61 = v177;
    uint64_t v62 = v178;
    sub_100111F0C(v51, v52);
    v190 = _s5StateVMa;
    sub_100111F90((uint64_t)v26, (uint64_t (*)(void))_s5StateVMa);
    v63 = v220;
    uint64_t v64 = v206;
    uint64_t *v220 = v205;
    v63[1] = v64;
    uint64_t v65 = (int *)v207;
    uint64_t v66 = v63;
    sub_1000935F8(v232, (uint64_t)v63 + *(int *)(v207 + 24), &qword_100293BE0);
    uint64_t v67 = v221;
    sub_1000935F8(v221, (uint64_t)v66 + v65[7], &qword_100293BD8);
    uint64_t v68 = (uint64_t *)((char *)v66 + v65[8]);
    uint64_t v69 = v181;
    *uint64_t v68 = v187;
    v68[1] = v69;
    uint64_t v70 = (char *)v66 + v65[9];
    uint64_t v71 = v189;
    *(void *)uint64_t v70 = v188;
    *((void *)v70 + 1) = v71;
    v70[16] = 0;
    uint64_t v72 = (uint64_t *)((char *)v66 + v65[10]);
    uint64_t v73 = v180;
    *uint64_t v72 = v179;
    v72[1] = v73;
    v72[2] = v53;
    v72[3] = v60;
    v72[4] = v61;
    v72[5] = v54;
    v72[6] = v55;
    v72[7] = v62;
    uint64_t v74 = v183;
    v72[8] = v182;
    v72[9] = v74;
    uint64_t v75 = v185;
    v72[10] = v184;
    v72[11] = v75;
    uint64_t v76 = (char *)v66 + v65[11];
    *(void *)uint64_t v76 = v186;
    v76[8] = 0;
    sub_100113268(v224, (uint64_t)v26, (uint64_t (*)(void))v204);
    uint64_t v206 = *v26;
    uint64_t v205 = v26[1];
    unint64_t v77 = (int *)v231;
    uint64_t v78 = v232;
    sub_100113268((uint64_t)v26 + *(int *)(v231 + 24), v232, (uint64_t (*)(void))v194);
    v191(v78, 0, 1, updated);
    sub_1000936F8((uint64_t)v26 + v77[7], v67, &qword_100293BD8);
    uint64_t v79 = v77[10];
    v80 = (uint64_t *)((char *)v26 + v77[9]);
    uint64_t v81 = v80[1];
    uint64_t updated = *v80;
    uint64_t v185 = v81;
    unint64_t v82 = *(uint64_t (**)())((char *)v26 + v79 + 8);
    uint64_t v193 = *(uint64_t *)((char *)v26 + v79);
    v194 = v82;
    uint64_t v83 = v77[12];
    unint64_t v84 = (uint64_t *)((char *)v26 + v77[11]);
    uint64_t v85 = *v84;
    uint64_t v86 = v84[1];
    uint64_t v87 = v84[2];
    uint64_t v88 = v84[3];
    uint64_t v182 = v84[4];
    uint64_t v183 = v84[5];
    uint64_t v184 = v84[6];
    uint64_t v89 = v84[8];
    v204 = (uint64_t (*)())v84[7];
    uint64_t v186 = v89;
    uint64_t v91 = v84[10];
    uint64_t v187 = v84[9];
    uint64_t v90 = v187;
    uint64_t v188 = v91;
    uint64_t v189 = v84[11];
    uint64_t v92 = v189;
    v191 = *(void (**)(uint64_t, void, uint64_t, uint64_t))((char *)v26 + v83);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v174 = v91;
    uint64_t v175 = v92;
    uint64_t v172 = v89;
    uint64_t v173 = v90;
    uint64_t v93 = v182;
    uint64_t v94 = v183;
    uint64_t v95 = v184;
    sub_100111F0C(v85, v86);
    sub_100111F90((uint64_t)v26, (uint64_t (*)(void))v190);
    v96 = v208;
    uint64_t v97 = v205;
    uint64_t *v208 = v206;
    v96[1] = v97;
    sub_1000935F8(v232, (uint64_t)v96 + v65[6], &qword_100293BE0);
    sub_1000935F8(v221, (uint64_t)v96 + v65[7], &qword_100293BD8);
    v98 = (uint64_t *)((char *)v96 + v65[8]);
    uint64_t v99 = v185;
    uint64_t *v98 = updated;
    v98[1] = v99;
    uint64_t v100 = (char *)v96 + v65[9];
    uint64_t v101 = v194;
    *(void *)uint64_t v100 = v193;
    *((void *)v100 + 1) = v101;
    v100[16] = 0;
    uint64_t v102 = (uint64_t *)((char *)v96 + v65[10]);
    *uint64_t v102 = v85;
    v102[1] = v86;
    v102[2] = v87;
    v102[3] = v88;
    v102[4] = v93;
    v102[5] = v94;
    uint64_t v103 = v204;
    v102[6] = v95;
    v102[7] = (uint64_t)v103;
    uint64_t v104 = v187;
    v102[8] = v186;
    v102[9] = v104;
    uint64_t v105 = v189;
    v102[10] = v188;
    v102[11] = v105;
    uint64_t v106 = (char *)v96 + v65[11];
    *(void *)uint64_t v106 = v191;
    v106[8] = 0;
    LOBYTE(v93) = sub_10012E99C(v96, v220);
    sub_100111F90((uint64_t)v96, _s15PersistentStateO2V1VMa);
    if (v93)
    {
      sub_100111F90((uint64_t)v220, _s15PersistentStateO2V1VMa);
      (*(void (**)(char *, uint64_t))(v216 + 8))(v215, v217);
    }
    else
    {
      uint64_t v107 = v220;
      sub_100113268((uint64_t)v220, (uint64_t)v96, _s15PersistentStateO2V1VMa);
      uint64_t v108 = v195;
      uint64_t v109 = v217;
      uint64_t v110 = v215;
      sub_1001EC6C0();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v108, v197);
      sub_100111F90((uint64_t)v107, _s15PersistentStateO2V1VMa);
      (*(void (**)(char *, uint64_t))(v216 + 8))(v110, v109);
    }
    uint64_t v36 = v219;
    uint64_t v8 = v227;
    uint64_t v11 = v225;
    uint64_t v39 = (uint64_t)v226;
    uint64_t v40 = v230;
  }
  sub_1001EB0B0();
  uint64_t v111 = v36 + OBJC_IVAR___BDSPriceTracker_state;
  swift_beginAccess();
  sub_100113268(v111, v40, (uint64_t (*)(void))_s5StateVMa);
  double v112 = 0.0;
  if (*(void *)(*(void *)v40 + 16))
  {
    sub_1001B81F0((uint64_t)v236);
    sub_1000935F8((uint64_t)v236, (uint64_t)v242, &qword_100293BE8);
    if (v245 == 1)
    {
      char v113 = 1;
      double v114 = 0.0;
    }
    else
    {
      char v113 = 0;
      double v112 = v243;
      double v114 = v244;
    }
    uint64_t v40 = v230;
  }
  else
  {
    char v113 = 1;
    double v114 = 0.0;
  }
  sub_100111F90(v40, (uint64_t (*)(void))_s5StateVMa);
  if (*(void *)(*(void *)v224 + 16))
  {
    sub_1001B81F0((uint64_t)v237);
    sub_1000935F8((uint64_t)v237, (uint64_t)v238, &qword_100293BE8);
    if ((v241 & 1) == 0)
    {
      if ((v113 & 1) == 0 && v239 == v112 && v240 == v114) {
        goto LABEL_20;
      }
      goto LABEL_16;
    }
  }
  if ((v113 & 1) == 0)
  {
LABEL_16:
    double v233 = v112;
    double v234 = v114;
    char v235 = v113;
    sub_10007DC14(&qword_100293C68);
    v115 = v209;
    sub_1001EC6C0();
    (*(void (**)(char *, uint64_t))(v210 + 8))(v115, v211);
  }
LABEL_20:
  uint64_t v116 = v223;
  sub_100113268(v111, v223, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v117 = *(uint64_t **)(v116 + 8);
  uint64_t v118 = v117[2];
  uint64_t v221 = v111;
  if (!v118)
  {
    unint64_t v123 = _swiftEmptyArrayStorage;
    uint64_t v140 = v224;
    goto LABEL_44;
  }
  uint64_t v119 = *(unsigned __int8 *)(v218 + 80);
  uint64_t v120 = (v119 + 32) & ~v119;
  uint64_t v121 = (uint64_t)v117 + v120;
  uint64_t v122 = *(void *)(v218 + 72);
  uint64_t v232 = v122 + v120;
  *(void *)&long long v231 = v119 | 7;
  v220 = v117;
  swift_bridgeObjectRetain();
  unint64_t v123 = _swiftEmptyArrayStorage;
  long long v230 = xmmword_100215320;
  while (1)
  {
    uint64_t v124 = v123[2];
    if (!v124) {
      goto LABEL_36;
    }
    uint64_t v125 = v123[v124 + 3];
    uint64_t v126 = *(void *)(v125 + 16);
    if (!v126) {
      goto LABEL_36;
    }
    sub_100113268(v125 + v120 + (v126 - 1) * v122, v39, (uint64_t (*)(void))_s4DealVMa);
    if ((sub_1001EB090() & 1) == 0)
    {
      sub_100111F90(v39, (uint64_t (*)(void))_s4DealVMa);
LABEL_36:
      sub_10007DC14(&qword_100291E98);
      uint64_t v137 = swift_allocObject();
      *(_OWORD *)(v137 + 16) = v230;
      sub_100113268(v121, v137 + v120, (uint64_t (*)(void))_s4DealVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v123 = sub_1000A70C0(0, v123[2] + 1, 1, v123);
      }
      unint64_t v139 = v123[2];
      unint64_t v138 = v123[3];
      if (v139 >= v138 >> 1) {
        unint64_t v123 = sub_1000A70C0((void *)(v138 > 1), v139 + 1, 1, v123);
      }
      v123[2] = v139 + 1;
      v123[v139 + 4] = v137;
      goto LABEL_23;
    }
    unint64_t v127 = v123[2];
    sub_100113268(v121, (uint64_t)v11, (uint64_t (*)(void))_s4DealVMa);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      if (!v127) {
        goto LABEL_75;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_1001CFCF4(v123);
      unint64_t v123 = (void *)result;
      if (!v127) {
        goto LABEL_75;
      }
    }
    if (v127 > v123[2]) {
      break;
    }
    unint64_t v129 = v127 - 1;
    uint64_t v130 = v123 + 4;
    uint64_t v131 = v127 - 1;
    unint64_t v132 = v123[v131 + 4];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v123[v131 + 4] = v132;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v132 = sub_1000A71D0(0, *(void *)(v132 + 16) + 1, 1, v132);
      v130[v129] = v132;
    }
    unint64_t v135 = *(void *)(v132 + 16);
    unint64_t v134 = *(void *)(v132 + 24);
    if (v135 >= v134 >> 1)
    {
      unint64_t v132 = sub_1000A71D0(v134 > 1, v135 + 1, 1, v132);
      v130[v129] = v132;
    }
    *(void *)(v132 + 16) = v135 + 1;
    uint64_t v136 = v132 + v120 + v135 * v122;
    uint64_t v11 = v225;
    sub_100113198((uint64_t)v225, v136, (uint64_t (*)(void))_s4DealVMa);
    uint64_t v39 = (uint64_t)v226;
    sub_100111F90((uint64_t)v226, (uint64_t (*)(void))_s4DealVMa);
LABEL_23:
    v121 += v122;
    if (!--v118)
    {
      uint64_t v117 = (uint64_t *)swift_bridgeObjectRelease();
      uint64_t v140 = v224;
      uint64_t v8 = v227;
      uint64_t v111 = v221;
LABEL_44:
      __chkstk_darwin(v117);
      uint64_t v141 = v223;
      uint64_t v174 = v223;
      uint64_t v142 = sub_100103538((void (*)(uint64_t *))sub_100115AC0, (uint64_t)&v172, (uint64_t)v123);
      swift_bridgeObjectRelease();
      sub_100111F90(v141, (uint64_t (*)(void))_s5StateVMa);
      uint64_t v143 = *(void *)(v140 + 8);
      uint64_t v144 = *(void *)(v143 + 16);
      if (!v144)
      {
        v149 = _swiftEmptyArrayStorage;
LABEL_68:
        __chkstk_darwin(v143);
        uint64_t v174 = v140;
        v164 = sub_100103538((void (*)(uint64_t *))sub_100115AC0, (uint64_t)&v172, (uint64_t)v149);
        swift_bridgeObjectRelease();
        char v165 = sub_1001B66A4((uint64_t)v164, (uint64_t)v142);
        swift_bridgeObjectRelease();
        if (v165)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          double v233 = *(double *)&v142;
          sub_10007DC14(&qword_100293C98);
          v166 = v198;
          sub_1001EC6C0();
          (*(void (**)(char *, uint64_t))(v199 + 8))(v166, v200);
        }
        uint64_t v167 = (uint64_t)v212;
        sub_100113268(v111, (uint64_t)v212, (uint64_t (*)(void))_s5StateVMa);
        v168 = sub_1001C52CC();
        sub_100111F90(v167, (uint64_t (*)(void))_s5StateVMa);
        v169 = sub_1001C52CC();
        char v170 = sub_1001B5EF8((uint64_t)v169, (uint64_t)v168);
        swift_bridgeObjectRelease();
        if (v170)
        {
          (*(void (**)(char *, uint64_t))(v213 + 8))(v222, v214);
          return swift_bridgeObjectRelease();
        }
        else
        {
          double v233 = *(double *)&v168;
          sub_10007DC14(&qword_100293CA0);
          v171 = v201;
          sub_1001EC6C0();
          (*(void (**)(char *, uint64_t))(v202 + 8))(v171, v203);
          return (*(uint64_t (**)(char *, uint64_t))(v213 + 8))(v222, v214);
        }
      }
      v225 = 0;
      v226 = v142;
      uint64_t v145 = *(unsigned __int8 *)(v218 + 80);
      uint64_t v146 = (v145 + 32) & ~v145;
      uint64_t v147 = v143 + v146;
      uint64_t v148 = *(void *)(v218 + 72);
      uint64_t v232 = v145 | 7;
      uint64_t v223 = v143;
      swift_bridgeObjectRetain();
      v149 = _swiftEmptyArrayStorage;
      long long v231 = xmmword_100215320;
      *(void *)&long long v230 = v148 + v146;
      while (1)
      {
        uint64_t v150 = v149[2];
        if (v150)
        {
          uint64_t v151 = v149[v150 + 3];
          uint64_t v152 = *(void *)(v151 + 16);
          if (v152)
          {
            sub_100113268(v151 + v146 + (v152 - 1) * v148, (uint64_t)v8, (uint64_t (*)(void))_s4DealVMa);
            if (sub_1001EB090())
            {
              unint64_t v153 = v149[2];
              sub_100113268(v147, v228, (uint64_t (*)(void))_s4DealVMa);
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if (result)
              {
                if (!v153) {
                  goto LABEL_77;
                }
              }
              else
              {
                uint64_t result = (uint64_t)sub_1001CFCF4(v149);
                v149 = (void *)result;
                if (!v153) {
                  goto LABEL_77;
                }
              }
              if (v153 > v149[2]) {
                goto LABEL_76;
              }
              unint64_t v154 = v153 - 1;
              v155 = v149 + 4;
              uint64_t v156 = v153 - 1;
              unint64_t v157 = v149[v156 + 4];
              char v158 = swift_isUniquelyReferenced_nonNull_native();
              v149[v156 + 4] = v157;
              if ((v158 & 1) == 0)
              {
                unint64_t v157 = sub_1000A71D0(0, *(void *)(v157 + 16) + 1, 1, v157);
                v155[v154] = v157;
              }
              unint64_t v160 = *(void *)(v157 + 16);
              unint64_t v159 = *(void *)(v157 + 24);
              if (v160 >= v159 >> 1)
              {
                unint64_t v157 = sub_1000A71D0(v159 > 1, v160 + 1, 1, v157);
                v155[v154] = v157;
              }
              *(void *)(v157 + 16) = v160 + 1;
              sub_100113198(v228, v157 + v146 + v160 * v148, (uint64_t (*)(void))_s4DealVMa);
              uint64_t v8 = v227;
              sub_100111F90((uint64_t)v227, (uint64_t (*)(void))_s4DealVMa);
              goto LABEL_47;
            }
            sub_100111F90((uint64_t)v8, (uint64_t (*)(void))_s4DealVMa);
          }
        }
        sub_10007DC14(&qword_100291E98);
        uint64_t v161 = swift_allocObject();
        *(_OWORD *)(v161 + 16) = v231;
        sub_100113268(v147, v161 + v146, (uint64_t (*)(void))_s4DealVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v149 = sub_1000A70C0(0, v149[2] + 1, 1, v149);
        }
        unint64_t v163 = v149[2];
        unint64_t v162 = v149[3];
        if (v163 >= v162 >> 1) {
          v149 = sub_1000A70C0((void *)(v162 > 1), v163 + 1, 1, v149);
        }
        v149[2] = v163 + 1;
        v149[v163 + 4] = v161;
LABEL_47:
        v147 += v148;
        if (!--v144)
        {
          uint64_t v143 = swift_bridgeObjectRelease();
          uint64_t v140 = v224;
          uint64_t v111 = v221;
          uint64_t v142 = v226;
          goto LABEL_68;
        }
      }
    }
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_10010A508(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, double a5, double a6)
{
  uint64_t v34 = a4;
  uint64_t v12 = _s5StateVMa();
  uint64_t v13 = (int *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v33 = (uint64_t)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = v6 + OBJC_IVAR___BDSPriceTracker_state;
  swift_beginAccess();
  uint64_t v32 = _s5StateVMa;
  sub_100113268(v18, (uint64_t)v17, (uint64_t (*)(void))_s5StateVMa);
  sub_1001C9484(a1);
  sub_100112278(a2, (uint64_t)&v17[v13[8]], (uint64_t (*)(void))_s14UpdateScheduleVMa);
  uint64_t v19 = (double *)&v17[v13[12]];
  *uint64_t v19 = a5;
  v19[1] = a6;
  uint64_t v20 = (uint64_t)&v17[v13[13]];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *(void *)(v20 + 8);
  uint64_t v30 = *(void *)(v20 + 16);
  uint64_t v31 = v21;
  uint64_t v23 = *(void *)(v20 + 40);
  uint64_t v28 = *(void *)(v20 + 48);
  uint64_t v29 = v23;
  uint64_t v27 = *(void *)(v20 + 56);
  long long v26 = *(_OWORD *)(v20 + 64);
  sub_1001122E0(a3);
  sub_10011215C(v22, v31);
  sub_1000935F8((uint64_t)a3, v20, &qword_100293C70);
  *(void *)&v17[v13[14]] = v34;
  uint64_t v24 = v33;
  sub_100113268(v18, v33, (uint64_t (*)(void))v32);
  swift_beginAccess();
  sub_100112278((uint64_t)v17, v18, (uint64_t (*)(void))_s5StateVMa);
  swift_endAccess();
  sub_100103B40(v24);
  sub_100111F90((uint64_t)v17, (uint64_t (*)(void))_s5StateVMa);
  return sub_100111F90(v24, (uint64_t (*)(void))_s5StateVMa);
}

uint64_t sub_10010A768()
{
  v1[18] = v0;
  uint64_t v2 = sub_1001EB0C0();
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  v1[22] = _s5StateVMa();
  v1[23] = swift_task_alloc();
  uint64_t v3 = sub_10007DC14(&qword_100293C60);
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v1[27] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10010A8E8;
  return sub_10010AF38(0);
}

uint64_t sub_10010A8E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  return _swift_task_switch(sub_10010A9F8, v1, 0);
}

uint64_t sub_10010A9F8()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 144) + OBJC_IVAR___BDSPriceTracker_state;
  swift_beginAccess();
  sub_100113268(v2, v1, (uint64_t (*)(void))_s5StateVMa);
  sub_1001EB0B0();
  if (!*(void *)(*(void *)v1 + 16))
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    goto LABEL_5;
  }
  sub_1001B81F0(v0 + 56);
  sub_1000935F8(v0 + 56, v0 + 16, &qword_100293BE8);
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
LABEL_5:
    char v11 = 1;
    goto LABEL_7;
  }
  char v11 = 0;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
LABEL_7:
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 192);
  (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
  sub_100111F90(v8, (uint64_t (*)(void))_s5StateVMa);
  *(void *)(v0 + 120) = v3;
  *(void *)(v0 + 128) = v4;
  *(unsigned char *)(v0 + 136) = v11;
  sub_10007DC14(&qword_100293C68);
  sub_1001EC6C0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10010AD50(const void *a1, uint64_t a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[4] = v3;
  void *v3 = v2;
  v3[1] = sub_10010ADFC;
  return sub_10010AF38(2);
}

uint64_t sub_10010ADFC()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_release();
  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_10010AF38(char a1)
{
  *(void *)(v2 + 120) = v1;
  *(unsigned char *)(v2 + 301) = a1;
  uint64_t v3 = sub_1001EB0C0();
  *(void *)(v2 + 128) = v3;
  *(void *)(v2 + 136) = *(void *)(v3 - 8);
  *(void *)(v2 + 144) = swift_task_alloc();
  _s5StateVMa();
  *(void *)(v2 + 152) = swift_task_alloc();
  *(void *)(v2 + 160) = swift_task_alloc();
  sub_10007DC14(&qword_100293BD8);
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t updated = _s6UpdateVMa();
  *(void *)(v2 + 176) = updated;
  *(void *)(v2 + 184) = *(void *)(updated - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  *(void *)(v2 + 200) = swift_task_alloc();
  *(void *)(v2 + 208) = swift_task_alloc();
  return _swift_task_switch(sub_10010B0E0, v1, 0);
}

uint64_t sub_10010B0E0()
{
  uint64_t v44 = v0;
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1001EB560();
  *(void *)(v0 + 216) = sub_10007CFF8(v1, (uint64_t)qword_1002A4198);
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = *(unsigned char *)(v0 + 301);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    *(unsigned char *)(v0 + 300) = v4;
    uint64_t v6 = sub_1001EC3D0();
    *(void *)(v0 + 112) = sub_1001A8090(v6, v7, &v43);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[PriceTracker] updateTrackedPrices(schedulePolicy: %s)", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = *(void *)(v0 + 184);
  uint64_t v10 = *(void *)(v0 + 160);
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 144);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v41 = *(void *)(v0 + 128);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v42 = *(void *)(v0 + 176);
  uint64_t v15 = OBJC_IVAR___BDSPriceTracker_state;
  *(void *)(v0 + 224) = OBJC_IVAR___BDSPriceTracker_state;
  uint64_t v16 = v14 + v15;
  int v17 = *(unsigned __int8 *)(v0 + 301);
  swift_beginAccess();
  sub_100113268(v16, v10, (uint64_t (*)(void))_s5StateVMa);
  sub_1001EB0B0();
  sub_1001C5B10(v17, v11, v9);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v41);
  sub_100113268(v16, v12, (uint64_t (*)(void))_s5StateVMa);
  swift_beginAccess();
  sub_100112278(v10, v16, (uint64_t (*)(void))_s5StateVMa);
  swift_endAccess();
  sub_100103B40(v12);
  sub_100111F90(v10, (uint64_t (*)(void))_s5StateVMa);
  sub_100111F90(v12, (uint64_t (*)(void))_s5StateVMa);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v42) == 1)
  {
    sub_1000816A4(*(void *)(v0 + 168), &qword_100293BD8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 200);
    uint64_t v21 = *(void *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 192);
    sub_100113198(*(void *)(v0 + 168), v21, (uint64_t (*)(void))_s6UpdateVMa);
    sub_100113268(v21, v20, (uint64_t (*)(void))_s6UpdateVMa);
    sub_100113268(v21, v22, (uint64_t (*)(void))_s6UpdateVMa);
    uint64_t v23 = sub_1001EB540();
    os_log_type_t v24 = sub_1001EC910();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 192);
    uint64_t v27 = *(void *)(v0 + 200);
    if (v25)
    {
      uint64_t v28 = *(void *)(v0 + 176);
      uint64_t v29 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134218242;
      uint64_t v30 = *(void *)(*(void *)(v27 + *(int *)(v28 + 20)) + 16);
      sub_100111F90(v27, (uint64_t (*)(void))_s6UpdateVMa);
      *(void *)(v0 + 96) = v30;
      sub_1001ECBC0();
      *(_WORD *)(v29 + 12) = 2080;
      sub_100112224();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1001EC760();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 104) = sub_1001A8090(v31, v33, &v43);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_100111F90(v26, (uint64_t (*)(void))_s6UpdateVMa);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[PriceTracker] Price-update started with %ld items: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100111F90(*(void *)(v0 + 200), (uint64_t (*)(void))_s6UpdateVMa);
      sub_100111F90(v26, (uint64_t (*)(void))_s6UpdateVMa);
    }

    uint64_t v34 = *(void *)(v0 + 208);
    uint64_t v35 = *(void *)(v0 + 176);
    id v36 = sub_100103D90();
    uint64_t v38 = v37;
    *(void *)(v0 + 232) = v36;
    *(void *)(v0 + 240) = v37;
    uint64_t v39 = *(void *)(v34 + *(int *)(v35 + 20));
    *(void *)(v0 + 248) = v39;
    swift_bridgeObjectRetain();
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_10010B734;
    return sub_1001BDFC4(v39, (uint64_t)v36, v38);
  }
}

uint64_t sub_10010B734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = *(void **)v4;
  uint64_t v8 = *(void **)(*(void *)v4 + 240);
  v7[33] = v3;
  swift_task_dealloc();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v9 = v7[15];
  if (v3)
  {
    uint64_t v10 = sub_10010BB60;
  }
  else
  {
    v7[34] = a3;
    v7[35] = a2;
    v7[36] = a1;
    uint64_t v10 = sub_10010B8E0;
  }
  return _swift_task_switch(v10, v9, 0);
}

uint64_t sub_10010B8E0()
{
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v1 = *(void *)(v0 + 280);
  unint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 120) + *(void *)(v0 + 224);
  char v8 = sub_1001EC720();
  sub_100113268(v7, v6, (uint64_t (*)(void))_s5StateVMa);
  int v9 = v8 & 1;
  sub_1001C6A90(v4, v9, v3, v1, v2);
  sub_1001121E0(v3, v1);
  sub_100113268(v7, v5, (uint64_t (*)(void))_s5StateVMa);
  swift_beginAccess();
  sub_100112278(v6, v7, (uint64_t (*)(void))_s5StateVMa);
  swift_endAccess();
  sub_100103B40(v5);
  sub_100111F90(v6, (uint64_t (*)(void))_s5StateVMa);
  sub_100111F90(v5, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v10 = sub_1001EB540();
  os_log_type_t v11 = sub_1001EC910();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109120;
    *(_DWORD *)(v0 + 296) = v9;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[PriceTracker] Price-update finished (cancelled? %{BOOL}d)", v12, 8u);
    swift_slowDealloc();
  }
  uint64_t v13 = *(void *)(v0 + 208);

  sub_100111F90(v13, (uint64_t (*)(void))_s6UpdateVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_10010BB60()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC8F0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 88) = v5;
    sub_1001ECBC0();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[PriceTracker] Failed to fetch pricing information: %@", v3, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v9 = *(void *)(v0 + 120) + *(void *)(v0 + 224);
  char v10 = sub_1001EC720();
  sub_100113268(v9, v8, (uint64_t (*)(void))_s5StateVMa);
  int v11 = v10 & 1;
  sub_1001C6A90(v6, v11, 0, 0, 0);
  sub_1001121E0(0, 0);
  sub_100113268(v9, v7, (uint64_t (*)(void))_s5StateVMa);
  swift_beginAccess();
  sub_100112278(v8, v9, (uint64_t (*)(void))_s5StateVMa);
  swift_endAccess();
  sub_100103B40(v7);
  sub_100111F90(v8, (uint64_t (*)(void))_s5StateVMa);
  sub_100111F90(v7, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v12 = sub_1001EB540();
  os_log_type_t v13 = sub_1001EC910();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 67109120;
    *(_DWORD *)(v0 + 296) = v11;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[PriceTracker] Price-update finished (cancelled? %{BOOL}d)", v14, 8u);
    swift_slowDealloc();
  }
  uint64_t v15 = *(void *)(v0 + 208);

  sub_100111F90(v15, (uint64_t (*)(void))_s6UpdateVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

void sub_10010BF44()
{
  sub_10010C148(319, &qword_100293AF8, &qword_100293B00, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_10010C148(319, &qword_100293B08, &qword_100293B10, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for AsyncStream.Continuation);
    if (v1 <= 0x3F)
    {
      sub_10010C148(319, &qword_100293B18, &qword_100291910, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for AsyncStream.Continuation);
      if (v2 <= 0x3F)
      {
        sub_10010C1A8();
        if (v3 <= 0x3F)
        {
          _s5StateVMa();
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_10010C148(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_10008155C(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_10010C1A8()
{
  if (!qword_100293B20)
  {
    unint64_t v0 = sub_1001EC6E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100293B20);
    }
  }
}

uint64_t sub_10010C200(uint64_t a1)
{
  v2[26] = a1;
  v2[27] = v1;
  _s14UpdateScheduleVMa();
  v2[28] = swift_task_alloc();
  return _swift_task_switch(sub_10010C290, v1, 0);
}

uint64_t sub_10010C290()
{
  uint64_t v1 = *(void **)(v0 + 224);
  unint64_t v2 = *(void **)(v0 + 208);
  unint64_t v3 = sub_100127134();
  id v4 = [v2 updateScheduleSteps];
  sub_100081668(0, &qword_100293C50);
  unint64_t v5 = sub_1001EC5E0();

  sub_100127408(v5, v1);
  double v7 = sub_100127300();
  double v9 = v8;
  id v10 = [*(id *)(v0 + 208) notification];
  if (v10)
  {
    sub_1001277B8(v10, (uint64_t *)(v0 + 112));
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v18 = *(void *)(v0 + 168);
    uint64_t v19 = *(void *)(v0 + 176);
    uint64_t v20 = *(void *)(v0 + 184);
    uint64_t v22 = *(void *)(v0 + 192);
    uint64_t v21 = *(void *)(v0 + 200);
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v21 = 0;
  }
  uint64_t v28 = v12;
  uint64_t v29 = v11;
  uint64_t v23 = *(void *)(v0 + 224);
  os_log_type_t v24 = *(void **)(v0 + 208);
  *(void *)(v0 + 16) = v11;
  *(void *)(v0 + 24) = v12;
  *(void *)(v0 + 32) = v14;
  *(void *)(v0 + 40) = v13;
  *(void *)(v0 + 48) = v15;
  *(void *)(v0 + 56) = v16;
  *(void *)(v0 + 64) = v17;
  *(void *)(v0 + 72) = v18;
  *(void *)(v0 + 80) = v19;
  *(void *)(v0 + 88) = v20;
  *(void *)(v0 + 96) = v22;
  *(void *)(v0 + 104) = v21;
  id v25 = [v24 cardLimit];
  id v26 = [v25 integerValue];

  sub_10010A508((uint64_t)v3, v23, (uint64_t *)(v0 + 16), (uint64_t)v26, v7, v9);
  sub_10011215C(v29, v28);
  swift_bridgeObjectRelease();
  sub_100111F90(v23, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_10010C694(void *a1, void *aBlock, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v5 = a1;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v3[5] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10010C758;
  return sub_10010C200((uint64_t)v5);
}

uint64_t sub_10010C758()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  id v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  swift_release();
  uint64_t v7 = *(void *)(v3 + 32);
  if (v2)
  {
    uint64_t v8 = (void *)sub_1001EAE50();
    swift_errorRelease();
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
  _Block_release(*(const void **)(v4 + 32));
  double v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t sub_10010C8F8()
{
  v1[20] = v0;
  uint64_t v2 = sub_1001EAC00();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  uint64_t v3 = sub_1001EAC20();
  v1[25] = v3;
  v1[26] = *(void *)(v3 - 8);
  v1[27] = swift_task_alloc();
  uint64_t v4 = _s4DealVMa();
  v1[28] = v4;
  v1[29] = *(void *)(v4 - 8);
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  uint64_t v5 = sub_1001EB0C0();
  v1[32] = v5;
  v1[33] = *(void *)(v5 - 8);
  v1[34] = swift_task_alloc();
  sub_10007DC14(&qword_100293BD8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  sub_10007DC14(&qword_100293BE0);
  v1[37] = swift_task_alloc();
  v1[38] = _s5StateVMa();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = _s15PersistentStateO2V1VMa(0);
  v1[44] = swift_task_alloc();
  _s15PersistentStateOMa(0);
  v1[45] = swift_task_alloc();
  v1[46] = type metadata accessor for PriceTracker.Envelope(0);
  v1[47] = swift_task_alloc();
  return _swift_task_switch(sub_10010CC40, v0, 0);
}

uint64_t sub_10010CC40()
{
  uint64_t v1 = v0;
  uint64_t v97 = v0[45];
  uint64_t v2 = (uint64_t *)v0[42];
  unint64_t v82 = (void *)v0[44];
  uint64_t v83 = (int *)v0[43];
  uint64_t v101 = v0[41];
  uint64_t v3 = (int *)v0[38];
  uint64_t v4 = v1[36];
  uint64_t v5 = v1[37];
  uint64_t v99 = v1[35];
  uint64_t v6 = v1[20] + OBJC_IVAR___BDSPriceTracker_state;
  uint64_t v96 = v6;
  swift_beginAccess();
  sub_100113268(v6, (uint64_t)v2, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v102 = *v2;
  uint64_t v103 = v2[1];
  uint64_t v91 = v5;
  sub_100113268((uint64_t)v2 + v3[6], v5, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  uint64_t updated = _s14UpdateScheduleVMa();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v5, 0, 1, updated);
  sub_1000936F8((uint64_t)v2 + v3[7], v4, &qword_100293BD8);
  uint64_t v8 = v3[10];
  double v9 = (uint64_t *)((char *)v2 + v3[9]);
  uint64_t v85 = *v9;
  uint64_t v77 = v9[1];
  uint64_t v86 = *(uint64_t *)((char *)v2 + v8);
  uint64_t v89 = *(uint64_t *)((char *)v2 + v8 + 8);
  uint64_t v10 = v3[12];
  uint64_t v94 = v3;
  uint64_t v11 = (uint64_t *)((char *)v2 + v3[11]);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v75 = *v11;
  uint64_t v76 = v11[2];
  uint64_t v71 = v11[3];
  uint64_t v72 = v11[4];
  uint64_t v14 = v11[6];
  uint64_t v73 = v11[5];
  uint64_t v74 = v11[7];
  uint64_t v78 = v11[8];
  uint64_t v79 = v11[9];
  uint64_t v80 = v11[10];
  uint64_t v81 = v11[11];
  uint64_t v84 = *(uint64_t *)((char *)v2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100111F0C(v12, v13);
  sub_100111F90((uint64_t)v2, (uint64_t (*)(void))_s5StateVMa);
  *unint64_t v82 = v102;
  v82[1] = v103;
  sub_1000935F8(v91, (uint64_t)v82 + v83[6], &qword_100293BE0);
  sub_1000935F8(v4, (uint64_t)v82 + v83[7], &qword_100293BD8);
  uint64_t v15 = (void *)((char *)v82 + v83[8]);
  *uint64_t v15 = v85;
  v15[1] = v77;
  uint64_t v16 = (char *)v82 + v83[9];
  *(void *)uint64_t v16 = v86;
  *((void *)v16 + 1) = v89;
  v16[16] = 0;
  uint64_t v17 = (void *)((char *)v82 + v83[10]);
  *uint64_t v17 = v75;
  v17[1] = v13;
  uint64_t v18 = v1;
  v17[2] = v76;
  v17[3] = v71;
  v17[4] = v72;
  v17[5] = v73;
  v17[6] = v14;
  v17[7] = v74;
  v17[8] = v78;
  v17[9] = v79;
  v17[10] = v80;
  v17[11] = v81;
  uint64_t v19 = (char *)v82 + v83[11];
  *(void *)uint64_t v19 = v84;
  v19[8] = 0;
  sub_100113268((uint64_t)v82, v97, _s15PersistentStateO2V1VMa);
  sub_100111F90((uint64_t)v82, _s15PersistentStateO2V1VMa);
  sub_1000936F8(v6 + v94[8], v99, &qword_100293BD8);
  sub_100113268(v6, v101, (uint64_t (*)(void))_s5StateVMa);
  uint64_t v20 = *(void *)(v101 + 8);
  uint64_t v21 = *(void *)(v20 + 16);
  uint64_t v100 = v1;
  if (!v21)
  {
    id v26 = _swiftEmptyArrayStorage;
LABEL_25:
    uint64_t v46 = v18[40];
    uint64_t v45 = v18[41];
    uint64_t v47 = v18[39];
    uint64_t v48 = swift_task_alloc();
    *(void *)(v48 + 16) = v45;
    v98 = sub_100103538((void (*)(uint64_t *))sub_100111FF0, v48, (uint64_t)v26);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100111F90(v45, (uint64_t (*)(void))_s5StateVMa);
    sub_100113268(v96, v46, (uint64_t (*)(void))_s5StateVMa);
    uint64_t v93 = sub_1001C52CC();
    sub_100111F90(v46, (uint64_t (*)(void))_s5StateVMa);
    sub_100113268(v96, v47, (uint64_t (*)(void))_s5StateVMa);
    sub_1001EB0B0();
    if (*(void *)(*(void *)v47 + 16)
      && (sub_1001B81F0((uint64_t)(v100 + 7)),
          sub_1000935F8((uint64_t)(v100 + 7), (uint64_t)(v100 + 2), &qword_100293BE8),
          (v100[6] & 1) == 0))
    {
      uint64_t v52 = v100[39];
      double v53 = *((double *)v100 + 4);
      double v54 = *((double *)v100 + 5);
      (*(void (**)(uint64_t, uint64_t))(v100[33] + 8))(v100[34], v100[32]);
      sub_100111F90(v52, (uint64_t (*)(void))_s5StateVMa);
      sub_1000DB2AC(v53, v54);
      uint64_t v50 = v55;
      uint64_t v51 = v56;
    }
    else
    {
      uint64_t v49 = v100[39];
      (*(void (**)(uint64_t, uint64_t))(v100[33] + 8))(v100[34], v100[32]);
      sub_100111F90(v49, (uint64_t (*)(void))_s5StateVMa);
      uint64_t v50 = 0;
      uint64_t v51 = 0;
    }
    uint64_t v57 = (int *)v100[46];
    uint64_t v58 = v100[47];
    uint64_t v59 = v100[35];
    uint64_t v60 = v100[26];
    uint64_t v61 = v100[27];
    uint64_t v87 = v100[25];
    uint64_t v95 = (char *)v100[24];
    uint64_t v62 = v100[22];
    uint64_t v90 = v100[23];
    uint64_t v92 = v100[21];
    sub_100113198(v100[45], v58, _s15PersistentStateOMa);
    sub_1000935F8(v59, v58 + v57[5], &qword_100293BD8);
    *(void *)(v58 + v57[6]) = v98;
    *(void *)(v58 + v57[7]) = v93;
    v63 = (void *)(v58 + v57[8]);
    void *v63 = v50;
    v63[1] = v51;
    sub_1001EAC60();
    swift_allocObject();
    sub_1001EAC50();
    (*(void (**)(uint64_t, void, uint64_t))(v60 + 104))(v61, enum case for JSONEncoder.DateEncodingStrategy.iso8601(_:), v87);
    sub_1001EAC30();
    sub_10007DC14(&qword_100293BF0);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_100215330;
    sub_1001EABD0();
    sub_1001EABF0();
    sub_1001EABE0();
    v100[19] = v64;
    sub_10011200C(&qword_100293BF8, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
    sub_10007DC14(&qword_100293C00);
    sub_1000815A4((unint64_t *)&qword_100293C08, &qword_100293C00);
    sub_1001ECC30();
    uint64_t v65 = (void (*)(uint64_t *, void))sub_1001EAC10();
    sub_10010D8C4(v95, v90);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
    v66(v90, v92);
    v66((uint64_t)v95, v92);
    v65(v18 + 12, 0);
    sub_10011200C(&qword_100293C10, (void (*)(uint64_t))type metadata accessor for PriceTracker.Envelope);
    uint64_t v67 = sub_1001EAC40();
    uint64_t v88 = v68;
    uint64_t v69 = v67;
    sub_100111F90(v100[47], type metadata accessor for PriceTracker.Envelope);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v70 = (uint64_t (*)(uint64_t, uint64_t))v100[1];
    return v70(v69, v88);
  }
  uint64_t v22 = v1[29];
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v20 + v23;
  uint64_t v25 = *(void *)(v22 + 72);
  swift_bridgeObjectRetain();
  id v26 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v27 = v26[2];
    if (!v27) {
      goto LABEL_17;
    }
    uint64_t v28 = v26[v27 + 3];
    uint64_t v29 = *(void *)(v28 + 16);
    if (!v29) {
      goto LABEL_17;
    }
    sub_100113268(v28 + v23 + (v29 - 1) * v25, v18[31], (uint64_t (*)(void))_s4DealVMa);
    if ((sub_1001EB090() & 1) == 0)
    {
      sub_100111F90(v18[31], (uint64_t (*)(void))_s4DealVMa);
LABEL_17:
      sub_10007DC14(&qword_100291E98);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_100215320;
      sub_100113268(v24, v42 + v23, (uint64_t (*)(void))_s4DealVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v26 = sub_1000A70C0(0, v26[2] + 1, 1, v26);
      }
      unint64_t v44 = v26[2];
      unint64_t v43 = v26[3];
      if (v44 >= v43 >> 1) {
        id v26 = sub_1000A70C0((void *)(v43 > 1), v44 + 1, 1, v26);
      }
      v26[2] = v44 + 1;
      v26[v44 + 4] = v42;
      goto LABEL_4;
    }
    unint64_t v30 = v26[2];
    sub_100113268(v24, v18[30], (uint64_t (*)(void))_s4DealVMa);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      if (!v30) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_1001CFCF4(v26);
      id v26 = (void *)result;
      if (!v30) {
        goto LABEL_33;
      }
    }
    if (v30 > v26[2]) {
      break;
    }
    unint64_t v32 = v30 - 1;
    unint64_t v33 = v26 + 4;
    uint64_t v34 = v30 - 1;
    unint64_t v35 = v26[v34 + 4];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26[v34 + 4] = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v35 = sub_1000A71D0(0, *(void *)(v35 + 16) + 1, 1, v35);
      v33[v32] = v35;
    }
    unint64_t v38 = *(void *)(v35 + 16);
    unint64_t v37 = *(void *)(v35 + 24);
    if (v38 >= v37 >> 1)
    {
      unint64_t v35 = sub_1000A71D0(v37 > 1, v38 + 1, 1, v35);
      v33[v32] = v35;
    }
    uint64_t v39 = v100[30];
    uint64_t v40 = v100[31];
    *(void *)(v35 + 16) = v38 + 1;
    uint64_t v41 = v35 + v23 + v38 * v25;
    uint64_t v18 = v100;
    sub_100113198(v39, v41, (uint64_t (*)(void))_s4DealVMa);
    sub_100111F90(v40, (uint64_t (*)(void))_s4DealVMa);
LABEL_4:
    v24 += v25;
    if (!--v21)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_10010D8C4(char *a1, uint64_t a2)
{
  unint64_t v30 = a1;
  uint64_t v4 = sub_10007DC14(&qword_100293C18);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v28 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - v7;
  uint64_t v9 = sub_1001EAC00();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v24 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v27 = v2;
  uint64_t v25 = v16;
  v16(v13, v2, v9);
  v24[1] = sub_10011200C(&qword_100293BF8, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
  sub_1001ECC10();
  sub_10011200C(&qword_100293C20, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
  uint64_t v26 = a2;
  char v17 = sub_1001EC330() ^ 1;
  uint64_t v29 = v4;
  uint64_t v18 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v17 & 1;
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v21 = v25;
    uint64_t v20 = v26;
    v25(v18, v26, v9);
    v21(v13, v20, v9);
    sub_1001ECC20();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v18, v15, v9);
  }
  uint64_t v22 = &v28[*(int *)(v29 + 48)];
  v19(v22, v18, v9);
  v19(v30, v22, v9);
  return v17 & 1;
}

uint64_t sub_10010DD28(const void *a1, uint64_t a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[4] = v3;
  void *v3 = v2;
  v3[1] = sub_10010DDD0;
  return sub_10010C8F8();
}

uint64_t sub_10010DDD0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *v3;
  uint64_t v8 = *v3;
  swift_task_dealloc();
  swift_release();
  if (v4)
  {
    uint64_t v9 = sub_1001EAE50();
    swift_errorRelease();
    Class isa = 0;
    uint64_t v11 = (void *)v9;
  }
  else
  {
    Class isa = sub_1001EAFD0().super.isa;
    sub_100081714(a1, a2);
    uint64_t v9 = 0;
    uint64_t v11 = isa;
  }
  uint64_t v12 = *(void (***)(void, void, void))(v7 + 24);
  ((void (**)(void, Class, uint64_t))v12)[2](v12, isa, v9);

  _Block_release(v12);
  uint64_t v13 = *(uint64_t (**)(void))(v8 + 8);
  return v13();
}

uint64_t sub_10010DF6C(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  _s5StateVMa();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_10010E00C, v1, 0);
}

uint64_t sub_10010E00C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  id v4 = *(id *)(v0 + 64);
  id v5 = [v4 adamID];
  uint64_t v6 = sub_1001EC370();
  uint64_t v8 = v7;

  LODWORD(v5) = [v4 isAudiobook];
  uint64_t v9 = v3 + OBJC_IVAR___BDSPriceTracker_state;
  swift_beginAccess();
  sub_100113268(v9, v2, (uint64_t (*)(void))_s5StateVMa);
  sub_1001C755C(v6, v8, (int)v5);
  swift_bridgeObjectRelease();
  sub_100113268(v9, v1, (uint64_t (*)(void))_s5StateVMa);
  swift_beginAccess();
  sub_100112278(v2, v9, (uint64_t (*)(void))_s5StateVMa);
  swift_endAccess();
  sub_100103B40(v1);
  sub_100111F90(v2, (uint64_t (*)(void))_s5StateVMa);
  sub_100111F90(v1, (uint64_t (*)(void))_s5StateVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10010E358(void *a1, void *aBlock, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v5 = a1;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v3[5] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10010E41C;
  return sub_10010DF6C((uint64_t)v5);
}

uint64_t sub_10010E41C()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 32);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  swift_release();

  v1[2](v1);
  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_10010E578(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  _s5StateVMa();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_10010E618, v1, 0);
}

uint64_t sub_10010E618()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  unint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = (void *)sub_100121718((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v6 = sub_10010E7A8(v5, v3);
  uint64_t v7 = v4 + OBJC_IVAR___BDSPriceTracker_state;
  swift_beginAccess();
  sub_100113268(v7, v2, (uint64_t (*)(void))_s5StateVMa);
  sub_1001C7390(v6);
  sub_100113268(v7, v1, (uint64_t (*)(void))_s5StateVMa);
  swift_beginAccess();
  sub_100112278(v2, v7, (uint64_t (*)(void))_s5StateVMa);
  swift_endAccess();
  sub_100103B40(v1);
  sub_100111F90(v2, (uint64_t (*)(void))_s5StateVMa);
  sub_100111F90(v1, (uint64_t (*)(void))_s5StateVMa);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10010E7A8(void *a1, unint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    unint64_t v51 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = sub_1001ECE40() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v3 = ~v6;
    unint64_t v51 = a2 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a2 + 64);
    unint64_t v5 = a2;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v50 = (unint64_t)(v3 + 64) >> 6;
  for (i = v5; ; unint64_t v5 = i)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      if (!sub_1001ECE70()) {
        goto LABEL_44;
      }
      sub_100081668(0, (unint64_t *)&qword_100293B58);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v57;
      swift_unknownObjectRelease();
      sub_100081668(0, (unint64_t *)&qword_100293B60);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v15 = v57;
      swift_unknownObjectRelease();
      uint64_t v13 = v9;
      uint64_t v11 = v4;
      if (!v57) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v4)
      {
        uint64_t v11 = (v4 - 1) & v4;
        unint64_t v12 = __clz(__rbit64(v4)) | (v9 << 6);
        uint64_t v13 = v9;
      }
      else
      {
        int64_t v16 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_47;
        }
        if (v16 >= v50) {
          goto LABEL_44;
        }
        unint64_t v17 = *(void *)(v51 + 8 * v16);
        uint64_t v13 = v9 + 1;
        if (!v17)
        {
          uint64_t v13 = v9 + 2;
          if (v9 + 2 >= v50) {
            goto LABEL_44;
          }
          unint64_t v17 = *(void *)(v51 + 8 * v13);
          if (!v17)
          {
            uint64_t v13 = v9 + 3;
            if (v9 + 3 >= v50) {
              goto LABEL_44;
            }
            unint64_t v17 = *(void *)(v51 + 8 * v13);
            if (!v17)
            {
              uint64_t v13 = v9 + 4;
              if (v9 + 4 >= v50) {
                goto LABEL_44;
              }
              unint64_t v17 = *(void *)(v51 + 8 * v13);
              if (!v17)
              {
                uint64_t v13 = v9 + 5;
                if (v9 + 5 >= v50) {
                  goto LABEL_44;
                }
                unint64_t v17 = *(void *)(v51 + 8 * v13);
                if (!v17)
                {
                  uint64_t v18 = v9 + 6;
                  while (v50 != v18)
                  {
                    unint64_t v17 = *(void *)(v51 + 8 * v18++);
                    if (v17)
                    {
                      uint64_t v13 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_1000B251C();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = 8 * v12;
      uint64_t v20 = *(void **)(*(void *)(v5 + 56) + v19);
      id v14 = *(id *)(*(void *)(v5 + 48) + v19);
      id v15 = v20;
      if (!v14) {
        goto LABEL_44;
      }
    }
    unint64_t v55 = v11;
    uint64_t v56 = v13;
    id v21 = v14;
    id v22 = [v21 adamID];
    uint64_t v23 = sub_1001EC370();
    uint64_t v25 = v24;

    int v26 = [v21 isAudiobook];
    double v53 = v21;

    id v54 = v15;
    unint64_t v27 = sub_100111A08(v54);
    uint64_t v29 = v28;
    unint64_t v30 = v27;
    uint64_t v32 = v31;
    unint64_t v33 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = v33;
    uint64_t v35 = v23;
    unint64_t v37 = sub_1001A88FC(v23, v25, v26);
    uint64_t v38 = v33[2];
    BOOL v39 = (v36 & 1) == 0;
    uint64_t v40 = v38 + v39;
    if (__OFADD__(v38, v39)) {
      break;
    }
    char v41 = v36;
    if (v33[3] >= v40)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        a1 = v33;
        if (v36) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1001AC5FC();
        a1 = v33;
        if (v41) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_1001AA434(v40, isUniquelyReferenced_nonNull_native);
      unint64_t v42 = sub_1001A88FC(v35, v25, v26);
      if ((v41 & 1) != (v43 & 1)) {
        goto LABEL_48;
      }
      unint64_t v37 = v42;
      a1 = v33;
      if (v41)
      {
LABEL_8:
        uint64_t v10 = (void *)(a1[7] + 24 * v37);
        swift_bridgeObjectRelease();
        *uint64_t v10 = v29;
        v10[1] = v30;
        v10[2] = v32;
        goto LABEL_9;
      }
    }
    a1[(v37 >> 6) + 8] |= 1 << v37;
    uint64_t v44 = a1[6] + 24 * v37;
    *(void *)uint64_t v44 = v35;
    *(void *)(v44 + 8) = v25;
    *(unsigned char *)(v44 + 16) = v26;
    uint64_t v45 = (void *)(a1[7] + 24 * v37);
    void *v45 = v29;
    v45[1] = v30;
    v45[2] = v32;
    uint64_t v46 = a1[2];
    BOOL v47 = __OFADD__(v46, 1);
    uint64_t v48 = v46 + 1;
    if (v47) {
      goto LABEL_46;
    }
    a1[2] = v48;
    swift_bridgeObjectRetain();
LABEL_9:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v4 = v55;
    uint64_t v9 = v56;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  uint64_t result = sub_1001ED0E0();
  __break(1u);
  return result;
}

uint64_t sub_10010EDE4(int a1, void *aBlock, uint64_t a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  sub_100081668(0, (unint64_t *)&qword_100293B58);
  sub_100081668(0, (unint64_t *)&qword_100293B60);
  sub_10010F828();
  uint64_t v4 = sub_1001EC260();
  v3[4] = v4;
  swift_retain();
  unint64_t v5 = (void *)swift_task_alloc();
  v3[5] = v5;
  *unint64_t v5 = v3;
  v5[1] = sub_10010EEF8;
  return sub_10010E578(v4);
}

uint64_t sub_10010EEF8()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_10010F1C4(const void *a1, uint64_t a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[4] = v3;
  void *v3 = v2;
  v3[1] = sub_100115AB0;
  return sub_10010AF38(1);
}

uint64_t sub_10010F274()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_100293B28 + dword_100293B28);
  return v5(v2, v3);
}

uint64_t sub_10010F320(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_100293EA8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_100115508();
  sub_1001ED1F0();
  LOBYTE(v12) = 0;
  _s15PersistentStateOMa(0);
  sub_10011200C(&qword_100293EB8, (void (*)(uint64_t))_s15PersistentStateOMa);
  sub_1001ED020();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for PriceTracker.Envelope(0);
    LOBYTE(v12) = 1;
    _s6UpdateVMa();
    sub_10011200C(&qword_100293EC0, (void (*)(uint64_t))_s6UpdateVMa);
    sub_1001ECFD0();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 24));
    HIBYTE(v11) = 2;
    sub_10007DC14(&qword_100291910);
    sub_10011555C();
    sub_1001ED020();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 28));
    HIBYTE(v11) = 3;
    sub_100115600();
    sub_1001ED020();
    LOBYTE(v12) = 4;
    sub_1001ECFB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10010F5E8()
{
  unint64_t result = 1635017060;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x55746E6572727563;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x7473694C64726163;
      break;
    case 4:
      unint64_t result = 0x656C756465686373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10010F6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100115860(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10010F6D0(uint64_t a1)
{
  unint64_t v2 = sub_100115508();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10010F70C(uint64_t a1)
{
  unint64_t v2 = sub_100115508();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10010F748(void *a1)
{
  return sub_10010F320(a1);
}

uint64_t sub_10010F76C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(int, void *, uint64_t))((char *)&dword_100293B38 + dword_100293B38);
  return v6(v2, v3, v4);
}

unint64_t sub_10010F828()
{
  unint64_t result = qword_100293B68;
  if (!qword_100293B68)
  {
    sub_100081668(255, (unint64_t *)&qword_100293B58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100293B68);
  }
  return result;
}

uint64_t sub_10010F890(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(v7 + 65) = a4;
  *(void *)(v7 + 304) = a3;
  *(void *)(v7 + 312) = v6;
  *(void *)(v7 + 288) = a1;
  *(void *)(v7 + 296) = a2;
  *(void *)(v7 + 320) = _s9SchedulerC5StateOMa(0);
  *(void *)(v7 + 328) = swift_task_alloc();
  swift_defaultActor_initialize();
  swift_storeEnumTagMultiPayload();
  v6[17] = sub_100081668(0, &qword_100293DC8);
  v6[18] = &off_100268810;
  v6[14] = a1;
  v6[19] = a5;
  v6[20] = a6;
  id v11 = a1;
  swift_retain();
  return _swift_task_switch(sub_10010F9AC, v6, 0);
}

uint64_t sub_10010F9AC()
{
  uint64_t v38 = v0;
  unint64_t v36 = 0xD00000000000002CLL;
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  NSString v3 = sub_1001EC340();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_100113048;
  *(void *)(v4 + 24) = v2;
  v0[27] = sub_100113050;
  v0[28] = v4;
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 1107296256;
  v0[25] = sub_1000C30C0;
  v0[26] = &unk_100267C20;
  uint64_t v5 = _Block_copy(v0 + 23);
  swift_retain();
  swift_release();
  LODWORD(v1) = [v1 registerForTaskWithIdentifier:v3 usingQueue:0 launchHandler:v5];
  _Block_release(v5);

  swift_release_n();
  uint64_t v6 = &unk_100291000;
  if (v1)
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1001EB560();
    sub_10007CFF8(v7, (uint64_t)qword_1002A4198);
    uint64_t v8 = sub_1001EB540();
    os_log_type_t v9 = sub_1001EC910();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      v0[35] = sub_1001A8090(0xD00000000000002CLL, 0x8000000100223820, &v37);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Scheduler] Registered system task handler for %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      uint64_t v6 = (void *)&unk_100291000;
LABEL_10:
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1001EB560();
    sub_10007CFF8(v11, (uint64_t)qword_1002A4198);
    uint64_t v8 = sub_1001EB540();
    os_log_type_t v12 = sub_1001EC8F0();
    if (os_log_type_enabled(v8, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      v0[34] = sub_1001A8090(0xD00000000000002CLL, 0x8000000100223820, &v37);
      uint64_t v6 = &unk_100291000;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v8, v12, "[Scheduler] Failed to register system task handler for %{public}s -- Scheduling will probably not work", v13, 0xCu);
      swift_arrayDestroy();
      goto LABEL_10;
    }
  }

  id v14 = (void *)v0[36];
  NSString v15 = sub_1001EC340();
  id v16 = [v14 taskRequestForIdentifier:v15];

  if (v16)
  {
    sub_100129334(v16, (uint64_t)(v0 + 16));

    sub_1000935F8((uint64_t)(v0 + 16), (uint64_t)(v0 + 9), &qword_100293118);
    if (v0[10])
    {
      uint64_t v17 = v0[41];
      uint64_t v18 = v0[39];
      long long v19 = *(_OWORD *)(v0 + 9);
      long long v20 = *(_OWORD *)(v0 + 11);
      long long v21 = *(_OWORD *)(v0 + 13);
      *(unsigned char *)(v17 + 48) = *((unsigned char *)v0 + 120);
      *(_OWORD *)(v17 + 16) = v20;
      *(_OWORD *)(v17 + 32) = v21;
      *(_OWORD *)uint64_t v17 = v19;
      swift_storeEnumTagMultiPayload();
      uint64_t v22 = v18 + OBJC_IVAR____TtCC14bookdatastored12PriceTracker9Scheduler_state;
      swift_beginAccess();
      sub_100113098(v17, v22);
      swift_endAccess();
      sub_100113268(v22, v17, _s9SchedulerC5StateOMa);
      uint64_t v23 = sub_1000D74D8();
      unint64_t v25 = v24;
      sub_100111F90(v17, _s9SchedulerC5StateOMa);
      if (v6[23] != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1001EB560();
      sub_10007CFF8(v26, (uint64_t)qword_1002A4198);
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_1001EB540();
      os_log_type_t v28 = sub_1001EC910();
      if (!os_log_type_enabled(v27, v28))
      {
        swift_bridgeObjectRelease_n();

        if ((*((unsigned char *)v0 + 65) & 1) == 0) {
          goto LABEL_18;
        }
        goto LABEL_20;
      }
      uint64_t v29 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136446466;
      v0[32] = sub_1001A8090(0xD00000000000002CLL, 0x8000000100223820, &v37);
      sub_1001ECBC0();
      *(_WORD *)(v29 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[33] = sub_1001A8090(v23, v25, &v37);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[Scheduler] Found existing task request for %{public}s, assuming %{public}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  if ((*((unsigned char *)v0 + 65) & 1) == 0)
  {
LABEL_18:
    int64x2_t v30 = vdupq_n_s64(2uLL);
    v30.i64[0] = 0x8000000100223820;
    uint64_t v31 = v0[37];
    uint64_t v32 = v0[38];
    uint64_t v33 = 257;
    goto LABEL_21;
  }
LABEL_20:
  unint64_t v36 = 0;
  uint64_t v33 = 0;
  uint64_t v32 = 0;
  uint64_t v31 = 0;
  int64x2_t v30 = 0uLL;
LABEL_21:
  v0[42] = v30.i64[0];
  v0[2] = v36;
  *(int64x2_t *)(v0 + 3) = v30;
  v0[5] = v33;
  v0[6] = v32;
  v0[7] = v31;
  *((unsigned char *)v0 + 64) = 0;
  uint64_t v34 = (void *)swift_task_alloc();
  v0[43] = v34;
  void *v34 = v0;
  v34[1] = sub_100110120;
  return sub_1000D89E4((uint64_t)(v0 + 2));
}

uint64_t sub_100110120()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(void *)(v1 + 312);
  return v2(v3);
}

uint64_t sub_10011026C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t v56 = a8;
  int v62 = a7;
  uint64_t v59 = a5;
  uint64_t v60 = a6;
  uint64_t v63 = a4;
  uint64_t v61 = a3;
  uint64_t v53 = a2;
  uint64_t v51 = a1;
  unint64_t v57 = a12;
  uint64_t v64 = a9;
  uint64_t v65 = a11;
  uint64_t v55 = a10;
  uint64_t v72 = sub_10007DC14(&qword_100293CD8);
  uint64_t v68 = *(void *)(v72 - 8);
  uint64_t v58 = *(void *)(v68 + 64);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10007DC14(&qword_100293CE8);
  uint64_t v67 = *(void *)(v70 - 8);
  uint64_t v54 = *(void *)(v67 + 64);
  __chkstk_darwin(v70);
  uint64_t v69 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10007DC14(&qword_100293CF8);
  uint64_t v49 = v14;
  uint64_t v66 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v66 + 64);
  __chkstk_darwin(v14);
  int64_t v50 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007DC14(&qword_100293D08);
  uint64_t v47 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  uint64_t v48 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10007DC14(&qword_100293CC8);
  uint64_t v46 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v46 + 64);
  __chkstk_darwin(v19 - 8);
  uint64_t v45 = (uint64_t)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10007DC14(&qword_100293840);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v23;
  uint64_t v24 = sub_1001EC6A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  sub_1000936F8(v51, (uint64_t)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100293CC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v53, v16);
  uint64_t v25 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v56, v14);
  uint64_t v26 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v69, v55, v70);
  uint64_t v27 = v68;
  (*(void (**)(char *, unint64_t, uint64_t))(v68 + 16))(v71, v57, v72);
  unint64_t v28 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  unint64_t v29 = (v20 + *(unsigned __int8 *)(v17 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v57 = (v29 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + v18 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (*(unsigned __int8 *)(v25 + 80) + v30 + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v32 = (v15 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v34 = (v54 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (*(unsigned __int8 *)(v27 + 80) + v34 + 8) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0;
  *(void *)(v36 + 24) = 0;
  sub_1000935F8(v45, v36 + v28, &qword_100293CC8);
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v36 + v29, v48, v47);
  unint64_t v37 = v36 + v57;
  uint64_t v38 = v60;
  *(void *)unint64_t v37 = v59;
  *(void *)(v37 + 8) = v38;
  *(unsigned char *)(v37 + 16) = v62 & 1;
  uint64_t v39 = (void *)(v36 + v30);
  uint64_t v40 = v63;
  *uint64_t v39 = v61;
  v39[1] = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v36 + v31, v50, v49);
  *(void *)(v36 + v32) = v64;
  (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))(v36 + v33, v69, v70);
  *(void *)(v36 + v34) = v65;
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v36 + v35, v71, v72);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = (uint64_t)v52;
  uint64_t v42 = sub_1001085B0((uint64_t)v52, (uint64_t)&unk_100293D28, v36);
  sub_1000816A4(v41, &qword_100293840);
  return v42;
}

uint64_t sub_10011089C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  uint64_t v5 = sub_10007DC14(&qword_100293DC0);
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  return _swift_task_switch(sub_100110964, 0, 0);
}

uint64_t sub_100110964()
{
  sub_10007DC14(&qword_100293CF8);
  sub_1001EC6F0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100110A34;
  uint64_t v2 = *(void *)(v0 + 128);
  return AsyncStream.Iterator.next(isolation:)(v0 + 72, 0, 0, v2);
}

uint64_t sub_100110A34()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100110B30, 0, 0);
}

uint64_t sub_100110B30()
{
  if (*(unsigned char *)(v0 + 89))
  {
    (*(void (**)(void, void, __n128))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128), *(__n128 *)(v0 + 72));
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    int8x16_t v9 = *(int8x16_t *)(v0 + 72);
    char v3 = *(unsigned char *)(v0 + 88);
    *(void *)(v0 + 160) = [objc_allocWithZone((Class)BDSOSTransaction) initWithTransactionName:sub_1001EC400() + 32];
    swift_release();
    if (v3)
    {
      unint64_t v5 = 0;
      uint64_t v6 = 0;
      int64x2_t v4 = 0uLL;
      int8x16_t v7 = 0uLL;
    }
    else
    {
      int64x2_t v4 = vdupq_n_s64(2uLL);
      v4.i64[0] = 0x8000000100223820;
      unint64_t v5 = 0xD00000000000002CLL;
      uint64_t v6 = 257;
      int8x16_t v7 = v9;
    }
    *(void *)(v0 + 168) = v4.i64[0];
    *(void *)(v0 + 16) = v5;
    *(int64x2_t *)(v0 + 24) = v4;
    *(void *)(v0 + 40) = v6;
    *(int8x16_t *)(v0 + 48) = vextq_s8(v7, v7, 8uLL);
    *(unsigned char *)(v0 + 64) = 0;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100110CE4;
    return sub_1000D89E4(v0 + 16);
  }
}

uint64_t sub_100110CE4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100110DFC, 0, 0);
}

uint64_t sub_100110DFC()
{
  uint64_t v1 = (void *)v0[20];
  [v1 endTransaction];

  uint64_t v2 = (void *)swift_task_alloc();
  v0[19] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100110A34;
  uint64_t v3 = v0[16];
  return AsyncStream.Iterator.next(isolation:)(v0 + 9, 0, 0, v3);
}

uint64_t sub_100110EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_10007DC14(&qword_100293DA0);
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_100110F90, 0, 0);
}

uint64_t sub_100110F90()
{
  sub_10007DC14(&qword_100293CE8);
  sub_1001EC6F0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100111060;
  uint64_t v2 = *(void *)(v0 + 56);
  return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, v2);
}

uint64_t sub_100111060()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10011115C, 0, 0);
}

uint64_t sub_10011115C()
{
  uint64_t v1 = v0[2];
  v0[11] = v1;
  if (v1)
  {
    v0[12] = [objc_allocWithZone((Class)BDSOSTransaction) initWithTransactionName:sub_1001EC400() + 32];
    swift_release();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100111298;
    return sub_100081C2C(v1);
  }
  else
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100111298()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100111394, 0, 0);
}

uint64_t sub_100111394()
{
  uint64_t v1 = (void *)v0[12];
  [v1 endTransaction];

  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100111060;
  uint64_t v3 = v0[7];
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v3);
}

uint64_t sub_100111468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_10007DC14(&qword_100293D88);
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_100111530, 0, 0);
}

uint64_t sub_100111530()
{
  sub_10007DC14(&qword_100293CD8);
  sub_1001EC6F0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100111600;
  uint64_t v2 = *(void *)(v0 + 56);
  return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, v2);
}

uint64_t sub_100111600()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001116FC, 0, 0);
}

uint64_t sub_1001116FC()
{
  uint64_t v1 = v0[2];
  v0[11] = v1;
  if (v1)
  {
    v0[12] = [objc_allocWithZone((Class)BDSOSTransaction) initWithTransactionName:sub_1001EC400() + 32];
    swift_release();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100111838;
    return sub_10013D09C(v1);
  }
  else
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100111838()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100111934, 0, 0);
}

uint64_t sub_100111934()
{
  uint64_t v1 = (void *)v0[12];
  [v1 endTransaction];

  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100111600;
  uint64_t v3 = v0[7];
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v3);
}

unint64_t sub_100111A08(void *a1)
{
  uint64_t v2 = sub_1001EB0E0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10007DC14(&qword_100293B78);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 doubleValue];
  if (v7 == 0.0)
  {

    return 0;
  }
  *(double *)&v17[1] = v7;
  sub_1001EB0D0();
  sub_100111D20();
  sub_1001EAE70();
  sub_1000815A4(&qword_100293B88, &qword_100293B78);
  sub_1001EC230();
  unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v18 & 0x2000000000000000) != 0) {
    uint64_t v10 = HIBYTE(v18) & 0xF;
  }
  else {
    uint64_t v10 = v17[2] & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v11 = 4 * v10;
  unint64_t v12 = 0;
  if (v10)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1001EC530();
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      if (v13 == 36 && v15 == 0xE100000000000000) {
        break;
      }
      char v16 = sub_1001ED080();
      unint64_t result = swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_13;
      }
      unint64_t result = sub_1001EC460();
      unint64_t v12 = result >> 14;
      if (result >> 14 == v11)
      {
        unint64_t v12 = 4 * v10;
        goto LABEL_13;
      }
    }
    unint64_t result = swift_bridgeObjectRelease();
  }
LABEL_13:
  if (v11 >= v12)
  {
    sub_1001EC550();
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1001EC410();
    swift_bridgeObjectRelease();

    return v8;
  }
  __break(1u);
  return result;
}

unint64_t sub_100111D20()
{
  unint64_t result = qword_100293B80;
  if (!qword_100293B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293B80);
  }
  return result;
}

uint64_t sub_100111D78()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(void *, void *, uint64_t))((char *)&dword_100293B90 + dword_100293B90);
  return v6(v2, v3, v4);
}

uint64_t sub_100111E38()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_100293BB8 + dword_100293BB8);
  return v5(v2, v3);
}

uint64_t type metadata accessor for PriceTracker.Envelope(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_100293E58);
}

uint64_t sub_100111F0C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100111F90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100111FF0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1001CC120(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10011200C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100112058()
{
  _Block_release(*(const void **)(v0 + 24));
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001120A0()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100093EB4;
  uint64_t v6 = (uint64_t (*)(void *, void *, uint64_t))((char *)&dword_100293C28 + dword_100293C28);
  return v6(v2, v3, v4);
}

uint64_t sub_10011215C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001121E0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100112224()
{
  unint64_t result = qword_100295C20;
  if (!qword_100295C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100295C20);
  }
  return result;
}

uint64_t sub_100112278(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1001122E0(uint64_t *a1)
{
  return a1;
}

void sub_100112334(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_unknownObjectRelease();
  }
}

id sub_100112374(id result, void *a2)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return a2;
  }
  return result;
}

uint64_t sub_1001123B8()
{
  _Block_release(*(const void **)(v0 + 16));
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001123F8()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_100293CA8 + dword_100293CA8);
  return v5(v2, v3);
}

uint64_t sub_1001124AC()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001124E4()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100093200;
  v2[5] = v0;
  return _swift_task_switch(sub_100105C74, 0, 0);
}

uint64_t sub_10011258C()
{
  uint64_t v1 = *(void *)(sub_10007DC14(&qword_100293CC8) - 8);
  uint64_t v20 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v22 = *(void *)(v1 + 64);
  uint64_t v28 = sub_10007DC14(&qword_100293D08);
  uint64_t v26 = *(void *)(v28 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v19 = *(void *)(v26 + 64);
  uint64_t v27 = sub_10007DC14(&qword_100293CF8);
  uint64_t v3 = *(void *)(v27 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = *(void *)(v3 + 64);
  uint64_t v25 = sub_10007DC14(&qword_100293CE8);
  uint64_t v5 = *(void *)(v25 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = *(void *)(v5 + 64);
  uint64_t v24 = sub_10007DC14(&qword_100293CD8);
  uint64_t v7 = *(void *)(v24 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(void *)(v7 + 64);
  swift_unknownObjectRelease();
  uint64_t v23 = (v20 + 32) & ~v20;
  uint64_t v9 = _s11PersistenceVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v0 + v23, 1, v9))
  {
    uint64_t v10 = sub_1001EAF60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v23, v10);
    swift_release();
    swift_release();
  }
  uint64_t v21 = v20 | v2 | v4 | v6 | v8 | 7;
  uint64_t v11 = (v23 + v22 + v2) & ~v2;
  unint64_t v12 = (((v19 + v11 + 31) & 0xFFFFFFFFFFFFFFF8) + v4 + 16) & ~v4;
  unint64_t v13 = (((v18 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6;
  unint64_t v14 = (((v17 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v0 + v11, v28);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v12, v27);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v13, v25);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v14, v24);
  return _swift_deallocObject(v0, v14 + v16, v21);
}

uint64_t sub_10011296C()
{
  uint64_t v1 = *(void *)(sub_10007DC14(&qword_100293CC8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_10007DC14(&qword_100293D08) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = v8;
  uint64_t v9 = *(void *)(sub_10007DC14(&qword_100293CF8) - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(sub_10007DC14(&qword_100293CE8) - 8);
  unint64_t v13 = (v11 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v14 = (*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(sub_10007DC14(&qword_100293CD8) - 8);
  unint64_t v16 = (v14 + *(unsigned __int8 *)(v15 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v26 = v0 + v2;
  uint64_t v17 = v0 + v7;
  uint64_t v19 = *(void *)(v0 + v7);
  uint64_t v18 = *(void *)(v17 + 8);
  LOBYTE(v3) = *(unsigned char *)(v17 + 16);
  uint64_t v20 = *(void *)(v0 + v11);
  uint64_t v21 = *(void *)(v0 + v14);
  uint64_t v22 = v0 + v16;
  uint64_t v23 = swift_task_alloc();
  long long v24 = *(_OWORD *)(v0 + v27);
  *(void *)(v28 + 16) = v23;
  *(void *)uint64_t v23 = v28;
  *(void *)(v23 + 8) = sub_100093EB4;
  *(void *)(v23 + 2696) = v22;
  *(void *)(v23 + 2688) = v21;
  *(void *)(v23 + 2680) = v0 + v13;
  *(void *)(v23 + 2672) = v20;
  *(void *)(v23 + 2664) = v0 + v10;
  *(_OWORD *)(v23 + 2648) = v24;
  *(unsigned char *)(v23 + 2736) = v3;
  *(void *)(v23 + 2640) = v18;
  *(void *)(v23 + 2632) = v19;
  *(void *)(v23 + 2624) = v0 + v5;
  *(void *)(v23 + 2616) = v26;
  return _swift_task_switch(sub_100105ECC, 0, 0);
}

uint64_t sub_100112C7C()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100112CB4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100093EB4;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100296510 + dword_100296510);
  return v6(a1, v4);
}

uint64_t sub_100112D6C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unint64_t v6 = v2;
  v6[1] = sub_100093EB4;
  return sub_100106444(a1, v5, v4);
}

uint64_t sub_100112E18(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_100093200;
  return sub_100107134(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100112EF0(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *char v6 = v2;
  v6[1] = sub_100093EB4;
  return sub_1001078AC(a1, v5, v4);
}

uint64_t sub_100112F9C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *char v6 = v2;
  v6[1] = sub_100093EB4;
  return sub_100107F68(a1, v5, v4);
}

uint64_t sub_100113048(uint64_t a1, uint64_t a2)
{
  return sub_1000D76B0(a1, a2);
}

uint64_t sub_100113050(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **))(v1 + 16))(a1, &off_100268840);
}

uint64_t sub_100113080(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100113090()
{
  return swift_release();
}

uint64_t sub_100113098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s9SchedulerC5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001130FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100093EB4;
  return sub_100106934(a1, v4);
}

uint64_t sub_100113198(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100113200(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100113268(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1001132D0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    char v6 = a1;
    a1[1] = a2[1];
    uint64_t v64 = _s15PersistentStateO2V1VMa(0);
    uint64_t v7 = *(int *)(v64 + 24);
    uint64_t v8 = (char *)v6 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t updated = _s14UpdateScheduleVMa();
    uint64_t v11 = *(void *)(updated - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, updated))
    {
      uint64_t v13 = sub_10007DC14(&qword_100293BE0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      *(void *)&v8[*(int *)(updated + 20)] = *(void *)&v9[*(int *)(updated + 20)];
      uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      v15(v8, 0, 1, updated);
    }
    unint64_t v16 = (int *)v64;
    uint64_t v17 = *(int *)(v64 + 28);
    uint64_t v18 = (char *)v6 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = _s6UpdateVMa();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    if (v22(v19, 1, v20))
    {
      uint64_t v23 = sub_10007DC14(&qword_100293BD8);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v18, v19, v24);
      *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
      uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v25(v18, 0, 1, v20);
      unint64_t v16 = (int *)v64;
    }
    uint64_t v26 = v16[8];
    unint64_t v27 = (uint64_t *)((char *)v6 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *unint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v16[9];
    unint64_t v31 = (char *)v6 + v30;
    unint64_t v32 = (char *)a2 + v30;
    v31[16] = v32[16];
    *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
    uint64_t v33 = v16[10];
    unint64_t v34 = (uint64_t *)((char *)v6 + v33);
    unint64_t v35 = (uint64_t *)((char *)a2 + v33);
    uint64_t v36 = *(uint64_t *)((char *)a2 + v33 + 8);
    swift_bridgeObjectRetain();
    if (v36)
    {
      void *v34 = *v35;
      v34[1] = v36;
      uint64_t v37 = v35[3];
      v34[2] = v35[2];
      v34[3] = v37;
      uint64_t v65 = v20;
      uint64_t v38 = v35[5];
      v34[4] = v35[4];
      v34[5] = v38;
      uint64_t v61 = v22;
      uint64_t v62 = v21;
      uint64_t v39 = v35[7];
      v34[6] = v35[6];
      v34[7] = v39;
      uint64_t v40 = v35[9];
      v34[8] = v35[8];
      v34[9] = v40;
      uint64_t v41 = v35[10];
      uint64_t v42 = v35[11];
      v34[10] = v41;
      v34[11] = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = v65;
      swift_bridgeObjectRetain();
      uint64_t v21 = v62;
      swift_bridgeObjectRetain();
      uint64_t v22 = v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v43 = *((_OWORD *)v35 + 3);
      *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      *((_OWORD *)v34 + 3) = v43;
      long long v44 = *((_OWORD *)v35 + 5);
      *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
      *((_OWORD *)v34 + 5) = v44;
      long long v45 = *((_OWORD *)v35 + 1);
      *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v45;
    }
    uint64_t v46 = v16[11];
    uint64_t v47 = (char *)v6 + v46;
    uint64_t v48 = (char *)a2 + v46;
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    uint64_t v49 = a3[5];
    int64_t v50 = (char *)v6 + v49;
    uint64_t v51 = (char *)a2 + v49;
    if (v22((char *)a2 + v49, 1, v20))
    {
      uint64_t v52 = sub_10007DC14(&qword_100293BD8);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      uint64_t v53 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v50, v51, v53);
      *(void *)&v50[*(int *)(v20 + 20)] = *(void *)&v51[*(int *)(v20 + 20)];
      uint64_t v54 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v54(v50, 0, 1, v20);
    }
    uint64_t v55 = a3[7];
    *(uint64_t *)((char *)v6 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v6 + v55) = *(uint64_t *)((char *)a2 + v55);
    uint64_t v56 = a3[8];
    unint64_t v57 = (uint64_t *)((char *)v6 + v56);
    uint64_t v58 = (uint64_t *)((char *)a2 + v56);
    uint64_t v59 = v58[1];
    void *v57 = *v58;
    v57[1] = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_1001137C4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)_s15PersistentStateO2V1VMa(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t updated = _s14UpdateScheduleVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 48))(v5, 1, updated))
  {
    uint64_t v7 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + v4[7];
  uint64_t v9 = _s6UpdateVMa();
  unint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v8, 1, v9))
  {
    uint64_t v11 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + v4[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  if (!v10(v12, 1, v9))
  {
    uint64_t v13 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_100113A24(void *a1, char *a2, int *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v63 = _s15PersistentStateO2V1VMa(0);
  uint64_t v6 = *(int *)(v63 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v10 = *(void *)(updated - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, updated))
  {
    uint64_t v12 = sub_10007DC14(&qword_100293BE0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
    *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
    uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    swift_bridgeObjectRetain();
    v14(v7, 0, 1, updated);
  }
  uint64_t v15 = (int *)v63;
  uint64_t v16 = *(int *)(v63 + 28);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = &a2[v16];
  uint64_t v19 = _s6UpdateVMa();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v18, 1, v19))
  {
    uint64_t v22 = sub_10007DC14(&qword_100293BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v17, v18, v23);
    *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
    uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
    swift_bridgeObjectRetain();
    v24(v17, 0, 1, v19);
    uint64_t v15 = (int *)v63;
  }
  uint64_t v25 = v15[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  unint64_t v27 = &a2[v25];
  uint64_t v28 = *((void *)v27 + 1);
  *uint64_t v26 = *(void *)v27;
  v26[1] = v28;
  uint64_t v29 = v15[9];
  uint64_t v30 = (char *)a1 + v29;
  unint64_t v31 = &a2[v29];
  v30[16] = v31[16];
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  uint64_t v32 = v15[10];
  uint64_t v33 = (void *)((char *)a1 + v32);
  unint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)&a2[v32 + 8];
  swift_bridgeObjectRetain();
  if (v35)
  {
    *uint64_t v33 = *(void *)v34;
    v33[1] = v35;
    uint64_t v36 = *((void *)v34 + 3);
    v33[2] = *((void *)v34 + 2);
    v33[3] = v36;
    uint64_t v64 = v19;
    uint64_t v37 = *((void *)v34 + 5);
    v33[4] = *((void *)v34 + 4);
    v33[5] = v37;
    uint64_t v60 = v21;
    uint64_t v61 = v20;
    uint64_t v38 = *((void *)v34 + 7);
    v33[6] = *((void *)v34 + 6);
    v33[7] = v38;
    uint64_t v39 = *((void *)v34 + 9);
    v33[8] = *((void *)v34 + 8);
    v33[9] = v39;
    uint64_t v40 = *((void *)v34 + 10);
    uint64_t v41 = *((void *)v34 + 11);
    v33[10] = v40;
    v33[11] = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = v64;
    swift_bridgeObjectRetain();
    uint64_t v20 = v61;
    swift_bridgeObjectRetain();
    uint64_t v21 = v60;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v42 = *((_OWORD *)v34 + 3);
    *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
    *((_OWORD *)v33 + 3) = v42;
    long long v43 = *((_OWORD *)v34 + 5);
    *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
    *((_OWORD *)v33 + 5) = v43;
    long long v44 = *((_OWORD *)v34 + 1);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *((_OWORD *)v33 + 1) = v44;
  }
  uint64_t v45 = v15[11];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = &a2[v45];
  *(void *)uint64_t v46 = *(void *)v47;
  v46[8] = v47[8];
  uint64_t v48 = a3[5];
  uint64_t v49 = (char *)a1 + v48;
  int64_t v50 = &a2[v48];
  if (v21(&a2[v48], 1, v19))
  {
    uint64_t v51 = sub_10007DC14(&qword_100293BD8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    uint64_t v52 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v49, v50, v52);
    *(void *)&v49[*(int *)(v19 + 20)] = *(void *)&v50[*(int *)(v19 + 20)];
    uint64_t v53 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
    swift_bridgeObjectRetain();
    v53(v49, 0, 1, v19);
  }
  uint64_t v54 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)&a2[a3[6]];
  *(void *)((char *)a1 + v54) = *(void *)&a2[v54];
  uint64_t v55 = a3[8];
  uint64_t v56 = (void *)((char *)a1 + v55);
  unint64_t v57 = &a2[v55];
  uint64_t v58 = *((void *)v57 + 1);
  *uint64_t v56 = *(void *)v57;
  v56[1] = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100113EC4(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)_s15PersistentStateO2V1VMa(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v10 = *(void *)(updated - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, updated);
  int v13 = v11(v8, 1, updated);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
      uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
      swift_bridgeObjectRetain();
      v15(v7, 0, 1, updated);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_100111F90((uint64_t)v7, (uint64_t (*)(void))_s14UpdateScheduleVMa);
LABEL_6:
    uint64_t v16 = sub_10007DC14(&qword_100293BE0);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v44 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v7, v8, v44);
  *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v17 = v5[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = _s6UpdateVMa();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      uint64_t v25 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v18, v19, v25);
      *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
      uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v26(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_100111F90((uint64_t)v18, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_12:
    uint64_t v27 = sub_10007DC14(&qword_100293BD8);
    memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v45 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v18, v19, v45);
  *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v28 = v5[8];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = (void *)((char *)a2 + v28);
  *(void *)uint64_t v29 = *v30;
  *((void *)v29 + 1) = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v5[9];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  long long v34 = *(_OWORD *)v33;
  v32[16] = v33[16];
  *(_OWORD *)uint64_t v32 = v34;
  uint64_t v35 = v5[10];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = *(void *)&a1[v35 + 8];
  uint64_t v39 = *(void *)((char *)a2 + v35 + 8);
  if (v38)
  {
    if (v39)
    {
      *(void *)uint64_t v36 = *v37;
      *((void *)v36 + 1) = v37[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v36 + 2) = v37[2];
      *((void *)v36 + 3) = v37[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v36 + 4) = v37[4];
      *((void *)v36 + 5) = v37[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v36 + 6) = v37[6];
      *((void *)v36 + 7) = v37[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v36 + 8) = v37[8];
      *((void *)v36 + 9) = v37[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v36 + 10) = v37[10];
      *((void *)v36 + 11) = v37[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100114694((uint64_t)v36);
      long long v40 = *((_OWORD *)v37 + 1);
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v40;
      long long v41 = *((_OWORD *)v37 + 5);
      long long v43 = *((_OWORD *)v37 + 2);
      long long v42 = *((_OWORD *)v37 + 3);
      *((_OWORD *)v36 + 4) = *((_OWORD *)v37 + 4);
      *((_OWORD *)v36 + 5) = v41;
      *((_OWORD *)v36 + 2) = v43;
      *((_OWORD *)v36 + 3) = v42;
    }
  }
  else if (v39)
  {
    *(void *)uint64_t v36 = *v37;
    *((void *)v36 + 1) = v37[1];
    *((void *)v36 + 2) = v37[2];
    *((void *)v36 + 3) = v37[3];
    *((void *)v36 + 4) = v37[4];
    *((void *)v36 + 5) = v37[5];
    *((void *)v36 + 6) = v37[6];
    *((void *)v36 + 7) = v37[7];
    *((void *)v36 + 8) = v37[8];
    *((void *)v36 + 9) = v37[9];
    *((void *)v36 + 10) = v37[10];
    *((void *)v36 + 11) = v37[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v46 = *((_OWORD *)v37 + 1);
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    *((_OWORD *)v36 + 1) = v46;
    long long v47 = *((_OWORD *)v37 + 2);
    long long v48 = *((_OWORD *)v37 + 3);
    long long v49 = *((_OWORD *)v37 + 5);
    *((_OWORD *)v36 + 4) = *((_OWORD *)v37 + 4);
    *((_OWORD *)v36 + 5) = v49;
    *((_OWORD *)v36 + 2) = v47;
    *((_OWORD *)v36 + 3) = v48;
  }
  uint64_t v50 = v5[11];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = *(void *)v52;
  v51[8] = v52[8];
  *(void *)uint64_t v51 = v53;
  uint64_t v54 = a3[5];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = (char *)a2 + v54;
  int v57 = v22(&a1[v54], 1, v20);
  int v58 = v22(v56, 1, v20);
  if (!v57)
  {
    if (!v58)
    {
      uint64_t v66 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v55, v56, v66);
      *(void *)&v55[*(int *)(v20 + 20)] = *(void *)&v56[*(int *)(v20 + 20)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    sub_100111F90((uint64_t)v55, (uint64_t (*)(void))_s6UpdateVMa);
    goto LABEL_27;
  }
  if (v58)
  {
LABEL_27:
    uint64_t v61 = sub_10007DC14(&qword_100293BD8);
    memcpy(v55, v56, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_28;
  }
  uint64_t v59 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v55, v56, v59);
  *(void *)&v55[*(int *)(v20 + 20)] = *(void *)&v56[*(int *)(v20 + 20)];
  uint64_t v60 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
  swift_bridgeObjectRetain();
  v60(v55, 0, 1, v20);
LABEL_28:
  *(void *)&a1[a3[6]] = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[8];
  uint64_t v63 = &a1[v62];
  uint64_t v64 = (void *)((char *)a2 + v62);
  *(void *)uint64_t v63 = *v64;
  *((void *)v63 + 1) = v64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100114694(uint64_t a1)
{
  return a1;
}

void *sub_1001146E8(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = (int *)_s15PersistentStateO2V1VMa(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v12 = *(void *)(updated - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, updated))
  {
    uint64_t v13 = sub_10007DC14(&qword_100293BE0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v9, v10, v14);
    *(void *)&v9[*(int *)(updated + 20)] = *(void *)&v10[*(int *)(updated + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, updated);
  }
  uint64_t v15 = v7[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = &a2[v15];
  uint64_t v18 = _s6UpdateVMa();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = sub_10007DC14(&qword_100293BD8);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v16, v17, v22);
    *(void *)&v16[*(int *)(v18 + 20)] = *(void *)&v17[*(int *)(v18 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)&a2[v7[8]];
  uint64_t v23 = v7[9];
  int v24 = (char *)a1 + v23;
  uint64_t v25 = &a2[v23];
  v24[16] = v25[16];
  *(_OWORD *)int v24 = *(_OWORD *)v25;
  uint64_t v26 = v7[10];
  uint64_t v27 = (_OWORD *)((char *)a1 + v26);
  uint64_t v28 = &a2[v26];
  long long v29 = *((_OWORD *)v28 + 3);
  v27[2] = *((_OWORD *)v28 + 2);
  v27[3] = v29;
  long long v30 = *((_OWORD *)v28 + 5);
  v27[4] = *((_OWORD *)v28 + 4);
  v27[5] = v30;
  long long v31 = *((_OWORD *)v28 + 1);
  *uint64_t v27 = *(_OWORD *)v28;
  v27[1] = v31;
  uint64_t v32 = v7[11];
  uint64_t v33 = (char *)a1 + v32;
  long long v34 = &a2[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  uint64_t v35 = a3[5];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = &a2[v35];
  if (v20(&a2[v35], 1, v18))
  {
    uint64_t v38 = sub_10007DC14(&qword_100293BD8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v36, v37, v39);
    *(void *)&v36[*(int *)(v18 + 20)] = *(void *)&v37[*(int *)(v18 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v36, 0, 1, v18);
  }
  uint64_t v40 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)&a2[a3[6]];
  *(void *)((char *)a1 + v40) = *(void *)&a2[v40];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)&a2[a3[8]];
  return a1;
}

char *sub_100114AA8(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)_s15PersistentStateO2V1VMa(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v10 = *(void *)(updated - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, updated);
  int v13 = v11(v8, 1, updated);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, updated);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_100111F90((uint64_t)v7, (uint64_t (*)(void))_s14UpdateScheduleVMa);
LABEL_6:
    uint64_t v15 = sub_10007DC14(&qword_100293BE0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v62 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v7, v8, v62);
  *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v16 = a3;
  uint64_t v17 = v5[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = _s6UpdateVMa();
  uint64_t v66 = *(void *)(v20 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
  int v22 = v21(v18, 1, v20);
  int v23 = v21(v19, 1, v20);
  if (v22)
  {
    if (!v23)
    {
      uint64_t v24 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v18, v19, v24);
      *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_100111F90((uint64_t)v18, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_12:
    uint64_t v25 = sub_10007DC14(&qword_100293BD8);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v63 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 40))(v18, v19, v63);
  *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v26 = v5[8];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *(void *)uint64_t v27 = v30;
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v5[9];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = (char *)a2 + v31;
  v32[16] = v33[16];
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  uint64_t v34 = v5[10];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = (void *)((char *)a2 + v34);
  if (*(void *)&a1[v34 + 8])
  {
    uint64_t v37 = v36[1];
    if (v37)
    {
      *(void *)uint64_t v35 = *v36;
      *((void *)v35 + 1) = v37;
      swift_bridgeObjectRelease();
      uint64_t v38 = v36[3];
      *((void *)v35 + 2) = v36[2];
      *((void *)v35 + 3) = v38;
      swift_bridgeObjectRelease();
      uint64_t v39 = v36[5];
      *((void *)v35 + 4) = v36[4];
      *((void *)v35 + 5) = v39;
      swift_bridgeObjectRelease();
      uint64_t v40 = v36[7];
      *((void *)v35 + 6) = v36[6];
      *((void *)v35 + 7) = v40;
      swift_bridgeObjectRelease();
      uint64_t v41 = v36[9];
      *((void *)v35 + 8) = v36[8];
      *((void *)v35 + 9) = v41;
      swift_bridgeObjectRelease();
      uint64_t v42 = v36[11];
      *((void *)v35 + 10) = v36[10];
      *((void *)v35 + 11) = v42;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_100114694((uint64_t)v35);
  }
  long long v43 = *((_OWORD *)v36 + 3);
  *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
  *((_OWORD *)v35 + 3) = v43;
  long long v44 = *((_OWORD *)v36 + 5);
  *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
  *((_OWORD *)v35 + 5) = v44;
  long long v45 = *((_OWORD *)v36 + 1);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v45;
LABEL_18:
  uint64_t v46 = v5[11];
  long long v47 = &a1[v46];
  long long v48 = (char *)a2 + v46;
  *(void *)long long v47 = *(void *)v48;
  v47[8] = v48[8];
  uint64_t v49 = v16[5];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = (char *)a2 + v49;
  int v52 = v21(&a1[v49], 1, v20);
  int v53 = v21(v51, 1, v20);
  if (!v52)
  {
    if (!v53)
    {
      uint64_t v64 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v50, v51, v64);
      *(void *)&v50[*(int *)(v20 + 20)] = *(void *)&v51[*(int *)(v20 + 20)];
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    sub_100111F90((uint64_t)v50, (uint64_t (*)(void))_s6UpdateVMa);
    goto LABEL_23;
  }
  if (v53)
  {
LABEL_23:
    uint64_t v55 = sub_10007DC14(&qword_100293BD8);
    memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_24;
  }
  uint64_t v54 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v50, v51, v54);
  *(void *)&v50[*(int *)(v20 + 20)] = *(void *)&v51[*(int *)(v20 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v50, 0, 1, v20);
LABEL_24:
  *(void *)&a1[v16[6]] = *(void *)((char *)a2 + v16[6]);
  swift_bridgeObjectRelease();
  *(void *)&a1[v16[7]] = *(void *)((char *)a2 + v16[7]);
  swift_bridgeObjectRelease();
  uint64_t v56 = v16[8];
  int v57 = &a1[v56];
  int v58 = (void *)((char *)a2 + v56);
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  *(void *)int v57 = v60;
  *((void *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001150F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10011510C);
}

uint64_t sub_10011510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(*(void *)(_s15PersistentStateOMa(0) - 8) + 84) == a2)
  {
    uint64_t v6 = _s15PersistentStateO2V1VMa(0);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
    return v7(a1, a2, v6);
  }
  else
  {
    uint64_t v9 = sub_10007DC14(&qword_100293BD8);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 20);
      int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 0xFFFFFFFF) {
        LODWORD(v14) = -1;
      }
      return (v14 + 1);
    }
  }
}

uint64_t sub_100115264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100115278);
}

uint64_t sub_100115278(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  if (*(_DWORD *)(*(void *)(_s15PersistentStateOMa(0) - 8) + 84) == a3)
  {
    uint64_t v8 = _s15PersistentStateO2V1VMa(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, a2, a2, v8);
  }
  else
  {
    uint64_t result = sub_10007DC14(&qword_100293BD8);
    uint64_t v11 = *(void *)(result - 8);
    if (*(_DWORD *)(v11 + 84) == a3)
    {
      uint64_t v12 = result;
      uint64_t v13 = a1 + *(int *)(a4 + 20);
      unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      return v14(v13, a2, a2, v12);
    }
    else
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
    }
  }
  return result;
}

void sub_1001153D0()
{
  _s15PersistentStateO2V1VMa(319);
  if (v0 <= 0x3F)
  {
    sub_1001154B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1001154B0()
{
  if (!qword_100293E68)
  {
    _s6UpdateVMa();
    unint64_t v0 = sub_1001ECB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100293E68);
    }
  }
}

unint64_t sub_100115508()
{
  unint64_t result = qword_100293EB0;
  if (!qword_100293EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293EB0);
  }
  return result;
}

unint64_t sub_10011555C()
{
  unint64_t result = qword_100293EC8;
  if (!qword_100293EC8)
  {
    sub_10008155C(&qword_100291910);
    sub_10011200C(&qword_100293ED0, (void (*)(uint64_t))_s21PriceDropNotificationVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293EC8);
  }
  return result;
}

unint64_t sub_100115600()
{
  unint64_t result = qword_100293ED8;
  if (!qword_100293ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293ED8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PriceTracker.Envelope.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100115720);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriceTracker.Envelope.CodingKeys()
{
  return &type metadata for PriceTracker.Envelope.CodingKeys;
}

unint64_t sub_10011575C()
{
  unint64_t result = qword_100293EE0;
  if (!qword_100293EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293EE0);
  }
  return result;
}

unint64_t sub_1001157B4()
{
  unint64_t result = qword_100293EE8;
  if (!qword_100293EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293EE8);
  }
  return result;
}

unint64_t sub_10011580C()
{
  unint64_t result = qword_100293EF0;
  if (!qword_100293EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293EF0);
  }
  return result;
}

uint64_t sub_100115860(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x55746E6572727563 && a2 == 0xED00006574616470 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100225510 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7473694C64726163 && a2 == 0xE800000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xEF6769666E6F4372)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100115AC0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100111FF0(a1, a2);
}

uint64_t sub_100115AD8(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_5:
    uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
    uint64_t result = a1(&v18);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100115C58(void (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    long long v18 = *(_OWORD *)(*(void *)(a3 + 56) + 16 * i);
    swift_retain();
    a1(&v18);
    if (v3)
    {
      swift_release();
      return swift_release();
    }
    uint64_t result = swift_release();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t static ReadingGoals.State.initial.getter()
{
  return 3;
}

void *ReadingGoalsController.__allocating_init(dataSource:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_100095C78(a1, v3);
  uint64_t v6 = sub_100119184(v5, v1, v3, v4);
  sub_1000947F0(a1);
  return v6;
}

Swift::Void __swiftcall ReadingGoalsController.changeBooksFinishedGoal(to:)(Swift::Int to)
{
  swift_beginAccess();
  sub_1000AF9BC(v1 + 16, (uint64_t)&aBlock);
  uint64_t v3 = v14;
  uint64_t v4 = v15;
  sub_100094758(&aBlock, (uint64_t)v14);
  (*((void (**)(Swift::Int, void *, uint64_t (*)()))v4 + 5))(to, v3, v4);
  sub_1000947F0((uint64_t)&aBlock);
  uint64_t v5 = *(void *)(v1 + 56);
  sub_1001EC9E0();
  v17[1] = v12;
  v17[0] = to;
  v10[2] = v17;
  uint64_t v6 = *(NSObject **)(v5 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = sub_100119DA8;
  v7[3] = v10;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1001192C0;
  *(void *)(v8 + 24) = v7;
  uint64_t v15 = sub_1000AC2B4;
  uint64_t v16 = v8;
  aBlock = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  unint64_t v13 = sub_100089470;
  unint64_t v14 = &unk_100267D28;
  unint64_t v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v6) {
    __break(1u);
  }
}

Swift::Void __swiftcall ReadingGoalsController.changeDailyGoal(to:)(Swift::Double to)
{
  swift_beginAccess();
  sub_1000AF9BC(v1 + 16, (uint64_t)aBlock);
  uint64_t v3 = v12;
  uint64_t v4 = v13;
  sub_100094758(aBlock, (uint64_t)v12);
  (*((void (**)(void *, uint64_t (*)(), Swift::Double))v4 + 6))(v3, v4, to);
  sub_1000947F0((uint64_t)aBlock);
  uint64_t v5 = *(void *)(v1 + 56);
  sub_1001EC9E0();
  v15[0] = aBlock[0];
  *(Swift::Double *)&v15[1] = to;
  v10[2] = v15;
  uint64_t v6 = *(NSObject **)(v5 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = sub_1001192F4;
  v7[3] = v10;
  v7[4] = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100119DF4;
  *(void *)(v8 + 24) = v7;
  unint64_t v13 = sub_1000B0738;
  uint64_t v14 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  uint64_t v12 = &unk_100267DA0;
  unint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v6) {
    __break(1u);
  }
}

Swift::Void __swiftcall ReadingGoalsController.clearData()()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_1000AF9BC((uint64_t)(v0 + 2), (uint64_t)aBlock);
  BOOL v2 = v22;
  uint64_t v3 = v23;
  sub_100094758(aBlock, (uint64_t)v22);
  (*((void (**)(void *, uint64_t (*)()))v3 + 7))(v2, v3);
  sub_1000947F0((uint64_t)aBlock);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = sub_100094758(v0 + 2, v4);
  uint64_t v7 = *(void *)(v4 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v7 + 16))(v9);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v12 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v4);
  uint64_t v13 = v1[7];
  uint64_t v19 = v10;
  uint64_t v20 = v12;
  uint64_t v14 = *(NSObject **)(v13 + 16);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = sub_100119324;
  v15[3] = v18;
  v15[4] = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100119DF4;
  *(void *)(v16 + 24) = v15;
  int v23 = sub_1000B0738;
  uint64_t v24 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  int v22 = &unk_100267E18;
  int64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v14, v17);
  _Block_release(v17);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v14) {
    __break(1u);
  }
}

double ReadingGoalsController.state.getter()
{
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_1001165C8(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v4 = __chkstk_darwin(v35);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  unint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v32 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v15 - 8);
  int64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10007DC14(qword_100293FC8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_1000936F8(a1, (uint64_t)v21, (uint64_t *)&unk_100291BA0);
  sub_1000936F8(a2, v22, (uint64_t *)&unk_100291BA0);
  uint64_t v23 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  int v25 = v24(v21, 2, v23);
  if (v25)
  {
    if (v25 == 1)
    {
      if (v24((char *)v22, 2, v23) != 1) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    if (v24((char *)v22, 2, v23) == 2)
    {
LABEL_8:
      char v26 = 1;
LABEL_14:
      uint64_t v27 = (uint64_t *)&unk_100291BA0;
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v33 = v6;
    uint64_t v34 = v12;
    sub_1000936F8((uint64_t)v21, (uint64_t)v17, (uint64_t *)&unk_100291BA0);
    if (!v24((char *)v22, 2, v23))
    {
      sub_100119B50((uint64_t)v17, (uint64_t)v14, type metadata accessor for ReadingHistoryModel);
      uint64_t v28 = (uint64_t)v34;
      sub_100119B50(v22, (uint64_t)v34, type metadata accessor for ReadingHistoryModel);
      sub_100119A98();
      char v29 = sub_1001EBFE0();
      sub_100119BB8(v28, (uint64_t)v9, type metadata accessor for ReadingHistoryModel);
      uint64_t v30 = (uint64_t)v33;
      sub_100119BB8((uint64_t)v14, (uint64_t)v33, type metadata accessor for ReadingHistoryModel);
      if (v29) {
        char v26 = 0;
      }
      else {
        char v26 = sub_1001EBFE0() ^ 1;
      }
      sub_100119AF0(v30, type metadata accessor for ReadingHistoryModel);
      sub_100119AF0((uint64_t)v9, type metadata accessor for ReadingHistoryModel);
      sub_100119AF0((uint64_t)v34, type metadata accessor for ReadingHistoryModel);
      sub_100119AF0((uint64_t)v14, type metadata accessor for ReadingHistoryModel);
      goto LABEL_14;
    }
    sub_100119AF0((uint64_t)v17, type metadata accessor for ReadingHistoryModel);
  }
LABEL_9:
  char v26 = 0;
  uint64_t v27 = qword_100293FC8;
LABEL_15:
  sub_1000816A4((uint64_t)v21, v27);
  return v26 & 1;
}

void ReadingGoals.State.streakDayGoal.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

void *ReadingGoals.State.default.unsafeMutableAddressor()
{
  return &static ReadingGoals.State.default;
}

BOOL ReadingGoals.State.isDefaultDailyReadingGoal.getter(double a1)
{
  return a1 == 300.0;
}

BOOL ReadingGoals.State.isDefaultYearlyReadingGoal.getter(uint64_t a1)
{
  return a1 == 3;
}

BOOL static ReadingGoals.State.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

BOOL sub_1001169D8(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

bookdatastored::ReadingGoals::Goal_optional __swiftcall ReadingGoals.Goal.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    v1.value = bookdatastored_ReadingGoals_Goal_dailyReading;
  }
  else {
    v1.value = bookdatastored_ReadingGoals_Goal_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static ReadingGoals.Goal.allCases.getter()
{
  return &off_100262380;
}

uint64_t ReadingGoals.Goal.rawValue.getter(char a1)
{
  return a1 & 1;
}

void *sub_100116A30@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_100116A50(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_100116A5C(void *a1@<X8>)
{
  *a1 = &off_1002623A8;
}

BOOL static ReadingGoals.StateChange.Source.__derived_enum_equals(_:_:)(char a1, char a2)
{
  if (a1 == 3) {
    return a2 == 3;
  }
  if (a2 == 3) {
    return 0;
  }
  return a1 == a2;
}

BOOL static ReadingHistoryBackupManager.BackupError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_100116AC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v4 = v3 == 3;
  BOOL v6 = v3 != 3 && v2 == v3;
  if (v2 == 3) {
    return v4;
  }
  else {
    return v6;
  }
}

void ReadingHistoryBackupManager.BackupError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int ReadingHistoryBackupManager.BackupError.hashValue.getter(unsigned __int8 a1)
{
  return sub_1001ED1A0();
}

uint64_t static ReadingGoals.StateChange.__derived_struct_equals(_:_:)(uint64_t a1, char a2, uint64_t a3, char a4, double a5, double a6)
{
  uint64_t result = 0;
  if (a1 == a3 && a5 == a6)
  {
    if (a2 == 3)
    {
      if (a4 == 3) {
        return 1;
      }
    }
    else if (a4 != 3 && a2 == a4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100116BB4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v4 == 3)
  {
    if (v5 == 3) {
      return 1;
    }
  }
  else if (v5 != 3 && v4 == v5)
  {
    return 1;
  }
  return 0;
}

uint64_t ReadingGoalsController.observable.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 56);
  a1[3] = sub_10007DC14(&qword_100292350);
  a1[4] = &protocol witness table for <> ObservableContainer<A>;
  *a1 = v3;
  return swift_retain();
}

void *ReadingGoalsController.init(dataSource:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_100095C78(a1, v3);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  unint64_t v9 = sub_100118EAC((uint64_t)v7, v1, v3, v4);
  sub_1000947F0(a1);
  return v9;
}

uint64_t sub_100116D4C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v1 = (id)qword_100293A68;
    sub_1001EB530();

    sub_100116E24();
    return swift_release();
  }
  return result;
}

uint64_t sub_100116E24()
{
  id v1 = v0;
  swift_beginAccess();
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = sub_100094758(v0 + 2, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v5 + 16))(v7);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  uint64_t v10 = v9;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v2);
  uint64_t v11 = v1[7];
  uint64_t v18 = v8;
  uint64_t v19 = v10;
  uint64_t v12 = *(NSObject **)(v11 + 16);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = sub_100119C7C;
  v13[3] = v17;
  v13[4] = v11;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100119DF4;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1000B0738;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089470;
  void aBlock[3] = &unk_1002682C0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

uint64_t ReadingGoalsController.deinit()
{
  sub_1000947F0(v0 + 16);
  swift_release();
  return v0;
}

uint64_t ReadingGoalsController.__deallocating_deinit()
{
  sub_1000947F0(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

double sub_1001170FC()
{
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_100117164@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  a1[3] = sub_10007DC14(&qword_100292350);
  a1[4] = &protocol witness table for <> ObservableContainer<A>;
  *a1 = v3;
  return swift_retain();
}

void sub_1001171BC(Swift::Int a1)
{
}

void sub_1001171E0(Swift::Double a1)
{
}

void sub_100117204()
{
}

BOOL sub_100117228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  __chkstk_darwin(v4);
  int v53 = (uint64_t *)((char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v6 - 8);
  uint64_t v54 = (uint64_t *)((char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = sub_10007DC14(&qword_100293FC0);
  __chkstk_darwin(v55);
  uint64_t v58 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v61 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v62 = (uint64_t)&v52 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v59 = (uint64_t)&v52 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v60 = (uint64_t)&v52 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v52 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v52 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  char v26 = (char *)&v52 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  char v29 = (char *)&v52 - v28;
  uint64_t v30 = *(int *)(v27 + 44);
  int v31 = *(unsigned __int8 *)(a1 + v30);
  int v32 = *(unsigned __int8 *)(a2 + v30);
  sub_1000936F8(a1, (uint64_t)&v52 - v28, (uint64_t *)&unk_100291CA0);
  uint64_t v63 = a2;
  sub_1000936F8(a2, (uint64_t)v26, (uint64_t *)&unk_100291CA0);
  if (v31 != v32)
  {
    sub_1000816A4((uint64_t)v26, (uint64_t *)&unk_100291CA0);
    sub_1000816A4((uint64_t)v29, (uint64_t *)&unk_100291CA0);
    sub_1000936F8(a1, (uint64_t)v23, (uint64_t *)&unk_100291CA0);
    sub_1000936F8(v63, (uint64_t)v20, (uint64_t *)&unk_100291CA0);
LABEL_9:
    sub_1000816A4((uint64_t)v20, (uint64_t *)&unk_100291CA0);
    sub_1000816A4((uint64_t)v23, (uint64_t *)&unk_100291CA0);
    uint64_t v35 = v60;
    sub_1000936F8(v63, v60, (uint64_t *)&unk_100291CA0);
    uint64_t v36 = v59;
    sub_1000936F8(a1, v59, (uint64_t *)&unk_100291CA0);
    uint64_t v37 = (uint64_t)v61;
    goto LABEL_10;
  }
  char v33 = sub_1001165C8((uint64_t)&v29[*(int *)(v9 + 48)], (uint64_t)&v26[*(int *)(v9 + 48)]);
  sub_1000816A4((uint64_t)v26, (uint64_t *)&unk_100291CA0);
  sub_1000816A4((uint64_t)v29, (uint64_t *)&unk_100291CA0);
  sub_1000936F8(a1, (uint64_t)v23, (uint64_t *)&unk_100291CA0);
  sub_1000936F8(v63, (uint64_t)v20, (uint64_t *)&unk_100291CA0);
  if ((v33 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v52 = v9;
  type metadata accessor for ReadingHistoryModel(0);
  sub_100119A98();
  char v34 = sub_1001EBFE0();
  sub_1000816A4((uint64_t)v20, (uint64_t *)&unk_100291CA0);
  sub_1000816A4((uint64_t)v23, (uint64_t *)&unk_100291CA0);
  uint64_t v35 = v60;
  sub_1000936F8(v63, v60, (uint64_t *)&unk_100291CA0);
  uint64_t v36 = v59;
  sub_1000936F8(a1, v59, (uint64_t *)&unk_100291CA0);
  uint64_t v37 = (uint64_t)v61;
  if (v34)
  {
LABEL_10:
    sub_1000816A4(v36, (uint64_t *)&unk_100291CA0);
    sub_1000816A4(v35, (uint64_t *)&unk_100291CA0);
    uint64_t v39 = v62;
    sub_1000936F8(a1, v62, (uint64_t *)&unk_100291CA0);
    sub_1000936F8(v63, v37, (uint64_t *)&unk_100291CA0);
    goto LABEL_11;
  }
  char v38 = sub_1001EBFE0();
  sub_1000816A4(v36, (uint64_t *)&unk_100291CA0);
  sub_1000816A4(v35, (uint64_t *)&unk_100291CA0);
  uint64_t v39 = v62;
  sub_1000936F8(a1, v62, (uint64_t *)&unk_100291CA0);
  sub_1000936F8(v63, v37, (uint64_t *)&unk_100291CA0);
  if (v38)
  {
LABEL_11:
    sub_1000816A4(v37, (uint64_t *)&unk_100291CA0);
    uint64_t v47 = v39;
    long long v48 = (uint64_t *)&unk_100291CA0;
LABEL_12:
    sub_1000816A4(v47, v48);
    return 0;
  }
  uint64_t v40 = *(int *)(v52 + 52);
  uint64_t v41 = v37 + v40;
  uint64_t v42 = v58;
  uint64_t v43 = v58 + *(int *)(v55 + 48);
  sub_1000936F8(v39 + v40, v58, (uint64_t *)&unk_100291B90);
  sub_1000936F8(v41, v43, (uint64_t *)&unk_100291B90);
  uint64_t v44 = v57;
  long long v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v45(v42, 1, v57) != 1)
  {
    uint64_t v50 = v54;
    sub_1000936F8(v42, (uint64_t)v54, (uint64_t *)&unk_100291B90);
    if (v45(v43, 1, v44) != 1)
    {
      uint64_t v51 = v53;
      sub_100119B50(v43, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
      BOOL v46 = _s14bookdatastored21CRDTModelRevisionInfoV23__derived_struct_equalsySbAC_ACtFZ_0(v50, v51);
      sub_100119AF0((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
      sub_1000816A4(v37, (uint64_t *)&unk_100291CA0);
      sub_1000816A4(v39, (uint64_t *)&unk_100291CA0);
      sub_100119AF0((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
      sub_1000816A4(v42, (uint64_t *)&unk_100291B90);
      return v46;
    }
    sub_1000816A4(v37, (uint64_t *)&unk_100291CA0);
    sub_1000816A4(v39, (uint64_t *)&unk_100291CA0);
    sub_100119AF0((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
    goto LABEL_16;
  }
  sub_1000816A4(v37, (uint64_t *)&unk_100291CA0);
  sub_1000816A4(v39, (uint64_t *)&unk_100291CA0);
  if (v45(v43, 1, v44) != 1)
  {
LABEL_16:
    long long v48 = &qword_100293FC0;
    uint64_t v47 = v42;
    goto LABEL_12;
  }
  sub_1000816A4(v42, (uint64_t *)&unk_100291B90);
  return 1;
}

uint64_t sub_10011791C(uint64_t a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100291F18);
  __chkstk_darwin(v3);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CRDTModelSyncVersion();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v15[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_100119BB8(v12, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  swift_beginAccess();
  sub_100119940(a1, v12);
  swift_endAccess();
  sub_100119BB8(v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  sub_1000C225C();
  if (sub_1001ECB00() & 1) != 0 && (sub_1001EC1F0())
  {
    sub_100119AF0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  }
  else
  {
    sub_100119AF0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
    uint64_t v13 = (uint64_t)&v5[*(int *)(sub_10007DC14((uint64_t *)&unk_100291F20) + 48)];
    sub_100119BB8((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
    sub_100119BB8(v12, v13, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
    swift_storeEnumTagMultiPayload();
    sub_100117DD4((uint64_t)v5);
    sub_1000816A4((uint64_t)v5, &qword_100291F18);
  }
  sub_100119AF0(a1, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  return sub_100119AF0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
}

uint64_t sub_100117BB8(uint64_t a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100291F40);
  __chkstk_darwin(v3);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v16[-v10];
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_1000936F8(v12, (uint64_t)v11, (uint64_t *)&unk_100291CA0);
  swift_beginAccess();
  sub_1001199F8(a1, v12);
  swift_endAccess();
  sub_1000936F8(v12, (uint64_t)v9, (uint64_t *)&unk_100291CA0);
  BOOL v13 = sub_100117228((uint64_t)v11, (uint64_t)v9);
  sub_1000816A4((uint64_t)v9, (uint64_t *)&unk_100291CA0);
  if (!v13)
  {
    uint64_t v14 = (uint64_t)&v5[*(int *)(sub_10007DC14(&qword_100291F48) + 48)];
    sub_1000936F8((uint64_t)v11, (uint64_t)v5, (uint64_t *)&unk_100291CA0);
    sub_1000936F8(v12, v14, (uint64_t *)&unk_100291CA0);
    swift_storeEnumTagMultiPayload();
    sub_1001181CC((uint64_t)v5);
    sub_1000816A4((uint64_t)v5, &qword_100291F40);
  }
  sub_1000816A4(a1, (uint64_t *)&unk_100291CA0);
  return sub_1000816A4((uint64_t)v11, (uint64_t *)&unk_100291CA0);
}

uint64_t sub_100117DD4(uint64_t a1)
{
  uint64_t v3 = sub_1001EBAA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EBA60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)v1 + *(void *)(*v1 + 128);
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v12 = *((void *)v11 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v12 + 8))(v1, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  sub_1001EBA50();
  uint64_t v30 = MarkedAsFinishedMechanism.rawValue.getter;
  uint64_t v31 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v24 = &v28;
  uint64_t v28 = sub_1000DB998;
  char v29 = &unk_100268158;
  uint64_t v14 = _Block_copy(&aBlock);
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v14);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21[1] = v4 + 8;
  uint64_t v25 = v15;
  v15(v6, v3);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  uint64_t v16 = swift_beginAccess();
  uint64_t v22 = v3;
  uint64_t v17 = v1[4];
  __chkstk_darwin(v16);
  v21[-2] = a1;
  swift_bridgeObjectRetain();
  sub_100115C58((void (*)(long long *))sub_100119DDC, (uint64_t)&v21[-4], v17);
  swift_bridgeObjectRelease();
  sub_1001EBA50();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = sub_1001199DC;
  uint64_t v31 = v18;
  aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_1000DB998;
  char v29 = &unk_1002681A8;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v19);
  v25(v6, v22);
  v23(v10, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1001181CC(uint64_t a1)
{
  uint64_t v3 = sub_1001EBAA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EBA60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)v1 + *(void *)(*v1 + 128);
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v12 = *((void *)v11 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v12 + 8))(v1, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  sub_1001EBA50();
  uint64_t v30 = MarkedAsFinishedMechanism.rawValue.getter;
  uint64_t v31 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v24 = &v28;
  uint64_t v28 = sub_1000DB998;
  char v29 = &unk_1002681D0;
  uint64_t v14 = _Block_copy(&aBlock);
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v14);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21[1] = v4 + 8;
  uint64_t v25 = v15;
  v15(v6, v3);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  uint64_t v16 = swift_beginAccess();
  uint64_t v22 = v3;
  uint64_t v17 = v1[4];
  __chkstk_darwin(v16);
  v21[-2] = a1;
  swift_bridgeObjectRetain();
  sub_100115C58((void (*)(long long *))sub_100119A60, (uint64_t)&v21[-4], v17);
  swift_bridgeObjectRelease();
  sub_1001EBA50();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = sub_1001199DC;
  uint64_t v31 = v18;
  aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_1000DB998;
  char v29 = &unk_100268220;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v19);
  v25(v6, v22);
  v23(v10, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1001185C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EBAA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EBA60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100119CA8(a1, (uint64_t)v30);
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v12 = *(void *)(v2 + 72);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(v2, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  sub_1001EBA50();
  uint64_t v28 = MarkedAsFinishedMechanism.rawValue.getter;
  uint64_t v29 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  char v26 = sub_1000DB998;
  uint64_t v27 = &unk_1002682E8;
  uint64_t v14 = _Block_copy(&aBlock);
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v14);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v7, v4);
  uint64_t v22 = v4;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21[1] = v9 + 8;
  v15(v11, v8);
  uint64_t v16 = swift_beginAccess();
  v21[0] = v8;
  uint64_t v17 = *(void *)(v2 + 32);
  __chkstk_darwin(v16);
  v21[-2] = v30;
  swift_bridgeObjectRetain();
  sub_100115C58((void (*)(long long *))sub_100119D10, (uint64_t)&v21[-4], v17);
  swift_bridgeObjectRelease();
  sub_1001EBA50();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v28 = sub_100119D70;
  uint64_t v29 = v18;
  aBlock = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  char v26 = sub_1000DB998;
  uint64_t v27 = &unk_100268338;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v19);
  v23(v7, v22);
  v15(v11, v21[0]);
  swift_release();
  return swift_release();
}

uint64_t sub_1001189D0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result + *(void *)(*(void *)result + 128);
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v2 = *(void *)(v1 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
      uint64_t v5 = swift_retain();
      v4(v5, ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100118AB8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v2 = *(void *)(v1 + 72);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
      uint64_t v5 = swift_retain();
      v4(v5, ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100118B8C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for CRDTModelSyncVersion();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3 + *(void *)(*(void *)a3 + 120);
  swift_beginAccess();
  sub_100119BB8(v8, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  a1(v7);
  return sub_10011791C((uint64_t)v7);
}

uint64_t sub_100118C74(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a3 + *(void *)(*(void *)a3 + 120);
  swift_beginAccess();
  sub_1000936F8(v8, (uint64_t)v7, (uint64_t *)&unk_100291CA0);
  a1(v7);
  return sub_100117BB8((uint64_t)v7);
}

uint64_t sub_100118D54(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  double v5 = *(double *)(a3 + 48);
  unsigned __int8 v6 = *(unsigned char *)(a3 + 56);
  uint64_t v14 = *(void *)(a3 + 40);
  double v15 = v5;
  unsigned __int8 v16 = v6;
  uint64_t result = a1(&v14);
  uint64_t v8 = v14;
  double v9 = v15;
  int v10 = v16;
  uint64_t v11 = *(void *)(a3 + 40);
  double v12 = *(double *)(a3 + 48);
  uint64_t v13 = *(unsigned __int8 *)(a3 + 56);
  *(void *)(a3 + 40) = v14;
  *(double *)(a3 + 48) = v9;
  *(unsigned char *)(a3 + 56) = v10;
  if (v11 != v8 || v12 != v9) {
    goto LABEL_8;
  }
  if (v13 == 3)
  {
    if (v10 == 3) {
      return result;
    }
LABEL_8:
    v17[0] = v11;
    *(double *)&v17[1] = v12;
    void v17[2] = v13;
    void v17[3] = v8;
    *(double *)&v17[4] = v9;
    char v18 = v10;
    char v19 = 1;
    return sub_1001185C4((uint64_t)v17);
  }
  if (v10 == 3 || v13 != v10) {
    goto LABEL_8;
  }
  return result;
}

double sub_100118E44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  double result = *(double *)(a1 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  *(void *)a2 = *(void *)(a1 + 40);
  *(double *)(a2 + 8) = result;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

void *sub_100118EAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v23[3] = a3;
  v23[4] = a4;
  uint64_t v8 = sub_1000B06D4(v23);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v8, a1, a3);
  sub_1000AF9BC((uint64_t)v23, (uint64_t)(a2 + 2));
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
  uint64_t v9 = v20(a3, a4);
  double v11 = v10;
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v12 = (id)qword_100293A68;
  sub_1001EB530();

  sub_10007DC14(&qword_100292350);
  swift_allocObject();
  a2[7] = sub_100090ED0(v9, 2, v11);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v14 = a2[5];
  uint64_t v15 = a2[6];
  sub_100095C78((uint64_t)(a2 + 2), v14);
  unsigned __int8 v16 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v15 + 24);
  swift_retain();
  v16(sub_1000B688C, v13, v14, v15);
  swift_endAccess();
  swift_release();
  sub_1001EC9E0();
  if (v21 != v20(a3, a4) || v22 != v17)
  {
    sub_1001EC910();
    id v18 = (id)qword_100293A68;
    sub_1001EB530();

    sub_100116E24();
  }
  sub_1000947F0((uint64_t)v23);
  return a2;
}

void *sub_100119184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_100118EAC((uint64_t)v9, v10, a3, a4);
}

double sub_100119270@<D0>(uint64_t a1@<X8>)
{
  return sub_100119C20(a1);
}

uint64_t sub_100119288()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001192C0()
{
  return sub_100118D54(*(uint64_t (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001192CC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001192DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001192EC()
{
  return swift_release();
}

double sub_1001192F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  double result = *(double *)(v2 + 8);
  *(void *)a1 = *(void *)v2;
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_100119314()
{
  return _swift_deallocObject(v0, 32, 7);
}

double sub_100119324(uint64_t a1)
{
  double result = *(double *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_10011933C()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100119350()
{
  unint64_t result = qword_100293EF8;
  if (!qword_100293EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293EF8);
  }
  return result;
}

unint64_t sub_1001193A8()
{
  unint64_t result = qword_100293F00;
  if (!qword_100293F00)
  {
    sub_10008155C(&qword_100293F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293F00);
  }
  return result;
}

unint64_t sub_100119408()
{
  unint64_t result = qword_100293F10;
  if (!qword_100293F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293F10);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals()
{
  return &type metadata for ReadingGoals;
}

ValueMetadata *type metadata accessor for ReadingGoals.State()
{
  return &type metadata for ReadingGoals.State;
}

unsigned char *storeEnumTagSinglePayload for ReadingGoals.Goal(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100119548);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.Goal()
{
  return &type metadata for ReadingGoals.Goal;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.StateChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    int v3 = 3;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 16);
  }
  int v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 16) < 3u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.StateChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange()
{
  return &type metadata for ReadingGoals.StateChange;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.StateChange.Source(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1001196D4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for ReadingGoals.StateChange.Source(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1001197BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1001197E4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1001197F8(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange.Source()
{
  return &type metadata for ReadingGoals.StateChange.Source;
}

unsigned char *storeEnumTagSinglePayload for ReadingGoals.StateChange.ChangeOrigin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001198E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange.ChangeOrigin()
{
  return &type metadata for ReadingGoals.StateChange.ChangeOrigin;
}

uint64_t type metadata accessor for ReadingGoalsController()
{
  return self;
}

uint64_t sub_100119940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001199A4()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001199DC()
{
  return sub_1001189D0();
}

uint64_t sub_1001199F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100119A60(uint64_t (**a1)(void))
{
  return (*a1)(*(void *)(v1 + 16));
}

unint64_t sub_100119A98()
{
  unint64_t result = qword_100291BC0;
  if (!qword_100291BC0)
  {
    type metadata accessor for ReadingHistoryModel(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100291BC0);
  }
  return result;
}

uint64_t sub_100119AF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100119B50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100119BB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

double sub_100119C20@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  double result = *(double *)(v1 + 48);
  char v4 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 40);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

double sub_100119C7C(uint64_t a1)
{
  double result = *(double *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = 3;
  return result;
}

uint64_t sub_100119C98()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100119CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100291ED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100119D10(uint64_t (**a1)(_OWORD *))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + 32);
  char v5 = *(unsigned char *)(v2 + 40);
  char v6 = *(unsigned char *)(v2 + 41);
  long long v7 = *(_OWORD *)(v2 + 16);
  v9[0] = *(_OWORD *)v2;
  v9[1] = v7;
  uint64_t v10 = v4;
  char v11 = v5;
  char v12 = v6;
  return v3(v9);
}

uint64_t sub_100119D70()
{
  return sub_100118AB8();
}

uint64_t sub_100119DDC(uint64_t (**a1)(void))
{
  return sub_100119A60(a1);
}

uint64_t ModelState.LoadedState.description.getter(char a1)
{
  if (a1) {
    return 0x7964616572;
  }
  else {
    return 0x676E6964616F6CLL;
  }
}

uint64_t ModelState.Source.description.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(a1);
  char v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 2, v1);
  if (v9)
  {
    if (v9 == 1) {
      return 0x6C61636F6CLL;
    }
    else {
      return 0x6465726F7473;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    v12[0] = 0x2865746F6D6572;
    v12[1] = 0xE700000000000000;
    v13._countAndFlagsBits = sub_1001ED040();
    sub_1001EC490(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 41;
    v14._object = (void *)0xE100000000000000;
    sub_1001EC490(v14);
    uint64_t v10 = v12[0];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return v10;
}

uint64_t ModelState.updating(model:source:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a3 + 16) - 8) + 24))(v3, a1, *(void *)(a3 + 16));
  uint64_t v6 = v3 + *(int *)(a3 + 48);
  uint64_t v7 = type metadata accessor for ModelState.Source();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24);
  return v8(v6, a2, v7);
}

uint64_t type metadata accessor for ModelState.Source()
{
  return sub_1000C08A4();
}

uint64_t ModelState.init(model:loaded:source:revisionInfo:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11 = a2 & 1;
  char v12 = (int *)type metadata accessor for ModelState();
  uint64_t v13 = a6 + v12[13];
  uint64_t v14 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  *(unsigned char *)(a6 + v12[11]) = v11;
  uint64_t v15 = a6 + v12[12];
  uint64_t v16 = type metadata accessor for ModelState.Source();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a3, v16);
  return sub_100093484(a4, v13);
}

uint64_t type metadata accessor for ModelState()
{
  return sub_1000C08A4();
}

uint64_t ModelState.updating(model:source:revisionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ModelState.updating(model:source:)(a1, a2, a4);
  uint64_t v7 = v4 + *(int *)(a4 + 52);
  return sub_100093AD4(a3, v7);
}

uint64_t static ModelState.Source.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v47 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  BOOL v46 = (char *)&v44 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v49 = (char *)&v44 - v12;
  __chkstk_darwin(v11);
  long long v48 = (char *)&v44 - v13;
  uint64_t v45 = v14;
  uint64_t v15 = type metadata accessor for ModelState.Source();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v50 = (char *)&v44 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v53 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v19 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v51 = v16;
  uint64_t v52 = v19;
  double v22 = (char *)&v44 + *(int *)(v19 + 48) - v20;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v23((char *)&v44 - v20, a1, v15);
  v23(v22, a2, v15);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v25 = v21;
  char v26 = v21;
  uint64_t v27 = a3;
  int v28 = v24(v26, 2, a3);
  if (v28)
  {
    if (v28 == 1)
    {
      uint64_t v29 = v25;
      if (v24(v22, 2, a3) != 1) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    uint64_t v29 = v25;
    if (v24(v22, 2, a3) == 2)
    {
LABEL_8:
      char v31 = 1;
      uint64_t v32 = v51;
      goto LABEL_10;
    }
LABEL_9:
    char v31 = 0;
    uint64_t v15 = v52;
    uint64_t v32 = v53;
    goto LABEL_10;
  }
  uint64_t v44 = v6;
  uint64_t v30 = v50;
  uint64_t v29 = v25;
  v23(v50, (uint64_t)v25, v15);
  if (v24(v22, 2, v27))
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v27);
    goto LABEL_9;
  }
  uint64_t v34 = v44;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  uint64_t v36 = v30;
  uint64_t v37 = v48;
  v35(v48, v36, v27);
  char v38 = v49;
  v35(v49, v22, v27);
  uint64_t v53 = *(void *)(v45 + 8);
  char v39 = sub_1001EBFE0();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  uint64_t v41 = v46;
  v40(v46, v38, v27);
  uint64_t v42 = v47;
  v40(v47, v37, v27);
  if (v39) {
    char v31 = 0;
  }
  else {
    char v31 = sub_1001EBFE0() ^ 1;
  }
  uint64_t v43 = *(void (**)(char *, uint64_t))(v34 + 8);
  v43(v42, v27);
  v43(v41, v27);
  v43(v49, v27);
  v43(v48, v27);
  uint64_t v32 = v51;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v15);
  return v31 & 1;
}

uint64_t sub_10011A784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ModelState.Source.== infix(_:_:)(a1, a2, *(void *)(a3 + 16));
}

uint64_t ModelState.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ModelState.model.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t ModelState.loaded.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

uint64_t ModelState.loaded.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 44)) = result & 1;
  return result;
}

uint64_t (*ModelState.loaded.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ModelState.lastSource.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = type metadata accessor for ModelState.Source();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t ModelState.lastSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 48);
  uint64_t v5 = type metadata accessor for ModelState.Source();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*ModelState.lastSource.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ModelState.revisionInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10011A968(v2 + *(int *)(a1 + 52), a2);
}

uint64_t sub_10011A968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ModelState.revisionInfo.setter(uint64_t a1, uint64_t a2)
{
  return sub_100093484(a1, v2 + *(int *)(a2 + 52));
}

uint64_t (*CRDTModelFileSyncInfo.additionalFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

BOOL static ModelState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  __chkstk_darwin(v10);
  uint64_t v60 = (void **)((char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v12 - 8);
  uint64_t v61 = (void **)((char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = sub_10007DC14(&qword_100293FC0);
  __chkstk_darwin(v62);
  uint64_t v65 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = a5;
  uint64_t v69 = a4;
  uint64_t v70 = a3;
  uint64_t v15 = type metadata accessor for ModelState();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v74 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v71 = (char *)&v60 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v75 = (char *)&v60 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v68 = (char *)&v60 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v60 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v67 = (char *)&v60 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v60 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v60 - v34;
  uint64_t v36 = *(int *)(v33 + 44);
  uint64_t v37 = a1;
  int v38 = *(unsigned __int8 *)(a1 + v36);
  LODWORD(a1) = *(unsigned __int8 *)(a2 + v36);
  char v39 = *(void (**)(char *))(v16 + 16);
  uint64_t v72 = v37;
  v39((char *)&v60 - v34);
  uint64_t v73 = a2;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v32, a2, v15);
  if (v38 == a1) {
    char v40 = static ModelState.Source.== infix(_:_:)((uint64_t)&v35[*(int *)(v15 + 48)], (uint64_t)&v32[*(int *)(v15 + 48)], v70);
  }
  else {
    char v40 = 0;
  }
  uint64_t v41 = v67;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v16 + 8);
  v42(v32, v15);
  v42(v35, v15);
  uint64_t v43 = v72;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v41, v72, v15);
  uint64_t v44 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v27, v73, v15);
  if ((v40 & 1) == 0)
  {
    v42(v27, v15);
    v42(v41, v15);
    uint64_t v45 = v68;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v68, v44, v15);
    BOOL v46 = v75;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v75, v43, v15);
    goto LABEL_11;
  }
  uint64_t v67 = *(char **)(v69 + 8);
  LODWORD(v69) = sub_1001EBFE0();
  v42(v27, v15);
  v42(v41, v15);
  uint64_t v45 = v68;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v68, v44, v15);
  BOOL v46 = v75;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v75, v43, v15);
  if (v69)
  {
LABEL_11:
    v42(v46, v15);
    v42(v45, v15);
    long long v48 = v71;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v71, v43, v15);
    uint64_t v49 = v74;
    ((void (*)(char *, uint64_t, uint64_t))v39)(v74, v44, v15);
    goto LABEL_12;
  }
  char v47 = sub_1001EBFE0();
  v42(v75, v15);
  v42(v45, v15);
  long long v48 = v71;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v71, v43, v15);
  uint64_t v49 = v74;
  ((void (*)(char *, uint64_t, uint64_t))v39)(v74, v44, v15);
  if (v47)
  {
LABEL_12:
    v42(v49, v15);
    v42(v48, v15);
    return 0;
  }
  uint64_t v50 = *(int *)(v15 + 52);
  uint64_t v51 = (uint64_t)&v49[v50];
  uint64_t v52 = v65;
  uint64_t v53 = v65 + *(int *)(v62 + 48);
  sub_10011A968((uint64_t)&v48[v50], v65);
  sub_10011A968(v51, v53);
  uint64_t v54 = v64;
  uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v55(v52, 1, v64) != 1)
  {
    uint64_t v58 = v61;
    sub_10011A968(v52, (uint64_t)v61);
    if (v55(v53, 1, v54) != 1)
    {
      uint64_t v59 = v60;
      sub_10011B15C(v53, (uint64_t)v60);
      BOOL v56 = _s14bookdatastored21CRDTModelRevisionInfoV23__derived_struct_equalsySbAC_ACtFZ_0(v58, v59);
      sub_1000B3544((uint64_t)v59);
      v42(v74, v15);
      v42(v48, v15);
      sub_1000B3544((uint64_t)v58);
      sub_1000816A4(v52, (uint64_t *)&unk_100291B90);
      return v56;
    }
    v42(v74, v15);
    v42(v48, v15);
    sub_1000B3544((uint64_t)v58);
    goto LABEL_17;
  }
  v42(v49, v15);
  v42(v48, v15);
  if (v55(v53, 1, v54) != 1)
  {
LABEL_17:
    sub_1000816A4(v52, &qword_100293FC0);
    return 0;
  }
  sub_1000816A4(v52, (uint64_t *)&unk_100291B90);
  return 1;
}

uint64_t sub_10011B15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ModelState.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1001ECD20(45);
  uint64_t v7 = sub_1001ED040();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7;
  unint64_t v19 = v9;
  v20._countAndFlagsBits = 0x646564616F6C202CLL;
  v20._object = (void *)0xE90000000000003DLL;
  sub_1001EC490(v20);
  if (*(unsigned char *)(v2 + *(int *)(a1 + 44))) {
    v10._countAndFlagsBits = 0x7964616572;
  }
  else {
    v10._countAndFlagsBits = 0x676E6964616F6CLL;
  }
  if (*(unsigned char *)(v2 + *(int *)(a1 + 44))) {
    uint64_t v11 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v11 = (void *)0xE700000000000000;
  }
  v10._object = v11;
  sub_1001EC490(v10);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0x6F537473616C202CLL;
  v21._object = (void *)0xED00003D65637275;
  sub_1001EC490(v21);
  uint64_t v12 = type metadata accessor for ModelState.Source();
  v22._countAndFlagsBits = ModelState.Source.description.getter(v12);
  sub_1001EC490(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0x697369766572202CLL;
  v23._object = (void *)0xEF3D6F666E496E6FLL;
  sub_1001EC490(v23);
  sub_10011A968(v2 + *(int *)(a1 + 52), (uint64_t)v6);
  uint64_t v13 = type metadata accessor for CRDTModelRevisionInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v6, 1, v13) == 1)
  {
    sub_1000816A4((uint64_t)v6, (uint64_t *)&unk_100291B90);
    uint64_t v14 = (void *)0xE300000000000000;
    uint64_t v15 = 7104878;
  }
  else
  {
    uint64_t v15 = CRDTModelRevisionInfo.description.getter();
    uint64_t v14 = v16;
    sub_1000B3544((uint64_t)v6);
  }
  v24._countAndFlagsBits = v15;
  v24._object = v14;
  sub_1001EC490(v24);
  swift_bridgeObjectRelease();
  return v18;
}

BOOL sub_10011B420(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static ModelState.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_10011B430()
{
  return swift_getWitnessTable();
}

uint64_t sub_10011B44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_10011B454()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for ModelState.Source();
    if (v2 <= 0x3F)
    {
      sub_10011E7EC();
      uint64_t v0 = v3;
      if (v4 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v0;
}

char *sub_10011B580(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v62 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v62 - 8);
  size_t v5 = *(void *)(v4 + 64);
  int v6 = *(_DWORD *)(v4 + 80);
  uint64_t v7 = *(unsigned int *)(v4 + 84);
  size_t v8 = v5;
  if (v7 <= 1)
  {
    if (v5 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
      if (v10 > 0xFFFE)
      {
        uint64_t v9 = 4;
      }
      else
      {
        BOOL v11 = v10 != 0;
        BOOL v12 = v10 >= 0xFF;
        uint64_t v9 = 2;
        if (!v12) {
          uint64_t v9 = v11;
        }
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    size_t v8 = v9 + v5;
  }
  uint64_t v13 = sub_1001EB0C0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = v15 | 7;
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v17 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v14 + 64) + 1;
  }
  if ((v16 | v6) == 7
    && ((*(_DWORD *)(v14 + 80) | v6) & 0x100000) == 0
    && ((v8 + (v15 | 7) + ((v6 + v5 + 1) & ~(unint64_t)v6)) & ~(v15 | 7))
     + ((v15 + 32) & ~v15)
     + v17 <= 0x18)
  {
    uint64_t v58 = v13;
    uint64_t v59 = *(_DWORD *)(v14 + 80);
    int v60 = *(_DWORD *)(v14 + 84);
    size_t v55 = v17;
    uint64_t v61 = *(void *)(v13 - 8);
    unint64_t v22 = ~(unint64_t)v6;
    BOOL v56 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v4 + 16);
    size_t __n = ((v15 + 32) & ~v15) + v17;
    v56(a1, a2, v62);
    a1[v5] = a2[v5];
    Swift::String v23 = (char *)((unint64_t)&a1[v5 + 1 + v6] & v22);
    Swift::String v24 = (unsigned __int8 *)((unint64_t)&a2[v5 + 1 + v6] & v22);
    if (v7 > 1) {
      goto LABEL_42;
    }
    if (v5 <= 3)
    {
      unsigned int v26 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
      if (v26 > 0xFFFE)
      {
        int v25 = *(_DWORD *)&v24[v5];
        if (!v25) {
          goto LABEL_41;
        }
        goto LABEL_31;
      }
      if (v26 > 0xFE)
      {
        int v25 = *(unsigned __int16 *)&v24[v5];
        if (!*(_WORD *)&v24[v5]) {
          goto LABEL_41;
        }
        goto LABEL_31;
      }
      if (!v26)
      {
LABEL_41:
        if (v7)
        {
LABEL_42:
          if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v24, v7, v62))
          {
            if (v7 >= 2)
            {
              memcpy(v23, v24, v5);
LABEL_46:
              int v30 = v60;
              uint64_t v32 = v59;
              uint64_t v31 = ~v16;
              goto LABEL_74;
            }
LABEL_51:
            if (v5 <= 3)
            {
              unsigned int v34 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
              uint64_t v35 = v34 != 0;
              if (v34 >= 0xFF) {
                uint64_t v35 = 2;
              }
              if (v34 <= 0xFFFE) {
                uint64_t v33 = v35;
              }
              else {
                uint64_t v33 = 4;
              }
            }
            else
            {
              uint64_t v33 = 1;
            }
            memcpy(v23, v24, v33 + v5);
            int v30 = v60;
            uint64_t v32 = v59;
            uint64_t v31 = ~v16;
            if (v5 > 3) {
              goto LABEL_59;
            }
            goto LABEL_63;
          }
          v56(v23, v24, v62);
          if (v7 > 1) {
            goto LABEL_46;
          }
LABEL_61:
          int v30 = v60;
          uint64_t v32 = v59;
          uint64_t v31 = ~v16;
          if (v5 <= 3)
          {
            unsigned int v37 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
            if (v37 > 0xFFFE)
            {
              *(_DWORD *)&v23[v5] = 0;
              uint64_t v36 = 4;
              goto LABEL_73;
            }
            if (v37 > 0xFE)
            {
              *(_WORD *)&v23[v5] = 0;
              goto LABEL_71;
            }
            if (!v37)
            {
LABEL_71:
              BOOL v38 = v37 != 0;
              BOOL v12 = v37 >= 0xFF;
              uint64_t v36 = 2;
              if (!v12) {
                uint64_t v36 = v38;
              }
              goto LABEL_73;
            }
          }
          v23[v5] = 0;
          if (v5 > 3)
          {
LABEL_59:
            uint64_t v36 = 1;
LABEL_73:
            v5 += v36;
LABEL_74:
            uint64_t v39 = ~v32;
            char v40 = (void *)((unint64_t)&v23[v16 + v5] & v31);
            unint64_t v41 = (unint64_t)&v24[v16 + v5];
            uint64_t v42 = (void *)(v41 & v31);
            if (v30 < 0)
            {
              uint64_t v45 = (void *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v46 = v32 + 16;
              uint64_t v47 = ((unint64_t)v45 + v32 + 16) & v39;
              uint64_t v44 = v61;
              if ((*(unsigned int (**)(uint64_t))(v61 + 48))(v47) <= 1) {
                goto LABEL_80;
              }
            }
            else
            {
              unint64_t v43 = *(void *)((v41 & v31) + 8);
              if (v43 >= 0xFFFFFFFF) {
                LODWORD(v43) = -1;
              }
              uint64_t v44 = v61;
              if ((v43 + 1) <= 1)
              {
                uint64_t v45 = (void *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v46 = v32 + 16;
                uint64_t v47 = ((unint64_t)v45 + v32 + 16) & v39;
LABEL_80:
                *char v40 = *v42;
                v40[1] = v42[1];
                long long v48 = (void *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
                void *v48 = *v45;
                v48[1] = v45[1];
                uint64_t v49 = (void *)(((unint64_t)v48 + v46) & v39);
                uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (!v50(v47, 1, v58))
                {
                  (*(void (**)(void *, uint64_t, uint64_t))(v44 + 16))(v49, v47, v58);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v49, 0, 1, v58);
                  return a1;
                }
                uint64_t v51 = v49;
                uint64_t v52 = (const void *)v47;
                size_t v53 = v55;
LABEL_83:
                memcpy(v51, v52, v53);
                return a1;
              }
            }
            uint64_t v51 = v40;
            uint64_t v52 = v42;
            size_t v53 = __n;
            goto LABEL_83;
          }
LABEL_63:
          unsigned int v37 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
          if (v37 > 0xFFFE)
          {
            uint64_t v36 = 4;
            goto LABEL_73;
          }
          goto LABEL_71;
        }
LABEL_60:
        v56(v23, v24, v62);
        goto LABEL_61;
      }
    }
    int v25 = v24[v5];
    if (!v24[v5]) {
      goto LABEL_41;
    }
LABEL_31:
    int v27 = (v25 - 1) << (8 * v5);
    if (v5 > 3) {
      int v27 = 0;
    }
    if (v5)
    {
      if (v5 <= 3) {
        int v28 = v5;
      }
      else {
        int v28 = 4;
      }
      switch(v28)
      {
        case 2:
          int v29 = *(unsigned __int16 *)v24;
          break;
        case 3:
          int v29 = *(unsigned __int16 *)v24 | (v24[2] << 16);
          break;
        case 4:
          int v29 = *(_DWORD *)v24;
          break;
        default:
          int v29 = *v24;
          break;
      }
    }
    else
    {
      int v29 = 0;
    }
    if ((v29 | v27) + v7 != -1) {
      goto LABEL_51;
    }
    goto LABEL_60;
  }
  uint64_t v20 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v21 = v20 + (((v16 | v6) + 16) & ~(v16 | v6));
  swift_retain();
  return (char *)v21;
}

unint64_t sub_10011BBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  size_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = (unsigned __int16 *)((a1 + v6 + *(unsigned __int8 *)(v4 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = *(unsigned int *)(v4 + 84);
  if (v8 > 1)
  {
LABEL_21:
    if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48))(v7, v8, v3)) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v6 <= 3)
  {
    unsigned int v10 = (~(-1 << (8 * v6)) - v8 + 2) >> (8 * v6);
    if (v10 > 0xFFFE)
    {
      int v9 = *(_DWORD *)((char *)v7 + v6);
      if (!v9) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (v10 > 0xFE)
    {
      int v9 = *(unsigned __int16 *)((char *)v7 + v6);
      if (!*(unsigned __int16 *)((char *)v7 + v6)) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (!v10)
    {
LABEL_20:
      if (v8) {
        goto LABEL_21;
      }
LABEL_22:
      v5((uint64_t)v7, v3);
      goto LABEL_23;
    }
  }
  int v9 = *((unsigned __int8 *)v7 + v6);
  if (!*((unsigned char *)v7 + v6)) {
    goto LABEL_20;
  }
LABEL_10:
  int v11 = (v9 - 1) << (8 * v6);
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 <= 3) {
      int v12 = *(void *)(v4 + 64);
    }
    else {
      int v12 = 4;
    }
    switch(v12)
    {
      case 2:
        int v13 = *v7;
        break;
      case 3:
        int v13 = *v7 | (*((unsigned __int8 *)v7 + 2) << 16);
        break;
      case 4:
        int v13 = *(_DWORD *)v7;
        break;
      default:
        int v13 = *(unsigned __int8 *)v7;
        break;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 + (v13 | v11) == -1) {
    goto LABEL_22;
  }
LABEL_23:
  if (v8 <= 1)
  {
    if (v6 <= 3)
    {
      unsigned int v15 = (~(-1 << (8 * v6)) - v8 + 2) >> (8 * v6);
      if (v15 > 0xFFFE)
      {
        uint64_t v14 = 4;
      }
      else
      {
        BOOL v16 = v15 != 0;
        BOOL v17 = v15 >= 0xFF;
        uint64_t v14 = 2;
        if (!v17) {
          uint64_t v14 = v16;
        }
      }
    }
    else
    {
      uint64_t v14 = 1;
    }
    v6 += v14;
  }
  uint64_t v18 = sub_1001EB0C0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v7 + v6 + (v20 | 7);
  uint64_t v22 = v21 & ~(v20 | 7);
  uint64_t v23 = ~v20;
  uint64_t v27 = v19;
  if ((*(_DWORD *)(v19 + 84) & 0x80000000) != 0)
  {
    unint64_t v25 = (v20 + ((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v23;
    unint64_t result = (*(uint64_t (**)(unint64_t))(v19 + 48))(v25);
    if (result > 1) {
      return result;
    }
    goto LABEL_38;
  }
  unint64_t result = *(void *)((v21 & ~(v20 | 7)) + 8);
  LODWORD(v21) = -1;
  if (result < 0xFFFFFFFF) {
    unint64_t v21 = *(void *)(v22 + 8);
  }
  if ((v21 + 1) <= 1)
  {
    unint64_t v25 = (v20 + ((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v23;
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v18);
    if (!result)
    {
      unsigned int v26 = *(uint64_t (**)(unint64_t, uint64_t))(v27 + 8);
      return v26(v25, v18);
    }
  }
  return result;
}

uint64_t sub_10011BF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  size_t v9 = v8 + a2;
  *(unsigned char *)(v8 + a1) = *(unsigned char *)(v8 + a2);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  int v11 = (char *)((v10 + 1 + v8 + a1) & ~v10);
  int v12 = (unsigned __int8 *)((v10 + 1 + v9) & ~v10);
  uint64_t v13 = *(unsigned int *)(v6 + 84);
  uint64_t v48 = a1;
  if (v13 > 1)
  {
LABEL_21:
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(v12, v13, v5))
    {
      if (v13 >= 2)
      {
        memcpy(v11, v12, v8);
        goto LABEL_51;
      }
      goto LABEL_31;
    }
    v7((uint64_t)v11, (uint64_t)v12, v5);
    if (v13 > 1) {
      goto LABEL_51;
    }
    if (v8 > 3)
    {
LABEL_42:
      v11[v8] = 0;
      goto LABEL_43;
    }
LABEL_39:
    unsigned int v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      *(_DWORD *)&v11[v8] = 0;
      uint64_t v23 = 4;
      goto LABEL_50;
    }
    if (v22 > 0xFE)
    {
      *(_WORD *)&v11[v8] = 0;
      goto LABEL_48;
    }
    if (!v22) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
  if (v8 <= 3)
  {
    unsigned int v15 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v15 > 0xFFFE)
    {
      int v14 = *(_DWORD *)&v12[v8];
      if (!v14) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (v15 > 0xFE)
    {
      int v14 = *(unsigned __int16 *)&v12[v8];
      if (!*(_WORD *)&v12[v8]) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (!v15)
    {
LABEL_20:
      if (v13) {
        goto LABEL_21;
      }
LABEL_38:
      v7((uint64_t)v11, (uint64_t)v12, v5);
      if (v8 > 3) {
        goto LABEL_42;
      }
      goto LABEL_39;
    }
  }
  int v14 = v12[v8];
  if (!v12[v8]) {
    goto LABEL_20;
  }
LABEL_10:
  int v16 = (v14 - 1) << (8 * v8);
  if (v8 > 3) {
    int v16 = 0;
  }
  if (v8)
  {
    if (v8 <= 3) {
      int v17 = v8;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *(unsigned __int16 *)v12;
        break;
      case 3:
        int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)v12;
        break;
      default:
        int v18 = *v12;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  if ((v18 | v16) + v13 == -1) {
    goto LABEL_38;
  }
LABEL_31:
  uint64_t v19 = 1;
  if (v8 <= 3)
  {
    unsigned int v20 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    uint64_t v21 = v20 != 0;
    if (v20 >= 0xFF) {
      uint64_t v21 = 2;
    }
    if (v20 <= 0xFFFE) {
      uint64_t v19 = v21;
    }
    else {
      uint64_t v19 = 4;
    }
  }
  memcpy(v11, v12, v19 + v8);
LABEL_43:
  uint64_t v23 = 1;
  if (v8 <= 3)
  {
    unsigned int v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      uint64_t v23 = 4;
      goto LABEL_50;
    }
LABEL_48:
    BOOL v24 = v22 != 0;
    BOOL v25 = v22 >= 0xFF;
    uint64_t v23 = 2;
    if (!v25) {
      uint64_t v23 = v24;
    }
  }
LABEL_50:
  v8 += v23;
LABEL_51:
  uint64_t v26 = sub_1001EB0C0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  size_t v29 = (v28 | 7) + v8;
  int v30 = (void *)((unint64_t)&v11[v29] & ~(v28 | 7));
  uint64_t v31 = (void *)((unint64_t)&v12[v29] & ~(v28 | 7));
  int v32 = *(_DWORD *)(v27 + 84);
  uint64_t v33 = ~v28;
  size_t v34 = *(void *)(v27 + 64);
  if (v32 < 0)
  {
    uint64_t v36 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v37 = v28 + 16;
    BOOL v38 = (const void *)(((unint64_t)v36 + v28 + 16) & v33);
    size_t v47 = *(void *)(v27 + 64);
    unsigned int v39 = (*(uint64_t (**)(const void *, void, uint64_t))(v27 + 48))(v38, *(unsigned int *)(v27 + 84), v26);
    size_t v34 = v47;
    if (v39 <= 1)
    {
LABEL_57:
      uint64_t v40 = v48;
      void *v30 = *v31;
      v30[1] = v31[1];
      unint64_t v41 = (void *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v41 = *v36;
      v41[1] = v36[1];
      uint64_t v42 = (void *)(((unint64_t)v41 + v37) & v33);
      unint64_t v43 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43(v38, 1, v26))
      {
        if (v32) {
          size_t v44 = v47;
        }
        else {
          size_t v44 = v47 + 1;
        }
        memcpy(v42, v38, v44);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v42, v38, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v42, 0, 1, v26);
      }
      return v40;
    }
  }
  else
  {
    unint64_t v35 = v31[1];
    if (v35 >= 0xFFFFFFFF) {
      LODWORD(v35) = -1;
    }
    if ((v35 + 1) <= 1)
    {
      size_t v47 = *(void *)(v27 + 64);
      uint64_t v36 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v37 = v28 + 16;
      BOOL v38 = (const void *)(((unint64_t)v36 + v28 + 16) & v33);
      goto LABEL_57;
    }
  }
  if (v32) {
    size_t v45 = v34;
  }
  else {
    size_t v45 = v34 + 1;
  }
  memcpy(v30, v31, v45 + ((v28 + 32) & ~v28));
  return v48;
}

uint64_t sub_10011C484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  uint64_t v82 = a1;
  *(unsigned char *)(v8 + a1) = *(unsigned char *)(v8 + a2);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (unsigned __int16 *)((v9 + 1 + v8 + a1) & ~v9);
  int v11 = (unsigned __int16 *)((v9 + 1 + v8 + a2) & ~v9);
  uint64_t v12 = *(unsigned int *)(v6 + 84);
  if (v12 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
      if (v14 > 0xFFFE)
      {
        int v13 = *(_DWORD *)((char *)v10 + v8);
        if (!v13) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v14 > 0xFE)
      {
        int v13 = *(unsigned __int16 *)((char *)v10 + v8);
        if (!*(unsigned __int16 *)((char *)v10 + v8)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v14)
      {
LABEL_20:
        if (!v12) {
          goto LABEL_33;
        }
        goto LABEL_21;
      }
    }
    int v13 = *((unsigned __int8 *)v10 + v8);
    if (!*((unsigned char *)v10 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v15 = (v13 - 1) << (8 * v8);
    if (v8 > 3) {
      int v15 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v16 = v8;
      }
      else {
        int v16 = 4;
      }
      switch(v16)
      {
        case 2:
          int v17 = *v10;
          break;
        case 3:
          int v17 = *v10 | (*((unsigned __int8 *)v10 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)v10;
          break;
        default:
          int v17 = *(unsigned __int8 *)v10;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) + v12 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_21:
  int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  if (v18(v10, *(unsigned int *)(v6 + 84), v5))
  {
    if (v12 > 1)
    {
LABEL_67:
      if (v18(v11, v12, v5))
      {
LABEL_68:
        size_t v29 = v8;
        if (v12 > 1) {
          goto LABEL_87;
        }
        uint64_t v30 = 1;
        if (v8 <= 3)
        {
          unsigned int v31 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
          if (v31 > 0xFFFE)
          {
            uint64_t v30 = 4;
          }
          else
          {
            BOOL v32 = v31 != 0;
            BOOL v33 = v31 >= 0xFF;
            uint64_t v30 = 2;
            if (!v33) {
              uint64_t v30 = v32;
            }
          }
        }
        goto LABEL_86;
      }
LABEL_93:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 16))(v10, v11, v5);
      if (v12 > 1)
      {
        uint64_t v36 = v11;
        goto LABEL_114;
      }
      if (v8 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
        if (v37 > 0xFFFE)
        {
          uint64_t v36 = v11;
          *(_DWORD *)((char *)v10 + v8) = 0;
          goto LABEL_112;
        }
        if (v37 > 0xFE)
        {
          uint64_t v36 = v11;
          *(unsigned __int16 *)((char *)v10 + v8) = 0;
LABEL_109:
          BOOL v39 = v37 != 0;
          BOOL v33 = v37 >= 0xFF;
          uint64_t v38 = 2;
          if (!v33) {
            uint64_t v38 = v39;
          }
          goto LABEL_113;
        }
        if (!v37)
        {
          uint64_t v36 = v11;
          goto LABEL_109;
        }
      }
      uint64_t v36 = v11;
      *((unsigned char *)v10 + v8) = 0;
LABEL_107:
      uint64_t v38 = 1;
      if (v8 > 3)
      {
LABEL_113:
        v8 += v38;
        goto LABEL_114;
      }
      unsigned int v37 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
      if (v37 <= 0xFFFE) {
        goto LABEL_109;
      }
LABEL_112:
      uint64_t v38 = 4;
      goto LABEL_113;
    }
LABEL_30:
    if (v8 > 3) {
      goto LABEL_31;
    }
    unsigned int v21 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    if (v21 > 0xFFFE)
    {
      int v19 = *(_DWORD *)((char *)v11 + v8);
      if (v19) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v21 <= 0xFE)
      {
        if (!v21) {
          goto LABEL_65;
        }
LABEL_31:
        int v19 = *((unsigned __int8 *)v11 + v8);
        if (!*((unsigned char *)v11 + v8)) {
          goto LABEL_65;
        }
LABEL_45:
        int v23 = (v19 - 1) << (8 * v8);
        if (v8 > 3) {
          int v23 = 0;
        }
        if (v8)
        {
          if (v8 <= 3) {
            int v24 = v8;
          }
          else {
            int v24 = 4;
          }
          switch(v24)
          {
            case 2:
              int v25 = *v11;
              break;
            case 3:
              int v25 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
              break;
            case 4:
              int v25 = *(_DWORD *)v11;
              break;
            default:
              int v25 = *(unsigned __int8 *)v11;
              break;
          }
        }
        else
        {
          int v25 = 0;
        }
        if (v12 + (v25 | v23) != -1) {
          goto LABEL_68;
        }
        goto LABEL_93;
      }
      int v19 = *(unsigned __int16 *)((char *)v11 + v8);
      if (*(unsigned __int16 *)((char *)v11 + v8)) {
        goto LABEL_45;
      }
    }
LABEL_65:
    if (!v12) {
      goto LABEL_93;
    }
    int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_67;
  }
  if (v12 > 1) {
    goto LABEL_78;
  }
LABEL_33:
  if (v8 > 3) {
    goto LABEL_34;
  }
  unsigned int v22 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
  if (v22 > 0xFFFE)
  {
    int v20 = *(_DWORD *)((char *)v11 + v8);
    if (v20) {
      goto LABEL_55;
    }
  }
  else
  {
    if (v22 <= 0xFE)
    {
      if (!v22) {
        goto LABEL_76;
      }
LABEL_34:
      int v20 = *((unsigned __int8 *)v11 + v8);
      if (!*((unsigned char *)v11 + v8)) {
        goto LABEL_76;
      }
LABEL_55:
      int v26 = (v20 - 1) << (8 * v8);
      if (v8 > 3) {
        int v26 = 0;
      }
      if (v8)
      {
        if (v8 <= 3) {
          int v27 = v8;
        }
        else {
          int v27 = 4;
        }
        switch(v27)
        {
          case 2:
            int v28 = *v11;
            break;
          case 3:
            int v28 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)v11;
            break;
          default:
            int v28 = *(unsigned __int8 *)v11;
            break;
        }
      }
      else
      {
        int v28 = 0;
      }
      if (v12 + (v28 | v26) != -1) {
        goto LABEL_79;
      }
LABEL_106:
      uint64_t v36 = v11;
      v7((uint64_t)v10, (uint64_t)v11, v5);
      if (v12 > 1) {
        goto LABEL_114;
      }
      goto LABEL_107;
    }
    int v20 = *(unsigned __int16 *)((char *)v11 + v8);
    if (*(unsigned __int16 *)((char *)v11 + v8)) {
      goto LABEL_55;
    }
  }
LABEL_76:
  if (!v12) {
    goto LABEL_106;
  }
  int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
LABEL_78:
  if (!v18(v11, v12, v5)) {
    goto LABEL_106;
  }
LABEL_79:
  (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(v10, v5);
  size_t v29 = v8;
  if (v12 > 1) {
    goto LABEL_87;
  }
  uint64_t v30 = 1;
  if (v8 <= 3)
  {
    unsigned int v34 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    uint64_t v35 = v34 != 0;
    if (v34 >= 0xFF) {
      uint64_t v35 = 2;
    }
    if (v34 <= 0xFFFE) {
      uint64_t v30 = v35;
    }
    else {
      uint64_t v30 = 4;
    }
  }
LABEL_86:
  size_t v29 = v30 + v8;
LABEL_87:
  uint64_t v36 = v11;
  memcpy(v10, v11, v29);
  if (v12 <= 1) {
    goto LABEL_107;
  }
LABEL_114:
  uint64_t v40 = sub_1001EB0C0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v41 + 80);
  size_t v43 = (v42 | 7) + v8;
  size_t v44 = (void *)(((unint64_t)v10 + v43) & ~(v42 | 7));
  size_t v45 = (void *)(((unint64_t)v36 + v43) & ~(v42 | 7));
  uint64_t v46 = *(unsigned int *)(v41 + 84);
  uint64_t v47 = ~v42;
  uint64_t v48 = (v42 + 32) & ~v42;
  size_t v49 = *(void *)(v41 + 64);
  if ((v46 & 0x80000000) == 0)
  {
    unint64_t v50 = v44[1];
    if (v50 >= 0xFFFFFFFF) {
      LODWORD(v50) = -1;
    }
    unsigned int v51 = v50 + 1;
    unint64_t v52 = v45[1];
    if (v52 >= 0xFFFFFFFF) {
      LODWORD(v52) = -1;
    }
    unsigned int v53 = v52 + 1;
    if (v51 < 2)
    {
      if (v53 <= 1)
      {
        uint64_t v54 = (void *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v55 = v42 + 16;
        uint64_t v56 = ((unint64_t)v54 + v42 + 16) & v47;
        goto LABEL_124;
      }
      uint64_t v81 = (v42 + 32) & ~v42;
      uint64_t v55 = v42 + 16;
LABEL_137:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v73 = (v55 + (((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8)) & v47;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v41 + 48))(v73, 1, v40)) {
        (*(void (**)(unint64_t, uint64_t))(v41 + 8))(v73, v40);
      }
      if (v46) {
        size_t v74 = v49;
      }
      else {
        size_t v74 = v49 + 1;
      }
      size_t v72 = v74 + v81;
      goto LABEL_143;
    }
    if (v53 <= 1)
    {
      uint64_t v54 = (void *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v55 = v42 + 16;
      uint64_t v56 = ((unint64_t)v54 + v42 + 16) & v47;
      goto LABEL_130;
    }
LABEL_132:
    if (v46) {
      size_t v71 = v49;
    }
    else {
      size_t v71 = v49 + 1;
    }
    size_t v72 = v71 + v48;
LABEL_143:
    uint64_t v75 = v44;
    uint64_t v76 = v45;
LABEL_150:
    memcpy(v75, v76, v72);
    return v82;
  }
  size_t v80 = *(void *)(v41 + 64);
  uint64_t v81 = (v42 + 32) & ~v42;
  uint64_t v55 = v42 + 16;
  unint64_t v57 = (v42 + 16 + (((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8)) & v47;
  uint64_t v58 = ~v42;
  uint64_t v59 = *(uint64_t (**)(void))(v41 + 48);
  unsigned int v60 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v59)(v57, v46, v40);
  int v61 = v46;
  unsigned int v62 = v60;
  uint64_t v54 = (void *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v78 = v58;
  unint64_t v79 = ((unint64_t)v54 + v55) & v58;
  int v63 = v61;
  unsigned int v64 = v59();
  if (v62 < 2)
  {
    LODWORD(v46) = v63;
    uint64_t v56 = v79;
    size_t v49 = v80;
    uint64_t v47 = v78;
    if (v64 <= 1)
    {
LABEL_124:
      *size_t v44 = *v45;
      v44[1] = v45[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v65 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v65 = *v54;
      v65[1] = v54[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v66 = (void *)(((unint64_t)v65 + v55) & v47);
      uint64_t v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
      LODWORD(v65) = v67(v66, 1, v40);
      int v68 = v67((void *)v56, 1, v40);
      if (v65)
      {
        if (!v68) {
          goto LABEL_131;
        }
      }
      else
      {
        if (!v68)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v41 + 24))(v66, v56, v40);
          return v82;
        }
        (*(void (**)(void *, uint64_t))(v41 + 8))(v66, v40);
      }
      goto LABEL_146;
    }
    goto LABEL_137;
  }
  LODWORD(v46) = v63;
  uint64_t v56 = v79;
  size_t v49 = v80;
  uint64_t v47 = v78;
  uint64_t v48 = v81;
  if (v64 > 1) {
    goto LABEL_132;
  }
LABEL_130:
  *size_t v44 = *v45;
  v44[1] = v45[1];
  uint64_t v69 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v69 = *v54;
  v69[1] = v54[1];
  uint64_t v66 = (void *)(((unint64_t)v69 + v55) & v47);
  uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v70(v56, 1, v40))
  {
LABEL_146:
    if (v46) {
      size_t v72 = v49;
    }
    else {
      size_t v72 = v49 + 1;
    }
    uint64_t v75 = v66;
    uint64_t v76 = (const void *)v56;
    goto LABEL_150;
  }
LABEL_131:
  (*(void (**)(void *, uint64_t, uint64_t))(v41 + 16))(v66, v56, v40);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v66, 0, 1, v40);
  return v82;
}

uint64_t sub_10011CE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  size_t v9 = v8 + a2;
  *(unsigned char *)(v8 + a1) = *(unsigned char *)(v8 + a2);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  int v11 = (char *)((v10 + 1 + v8 + a1) & ~v10);
  uint64_t v12 = (unsigned __int8 *)((v10 + 1 + v9) & ~v10);
  uint64_t v13 = *(unsigned int *)(v6 + 84);
  if (v13 > 1)
  {
LABEL_21:
    if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(v12, v13, v5))
    {
      if (v13 >= 2)
      {
        memcpy(v11, v12, v8);
        goto LABEL_51;
      }
      goto LABEL_31;
    }
    v7((uint64_t)v11, (uint64_t)v12, v5);
    if (v13 > 1) {
      goto LABEL_51;
    }
    if (v8 > 3)
    {
LABEL_42:
      v11[v8] = 0;
      goto LABEL_43;
    }
LABEL_39:
    unsigned int v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      *(_DWORD *)&v11[v8] = 0;
      uint64_t v23 = 4;
      goto LABEL_50;
    }
    if (v22 > 0xFE)
    {
      *(_WORD *)&v11[v8] = 0;
      goto LABEL_48;
    }
    if (!v22) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
  if (v8 <= 3)
  {
    unsigned int v15 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v15 > 0xFFFE)
    {
      int v14 = *(_DWORD *)&v12[v8];
      if (!v14) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (v15 > 0xFE)
    {
      int v14 = *(unsigned __int16 *)&v12[v8];
      if (!*(_WORD *)&v12[v8]) {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    if (!v15)
    {
LABEL_20:
      if (v13) {
        goto LABEL_21;
      }
LABEL_38:
      v7((uint64_t)v11, (uint64_t)v12, v5);
      if (v8 > 3) {
        goto LABEL_42;
      }
      goto LABEL_39;
    }
  }
  int v14 = v12[v8];
  if (!v12[v8]) {
    goto LABEL_20;
  }
LABEL_10:
  int v16 = (v14 - 1) << (8 * v8);
  if (v8 > 3) {
    int v16 = 0;
  }
  if (v8)
  {
    if (v8 <= 3) {
      int v17 = v8;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *(unsigned __int16 *)v12;
        break;
      case 3:
        int v18 = *(unsigned __int16 *)v12 | (v12[2] << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)v12;
        break;
      default:
        int v18 = *v12;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  if ((v18 | v16) + v13 == -1) {
    goto LABEL_38;
  }
LABEL_31:
  uint64_t v19 = 1;
  if (v8 <= 3)
  {
    unsigned int v20 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    uint64_t v21 = v20 != 0;
    if (v20 >= 0xFF) {
      uint64_t v21 = 2;
    }
    if (v20 <= 0xFFFE) {
      uint64_t v19 = v21;
    }
    else {
      uint64_t v19 = 4;
    }
  }
  memcpy(v11, v12, v19 + v8);
LABEL_43:
  uint64_t v23 = 1;
  if (v8 <= 3)
  {
    unsigned int v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      uint64_t v23 = 4;
      goto LABEL_50;
    }
LABEL_48:
    BOOL v24 = v22 != 0;
    BOOL v25 = v22 >= 0xFF;
    uint64_t v23 = 2;
    if (!v25) {
      uint64_t v23 = v24;
    }
  }
LABEL_50:
  v8 += v23;
LABEL_51:
  uint64_t v26 = sub_1001EB0C0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  size_t v29 = (v28 | 7) + v8;
  uint64_t v30 = (_OWORD *)((unint64_t)&v11[v29] & ~(v28 | 7));
  uint64_t v31 = (unint64_t)&v12[v29] & ~(v28 | 7);
  int v32 = *(_DWORD *)(v27 + 84);
  uint64_t v33 = ~v28;
  size_t v34 = *(void *)(v27 + 64);
  if (v32 < 0)
  {
    unsigned int v37 = (_OWORD *)((v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v38 = v28 + 16;
    uint64_t v49 = ((unint64_t)v37 + v28 + 16) & v33;
    size_t v50 = *(void *)(*(void *)(v26 - 8) + 64);
    uint64_t v48 = *(uint64_t (**)(void))(v27 + 48);
    unsigned int v40 = v48();
    size_t v34 = v50;
    if (v40 <= 1)
    {
      uint64_t v33 = ~v28;
      uint64_t v36 = v48;
      uint64_t v39 = v49;
      goto LABEL_58;
    }
LABEL_63:
    if (v32) {
      size_t v46 = v34;
    }
    else {
      size_t v46 = v34 + 1;
    }
    size_t v43 = v46 + ((v28 + 32) & ~v28);
    size_t v44 = v30;
    size_t v45 = (const void *)v31;
    goto LABEL_67;
  }
  unint64_t v35 = *(void *)(v31 + 8);
  if (v35 >= 0xFFFFFFFF) {
    LODWORD(v35) = -1;
  }
  if ((v35 + 1) > 1) {
    goto LABEL_63;
  }
  size_t v50 = *(void *)(*(void *)(v26 - 8) + 64);
  uint64_t v36 = *(uint64_t (**)(void))(v27 + 48);
  unsigned int v37 = (_OWORD *)((v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = v28 + 16;
  uint64_t v39 = ((unint64_t)v37 + v28 + 16) & v33;
LABEL_58:
  _OWORD *v30 = *(_OWORD *)v31;
  uint64_t v41 = (_OWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v41 = *v37;
  uint64_t v42 = (void *)(((unint64_t)v41 + v38) & v33);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v36)(v39, 1, v26))
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v27 + 32))(v42, v39, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v42, 0, 1, v26);
    return a1;
  }
  if (v32) {
    size_t v43 = v50;
  }
  else {
    size_t v43 = v50 + 1;
  }
  size_t v44 = v42;
  size_t v45 = (const void *)v39;
LABEL_67:
  memcpy(v44, v45, v43);
  return a1;
}

uint64_t sub_10011D374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  size_t v8 = *(void *)(v6 + 64);
  uint64_t v79 = a1;
  *(unsigned char *)(v8 + a1) = *(unsigned char *)(v8 + a2);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (unsigned __int16 *)((v9 + 1 + v8 + a1) & ~v9);
  int v11 = (unsigned __int16 *)((v9 + 1 + v8 + a2) & ~v9);
  uint64_t v12 = *(unsigned int *)(v6 + 84);
  if (v12 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
      if (v14 > 0xFFFE)
      {
        int v13 = *(_DWORD *)((char *)v10 + v8);
        if (!v13) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v14 > 0xFE)
      {
        int v13 = *(unsigned __int16 *)((char *)v10 + v8);
        if (!*(unsigned __int16 *)((char *)v10 + v8)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v14)
      {
LABEL_20:
        if (!v12) {
          goto LABEL_33;
        }
        goto LABEL_21;
      }
    }
    int v13 = *((unsigned __int8 *)v10 + v8);
    if (!*((unsigned char *)v10 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v15 = (v13 - 1) << (8 * v8);
    if (v8 > 3) {
      int v15 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v16 = v8;
      }
      else {
        int v16 = 4;
      }
      switch(v16)
      {
        case 2:
          int v17 = *v10;
          break;
        case 3:
          int v17 = *v10 | (*((unsigned __int8 *)v10 + 2) << 16);
          break;
        case 4:
          int v17 = *(_DWORD *)v10;
          break;
        default:
          int v17 = *(unsigned __int8 *)v10;
          break;
      }
    }
    else
    {
      int v17 = 0;
    }
    if ((v17 | v15) + v12 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_21:
  int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
  if (v18(v10, *(unsigned int *)(v6 + 84), v5))
  {
    if (v12 > 1)
    {
LABEL_67:
      if (v18(v11, v12, v5))
      {
LABEL_68:
        size_t v29 = v8;
        if (v12 > 1) {
          goto LABEL_87;
        }
        uint64_t v30 = 1;
        if (v8 <= 3)
        {
          unsigned int v31 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
          if (v31 > 0xFFFE)
          {
            uint64_t v30 = 4;
          }
          else
          {
            BOOL v32 = v31 != 0;
            BOOL v33 = v31 >= 0xFF;
            uint64_t v30 = 2;
            if (!v33) {
              uint64_t v30 = v32;
            }
          }
        }
        goto LABEL_86;
      }
LABEL_93:
      (*(void (**)(unsigned __int16 *, unsigned __int16 *, uint64_t))(v6 + 32))(v10, v11, v5);
      if (v12 > 1) {
        goto LABEL_113;
      }
      if (v8 > 3) {
        goto LABEL_95;
      }
      unsigned int v36 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
      if (v36 > 0xFFFE)
      {
        *(_DWORD *)((char *)v10 + v8) = 0;
        goto LABEL_111;
      }
      if (v36 > 0xFE)
      {
        *(unsigned __int16 *)((char *)v10 + v8) = 0;
      }
      else if (v36)
      {
LABEL_95:
        *((unsigned char *)v10 + v8) = 0;
        goto LABEL_106;
      }
LABEL_108:
      BOOL v38 = v36 != 0;
      BOOL v33 = v36 >= 0xFF;
      uint64_t v37 = 2;
      if (!v33) {
        uint64_t v37 = v38;
      }
      goto LABEL_112;
    }
LABEL_30:
    if (v8 > 3) {
      goto LABEL_31;
    }
    unsigned int v21 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    if (v21 > 0xFFFE)
    {
      int v19 = *(_DWORD *)((char *)v11 + v8);
      if (v19) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v21 <= 0xFE)
      {
        if (!v21) {
          goto LABEL_65;
        }
LABEL_31:
        int v19 = *((unsigned __int8 *)v11 + v8);
        if (!*((unsigned char *)v11 + v8)) {
          goto LABEL_65;
        }
LABEL_45:
        int v23 = (v19 - 1) << (8 * v8);
        if (v8 > 3) {
          int v23 = 0;
        }
        if (v8)
        {
          if (v8 <= 3) {
            int v24 = v8;
          }
          else {
            int v24 = 4;
          }
          switch(v24)
          {
            case 2:
              int v25 = *v11;
              break;
            case 3:
              int v25 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
              break;
            case 4:
              int v25 = *(_DWORD *)v11;
              break;
            default:
              int v25 = *(unsigned __int8 *)v11;
              break;
          }
        }
        else
        {
          int v25 = 0;
        }
        if (v12 + (v25 | v23) != -1) {
          goto LABEL_68;
        }
        goto LABEL_93;
      }
      int v19 = *(unsigned __int16 *)((char *)v11 + v8);
      if (*(unsigned __int16 *)((char *)v11 + v8)) {
        goto LABEL_45;
      }
    }
LABEL_65:
    if (!v12) {
      goto LABEL_93;
    }
    int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_67;
  }
  if (v12 > 1) {
    goto LABEL_78;
  }
LABEL_33:
  if (v8 > 3) {
    goto LABEL_34;
  }
  unsigned int v22 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
  if (v22 > 0xFFFE)
  {
    int v20 = *(_DWORD *)((char *)v11 + v8);
    if (v20) {
      goto LABEL_55;
    }
  }
  else
  {
    if (v22 <= 0xFE)
    {
      if (!v22) {
        goto LABEL_76;
      }
LABEL_34:
      int v20 = *((unsigned __int8 *)v11 + v8);
      if (!*((unsigned char *)v11 + v8)) {
        goto LABEL_76;
      }
LABEL_55:
      int v26 = (v20 - 1) << (8 * v8);
      if (v8 > 3) {
        int v26 = 0;
      }
      if (v8)
      {
        if (v8 <= 3) {
          int v27 = v8;
        }
        else {
          int v27 = 4;
        }
        switch(v27)
        {
          case 2:
            int v28 = *v11;
            break;
          case 3:
            int v28 = *v11 | (*((unsigned __int8 *)v11 + 2) << 16);
            break;
          case 4:
            int v28 = *(_DWORD *)v11;
            break;
          default:
            int v28 = *(unsigned __int8 *)v11;
            break;
        }
      }
      else
      {
        int v28 = 0;
      }
      if (v12 + (v28 | v26) != -1) {
        goto LABEL_79;
      }
LABEL_105:
      v7((uint64_t)v10, (uint64_t)v11, v5);
      if (v12 > 1) {
        goto LABEL_113;
      }
      goto LABEL_106;
    }
    int v20 = *(unsigned __int16 *)((char *)v11 + v8);
    if (*(unsigned __int16 *)((char *)v11 + v8)) {
      goto LABEL_55;
    }
  }
LABEL_76:
  if (!v12) {
    goto LABEL_105;
  }
  int v18 = *(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
LABEL_78:
  if (!v18(v11, v12, v5)) {
    goto LABEL_105;
  }
LABEL_79:
  (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(v10, v5);
  size_t v29 = v8;
  if (v12 > 1) {
    goto LABEL_87;
  }
  uint64_t v30 = 1;
  if (v8 <= 3)
  {
    unsigned int v34 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    uint64_t v35 = v34 != 0;
    if (v34 >= 0xFF) {
      uint64_t v35 = 2;
    }
    if (v34 <= 0xFFFE) {
      uint64_t v30 = v35;
    }
    else {
      uint64_t v30 = 4;
    }
  }
LABEL_86:
  size_t v29 = v30 + v8;
LABEL_87:
  memcpy(v10, v11, v29);
  if (v12 <= 1)
  {
LABEL_106:
    uint64_t v37 = 1;
    if (v8 > 3)
    {
LABEL_112:
      v8 += v37;
      goto LABEL_113;
    }
    unsigned int v36 = ((1 << (8 * v8)) - v12 + 1) >> (8 * v8);
    if (v36 <= 0xFFFE) {
      goto LABEL_108;
    }
LABEL_111:
    uint64_t v37 = 4;
    goto LABEL_112;
  }
LABEL_113:
  uint64_t v39 = sub_1001EB0C0();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
  size_t v42 = (v41 | 7) + v8;
  size_t v43 = (void *)(((unint64_t)v10 + v42) & ~(v41 | 7));
  size_t v44 = (void *)(((unint64_t)v11 + v42) & ~(v41 | 7));
  uint64_t v45 = *(unsigned int *)(v40 + 84);
  uint64_t v46 = ~v41;
  uint64_t v47 = (v41 + 32) & ~v41;
  size_t v78 = *(void *)(v40 + 64);
  if ((v45 & 0x80000000) != 0)
  {
    uint64_t v76 = (v41 + 32) & ~v41;
    uint64_t v53 = v41 + 16;
    uint64_t v55 = *(uint64_t (**)(void))(v40 + 48);
    uint64_t v56 = ~v41;
    unsigned int v57 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v55)((v41 + 16 + (((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8)) & v46, v45, v39);
    int v58 = v45;
    unsigned int v59 = v57;
    unint64_t v52 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v77 = v56;
    unint64_t v75 = ((unint64_t)v52 + v53) & v56;
    int v60 = v58;
    unsigned int v61 = v55();
    if (v59 < 2)
    {
      LODWORD(v45) = v60;
      uint64_t v54 = v75;
      uint64_t v47 = v76;
      if (v61 <= 1) {
        goto LABEL_123;
      }
LABEL_136:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v72 = (v53 + (((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8)) & v77;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v40 + 48))(v72, 1, v39)) {
        (*(void (**)(unint64_t, uint64_t))(v40 + 8))(v72, v39);
      }
      goto LABEL_138;
    }
    LODWORD(v45) = v60;
    uint64_t v47 = v76;
    uint64_t v46 = v77;
    if (v61 <= 1)
    {
      uint64_t v67 = v75;
      goto LABEL_130;
    }
LABEL_138:
    size_t v73 = v78;
    if (!v45) {
      size_t v73 = v78 + 1;
    }
    size_t v69 = v73 + v47;
    uint64_t v70 = v43;
    size_t v71 = v44;
    goto LABEL_147;
  }
  unint64_t v48 = *(void *)((((unint64_t)v10 + v42) & ~(v41 | 7)) + 8);
  if (v48 >= 0xFFFFFFFF) {
    LODWORD(v48) = -1;
  }
  unsigned int v49 = v48 + 1;
  unint64_t v50 = v44[1];
  if (v50 >= 0xFFFFFFFF) {
    LODWORD(v50) = -1;
  }
  unsigned int v51 = v50 + 1;
  if (v49 < 2)
  {
    uint64_t v77 = ~v41;
    if (v51 <= 1)
    {
      unint64_t v52 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v53 = v41 + 16;
      uint64_t v54 = ((unint64_t)v52 + v41 + 16) & v46;
LABEL_123:
      *size_t v43 = *v44;
      v43[1] = v44[1];
      swift_bridgeObjectRelease();
      unsigned int v62 = (void *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v62 = *v52;
      v62[1] = v52[1];
      swift_bridgeObjectRelease();
      int v63 = (void *)(((unint64_t)v62 + v53) & v77);
      unsigned int v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
      int v65 = v64(v63, 1, v39);
      int v66 = v64((void *)v54, 1, v39);
      if (v65)
      {
        if (!v66)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v40 + 32))(v63, v54, v39);
LABEL_150:
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v63, 0, 1, v39);
          return v79;
        }
      }
      else
      {
        if (!v66)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v40 + 40))(v63, v54, v39);
          return v79;
        }
        (*(void (**)(void *, uint64_t))(v40 + 8))(v63, v39);
      }
      if (v45) {
        size_t v69 = v78;
      }
      else {
        size_t v69 = v78 + 1;
      }
      uint64_t v70 = v63;
      size_t v71 = (const void *)v54;
      goto LABEL_147;
    }
    uint64_t v53 = v41 + 16;
    goto LABEL_136;
  }
  if (v51 > 1) {
    goto LABEL_138;
  }
  uint64_t v55 = *(uint64_t (**)(void))(v40 + 48);
  unint64_t v52 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v53 = v41 + 16;
  uint64_t v67 = ((unint64_t)v52 + v41 + 16) & v46;
LABEL_130:
  *(_OWORD *)size_t v43 = *(_OWORD *)v44;
  int v68 = (_OWORD *)(((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8);
  *int v68 = *(_OWORD *)v52;
  int v63 = (void *)(((unint64_t)v68 + v53) & v46);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v55)(v67, 1, v39))
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v40 + 32))(v63, v67, v39);
    goto LABEL_150;
  }
  if (v45) {
    size_t v69 = v78;
  }
  else {
    size_t v69 = v78 + 1;
  }
  uint64_t v70 = v63;
  size_t v71 = (const void *)v67;
LABEL_147:
  memcpy(v70, v71, v69);
  return v79;
}

uint64_t sub_10011DD18(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 1) {
    unsigned int v8 = 0;
  }
  else {
    unsigned int v8 = v7 - 2;
  }
  if (v7 <= v8) {
    unsigned int v9 = v8;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v10 = *(void *)(sub_1001EB0C0() - 8);
  int v11 = *(_DWORD *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v12 <= 0x7FFFFFFE) {
    int v13 = 2147483646;
  }
  else {
    int v13 = v12;
  }
  unsigned int v14 = v13 - 1;
  if (v9 <= v14) {
    unsigned int v15 = v14;
  }
  else {
    unsigned int v15 = v9;
  }
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = v16;
  if (v7 <= 1)
  {
    if (v16 <= 3)
    {
      unsigned int v19 = (~(-1 << (8 * v16)) - v7 + 2) >> (8 * v16);
      if (v19 > 0xFFFE)
      {
        uint64_t v18 = 4;
      }
      else
      {
        BOOL v20 = v19 != 0;
        BOOL v21 = v19 >= 0xFF;
        uint64_t v18 = 2;
        if (!v21) {
          uint64_t v18 = v20;
        }
      }
    }
    else
    {
      uint64_t v18 = 1;
    }
    uint64_t v17 = v18 + v16;
  }
  if (v11) {
    uint64_t v22 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v10 + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v25 = v24 | 7;
  if (a2 > v15)
  {
    uint64_t v26 = v22 + ((v24 + 32) & ~v24) + ((v17 + v25 + ((v16 + v23 + 1) & ~v23)) & ~v25);
    char v27 = 8 * v26;
    if (v26 > 3) {
      goto LABEL_30;
    }
    unsigned int v29 = ((a2 - v15 + ~(-1 << v27)) >> v27) + 1;
    if (HIWORD(v29))
    {
      int v28 = *(_DWORD *)((char *)a1 + v26);
      if (v28) {
        goto LABEL_37;
      }
    }
    else
    {
      if (v29 <= 0xFF)
      {
        if (v29 < 2) {
          goto LABEL_47;
        }
LABEL_30:
        int v28 = *((unsigned __int8 *)a1 + v26);
        if (!*((unsigned char *)a1 + v26)) {
          goto LABEL_47;
        }
LABEL_37:
        int v30 = (v28 - 1) << v27;
        if (v26 > 3) {
          int v30 = 0;
        }
        if (v26)
        {
          if (v26 <= 3) {
            int v31 = v26;
          }
          else {
            int v31 = 4;
          }
          switch(v31)
          {
            case 2:
              int v32 = *a1;
              break;
            case 3:
              int v32 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v32 = *(_DWORD *)a1;
              break;
            default:
              int v32 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v32 = 0;
        }
        return v15 + (v32 | v30) + 1;
      }
      int v28 = *(unsigned __int16 *)((char *)a1 + v26);
      if (*(unsigned __int16 *)((char *)a1 + v26)) {
        goto LABEL_37;
      }
    }
  }
LABEL_47:
  if (v7 == v15)
  {
    BOOL v33 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    return v33(a1, v7, v5);
  }
  uint64_t v35 = ((unint64_t)a1 + v16 + v23 + 1) & ~v23;
  if (v8 == v15)
  {
    if (v7)
    {
      unsigned int v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v35, v7, v5);
      BOOL v21 = v36 >= 2;
      uint64_t result = v36 - 2;
      if (result != 0 && v21) {
        return result;
      }
    }
    return 0;
  }
  if (v7 <= 1)
  {
    if (v16 <= 3)
    {
      unsigned int v38 = ((~(-1 << (8 * v16)) - v7 + 2) >> (8 * v16)) + 1;
      if (HIWORD(v38))
      {
        uint64_t v37 = 4;
      }
      else
      {
        BOOL v39 = v38 > 1;
        BOOL v21 = v38 >= 0x100;
        uint64_t v37 = 2;
        if (!v21) {
          uint64_t v37 = v39;
        }
      }
    }
    else
    {
      uint64_t v37 = 1;
    }
    v16 += v37;
  }
  uint64_t v40 = (v25 + v35 + v16) & ~v25;
  if (v12 > 0x7FFFFFFE)
  {
    unsigned int v42 = (*(uint64_t (**)(unint64_t))(v10 + 48))((v24 + ((v40 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24);
    LODWORD(v41) = v42 - 1;
  }
  else
  {
    unint64_t v41 = *(void *)(v40 + 8);
    if (v41 >= 0xFFFFFFFF) {
      LODWORD(v41) = -1;
    }
    unsigned int v42 = v41 + 1;
  }
  if (v42 < 2) {
    LODWORD(v41) = 0;
  }
  if (v41 >= 2) {
    return (v41 - 1);
  }
  else {
    return 0;
  }
}

void sub_10011E120(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v52 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 1) {
    unsigned int v10 = 0;
  }
  else {
    unsigned int v10 = v9 - 2;
  }
  if (v9 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v12 = *(void *)(sub_1001EB0C0() - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  if (v13) {
    unsigned int v14 = v13 - 1;
  }
  else {
    unsigned int v14 = 0;
  }
  size_t v15 = *(void *)(v8 + 64);
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v14;
  }
  if (v11 <= v16 - 1) {
    unsigned int v17 = v16 - 1;
  }
  else {
    unsigned int v17 = v11;
  }
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  size_t v19 = *(void *)(v8 + 64);
  if (v9 <= 1)
  {
    if (v15 <= 3)
    {
      unsigned int v21 = (~(-1 << (8 * v15)) - v9 + 2) >> (8 * v15);
      if (v21 > 0xFFFE)
      {
        uint64_t v20 = 4;
      }
      else
      {
        BOOL v22 = v21 != 0;
        BOOL v23 = v21 >= 0xFF;
        uint64_t v20 = 2;
        if (!v23) {
          uint64_t v20 = v22;
        }
      }
    }
    else
    {
      uint64_t v20 = 1;
    }
    size_t v19 = v20 + v15;
  }
  uint64_t v24 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v25 = (v19 + (v24 | 7) + ((v15 + v18 + 1) & ~v18)) & ~(v24 | 7);
  size_t v26 = *(void *)(v12 + 64);
  if (!v13) {
    ++v26;
  }
  size_t v27 = ((v24 + 32) & ~v24) + v26;
  size_t v28 = v25 + v27;
  if (a3 <= v17)
  {
    int v29 = 0;
  }
  else if (v28 <= 3)
  {
    unsigned int v32 = ((a3 - v17 + ~(-1 << (8 * v28))) >> (8 * v28)) + 1;
    if (HIWORD(v32))
    {
      int v29 = 4;
    }
    else if (v32 >= 0x100)
    {
      int v29 = 2;
    }
    else
    {
      int v29 = v32 > 1;
    }
  }
  else
  {
    int v29 = 1;
  }
  if (v17 < a2)
  {
    unsigned int v30 = ~v17 + a2;
    if (v28 < 4)
    {
      int v31 = (v30 >> (8 * v28)) + 1;
      if (v28)
      {
        int v33 = v30 & ~(-1 << (8 * v28));
        bzero(a1, v28);
        if (v28 == 3)
        {
          *(_WORD *)a1 = v33;
          a1[2] = BYTE2(v33);
        }
        else if (v28 == 2)
        {
          *(_WORD *)a1 = v33;
        }
        else
        {
          *a1 = v33;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v30;
      int v31 = 1;
    }
    switch(v29)
    {
      case 1:
        a1[v28] = v31;
        return;
      case 2:
        *(_WORD *)&a1[v28] = v31;
        return;
      case 3:
        goto LABEL_122;
      case 4:
        *(_DWORD *)&a1[v28] = v31;
        return;
      default:
        return;
    }
  }
  switch(v29)
  {
    case 1:
      a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_47;
    case 2:
      *(_WORD *)&a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_47;
    case 3:
LABEL_122:
      __break(1u);
      JUMPOUT(0x10011E784);
    case 4:
      *(_DWORD *)&a1[v28] = 0;
      goto LABEL_46;
    default:
LABEL_46:
      if (!a2) {
        return;
      }
LABEL_47:
      if (v9 == v17)
      {
        unsigned int v34 = *(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(v52 + 56);
        uint64_t v35 = a1;
        uint64_t v36 = a2;
LABEL_49:
        v34(v35, v36, v9, v7);
        return;
      }
      uint64_t v37 = (_WORD *)((unint64_t)&a1[v15 + 1 + v18] & ~v18);
      if (v10 == v17)
      {
        if ((int)a2 + 2 <= v9)
        {
          if (a2 == -2) {
            return;
          }
          unsigned int v34 = *(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(v52 + 56);
          uint64_t v35 = v37;
          uint64_t v36 = (a2 + 2);
          goto LABEL_49;
        }
        if (v15 <= 3) {
          int v38 = ~(-1 << (8 * v15));
        }
        else {
          int v38 = -1;
        }
        if (v15)
        {
          int v39 = v38 & (a2 - v9 + 1);
          if (v15 <= 3) {
            int v40 = v15;
          }
          else {
            int v40 = 4;
          }
          bzero(v37, v15);
          switch(v40)
          {
            case 2:
              goto LABEL_115;
            case 3:
              goto LABEL_116;
            case 4:
              goto LABEL_117;
            default:
              goto LABEL_101;
          }
        }
      }
      else
      {
        if (v9 <= 1)
        {
          if (v15 <= 3)
          {
            unsigned int v42 = ((~(-1 << (8 * v15)) - v9 + 2) >> (8 * v15)) + 1;
            if (HIWORD(v42))
            {
              uint64_t v41 = 4;
            }
            else
            {
              BOOL v43 = v42 > 1;
              BOOL v23 = v42 >= 0x100;
              uint64_t v41 = 2;
              if (!v23) {
                uint64_t v41 = v43;
              }
            }
          }
          else
          {
            uint64_t v41 = 1;
          }
          v15 += v41;
        }
        uint64_t v37 = (_WORD *)(((unint64_t)v37 + (v24 | 7) + v15) & ~(v24 | 7));
        if (v16 - 1 >= a2)
        {
          uint64_t v46 = (a2 + 1);
          if (v46 <= v16)
          {
            if (a2 != -1)
            {
              if (v14 > 0x7FFFFFFE)
              {
                uint64_t v37 = (_WORD *)((v24 + (((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24);
                if (v46 <= v14)
                {
                  unsigned int v51 = *(void (**)(_WORD *, void))(v12 + 56);
                  v51(v37, (a2 + 2));
                }
                else
                {
                  if (v26 <= 3) {
                    int v49 = ~(-1 << (8 * v26));
                  }
                  else {
                    int v49 = -1;
                  }
                  if (v26)
                  {
                    int v39 = v49 & (a2 - v14);
                    if (v26 <= 3) {
                      int v50 = v26;
                    }
                    else {
                      int v50 = 4;
                    }
                    bzero(v37, v26);
                    switch(v50)
                    {
                      case 2:
LABEL_115:
                        _WORD *v37 = v39;
                        break;
                      case 3:
LABEL_116:
                        _WORD *v37 = v39;
                        *((unsigned char *)v37 + 2) = BYTE2(v39);
                        break;
                      case 4:
LABEL_117:
                        *(_DWORD *)uint64_t v37 = v39;
                        break;
                      default:
LABEL_101:
                        *(unsigned char *)uint64_t v37 = v39;
                        break;
                    }
                  }
                }
              }
              else if (v46 > 0x7FFFFFFE)
              {
                *(void *)uint64_t v37 = 0;
                *((void *)v37 + 1) = 0;
                *(_DWORD *)uint64_t v37 = a2 - 2147483646;
              }
              else
              {
                *((void *)v37 + 1) = v46;
              }
            }
          }
          else
          {
            if (v27 <= 3) {
              int v47 = ~(-1 << (8 * v27));
            }
            else {
              int v47 = -1;
            }
            if (v27)
            {
              int v39 = v47 & (a2 - v16);
              if (v27 <= 3) {
                int v48 = v27;
              }
              else {
                int v48 = 4;
              }
              bzero(v37, v27);
              switch(v48)
              {
                case 2:
                  goto LABEL_115;
                case 3:
                  goto LABEL_116;
                case 4:
                  goto LABEL_117;
                default:
                  goto LABEL_101;
              }
            }
          }
        }
        else
        {
          if (v27 <= 3) {
            int v44 = ~(-1 << (8 * v27));
          }
          else {
            int v44 = -1;
          }
          if (v27)
          {
            int v39 = v44 & (a2 - v16);
            if (v27 <= 3) {
              int v45 = v27;
            }
            else {
              int v45 = 4;
            }
            bzero(v37, v27);
            switch(v45)
            {
              case 2:
                goto LABEL_115;
              case 3:
                goto LABEL_116;
              case 4:
                goto LABEL_117;
              default:
                goto LABEL_101;
            }
          }
        }
      }
      return;
  }
}

void sub_10011E7EC()
{
  if (!qword_100294050[0])
  {
    type metadata accessor for CRDTModelRevisionInfo();
    unint64_t v0 = sub_1001ECB50();
    if (!v1) {
      atomic_store(v0, qword_100294050);
    }
  }
}

unsigned char *sub_10011E844(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011E910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for ModelState.LoadedState()
{
  return sub_1000C08A4();
}

uint64_t sub_10011E950()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_10011E9CC(void *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  unint64_t v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    unint64_t v9 = v10 + v8;
  }
  uint64_t v14 = *(_DWORD *)(v6 + 80);
  if (v14 > 7 || v9 > 0x18 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
    return a1;
  }
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v19 > 0xFFFE)
      {
        int v18 = *(_DWORD *)((char *)a2 + v8);
        if (!v18) {
          goto LABEL_37;
        }
        goto LABEL_27;
      }
      if (v19 > 0xFE)
      {
        int v18 = *(unsigned __int16 *)((char *)a2 + v8);
        if (!*(unsigned __int16 *)((char *)a2 + v8)) {
          goto LABEL_37;
        }
        goto LABEL_27;
      }
      if (!v19)
      {
LABEL_37:
        if (!v7) {
          goto LABEL_53;
        }
        goto LABEL_38;
      }
    }
    int v18 = *((unsigned __int8 *)a2 + v8);
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_37;
    }
LABEL_27:
    int v20 = (v18 - 1) << (8 * v8);
    if (v8 > 3) {
      int v20 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v21 = v8;
      }
      else {
        int v21 = 4;
      }
      switch(v21)
      {
        case 2:
          int v22 = *a2;
          break;
        case 3:
          int v22 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v22 = *(_DWORD *)a2;
          break;
        default:
          int v22 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v22 = 0;
    }
    if (v7 + (v22 | v20) != -1) {
      goto LABEL_39;
    }
    goto LABEL_53;
  }
LABEL_38:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
  {
LABEL_39:
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v24 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v24 > 0xFFFE)
        {
          uint64_t v23 = 4;
        }
        else
        {
          BOOL v25 = v24 != 0;
          BOOL v13 = v24 >= 0xFF;
          uint64_t v23 = 2;
          if (!v13) {
            uint64_t v23 = v25;
          }
        }
      }
      else
      {
        uint64_t v23 = 1;
      }
      v8 += v23;
    }
    memcpy(a1, a2, v8);
    return a1;
  }
LABEL_53:
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v26 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v26 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v8) = 0;
        return a1;
      }
      if (v26 > 0xFE)
      {
        *(_WORD *)((char *)a1 + v8) = 0;
        return a1;
      }
      if (!v26) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

uint64_t sub_10011ECF8(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 > 1)
  {
LABEL_19:
    uint64_t v14 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(unsigned __int16 *))(v4 + 48))(a1);
    uint64_t v4 = v14;
    if (result) {
      return result;
    }
    goto LABEL_25;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = (~(-1 << v7) - v5 + 2) >> v7;
    if (v9 > 0xFFFE)
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
    if (v9 > 0xFE)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
    if (!v9)
    {
LABEL_18:
      if (v5) {
        goto LABEL_19;
      }
LABEL_25:
      BOOL v13 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v4 + 8);
      return v13(a1, v3);
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_18;
  }
LABEL_10:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  int v12 = v5 + (v6 | v10);
  uint64_t result = (v12 + 1);
  if (v12 == -1) {
    goto LABEL_25;
  }
  return result;
}

char *sub_10011EEB8(char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v10 > 0xFFFE)
      {
        int v9 = *(_DWORD *)((char *)a2 + v8);
        if (!v9) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v10 > 0xFE)
      {
        int v9 = *(unsigned __int16 *)((char *)a2 + v8);
        if (!*(unsigned __int16 *)((char *)a2 + v8)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v10)
      {
LABEL_20:
        if (!v7) {
          goto LABEL_36;
        }
        goto LABEL_21;
      }
    }
    int v9 = *((unsigned __int8 *)a2 + v8);
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3) {
      int v11 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v12 = *(void *)(v6 + 64);
      }
      else {
        int v12 = 4;
      }
      switch(v12)
      {
        case 2:
          int v13 = *a2;
          break;
        case 3:
          int v13 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v13 = *(_DWORD *)a2;
          break;
        default:
          int v13 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v13 = 0;
    }
    if (v7 + (v13 | v11) != -1) {
      goto LABEL_22;
    }
    goto LABEL_36;
  }
LABEL_21:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
  {
LABEL_22:
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v15 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v15 > 0xFFFE)
        {
          uint64_t v14 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v14 = 2;
          if (!v17) {
            uint64_t v14 = v16;
          }
        }
      }
      else
      {
        uint64_t v14 = 1;
      }
      v8 += v14;
    }
    memcpy(a1, a2, v8);
    return a1;
  }
LABEL_36:
  (*(void (**)(char *, unsigned __int16 *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v18 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v18 > 0xFFFE)
      {
        *(_DWORD *)&a1[v8] = 0;
        return a1;
      }
      if (v18 > 0xFE)
      {
        *(_WORD *)&a1[v8] = 0;
        return a1;
      }
      if (!v18) {
        return a1;
      }
    }
    a1[v8] = 0;
  }
  return a1;
}

unsigned __int16 *sub_10011F148(unsigned __int16 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7 > 1) {
    goto LABEL_21;
  }
  if (v8 > 3) {
    goto LABEL_3;
  }
  unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v10 > 0xFFFE)
  {
    int v9 = *(_DWORD *)((char *)a1 + v8);
    if (!v9) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v10 > 0xFE)
  {
    int v9 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!*(unsigned __int16 *)((char *)a1 + v8)) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v10)
  {
LABEL_3:
    int v9 = *((unsigned __int8 *)a1 + v8);
    if (!*((unsigned char *)a1 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3) {
      int v11 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v12 = *(void *)(v6 + 64);
      }
      else {
        int v12 = 4;
      }
      switch(v12)
      {
        case 2:
          int v13 = *a1;
          break;
        case 3:
          int v13 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v13 = *(_DWORD *)a1;
          break;
        default:
          int v13 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v13 = 0;
    }
    if ((v13 | v11) + v7 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_20:
  if (!v7) {
    goto LABEL_33;
  }
LABEL_21:
  uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
  if (!v14((unsigned __int8 *)a1, v7, v5))
  {
    if (v7 > 1)
    {
LABEL_74:
      if (v14(a2, v7, v5)) {
        goto LABEL_75;
      }
      goto LABEL_100;
    }
LABEL_33:
    if (v8 > 3) {
      goto LABEL_34;
    }
    unsigned int v18 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
    if (v18 > 0xFFFE)
    {
      int v16 = *(_DWORD *)&a2[v8];
      if (v16) {
        goto LABEL_55;
      }
    }
    else
    {
      if (v18 <= 0xFE)
      {
        if (!v18) {
          goto LABEL_72;
        }
LABEL_34:
        int v16 = a2[v8];
        if (!a2[v8]) {
          goto LABEL_72;
        }
LABEL_55:
        int v22 = (v16 - 1) << (8 * v8);
        if (v8 > 3) {
          int v22 = 0;
        }
        if (v8)
        {
          if (v8 <= 3) {
            int v23 = v8;
          }
          else {
            int v23 = 4;
          }
          switch(v23)
          {
            case 2:
              int v24 = *(unsigned __int16 *)a2;
              break;
            case 3:
              int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              break;
            case 4:
              int v24 = *(_DWORD *)a2;
              break;
            default:
              int v24 = *a2;
              break;
          }
        }
        else
        {
          int v24 = 0;
        }
        if (v7 + (v24 | v22) != -1)
        {
LABEL_75:
          (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
          if (v7 <= 1)
          {
            if (v8 > 3) {
              goto LABEL_70;
            }
            goto LABEL_77;
          }
LABEL_83:
          memcpy(a1, a2, v8);
          return a1;
        }
LABEL_100:
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 24))(a1, a2, v5);
        return a1;
      }
      int v16 = *(unsigned __int16 *)&a2[v8];
      if (*(_WORD *)&a2[v8]) {
        goto LABEL_55;
      }
    }
LABEL_72:
    if (!v7) {
      goto LABEL_100;
    }
    uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_74;
  }
  if (v7 > 1)
  {
LABEL_67:
    if (v14(a2, v7, v5)) {
      goto LABEL_68;
    }
    goto LABEL_88;
  }
LABEL_30:
  if (v8 > 3) {
    goto LABEL_31;
  }
  unsigned int v17 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v17 > 0xFFFE)
  {
    int v15 = *(_DWORD *)&a2[v8];
    if (v15) {
      goto LABEL_45;
    }
    goto LABEL_65;
  }
  if (v17 > 0xFE)
  {
    int v15 = *(unsigned __int16 *)&a2[v8];
    if (*(_WORD *)&a2[v8]) {
      goto LABEL_45;
    }
LABEL_65:
    if (!v7) {
      goto LABEL_88;
    }
    uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_67;
  }
  if (!v17) {
    goto LABEL_65;
  }
LABEL_31:
  int v15 = a2[v8];
  if (!a2[v8]) {
    goto LABEL_65;
  }
LABEL_45:
  int v19 = (v15 - 1) << (8 * v8);
  if (v8 > 3) {
    int v19 = 0;
  }
  if (v8)
  {
    if (v8 <= 3) {
      int v20 = v8;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        break;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a2;
        break;
      default:
        int v21 = *a2;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  if (v7 + (v21 | v19) != -1)
  {
LABEL_68:
    if (v7 <= 1)
    {
      if (v8 > 3)
      {
LABEL_70:
        uint64_t v25 = 1;
LABEL_82:
        v8 += v25;
        goto LABEL_83;
      }
LABEL_77:
      unsigned int v26 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v26 > 0xFFFE)
      {
        uint64_t v25 = 4;
      }
      else
      {
        BOOL v27 = v26 != 0;
        BOOL v28 = v26 >= 0xFF;
        uint64_t v25 = 2;
        if (!v28) {
          uint64_t v25 = v27;
        }
      }
      goto LABEL_82;
    }
    goto LABEL_83;
  }
LABEL_88:
  (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v29 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v29 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v8) = 0;
        return a1;
      }
      if (v29 > 0xFE)
      {
        *(unsigned __int16 *)((char *)a1 + v8) = 0;
        return a1;
      }
      if (!v29) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

char *sub_10011F66C(char *a1, unsigned __int16 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v10 > 0xFFFE)
      {
        int v9 = *(_DWORD *)((char *)a2 + v8);
        if (!v9) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v10 > 0xFE)
      {
        int v9 = *(unsigned __int16 *)((char *)a2 + v8);
        if (!*(unsigned __int16 *)((char *)a2 + v8)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v10)
      {
LABEL_20:
        if (!v7) {
          goto LABEL_36;
        }
        goto LABEL_21;
      }
    }
    int v9 = *((unsigned __int8 *)a2 + v8);
    if (!*((unsigned char *)a2 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3) {
      int v11 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v12 = *(void *)(v6 + 64);
      }
      else {
        int v12 = 4;
      }
      switch(v12)
      {
        case 2:
          int v13 = *a2;
          break;
        case 3:
          int v13 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v13 = *(_DWORD *)a2;
          break;
        default:
          int v13 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v13 = 0;
    }
    if (v7 + (v13 | v11) != -1) {
      goto LABEL_22;
    }
    goto LABEL_36;
  }
LABEL_21:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
  {
LABEL_22:
    if (v7 <= 1)
    {
      if (v8 <= 3)
      {
        unsigned int v15 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v15 > 0xFFFE)
        {
          uint64_t v14 = 4;
        }
        else
        {
          BOOL v16 = v15 != 0;
          BOOL v17 = v15 >= 0xFF;
          uint64_t v14 = 2;
          if (!v17) {
            uint64_t v14 = v16;
          }
        }
      }
      else
      {
        uint64_t v14 = 1;
      }
      v8 += v14;
    }
    memcpy(a1, a2, v8);
    return a1;
  }
LABEL_36:
  (*(void (**)(char *, unsigned __int16 *, uint64_t))(v6 + 32))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v18 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v18 > 0xFFFE)
      {
        *(_DWORD *)&a1[v8] = 0;
        return a1;
      }
      if (v18 > 0xFE)
      {
        *(_WORD *)&a1[v8] = 0;
        return a1;
      }
      if (!v18) {
        return a1;
      }
    }
    a1[v8] = 0;
  }
  return a1;
}

unsigned __int16 *sub_10011F8FC(unsigned __int16 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (v7 > 1) {
    goto LABEL_21;
  }
  if (v8 > 3) {
    goto LABEL_3;
  }
  unsigned int v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v10 > 0xFFFE)
  {
    int v9 = *(_DWORD *)((char *)a1 + v8);
    if (!v9) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v10 > 0xFE)
  {
    int v9 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!*(unsigned __int16 *)((char *)a1 + v8)) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v10)
  {
LABEL_3:
    int v9 = *((unsigned __int8 *)a1 + v8);
    if (!*((unsigned char *)a1 + v8)) {
      goto LABEL_20;
    }
LABEL_10:
    int v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3) {
      int v11 = 0;
    }
    if (v8)
    {
      if (v8 <= 3) {
        int v12 = *(void *)(v6 + 64);
      }
      else {
        int v12 = 4;
      }
      switch(v12)
      {
        case 2:
          int v13 = *a1;
          break;
        case 3:
          int v13 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v13 = *(_DWORD *)a1;
          break;
        default:
          int v13 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v13 = 0;
    }
    if ((v13 | v11) + v7 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_20:
  if (!v7) {
    goto LABEL_33;
  }
LABEL_21:
  uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
  if (!v14((unsigned __int8 *)a1, v7, v5))
  {
    if (v7 > 1)
    {
LABEL_74:
      if (v14(a2, v7, v5)) {
        goto LABEL_75;
      }
      goto LABEL_100;
    }
LABEL_33:
    if (v8 > 3) {
      goto LABEL_34;
    }
    unsigned int v18 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
    if (v18 > 0xFFFE)
    {
      int v16 = *(_DWORD *)&a2[v8];
      if (v16) {
        goto LABEL_55;
      }
    }
    else
    {
      if (v18 <= 0xFE)
      {
        if (!v18) {
          goto LABEL_72;
        }
LABEL_34:
        int v16 = a2[v8];
        if (!a2[v8]) {
          goto LABEL_72;
        }
LABEL_55:
        int v22 = (v16 - 1) << (8 * v8);
        if (v8 > 3) {
          int v22 = 0;
        }
        if (v8)
        {
          if (v8 <= 3) {
            int v23 = v8;
          }
          else {
            int v23 = 4;
          }
          switch(v23)
          {
            case 2:
              int v24 = *(unsigned __int16 *)a2;
              break;
            case 3:
              int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              break;
            case 4:
              int v24 = *(_DWORD *)a2;
              break;
            default:
              int v24 = *a2;
              break;
          }
        }
        else
        {
          int v24 = 0;
        }
        if (v7 + (v24 | v22) != -1)
        {
LABEL_75:
          (*(void (**)(unsigned __int16 *, uint64_t))(v6 + 8))(a1, v5);
          if (v7 <= 1)
          {
            if (v8 > 3) {
              goto LABEL_70;
            }
            goto LABEL_77;
          }
LABEL_83:
          memcpy(a1, a2, v8);
          return a1;
        }
LABEL_100:
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 40))(a1, a2, v5);
        return a1;
      }
      int v16 = *(unsigned __int16 *)&a2[v8];
      if (*(_WORD *)&a2[v8]) {
        goto LABEL_55;
      }
    }
LABEL_72:
    if (!v7) {
      goto LABEL_100;
    }
    uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_74;
  }
  if (v7 > 1)
  {
LABEL_67:
    if (v14(a2, v7, v5)) {
      goto LABEL_68;
    }
    goto LABEL_88;
  }
LABEL_30:
  if (v8 > 3) {
    goto LABEL_31;
  }
  unsigned int v17 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v17 > 0xFFFE)
  {
    int v15 = *(_DWORD *)&a2[v8];
    if (v15) {
      goto LABEL_45;
    }
    goto LABEL_65;
  }
  if (v17 > 0xFE)
  {
    int v15 = *(unsigned __int16 *)&a2[v8];
    if (*(_WORD *)&a2[v8]) {
      goto LABEL_45;
    }
LABEL_65:
    if (!v7) {
      goto LABEL_88;
    }
    uint64_t v14 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    goto LABEL_67;
  }
  if (!v17) {
    goto LABEL_65;
  }
LABEL_31:
  int v15 = a2[v8];
  if (!a2[v8]) {
    goto LABEL_65;
  }
LABEL_45:
  int v19 = (v15 - 1) << (8 * v8);
  if (v8 > 3) {
    int v19 = 0;
  }
  if (v8)
  {
    if (v8 <= 3) {
      int v20 = v8;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        break;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a2;
        break;
      default:
        int v21 = *a2;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  if (v7 + (v21 | v19) != -1)
  {
LABEL_68:
    if (v7 <= 1)
    {
      if (v8 > 3)
      {
LABEL_70:
        uint64_t v25 = 1;
LABEL_82:
        v8 += v25;
        goto LABEL_83;
      }
LABEL_77:
      unsigned int v26 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v26 > 0xFFFE)
      {
        uint64_t v25 = 4;
      }
      else
      {
        BOOL v27 = v26 != 0;
        BOOL v28 = v26 >= 0xFF;
        uint64_t v25 = 2;
        if (!v28) {
          uint64_t v25 = v27;
        }
      }
      goto LABEL_82;
    }
    goto LABEL_83;
  }
LABEL_88:
  (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v29 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v29 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v8) = 0;
        return a1;
      }
      if (v29 > 0xFE)
      {
        *(unsigned __int16 *)((char *)a1 + v8) = 0;
        return a1;
      }
      if (!v29) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v8) = 0;
  }
  return a1;
}

uint64_t sub_10011FE20(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(v4 + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  int v12 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_30;
  }
  char v13 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_13;
  }
  unsigned int v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
  if (HIWORD(v15))
  {
    int v14 = *(_DWORD *)((char *)a1 + v7);
    if (v14) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v15 <= 0xFF)
    {
      if (v15 < 2) {
        goto LABEL_30;
      }
LABEL_13:
      int v14 = *((unsigned __int8 *)a1 + v7);
      if (!*((unsigned char *)a1 + v7)) {
        goto LABEL_30;
      }
LABEL_20:
      int v16 = (v14 - 1) << v13;
      if (v7 > 3) {
        int v16 = 0;
      }
      if (v7)
      {
        if (v7 <= 3) {
          int v17 = v7;
        }
        else {
          int v17 = 4;
        }
        switch(v17)
        {
          case 2:
            int v18 = *a1;
            break;
          case 3:
            int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v18 = *(_DWORD *)a1;
            break;
          default:
            int v18 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v18 = 0;
      }
      return v6 + (v18 | v16) + 1;
    }
    int v14 = *(unsigned __int16 *)((char *)a1 + v7);
    if (*(unsigned __int16 *)((char *)a1 + v7)) {
      goto LABEL_20;
    }
  }
LABEL_30:
  if (!v6) {
    return 0;
  }
  if (!v5) {
    return 0;
  }
  unsigned int v19 = (*(uint64_t (**)(void))(v4 + 48))();
  BOOL v11 = v19 >= 2;
  uint64_t result = v19 - 2;
  if (result == 0 || !v11) {
    return 0;
  }
  return result;
}

void sub_10012000C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  size_t v9 = v8;
  if (v7 <= 1) {
    unsigned int v10 = 0;
  }
  else {
    unsigned int v10 = v7 - 2;
  }
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v12 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v12 > 0xFFFE)
      {
        uint64_t v11 = 4;
      }
      else
      {
        BOOL v13 = v12 != 0;
        BOOL v14 = v12 >= 0xFF;
        uint64_t v11 = 2;
        if (!v14) {
          uint64_t v11 = v13;
        }
      }
    }
    else
    {
      uint64_t v11 = 1;
    }
    size_t v9 = v11 + v8;
  }
  BOOL v14 = a3 >= v10;
  unsigned int v15 = a3 - v10;
  if (v15 != 0 && v14)
  {
    if (v9 <= 3)
    {
      unsigned int v19 = ((v15 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v19))
      {
        int v16 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v16 = 2;
      }
      else
      {
        int v16 = v19 > 1;
      }
    }
    else
    {
      int v16 = 1;
    }
  }
  else
  {
    int v16 = 0;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v9 < 4)
    {
      int v18 = (v17 >> (8 * v9)) + 1;
      if (v9)
      {
        int v20 = v17 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v9] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v18;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v9] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x10012032CLL);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (a2 + 2 <= v7)
        {
          if (a2 != -2)
          {
            int v24 = *(void (**)(void))(v6 + 56);
            v24();
          }
        }
        else
        {
          if (v8 <= 3) {
            int v21 = ~(-1 << (8 * v8));
          }
          else {
            int v21 = -1;
          }
          if (v8)
          {
            int v22 = v21 & (a2 - v7 + 1);
            if (v8 <= 3) {
              int v23 = v8;
            }
            else {
              int v23 = 4;
            }
            bzero(a1, v8);
            switch(v23)
            {
              case 2:
                *(_WORD *)a1 = v22;
                break;
              case 3:
                *(_WORD *)a1 = v22;
                a1[2] = BYTE2(v22);
                break;
              case 4:
                *(_DWORD *)a1 = v22;
                break;
              default:
                *a1 = v22;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_100120364(unsigned __int16 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unsigned int v3 = *(_DWORD *)(v2 + 84);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v3 > 1) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  char v5 = 8 * v4;
  if (v4 > 3) {
    goto LABEL_3;
  }
  unsigned int v7 = (~(-1 << v5) - v3 + 2) >> v5;
  if (v7 > 0xFFFE)
  {
    int v6 = *(_DWORD *)((char *)a1 + v4);
    if (v6) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v7 <= 0xFE)
    {
      if (!v7) {
        goto LABEL_18;
      }
LABEL_3:
      int v6 = *((unsigned __int8 *)a1 + v4);
      if (!*((unsigned char *)a1 + v4)) {
        goto LABEL_18;
      }
LABEL_10:
      int v8 = (v6 - 1) << v5;
      if (v4 > 3) {
        int v8 = 0;
      }
      if (v4)
      {
        if (v4 > 3) {
          LODWORD(v4) = 4;
        }
        switch((int)v4)
        {
          case 2:
            LODWORD(v4) = *a1;
            break;
          case 3:
            LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v4) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v4) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v3 + (v4 | v8) + 1;
    }
    int v6 = *(unsigned __int16 *)((char *)a1 + v4);
    if (*(unsigned __int16 *)((char *)a1 + v4)) {
      goto LABEL_10;
    }
  }
LABEL_18:
  if (v3) {
    return (*(uint64_t (**)(void))(v2 + 48))();
  }
  return 0;
}

void sub_1001204B8(char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  size_t v6 = *(void *)(v4 + 64);
  if (v5 > 1)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = (~(-1 << (8 * v6)) - v5 + 2) >> (8 * v6);
    if (v10 > 0xFFFE)
    {
      int v7 = 4;
    }
    else if (v10 >= 0xFF)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 != 0;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (v5 < a2)
  {
    unsigned int v8 = ~v5 + a2;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v6)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v6);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        return;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        return;
      default:
        return;
    }
  }
  switch(v7)
  {
    case 1:
      a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1001206D0);
    case 4:
      *(_DWORD *)&a1[v6] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v12 = *(void (**)(void))(v4 + 56);
        v12();
      }
      return;
  }
}

ValueMetadata *_s8CardListVMa()
{
  return &_s8CardListVN;
}

uint64_t sub_100120708(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100294180);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_100120C78();
  sub_1001ED1F0();
  v9[1] = a2;
  sub_10007DC14(&qword_100294168);
  sub_100120CCC(&qword_100294188, &qword_100294190);
  sub_1001ED020();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int sub_100120890()
{
  return sub_1001ED1A0();
}

void sub_1001208D4()
{
}

Swift::Int sub_1001208FC()
{
  return sub_1001ED1A0();
}

uint64_t sub_10012093C()
{
  return 0x6D65744964726163;
}

uint64_t sub_100120958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6D65744964726163 && a2 == 0xE900000000000073)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1001ED080();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1001209FC(uint64_t a1)
{
  unint64_t v2 = sub_100120C78();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100120A38(uint64_t a1)
{
  unint64_t v2 = sub_100120C78();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100120A74(uint64_t *a1, uint64_t *a2)
{
  return sub_1001B5EF8(*a1, *a2);
}

void *sub_100120A80@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100120AC8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100120AAC(void *a1)
{
  return sub_100120708(a1, *v1);
}

void *sub_100120AC8(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100294158);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = sub_100094758(a1, a1[3]);
  sub_100120C78();
  sub_1001ED1D0();
  if (v1)
  {
    sub_1000947F0((uint64_t)a1);
  }
  else
  {
    sub_10007DC14(&qword_100294168);
    sub_100120CCC(&qword_100294170, &qword_100294178);
    sub_1001ECFA0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    char v7 = (void *)v9[1];
    sub_1000947F0((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_100120C78()
{
  unint64_t result = qword_100294160;
  if (!qword_100294160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294160);
  }
  return result;
}

uint64_t sub_100120CCC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10008155C(&qword_100294168);
    sub_100120D4C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100120D4C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    _s8CardItemVMa();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8CardListV10CodingKeysOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s8CardListV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100120E80);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s8CardListV10CodingKeysOMa()
{
  return &_s8CardListV10CodingKeysON;
}

unint64_t sub_100120EBC()
{
  unint64_t result = qword_100294198;
  if (!qword_100294198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294198);
  }
  return result;
}

unint64_t sub_100120F14()
{
  unint64_t result = qword_1002941A0;
  if (!qword_1002941A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002941A0);
  }
  return result;
}

unint64_t sub_100120F6C()
{
  unint64_t result = qword_1002941A8;
  if (!qword_1002941A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002941A8);
  }
  return result;
}

unint64_t sub_100120FC0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14(&qword_100294328);
  uint64_t v2 = sub_1001ECEE0();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000936F8(v6, (uint64_t)v15, &qword_100294330);
    unint64_t result = sub_1001A8680((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100125B2C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100121104(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14(&qword_100294238);
  uint64_t v2 = (void *)sub_1001ECEE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000936F8(v4, (uint64_t)v13, (uint64_t *)&unk_100294240);
    unint64_t result = sub_1001A8680((uint64_t)v13);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v13[0];
    long long v9 = v13[1];
    *(void *)(v7 + 32) = v14;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    *(void *)(v2[7] + 8 * result) = v15;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100121230(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14(&qword_100294320);
  uint64_t v2 = (void *)sub_1001ECEE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1001A87A0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100121354(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14(&qword_100294338);
  uint64_t v2 = (void *)sub_1001ECEE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000936F8(v4, (uint64_t)&v16, &qword_100294340);
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    unint64_t result = sub_1001A87A0(v16, v17);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v9 = (uint64_t *)(v2[6] + 16 * result);
    *long long v9 = v5;
    v9[1] = v6;
    uint64_t v10 = v2[7] + 40 * result;
    long long v11 = v18;
    long long v12 = v19;
    *(void *)(v10 + 32) = v20;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001214A0(uint64_t a1)
{
  return sub_100121518(a1, (uint64_t *)&unk_100294310, (uint64_t *)&unk_100296960, _s14PricingServiceV12FetchedPriceVMa, _s14PricingServiceV12FetchedPriceVMa);
}

unint64_t sub_1001214DC(uint64_t a1)
{
  return sub_100121518(a1, &qword_100294300, &qword_100294308, (uint64_t (*)(void))_s11TrackedItemVMa, (uint64_t (*)(void))_s11TrackedItemVMa);
}

unint64_t sub_100121518(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  unsigned int v32 = a4;
  int v33 = a5;
  unsigned int v34 = a2;
  uint64_t v7 = sub_10007DC14(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    long long v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14(a3);
  uint64_t v11 = sub_1001ECEE0();
  long long v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v30[1] = a1;
  uint64_t v31 = v14;
  uint64_t v15 = v11 + 64;
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v17 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1000936F8(v16, (uint64_t)v10, v34);
    uint64_t v19 = *(void *)v10;
    uint64_t v18 = *((void *)v10 + 1);
    unsigned __int8 v20 = v10[16];
    unint64_t result = sub_1001A88FC(*(void *)v10, v18, v20);
    if (v22) {
      break;
    }
    unint64_t v23 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v24 = v12[6] + 24 * result;
    *(void *)uint64_t v24 = v19;
    *(void *)(v24 + 8) = v18;
    *(unsigned char *)(v24 + 16) = v20;
    uint64_t v25 = v12[7];
    uint64_t v26 = v32(0);
    unint64_t result = sub_100125AC4(v31, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v23, v33);
    uint64_t v27 = v12[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    void v12[2] = v29;
    v16 += v17;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100121718(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14((uint64_t *)&unk_100296950);
  uint64_t v2 = (void *)sub_1001ECEE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *(v4 - 5);
    uint64_t v6 = *(v4 - 4);
    int v7 = *((unsigned __int8 *)v4 - 24);
    uint64_t v8 = *(v4 - 2);
    uint64_t v9 = *(v4 - 1);
    uint64_t v10 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1001A88FC(v5, v6, v7);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = v2[6] + 24 * result;
    *(void *)uint64_t v13 = v5;
    *(void *)(v13 + 8) = v6;
    *(unsigned char *)(v13 + 16) = v7;
    uint64_t v14 = (void *)(v2[7] + 24 * result);
    *uint64_t v14 = v8;
    v14[1] = v9;
    v14[2] = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10012186C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14(&qword_100294370);
  uint64_t v2 = sub_1001ECEE0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000936F8(v6, (uint64_t)&v15, &qword_100294378);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1001A87A0(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100125B2C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001219A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14((uint64_t *)&unk_100294350);
  uint64_t v2 = (void *)sub_1001ECEE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1001A89A0((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100121AB0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007DC14(&qword_100294348);
  uint64_t v2 = (void *)sub_1001ECEE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1001A87A0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id CloudSyncDiagnosticService.__allocating_init(cloudKitController:entityServiceProviders:)(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_100124E48(a1, a2);

  return v6;
}

id CloudSyncDiagnosticService.init(cloudKitController:entityServiceProviders:)(void *a1, uint64_t a2)
{
  id v3 = sub_100124E48(a1, a2);

  return v3;
}

uint64_t CloudSyncDiagnosticService.detach()()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100121D64, 0, 0);
}

uint64_t sub_100121D64()
{
  id v1 = [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR___BDSCloudSyncDiagnosticService_cloudKitController) privateCloudDatabaseController];
  [v1 detach];

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100121F60(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_100121FD8, 0, 0);
}

uint64_t sub_100121FD8()
{
  uint64_t v2 = (char *)v0[2];
  id v1 = (void (**)(void, void))v0[3];
  id v3 = [*(id *)&v2[OBJC_IVAR___BDSCloudSyncDiagnosticService_cloudKitController] privateCloudDatabaseController];
  [v3 detach];

  v1[2](v1, 0);
  _Block_release(v1);
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t CloudSyncDiagnosticService.diagnosticInfo()()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1001220B0, 0, 0);
}

uint64_t sub_1001220B0()
{
  uint64_t v1 = sub_100122118(0);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100122118(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EB540();
  os_log_type_t v5 = sub_1001EC910();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Reading diagnosticInfo", v6, 2u);
    swift_slowDealloc();
  }

  char v7 = *(void **)(v2 + OBJC_IVAR___BDSCloudSyncDiagnosticService_cloudKitController);
  unint64_t v8 = (unint64_t)[v7 enableCloudSync];
  id v9 = [v7 currentStatus];
  id v10 = [v7 container];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = [v10 description];

    sub_1001EC370();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v14 = 0;
  }
  unint64_t v15 = (unint64_t)[v7 gettingAccountInfo];
  id v16 = [v7 privateCloudDatabaseController];
  id v36 = [v16 diagnosticDatabaseInfo];
  if (qword_100291188 != -1) {
    swift_once();
  }
  long long v17 = (void *)static BDSSyncEngine.shared;
  uint64_t v18 = (id *)(static BDSSyncEngine.shared + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  id v19 = *v18;
  id v20 = v17;
  if (v19) {
    id v19 = [v19 establishedSalt];
  }
  id v35 = [objc_allocWithZone((Class)BDSCloudSyncDiagnosticSyncEngineInfo) initWithEstablishedSalt:v19];

  unint64_t v21 = *(void *)(v2 + OBJC_IVAR___BDSCloudSyncDiagnosticService_entityServiceProviders);
  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v22) {
      goto LABEL_12;
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    if (v14)
    {
LABEL_19:
      NSString v28 = sub_1001EC340();
      swift_bridgeObjectRelease();
LABEL_23:
      id v29 = objc_allocWithZone((Class)BDSCloudSyncDiagnosticInfo);
      sub_100081668(0, &qword_100294388);
      Class isa = sub_1001EC5D0().super.isa;
      swift_bridgeObjectRelease();
      id v31 = [v29 initWithEnabledSync:v8 accountStatus:v9 container:v28 gettingAccountInfo:v15 privateDatabaseInfo:v36 privateDatabaseSyncEngineInfo:v35 entityInfos:isa];

      return (uint64_t)v31;
    }
LABEL_22:
    NSString v28 = 0;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1001ECEA0();
  uint64_t v22 = result;
  if (!result) {
    goto LABEL_21;
  }
LABEL_12:
  if (v22 >= 1)
  {
    unsigned int v32 = v15;
    id v33 = v9;
    unsigned int v34 = v8;
    uint64_t v24 = 0;
    do
    {
      if ((v21 & 0xC000000000000001) != 0)
      {
        uint64_t v25 = (void *)sub_1001ECD50();
      }
      else
      {
        uint64_t v25 = *(void **)(v21 + 8 * v24 + 32);
        swift_unknownObjectRetain();
      }
      ++v24;
      id v26 = [v25 diagnosticEntityInfos:a1 & 1];
      sub_100081668(0, &qword_100294388);
      unint64_t v27 = sub_1001EC5E0();
      swift_unknownObjectRelease();

      sub_1001B77C0(v27);
    }
    while (v22 != v24);
    swift_bridgeObjectRelease_n();
    unint64_t v8 = v34;
    id v9 = v33;
    unint64_t v15 = v32;
    if (v14) {
      goto LABEL_19;
    }
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001226D4(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_10012274C, 0, 0);
}

uint64_t sub_10012274C()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = (void (**)(void, void, void))v0[3];
  id v3 = (void *)sub_100122118(0);

  ((void (**)(void, void *, void))v1)[2](v1, v3, 0);
  _Block_release(v1);

  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t CloudSyncDiagnosticService.findLocalIdDupes()()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10010720C;
  v2[2] = v0;
  return _swift_task_switch(sub_1001228A8, 0, 0);
}

uint64_t sub_100122888()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1001228A8, 0, 0);
}

uint64_t sub_1001228A8()
{
  id v1 = objc_msgSend(objc_msgSend(*(id *)(v0[2] + OBJC_IVAR___BDSCloudSyncDiagnosticService_cloudKitController), "configuration"), "serviceZones");
  swift_unknownObjectRelease();
  if (v1)
  {
    uint64_t v2 = (void *)sub_1001EC5E0();
  }
  else
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  v0[3] = v2;
  uint64_t v3 = v2[2];
  v0[4] = v3;
  if (v3)
  {
    v0[5] = 0;
    uint64_t v5 = v2[4];
    uint64_t v4 = v2[5];
    v0[6] = v4;
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[7] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100122A70;
    uint64_t v7 = v0[2];
    v6[19] = v4;
    v6[20] = v7;
    v6[18] = v5;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = swift_task_alloc();
    v0[8] = v8;
    *(void *)uint64_t v8 = v0;
    *(void *)(v8 + 8) = sub_100122CE8;
    uint64_t v9 = v0[2];
    *(unsigned char *)(v8 + 159) = -18;
    *(void *)(v8 + 160) = v9;
    strcpy((char *)(v8 + 144), "CollectionZone");
  }
  return _swift_task_switch(sub_100123794, 0, 0);
}

uint64_t sub_100122A70()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100122B88, 0, 0);
}

uint64_t sub_100122B88()
{
  uint64_t v1 = v0[5] + 1;
  if (v1 == v0[4])
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = swift_task_alloc();
    v0[8] = v2;
    *(void *)uint64_t v2 = v0;
    *(void *)(v2 + 8) = sub_100122CE8;
    uint64_t v3 = v0[2];
    *(unsigned char *)(v2 + 159) = -18;
    *(void *)(v2 + 160) = v3;
    strcpy((char *)(v2 + 144), "CollectionZone");
  }
  else
  {
    v0[5] = v1;
    uint64_t v4 = v0[3] + 16 * v1;
    uint64_t v6 = *(void *)(v4 + 32);
    uint64_t v5 = *(void *)(v4 + 40);
    v0[6] = v5;
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[7] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100122A70;
    uint64_t v8 = v0[2];
    v7[19] = v5;
    v7[20] = v8;
    v7[18] = v6;
  }
  return _swift_task_switch(sub_100123794, 0, 0);
}

uint64_t sub_100122CE8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100122F44(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100123004;
  v5[2] = v4;
  return _swift_task_switch(sub_1001228A8, 0, 0);
}

uint64_t sub_100123004()
{
  uint64_t v1 = *(void (***)(void, void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  v1[2](v1, 0);
  _Block_release(v1);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

unint64_t CloudSyncDiagnosticService.stateForLog()()
{
  uint64_t v0 = (void *)sub_100122118(1);
  sub_10007DC14(&qword_1002941D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215320;
  strcpy((char *)(inited + 32), "diagnosticInfo");
  *(unsigned char *)(inited + 47) = -18;
  id v2 = [v0 stateForLog];
  uint64_t v3 = sub_1001EC260();

  *(void *)(inited + 72) = sub_10007DC14(&qword_1002941E0);
  *(void *)(inited + 48) = v3;
  unint64_t v4 = sub_10012186C(inited);

  return v4;
}

uint64_t CloudSyncDiagnosticService.fetchRemoteChanges()()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1002941F0 + dword_1002941F0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000F8378;
  return v3();
}

uint64_t sub_10012359C(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1002941F0 + dword_1002941F0);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *id v2 = v1;
  v2[1] = sub_100123644;
  return v4();
}

uint64_t sub_100123644(void *a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  ((void (**)(void, void *))v3)[2](v3, a1);
  _Block_release(v3);

  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_100123770(uint64_t a1, uint64_t a2)
{
  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  return _swift_task_switch(sub_100123794, 0, 0);
}

uint64_t sub_100123794()
{
  uint64_t v18 = v0;
  *(void *)(v0 + 168) = OBJC_IVAR___BDSCloudSyncDiagnosticService_logger;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC910();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 136) = sub_1001A8090(v4, v3, &v17);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "_findLocalIdDupes(%{public}s)", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v6 = objc_msgSend(*(id *)(*(void *)(v0 + 160) + OBJC_IVAR___BDSCloudSyncDiagnosticService_cloudKitController), "privateCloudDatabaseController", v17);
  *(void *)(v0 + 176) = v6;
  uint64_t v7 = (objc_class *)type metadata accessor for CloudSyncDiagnosticCloudFetcher();
  id v8 = objc_allocWithZone(v7);
  id v9 = v6;
  uint64_t v10 = (char *)v8;
  sub_1001EB550();
  *(void *)&v10[OBJC_IVAR____TtC14bookdatastored31CloudSyncDiagnosticCloudFetcher_cloudKitDatabaseController] = v9;
  id v11 = v9;

  *(void *)(v0 + 88) = v10;
  *(void *)(v0 + 96) = v7;
  *(void *)(v0 + 184) = objc_msgSendSuper2((objc_super *)(v0 + 88), "init");

  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 192) = v12;
  *(void *)(v12 + 16) = &_swiftEmptyDictionarySingleton;
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100123AB0;
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v14 = *(void *)(v0 + 152);
  return CloudSyncDiagnosticCloudFetcher.fetchZone(zoneName:recordBlock:)(v15, v14, (uint64_t)sub_100125B74, v12);
}

uint64_t sub_100123AB0()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100123BC8, 0, 0);
}

void sub_100123BC8()
{
  uint64_t v78 = v0;
  uint64_t v1 = v0;
  unsigned int v64 = (void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 192);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v59 = v3 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v3 + 64);
  int64_t v60 = (unint64_t)(63 - v4) >> 6;
  uint64_t v61 = v3;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v70 = v0;
  while (v6)
  {
    uint64_t v62 = (v6 - 1) & v6;
    int64_t v63 = v7;
    unint64_t v8 = __clz(__rbit64(v6)) | (v7 << 6);
LABEL_23:
    uint64_t v13 = (uint64_t *)(*(void *)(v61 + 48) + 16 * v8);
    uint64_t v14 = *(void *)(*(void *)(v61 + 56) + 8 * v8);
    unint64_t v15 = v13[1];
    uint64_t v71 = *v13;
    *unsigned int v64 = 0;
    uint64_t v65 = v14 + 64;
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    if (-v16 < 64) {
      uint64_t v17 = ~(-1 << -(char)v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & *(void *)(v14 + 64);
    unint64_t v76 = v15;
    swift_bridgeObjectRetain();
    uint64_t v67 = v14;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    int64_t v19 = 0;
    int64_t v66 = (unint64_t)(63 - v16) >> 6;
    while (1)
    {
      if (v18)
      {
        uint64_t v68 = (v18 - 1) & v18;
        unint64_t v20 = __clz(__rbit64(v18)) | (v19 << 6);
        goto LABEL_44;
      }
      int64_t v21 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_70;
      }
      if (v21 >= v66) {
        break;
      }
      unint64_t v22 = *(void *)(v65 + 8 * v21);
      ++v19;
      if (!v22)
      {
        int64_t v19 = v21 + 1;
        if (v21 + 1 >= v66) {
          break;
        }
        unint64_t v22 = *(void *)(v65 + 8 * v19);
        if (!v22)
        {
          int64_t v19 = v21 + 2;
          if (v21 + 2 >= v66) {
            break;
          }
          unint64_t v22 = *(void *)(v65 + 8 * v19);
          if (!v22)
          {
            int64_t v23 = v21 + 3;
            if (v23 >= v66) {
              break;
            }
            unint64_t v22 = *(void *)(v65 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                int64_t v19 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_72;
                }
                if (v19 >= v66) {
                  goto LABEL_64;
                }
                unint64_t v22 = *(void *)(v65 + 8 * v19);
                ++v23;
                if (v22) {
                  goto LABEL_43;
                }
              }
            }
            int64_t v19 = v23;
          }
        }
      }
LABEL_43:
      uint64_t v68 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v19 << 6);
LABEL_44:
      uint64_t v24 = (uint64_t *)(*(void *)(v67 + 48) + 16 * v20);
      unint64_t v25 = v24[1];
      uint64_t v74 = *v24;
      unint64_t v26 = *(void *)(*(void *)(v67 + 56) + 8 * v20);
      unint64_t v27 = v26 >> 62;
      int64_t v69 = v19;
      if (v26 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1001ECEA0();
        swift_bridgeObjectRelease();
        if (v28 <= 1) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28 <= 1) {
          goto LABEL_27;
        }
      }
      if (__OFADD__(*v64, 1))
      {
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      *(void *)(v1 + 120) = *v64 + 1;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v29 = sub_1001EB540();
      os_log_type_t v30 = sub_1001EC910();
      BOOL v31 = os_log_type_enabled(v29, v30);
      unint64_t v32 = *(void *)(v1 + 152);
      unint64_t v73 = v26;
      if (v31)
      {
        uint64_t v33 = *(void *)(v1 + 144);
        uint64_t v34 = swift_slowAlloc();
        v77[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 136446978;
        swift_bridgeObjectRetain();
        *(void *)(v34 + 4) = sub_1001A8090(v33, v32, v77);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v34 + 14) = sub_1001A8090(v71, v76, v77);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v34 + 24) = sub_1001A8090(v74, v25, v77);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 32) = 2048;
        swift_bridgeObjectRelease();
        *(void *)(v34 + 34) = v28;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "_findLocalIdDupes(%{public}s, %{public}s) - Found localId dupes - %s (%ld):", (uint8_t *)v34, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v35 = v26 & 0xFFFFFFFFFFFFFF8;
        if (v27) {
          goto LABEL_49;
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v35 = v26 & 0xFFFFFFFFFFFFFF8;
        if (v27)
        {
LABEL_49:
          swift_bridgeObjectRetain();
          uint64_t v36 = sub_1001ECEA0();
          swift_bridgeObjectRelease();
          if (!v36) {
            goto LABEL_27;
          }
          goto LABEL_53;
        }
      }
      uint64_t v36 = *(void *)(v35 + 16);
      if (!v36) {
        goto LABEL_27;
      }
LABEL_53:
      if (v36 < 1) {
        goto LABEL_71;
      }
      uint64_t v37 = 0;
      unint64_t v38 = v26 & 0xC000000000000001;
      uint64_t v72 = v36;
      do
      {
        if (v38) {
          id v43 = (id)sub_1001ECD50();
        }
        else {
          id v43 = *(id *)(v26 + 8 * v37 + 32);
        }
        int v44 = v43;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v45 = v44;
        uint64_t v46 = sub_1001EB540();
        os_log_type_t v47 = sub_1001EC910();
        BOOL v48 = os_log_type_enabled(v46, v47);
        unint64_t v49 = v25;
        unint64_t v50 = *(void *)(v1 + 152);
        if (v48)
        {
          unint64_t v39 = v38;
          uint64_t v40 = *(void *)(v1 + 144);
          uint64_t v41 = swift_slowAlloc();
          unint64_t v75 = (void *)swift_slowAlloc();
          v77[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 136446978;
          swift_bridgeObjectRetain();
          uint64_t v42 = v40;
          unint64_t v38 = v39;
          *(void *)(v41 + 4) = sub_1001A8090(v42, v50, v77);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v41 + 12) = 2082;
          swift_bridgeObjectRetain();
          *(void *)(v41 + 14) = sub_1001A8090(v71, v76, v77);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v41 + 22) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v41 + 24) = sub_1001A8090(v74, v49, v77);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v41 + 32) = 2112;
          *(void *)(v41 + 34) = v45;
          *unint64_t v75 = v45;

          _os_log_impl((void *)&_mh_execute_header, v46, v47, "_findLocalIdDupes(%{public}s, %{public}s)     - %s: %@", (uint8_t *)v41, 0x2Au);
          sub_10007DC14(&qword_100293190);
          swift_arrayDestroy();
          unint64_t v26 = v73;
          swift_slowDealloc();
          swift_arrayDestroy();
          uint64_t v1 = v70;
          swift_slowDealloc();
          uint64_t v36 = v72;
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        unint64_t v25 = v49;
        ++v37;
      }
      while (v36 != v37);
LABEL_27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v18 = v68;
      int64_t v19 = v69;
    }
LABEL_64:
    swift_release();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unsigned int v51 = sub_1001EB540();
    os_log_type_t v52 = sub_1001EC910();
    BOOL v53 = os_log_type_enabled(v51, v52);
    unint64_t v54 = *(void *)(v1 + 152);
    if (v53)
    {
      uint64_t v55 = *(void *)(v1 + 144);
      uint64_t v56 = swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136446722;
      swift_bridgeObjectRetain();
      *(void *)(v1 + 104) = sub_1001A8090(v55, v54, v77);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v56 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v1 + 112) = sub_1001A8090(v71, v76, v77);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v56 + 22) = 2048;
      swift_beginAccess();
      *(void *)(v1 + 128) = *(void *)(v1 + 120);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "_findLocalIdDupes(%{public}s, %{public}s) - Total localId dupes: %ld", (uint8_t *)v56, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    unint64_t v6 = v62;
    int64_t v7 = v63;
  }
  int64_t v9 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    return;
  }
  if (v9 >= v60) {
    goto LABEL_66;
  }
  unint64_t v10 = *(void *)(v59 + 8 * v9);
  int64_t v11 = v7 + 1;
  if (v10) {
    goto LABEL_22;
  }
  int64_t v11 = v7 + 2;
  if (v7 + 2 >= v60) {
    goto LABEL_66;
  }
  unint64_t v10 = *(void *)(v59 + 8 * v11);
  if (v10) {
    goto LABEL_22;
  }
  int64_t v11 = v7 + 3;
  if (v7 + 3 >= v60) {
    goto LABEL_66;
  }
  unint64_t v10 = *(void *)(v59 + 8 * v11);
  if (v10)
  {
LABEL_22:
    uint64_t v62 = (v10 - 1) & v10;
    int64_t v63 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_23;
  }
  uint64_t v12 = v7 + 4;
  if (v7 + 4 < v60)
  {
    unint64_t v10 = *(void *)(v59 + 8 * v12);
    if (!v10)
    {
      while (1)
      {
        int64_t v11 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_74;
        }
        if (v11 >= v60) {
          goto LABEL_66;
        }
        unint64_t v10 = *(void *)(v59 + 8 * v11);
        ++v12;
        if (v10) {
          goto LABEL_22;
        }
      }
    }
    int64_t v11 = v7 + 4;
    goto LABEL_22;
  }
LABEL_66:
  unsigned int v57 = *(void **)(v1 + 176);
  swift_release();

  swift_release();
  int v58 = *(void (**)(void))(v1 + 8);
  v58();
}

uint64_t sub_100124678(void *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 16);
  uint64_t v5 = sub_1001ECAB0();
  uint64_t v7 = v6;
  swift_beginAccess();
  uint64_t v8 = *(void *)(a2 + 16);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1001A87A0(v5, v7);
    if (v10)
    {
      int64_t v11 = *(void **)(*(void *)(v8 + 56) + 8 * v9);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  int64_t v11 = &_swiftEmptyDictionarySingleton;
LABEL_6:
  id v12 = [self localIdentifierFromRecord:a1];
  uint64_t v13 = sub_1001EC370();
  uint64_t v15 = v14;

  if (!v11[2])
  {
LABEL_12:
    sub_10007DC14(&qword_100293470);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100217610;
    *(void *)(v22 + 32) = a1;
    uint64_t v28 = v22;
    sub_1001EC600();
    id v23 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10019AA9C(v28, v13, v15, isUniquelyReferenced_nonNull_native);
    uint64_t v21 = (uint64_t)v11;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1001A87A0(v13, v15);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)(v11[7] + 8 * v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v19 = a1;
  sub_1001EC5C0();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1001EC610();
  }
  sub_1001EC640();
  sub_1001EC600();
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_10019AA9C(v18, v13, v15, v20);
  uint64_t v21 = (uint64_t)v11;
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  sub_10019AA70(v21, v5, v7, v25);
  *uint64_t v4 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void CloudSyncDiagnosticService.init()()
{
}

uint64_t sub_100124A30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100093EB4;
  return v6();
}

uint64_t sub_100124AFC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100093EB4;
  return v7();
}

uint64_t sub_100124BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EC6A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1001EC690();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10012574C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1001EC650();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100124D6C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100115ABC;
  return v6(a1);
}

id sub_100124E48(void *a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = v2;
  sub_1001EB550();
  *(void *)&v6[OBJC_IVAR___BDSCloudSyncDiagnosticService_cloudKitController] = a1;
  *(void *)&v6[OBJC_IVAR___BDSCloudSyncDiagnosticService_entityServiceProviders] = a2;
  id v7 = a1;

  v9.receiver = v6;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t _s14bookdatastored26CloudSyncDiagnosticServiceC05clearC8MetadataSo7NSErrorCSgyF_0()
{
  if (qword_100291188 != -1) {
    swift_once();
  }
  sub_10007DC14(&qword_1002964C0);
  sub_1001EC9E0();
  if (!v2) {
    return 0;
  }
  sub_10007DC14(&qword_1002929F0);
  sub_100081668(0, (unint64_t *)&unk_100294360);
  if (swift_dynamicCast()) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100125020()
{
  uint64_t v1 = sub_1001EB700();
  v0[4] = v1;
  v0[5] = *(void *)(v1 - 8);
  v0[6] = swift_task_alloc();
  uint64_t v2 = sub_1001EB730();
  v0[7] = v2;
  v0[8] = *(void *)(v2 - 8);
  v0[9] = swift_task_alloc();
  return _swift_task_switch(sub_100125138, 0, 0);
}

uint64_t sub_100125138()
{
  if (qword_100291188 != -1) {
    swift_once();
  }
  uint64_t v1 = (char *)static BDSSyncEngine.shared;
  v0[10] = static BDSSyncEngine.shared;
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine];
  v0[11] = v2;
  uint64_t v3 = v1;
  if (v2)
  {
    (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), v0[4]);
    swift_retain();
    sub_1001EB710();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[12] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1001252C4;
    uint64_t v5 = v0[9];
    return CKSyncEngine.fetchChanges(_:)(v5);
  }
  else
  {

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6(0);
  }
}

uint64_t sub_1001252C4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *(void *)(*v1 + 56);
  uint64_t v6 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_1001254B8, 0, 0);
  }
  else
  {

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    id v7 = *(uint64_t (**)(void))(v6 + 8);
    return v7(0);
  }
}

uint64_t sub_1001254B8()
{
  uint64_t v1 = *(void *)(v0 + 104);

  *(void *)(v0 + 16) = v1;
  sub_10007DC14(&qword_1002929F0);
  sub_100081668(0, (unint64_t *)&unk_100294360);
  if (swift_dynamicCast()) {
    uint64_t v2 = *(void *)(v0 + 24);
  }
  else {
    uint64_t v2 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100125594()
{
  return type metadata accessor for CloudSyncDiagnosticService();
}

uint64_t type metadata accessor for CloudSyncDiagnosticService()
{
  uint64_t result = qword_100294228;
  if (!qword_100294228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001255E8()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100125698()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100093EB4;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_100294250 + dword_100294250);
  return v4(v2);
}

uint64_t sub_10012574C(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100293840);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001257AC()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001257E4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100093200;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100294280 + dword_100294280);
  return v6(a1, v4);
}

uint64_t sub_1001258A0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_100294290 + dword_100294290);
  return v5(v2, v3);
}

uint64_t sub_100125958()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100093200;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1002942B0 + dword_1002942B0);
  return v5(v2, v3);
}

uint64_t sub_100125A10()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100093EB4;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1002942D0 + dword_1002942D0);
  return v5(v2, v3);
}

uint64_t sub_100125AC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_OWORD *sub_100125B2C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100125B3C()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100125B74(void *a1)
{
  return sub_100124678(a1, v1);
}

uint64_t *sub_100125B7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100125C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1001EB0C0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *sub_100125CB0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_100125D2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_100125DA8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100125E24(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100125EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100125EB4);
}

uint64_t sub_100125EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_100125F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100125F38);
}

uint64_t sub_100125F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1001EB0C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t _s11RecentPriceVMa()
{
  uint64_t result = qword_1002943E8;
  if (!qword_1002943E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100125FF8()
{
  uint64_t result = sub_1001EB0C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100126094(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100294430);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_100126644();
  sub_1001ED1F0();
  v8[15] = 0;
  sub_1001ED000();
  if (!v1)
  {
    _s11RecentPriceVMa();
    v8[14] = 1;
    sub_1001EB0C0();
    sub_1000B4468(&qword_100292138);
    sub_1001ED020();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100126238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v25 = sub_1001EB0C0();
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10007DC14(&qword_100294420);
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s11RecentPriceVMa();
  __chkstk_darwin(v8);
  char v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_100126644();
  sub_1001ED1D0();
  if (!v2)
  {
    uint64_t v21 = v8;
    uint64_t v11 = v24;
    uint64_t v12 = v25;
    uint64_t v13 = v5;
    char v28 = 0;
    uint64_t v14 = v26;
    sub_1001ECF80();
    char v20 = v10;
    *(void *)char v10 = v15;
    char v27 = 1;
    sub_1000B4468(&qword_100292148);
    sub_1001ECFA0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v14);
    uint64_t v16 = v22;
    uint64_t v17 = (uint64_t)v20;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v20[*(int *)(v21 + 20)], v13, v12);
    sub_100126698(v17, v16);
  }
  return sub_1000947F0((uint64_t)a1);
}

uint64_t sub_10012651C()
{
  if (*v0) {
    return 1702125924;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_10012654C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100126908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100126574(uint64_t a1)
{
  unint64_t v2 = sub_100126644();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001265B0(uint64_t a1)
{
  unint64_t v2 = sub_100126644();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001265EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100126238(a1, a2);
}

uint64_t sub_100126604(void *a1)
{
  return sub_100126094(a1);
}

uint64_t sub_10012661C(double *a1, double *a2)
{
  if (*a1 == *a2) {
    return sub_1001EB090();
  }
  else {
    return 0;
  }
}

unint64_t sub_100126644()
{
  unint64_t result = qword_100294428;
  if (!qword_100294428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294428);
  }
  return result;
}

uint64_t sub_100126698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11RecentPriceVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *_s11RecentPriceV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001267C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11RecentPriceV10CodingKeysOMa()
{
  return &_s11RecentPriceV10CodingKeysON;
}

unint64_t sub_100126804()
{
  unint64_t result = qword_100294438;
  if (!qword_100294438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294438);
  }
  return result;
}

unint64_t sub_10012685C()
{
  unint64_t result = qword_100294440;
  if (!qword_100294440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294440);
  }
  return result;
}

unint64_t sub_1001268B4()
{
  unint64_t result = qword_100294448;
  if (!qword_100294448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294448);
  }
  return result;
}

uint64_t sub_100126908(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_1001269E4(__n128 *a1)
{
  sub_1000DB57C(a1 + 2, &v13);
  sub_1000DB57C(&v13, &v14);
  if (v15)
  {
    id v3 = objc_allocWithZone((Class)BGNonRepeatingSystemTaskRequest);
    sub_100087ABC((uint64_t)a1);
    NSString v4 = sub_1001EC340();
    sub_100087A3C((uint64_t)a1);
    id v5 = [v3 initWithIdentifier:v4];
  }
  else
  {
    __n128 v6 = v14;
    id v7 = objc_allocWithZone((Class)BGRepeatingSystemTaskRequest);
    sub_100087ABC((uint64_t)a1);
    NSString v8 = sub_1001EC340();
    sub_100087A3C((uint64_t)a1);
    id v5 = [v7 initWithIdentifier:v8];

    [v5 setInterval:v6.n128_f64[0]];
    [v5 setMinDurationBetweenInstances:v6.n128_f64[1]];
  }
  [v5 setPriority:a1[1].n128_u64[0]];
  [v5 setRequiresInexpensiveNetworkConnectivity:a1[1].n128_u8[8]];
  [v5 setRequiresExternalPower:a1[1].n128_u8[9]];
  id v12 = 0;
  unsigned __int8 v9 = [v1 submitTaskRequest:v5 error:&v12];

  if (v9) {
    return v12;
  }
  id v11 = v12;
  sub_1001EAE60();

  return (id)swift_willThrow();
}

id sub_100126BD0()
{
  NSString v1 = sub_1001EC340();
  id v5 = 0;
  unsigned int v2 = [v0 cancelTaskRequestWithIdentifier:v1 error:&v5];

  if (v2) {
    return v5;
  }
  id v4 = v5;
  sub_1001EAE60();

  return (id)swift_willThrow();
}

void sub_100126C8C()
{
  NSString v1 = *v0;
  id v2 = sub_1001EC340();
  [v1 deregisterTaskWithIdentifier:v2];
}

void sub_100126CE4(uint64_t a1@<X8>)
{
  id v3 = *v1;
  NSString v4 = sub_1001EC340();
  id v5 = [v3 taskRequestForIdentifier:v4];

  if (v5)
  {
    sub_100129334(v5, (uint64_t)v13);
    long long v11 = v13[1];
    long long v12 = v13[0];
    long long v10 = v13[2];
    char v6 = v14;

    long long v8 = v10;
    long long v7 = v11;
    long long v9 = v12;
  }
  else
  {
    char v6 = 0;
    long long v9 = 0uLL;
    long long v7 = 0uLL;
    long long v8 = 0uLL;
  }
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 48) = v6;
}

id sub_100126D98(__n128 *a1)
{
  return sub_1001269E4(a1);
}

id sub_100126DBC()
{
  return sub_100126BD0();
}

void sub_100126DE0(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    v4[4] = a1;
    v4[5] = a2;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 1107296256;
    v4[2] = sub_1000DB998;
    v4[3] = &unk_100268868;
    id v3 = _Block_copy(v4);
    swift_release();
  }
  else
  {
    id v3 = 0;
  }
  [v2 setExpirationHandler:v3];
  _Block_release(v3);
}

id sub_100126E88()
{
  return [v0 setTaskCompleted];
}

uint64_t sub_100126E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100126EA8()
{
  return swift_release();
}

void *sub_100126EB0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

Swift::Int sub_100126EBC()
{
  return sub_1001ED1A0();
}

uint64_t sub_100126F18()
{
  swift_bridgeObjectRetain();
  sub_1001EC440();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_100126F70()
{
  return sub_1001ED1A0();
}

uint64_t sub_100126FC8()
{
  return sub_1001EC5B0();
}

uint64_t sub_100127028()
{
  return sub_1001EC5A0();
}

ValueMetadata *_s6AdamIDVMa()
{
  return &_s6AdamIDVN;
}

unint64_t sub_10012708C()
{
  unint64_t result = qword_100294450;
  if (!qword_100294450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294450);
  }
  return result;
}

unint64_t sub_1001270E0()
{
  unint64_t result = qword_100294458;
  if (!qword_100294458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294458);
  }
  return result;
}

void *sub_100127134()
{
  id v1 = [v0 itemIDs];
  sub_100127A2C();
  unint64_t v2 = sub_1001EC5E0();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1001ECEA0();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t result = (void *)sub_1000CF8A8(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_1001ECD50();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      long long v7 = v6;
      id v8 = [v6 adamID];
      uint64_t v9 = sub_1001EC370();
      uint64_t v11 = v10;

      unsigned __int8 v12 = [v7 isAudiobook];
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_1000CF8A8(v13 > 1, v14 + 1, 1);
      }
      ++v5;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      char v15 = &_swiftEmptyArrayStorage[3 * v14];
      v15[4] = v9;
      v15[5] = v11;
      *((unsigned char *)v15 + 48) = v12;
    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

double sub_100127300()
{
  id v1 = [v0 dealAbsoluteThreshold];
  [v1 doubleValue];
  double v3 = v2;

  id v4 = [v0 dealRelativeThreshold];
  [v4 doubleValue];
  double v6 = v5;

  if (v3 < 0.0)
  {
    sub_100127930();
    swift_allocError();
    *(double *)uint64_t v7 = v3;
    goto LABEL_5;
  }
  if (v6 < 0.0)
  {
    sub_100127930();
    swift_allocError();
    *(double *)uint64_t v7 = v6;
LABEL_5:
    *(unsigned char *)(v7 + 8) = v3 >= 0.0;
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_100127408@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  unint64_t v6 = sub_1001EB0C0();
  unint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EB0B0();
  if (a1 >> 62) {
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  BOOL v31 = a2;
  if (v10)
  {
    while (1)
    {
      unint64_t v32 = _swiftEmptyArrayStorage;
      uint64_t result = sub_1000CF940(0, v10 & ~(v10 >> 63), 0);
      if (v10 < 0) {
        break;
      }
      v27[1] = v3;
      char v28 = v9;
      unint64_t v29 = v7;
      unint64_t v30 = v6;
      uint64_t v3 = 0;
      unint64_t v7 = a1 & 0xC000000000000001;
      a2 = v32;
      while (v10 != v3)
      {
        if (v7) {
          id v12 = (id)sub_1001ECD50();
        }
        else {
          id v12 = *(id *)(a1 + 8 * v3 + 32);
        }
        id v13 = v12;
        uint64_t v14 = (uint64_t)[v13 duration];
        id v15 = [v13 minUpdateInterval];
        uint64_t v16 = (uint64_t)[v13 schedulerConfigMinInterval];
        uint64_t v17 = (uint64_t)[v13 schedulerConfigIdealInterval];
        double v18 = (double)v17;
        if (v17 < 300)
        {
          sub_100127984();
          swift_allocError();
          *(double *)uint64_t v24 = v18;
          goto LABEL_23;
        }
        double v19 = (double)v16;
        if (v16 < 300 || v19 > v18)
        {
          sub_100127984();
          swift_allocError();
          *(double *)uint64_t v24 = v19;
          goto LABEL_21;
        }
        double v20 = (double)v14;
        if (v14 < 1)
        {
          sub_1001279D8();
          swift_allocError();
          *(double *)uint64_t v24 = v20;
LABEL_21:
          char v25 = 1;
LABEL_24:
          *(unsigned char *)(v24 + 8) = v25;
          swift_willThrow();

          swift_release();
          (*(void (**)(char *, unint64_t))(v29 + 8))(v28, v30);
          return swift_bridgeObjectRelease();
        }
        double v21 = (double)(uint64_t)v15;
        if ((uint64_t)v15 <= 0)
        {
          sub_1001279D8();
          swift_allocError();
          *(double *)uint64_t v24 = v21;
LABEL_23:
          char v25 = 2;
          goto LABEL_24;
        }

        unint64_t v32 = a2;
        unint64_t v6 = a2[2];
        unint64_t v22 = a2[3];
        uint64_t v9 = (char *)(v6 + 1);
        if (v6 >= v22 >> 1)
        {
          sub_1000CF940(v22 > 1, v6 + 1, 1);
          a2 = v32;
        }
        ++v3;
        a2[2] = v9;
        uint64_t v23 = (double *)&a2[4 * v6];
        v23[4] = v20;
        uint64_t v23[5] = v21;
        v23[6] = v19;
        v23[7] = v18;
        if (v10 == v3)
        {
          swift_bridgeObjectRelease();
          unint64_t v7 = v29;
          unint64_t v6 = v30;
          uint64_t v9 = v28;
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1001ECEA0();
      swift_bridgeObjectRelease();
      BOOL v31 = a2;
      if (!v10) {
        goto LABEL_27;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_27:
    swift_bridgeObjectRelease();
    a2 = _swiftEmptyArrayStorage;
LABEL_28:
    uint64_t v26 = v31;
    (*(void (**)(void *, char *, unint64_t))(v7 + 32))(v31, v9, v6);
    uint64_t result = _s14UpdateScheduleVMa();
    *(void *)((char *)v26 + *(int *)(result + 20)) = a2;
  }
  return result;
}

void sub_1001277B8(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = [a1 titleSingleAudiobook];
  uint64_t v5 = sub_1001EC370();
  uint64_t v28 = v6;
  uint64_t v29 = v5;

  id v7 = [a1 titleSingleBook];
  uint64_t v8 = sub_1001EC370();
  uint64_t v26 = v9;
  uint64_t v27 = v8;

  id v10 = [a1 titleMultiple];
  uint64_t v25 = sub_1001EC370();
  uint64_t v12 = v11;

  id v13 = [a1 bodySingleAudiobook];
  uint64_t v14 = sub_1001EC370();
  uint64_t v16 = v15;

  id v17 = [a1 bodySingleBook];
  uint64_t v18 = sub_1001EC370();
  uint64_t v20 = v19;

  id v21 = [a1 bodyMultiple];
  uint64_t v22 = sub_1001EC370();
  uint64_t v24 = v23;

  *a2 = v29;
  a2[1] = v28;
  a2[2] = v27;
  a2[3] = v26;
  a2[4] = v25;
  a2[5] = v12;
  a2[6] = v14;
  a2[7] = v16;
  a2[8] = v18;
  a2[9] = v20;
  a2[10] = v22;
  a2[11] = v24;
}

unint64_t sub_100127930()
{
  unint64_t result = qword_100294460;
  if (!qword_100294460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294460);
  }
  return result;
}

unint64_t sub_100127984()
{
  unint64_t result = qword_100294468;
  if (!qword_100294468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294468);
  }
  return result;
}

unint64_t sub_1001279D8()
{
  unint64_t result = qword_100294470;
  if (!qword_100294470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294470);
  }
  return result;
}

unint64_t sub_100127A2C()
{
  unint64_t result = qword_100293B58;
  if (!qword_100293B58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100293B58);
  }
  return result;
}

uint64_t _ReadingHistoryServiceStatus.description.getter(char a1)
{
  BOOL v1 = (a1 & 1) == 0;
  if (a1) {
    v2._countAndFlagsBits = 1702195828;
  }
  else {
    v2._countAndFlagsBits = 0x65736C6166;
  }
  if (v1) {
    uint64_t v3 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v3 = (void *)0xE400000000000000;
  }
  v2._object = v3;
  sub_1001EC490(v2);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 125;
  v5._object = (void *)0xE100000000000000;
  sub_1001EC490(v5);
  return 0x6564616F4C73697BLL;
}

uint64_t sub_100127AFC()
{
  return 0x646564616F4C7369;
}

uint64_t sub_100127B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x646564616F4C7369 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1001ED080();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100127BAC(uint64_t a1)
{
  unint64_t v2 = sub_100127D50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100127BE8(uint64_t a1)
{
  unint64_t v2 = sub_100127D50();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t _ReadingHistoryServiceStatus.encode(to:)(void *a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100294480);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_100127D50();
  sub_1001ED1F0();
  sub_1001ECFF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_100127D50()
{
  unint64_t result = qword_100294488;
  if (!qword_100294488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294488);
  }
  return result;
}

uint64_t _ReadingHistoryServiceStatus.init(from:)(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100294490);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v7 = sub_100094758(a1, a1[3]);
  sub_100127D50();
  sub_1001ED1D0();
  if (!v1)
  {
    unsigned __int8 v7 = sub_1001ECF70();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1000947F0((uint64_t)a1);
  return v7 & 1;
}

uint64_t sub_100127EF4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_10007DC14(&qword_100294490);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_100127D50();
  sub_1001ED1D0();
  if (v2) {
    return sub_1000947F0((uint64_t)a1);
  }
  char v9 = sub_1001ECF70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_1000947F0((uint64_t)a1);
  *a2 = v9 & 1;
  return result;
}

uint64_t sub_100128054(void *a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100294480);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_100127D50();
  sub_1001ED1F0();
  sub_1001ECFF0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100128188()
{
  if (*v0) {
    v1._countAndFlagsBits = 1702195828;
  }
  else {
    v1._countAndFlagsBits = 0x65736C6166;
  }
  if (*v0) {
    uint64_t v2 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v2 = (void *)0xE500000000000000;
  }
  v1._object = v2;
  sub_1001EC490(v1);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 125;
  v4._object = (void *)0xE100000000000000;
  sub_1001EC490(v4);
  return 0x6564616F4C73697BLL;
}

uint64_t ReadingHistoryServiceStatus.value.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___BDSReadingHistoryServiceStatus_value);
}

id ReadingHistoryServiceStatus.__allocating_init(value:)(char a1)
{
  uint64_t v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

id ReadingHistoryServiceStatus.init(value:)(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "init");
}

id ReadingHistoryServiceStatus.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  id v4 = sub_100128C8C(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id ReadingHistoryServiceStatus.init(coder:)(void *a1)
{
  swift_getObjectType();
  id v2 = sub_100128C8C(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id sub_10012838C(void *a1)
{
  sub_1001291F4();
  uint64_t v2 = sub_1001ECAA0();
  if (!v2)
  {

    return 0;
  }
  id v3 = (void *)v2;
  uint64_t v4 = sub_1001EAFE0();
  unint64_t v6 = v5;
  id v7 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  id v8 = sub_100128BCC();
  sub_100081714(v4, v6);
  if (!v8)
  {
LABEL_8:

    return 0;
  }
  sub_100129234();
  sub_1001EC940();
  uint64_t v9 = v17;
  if (!v17)
  {
    [v8 finishDecoding];

    goto LABEL_8;
  }
  uint64_t v10 = v18;
  uint64_t v11 = (objc_class *)type metadata accessor for ReadingHistoryUpdate();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  id v13 = &v12[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(void *)id v13 = v9;
  *((void *)v13 + 1) = v10;
  v16.receiver = v12;
  v16.super_class = v11;
  id v14 = objc_msgSendSuper2(&v16, "init");
  [v8 finishDecoding];

  return v14;
}

void sub_10012856C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
  sub_100129288();
  sub_1001EC930();
  [v2 finishEncoding];
  id v3 = [v2 encodedData];
  if (v3)
  {
    uint64_t v4 = v3;
    NSString v5 = sub_1001EC340();
    [a1 encodeObject:v4 forKey:v5];
  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void sub_10012868C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
  sub_1001291A0();
  swift_bridgeObjectRetain();
  sub_1001EC930();
  swift_bridgeObjectRelease();
  [v2 finishEncoding];
  id v3 = [v2 encodedData];
  if (v3)
  {
    uint64_t v4 = v3;
    NSString v5 = sub_1001EC340();
    [a1 encodeObject:v4 forKey:v5];
  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void ReadingHistoryServiceStatus.init()()
{
}

void sub_100128898(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*v1 + OBJC_IVAR___BDSReadingHistoryServiceStatus_value);
}

id sub_1001288B0@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  char v4 = *a1;
  NSString v5 = objc_allocWithZone(v2);
  v5[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = v4;
  v7.receiver = v5;
  v7.super_class = v2;
  id result = objc_msgSendSuper2(&v7, "init");
  *a2 = result;
  return result;
}

id ReadingHistoryServiceStatus.__allocating_init(isLoaded:)(char a1)
{
  id v3 = objc_allocWithZone(v1);
  return [v3 initWithIsLoaded:a1 & 1];
}

id ReadingHistoryServiceStatus.init(isLoaded:)(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v3 = objc_allocWithZone(ObjectType);
  v3[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = a1;
  v6.receiver = v3;
  v6.super_class = ObjectType;
  id v4 = objc_msgSendSuper2(&v6, "init");
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t ReadingHistoryServiceStatus.description.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR___BDSReadingHistoryServiceStatus_value)) {
    v1._countAndFlagsBits = 1702195828;
  }
  else {
    v1._countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR___BDSReadingHistoryServiceStatus_value)) {
    id v2 = (void *)0xE400000000000000;
  }
  else {
    id v2 = (void *)0xE500000000000000;
  }
  v1._object = v2;
  sub_1001EC490(v1);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 125;
  v4._object = (void *)0xE100000000000000;
  sub_1001EC490(v4);
  return 0x6564616F4C73697BLL;
}

id sub_100128BCC()
{
  Class isa = sub_1001EAFD0().super.isa;
  id v6 = 0;
  id v2 = [v0 initForReadingFromData:isa error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    sub_1001EAE60();

    swift_willThrow();
  }
  return v2;
}

id sub_100128C8C(void *a1)
{
  sub_1001291F4();
  uint64_t v2 = sub_1001ECAA0();
  if (v2)
  {
    id v3 = (void *)v2;
    uint64_t v4 = sub_1001EAFE0();
    unint64_t v6 = v5;
    id v7 = objc_allocWithZone((Class)NSKeyedUnarchiver);
    id v8 = sub_100128BCC();
    sub_100081714(v4, v6);
    if (v8)
    {
      sub_1001292DC();
      sub_1001EC940();
      if (v14 != 2)
      {
        uint64_t v11 = (objc_class *)type metadata accessor for ReadingHistoryServiceStatus();
        uint64_t v12 = objc_allocWithZone(v11);
        v12[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = v14 & 1;
        v13.receiver = v12;
        v13.super_class = v11;
        id v9 = objc_msgSendSuper2(&v13, "init");
        [v8 finishDecoding];

        return v9;
      }
      [v8 finishDecoding];
    }
  }
  else
  {
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for _ReadingHistoryServiceStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for _ReadingHistoryServiceStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100128F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _ReadingHistoryServiceStatus()
{
  return &type metadata for _ReadingHistoryServiceStatus;
}

uint64_t type metadata accessor for ReadingHistoryServiceStatus()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for _ReadingHistoryServiceStatus.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100129060);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for _ReadingHistoryServiceStatus.CodingKeys()
{
  return &type metadata for _ReadingHistoryServiceStatus.CodingKeys;
}

unint64_t sub_10012909C()
{
  unint64_t result = qword_1002944E8;
  if (!qword_1002944E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002944E8);
  }
  return result;
}

unint64_t sub_1001290F4()
{
  unint64_t result = qword_1002944F0;
  if (!qword_1002944F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002944F0);
  }
  return result;
}

unint64_t sub_10012914C()
{
  unint64_t result = qword_1002944F8;
  if (!qword_1002944F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002944F8);
  }
  return result;
}

unint64_t sub_1001291A0()
{
  unint64_t result = qword_100294500;
  if (!qword_100294500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294500);
  }
  return result;
}

unint64_t sub_1001291F4()
{
  unint64_t result = qword_100294508;
  if (!qword_100294508)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100294508);
  }
  return result;
}

unint64_t sub_100129234()
{
  unint64_t result = qword_100294510;
  if (!qword_100294510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294510);
  }
  return result;
}

unint64_t sub_100129288()
{
  unint64_t result = qword_100294518;
  if (!qword_100294518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294518);
  }
  return result;
}

unint64_t sub_1001292DC()
{
  unint64_t result = qword_100294520;
  if (!qword_100294520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294520);
  }
  return result;
}

void sub_100129334(void *a1@<X0>, uint64_t a2@<X8>)
{
  self;
  unsigned int v4 = (void *)swift_dynamicCastObjCClass();
  uint64_t v5 = v4;
  if (v4)
  {
    [v4 interval];
    double v7 = round(v6);
    [v5 minDurationBetweenInstances];
    double v9 = round(v8);
LABEL_4:
    BOOL v10 = v5 == 0;
    id v11 = [a1 identifier];
    uint64_t v12 = sub_1001EC370();
    uint64_t v14 = v13;

    id v15 = [a1 priority];
    unsigned int v16 = [a1 requiresInexpensiveNetworkConnectivity];
    unsigned int v17 = [a1 requiresExternalPower];
    uint64_t v18 = 256;
    if (!v17) {
      uint64_t v18 = 0;
    }
    uint64_t v19 = v18 | v16;
    goto LABEL_7;
  }
  self;
  double v7 = 0.0;
  double v9 = 0.0;
  if (swift_dynamicCastObjCClass()) {
    goto LABEL_4;
  }
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1001EB560();
  sub_10007CFF8(v20, (uint64_t)qword_1002A4198);
  id v21 = a1;
  uint64_t v22 = sub_1001EB540();
  os_log_type_t v23 = sub_1001EC8F0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_getObjectType();
    uint64_t v25 = sub_1001ED220();
    sub_1001A8090(v25, v26, &v27);
    sub_1001ECBC0();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[Scheduler] Unknown BGSystemTaskRequest type: %s", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
  id v15 = 0;
  uint64_t v19 = 0;
  BOOL v10 = 0;
LABEL_7:
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v14;
  *(void *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v19;
  *(double *)(a2 + 32) = v7;
  *(double *)(a2 + 40) = v9;
  *(unsigned char *)(a2 + 48) = v10;
}

uint64_t *sub_10012960C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    double v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    double v6 = a1;
    a1[1] = a2[1];
    uint64_t v49 = _s15PersistentStateO2V1VMa(0);
    uint64_t v7 = *(int *)(v49 + 24);
    double v8 = (char *)v6 + v7;
    double v9 = (char *)a2 + v7;
    uint64_t updated = _s14UpdateScheduleVMa();
    uint64_t v11 = *(void *)(updated - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, updated))
    {
      uint64_t v13 = sub_10007DC14(&qword_100293BE0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      *(void *)&v8[*(int *)(updated + 20)] = *(void *)&v9[*(int *)(updated + 20)];
      id v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      v15(v8, 0, 1, updated);
    }
    unsigned int v16 = (int *)v49;
    uint64_t v17 = *(int *)(v49 + 28);
    uint64_t v18 = (char *)v6 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = _s6UpdateVMa();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_10007DC14(&qword_100293BD8);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v23 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v19, v23);
      *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
      uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v24(v18, 0, 1, v20);
      unsigned int v16 = (int *)v49;
    }
    uint64_t v25 = v16[8];
    unint64_t v26 = (uint64_t *)((char *)v6 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *unint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = v16[9];
    unint64_t v30 = (char *)v6 + v29;
    BOOL v31 = (char *)a2 + v29;
    v30[16] = v31[16];
    *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
    uint64_t v32 = v16[10];
    uint64_t v33 = (uint64_t *)((char *)v6 + v32);
    uint64_t v34 = (uint64_t *)((char *)a2 + v32);
    uint64_t v35 = *(uint64_t *)((char *)a2 + v32 + 8);
    swift_bridgeObjectRetain();
    if (v35)
    {
      *uint64_t v33 = *v34;
      v33[1] = v35;
      uint64_t v36 = v34[3];
      v33[2] = v34[2];
      v33[3] = v36;
      uint64_t v37 = v34[5];
      v33[4] = v34[4];
      v33[5] = v37;
      uint64_t v38 = v34[7];
      v33[6] = v34[6];
      v33[7] = v38;
      uint64_t v39 = v34[9];
      v33[8] = v34[8];
      v33[9] = v39;
      uint64_t v40 = v34[10];
      uint64_t v41 = v34[11];
      v33[10] = v40;
      v33[11] = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v42 = *((_OWORD *)v34 + 3);
      *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
      *((_OWORD *)v33 + 3) = v42;
      long long v43 = *((_OWORD *)v34 + 5);
      *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
      *((_OWORD *)v33 + 5) = v43;
      long long v44 = *((_OWORD *)v34 + 1);
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v44;
    }
    uint64_t v45 = v16[11];
    uint64_t v46 = (char *)v6 + v45;
    os_log_type_t v47 = (char *)a2 + v45;
    *(void *)uint64_t v46 = *(void *)v47;
    v46[8] = v47[8];
  }
  return v6;
}

uint64_t _s15PersistentStateO2V1VMa(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_100294668);
}

uint64_t sub_1001299F4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = (int *)_s15PersistentStateO2V1VMa(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t updated = _s14UpdateScheduleVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 48))(v3, 1, updated))
  {
    uint64_t v5 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = a1 + v2[7];
  uint64_t v7 = _s6UpdateVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + v2[10] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100129BC0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v47 = _s15PersistentStateO2V1VMa(0);
  uint64_t v5 = *(int *)(v47 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v9 = *(void *)(updated - 8);
  BOOL v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10(v7, 1, updated))
  {
    uint64_t v11 = sub_10007DC14(&qword_100293BE0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
    *(void *)&v6[*(int *)(updated + 20)] = *(void *)&v7[*(int *)(updated + 20)];
    uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
    swift_bridgeObjectRetain();
    v13(v6, 0, 1, updated);
  }
  uint64_t v14 = (int *)v47;
  uint64_t v15 = *(int *)(v47 + 28);
  unsigned int v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = _s6UpdateVMa();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = sub_10007DC14(&qword_100293BD8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
    *(void *)&v16[*(int *)(v18 + 20)] = *(void *)&v17[*(int *)(v18 + 20)];
    uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    v22(v16, 0, 1, v18);
    uint64_t v14 = (int *)v47;
  }
  uint64_t v23 = v14[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = v14[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  v28[16] = v29[16];
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  uint64_t v30 = v14[10];
  BOOL v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  uint64_t v33 = *(void *)((char *)a2 + v30 + 8);
  swift_bridgeObjectRetain();
  if (v33)
  {
    *BOOL v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = v32[3];
    v31[2] = v32[2];
    v31[3] = v34;
    uint64_t v35 = v32[5];
    v31[4] = v32[4];
    v31[5] = v35;
    uint64_t v36 = v32[7];
    v31[6] = v32[6];
    v31[7] = v36;
    uint64_t v37 = v32[9];
    v31[8] = v32[8];
    v31[9] = v37;
    uint64_t v38 = v32[10];
    uint64_t v39 = v32[11];
    v31[10] = v38;
    v31[11] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v40 = *((_OWORD *)v32 + 3);
    *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    *((_OWORD *)v31 + 3) = v40;
    long long v41 = *((_OWORD *)v32 + 5);
    *((_OWORD *)v31 + 4) = *((_OWORD *)v32 + 4);
    *((_OWORD *)v31 + 5) = v41;
    long long v42 = *((_OWORD *)v32 + 1);
    *(_OWORD *)BOOL v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v42;
  }
  uint64_t v43 = v14[11];
  long long v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  *(void *)long long v44 = *(void *)v45;
  v44[8] = v45[8];
  return a1;
}

void *sub_100129F38(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)_s15PersistentStateO2V1VMa(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v9 = *(void *)(updated - 8);
  BOOL v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, updated);
  int v12 = v10(v7, 1, updated);
  if (v11)
  {
    if (!v12)
    {
      uint64_t v13 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v7, v13);
      *(void *)&v6[*(int *)(updated + 20)] = *(void *)&v7[*(int *)(updated + 20)];
      uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain();
      v14(v6, 0, 1, updated);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_10012A520((uint64_t)v6, (uint64_t (*)(void))_s14UpdateScheduleVMa);
LABEL_6:
    uint64_t v15 = sub_10007DC14(&qword_100293BE0);
    memcpy(v6, v7, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v43 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v6, v7, v43);
  *(void *)&v6[*(int *)(updated + 20)] = *(void *)&v7[*(int *)(updated + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v16 = v4[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = _s6UpdateVMa();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      uint64_t v24 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v17, v18, v24);
      *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
      uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
      swift_bridgeObjectRetain();
      v25(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_10012A520((uint64_t)v17, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_12:
    uint64_t v26 = sub_10007DC14(&qword_100293BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v44 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v17, v18, v44);
  *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v27 = v4[8];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  void *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v4[9];
  BOOL v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  long long v33 = *(_OWORD *)v32;
  v31[16] = v32[16];
  *(_OWORD *)BOOL v31 = v33;
  uint64_t v34 = v4[10];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v37 = *(void *)((char *)a1 + v34 + 8);
  uint64_t v38 = *(void *)((char *)a2 + v34 + 8);
  if (v37)
  {
    if (v38)
    {
      *uint64_t v35 = *v36;
      v35[1] = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35[2] = v36[2];
      v35[3] = v36[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35[4] = v36[4];
      v35[5] = v36[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35[6] = v36[6];
      v35[7] = v36[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35[8] = v36[8];
      v35[9] = v36[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35[10] = v36[10];
      v35[11] = v36[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100114694((uint64_t)v35);
      long long v39 = *((_OWORD *)v36 + 1);
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v39;
      long long v40 = *((_OWORD *)v36 + 5);
      long long v42 = *((_OWORD *)v36 + 2);
      long long v41 = *((_OWORD *)v36 + 3);
      *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
      *((_OWORD *)v35 + 5) = v40;
      *((_OWORD *)v35 + 2) = v42;
      *((_OWORD *)v35 + 3) = v41;
    }
  }
  else if (v38)
  {
    *uint64_t v35 = *v36;
    v35[1] = v36[1];
    v35[2] = v36[2];
    v35[3] = v36[3];
    v35[4] = v36[4];
    v35[5] = v36[5];
    v35[6] = v36[6];
    v35[7] = v36[7];
    v35[8] = v36[8];
    v35[9] = v36[9];
    v35[10] = v36[10];
    v35[11] = v36[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v45 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v45;
    long long v46 = *((_OWORD *)v36 + 2);
    long long v47 = *((_OWORD *)v36 + 3);
    long long v48 = *((_OWORD *)v36 + 5);
    *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
    *((_OWORD *)v35 + 5) = v48;
    *((_OWORD *)v35 + 2) = v46;
    *((_OWORD *)v35 + 3) = v47;
  }
  uint64_t v49 = v4[11];
  unint64_t v50 = (char *)a1 + v49;
  unsigned int v51 = (char *)a2 + v49;
  uint64_t v52 = *(void *)v51;
  v50[8] = v51[8];
  *(void *)unint64_t v50 = v52;
  return a1;
}

uint64_t sub_10012A520(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_10012A580(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (int *)_s15PersistentStateO2V1VMa(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v10 = *(void *)(updated - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, updated))
  {
    uint64_t v11 = sub_10007DC14(&qword_100293BE0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, updated);
  }
  uint64_t v13 = v5[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = _s6UpdateVMa();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_10007DC14(&qword_100293BD8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v14, v15, v19);
    *(void *)&v14[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(_OWORD *)((char *)a1 + v5[8]) = *(_OWORD *)((char *)a2 + v5[8]);
  uint64_t v20 = v5[9];
  uint64_t v21 = (char *)a1 + v20;
  int v22 = (char *)a2 + v20;
  v21[16] = v22[16];
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  uint64_t v23 = v5[10];
  uint64_t v24 = (_OWORD *)((char *)a1 + v23);
  uint64_t v25 = (_OWORD *)((char *)a2 + v23);
  long long v26 = v25[3];
  void v24[2] = v25[2];
  v24[3] = v26;
  long long v27 = v25[5];
  v24[4] = v25[4];
  v24[5] = v27;
  long long v28 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v28;
  uint64_t v29 = v5[11];
  uint64_t v30 = (char *)a1 + v29;
  BOOL v31 = (char *)a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  return a1;
}

void *sub_10012A850(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)_s15PersistentStateO2V1VMa(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v9 = *(void *)(updated - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, updated);
  int v12 = v10(v7, 1, updated);
  if (v11)
  {
    if (!v12)
    {
      uint64_t v13 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v6, v7, v13);
      *(void *)&v6[*(int *)(updated + 20)] = *(void *)&v7[*(int *)(updated + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, updated);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_10012A520((uint64_t)v6, (uint64_t (*)(void))_s14UpdateScheduleVMa);
LABEL_6:
    uint64_t v14 = sub_10007DC14(&qword_100293BE0);
    memcpy(v6, v7, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v49 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40))(v6, v7, v49);
  *(void *)&v6[*(int *)(updated + 20)] = *(void *)&v7[*(int *)(updated + 20)];
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v15 = v4[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = _s6UpdateVMa();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      uint64_t v23 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v16, v17, v23);
      *(void *)&v16[*(int *)(v18 + 20)] = *(void *)&v17[*(int *)(v18 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_10012A520((uint64_t)v16, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_12:
    uint64_t v24 = sub_10007DC14(&qword_100293BD8);
    memcpy(v16, v17, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v50 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 40))(v16, v17, v50);
  *(void *)&v16[*(int *)(v18 + 20)] = *(void *)&v17[*(int *)(v18 + 20)];
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v25 = v4[8];
  long long v26 = (void *)((char *)a1 + v25);
  long long v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *long long v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = v4[9];
  BOOL v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  v31[16] = v32[16];
  *(_OWORD *)BOOL v31 = *(_OWORD *)v32;
  uint64_t v33 = v4[10];
  uint64_t v34 = (uint64_t)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  if (!*(void *)((char *)a1 + v33 + 8))
  {
LABEL_17:
    long long v42 = *((_OWORD *)v35 + 3);
    *(_OWORD *)(v34 + 32) = *((_OWORD *)v35 + 2);
    *(_OWORD *)(v34 + 48) = v42;
    long long v43 = *((_OWORD *)v35 + 5);
    *(_OWORD *)(v34 + 64) = *((_OWORD *)v35 + 4);
    *(_OWORD *)(v34 + 80) = v43;
    long long v44 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v44;
    goto LABEL_18;
  }
  uint64_t v36 = *((void *)v35 + 1);
  if (!v36)
  {
    sub_100114694(v34);
    goto LABEL_17;
  }
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *((void *)v35 + 3);
  *(void *)(v34 + 16) = *((void *)v35 + 2);
  *(void *)(v34 + 24) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *((void *)v35 + 5);
  *(void *)(v34 + 32) = *((void *)v35 + 4);
  *(void *)(v34 + 40) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *((void *)v35 + 7);
  *(void *)(v34 + 48) = *((void *)v35 + 6);
  *(void *)(v34 + 56) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *((void *)v35 + 9);
  *(void *)(v34 + 64) = *((void *)v35 + 8);
  *(void *)(v34 + 72) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = *((void *)v35 + 11);
  *(void *)(v34 + 80) = *((void *)v35 + 10);
  *(void *)(v34 + 88) = v41;
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v45 = v4[11];
  long long v46 = (char *)a1 + v45;
  long long v47 = (char *)a2 + v45;
  *(void *)long long v46 = *(void *)v47;
  v46[8] = v47[8];
  return a1;
}

uint64_t sub_10012ACF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s15PersistentStateO2V1VMa(0);
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, v4, sub_10012AD48);
}

uint64_t sub_10012AD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s15PersistentStateO2V1VMa(0);
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, v6, sub_10012ADB4);
}

uint64_t _s15PersistentStateOMa(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_100294600);
}

uint64_t sub_10012ADD8(uint64_t a1)
{
  uint64_t result = _s15PersistentStateO2V1VMa(319);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *sub_10012AE7C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t updated = _s14UpdateScheduleVMa();
    uint64_t v11 = *(void *)(updated - 8);
    int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, updated))
    {
      uint64_t v13 = sub_10007DC14(&qword_100293BE0);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(__dst, v9, v14);
      *(void *)&__dst[*(int *)(updated + 20)] = *(void *)&v9[*(int *)(updated + 20)];
      uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      v15(__dst, 0, 1, updated);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)v7 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = _s6UpdateVMa();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_10007DC14(&qword_100293BD8);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
      *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
      uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
      swift_bridgeObjectRetain();
      v23(v17, 0, 1, v19);
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    long long v26 = (uint64_t *)((char *)v7 + v24);
    long long v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *long long v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)v7 + v25;
    uint64_t v30 = (char *)a2 + v25;
    v29[16] = v30[16];
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    uint64_t v31 = a3[10];
    uint64_t v32 = (uint64_t *)((char *)v7 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = *(uint64_t *)((char *)a2 + v31 + 8);
    swift_bridgeObjectRetain();
    if (v34)
    {
      *uint64_t v32 = *v33;
      v32[1] = v34;
      uint64_t v35 = v33[3];
      v32[2] = v33[2];
      v32[3] = v35;
      uint64_t v36 = v33[5];
      v32[4] = v33[4];
      v32[5] = v36;
      uint64_t v37 = v33[7];
      v32[6] = v33[6];
      v32[7] = v37;
      uint64_t v38 = v33[9];
      v32[8] = v33[8];
      v32[9] = v38;
      uint64_t v39 = v33[10];
      uint64_t v40 = v33[11];
      v32[10] = v39;
      v32[11] = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v41 = *((_OWORD *)v33 + 3);
      *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
      *((_OWORD *)v32 + 3) = v41;
      long long v42 = *((_OWORD *)v33 + 5);
      *((_OWORD *)v32 + 4) = *((_OWORD *)v33 + 4);
      *((_OWORD *)v32 + 5) = v42;
      long long v43 = *((_OWORD *)v33 + 1);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v43;
    }
    uint64_t v44 = a3[11];
    uint64_t v45 = (char *)v7 + v44;
    long long v46 = (char *)a2 + v44;
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
  }
  return v7;
}

uint64_t sub_10012B23C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t updated = _s14UpdateScheduleVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 48))(v4, 1, updated))
  {
    uint64_t v6 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = _s6UpdateVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + a2[10] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10012B400(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v10 = *(void *)(updated - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, updated))
  {
    uint64_t v12 = sub_10007DC14(&qword_100293BE0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
    *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
    uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    swift_bridgeObjectRetain();
    v14(v7, 0, 1, updated);
  }
  uint64_t v15 = a3;
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = _s6UpdateVMa();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_10007DC14(&qword_100293BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
    *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
    uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
    swift_bridgeObjectRetain();
    v23(v17, 0, 1, v19);
    uint64_t v15 = a3;
  }
  uint64_t v24 = v15[8];
  uint64_t v25 = v15[9];
  long long v26 = (void *)((char *)a1 + v24);
  long long v27 = (void *)((char *)a2 + v24);
  uint64_t v28 = v27[1];
  *long long v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (char *)a1 + v25;
  uint64_t v30 = (char *)a2 + v25;
  v29[16] = v30[16];
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  uint64_t v31 = v15[10];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
  swift_bridgeObjectRetain();
  if (v34)
  {
    *uint64_t v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = v33[3];
    v32[2] = v33[2];
    v32[3] = v35;
    uint64_t v36 = v33[5];
    v32[4] = v33[4];
    v32[5] = v36;
    uint64_t v37 = v33[7];
    v32[6] = v33[6];
    v32[7] = v37;
    uint64_t v38 = v33[9];
    v32[8] = v33[8];
    v32[9] = v38;
    uint64_t v39 = v33[10];
    uint64_t v40 = v33[11];
    v32[10] = v39;
    v32[11] = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v41 = *((_OWORD *)v33 + 3);
    *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
    *((_OWORD *)v32 + 3) = v41;
    long long v42 = *((_OWORD *)v33 + 5);
    *((_OWORD *)v32 + 4) = *((_OWORD *)v33 + 4);
    *((_OWORD *)v32 + 5) = v42;
    long long v43 = *((_OWORD *)v33 + 1);
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    *((_OWORD *)v32 + 1) = v43;
  }
  uint64_t v44 = v15[11];
  uint64_t v45 = (char *)a1 + v44;
  long long v46 = (char *)a2 + v44;
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v46[8];
  return a1;
}

void *sub_10012B76C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v10 = *(void *)(updated - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, updated);
  int v13 = v11(v8, 1, updated);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
      uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
      swift_bridgeObjectRetain();
      v15(v7, 0, 1, updated);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_10012A520((uint64_t)v7, (uint64_t (*)(void))_s14UpdateScheduleVMa);
LABEL_6:
    uint64_t v16 = sub_10007DC14(&qword_100293BE0);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v44 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v7, v8, v44);
  *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = _s6UpdateVMa();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      uint64_t v25 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v18, v19, v25);
      *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
      long long v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v26(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_10012A520((uint64_t)v18, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_12:
    uint64_t v27 = sub_10007DC14(&qword_100293BD8);
    memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v45 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v18, v19, v45);
  *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  long long v34 = *(_OWORD *)v33;
  v32[16] = v33[16];
  *(_OWORD *)uint64_t v32 = v34;
  uint64_t v35 = a3[10];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = *(void *)((char *)a1 + v35 + 8);
  uint64_t v39 = *(void *)((char *)a2 + v35 + 8);
  if (v38)
  {
    if (v39)
    {
      *uint64_t v36 = *v37;
      v36[1] = v37[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v36[2] = v37[2];
      v36[3] = v37[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36[4] = v37[4];
      v36[5] = v37[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36[6] = v37[6];
      v36[7] = v37[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36[8] = v37[8];
      v36[9] = v37[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36[10] = v37[10];
      v36[11] = v37[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100114694((uint64_t)v36);
      long long v40 = *((_OWORD *)v37 + 1);
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v40;
      long long v41 = *((_OWORD *)v37 + 5);
      long long v43 = *((_OWORD *)v37 + 2);
      long long v42 = *((_OWORD *)v37 + 3);
      *((_OWORD *)v36 + 4) = *((_OWORD *)v37 + 4);
      *((_OWORD *)v36 + 5) = v41;
      *((_OWORD *)v36 + 2) = v43;
      *((_OWORD *)v36 + 3) = v42;
    }
  }
  else if (v39)
  {
    *uint64_t v36 = *v37;
    v36[1] = v37[1];
    void v36[2] = v37[2];
    v36[3] = v37[3];
    v36[4] = v37[4];
    v36[5] = v37[5];
    v36[6] = v37[6];
    v36[7] = v37[7];
    v36[8] = v37[8];
    v36[9] = v37[9];
    v36[10] = v37[10];
    v36[11] = v37[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v46 = *((_OWORD *)v37 + 1);
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    *((_OWORD *)v36 + 1) = v46;
    long long v47 = *((_OWORD *)v37 + 2);
    long long v48 = *((_OWORD *)v37 + 3);
    long long v49 = *((_OWORD *)v37 + 5);
    *((_OWORD *)v36 + 4) = *((_OWORD *)v37 + 4);
    *((_OWORD *)v36 + 5) = v49;
    *((_OWORD *)v36 + 2) = v47;
    *((_OWORD *)v36 + 3) = v48;
  }
  uint64_t v50 = a3[11];
  unsigned int v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = *(void *)v52;
  v51[8] = v52[8];
  *(void *)unsigned int v51 = v53;
  return a1;
}

void *sub_10012BD4C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v11 = *(void *)(updated - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, updated))
  {
    uint64_t v12 = sub_10007DC14(&qword_100293BE0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    *(void *)&v8[*(int *)(updated + 20)] = *(void *)&v9[*(int *)(updated + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, updated);
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = _s6UpdateVMa();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10007DC14(&qword_100293BD8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v15, v16, v20);
    *(void *)&v15[*(int *)(v17 + 20)] = *(void *)&v16[*(int *)(v17 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  uint64_t v22 = (char *)a1 + v21;
  int v23 = (char *)a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  long long v26 = (_OWORD *)((char *)a1 + v24);
  uint64_t v27 = (_OWORD *)((char *)a2 + v24);
  long long v28 = v27[3];
  v26[2] = v27[2];
  v26[3] = v28;
  long long v29 = v27[5];
  v26[4] = v27[4];
  v26[5] = v29;
  long long v30 = v27[1];
  *long long v26 = *v27;
  v26[1] = v30;
  uint64_t v31 = (char *)a1 + v25;
  uint64_t v32 = (char *)a2 + v25;
  v31[8] = v32[8];
  *(void *)uint64_t v31 = *(void *)v32;
  return a1;
}

void *sub_10012C00C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v10 = *(void *)(updated - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, updated);
  int v13 = v11(v8, 1, updated);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, updated);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_10012A520((uint64_t)v7, (uint64_t (*)(void))_s14UpdateScheduleVMa);
LABEL_6:
    uint64_t v15 = sub_10007DC14(&qword_100293BE0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v50 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 40))(v7, v8, v50);
  *(void *)&v7[*(int *)(updated + 20)] = *(void *)&v8[*(int *)(updated + 20)];
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = _s6UpdateVMa();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      uint64_t v24 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v17, v18, v24);
      *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_10012A520((uint64_t)v17, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_12:
    uint64_t v25 = sub_10007DC14(&qword_100293BD8);
    memcpy(v17, v18, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v51 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 40))(v17, v18, v51);
  *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  long long v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = a3[10];
  uint64_t v33 = (char *)a1 + v31;
  long long v34 = (char *)a2 + v31;
  v33[16] = v34[16];
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  uint64_t v35 = (char *)a1 + v32;
  uint64_t v36 = (char *)a2 + v32;
  if (!*(void *)((char *)a1 + v32 + 8))
  {
LABEL_17:
    long long v43 = *((_OWORD *)v36 + 3);
    *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    *((_OWORD *)v35 + 3) = v43;
    long long v44 = *((_OWORD *)v36 + 5);
    *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
    *((_OWORD *)v35 + 5) = v44;
    long long v45 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v45;
    goto LABEL_18;
  }
  uint64_t v37 = *((void *)v36 + 1);
  if (!v37)
  {
    sub_100114694((uint64_t)a1 + v32);
    goto LABEL_17;
  }
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *((void *)v36 + 3);
  *((void *)v35 + 2) = *((void *)v36 + 2);
  *((void *)v35 + 3) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *((void *)v36 + 5);
  *((void *)v35 + 4) = *((void *)v36 + 4);
  *((void *)v35 + 5) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *((void *)v36 + 7);
  *((void *)v35 + 6) = *((void *)v36 + 6);
  *((void *)v35 + 7) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = *((void *)v36 + 9);
  *((void *)v35 + 8) = *((void *)v36 + 8);
  *((void *)v35 + 9) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *((void *)v36 + 11);
  *((void *)v35 + 10) = *((void *)v36 + 10);
  *((void *)v35 + 11) = v42;
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v46 = a3[11];
  long long v47 = (char *)a1 + v46;
  long long v48 = (char *)a2 + v46;
  *(void *)long long v47 = *(void *)v48;
  v47[8] = v48[8];
  return a1;
}

uint64_t sub_10012C4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012C4B4);
}

uint64_t sub_10012C4B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10007DC14(&qword_100293BE0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10007DC14(&qword_100293BD8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10012C5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012C600);
}

void *sub_10012C604(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_10007DC14(&qword_100293BE0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10007DC14(&qword_100293BD8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10012C738()
{
  sub_10012C878(319, (unint64_t *)&unk_100294678, (void (*)(uint64_t))_s14UpdateScheduleVMa);
  if (v0 <= 0x3F)
  {
    sub_10012C878(319, (unint64_t *)&qword_100293E68, (void (*)(uint64_t))_s6UpdateVMa);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10012C878(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001ECB50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10012C8CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_10007DC14(&qword_100293BD8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - v6;
  uint64_t v8 = sub_10007DC14(&qword_100293BE0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = _s14UpdateScheduleVMa();
  uint64_t v12 = *(void *)(updated - 8);
  uint64_t v13 = __chkstk_darwin(updated);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v18 = (int *)_s15PersistentStateO2V1VMa(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = _s15PersistentStateOMa(0);
  __chkstk_darwin(v21 - 8);
  int v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1;
  sub_10012E660(a1, (uint64_t)v23, _s15PersistentStateOMa);
  sub_10012E6C8((uint64_t)v23, (uint64_t)v20, _s15PersistentStateO2V1VMa);
  uint64_t v24 = (double *)((char *)v20 + v18[9]);
  double v25 = 0.0;
  double v26 = 0.0;
  if (((_BYTE)v24[2] & 1) == 0)
  {
    double v25 = *v24;
    double v26 = v24[1];
  }
  sub_1000936F8((uint64_t)v20 + v18[6], (uint64_t)v10, &qword_100293BE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, updated) == 1)
  {
    if (qword_100291190 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10007CFF8(updated, (uint64_t)qword_1002A4318);
    sub_10012E660(v27, (uint64_t)v17, (uint64_t (*)(void))_s14UpdateScheduleVMa);
    sub_1000816A4((uint64_t)v10, &qword_100293BE0);
  }
  else
  {
    sub_10012E6C8((uint64_t)v10, (uint64_t)v17, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  }
  uint64_t v28 = *v20;
  uint64_t v29 = _swiftEmptyArrayStorage;
  if (v20[1]) {
    uint64_t v29 = (void *)v20[1];
  }
  uint64_t v39 = v29;
  uint64_t v30 = (uint64_t)v15;
  sub_10012E660((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  sub_1000936F8((uint64_t)v20 + v18[7], (uint64_t)v7, &qword_100293BD8);
  uint64_t v31 = _s6UpdateVMa();
  uint64_t v32 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v40, 1, 1, v31);
  uint64_t v33 = (uint64_t *)((char *)v20 + v18[8]);
  uint64_t v34 = *v33;
  uint64_t v35 = v33[1];
  sub_10012F808((uint64_t)v20 + v18[10], (uint64_t)v43);
  uint64_t v36 = (char *)v20 + v18[11];
  if (v36[8]) {
    uint64_t v37 = 0;
  }
  else {
    uint64_t v37 = *(void *)v36;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001122E0(v43);
  sub_1001C799C(v28, (uint64_t)v39, v30, (uint64_t)v7, v32, v34, v35, (uint64_t)v43, v41, v25, v26, v37);
  sub_10012A520(v42, _s15PersistentStateOMa);
  sub_10012A520((uint64_t)v17, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  return sub_10012A520((uint64_t)v20, _s15PersistentStateO2V1VMa);
}

unint64_t sub_10012CDA8(char a1)
{
  unint64_t result = 0x4964656B63617274;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x736C616564;
      break;
    case 2:
      unint64_t result = 0x6353657461647075;
      break;
    case 3:
      unint64_t result = 0x616470557473616CLL;
      break;
    case 4:
      unint64_t result = 0x6F724665726F7473;
      break;
    case 5:
      unint64_t result = 0x657268546C616564;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x696D694C64726163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10012CEDC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_100294738);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_10012E510();
  sub_1001ED1F0();
  *(void *)&long long v17 = *v3;
  char v23 = 0;
  sub_10007DC14(&qword_1002946E0);
  sub_10012E730(&qword_100294740, &qword_100294748);
  sub_1001ED020();
  if (!v2)
  {
    *(void *)&long long v17 = v3[1];
    char v23 = 1;
    sub_10007DC14(&qword_100291EB0);
    sub_10012E7C4(&qword_100294750, &qword_100294758);
    sub_1001ECFD0();
    uint64_t v9 = (int *)_s15PersistentStateO2V1VMa(0);
    LOBYTE(v17) = 2;
    _s14UpdateScheduleVMa();
    sub_10012E858(&qword_100294760, (void (*)(uint64_t))_s14UpdateScheduleVMa);
    sub_1001ECFD0();
    LOBYTE(v17) = 3;
    _s6UpdateVMa();
    sub_10012E858(&qword_100293EC0, (void (*)(uint64_t))_s6UpdateVMa);
    sub_1001ECFD0();
    long long v17 = *(_OWORD *)((char *)v3 + v9[8]);
    char v23 = 4;
    sub_10012E8A0();
    sub_1001ECFD0();
    uint64_t v10 = (char *)v3 + v9[9];
    char v11 = v10[16];
    long long v17 = *(_OWORD *)v10;
    LOBYTE(v18) = v11;
    char v23 = 5;
    sub_10012E8F4();
    sub_1001ECFD0();
    uint64_t v12 = (long long *)((char *)v3 + v9[10]);
    long long v13 = v12[1];
    long long v17 = *v12;
    long long v18 = v13;
    long long v14 = v12[3];
    long long v19 = v12[2];
    long long v20 = v14;
    long long v15 = v12[5];
    long long v21 = v12[4];
    long long v22 = v15;
    char v23 = 6;
    sub_10012E948();
    sub_1001ECFD0();
    LOBYTE(v17) = 7;
    sub_1001ECFC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10012D310@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  int v58 = a1;
  uint64_t v47 = a2;
  uint64_t v2 = sub_10007DC14(&qword_100293BD8);
  __chkstk_darwin(v2 - 8);
  *(void *)&long long v49 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007DC14(&qword_100293BE0);
  __chkstk_darwin(v4 - 8);
  *(void *)&long long v48 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10007DC14(&qword_1002946D0);
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s15PersistentStateO2V1VMa(0);
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v11 + 1) = 0;
  uint64_t v12 = (uint64_t)&v11[v9[8]];
  uint64_t updated = _s14UpdateScheduleVMa();
  long long v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56);
  uint64_t v54 = v12;
  v14(v12, 1, 1, updated);
  uint64_t v15 = (uint64_t)&v11[v9[9]];
  uint64_t v16 = _s6UpdateVMa();
  long long v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v53 = v15;
  v17(v15, 1, 1, v16);
  long long v18 = &v11[v9[10]];
  *(void *)long long v18 = 0;
  *((void *)v18 + 1) = 0;
  uint64_t v56 = v18;
  unsigned int v57 = v11;
  long long v19 = &v11[v9[11]];
  *(void *)long long v19 = 0;
  *((void *)v19 + 1) = 0;
  v19[16] = 1;
  long long v20 = &v11[v9[12]];
  *((_OWORD *)v20 + 4) = 0u;
  *((_OWORD *)v20 + 5) = 0u;
  *((_OWORD *)v20 + 2) = 0u;
  *((_OWORD *)v20 + 3) = 0u;
  *(_OWORD *)long long v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  long long v21 = &v11[v9[13]];
  *(void *)long long v21 = 0;
  v21[8] = 1;
  sub_100094758(v58, v58[3]);
  sub_10012E510();
  uint64_t v52 = v7;
  uint64_t v22 = v55;
  sub_1001ED1D0();
  if (v22)
  {
    sub_1000947F0((uint64_t)v58);
    uint64_t v26 = v53;
    uint64_t v25 = v54;
    swift_bridgeObjectRelease();
    sub_1000816A4(v25, &qword_100293BE0);
    sub_1000816A4(v26, &qword_100293BD8);
    swift_bridgeObjectRelease();
    return sub_10011215C(*(void *)v20, *((void *)v20 + 1));
  }
  else
  {
    *(void *)&long long v55 = v16;
    uint64_t v23 = v48;
    *(void *)&long long v46 = v19;
    uint64_t v24 = v49;
    long long v45 = v21;
    sub_10007DC14(&qword_1002946E0);
    char v66 = 0;
    sub_10012E730(&qword_1002946E8, &qword_1002946F0);
    sub_1001ECFA0();
    uint64_t v27 = v57;
    void *v57 = v59;
    sub_10007DC14(&qword_100291EB0);
    char v66 = 1;
    sub_10012E7C4(&qword_1002946F8, &qword_100294700);
    sub_1001ECF50();
    v27[1] = v59;
    LOBYTE(v59) = 2;
    sub_10012E858(&qword_100294708, (void (*)(uint64_t))_s14UpdateScheduleVMa);
    sub_1001ECF50();
    sub_1000AF3B4(v23, v54, &qword_100293BE0);
    LOBYTE(v59) = 3;
    sub_10012E858(&qword_100294710, (void (*)(uint64_t))_s6UpdateVMa);
    sub_1001ECF50();
    sub_1000AF3B4(v24, v53, &qword_100293BD8);
    char v66 = 4;
    sub_10012E564();
    sub_1001ECF50();
    long long v28 = v59;
    uint64_t v29 = v56;
    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v29 = v28;
    char v66 = 5;
    sub_10012E5B8();
    sub_1001ECF50();
    char v30 = v60;
    uint64_t v31 = v46;
    *(_OWORD *)long long v46 = v59;
    *(unsigned char *)(v31 + 16) = v30;
    char v66 = 6;
    sub_10012E60C();
    sub_1001ECF50();
    long long v55 = v59;
    long long v49 = v60;
    long long v48 = v61;
    long long v46 = v62;
    long long v44 = v63;
    uint64_t v32 = v64;
    uint64_t v33 = v65;
    sub_10011215C(*(void *)v20, *((void *)v20 + 1));
    long long v34 = v49;
    *(_OWORD *)long long v20 = v55;
    *((_OWORD *)v20 + 1) = v34;
    long long v35 = v46;
    *((_OWORD *)v20 + 2) = v48;
    *((_OWORD *)v20 + 3) = v35;
    *((_OWORD *)v20 + 4) = v44;
    *((void *)v20 + 10) = v32;
    *((void *)v20 + 11) = v33;
    LOBYTE(v59) = 7;
    uint64_t v36 = sub_1001ECF40();
    uint64_t v37 = v58;
    uint64_t v38 = v36;
    char v40 = v39;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v51);
    uint64_t v41 = v45;
    void *v45 = v38;
    *((unsigned char *)v41 + 8) = v40 & 1;
    uint64_t v42 = v57;
    sub_10012E660((uint64_t)v57, v47, _s15PersistentStateO2V1VMa);
    sub_1000947F0((uint64_t)v37);
    return sub_10012A520((uint64_t)v42, _s15PersistentStateO2V1VMa);
  }
}

unint64_t sub_10012DC4C()
{
  return sub_10012CDA8(*v0);
}

uint64_t sub_10012DC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10012FCE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_10012DC7C(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_10012DC88(uint64_t a1)
{
  unint64_t v2 = sub_10012E510();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10012DCC4(uint64_t a1)
{
  unint64_t v2 = sub_10012E510();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10012DD00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012D310(a1, a2);
}

uint64_t sub_10012DD18(void *a1)
{
  return sub_10012CEDC(a1);
}

Swift::Int sub_10012DD34()
{
  return sub_1001ED1A0();
}

uint64_t sub_10012DD88()
{
  return sub_1001EC440();
}

Swift::Int sub_10012DDA0()
{
  return sub_1001ED1A0();
}

uint64_t sub_10012DDF0@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1002623D0;
  v7._object = v3;
  Swift::Int v5 = sub_1001ECF20(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_10012DE44(void *a1@<X8>)
{
  *a1 = 0x6E6F6973726576;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_10012DE60()
{
  return 0x6E6F6973726576;
}

uint64_t sub_10012DE78@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_100262408;
  v8._object = a2;
  Swift::Int v6 = sub_1001ECF20(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_10012DED0(uint64_t a1)
{
  unint64_t v2 = sub_10012E4BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10012DF0C(uint64_t a1)
{
  unint64_t v2 = sub_10012E4BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10012DF48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = _s15PersistentStateOMa(0);
  __chkstk_darwin(v4 - 8);
  Swift::Int v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_1002946C0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_10012E4BC();
  sub_1001ED1D0();
  if (!v2)
  {
    uint64_t v22 = v6;
    uint64_t v23 = v8;
    uint64_t v11 = (uint64_t)v26;
    uint64_t v12 = sub_1001ECF60();
    uint64_t v15 = v12;
    uint64_t v16 = v13;
    BOOL v17 = v12 == 3157553 && v13 == (void *)0xE300000000000000;
    if (v17 || (sub_1001ED080() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = v23;
      sub_1000AF9BC((uint64_t)a1, (uint64_t)&v24);
      uint64_t v19 = (uint64_t)v22;
      sub_10012D310(&v24, (uint64_t)v22);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v7);
      sub_10012E6C8(v19, v11, _s15PersistentStateOMa);
    }
    else
    {
      uint64_t v26 = sub_100094758(a1, a1[3]);
      unint64_t v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_1001ECD20(41);
      swift_bridgeObjectRelease();
      unint64_t v24 = 0xD000000000000027;
      unint64_t v25 = 0x8000000100225780;
      v27._countAndFlagsBits = v15;
      v27._object = v16;
      sub_1001EC490(v27);
      swift_bridgeObjectRelease();
      sub_1001ECD80();
      swift_allocError();
      sub_100158140(v20);
      swift_bridgeObjectRelease();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
    }
  }
  return sub_1000947F0((uint64_t)a1);
}

uint64_t sub_10012E250(void *a1)
{
  uint64_t v2 = _s15PersistentStateO2V1VMa(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s15PersistentStateOMa(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100294730);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_10012E4BC();
  sub_1001ED1F0();
  sub_10012E660(v14[1], (uint64_t)v7, _s15PersistentStateOMa);
  sub_10012E6C8((uint64_t)v7, (uint64_t)v4, _s15PersistentStateO2V1VMa);
  uint64_t v12 = v14[3];
  sub_1001ECFE0();
  if (!v12) {
    sub_10012CEDC(a1);
  }
  sub_10012A520((uint64_t)v4, _s15PersistentStateO2V1VMa);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10012E48C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_10012DF48(a1, a2);
}

uint64_t sub_10012E4A4(void *a1)
{
  return sub_10012E250(a1);
}

unint64_t sub_10012E4BC()
{
  unint64_t result = qword_1002946C8;
  if (!qword_1002946C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002946C8);
  }
  return result;
}

unint64_t sub_10012E510()
{
  unint64_t result = qword_1002946D8;
  if (!qword_1002946D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002946D8);
  }
  return result;
}

unint64_t sub_10012E564()
{
  unint64_t result = qword_100294718;
  if (!qword_100294718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294718);
  }
  return result;
}

unint64_t sub_10012E5B8()
{
  unint64_t result = qword_100294720;
  if (!qword_100294720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294720);
  }
  return result;
}

unint64_t sub_10012E60C()
{
  unint64_t result = qword_100294728;
  if (!qword_100294728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294728);
  }
  return result;
}

uint64_t sub_10012E660(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10012E6C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10012E730(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10008155C(&qword_1002946E0);
    sub_10012E858(a2, (void (*)(uint64_t))_s11TrackedItemVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012E7C4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10008155C(&qword_100291EB0);
    sub_10012E858(a2, (void (*)(uint64_t))_s4DealVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012E858(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10012E8A0()
{
  unint64_t result = qword_100294768;
  if (!qword_100294768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294768);
  }
  return result;
}

unint64_t sub_10012E8F4()
{
  unint64_t result = qword_100294770;
  if (!qword_100294770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294770);
  }
  return result;
}

unint64_t sub_10012E948()
{
  unint64_t result = qword_100294778;
  if (!qword_100294778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294778);
  }
  return result;
}

BOOL sub_10012E99C(uint64_t *a1, uint64_t *a2)
{
  uint64_t updated = _s6UpdateVMa();
  uint64_t v125 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  uint64_t v122 = (uint64_t)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10007DC14(&qword_100294780);
  __chkstk_darwin(v124);
  uint64_t v6 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100293BD8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v123 = (uint64_t)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v128 = (uint64_t)&v117 - v11;
  __chkstk_darwin(v10);
  uint64_t v126 = (uint64_t)&v117 - v12;
  uint64_t v13 = _s14UpdateScheduleVMa();
  unint64_t v129 = *(int **)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007DC14(&qword_100294788);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10007DC14(&qword_100293BE0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  unint64_t v25 = (char *)&v117 - v24;
  __chkstk_darwin(v23);
  Swift::String v27 = (char *)&v117 - v26;
  if ((sub_1001B6164(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v119 = v6;
  uint64_t v121 = a1;
  uint64_t v28 = a1[1];
  uint64_t v29 = a2[1];
  if (v28)
  {
    if (!v29) {
      return 0;
    }
    uint64_t v120 = a2;
    swift_bridgeObjectRetain();
    uint64_t v30 = swift_bridgeObjectRetain();
    char v31 = sub_1001B6354(v30, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v120 = a2;
    if (v29) {
      return 0;
    }
  }
  uint64_t v32 = (int *)_s15PersistentStateO2V1VMa(0);
  sub_1000936F8((uint64_t)v121 + v32[6], (uint64_t)v27, &qword_100293BE0);
  sub_1000936F8((uint64_t)v120 + v32[6], (uint64_t)v25, &qword_100293BE0);
  uint64_t v33 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1000936F8((uint64_t)v27, (uint64_t)v18, &qword_100293BE0);
  sub_1000936F8((uint64_t)v25, v33, &qword_100293BE0);
  long long v34 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v129 + 6);
  if (v34((uint64_t)v18, 1, v13) == 1)
  {
    sub_1000816A4((uint64_t)v25, &qword_100293BE0);
    sub_1000816A4((uint64_t)v27, &qword_100293BE0);
    if (v34(v33, 1, v13) == 1)
    {
      sub_1000816A4((uint64_t)v18, &qword_100293BE0);
      goto LABEL_15;
    }
LABEL_12:
    long long v35 = &qword_100294788;
    uint64_t v36 = (uint64_t)v18;
LABEL_31:
    sub_1000816A4(v36, v35);
    return 0;
  }
  sub_1000936F8((uint64_t)v18, (uint64_t)v22, &qword_100293BE0);
  if (v34(v33, 1, v13) == 1)
  {
    sub_1000816A4((uint64_t)v25, &qword_100293BE0);
    sub_1000816A4((uint64_t)v27, &qword_100293BE0);
    sub_10012A520((uint64_t)v22, (uint64_t (*)(void))_s14UpdateScheduleVMa);
    goto LABEL_12;
  }
  sub_10012E6C8(v33, (uint64_t)v15, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  if ((sub_1001EB090() & 1) == 0)
  {
    sub_10012A520((uint64_t)v15, (uint64_t (*)(void))_s14UpdateScheduleVMa);
    sub_1000816A4((uint64_t)v25, &qword_100293BE0);
    sub_1000816A4((uint64_t)v27, &qword_100293BE0);
    sub_10012A520((uint64_t)v22, (uint64_t (*)(void))_s14UpdateScheduleVMa);
    uint64_t v36 = (uint64_t)v18;
    long long v35 = &qword_100293BE0;
    goto LABEL_31;
  }
  sub_1001B6600(*(void *)&v22[*(int *)(v13 + 20)], *(void *)&v15[*(int *)(v13 + 20)]);
  char v38 = v37;
  sub_10012A520((uint64_t)v15, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  sub_1000816A4((uint64_t)v25, &qword_100293BE0);
  sub_1000816A4((uint64_t)v27, &qword_100293BE0);
  sub_10012A520((uint64_t)v22, (uint64_t (*)(void))_s14UpdateScheduleVMa);
  sub_1000816A4((uint64_t)v18, &qword_100293BE0);
  if ((v38 & 1) == 0) {
    return 0;
  }
LABEL_15:
  uint64_t v39 = v126;
  sub_1000936F8((uint64_t)v121 + v32[7], v126, &qword_100293BD8);
  char v40 = v120;
  uint64_t v41 = v128;
  sub_1000936F8((uint64_t)v120 + v32[7], v128, &qword_100293BD8);
  uint64_t v42 = (uint64_t)v119;
  uint64_t v43 = (uint64_t)&v119[*(int *)(v124 + 48)];
  sub_1000936F8(v39, (uint64_t)v119, &qword_100293BD8);
  sub_1000936F8(v41, v43, &qword_100293BD8);
  long long v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  uint64_t v45 = updated;
  if (v44(v42, 1, updated) == 1)
  {
    sub_1000816A4(v41, &qword_100293BD8);
    sub_1000816A4(v39, &qword_100293BD8);
    if (v44(v43, 1, v45) == 1)
    {
      sub_1000816A4((uint64_t)v119, &qword_100293BD8);
      goto LABEL_24;
    }
    goto LABEL_20;
  }
  uint64_t v46 = v42;
  uint64_t v47 = v123;
  sub_1000936F8(v46, v123, &qword_100293BD8);
  if (v44(v43, 1, v45) == 1)
  {
    sub_1000816A4(v128, &qword_100293BD8);
    sub_1000816A4(v39, &qword_100293BD8);
    sub_10012A520(v47, (uint64_t (*)(void))_s6UpdateVMa);
LABEL_20:
    long long v35 = &qword_100294780;
    uint64_t v36 = (uint64_t)v119;
    goto LABEL_31;
  }
  uint64_t v48 = v122;
  sub_10012E6C8(v43, v122, (uint64_t (*)(void))_s6UpdateVMa);
  char v49 = sub_1001EB090();
  uint64_t v50 = v128;
  if ((v49 & 1) == 0)
  {
    sub_10012A520(v48, (uint64_t (*)(void))_s6UpdateVMa);
    sub_1000816A4(v50, &qword_100293BD8);
    sub_1000816A4(v39, &qword_100293BD8);
    sub_10012A520(v47, (uint64_t (*)(void))_s6UpdateVMa);
    uint64_t v36 = (uint64_t)v119;
    long long v35 = &qword_100293BD8;
    goto LABEL_31;
  }
  char v51 = sub_1001C2C20(*(void *)(v47 + *(int *)(v45 + 20)), *(void *)(v48 + *(int *)(v45 + 20)));
  sub_10012A520(v48, (uint64_t (*)(void))_s6UpdateVMa);
  sub_1000816A4(v50, &qword_100293BD8);
  sub_1000816A4(v39, &qword_100293BD8);
  sub_10012A520(v47, (uint64_t (*)(void))_s6UpdateVMa);
  sub_1000816A4((uint64_t)v119, &qword_100293BD8);
  if ((v51 & 1) == 0) {
    return 0;
  }
LABEL_24:
  uint64_t v52 = v32[8];
  uint64_t v53 = (uint64_t *)((char *)v121 + v52);
  uint64_t v54 = *(uint64_t *)((char *)v121 + v52 + 8);
  long long v55 = (uint64_t *)((char *)v40 + v52);
  uint64_t v56 = v55[1];
  if (v54)
  {
    if (!v56) {
      return 0;
    }
    if (*v53 != *v55 || v54 != v56)
    {
      char v57 = sub_1001ED080();
      BOOL result = 0;
      if ((v57 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v56)
  {
    return 0;
  }
  uint64_t v59 = v32[9];
  long long v60 = (double *)((char *)v121 + v59);
  char v61 = *((unsigned char *)v121 + v59 + 16);
  uint64_t v62 = (uint64_t)v40 + v59;
  int v63 = *(unsigned __int8 *)(v62 + 16);
  if (v61)
  {
    unint64_t v129 = v32;
    uint64_t v120 = v40;
    if (!v63) {
      return 0;
    }
  }
  else
  {
    if (v63) {
      return 0;
    }
    BOOL result = 0;
    if (*v60 != *(double *)v62) {
      return result;
    }
    unint64_t v129 = v32;
    uint64_t v120 = v40;
    if (v60[1] != *(double *)(v62 + 8)) {
      return result;
    }
  }
  uint64_t v64 = v129[10];
  uint64_t v65 = *(uint64_t *)((char *)v121 + v64);
  uint64_t v66 = *(uint64_t *)((char *)v121 + v64 + 8);
  uint64_t v68 = *(uint64_t *)((char *)v121 + v64 + 16);
  uint64_t v67 = *(uint64_t *)((char *)v121 + v64 + 24);
  uint64_t v69 = *(uint64_t *)((char *)v121 + v64 + 32);
  uint64_t v70 = *(uint64_t *)((char *)v121 + v64 + 40);
  uint64_t v71 = *(uint64_t *)((char *)v121 + v64 + 56);
  uint64_t v128 = *(uint64_t *)((char *)v121 + v64 + 48);
  uint64_t v72 = *(uint64_t *)((char *)v121 + v64 + 72);
  uint64_t updated = *(uint64_t *)((char *)v121 + v64 + 64);
  uint64_t v73 = *(uint64_t *)((char *)v121 + v64 + 80);
  uint64_t v74 = *(uint64_t *)((char *)v121 + v64 + 88);
  unint64_t v75 = (uint64_t *)((char *)v120 + v64);
  uint64_t v76 = *v75;
  uint64_t v77 = v75[1];
  uint64_t v79 = v75[2];
  uint64_t v78 = v75[3];
  uint64_t v81 = v75[4];
  uint64_t v80 = v75[5];
  uint64_t v82 = v75[6];
  uint64_t v83 = v75[7];
  uint64_t v84 = v75[8];
  uint64_t v126 = v75[9];
  uint64_t v86 = v75[10];
  uint64_t v85 = v75[11];
  uint64_t v125 = v86;
  uint64_t v124 = v85;
  if (!v66)
  {
    if (!v77)
    {
LABEL_64:
      uint64_t v112 = v129[11];
      char v113 = (uint64_t *)((char *)v121 + v112);
      char v114 = *((unsigned char *)v121 + v112 + 8);
      v115 = (uint64_t *)((char *)v120 + v112);
      char v116 = *((unsigned char *)v120 + v112 + 8);
      if ((v114 & 1) == 0)
      {
        if (*v113 != *v115) {
          char v116 = 1;
        }
        return (v116 & 1) == 0;
      }
      return (v116 & 1) != 0;
    }
LABEL_63:
    v130[0] = v65;
    v130[1] = v66;
    v130[2] = v68;
    v130[3] = v67;
    v130[4] = v69;
    v130[5] = v70;
    v130[6] = v128;
    v130[7] = v71;
    v130[8] = updated;
    v130[9] = v72;
    v130[10] = v73;
    v130[11] = v74;
    v130[12] = v76;
    v130[13] = v77;
    v130[14] = v79;
    v130[15] = v78;
    v130[16] = v81;
    v130[17] = v80;
    v130[18] = v82;
    v130[19] = v83;
    v130[20] = v84;
    uint64_t v123 = v83;
    uint64_t v122 = v82;
    v130[21] = v126;
    v130[22] = v125;
    v130[23] = v124;
    sub_100111F0C(v65, v66);
    sub_100111F0C(v76, v77);
    sub_10012F744(v130);
    return 0;
  }
  if (!v77) {
    goto LABEL_63;
  }
  uint64_t v119 = (char *)v73;
  uint64_t v118 = v74;
  if (v65 == v76 && v66 == v77) {
    goto LABEL_73;
  }
  uint64_t v123 = v83;
  uint64_t v122 = v82;
  uint64_t v117 = v71;
  uint64_t v87 = v84;
  uint64_t v88 = v80;
  uint64_t v89 = v69;
  uint64_t v90 = v72;
  uint64_t v91 = v70;
  uint64_t v92 = v67;
  uint64_t v93 = v78;
  uint64_t v94 = v79;
  char v95 = sub_1001ED080();
  uint64_t v79 = v94;
  uint64_t v78 = v93;
  uint64_t v67 = v92;
  uint64_t v80 = v88;
  uint64_t v70 = v91;
  uint64_t v69 = v89;
  uint64_t v84 = v87;
  uint64_t v71 = v117;
  uint64_t v82 = v122;
  uint64_t v83 = v123;
  uint64_t v72 = v90;
  uint64_t v74 = v118;
  uint64_t v73 = (uint64_t)v119;
  char v96 = v95;
  BOOL result = 0;
  if (v96)
  {
LABEL_73:
    if (v68 == v79 && v67 == v78) {
      goto LABEL_74;
    }
    uint64_t v97 = v80;
    uint64_t v98 = v69;
    uint64_t v99 = v72;
    uint64_t v100 = v70;
    char v101 = sub_1001ED080();
    uint64_t v80 = v97;
    uint64_t v70 = v100;
    uint64_t v69 = v98;
    uint64_t v72 = v99;
    uint64_t v74 = v118;
    uint64_t v73 = (uint64_t)v119;
    char v102 = v101;
    BOOL result = 0;
    if (v102)
    {
LABEL_74:
      if (v69 == v81 && v70 == v80
        || (uint64_t v103 = v72,
            char v104 = sub_1001ED080(),
            uint64_t v72 = v103,
            uint64_t v74 = v118,
            uint64_t v73 = (uint64_t)v119,
            char v105 = v104,
            BOOL result = 0,
            (v105 & 1) != 0))
      {
        if (v128 == v82 && v71 == v83
          || (uint64_t v106 = v72,
              char v107 = sub_1001ED080(),
              uint64_t v72 = v106,
              uint64_t v74 = v118,
              uint64_t v73 = (uint64_t)v119,
              char v108 = v107,
              BOOL result = 0,
              (v108 & 1) != 0))
        {
          if (updated == v84 && v72 == v126
            || (v109 = sub_1001ED080(), v74 = v118, v73 = (uint64_t)v119, v110 = v109, BOOL result = 0, (v110 & 1) != 0))
          {
            if (v73 == v125 && v74 == v124) {
              goto LABEL_64;
            }
            char v111 = sub_1001ED080();
            BOOL result = 0;
            if (v111) {
              goto LABEL_64;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_10012F744(uint64_t *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v4 = a1[12];
  sub_10011215C(*a1, a1[1]);
  sub_10011215C(v4, v2);
  return a1;
}

uint64_t sub_10012F808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s15PersistentStateO2V1V10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15PersistentStateO2V1V10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *BOOL result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012F9CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15PersistentStateO2V1V10CodingKeysOMa()
{
  return &_s15PersistentStateO2V1V10CodingKeysON;
}

unsigned char *_s15PersistentStateO10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *BOOL result = a2;
        return result;
      case 2:
        *(_WORD *)BOOL result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)BOOL result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *BOOL result = 0;
      break;
    case 2:
      *(_WORD *)BOOL result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10012FAA0);
    case 4:
      *(_DWORD *)BOOL result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15PersistentStateO10CodingKeysOMa()
{
  return &_s15PersistentStateO10CodingKeysON;
}

unint64_t sub_10012FADC()
{
  unint64_t result = qword_100294790;
  if (!qword_100294790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294790);
  }
  return result;
}

unint64_t sub_10012FB34()
{
  unint64_t result = qword_100294798;
  if (!qword_100294798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294798);
  }
  return result;
}

unint64_t sub_10012FB8C()
{
  unint64_t result = qword_1002947A0;
  if (!qword_1002947A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002947A0);
  }
  return result;
}

unint64_t sub_10012FBE4()
{
  unint64_t result = qword_1002947A8;
  if (!qword_1002947A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002947A8);
  }
  return result;
}

unint64_t sub_10012FC3C()
{
  unint64_t result = qword_1002947B0;
  if (!qword_1002947B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002947B0);
  }
  return result;
}

unint64_t sub_10012FC94()
{
  unint64_t result = qword_1002947B8;
  if (!qword_1002947B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002947B8);
  }
  return result;
}

uint64_t sub_10012FCE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4964656B63617274 && a2 == 0xEC000000736D6574;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C616564 && a2 == 0xE500000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6353657461647075 && a2 == 0xEE00656C75646568 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616470557473616CLL && a2 == 0xEA00000000006574 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F724665726F7473 && a2 == 0xEC0000004449746ELL || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657268546C616564 && a2 == 0xED0000646C6F6873 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001002257B0 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696D694C64726163 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1001300B4()
{
  return sub_1001EC5B0();
}

uint64_t sub_100130114()
{
  return sub_1001EC5A0();
}

ValueMetadata *_s12StoreFrontIDVMa()
{
  return &_s12StoreFrontIDVN;
}

unint64_t sub_100130178()
{
  unint64_t result = qword_1002947C0;
  if (!qword_1002947C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002947C0);
  }
  return result;
}

unint64_t sub_1001301CC()
{
  unint64_t result = qword_1002947C8;
  if (!qword_1002947C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002947C8);
  }
  return result;
}

uint64_t sub_100130220@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self defaultManager];
  id v6 = [v5 URLsForDirectory:14 inDomains:1];

  uint64_t v7 = sub_1001EAF60();
  uint64_t v8 = sub_1001EC5E0();

  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v4, v8 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v7);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v4, v7);
  }
  __break(1u);
  return result;
}

uint64_t static CRDTModelFileSyncContextStore.persistentContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v2 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EAF60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v21 - v11;
  __chkstk_darwin(v10);
  uint64_t v21 = (uint64_t)&v21 - v13;
  type metadata accessor for _CRDTModelContextStoreUtils();
  sub_100130220((uint64_t)v12);
  sub_1001EAEE0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v12, v5);
  id v15 = [self books];
  id v16 = [v15 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  v14(v9, v5);
  long long v17 = *(_OWORD *)(v22 + 96);
  long long v25 = *(_OWORD *)(v22 + 80);
  long long v26 = v17;
  type metadata accessor for _CRDTModelContextStore();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v12, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v18 = v21;
  uint64_t v19 = sub_1001306FC(v21, (uint64_t)v4, v23, v24);
  sub_1000816A4((uint64_t)v4, &qword_100295230);
  v14(v12, v5);
  v14((char *)v18, v5);
  return v19;
}

uint64_t type metadata accessor for _CRDTModelContextStoreUtils()
{
  return self;
}

uint64_t type metadata accessor for _CRDTModelContextStore()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1001306FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v60 = a2;
  uint64_t v7 = sub_1001EADC0();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  __chkstk_darwin(v7);
  char v61 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100295230);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  int v58 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v55 - v12;
  uint64_t v14 = sub_1001EAF60();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  char v57 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v55 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v55 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v64 = (char *)&v55 - v25;
  uint64_t v56 = v24;
  uint64_t v55 = v15 + 16;
  ((void (*)(char *))v24)((char *)&v55 - v25);
  *(void *)&long long v66 = a3;
  *((void *)&v66 + 1) = a4;
  swift_bridgeObjectRetain();
  v69._countAndFlagsBits = 45;
  v69._object = (void *)0xE100000000000000;
  sub_1001EC490(v69);
  v70._countAndFlagsBits = sub_100131380();
  sub_1001EC490(v70);
  swift_bridgeObjectRelease();
  uint64_t v65 = v23;
  sub_1001EAEE0();
  sub_100131A04(v60, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1000816A4((uint64_t)v13, &qword_100295230);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    sub_100131400(a1);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  sub_1001EC910();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  long long v26 = (void *)qword_100292120;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100215320;
  id v28 = v26;
  uint64_t v29 = sub_1001EAE90();
  uint64_t v31 = v30;
  *(void *)(v27 + 56) = &type metadata for String;
  unint64_t v32 = sub_10007DC58();
  *(void *)(v27 + 64) = v32;
  *(void *)(v27 + 32) = v29;
  *(void *)(v27 + 40) = v31;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v33 = v61;
  sub_1001EADB0();
  sub_1001EADA0();
  id v34 = [self defaultManager];
  sub_1001EAEC0(v35);
  char v37 = v36;
  *(void *)&long long v66 = 0;
  LODWORD(v27) = [v34 createDirectoryAtURL:v36 withIntermediateDirectories:1 attributes:0 error:&v66];

  uint64_t v59 = v14;
  if (v27)
  {
    id v38 = (id)v66;
    sub_1001EAEB0();
    sub_1001EC190();
    uint64_t v39 = v65;
    v56(v57, v65, v14);
    uint64_t v68 = 0;
    long long v66 = 0u;
    long long v67 = 0u;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v58, 1, 1, v14);
    uint64_t v51 = sub_1001EC180();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v63);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v15 + 8);
    v52(v39, v14);
    uint64_t v53 = v64;
    uint64_t v54 = v14;
  }
  else
  {
    id v40 = (id)v66;
    sub_1001EAE60();

    swift_willThrow();
    sub_1001EC8F0();
    uint64_t v41 = (void *)qword_100292120;
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_100215310;
    id v43 = v41;
    long long v44 = v65;
    uint64_t v45 = sub_1001EAE90();
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = v32;
    *(void *)(v42 + 32) = v45;
    *(void *)(v42 + 40) = v46;
    swift_getErrorValue();
    uint64_t v47 = sub_1001ED110();
    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v32;
    *(void *)(v42 + 72) = v47;
    *(void *)(v42 + 80) = v48;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    sub_1001EC190();
    uint64_t v68 = 0;
    long long v66 = 0u;
    long long v67 = 0u;
    uint64_t v51 = sub_1001EC170();
    swift_errorRelease();
    sub_1000816A4((uint64_t)&v66, &qword_1002931D0);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v63);
    uint64_t v52 = *(void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v49 = v59;
    v52(v44, v59);
    uint64_t v53 = v64;
    uint64_t v54 = v49;
  }
  v52(v53, v54);
  return v51;
}

uint64_t static CRDTModelFileSyncContextStore.groupPersistentContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EAF60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - v14;
  id v16 = [self books];
  id v17 = [v16 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  long long v19 = *(_OWORD *)(v3 + 96);
  v22[0] = *(_OWORD *)(v3 + 80);
  v22[1] = v19;
  type metadata accessor for _CRDTModelContextStore();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v20 = sub_1001306FC((uint64_t)v15, (uint64_t)v8, a1, a2);
  sub_1000816A4((uint64_t)v8, &qword_100295230);
  v18(v15, v9);
  return v20;
}

uint64_t static CRDTModelLocalFileContextStore.persistentContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v2 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EAF60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v21 - v11;
  __chkstk_darwin(v10);
  uint64_t v21 = (uint64_t)&v21 - v13;
  type metadata accessor for _CRDTModelContextStoreUtils();
  sub_100130220((uint64_t)v12);
  sub_1001EAEE0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v12, v5);
  id v15 = [self books];
  id v16 = [v15 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  v14(v9, v5);
  long long v17 = *(_OWORD *)(v22 + 96);
  long long v25 = *(_OWORD *)(v22 + 80);
  long long v26 = v17;
  type metadata accessor for _CRDTModelContextStore();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v12, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v18 = v21;
  uint64_t v19 = sub_1001306FC(v21, (uint64_t)v4, v23, v24);
  sub_1000816A4((uint64_t)v4, &qword_100295230);
  v14(v12, v5);
  v14((char *)v18, v5);
  return v19;
}

uint64_t type metadata accessor for CRDTModelFileSyncContextStore()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CRDTModelLocalFileContextStore()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100131348()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100131380()
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(v0 + 104) + 8))();
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 0x2E747865746E6F43;
  v3._object = (void *)0xEA00000000006264;
  sub_1001EC490(v3);
  swift_bridgeObjectRelease();
  return v2;
}

void sub_100131400(uint64_t a1)
{
  uint64_t v2 = sub_1001EAF60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  long long v67 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v61 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v61 - v9;
  sub_1001EAEE0();
  id v11 = [self defaultManager];
  sub_1001EAF30();
  NSString v12 = sub_1001EC340();
  swift_bridgeObjectRelease();
  unsigned int v13 = [v11 fileExistsAtPath:v12];

  if (!v13)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);

    return;
  }
  uint64_t v62 = a1;
  uint64_t v63 = v2;
  uint64_t v65 = v8;
  uint64_t v66 = v3;
  id v64 = v11;
  sub_1001EC910();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_100292120;
  uint64_t v15 = sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v16 = swift_allocObject();
  long long v61 = xmmword_100215320;
  *(_OWORD *)(v16 + 16) = xmmword_100215320;
  id v17 = v14;
  uint64_t v18 = sub_1001EAE90();
  uint64_t v20 = v19;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v21 = sub_10007DC58();
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v22 = v65;
  uint64_t v23 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v62, v63);
  uint64_t v24 = v67;
  sub_1001EAEE0();
  sub_1001EAF30();
  NSString v25 = sub_1001EC340();
  swift_bridgeObjectRelease();
  id v26 = v64;
  LODWORD(v20) = [v64 fileExistsAtPath:v25];

  if (!v20)
  {
    uint64_t v62 = v15;
    sub_1001EAEC0(v27);
    long long v35 = v34;
    id v68 = 0;
    unsigned int v36 = [v26 createDirectoryAtURL:v34 withIntermediateDirectories:1 attributes:0 error:&v68];

    id v37 = v68;
    if (v36)
    {
      id v38 = v68;
      sub_1001EAEC0(v39);
      uint64_t v41 = v40;
      sub_1001EAEC0(v42);
      long long v44 = v43;
      id v68 = 0;
      unsigned int v45 = [v26 moveItemAtURL:v41 toURL:v43 error:&v68];

      id v37 = v68;
      uint64_t v33 = v66;
      if (v45)
      {
        id v46 = v68;
        sub_1001EC910();
        uint64_t v47 = (void *)qword_100292120;
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = v61;
        id v49 = v47;
        uint64_t v50 = sub_1001EAE90();
        *(void *)(v48 + 56) = &type metadata for String;
        *(void *)(v48 + 64) = v21;
        *(void *)(v48 + 32) = v50;
        *(void *)(v48 + 40) = v51;
        sub_1001EB530();

        uint64_t v22 = v65;
        swift_bridgeObjectRelease();

        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v33 = v66;
    }
    id v52 = v37;
    sub_1001EAE60();

    swift_willThrow();
    LODWORD(v66) = sub_1001EC8F0();
    uint64_t v53 = (void *)qword_100292120;
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_100215310;
    id v55 = v53;
    uint64_t v56 = sub_1001EAE90();
    *(void *)(v54 + 56) = &type metadata for String;
    *(void *)(v54 + 64) = v21;
    *(void *)(v54 + 32) = v56;
    *(void *)(v54 + 40) = v57;
    swift_getErrorValue();
    uint64_t v58 = sub_1001ED110();
    *(void *)(v54 + 96) = &type metadata for String;
    *(void *)(v54 + 104) = v21;
    *(void *)(v54 + 72) = v58;
    *(void *)(v54 + 80) = v59;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    goto LABEL_12;
  }
  sub_1001EC8F0();
  id v28 = (void *)qword_100292120;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v61;
  id v30 = v28;
  uint64_t v31 = sub_1001EAE90();
  *(void *)(v29 + 56) = &type metadata for String;
  *(void *)(v29 + 64) = v21;
  *(void *)(v29 + 32) = v31;
  *(void *)(v29 + 40) = v32;
  sub_1001EB530();

  uint64_t v22 = v65;
  swift_bridgeObjectRelease();
  uint64_t v33 = v66;
LABEL_12:
  uint64_t v60 = *(void (**)(char *, uint64_t))(v33 + 8);
  v60(v24, v23);
  v60(v22, v23);
  v60(v10, v23);
}

uint64_t sub_100131A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100295230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void CRDTModelLocalFileManager.DefaultConfig.crdtContext.setter(void *a1)
{
  *unint64_t v1 = a1;
}

uint64_t CRDTModelLocalFileManager.DefaultConfig.storeDirectory.getter()
{
  uint64_t v0 = sub_1001EAF60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self books];
  id v5 = [v4 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t CRDTModelLocalFileManager.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t CRDTModelLocalFileManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CRDTModelLocalFileManager.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_100131D14;
}

void sub_100131D14(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_100131D98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

BOOL sub_100131EEC()
{
  uint64_t v0 = type metadata accessor for ModelState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - v2;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  int v4 = v3[*(int *)(v0 + 44)];
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return static CRDTModelLocalFileManager.SyncError.__derived_enum_equals(_:_:)(v4, 1);
}

uint64_t CRDTModelLocalFileManager.observable.getter()
{
  type metadata accessor for ModelState();
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_10013211C@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return swift_retain();
}

uint64_t CRDTModelLocalFileManager.model.getter()
{
  return sub_1001EC9E0();
}

uint64_t sub_1001321A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a2, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100132310@<X0>(uint64_t a1@<X8>)
{
  return sub_1001321A8(v1, a1);
}

uint64_t CRDTModelLocalFileManager.enableCloudSync.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + direct field offset for CRDTModelLocalFileManager.enableCloudSync);
  swift_beginAccess();
  return *v1;
}

uint64_t CRDTModelLocalFileManager.enableCloudSync.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + direct field offset for CRDTModelLocalFileManager.enableCloudSync);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*CRDTModelLocalFileManager.enableCloudSync.modify())()
{
  return j__swift_endAccess;
}

uint64_t CRDTModelLocalFileManager.__allocating_init(clientName:delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v3 + 88);
  uint64_t v7 = *(void *)(v3 + 96);
  type metadata accessor for CRDTModelLocalFileContextStore();
  uint64_t v8 = (void *)static CRDTModelLocalFileContextStore.persistentContext(_:)(a1, a2);
  swift_bridgeObjectRelease();
  v12[1] = v6;
  void v12[2] = v7;
  v12[3] = type metadata accessor for CRDTModelLocalFileManager.DefaultConfig();
  v12[4] = &protocol witness table for CRDTModelLocalFileManager<A>.DefaultConfig;
  v12[0] = v8;
  uint64_t v9 = swift_allocObject();
  id v10 = v8;
  CRDTModelLocalFileManager.init(config:delegate:)(v12, 0, 0);

  swift_unknownObjectRelease();
  return v9;
}

uint64_t type metadata accessor for CRDTModelLocalFileManager.DefaultConfig()
{
  return swift_getGenericMetadata();
}

uint64_t CRDTModelLocalFileManager.__allocating_init(config:delegate:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  CRDTModelLocalFileManager.init(config:delegate:)(a1, a2, a3);
  return v6;
}

void *CRDTModelLocalFileManager.init(config:delegate:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v89 = a3;
  uint64_t v99 = a2;
  char v101 = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))*v3;
  uint64_t v92 = sub_1001EBA60();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v90 = (char *)v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1001EAF60();
  uint64_t v98 = *(void *)(v97 - 8);
  uint64_t v7 = __chkstk_darwin(v97);
  uint64_t v84 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v100 = (char *)v75 - v9;
  uint64_t v10 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v10 - 8);
  uint64_t v83 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = v5;
  uint64_t v12 = *((void *)v5 + 10);
  uint64_t v13 = *((void *)v5 + 12);
  uint64_t v79 = *((void *)v5 + 11);
  uint64_t v82 = v13;
  uint64_t v14 = type metadata accessor for ModelState.Source();
  __chkstk_darwin(v14 - 8);
  uint64_t v81 = (char *)v75 - v15;
  uint64_t v96 = type metadata accessor for ModelState();
  uint64_t v88 = *(void *)(v96 - 8);
  uint64_t v16 = __chkstk_darwin(v96);
  uint64_t v94 = (uint64_t)v75 - v17;
  uint64_t v95 = *(void *)(v12 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v80 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v93 = (char *)v75 - v20;
  uint64_t v21 = sub_1001EC9C0();
  uint64_t v76 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1001EC990();
  __chkstk_darwin(v85);
  uint64_t v87 = sub_1001EBAA0();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  id v26 = (char *)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v4 + 2;
  v4[3] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v27 = qword_1002949F0;
  v75[1] = sub_1000C0728();
  sub_1001EBA90();
  sub_1001EC980();
  id v28 = *(void (**)(char *, void, uint64_t))(v22 + 104);
  v28(v24, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v21);
  *(void *)((char *)v4 + v27) = sub_1001ECA00();
  v75[0] = qword_1002949F8;
  sub_1001EBA80();
  aBlock = _swiftEmptyArrayStorage;
  sub_1001367E8((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000CA6C0((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  v28(v24, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v76);
  uint64_t v85 = (uint64_t)v26;
  *(void *)((char *)v4 + v75[0]) = sub_1001ECA00();
  uint64_t v29 = qword_100294A08;
  id v30 = [objc_allocWithZone((Class)BDSOSTransactionProvider) init];
  type metadata accessor for ObservableTransaction();
  uint64_t v31 = (void *)swift_allocObject();
  *(void *)((char *)v4 + v29) = sub_100080734(0xD000000000000035, 0x8000000100221220, (uint64_t)v30, v31);
  *((unsigned char *)v4 + direct field offset for CRDTModelLocalFileManager.enableCloudSync) = 0;
  aBlock = 0;
  unint64_t v104 = 0xE000000000000000;
  sub_1001ECD20(21);
  swift_bridgeObjectRelease();
  aBlock = (void *)0xD000000000000013;
  unint64_t v104 = 0x8000000100221260;
  uint64_t v32 = *((void *)v78 + 13);
  uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
  v110._countAndFlagsBits = v78(v12, v32);
  sub_1001EC490(v110);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  uint64_t v33 = v93;
  sub_1001EBEE0();
  uint64_t v34 = v101[3];
  uint64_t v35 = v101[4];
  sub_100094758(v101, v34);
  *(void *)((char *)v4 + qword_100294A10) = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
  swift_beginAccess();
  v4[3] = v89;
  swift_unknownObjectWeakAssign();
  uint64_t v36 = v95;
  uint64_t v37 = (uint64_t)v80;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v80, v33, v12);
  uint64_t v38 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v81, 1, 2, v12);
  uint64_t v39 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v40 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v83, 1, 1, v39);
  uint64_t v41 = v94;
  ModelState.init(model:loaded:source:revisionInfo:)(v37, 0, v38, v40, v12, v94);
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  v4[4] = sub_1001783E4(v41);
  uint64_t v42 = v101[3];
  uint64_t v43 = v101[4];
  sub_100094758(v101, v42);
  (*(void (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
  uint64_t v89 = v12;
  v78(v12, v32);
  long long v44 = v84;
  sub_1001EAEE0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *))(v98 + 32))((uint64_t)v4 + qword_100294A18, v44);
  swift_retain();
  unsigned int v45 = sub_1001EB540();
  os_log_type_t v46 = sub_1001EC8E0();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 136315138;
    sub_1001367E8(&qword_100293400, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v48 = sub_1001ED040();
    uint64_t v109 = sub_1001A8090(v48, v49, (uint64_t *)&aBlock);
    sub_1001ECBC0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "CRDTModelLocalFileManager Init: modelFileURL: %s", v47, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  id v50 = [self defaultManager];
  uint64_t v51 = v100;
  sub_1001EAEC0(v52);
  uint64_t v54 = v53;
  aBlock = 0;
  unsigned int v55 = [v50 createDirectoryAtURL:v53 withIntermediateDirectories:1 attributes:0 error:&aBlock];

  if (v55)
  {
    uint64_t v56 = aBlock;
  }
  else
  {
    uint64_t v57 = aBlock;
    sub_1001EAE60();

    swift_willThrow();
    sub_1001EC8F0();
    if (qword_1002910C8 != -1) {
      swift_once();
    }
    uint64_t v58 = (void *)qword_100292120;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_100215310;
    id v60 = v58;
    uint64_t v61 = sub_1001EAE90();
    uint64_t v63 = v62;
    *(void *)(v59 + 56) = &type metadata for String;
    unint64_t v64 = sub_10007DC58();
    *(void *)(v59 + 64) = v64;
    *(void *)(v59 + 32) = v61;
    *(void *)(v59 + 40) = v63;
    swift_getErrorValue();
    uint64_t v65 = sub_1001ED110();
    *(void *)(v59 + 96) = &type metadata for String;
    *(void *)(v59 + 104) = v64;
    uint64_t v51 = v100;
    *(void *)(v59 + 72) = v65;
    *(void *)(v59 + 80) = v66;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  uint64_t v67 = v4[4] + *(void *)(*(void *)v4[4] + 128);
  swift_beginAccess();
  *(void *)(v67 + 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  *(void *)((char *)v4 + qword_100294A20) = _swiftEmptyArrayStorage;
  uint64_t v68 = os_transaction_create();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = v4;
  *(void *)(v69 + 24) = v68;
  char v107 = sub_1001367AC;
  uint64_t v108 = v69;
  aBlock = _NSConcreteStackBlock;
  unint64_t v104 = 1107296256;
  char v105 = sub_1000DB998;
  uint64_t v106 = &unk_100268E90;
  Swift::String v70 = _Block_copy(&aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v71 = v85;
  sub_1001EBA80();
  char v102 = _swiftEmptyArrayStorage;
  sub_1001367E8((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000CA6C0(&qword_100296750, (uint64_t *)&unk_100291BF0);
  uint64_t v72 = v90;
  uint64_t v73 = v92;
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v70);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v72, v73);
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v71, v87);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v51, v97);
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v94, v96);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v89);
  swift_release();
  sub_1000947F0((uint64_t)v101);
  return v4;
}

uint64_t sub_100133588()
{
  uint64_t v0 = sub_1001EB540();
  os_log_type_t v1 = sub_1001EC910();
  if (os_log_type_enabled(v0, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "CRDTModelLocalFileManager Init: About to load data", v2, 2u);
    swift_slowDealloc();
  }

  uint64_t v3 = sub_1001EAF80();
  unint64_t v5 = v4;
  sub_100093680(v3, v4);
  sub_1001336E8(v3, v5, 0);
  sub_100081714(v3, v5);
  return sub_100081714(v3, v5);
}

uint64_t sub_1001336E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1001EBA60();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001EBA50();
  uint64_t v13 = v3;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100133810(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t)v3;
  uint64_t v86 = a1;
  uint64_t v87 = *v3;
  unint64_t v88 = a2;
  uint64_t v6 = *(void *)(v87 + 80);
  uint64_t v7 = sub_1001ECB50();
  uint64_t v85 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v80 - v9;
  uint64_t v92 = v6;
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v80 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (uint8_t *)&v80 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v80 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v80 - v23;
  sub_100131D98((uint64_t)&v80 - v23);
  uint64_t v90 = v4;
  if (a3)
  {
    uint64_t v89 = v24;
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v25 = sub_1001EB540();
    os_log_type_t v26 = sub_1001EC8F0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      swift_getErrorValue();
      uint64_t v28 = sub_1001ED110();
      uint64_t v94 = sub_1001A8090(v28, v29, v95);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "CRDTModelLocalFileManager Init: couldn't load existing data: %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v24 = v89;
  }
  else
  {
    uint64_t v82 = v19;
    uint64_t v84 = (void (*)(char *, uint64_t))v7;
    id v30 = v10;
    uint64_t v80 = v16;
    uint64_t v81 = v13;
    uint64_t v31 = v87;
    uint64_t v83 = v22;
    uint64_t v32 = sub_1001EB540();
    uint64_t v33 = sub_1001EC910();
    if (os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v89 = v24;
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v33, "CRDTModelLocalFileManager Init: About to deserialize existing data", v34, 2u);
      uint64_t v24 = v89;
      swift_slowDealloc();
    }

    unint64_t v35 = v88;
    if (v88 >> 60 == 15)
    {
      uint64_t v38 = sub_1001EB540();
      os_log_type_t v39 = sub_1001EC8F0();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "CRDTModelLocalFileManager Init: couldn't deserialize existing data", v40, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v36 = v86;
      sub_100093680(v86, v88);
      sub_100093680(v36, v35);
      uint64_t v37 = *(void (**)(char *, uint64_t))(*(void *)(*(void *)(v31 + 88) + 8) + 8);
      sub_1001EBE60();
      uint64_t v42 = v91;
      uint64_t v43 = v92;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v30, 0, 1, v92);
      long long v44 = v83;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v83, v30, v43);
      uint64_t v45 = (uint64_t)v82;
      sub_100131D98((uint64_t)v82);
      char v46 = sub_1001EBFE0();
      uint64_t v47 = v45;
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v48(v47, v43);
      unint64_t v49 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
      uint64_t v85 = v42 + 8;
      if (v46)
      {
        uint64_t v89 = v24;
        id v50 = v80;
        v49(v80, v44, v92);
        uint64_t v51 = sub_1001EB540();
        os_log_type_t v52 = sub_1001EC910();
        int v53 = v52;
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v54 = swift_slowAlloc();
          uint64_t v84 = v37;
          uint64_t v55 = v54;
          uint64_t v82 = (uint8_t *)swift_slowAlloc();
          v95[0] = (uint64_t)v82;
          *(_DWORD *)uint64_t v55 = 136315394;
          uint64_t v56 = v92;
          uint64_t v57 = sub_1001ED040();
          uint64_t v94 = sub_1001A8090(v57, v58, v95);
          long long v44 = v83;
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          LODWORD(v87) = v53;
          v48((uint64_t)v50, v56);
          *(_WORD *)(v55 + 12) = 2080;
          uint64_t v59 = v89;
          swift_beginAccess();
          uint64_t v60 = sub_1001ED040();
          uint64_t v93 = sub_1001A8090(v60, v61, v95);
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v87, "CRDTModelLocalFileManager Init: loaded stored model=%s, merging into existing=%s", (uint8_t *)v55, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          v48((uint64_t)v50, v92);
          uint64_t v59 = v89;
        }
        swift_beginAccess();
        uint64_t v76 = v92;
        sub_1001EBE70();
        swift_endAccess();
        sub_100081700(v86, v88);
        v48((uint64_t)v44, v76);
        uint64_t v24 = v59;
      }
      else
      {
        uint64_t v84 = (void (*)(char *, uint64_t))v48;
        uint64_t v62 = v81;
        v49(v81, v44, v92);
        uint64_t v63 = sub_1001EB540();
        os_log_type_t v64 = sub_1001EC910();
        BOOL v65 = os_log_type_enabled(v63, v64);
        uint64_t v66 = v44;
        uint64_t v67 = v86;
        if (v65)
        {
          uint64_t v68 = v62;
          uint64_t v69 = (uint8_t *)swift_slowAlloc();
          uint64_t v70 = swift_slowAlloc();
          uint64_t v89 = v24;
          v95[0] = v70;
          uint64_t v71 = v92;
          *(_DWORD *)uint64_t v69 = 136315138;
          uint64_t v82 = v69 + 4;
          uint64_t v72 = v68;
          uint64_t v73 = sub_1001ED040();
          uint64_t v94 = sub_1001A8090(v73, v74, v95);
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          unint64_t v75 = v84;
          v84(v72, v71);
          _os_log_impl((void *)&_mh_execute_header, v63, v64, "CRDTModelLocalFileManager Init: loaded stored model=%s, no delta", v69, 0xCu);
          swift_arrayDestroy();
          uint64_t v24 = v89;
          swift_slowDealloc();
          swift_slowDealloc();

          sub_100081700(v67, v88);
          v75(v83, v71);
        }
        else
        {
          sub_100081700(v86, v88);
          uint64_t v77 = v62;
          uint64_t v78 = v92;
          uint64_t v79 = v84;
          v84(v77, v92);

          v79(v66, v78);
        }
      }
    }
  }
  sub_1001344E4(v90, (uint64_t)v24);
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v24, v92);
}

uint64_t sub_100134214()
{
  uint64_t v20 = sub_1001EBAA0();
  uint64_t v1 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1001EBA60();
  uint64_t v4 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(v0 + qword_100294A20);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v18 = v8;
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = (long long *)(v18 + 32);
    uint64_t v11 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v12 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      uint64_t v13 = swift_allocObject();
      long long v14 = *v10++;
      *(_OWORD *)(v13 + 16) = v14;
      swift_retain();
      sub_1001EBA50();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_1000F26FC;
      *(void *)(v15 + 24) = v13;
      aBlock[4] = sub_100092AA0;
      aBlock[5] = v15;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_1002690E8;
      uint64_t v16 = _Block_copy(aBlock);
      swift_retain();
      sub_1001EBA80();
      sub_1001EC9F0();
      _Block_release(v16);
      swift_release();
      (*v11)(v3, v20);
      (*v12)(v6, v19);
      swift_release();
      --v9;
    }
    while (v9);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001344E4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(*(void *)a1 + 96);
  v4[1] = *(_OWORD *)(*(void *)a1 + 80);
  v4[2] = v2;
  uint64_t v5 = a2;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_100136DCC, (uint64_t)v4);
  return swift_release();
}

uint64_t sub_100134568(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v27 = (void *)*v3;
  uint64_t v7 = v27[10];
  uint64_t v8 = v27[12];
  uint64_t v25 = v27[11];
  uint64_t v26 = v7;
  uint64_t v24 = v8;
  uint64_t v9 = type metadata accessor for ModelState();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v28 = a1;
  v13((char *)&v23 - v11, a1, v9);
  swift_bridgeObjectRetain_n();
  long long v14 = sub_1001EB540();
  os_log_type_t v15 = sub_1001EC910();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v30 = v23;
    *(_DWORD *)uint64_t v16 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1001A8090(a2, a3, &v30);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v17 = ModelState.description.getter(v9);
    uint64_t v29 = sub_1001A8090(v17, v18, &v30);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "CRDTModelLocalFileManager q_updateState (%s) -- newState=%s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  __chkstk_darwin(v19);
  uint64_t v20 = v25;
  *(&v23 - 6) = v26;
  *(&v23 - 5) = v20;
  uint64_t v21 = v27[13];
  *(&v23 - 4) = v24;
  *(&v23 - 3) = v21;
  *(&v23 - 2) = v28;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_100136B48, (uint64_t)(&v23 - 8));
  return swift_release();
}

uint64_t CRDTModelLocalFileManager.sync(_:)(uint64_t a1)
{
  return CRDTModelLocalFileManager.sync(_:isRemote:)(a1, 0);
}

uint64_t CRDTModelLocalFileManager.sync(_:isRemote:)(uint64_t a1, char a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001EBA50();
  uint64_t v11 = v2;
  uint64_t v12 = a1;
  char v13 = a2;
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100134A28(char *a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v122) = a2;
  uint64_t v5 = (void *)*v2;
  uint64_t v125 = v5;
  uint64_t v110 = sub_1001EBA60();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  char v107 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1001EBAA0();
  uint64_t v106 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  char v105 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v5[10];
  uint64_t v9 = (void *)v5[11];
  uint64_t v10 = v5[12];
  uint64_t v111 = type metadata accessor for ModelState();
  uint64_t v104 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  char v113 = (char *)&v93 - v11;
  uint64_t v128 = (uint64_t (*)(uint64_t))v10;
  uint64_t v103 = type metadata accessor for ModelState.Source();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v112 = (char *)&v93 - v12;
  uint64_t v13 = sub_1001EBF80();
  uint64_t v119 = *(uint64_t **)(v13 - 8);
  uint64_t v120 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v8 - 8);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v117 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  char v114 = (char *)&v93 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v93 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  char v116 = (char *)&v93 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v93 - v26;
  uint64_t v126 = os_transaction_create();
  sub_100131D98((uint64_t)v27);
  uint64_t v124 = v9;
  uint64_t v28 = v9[1];
  LOBYTE(v9) = sub_1001EBFE0();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  unint64_t v123 = (unint64_t)v27;
  unint64_t v129 = v29;
  v29((uint64_t)v27, v8);
  uint64_t v30 = (char *)v3 + qword_1002A41E0;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  if (v9)
  {
    uint64_t v101 = v28;
    uint64_t v97 = v16;
    v115 = v23;
    uint64_t v32 = v116;
    uint64_t v117 = a1;
    uint64_t v100 = v16 + 16;
    uint64_t v99 = v31;
    v31(v116, (uint64_t)a1, v8);
    swift_retain_n();
    uint64_t v33 = sub_1001EB540();
    os_log_type_t v34 = sub_1001EC910();
    int v35 = v34;
    BOOL v36 = os_log_type_enabled(v33, v34);
    uint64_t v127 = v16 + 8;
    uint64_t v98 = v30;
    if (v36)
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v96 = swift_slowAlloc();
      uint64_t aBlock = v96;
      *(_DWORD *)uint64_t v37 = 67109634;
      LODWORD(v136) = v122 & 1;
      sub_1001ECBC0();
      *(_WORD *)(v37 + 8) = 2080;
      os_log_t v94 = v33;
      int v95 = v35;
      uint64_t v38 = sub_1001ED040();
      uint64_t v136 = (void *)sub_1001A8090(v38, v39, &aBlock);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      uint64_t v40 = v129;
      v129((uint64_t)v32, v8);
      *(_WORD *)(v37 + 18) = 2080;
      uint64_t v41 = v123;
      sub_100131D98(v123);
      uint64_t v42 = sub_1001ED040();
      unint64_t v44 = v43;
      v40(v41, v8);
      uint64_t v136 = (void *)sub_1001A8090(v42, v44, &aBlock);
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v45 = v94;
      _os_log_impl((void *)&_mh_execute_header, v94, (os_log_type_t)v95, "CRDTModelLocalFileManager q_sync: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v37, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v40 = v129;
      v129((uint64_t)v32, v8);
      swift_release_n();
      uint64_t v41 = v123;
    }
    sub_100131D98(v41);
    uint64_t v60 = (uint64_t)v115;
    sub_1001EC010();
    v40(v41, v8);
    unint64_t v61 = v118;
    uint64_t v62 = v119;
    uint64_t v63 = v120;
    ((void (*)(char *, void, uint64_t))v119[13])(v118, enum case for CRCodableVersion.version3(_:), v120);
    uint64_t v64 = v121;
    uint64_t v65 = sub_1001EBE50();
    if (v64)
    {
      swift_errorRelease();
      ((void (*)(char *, uint64_t))v62[1])(v61, v63);
      uint64_t v67 = v114;
      v99(v114, v60, v8);
      uint64_t v68 = sub_1001EB540();
      os_log_type_t v69 = sub_1001EC8F0();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 136315138;
        uint64_t v71 = (uint64_t)v128;
        uint64_t v72 = sub_1001ED040();
        uint64_t v136 = (void *)sub_1001A8090(v72, v73, &aBlock);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        v129((uint64_t)v114, v8);
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "CRDTModelLocalFileManager q_sync: couldn't serialize model to sync: %s", v70, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        unint64_t v74 = (uint64_t (*)(char *, uint64_t))v129;
        swift_slowDealloc();
      }
      else
      {

        unint64_t v74 = (uint64_t (*)(char *, uint64_t))v129;
        v129((uint64_t)v67, v8);
        uint64_t v71 = (uint64_t)v128;
      }
      uint64_t v81 = (void *)v125[13];
      uint64_t aBlock = v8;
      uint64_t v131 = (uint64_t)v124;
      unint64_t v132 = (uint64_t (*)(uint64_t))v71;
      uint64_t v133 = v81;
      type metadata accessor for CRDTModelLocalFileManager.SyncError();
      swift_getWitnessTable();
      swift_allocError();
      *uint64_t v82 = 1;
      swift_willThrow();
      swift_unknownObjectRelease();
      return v74(v115, v8);
    }
    else
    {
      unint64_t v123 = v66;
      uint64_t v128 = (uint64_t (*)(uint64_t))v65;
      ((void (*)(char *, uint64_t))v62[1])(v61, v63);
      uint64_t v78 = (uint64_t)v112;
      uint64_t v79 = v97;
      if (v122)
      {
        v99(v112, (uint64_t)v117, v8);
        uint64_t v80 = 0;
      }
      else
      {
        uint64_t v80 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v78, v80, 2, v8);
      uint64_t v83 = (uint64_t)v128;
      unint64_t v84 = v123;
      sub_100093680((uint64_t)v128, v123);
      swift_retain();
      uint64_t v85 = (uint64_t)v113;
      MutableObservableContainer.value.getter();
      swift_release();
      ModelState.updating(model:source:)(v60, v78, v111);
      sub_100134568(v85, 0x636E79735F71, 0xE600000000000000);
      uint64_t v125 = *(void **)((char *)v3 + qword_1002949F8);
      uint64_t v86 = (void *)swift_allocObject();
      v86[2] = v3;
      v86[3] = v83;
      uint64_t v87 = v126;
      v86[4] = v84;
      v86[5] = v87;
      unint64_t v134 = sub_100136B1C;
      unint64_t v135 = v86;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v131 = 1107296256;
      unint64_t v132 = sub_1000DB998;
      uint64_t v133 = &unk_100269048;
      uint64_t v124 = _Block_copy(&aBlock);
      swift_retain();
      sub_100093680(v83, v84);
      swift_unknownObjectRetain();
      unint64_t v88 = v105;
      sub_1001EBA80();
      uint64_t v136 = _swiftEmptyArrayStorage;
      sub_1001367E8((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10007DC14((uint64_t *)&unk_100291BF0);
      sub_1000CA6C0(&qword_100296750, (uint64_t *)&unk_100291BF0);
      uint64_t v89 = v107;
      uint64_t v90 = v110;
      sub_1001ECC30();
      uint64_t v91 = v124;
      sub_1001EC9F0();
      _Block_release(v91);
      swift_unknownObjectRelease();
      unint64_t v92 = v123;
      sub_100081714(v83, v123);
      sub_100081714(v83, v92);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v89, v90);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v88, v108);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v113, v111);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v112, v103);
      v129((uint64_t)v115, v8);
      return swift_release();
    }
  }
  else
  {
    char v46 = v117;
    v31(v117, (uint64_t)a1, v8);
    swift_retain_n();
    uint64_t v47 = sub_1001EB540();
    os_log_type_t v48 = sub_1001EC910();
    int v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v50 = swift_slowAlloc();
      uint64_t v127 = v16 + 8;
      uint64_t v51 = v50;
      uint64_t v121 = swift_slowAlloc();
      uint64_t aBlock = v121;
      *(_DWORD *)uint64_t v51 = 67109634;
      LODWORD(v136) = v122 & 1;
      sub_1001ECBC0();
      *(_WORD *)(v51 + 8) = 2080;
      os_log_t v122 = v47;
      uint64_t v52 = sub_1001ED040();
      uint64_t v136 = (void *)sub_1001A8090(v52, v53, &aBlock);
      uint64_t v119 = &v137;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      uint64_t v54 = (void (*)(unint64_t, uint64_t))v129;
      v129((uint64_t)v46, v8);
      *(_WORD *)(v51 + 18) = 2080;
      LODWORD(v120) = v49;
      unint64_t v55 = v123;
      sub_100131D98(v123);
      uint64_t v56 = sub_1001ED040();
      unint64_t v58 = v57;
      v54(v55, v8);
      uint64_t v136 = (void *)sub_1001A8090(v56, v58, &aBlock);
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v59 = v122;
      _os_log_impl((void *)&_mh_execute_header, v122, (os_log_type_t)v120, "CRDTModelLocalFileManager q_sync -- no delta: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v51, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v129((uint64_t)v46, v8);
      swift_release_n();
    }
    unint64_t v75 = (void *)v125[13];
    uint64_t aBlock = v8;
    uint64_t v131 = (uint64_t)v124;
    unint64_t v132 = v128;
    uint64_t v133 = v75;
    type metadata accessor for CRDTModelLocalFileManager.SyncError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v76 = 0;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
}

uint64_t CRDTModelLocalFileManager.syncAfterLoaded(_:isRemote:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1001EBA60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001EBA50();
  uint64_t v15 = v4;
  uint64_t v16 = a1;
  char v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100135B98(uint64_t a1, char *a2, char a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  BOOL v10 = sub_100131EEC();
  int v11 = a3 & 1;
  if (!v10) {
    return sub_100135C2C((uint64_t)a2, v11, (uint64_t)a4, a5);
  }
  uint64_t v12 = sub_100134A28(a2, v11);
  if (v5) {
    uint64_t v12 = swift_errorRelease();
  }
  return a4(v12);
}

uint64_t sub_100135C2C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  HIDWORD(v27) = a2;
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_1001EB540();
  os_log_type_t v14 = sub_1001EC910();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "CRDTModelLocalFileManager q_enqueuePendingSync", v15, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  unint64_t v18 = ((v16 + v10) & 0xFFFFFFFFFFFFFFF8) + v17;
  *(void *)(v17 + 16) = v8;
  *(_OWORD *)(v17 + 24) = *(_OWORD *)(v7 + 88);
  *(void *)(v17 + 40) = *(void *)(v7 + 104);
  *(void *)(v17 + 48) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v12, v8);
  *(unsigned char *)(v17 + v16 + v10) = BYTE4(v27) & 1;
  uint64_t v19 = v29;
  *(void *)(v18 + 8) = v28;
  *(void *)(v18 + 16) = v19;
  uint64_t v20 = (void **)((char *)v5 + qword_100294A20);
  swift_beginAccess();
  uint64_t v21 = *v20;
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v20 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v21 = sub_1000A6AFC(0, v21[2] + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  unint64_t v24 = v21[2];
  unint64_t v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    uint64_t v21 = sub_1000A6AFC((void *)(v23 > 1), v24 + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  void v21[2] = v24 + 1;
  uint64_t v25 = &v21[2 * v24];
  v25[4] = sub_100136CE4;
  v25[5] = v17;
  return swift_endAccess();
}

uint64_t sub_100135EF8(uint64_t a1, char *a2, char a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = sub_1001EB540();
  os_log_type_t v8 = sub_1001EC910();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "CRDTModelLocalFileManager q_enqueuePendingSync -- about to run", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = sub_100134A28(a2, a3 & 1);
  return a4(v10);
}

uint64_t sub_100135FEC()
{
  sub_1001EAFF0();
  return sub_1001361E0();
}

uint64_t sub_1001361E0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = (*(uint64_t (**)(void))(*(void *)(v1 + 104) + 8))();
    sub_1001A8090(v5, v6, v10);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "CRDTModelLocalFileManager: Model did save %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = v0[3];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t CRDTModelLocalFileManager.deinit()
{
  sub_1000CA710(v0 + 16);
  swift_release();
  uint64_t v1 = v0 + qword_100294A18;
  uint64_t v2 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v3 = v0 + qword_1002A41E0;
  uint64_t v4 = sub_1001EB560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CRDTModelLocalFileManager.__deallocating_deinit()
{
  CRDTModelLocalFileManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_100136518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ModelState.Source();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ModelState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, a3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, 2, 2, a3);
  uint64_t v17 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  return ModelState.init(model:loaded:source:revisionInfo:)((uint64_t)v15, 1, (uint64_t)v12, (uint64_t)v8, a3, a1);
}

uint64_t sub_10013676C()
{
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001367AC()
{
  return sub_100133588();
}

uint64_t sub_1001367D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001367E0()
{
  return swift_release();
}

uint64_t sub_1001367E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100136830()
{
  return sub_100134A28(*(char **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_10013685C()
{
  return sub_100135B98(*(void *)(v0 + 16), *(char **)(v0 + 24), *(unsigned char *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100136880()
{
  return swift_getWitnessTable();
}

uint64_t sub_10013689C()
{
  uint64_t result = sub_1001EAF60();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001EB560();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelLocalFileManager()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1001369C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

unsigned char *sub_1001369C8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100136A94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelLocalFileManager.SyncError()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100136AD4()
{
  swift_release();
  sub_100081714(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100136B1C()
{
  return sub_100135FEC();
}

uint64_t sub_100136B48(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_100136C04()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 24;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100136CE4()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  return sub_100135EF8(*(void *)(v0 + 48), (char *)(v0 + v1), *(unsigned char *)(v0 + v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)), *(uint64_t (**)(uint64_t))(((v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)) & 0xFFFFFFFFFFFFFFF8)+ v0+ 8));
}

uint64_t sub_100136D54()
{
  sub_100133810(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
  return sub_100134214();
}

uint64_t sub_100136D94()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100136DCC(uint64_t a1)
{
  return sub_100136518(a1, *(void *)(v1 + 48), *(void *)(v1 + 16));
}

uint64_t sub_100136DF0()
{
  uint64_t v0 = sub_1001EB560();
  sub_10008176C(v0, qword_100294BA8);
  sub_10007CFF8(v0, (uint64_t)qword_100294BA8);
  return sub_1001EB550();
}

id sub_100136E74()
{
  id result = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
  qword_100294BC0 = (uint64_t)result;
  return result;
}

uint64_t static SecureEngagementDataHelper.mergedTimeSliceData(local:remote:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v36 = a1;
  unint64_t v37 = a2;
  uint64_t v6 = sub_10007DC14(&qword_100294BC8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EB350();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for PBPropertyTimeSlice(0);
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (uint64_t *)((char *)&v33 - v16);
  __chkstk_darwin(v15);
  uint64_t v19 = (uint64_t *)((char *)&v33 - v18);
  uint64_t v40 = 0;
  long long v38 = 0u;
  long long v39 = 0u;
  sub_100093680(a3, a4);
  sub_1001EB340();
  sub_10013B9AC(&qword_100294BD0, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
  sub_1001EB440();
  uint64_t v33 = v14;
  uint64_t v20 = v35;
  if (*(void *)(*v19 + 16))
  {
    os_log_type_t v34 = v19;
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    sub_100093680(v36, v37);
    sub_1001EB340();
    uint64_t v21 = (uint64_t)v17;
    sub_1001EB440();
    uint64_t v26 = v17;
    uint64_t v27 = v34;
    static SecureEngagementDataHelper.mergeIntoTimeSlice(_:from:)(v26, v34, (uint64_t)v8);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v11);
    if (v28 != 1)
    {
      uint64_t v31 = (uint64_t)v8;
      uint64_t v32 = (uint64_t)v33;
      sub_10013B8DC(v31, (uint64_t)v33, type metadata accessor for PBPropertyTimeSlice);
      uint64_t v29 = sub_1001EB450();
      sub_10013CEF8(v32, type metadata accessor for PBPropertyTimeSlice);
      sub_10013CEF8(v21, type metadata accessor for PBPropertyTimeSlice);
      sub_10013CEF8((uint64_t)v34, type metadata accessor for PBPropertyTimeSlice);
      return v29;
    }
    sub_10013CEF8(v21, type metadata accessor for PBPropertyTimeSlice);
    sub_10013CEF8((uint64_t)v27, type metadata accessor for PBPropertyTimeSlice);
    sub_1000816A4((uint64_t)v8, &qword_100294BC8);
  }
  else
  {
    if (qword_1002910F8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1001EB560();
    sub_10007CFF8(v22, (uint64_t)qword_100294BA8);
    unint64_t v23 = sub_1001EB540();
    os_log_type_t v24 = sub_1001EC8E0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Not merging empty secure engagement data", v25, 2u);
      swift_slowDealloc();
    }

    sub_10013CEF8((uint64_t)v19, type metadata accessor for PBPropertyTimeSlice);
  }
  return 0;
}

uint64_t static SecureEngagementDataHelper.mergeIntoTimeSlice(_:from:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  v251 = a1;
  uint64_t v237 = a3;
  uint64_t v4 = sub_10007DC14(&qword_100292E48);
  __chkstk_darwin(v4 - 8);
  uint64_t v242 = (uint64_t)&v230 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = type metadata accessor for PBPropertyConfiguration(0);
  *(void *)&long long v266 = *(void *)(v241 - 8);
  __chkstk_darwin(v241);
  double v240 = (char **)((char *)&v230 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for PBPropertyValue(0);
  uint64_t v269 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v235 = (uint64_t)&v230 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v275 = (uint64_t)&v230 - v11;
  __chkstk_darwin(v10);
  uint64_t v231 = (uint64_t)&v230 - v12;
  uint64_t v253 = type metadata accessor for PBPropertyBundle(0);
  v247 = *(uint64_t **)(v253 - 8);
  uint64_t v13 = __chkstk_darwin(v253);
  uint64_t v255 = (uint64_t)&v230 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v262 = (uint64_t)&v230 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v261 = (uint64_t)&v230 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v257 = (char *)&v230 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v260 = (uint64_t)&v230 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v259 = (uint64_t)&v230 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v252 = (uint64_t)&v230 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v256 = (char **)((char *)&v230 - v28);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v232 = (uint64_t)&v230 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v268 = (uint64_t)&v230 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  long long v230 = (char *)&v230 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v258 = (uint64_t)&v230 - v36;
  __chkstk_darwin(v35);
  uint64_t v267 = (uint64_t)&v230 - v37;
  uint64_t v278 = sub_1001EB300();
  unint64_t v38 = *(void *)(v278 - 8);
  uint64_t v39 = __chkstk_darwin(v278);
  v246 = (char *)&v230 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  v265 = (char *)&v230 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v250 = (uint64_t)&v230 - v44;
  __chkstk_darwin(v43);
  v263 = (char *)&v230 - v45;
  uint64_t v46 = sub_10007DC14(&qword_100292E58);
  uint64_t v47 = __chkstk_darwin(v46 - 8);
  uint64_t v239 = (uint64_t)&v230 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v51 = (uint64_t *)((char *)&v230 - v50);
  uint64_t v52 = __chkstk_darwin(v49);
  v264 = (char **)((char *)&v230 - v53);
  uint64_t v54 = __chkstk_darwin(v52);
  double v244 = (uint64_t *)((char *)&v230 - v55);
  uint64_t v56 = __chkstk_darwin(v54);
  unint64_t v58 = (unint64_t)&v230 - v57;
  uint64_t v59 = __chkstk_darwin(v56);
  uint64_t v61 = (uint64_t)&v230 - v60;
  __chkstk_darwin(v59);
  uint64_t v63 = (char *)&v230 - v62;
  uint64_t v64 = type metadata accessor for PBPropertyTimeSlice(0);
  uint64_t v236 = *(void *)(v64 - 8);
  uint64_t v65 = __chkstk_darwin(v64);
  uint64_t v277 = (uint64_t)&v230 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v65);
  v270 = (char *)&v230 - v68;
  __chkstk_darwin(v67);
  uint64_t v70 = (uint64_t)&v230 - v69;
  if (qword_100291100 != -1) {
    goto LABEL_147;
  }
  while (1)
  {
    double v243 = (void *)qword_100294BC0;
    *(void *)uint64_t v70 = _swiftEmptyArrayStorage;
    _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    uint64_t v71 = v70 + *(int *)(v64 + 24);
    uint64_t v72 = *(void (**)(void))(v38 + 56);
    v271 = (unint64_t *)v70;
    unint64_t v272 = v71;
    uint64_t v73 = v278;
    v273 = v72;
    unint64_t v274 = v38 + 56;
    v72();
    uint64_t v74 = (uint64_t)a2 + *(int *)(v64 + 24);
    uint64_t v245 = v64;
    uint64_t v254 = v74;
    sub_1000936F8(v74, (uint64_t)v63, &qword_100292E58);
    v276 = (void *)v38;
    unint64_t v75 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    unsigned int v76 = v75(v63, 1, v73);
    uint64_t v77 = v245;
    sub_1000816A4((uint64_t)v63, &qword_100292E58);
    uint64_t v78 = (uint64_t)v251 + *(int *)(v77 + 24);
    v248 = a2;
    if (v76 == 1)
    {
      sub_1000936F8(v78, (uint64_t)v51, &qword_100292E58);
      unsigned int v79 = v75((char *)v51, 1, v278);
      sub_1000816A4((uint64_t)v51, &qword_100292E58);
      if (v79 == 1)
      {
        LODWORD(v263) = 0;
        uint64_t v70 = (uint64_t)v248;
        uint64_t v51 = v251;
        a2 = v247;
        uint64_t v61 = (uint64_t)v257;
        goto LABEL_22;
      }
      uint64_t v84 = v239;
      sub_1000936F8(v78, v239, &qword_100292E58);
      unsigned int v85 = v75((char *)v84, 1, v278);
      a2 = v247;
      if (v85 == 1)
      {
        uint64_t v86 = v246;
        sub_1001EB2F0();
        sub_1000816A4(v84, &qword_100292E58);
        LODWORD(v263) = 0;
        uint64_t v70 = (uint64_t)v248;
        uint64_t v51 = v251;
        uint64_t v61 = (uint64_t)v257;
        uint64_t v83 = v276;
      }
      else
      {
        uint64_t v83 = v276;
        uint64_t v86 = v246;
        ((void (*)(char *, uint64_t, uint64_t))v276[4])(v246, v84, v278);
        LODWORD(v263) = 0;
        uint64_t v70 = (uint64_t)v248;
        uint64_t v51 = v251;
        uint64_t v61 = (uint64_t)v257;
      }
    }
    else
    {
      uint64_t v51 = v251;
      sub_1000936F8(v78, v61, &qword_100292E58);
      unsigned int v80 = v75((char *)v61, 1, v278);
      sub_1000816A4(v61, &qword_100292E58);
      uint64_t v81 = (uint64_t)v270;
      sub_10013B944((uint64_t)a2, (uint64_t)v270, type metadata accessor for PBPropertyTimeSlice);
      uint64_t v82 = v277;
      sub_10013B944((uint64_t)v51, v277, type metadata accessor for PBPropertyTimeSlice);
      v249 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v75;
      if (v80 == 1)
      {
        sub_10013CEF8(v82, type metadata accessor for PBPropertyTimeSlice);
        sub_10013CEF8(v81, type metadata accessor for PBPropertyTimeSlice);
        LODWORD(v263) = 0;
        a2 = v247;
        uint64_t v61 = (uint64_t)v257;
        uint64_t v83 = v276;
      }
      else
      {
        sub_1000936F8(v81 + *(int *)(v77 + 24), v58, &qword_100292E58);
        unsigned int v87 = v75((char *)v58, 1, v278);
        uint64_t v61 = (uint64_t)v257;
        uint64_t v83 = v276;
        if (v87 == 1)
        {
          sub_1001EB2F0();
          sub_1000816A4(v58, &qword_100292E58);
        }
        else
        {
          ((void (*)(char *, unint64_t, uint64_t))v276[4])(v263, v58, v278);
        }
        a2 = v247;
        uint64_t v88 = (uint64_t)v244;
        sub_1000936F8(v277 + *(int *)(v77 + 24), (uint64_t)v244, &qword_100292E58);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v249)(v88, 1, v278) == 1)
        {
          uint64_t v89 = v250;
          sub_1001EB2F0();
          sub_1000816A4(v88, &qword_100292E58);
        }
        else
        {
          uint64_t v89 = v250;
          ((void (*)(uint64_t, uint64_t, uint64_t))v83[4])(v250, v88, v278);
        }
        sub_10013B9AC(&qword_100294BD8, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
        uint64_t v90 = v263;
        uint64_t v91 = v278;
        int v92 = sub_1001EC330();
        uint64_t v93 = (void (*)(uint64_t, uint64_t))v83[1];
        v93(v89, v91);
        v93((uint64_t)v90, v91);
        sub_10013CEF8(v277, type metadata accessor for PBPropertyTimeSlice);
        sub_10013CEF8((uint64_t)v270, type metadata accessor for PBPropertyTimeSlice);
        LODWORD(v263) = v92 ^ 1;
        uint64_t v51 = v251;
      }
      uint64_t v94 = (uint64_t)v264;
      sub_1000936F8(v254, (uint64_t)v264, &qword_100292E58);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v249)(v94, 1, v278) == 1)
      {
        uint64_t v86 = v265;
        sub_1001EB2F0();
        sub_1000816A4(v94, &qword_100292E58);
      }
      else
      {
        uint64_t v86 = v265;
        ((void (*)(char *, uint64_t, uint64_t))v83[4])(v265, v94, v278);
      }
      uint64_t v70 = (uint64_t)v248;
    }
    uint64_t v95 = v272;
    sub_1000816A4(v272, &qword_100292E58);
    uint64_t v96 = v86;
    uint64_t v97 = v278;
    ((void (*)(uint64_t, char *, uint64_t))v83[4])(v95, v96, v278);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v273)(v95, 0, 1, v97);
LABEL_22:
    uint64_t v63 = (char *)sub_100139A94(v51);
    uint64_t v99 = v98;
    unint64_t v38 = (unint64_t)sub_100139A94((uint64_t *)v70);
    uint64_t v101 = sub_100139EE8(v100, v99);
    uint64_t v102 = sub_10013AC9C(v101, &qword_100291EC8, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_10013C650);
    swift_bridgeObjectRelease();
    v280 = v102;
    swift_retain();
    sub_10013A654((uint64_t *)&v280);
    uint64_t v254 = 0;
    swift_release();
    unint64_t v58 = (unint64_t)v280;
    unint64_t v274 = v280[2];
    if (!v274) {
      goto LABEL_130;
    }
    unint64_t v104 = 0;
    v273 = (void (*)(void))(v280 + 4);
    v249 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v266 + 56);
    v238 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v266 + 48);
    double v233 = (uint64_t *)&v280;
    *(void *)&long long v103 = 136315138;
    long long v266 = v103;
    uint64_t v239 = (uint64_t)&type metadata for Any + 8;
    v265 = v63;
    unint64_t v272 = v38;
    v264 = v280;
LABEL_28:
    char v105 = (uint64_t *)((char *)v273 + 16 * v104);
    uint64_t v106 = *v105;
    uint64_t v64 = v105[1];
    uint64_t v278 = v104 + 1;
    uint64_t v107 = *((void *)v63 + 2);
    swift_bridgeObjectRetain();
    if (!v107 || (unint64_t v108 = sub_1001A87A0(v106, v64), (v109 & 1) == 0))
    {
      if (!*(void *)(v38 + 16) || (unint64_t v171 = sub_1001A87A0(v106, v64), (v172 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_25:
        unint64_t v104 = v278;
        goto LABEL_26;
      }
      unint64_t v173 = *(void *)(*(void *)(v38 + 56) + 8 * v171);
      swift_bridgeObjectRelease();
      if ((v173 & 0x8000000000000000) != 0) {
        goto LABEL_140;
      }
      if (v173 < *(void *)(*(void *)v70 + 16))
      {
        unint64_t v174 = (*((unsigned __int8 *)a2 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)a2 + 80);
        uint64_t v175 = a2[9];
        uint64_t v176 = *(void *)v70 + v174 + v175 * v173;
        uint64_t v177 = v261;
        sub_10013B944(v176, v261, type metadata accessor for PBPropertyBundle);
        sub_10013B944(v177, v262, type metadata accessor for PBPropertyBundle);
        uint64_t v178 = v271;
        unint64_t v179 = *v271;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v179 = sub_1000A75CC(0, *(void *)(v179 + 16) + 1, 1, v179);
        }
        unint64_t v181 = *(void *)(v179 + 16);
        unint64_t v180 = *(void *)(v179 + 24);
        if (v181 >= v180 >> 1) {
          unint64_t v179 = sub_1000A75CC(v180 > 1, v181 + 1, 1, v179);
        }
        *(void *)(v179 + 16) = v181 + 1;
        sub_10013B8DC(v262, v179 + v174 + v181 * v175, type metadata accessor for PBPropertyBundle);
        *uint64_t v178 = v179;
        if (qword_1002910F8 != -1) {
          swift_once();
        }
        uint64_t v182 = sub_1001EB560();
        sub_10007CFF8(v182, (uint64_t)qword_100294BA8);
        uint64_t v183 = v261;
        uint64_t v184 = v255;
        sub_10013B944(v261, v255, type metadata accessor for PBPropertyBundle);
        uint64_t v64 = sub_1001EB540();
        os_log_type_t v185 = sub_1001EC8E0();
        if (os_log_type_enabled((os_log_t)v64, v185))
        {
          uint64_t v186 = v184;
          uint64_t v187 = swift_slowAlloc();
          v281 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v187 = v266;
          uint64_t v188 = sub_1000D4A08();
          *(void *)(v187 + 4) = sub_1001A8090(v188, v189, (uint64_t *)&v281);
          swift_bridgeObjectRelease();
          uint64_t v190 = v186;
          unint64_t v38 = v272;
          sub_10013CEF8(v190, type metadata accessor for PBPropertyBundle);
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v64, v185, "Taking on cloud property bundle %s", (uint8_t *)v187, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v64 = (uint64_t)type metadata accessor for PBPropertyBundle;
          sub_10013CEF8(v184, type metadata accessor for PBPropertyBundle);
        }
        sub_10013CEF8(v183, type metadata accessor for PBPropertyBundle);
        uint64_t v63 = v265;
        unint64_t v58 = (unint64_t)v264;
        unint64_t v104 = v278;
        uint64_t v61 = (uint64_t)v257;
        if (v278 != v274)
        {
          LODWORD(v263) = 1;
          goto LABEL_27;
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_133;
      }
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    unint64_t v58 = *(void *)(*((void *)v63 + 7) + 8 * v108);
    if (!*(void *)(v38 + 16) || (unint64_t v110 = sub_1001A87A0(v106, v64), (v111 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      if ((v58 & 0x8000000000000000) != 0) {
        goto LABEL_139;
      }
      if (v58 < *(void *)(*v51 + 16))
      {
        unint64_t v191 = (*((unsigned __int8 *)a2 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)a2 + 80);
        uint64_t v192 = a2[9];
        uint64_t v193 = v259;
        sub_10013B944(*v51 + v191 + v192 * v58, v259, type metadata accessor for PBPropertyBundle);
        sub_10013B944(v193, v260, type metadata accessor for PBPropertyBundle);
        unint64_t v194 = *v271;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v194 = sub_1000A75CC(0, *(void *)(v194 + 16) + 1, 1, v194);
        }
        unint64_t v196 = *(void *)(v194 + 16);
        unint64_t v195 = *(void *)(v194 + 24);
        if (v196 >= v195 >> 1) {
          unint64_t v194 = sub_1000A75CC(v195 > 1, v196 + 1, 1, v194);
        }
        *(void *)(v194 + 16) = v196 + 1;
        sub_10013B8DC(v260, v194 + v191 + v196 * v192, type metadata accessor for PBPropertyBundle);
        unint64_t *v271 = v194;
        if (qword_1002910F8 != -1) {
          swift_once();
        }
        uint64_t v197 = sub_1001EB560();
        sub_10007CFF8(v197, (uint64_t)qword_100294BA8);
        uint64_t v198 = v259;
        sub_10013B944(v259, v61, type metadata accessor for PBPropertyBundle);
        uint64_t v64 = sub_1001EB540();
        os_log_type_t v199 = sub_1001EC8E0();
        if (os_log_type_enabled((os_log_t)v64, v199))
        {
          uint64_t v200 = swift_slowAlloc();
          v281 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v200 = v266;
          uint64_t v201 = sub_1000D4A08();
          *(void *)(v200 + 4) = sub_1001A8090(v201, v202, (uint64_t *)&v281);
          swift_bridgeObjectRelease();
          sub_10013CEF8(v61, type metadata accessor for PBPropertyBundle);
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v64, v199, "Keeping local property bundle %s unchanged", (uint8_t *)v200, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v64 = (uint64_t)type metadata accessor for PBPropertyBundle;
          sub_10013CEF8(v61, type metadata accessor for PBPropertyBundle);
        }
        sub_10013CEF8(v198, type metadata accessor for PBPropertyBundle);
        uint64_t v63 = v265;
        unint64_t v38 = v272;
        unint64_t v58 = (unint64_t)v264;
        goto LABEL_25;
      }
      goto LABEL_142;
    }
    unint64_t v112 = *(void *)(*(void *)(v38 + 56) + 8 * v110);
    swift_bridgeObjectRelease();
    if ((v58 & 0x8000000000000000) != 0) {
      goto LABEL_143;
    }
    uint64_t v113 = *v51;
    if (v58 >= *(void *)(*v51 + 16)) {
      goto LABEL_144;
    }
    uint64_t v51 = (uint64_t *)((*((unsigned __int8 *)a2 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)a2 + 80));
    char v114 = (char *)a2[9];
    uint64_t v64 = v267;
    sub_10013B944((uint64_t)v51 + v113 + (void)v114 * v58, v267, type metadata accessor for PBPropertyBundle);
    if ((v112 & 0x8000000000000000) != 0) {
      goto LABEL_145;
    }
    uint64_t v115 = *(void *)v70;
    if (v112 < *(void *)(*(void *)v70 + 16)) {
      break;
    }
LABEL_146:
    __break(1u);
LABEL_147:
    swift_once();
  }
  v246 = v114;
  uint64_t v116 = (uint64_t)v51 + v115 + (void)v114 * v112;
  uint64_t v117 = v258;
  sub_10013B944(v116, v258, type metadata accessor for PBPropertyBundle);
  uint64_t v118 = v243;
  unint64_t v58 = (unint64_t)sub_10013A068(v64, v243);
  uint64_t v120 = v119;
  a2 = (uint64_t *)sub_10013A068(v117, v118);
  uint64_t v122 = sub_100139EE8(v121, v120);
  unint64_t v123 = sub_10013AC9C(v122, &qword_100291EC8, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_10013C650);
  swift_bridgeObjectRelease();
  v281 = v123;
  swift_retain();
  uint64_t v124 = v254;
  sub_10013A654((uint64_t *)&v281);
  uint64_t v254 = v124;
  if (v124)
  {
LABEL_152:
    swift_release();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  swift_release();
  uint64_t v63 = (char *)v281;
  uint64_t v125 = v281[2];
  if (!v125)
  {
    swift_bridgeObjectRelease();
    swift_release();
    LODWORD(v250) = 0;
    v276 = _swiftEmptyArrayStorage;
    goto LABEL_117;
  }
  LODWORD(v250) = 0;
  uint64_t v61 = 0;
  uint64_t v277 = -v125;
  uint64_t v126 = v281 + 5;
  v276 = _swiftEmptyArrayStorage;
  uint64_t v64 = v267;
  v270 = (char *)v281;
  double v244 = v51;
  double v234 = v281 + 5;
  while (2)
  {
    uint64_t v51 = &v126[2 * v61++];
    while (2)
    {
      if ((unint64_t)(v61 - 1) >= *((void *)v63 + 2))
      {
        __break(1u);
        goto LABEL_136;
      }
      uint64_t v70 = *(v51 - 1);
      uint64_t v127 = *v51;
      uint64_t v128 = *(void *)(v58 + 16);
      swift_bridgeObjectRetain();
      if (v128)
      {
        unint64_t v129 = sub_1001A87A0(v70, v127);
        if (v130)
        {
          unint64_t v38 = *(void *)(*(void *)(v58 + 56) + 8 * v129);
          if (!a2[2] || (unint64_t v131 = sub_1001A87A0(v70, v127), (v132 & 1) == 0))
          {
            swift_bridgeObjectRelease();
            if ((v38 & 0x8000000000000000) != 0) {
              goto LABEL_137;
            }
            if (v38 >= *(void *)(*(void *)v64 + 16)) {
              goto LABEL_138;
            }
            unint64_t v133 = (*(unsigned __int8 *)(v269 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v269 + 80);
            uint64_t v134 = *(void *)(v269 + 72);
            sub_10013B944(*(void *)v64 + v133 + v134 * v38, v275, type metadata accessor for PBPropertyValue);
            unint64_t v135 = (unint64_t)v276;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v135 = sub_1000A7600(0, *(void *)(v135 + 16) + 1, 1, v135);
            }
            uint64_t v70 = *(void *)(v135 + 16);
            unint64_t v136 = *(void *)(v135 + 24);
            if (v70 >= v136 >> 1) {
              unint64_t v135 = sub_1000A7600(v136 > 1, v70 + 1, 1, v135);
            }
            *(void *)(v135 + 16) = v70 + 1;
            v276 = (void *)v135;
            sub_10013B8DC(v275, v135 + v133 + v70 * v134, type metadata accessor for PBPropertyValue);
            if (qword_1002910F8 != -1) {
              swift_once();
            }
            uint64_t v137 = sub_1001EB560();
            sub_10007CFF8(v137, (uint64_t)qword_100294BA8);
            uint64_t v138 = v268;
            sub_10013B944(v64, v268, type metadata accessor for PBPropertyBundle);
            unint64_t v139 = sub_1001EB540();
            os_log_type_t v140 = sub_1001EC8E0();
            if (os_log_type_enabled(v139, v140))
            {
              uint64_t v70 = swift_slowAlloc();
              v281 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v70 = v266;
              uint64_t v141 = sub_1000D4A08();
              *(void *)(v70 + 4) = sub_1001A8090(v141, v142, (uint64_t *)&v281);
              swift_bridgeObjectRelease();
              sub_10013CEF8(v138, type metadata accessor for PBPropertyBundle);
              _os_log_impl((void *)&_mh_execute_header, v139, v140, "Keeping property bundle %s unchanged", (uint8_t *)v70, 0xCu);
              swift_arrayDestroy();
              uint64_t v64 = v267;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              sub_10013CEF8(v138, type metadata accessor for PBPropertyBundle);
            }
            unint64_t v38 = v272;
            uint64_t v63 = v270;
LABEL_41:
            ++v61;
            v51 += 2;
            if (v277 + v61 == 1)
            {
              swift_bridgeObjectRelease();
              swift_release();
              uint64_t v61 = (uint64_t)v257;
              uint64_t v51 = v244;
              goto LABEL_117;
            }
            continue;
          }
          unint64_t v157 = *(void *)(a2[7] + 8 * v131);
          swift_bridgeObjectRelease();
          if ((v157 & 0x8000000000000000) == 0)
          {
            uint64_t v158 = (uint64_t)v230;
            uint64_t v51 = v244;
            unint64_t v159 = (unint64_t)v276;
            if (v157 < *(void *)(*(void *)v258 + 16))
            {
              unint64_t v160 = (*(unsigned __int8 *)(v269 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v269 + 80);
              uint64_t v161 = *(void *)(v269 + 72);
              sub_10013B944(*(void *)v258 + v160 + v161 * v157, v231, type metadata accessor for PBPropertyValue);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v159 = sub_1000A7600(0, *(void *)(v159 + 16) + 1, 1, v159);
              }
              unint64_t v163 = *(void *)(v159 + 16);
              unint64_t v162 = *(void *)(v159 + 24);
              if (v163 >= v162 >> 1) {
                unint64_t v159 = sub_1000A7600(v162 > 1, v163 + 1, 1, v159);
              }
              *(void *)(v159 + 16) = v163 + 1;
              sub_10013B8DC(v231, v159 + v160 + v163 * v161, type metadata accessor for PBPropertyValue);
              if (qword_1002910F8 != -1) {
                swift_once();
              }
              v276 = (void *)v159;
              uint64_t v164 = sub_1001EB560();
              sub_10007CFF8(v164, (uint64_t)qword_100294BA8);
              sub_10013B944(v258, v158, type metadata accessor for PBPropertyBundle);
              char v165 = sub_1001EB540();
              os_log_type_t v166 = sub_1001EC8E0();
              uint64_t v70 = v166;
              BOOL v167 = os_log_type_enabled(v165, v166);
              uint64_t v63 = v270;
              if (v167)
              {
                uint64_t v168 = swift_slowAlloc();
                uint64_t v250 = swift_slowAlloc();
                v281 = (void *)v250;
                *(_DWORD *)uint64_t v168 = v266;
                uint64_t v169 = sub_1000D4A08();
                *(void *)(v168 + 4) = sub_1001A8090(v169, v170, (uint64_t *)&v281);
                swift_bridgeObjectRelease();
                sub_10013CEF8(v158, type metadata accessor for PBPropertyBundle);
                _os_log_impl((void *)&_mh_execute_header, v165, (os_log_type_t)v70, "Taking on cloud property value %s instead of the local version", (uint8_t *)v168, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                sub_10013CEF8(v158, type metadata accessor for PBPropertyBundle);
              }
              unint64_t v38 = v272;
              LODWORD(v250) = 1;
              uint64_t v156 = v277 + v61;
              uint64_t v64 = v267;
              goto LABEL_86;
            }
LABEL_151:
            __break(1u);
            goto LABEL_152;
          }
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
      }
      break;
    }
    if (!a2[2] || (unint64_t v143 = sub_1001A87A0(v70, v127), (v144 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    unint64_t v145 = *(void *)(a2[7] + 8 * v143);
    swift_bridgeObjectRelease();
    if ((v145 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_149;
    }
    if (v145 >= *(void *)(*(void *)v258 + 16))
    {
LABEL_149:
      __break(1u);
      goto LABEL_150;
    }
    unint64_t v146 = (*(unsigned __int8 *)(v269 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v269 + 80);
    uint64_t v147 = *(void *)(v269 + 72);
    sub_10013B944(*(void *)v258 + v146 + v147 * v145, v235, type metadata accessor for PBPropertyValue);
    unint64_t v148 = (unint64_t)v276;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v148 = sub_1000A7600(0, *(void *)(v148 + 16) + 1, 1, v148);
    }
    uint64_t v70 = *(void *)(v148 + 16);
    unint64_t v149 = *(void *)(v148 + 24);
    if (v70 >= v149 >> 1) {
      unint64_t v148 = sub_1000A7600(v149 > 1, v70 + 1, 1, v148);
    }
    *(void *)(v148 + 16) = v70 + 1;
    v276 = (void *)v148;
    sub_10013B8DC(v235, v148 + v146 + v70 * v147, type metadata accessor for PBPropertyValue);
    if (qword_1002910F8 != -1) {
      swift_once();
    }
    uint64_t v150 = sub_1001EB560();
    sub_10007CFF8(v150, (uint64_t)qword_100294BA8);
    uint64_t v151 = v232;
    sub_10013B944(v258, v232, type metadata accessor for PBPropertyBundle);
    uint64_t v152 = sub_1001EB540();
    os_log_type_t v153 = sub_1001EC8E0();
    if (os_log_type_enabled(v152, v153))
    {
      uint64_t v70 = swift_slowAlloc();
      v281 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = v266;
      uint64_t v154 = sub_1000D4A08();
      *(void *)(v70 + 4) = sub_1001A8090(v154, v155, (uint64_t *)&v281);
      swift_bridgeObjectRelease();
      sub_10013CEF8(v151, type metadata accessor for PBPropertyBundle);
      _os_log_impl((void *)&_mh_execute_header, v152, v153, "Taking on cloud property value %s", (uint8_t *)v70, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10013CEF8(v151, type metadata accessor for PBPropertyBundle);
    }
    unint64_t v38 = v272;
    uint64_t v51 = v244;
    LODWORD(v250) = 1;
    uint64_t v156 = v277 + v61;
    uint64_t v63 = v270;
LABEL_86:
    uint64_t v126 = v234;
    if (v156) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_release();
  LODWORD(v250) = 1;
  uint64_t v61 = (uint64_t)v257;
LABEL_117:
  swift_bridgeObjectRelease();
  uint64_t v203 = v256;
  void *v256 = _swiftEmptyArrayStorage;
  v203[1] = _swiftEmptyArrayStorage;
  uint64_t v204 = v253;
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v205 = (char *)v203 + *(int *)(v204 + 28);
  uint64_t v206 = *v249;
  uint64_t v207 = v241;
  (*v249)(v205, 1, 1, v241);
  uint64_t v208 = v258 + *(int *)(v204 + 28);
  uint64_t v209 = v242;
  sub_1000936F8(v208, v242, &qword_100292E48);
  int v210 = (*v238)(v209, 1, v207);
  uint64_t v211 = v240;
  if (v210 == 1)
  {
    *double v240 = 0;
    v211[1] = 0;
    v211[2] = 0;
    v211[3] = 0xE000000000000000;
    v211[4] = 0;
    _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_1000816A4(v209, &qword_100292E48);
  }
  else
  {
    sub_10013B8DC(v209, (uint64_t)v240, type metadata accessor for PBPropertyConfiguration);
  }
  v212 = v256;
  swift_beginAccess();
  uint64_t v213 = (uint64_t)v212 + *(int *)(v253 + 28);
  sub_1000816A4(v213, &qword_100292E48);
  sub_10013B8DC((uint64_t)v211, v213, type metadata accessor for PBPropertyConfiguration);
  v206((char *)v213, 0, 1, v207);
  void *v212 = v276;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10013B944((uint64_t)v212, v252, type metadata accessor for PBPropertyBundle);
  unint64_t v214 = *v271;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v214 = sub_1000A75CC(0, *(void *)(v214 + 16) + 1, 1, v214);
  }
  unint64_t v216 = *(void *)(v214 + 16);
  unint64_t v215 = *(void *)(v214 + 24);
  if (v216 >= v215 >> 1) {
    unint64_t v214 = sub_1000A75CC(v215 > 1, v216 + 1, 1, v214);
  }
  *(void *)(v214 + 16) = v216 + 1;
  sub_10013B8DC(v252, (uint64_t)v51 + v214 + v216 * (void)v246, type metadata accessor for PBPropertyBundle);
  unint64_t *v271 = v214;
  if (qword_1002910F8 != -1) {
    swift_once();
  }
  uint64_t v217 = sub_1001EB560();
  sub_10007CFF8(v217, (uint64_t)qword_100294BA8);
  uint64_t v218 = sub_1001EB540();
  os_log_type_t v219 = sub_1001EC8E0();
  if (os_log_type_enabled(v218, v219))
  {
    v220 = (uint8_t *)swift_slowAlloc();
    v281 = (void *)swift_slowAlloc();
    *(_DWORD *)v220 = v266;
    uint64_t v221 = v256;
    uint64_t v222 = sub_1000D4A08();
    uint64_t v279 = sub_1001A8090(v222, v223, (uint64_t *)&v281);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v218, v219, "Merged property bundle %s", v220, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v64 = (uint64_t)type metadata accessor for PBPropertyBundle;
    sub_10013CEF8(v258, type metadata accessor for PBPropertyBundle);
    sub_10013CEF8(v267, type metadata accessor for PBPropertyBundle);
    uint64_t v224 = (uint64_t)v221;
    unint64_t v38 = v272;
  }
  else
  {
    swift_bridgeObjectRelease();

    uint64_t v64 = (uint64_t)type metadata accessor for PBPropertyBundle;
    sub_10013CEF8(v258, type metadata accessor for PBPropertyBundle);
    sub_10013CEF8(v267, type metadata accessor for PBPropertyBundle);
    uint64_t v224 = (uint64_t)v256;
  }
  sub_10013CEF8(v224, type metadata accessor for PBPropertyBundle);
  uint64_t v70 = (uint64_t)v248;
  uint64_t v51 = v251;
  a2 = v247;
  unint64_t v104 = v278;
  LODWORD(v263) = v263 | v250;
  uint64_t v63 = v265;
  unint64_t v58 = (unint64_t)v264;
LABEL_26:
  if (v104 != v274)
  {
LABEL_27:
    if (v104 < *(void *)(v58 + 16)) {
      goto LABEL_28;
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
LABEL_130:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v263 & 1) == 0)
  {
    sub_10013CEF8((uint64_t)v271, type metadata accessor for PBPropertyTimeSlice);
    uint64_t v225 = 1;
    uint64_t v226 = v245;
    uint64_t v227 = v236;
    uint64_t v228 = v237;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 56))(v228, v225, 1, v226);
  }
LABEL_133:
  uint64_t v228 = v237;
  sub_10013B8DC((uint64_t)v271, v237, type metadata accessor for PBPropertyTimeSlice);
  uint64_t v225 = 0;
  uint64_t v226 = v245;
  uint64_t v227 = v236;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 56))(v228, v225, 1, v226);
}

void *sub_100139A94(uint64_t *a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100292E48);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for PBPropertyBundle(0);
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[2] = (Swift::Int)&_swiftEmptySetSingleton;
  uint64_t v35 = *(void *)(*a1 + 16);
  if (!v35) {
    return &_swiftEmptyDictionarySingleton;
  }
  unint64_t v12 = 0;
  uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v13 = *a1;
  uint64_t v14 = &_swiftEmptyDictionarySingleton;
  uint64_t v32 = v5;
  uint64_t v33 = v4;
  uint64_t v31 = v13;
  while (v12 < *(void *)(v13 + 16))
  {
    sub_10013B944(v13+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v12, (uint64_t)v11, type metadata accessor for PBPropertyBundle);
    sub_1000936F8((uint64_t)&v11[*(int *)(v37 + 28)], (uint64_t)v4, &qword_100292E48);
    if ((*v34)(v4, 1, v5) == 1)
    {
      *uint64_t v8 = 0;
      v8[1] = 0;
      v8[2] = 0;
      v8[3] = 0xE000000000000000;
      v8[4] = 0;
      _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
      sub_1000816A4((uint64_t)v4, &qword_100292E48);
    }
    else
    {
      sub_10013B8DC((uint64_t)v4, (uint64_t)v8, type metadata accessor for PBPropertyConfiguration);
    }
    sub_10013CEF8((uint64_t)v11, type metadata accessor for PBPropertyBundle);
    uint64_t v16 = v8[2];
    uint64_t v15 = v8[3];
    swift_bridgeObjectRetain();
    sub_10013CEF8((uint64_t)v8, type metadata accessor for PBPropertyConfiguration);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38[0] = (Swift::Int)v14;
    unint64_t v19 = sub_1001A87A0(v16, v15);
    uint64_t v20 = v14[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      goto LABEL_24;
    }
    char v23 = v18;
    if (v14[3] >= v22)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v14 = (void *)v38[0];
        if (v18) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1001AC994();
        uint64_t v14 = (void *)v38[0];
        if (v23) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1001AAAB8(v22, isUniquelyReferenced_nonNull_native);
      unint64_t v24 = sub_1001A87A0(v16, v15);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_26;
      }
      unint64_t v19 = v24;
      uint64_t v14 = (void *)v38[0];
      if (v23)
      {
LABEL_3:
        *(void *)(v14[7] + 8 * v19) = v12;
        goto LABEL_4;
      }
    }
    v14[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v26 = (uint64_t *)(v14[6] + 16 * v19);
    *uint64_t v26 = v16;
    v26[1] = v15;
    *(void *)(v14[7] + 8 * v19) = v12;
    uint64_t v27 = v14[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_25;
    }
    v14[2] = v29;
    swift_bridgeObjectRetain();
LABEL_4:
    ++v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100197DF4(v38, v16, v15);
    swift_bridgeObjectRelease();
    uint64_t v5 = v32;
    uint64_t v4 = v33;
    uint64_t v13 = v31;
    if (v35 == v12) {
      return v14;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = (void *)sub_1001ED0E0();
  __break(1u);
  return result;
}

uint64_t sub_100139EE8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100197DF4(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10013A068(uint64_t a1, void *a2)
{
  id v37 = a2;
  uint64_t v36 = sub_1001EB0C0();
  uint64_t v3 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007DC14(&qword_100292E58);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EB300();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for PBPropertyValue(0);
  uint64_t v34 = *(void *)(v39 - 8);
  uint64_t result = (void *)__chkstk_darwin(v39);
  int64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = &_swiftEmptySetSingleton;
  uint64_t v38 = a1;
  uint64_t v33 = *(void *)(*(void *)a1 + 16);
  if (v33)
  {
    unint64_t v15 = 0;
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v31 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    int64_t v16 = &_swiftEmptyDictionarySingleton;
    uint64_t v30 = (void (**)(char *, uint64_t))(v3 + 8);
    while (v15 < *(void *)(*(void *)v38 + 16))
    {
      sub_10013B944(*(void *)v38+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v15, (uint64_t)v14, type metadata accessor for PBPropertyValue);
      sub_1000936F8((uint64_t)&v14[*(int *)(v39 + 28)], (uint64_t)v7, &qword_100292E58);
      if ((*v32)(v7, 1, v8) == 1)
      {
        sub_1001EB2F0();
        sub_1000816A4((uint64_t)v7, &qword_100292E58);
      }
      else
      {
        (*v29)(v11, v7, v8);
      }
      uint64_t v20 = v35;
      sub_1001EB2E0();
      uint64_t v21 = v8;
      (*v31)(v11, v8);
      Class isa = sub_1001EB060().super.isa;
      (*v30)(v20, v36);
      id v23 = [v37 stringFromDate:isa];

      uint64_t v24 = sub_1001EC370();
      uint64_t v26 = v25;

      uint64_t v27 = (Swift::Int *)&v14[*(int *)(v39 + 32)];
      unint64_t v28 = v27[1];
      if (v28)
      {
        Swift::Int v40 = *v27;
        unint64_t v41 = v28;
        swift_bridgeObjectRetain();
        v44._countAndFlagsBits = 124;
        v44._object = (void *)0xE100000000000000;
        sub_1001EC490(v44);
        swift_bridgeObjectRetain();
        v45._countAndFlagsBits = v24;
        v45._object = v26;
        sub_1001EC490(v45);
        swift_bridgeObjectRelease();
      }
      else
      {
        Swift::Int v40 = 124;
        unint64_t v41 = 0xE100000000000000;
        v43._countAndFlagsBits = v24;
        v43._object = v26;
        sub_1001EC490(v43);
      }
      swift_bridgeObjectRelease();
      uint64_t v18 = v40;
      uint64_t v17 = v41;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v40 = (Swift::Int)v16;
      sub_10019AC54(v15, v18, v17, isUniquelyReferenced_nonNull_native);
      int64_t v16 = (void *)v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100197DF4(&v40, v18, v17);
      swift_bridgeObjectRelease();
      uint64_t result = (void *)sub_10013CEF8((uint64_t)v14, type metadata accessor for PBPropertyValue);
      ++v15;
      uint64_t v8 = v21;
      if (v33 == v15) {
        return v16;
      }
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptyDictionarySingleton;
  }
  return result;
}

id SecureEngagementDataHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureEngagementDataHelper();
  return objc_msgSendSuper2(&v2, "init");
}

id SecureEngagementDataHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureEngagementDataHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

Swift::Int sub_10013A654(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1001CFD94(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_10013AE84(v5);
  *a1 = v2;
  return result;
}

void *sub_10013A6C0(uint64_t a1)
{
  return sub_10013AC9C(a1, &qword_100292E18, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_10013B9F4);
}

void *sub_10013A6E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10007DC14(&qword_100292010);
  uint64_t v3 = *(void *)(sub_1001EB0C0() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  Swift::Int result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_10013BB88(&v10, (char *)v6 + v5, v1, a1);
      sub_1000B251C();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10013A814(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10007DC14(&qword_100291EC8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_10013BF7C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1000B251C();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10013A8FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10013A93C(a1, a2, a3, a4, &qword_100292DF0, (uint64_t (*)(void))_s8CardItemVMa);
}

void *sub_10013A91C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10013A93C(a1, a2, a3, a4, &qword_100291E88, (uint64_t (*)(void))_s11TrackedItemVMa);
}

void *sub_10013A93C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  if (v7 <= 0)
  {
    int64_t v14 = _swiftEmptyArrayStorage;
    if (v6 != a3)
    {
LABEL_10:
      if (v7 < 0) {
        goto LABEL_24;
      }
      uint64_t v17 = *(void *)(a6(0) - 8);
      uint64_t v18 = (char *)v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      uint64_t v19 = *(void *)(v17 + 72);
      unint64_t v20 = a2 + v19 * a3;
      uint64_t v21 = v19 * v7;
      uint64_t v22 = &v18[v21];
      unint64_t v23 = v20 + v21;
      if (v20 < (unint64_t)v22 && (unint64_t)v18 < v23) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v14;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_10007DC14(a5);
  uint64_t v11 = *(void *)(a6(0) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  int64_t v14 = (void *)swift_allocObject();
  size_t v15 = j__malloc_size(v14);
  if (v12)
  {
    if (v15 - v13 == 0x8000000000000000 && v12 == -1) {
      goto LABEL_23;
    }
    v14[2] = v7;
    v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
    if (v6 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  Swift::Int result = (void *)sub_1001ECEF0();
  __break(1u);
  return result;
}

void *sub_10013AB84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10007DC14(&qword_100291E90);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_10013C440((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1000B251C();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10013AC7C(uint64_t a1)
{
  return sub_10013AC9C(a1, &qword_100291EC8, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_10013C650);
}

void *sub_10013AC9C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  sub_10007DC14(a2);
  unint64_t v6 = (void *)swift_allocObject();
  int64_t v7 = j__malloc_size(v6);
  uint64_t v8 = v7 - 32;
  if (v7 < 32) {
    uint64_t v8 = v7 - 17;
  }
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  uint64_t v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_1000B251C();
  if (v9 != v3)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

void *sub_10013AD88(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_1001ECC70();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10007DC14(&qword_100293470);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10013C850(&v8, v3 + 4, v2, a1);
  Swift::Int result = (void *)sub_1000B251C();
  if (v6 == (void *)v2) {
    return v3;
  }
  __break(1u);
  return result;
}

Swift::Int sub_10013AE84(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1001ED030(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_10013B570(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v94 = v11;
      unint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_10013B640((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1001CEE74((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1001EC630();
    *(void *)(v7 + 16) = v6;
    unint64_t v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    int64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1001ED080();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      unint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1001ED080()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1001CE928(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1001CE928((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    Swift::String v43 = &v11[16 * v41 + 32];
    *(void *)Swift::String v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            unsigned int v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        unint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unsigned int v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_10013B640((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1001ED080() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_1001ECE80();
  __break(1u);
  return result;
}

uint64_t sub_10013B570(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = sub_1001ED080(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10013B640(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1001ED080() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    int64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1001ED080() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_1001CEA48((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1001ECEF0();
  __break(1u);
  return result;
}

uint64_t sub_10013B8DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013B944(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013B9AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10013B9F4(void *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_OWORD *)(*(void *)(a4 + 48) + 16 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_10013BB88(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  __chkstk_darwin(v8 - 8);
  int64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001EB0C0();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 64;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  int v19 = v40;
  uint64_t v38 = v41 + 16;
  BOOL v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  uint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    Swift::Int v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_1002924C0);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10013BF7C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10013C17C(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_1001ECE40();
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    unint64_t v4 = result | 0x8000000000000000;
    if (v6) {
      goto LABEL_3;
    }
LABEL_34:
    int64_t v11 = 0;
    a3 = 0;
LABEL_42:
    *uint64_t v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v8 = a4 + 64;
  uint64_t v20 = ~v19;
  uint64_t v21 = -v19;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v10 = v22 & *(void *)(a4 + 64);
  uint64_t v9 = v20;
  if (!a2) {
    goto LABEL_34;
  }
LABEL_3:
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_42;
  }
  if (a3 < 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v23 = v9;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!sub_1001ECE70())
    {
      a3 = v12;
LABEL_41:
      uint64_t v9 = v23;
      goto LABEL_42;
    }
    swift_unknownObjectRelease();
    sub_100081668(0, (unint64_t *)&unk_1002915B0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v15 = v25;
    uint64_t result = swift_unknownObjectRelease();
    if (!v25) {
      goto LABEL_40;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3) {
      goto LABEL_41;
    }
  }
  if (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v11 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v16 >= v24) {
    goto LABEL_37;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  if (v17) {
    goto LABEL_29;
  }
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16;
    goto LABEL_40;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v11);
  if (v17)
  {
    ++v16;
LABEL_29:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
LABEL_7:
    uint64_t result = (uint64_t)*(id *)(*(void *)(v4 + 56) + 8 * v14);
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_40;
    }
    goto LABEL_8;
  }
  if (v16 + 2 >= v24)
  {
LABEL_37:
    unint64_t v10 = 0;
LABEL_40:
    a3 = v12;
    goto LABEL_41;
  }
  unint64_t v17 = *(void *)(v8 + 8 * (v16 + 2));
  if (v17)
  {
    v16 += 2;
    goto LABEL_29;
  }
  int64_t v18 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    unint64_t v10 = 0;
    int64_t v11 = v16 + 2;
    goto LABEL_40;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    v16 += 3;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v24)
    {
      unint64_t v10 = 0;
      int64_t v11 = v24 - 1;
      goto LABEL_40;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_29;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_10013C440(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v23 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 24 * v16;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    LOBYTE(v20) = *(unsigned char *)(v20 + 16);
    *(void *)uint64_t v11 = v22;
    *(void *)(v11 + 8) = v21;
    *(unsigned char *)(v11 + 16) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10013C650(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_10013C850(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1001ECC60();
    sub_100081668(0, (unint64_t *)&unk_100296550);
    sub_10013CE90();
    uint64_t result = (void *)sub_1001EC780();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    int64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *int64_t v24 = v4;
    v24[1] = v8;
    void v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (void *)v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  int64_t v24 = result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1001ECC90()) {
        goto LABEL_45;
      }
      sub_100081668(0, (unint64_t *)&unk_100296550);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v15 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    unint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

BOOL _s14bookdatastored26SecureEngagementDataHelperC7isEmpty9timeSliceSb10Foundation0D0V_tFZ_0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1001EB350();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for PBPropertyTimeSlice(0);
  __chkstk_darwin(v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = 0;
  memset(&v10[16], 0, 32);
  sub_100093680(a1, a2);
  sub_1001EB340();
  sub_10013B9AC(&qword_100294BD0, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
  sub_1001EB440();
  BOOL v8 = *(void *)(*(void *)v7 + 16) == 0;
  sub_10013CEF8((uint64_t)v7, type metadata accessor for PBPropertyTimeSlice);
  return v8;
}

uint64_t type metadata accessor for SecureEngagementDataHelper()
{
  return self;
}

unint64_t sub_10013CE90()
{
  unint64_t result = qword_100294C08;
  if (!qword_100294C08)
  {
    sub_100081668(255, (unint64_t *)&unk_100296550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100294C08);
  }
  return result;
}

uint64_t sub_10013CEF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_10013CF58(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000CF8A8(0, v1, 0);
    uint64_t v3 = *(void *)(_s8CardItemVMa() - 8);
    uint64_t v4 = *(void *)(v3 + 72);
    uint64_t v5 = (unsigned char *)(((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + a1 + 16);
    do
    {
      uint64_t v7 = *((void *)v5 - 2);
      uint64_t v6 = *((void *)v5 - 1);
      char v8 = *v5;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_1000CF8A8(v9 > 1, v10 + 1, 1);
      }
      v5 += v4;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[3 * v10];
      v11[4] = v7;
      v11[5] = v6;
      *((unsigned char *)v11 + 48) = v8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10013D09C(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *(void *)(_s8CardItemVMa() - 8);
  v2[8] = swift_task_alloc();
  sub_1001EC3C0();
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_10013D184, 0, 0);
}

uint64_t sub_10013D184()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = (uint64_t *)(v0 + 32);
  uint64_t v3 = **(void ***)(v0 + 48);
  uint64_t v4 = sub_10013F3A8(v3);
  uint64_t v47 = v0;
  if (sub_1001B5EF8(v1, (uint64_t)v4))
  {
    swift_bridgeObjectRelease();
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1001EB560();
    sub_10007CFF8(v5, (uint64_t)qword_1002A4198);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_1001EB540();
    os_log_type_t v7 = sub_1001EC910();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void *)(v0 + 40);
    if (v8)
    {
      os_log_type_t v46 = v7;
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)unint64_t v10 = 136315138;
      int64_t v11 = *(void *)(v9 + 16);
      if (v11)
      {
        Swift::String v43 = v10;
        unint64_t v44 = v6;
        uint64_t v45 = (uint64_t *)(v0 + 32);
        uint64_t v12 = *(void *)(v0 + 56);
        uint64_t v13 = *(void *)(v0 + 64);
        uint64_t v14 = *(void *)(v0 + 40);
        uint64_t v49 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1000CF8A8(0, v11, 0);
        uint64_t v15 = v14 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        uint64_t v16 = *(void *)(v12 + 72);
        unint64_t v17 = _swiftEmptyArrayStorage;
        do
        {
          int64_t v18 = *(uint64_t **)(v0 + 64);
          sub_1000C19F8(v15, (uint64_t)v18);
          uint64_t v19 = *v18;
          uint64_t v20 = *(void *)(v13 + 8);
          char v21 = *(unsigned char *)(v13 + 16);
          swift_bridgeObjectRetain();
          sub_1000C1A5C((uint64_t)v18);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000CF8A8(0, v17[2] + 1, 1);
            unint64_t v17 = v49;
          }
          unint64_t v23 = v17[2];
          unint64_t v22 = v17[3];
          if (v23 >= v22 >> 1)
          {
            sub_1000CF8A8(v22 > 1, v23 + 1, 1);
            unint64_t v17 = v49;
          }
          void v17[2] = v23 + 1;
          int64_t v24 = &v17[3 * v23];
          v24[4] = v19;
          v24[5] = v20;
          *((unsigned char *)v24 + 48) = v21;
          v15 += v16;
          --v11;
          uint64_t v0 = v47;
        }
        while (v11);
        swift_bridgeObjectRelease();
        uint64_t v2 = v45;
        unint64_t v10 = v43;
        uint64_t v6 = v44;
      }
      uint64_t v35 = sub_1001EC5F0();
      unint64_t v37 = v36;
      swift_bridgeObjectRelease();
      *uint64_t v2 = sub_1001A8090(v35, v37, &v48);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v46, "[CardManager] Ignoring card list %s because it is unchanged", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    *(void *)(v0 + 16) = *(void *)(v0 + 40);
    sub_100115600();
    uint64_t v25 = sub_1001EAC40();
    unint64_t v27 = v26;
    sub_100093680(v25, v26);
    sub_1001EC3B0();
    uint64_t v28 = sub_1001EC390();
    unint64_t v30 = v29;
    sub_100081714(v25, v27);
    if (v30)
    {
      uint64_t v31 = *(void *)(v0 + 40);
      NSString v32 = sub_1001EC340();
      [v3 setObject:v32 forKey:@"BDSPriceTracker_CardManager_cardListV1"];

      sub_10013DDB4((uint64_t)v4, v31, v28, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = [self defaultCenter];
      NSString v34 = sub_1001EC340();
      [v33 postNotificationName:@"BDSPriceTrackerCardListDidChangeNotification" object:v34];
      sub_100081714(v25, v27);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_1001EB560();
      sub_10007CFF8(v38, (uint64_t)qword_1002A4198);
      uint64_t v33 = sub_1001EB540();
      os_log_type_t v39 = sub_1001EC8F0();
      if (os_log_type_enabled(v33, v39))
      {
        unint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v39, "[CardManager] Card list data is invalid", v40, 2u);
        swift_slowDealloc();
      }
      sub_100081714(v25, v27);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_10013D88C(unint64_t a1, unint64_t a2)
{
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_10007DC14(&qword_100294C20);
  if (swift_dynamicCast())
  {
    sub_10010080C(v38, (uint64_t)&v41);
    sub_100094758(&v41, v43);
    sub_1001EAD90();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    sub_1000947F0((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_10013F6BC((uint64_t)v38);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      os_log_type_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_1001ECD90();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      os_log_type_t v7 = (uint64_t *)v4;
    }
    BOOL v8 = sub_10013F2A4(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    Swift::Int v11 = sub_1001EC4B0();
    goto LABEL_17;
  }
LABEL_69:
  BOOL v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    Swift::Int v11 = HIBYTE(v3) & 0xF;
  }
  else {
    Swift::Int v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_10013F308(v11);
  *((void *)&v38[0] + 1) = v12;
  __chkstk_darwin(*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_10013E8BC((void *(*)(uint64_t *__return_ptr, char *, char *))sub_10013F71C);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_1001EAFB0();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_1000D5F2C(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_1001EC4F0();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_1001ECD90();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_1000D5F2C(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_1001EC4C0();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_1001EAFC0();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  BOOL v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_1001EAFC0();
    sub_100081700(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_100081700((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

void sub_10013DDB4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v88 = a4;
  uint64_t v85 = a3;
  uint64_t v87 = a2;
  uint64_t v98 = _s8CardItemVMa();
  uint64_t v5 = *(void *)(v98 - 8);
  uint64_t v6 = __chkstk_darwin(v98);
  uint64_t v94 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v100 = (uint64_t)&v84 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v84 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v84 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v93 = (char *)&v84 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  *(void *)&long long v99 = (char *)&v84 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v101 = (uint64_t)&v84 - v21;
  __chkstk_darwin(v20);
  BOOL v23 = (char *)&v84 - v22;
  uint64_t v24 = swift_bridgeObjectRetain();
  unint64_t v25 = sub_10013CF58(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_100170B7C((uint64_t)v25);
  swift_bridgeObjectRelease();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_10013EDE8(v27, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = swift_bridgeObjectRetain();
  unint64_t v30 = sub_10013CF58(v29);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_100170B7C((uint64_t)v30);
  swift_bridgeObjectRelease();
  uint64_t v32 = swift_bridgeObjectRetain();
  unint64_t v89 = sub_10013EDE8(v32, v31);
  uint64_t v95 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v28;
  uint64_t v35 = v28[2];
  uint64_t v102 = v12;
  uint64_t v97 = v15;
  uint64_t v86 = v5;
  if (v35)
  {
    unint64_t v36 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v84 = v34;
    uint64_t v37 = (uint64_t)v34 + v36;
    unint64_t v96 = *(char **)(v5 + 72);
    *(void *)&long long v33 = 136315650;
    long long v92 = v33;
    uint64_t v90 = v23;
    uint64_t v91 = (char *)&type metadata for Any + 8;
    uint64_t v38 = (uint64_t)v93;
    uint64_t v39 = v99;
    long long v40 = (uint64_t *)v101;
    do
    {
      sub_1000C19F8(v37, (uint64_t)v23);
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1001EB560();
      sub_10007CFF8(v41, (uint64_t)qword_1002A4198);
      sub_1000C19F8((uint64_t)v23, (uint64_t)v40);
      sub_1000C19F8((uint64_t)v23, v39);
      sub_1000C19F8((uint64_t)v23, v38);
      uint64_t v42 = sub_1001EB540();
      uint64_t v43 = (uint64_t)v23;
      os_log_type_t v44 = sub_1001EC910();
      if (os_log_type_enabled(v42, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = v92;
        uint64_t v47 = *v40;
        uint64_t v48 = *(void **)(v101 + 8);
        int v49 = *(unsigned __int8 *)(v101 + 16);
        uint64_t v103 = 0;
        unint64_t v104 = 0xE000000000000000;
        uint64_t v105 = v46;
        if (v49) {
          uint64_t v50 = 65;
        }
        else {
          uint64_t v50 = 66;
        }
        swift_bridgeObjectRetain();
        v106._countAndFlagsBits = v50;
        uint64_t v12 = v102;
        v106._object = (void *)0xE100000000000000;
        sub_1001EC490(v106);
        swift_bridgeObjectRelease();
        v107._countAndFlagsBits = 46;
        v107._object = (void *)0xE100000000000000;
        sub_1001EC490(v107);
        swift_bridgeObjectRetain();
        v108._countAndFlagsBits = v47;
        v108._object = v48;
        sub_1001EC490(v108);
        swift_bridgeObjectRelease_n();
        *(void *)(v45 + 4) = sub_1001A8090((uint64_t)v103, v104, &v105);
        swift_bridgeObjectRelease();
        sub_1000C1A5C(v101);
        *(_WORD *)(v45 + 12) = 2082;
        uint64_t v51 = v98;
        sub_1001EB0C0();
        sub_10013FF0C(&qword_100293430, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v38 = (uint64_t)v93;
        uint64_t v52 = sub_1001ED040();
        *(void *)(v45 + 14) = sub_1001A8090(v52, v53, &v105);
        swift_bridgeObjectRelease();
        sub_1000C1A5C(v99);
        *(_WORD *)(v45 + 22) = 2048;
        uint64_t v54 = *(int *)(v51 + 28);
        long long v40 = (uint64_t *)v101;
        *(void *)(v45 + 24) = *(void *)(v38 + v54);
        sub_1000C1A5C(v38);
        _os_log_impl((void *)&_mh_execute_header, v42, v44, "[CardManager] Added card: %s, date: %{public}s, reference price: %f", (uint8_t *)v45, 0x20u);
        swift_arrayDestroy();
        uint64_t v39 = v99;
        swift_slowDealloc();
        uint64_t v15 = v97;
        swift_slowDealloc();

        BOOL v23 = v90;
        sub_1000C1A5C((uint64_t)v90);
      }
      else
      {

        sub_1000C1A5C(v38);
        sub_1000C1A5C(v39);
        sub_1000C1A5C((uint64_t)v40);
        sub_1000C1A5C(v43);
        BOOL v23 = (char *)v43;
      }
      v37 += (uint64_t)v96;
      --v35;
    }
    while (v35);
  }
  swift_bridgeObjectRelease();
  uint64_t v56 = v89[2];
  uint64_t v57 = (uint64_t)v94;
  uint64_t v58 = v95;
  uint64_t v59 = v100;
  if (v56)
  {
    uint64_t v60 = (uint64_t)v89 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
    uint64_t v101 = *(void *)(v86 + 72);
    *(void *)&long long v55 = 136315650;
    long long v99 = v55;
    unint64_t v96 = (char *)&type metadata for Any + 8;
    do
    {
      sub_1000C19F8(v60, (uint64_t)v15);
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1001EB560();
      sub_10007CFF8(v61, (uint64_t)qword_1002A4198);
      sub_1000C19F8((uint64_t)v15, (uint64_t)v12);
      sub_1000C19F8((uint64_t)v15, v59);
      sub_1000C19F8((uint64_t)v15, v57);
      uint64_t v62 = sub_1001EB540();
      os_log_type_t v63 = sub_1001EC910();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        *(_DWORD *)uint64_t v64 = v99;
        uint64_t v66 = *(void *)v102;
        char v67 = (void *)*((void *)v102 + 1);
        int v68 = v102[16];
        uint64_t v103 = 0;
        unint64_t v104 = 0xE000000000000000;
        uint64_t v105 = v65;
        if (v68) {
          uint64_t v69 = 65;
        }
        else {
          uint64_t v69 = 66;
        }
        swift_bridgeObjectRetain();
        v109._countAndFlagsBits = v69;
        v109._object = (void *)0xE100000000000000;
        sub_1001EC490(v109);
        swift_bridgeObjectRelease();
        v110._countAndFlagsBits = 46;
        v110._object = (void *)0xE100000000000000;
        sub_1001EC490(v110);
        swift_bridgeObjectRetain();
        v111._countAndFlagsBits = v66;
        v111._object = v67;
        sub_1001EC490(v111);
        uint64_t v58 = v95;
        swift_bridgeObjectRelease_n();
        *(void *)(v64 + 4) = sub_1001A8090((uint64_t)v103, v104, &v105);
        swift_bridgeObjectRelease();
        sub_1000C1A5C((uint64_t)v102);
        *(_WORD *)(v64 + 12) = 2082;
        uint64_t v70 = v98;
        sub_1001EB0C0();
        sub_10013FF0C(&qword_100293430, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v57 = (uint64_t)v94;
        uint64_t v71 = sub_1001ED040();
        *(void *)(v64 + 14) = sub_1001A8090(v71, v72, &v105);
        swift_bridgeObjectRelease();
        sub_1000C1A5C(v100);
        *(_WORD *)(v64 + 22) = 2048;
        uint64_t v73 = *(int *)(v70 + 28);
        uint64_t v59 = v100;
        *(void *)(v64 + 24) = *(void *)(v57 + v73);
        sub_1000C1A5C(v57);
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "[CardManager] Removed card: %s, date: %{public}s, reference price: %f", (uint8_t *)v64, 0x20u);
        swift_arrayDestroy();
        uint64_t v12 = v102;
        swift_slowDealloc();
        uint64_t v15 = v97;
        swift_slowDealloc();
      }
      else
      {

        sub_1000C1A5C(v57);
        sub_1000C1A5C(v59);
        sub_1000C1A5C((uint64_t)v12);
      }
      sub_1000C1A5C((uint64_t)v15);
      v60 += v101;
      --v56;
    }
    while (v56);
  }
  swift_bridgeObjectRelease();
  unint64_t v74 = v88;
  uint64_t v75 = v87;
  if (qword_1002910B8 != -1) {
    swift_once();
  }
  uint64_t v76 = sub_1001EB560();
  sub_10007CFF8(v76, (uint64_t)qword_1002A4198);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v77 = sub_1001EB540();
  os_log_type_t v78 = sub_1001EC910();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = swift_slowAlloc();
    uint64_t v102 = (char *)swift_slowAlloc();
    uint64_t v103 = v102;
    *(_DWORD *)uint64_t v79 = 136446978;
    uint64_t v80 = sub_1001EC370();
    uint64_t v105 = sub_1001A8090(v80, v81, (uint64_t *)&v103);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 12) = 2048;
    uint64_t v82 = *(void *)(v58 + 16);
    swift_bridgeObjectRelease();
    uint64_t v105 = v82;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 22) = 2048;
    uint64_t v83 = *(void *)(v75 + 16);
    swift_bridgeObjectRelease();
    uint64_t v105 = v83;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v79 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v105 = sub_1001A8090(v85, v74, (uint64_t *)&v103);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "[CardManager] %{public}s (%ld) → (%ld) %s", (uint8_t *)v79, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

char *sub_10013E8BC(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_100218EA0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_1001EACF0() && __OFSUB__((int)v4, sub_1001EAD20())) {
        goto LABEL_24;
      }
      sub_1001EAD30();
      swift_allocObject();
      uint64_t v13 = sub_1001EACD0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      unint64_t result = sub_10013ECA8((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1001EAF70();
      unint64_t result = sub_10013ECA8(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        unint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_10013EBC0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = (unsigned char *)sub_10013F0E0(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = (unsigned char *)sub_10013F1A4((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = (unsigned char *)sub_10013F220((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_10013EC38(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  unint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_10013ECA8(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  unint64_t result = (char *)sub_1001EACF0();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  unint64_t result = (char *)sub_1001EAD20();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_1001EAD10();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_10013ED5C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    unint64_t result = sub_1001ECD30();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      unint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10013EDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = _s8CardItemVMa() - 8;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v30 - v10;
  unint64_t result = _swiftEmptyArrayStorage;
  uint64_t v39 = _swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v30 = v2;
    uint64_t v13 = 0;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v34 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v35 = a1 + v34;
    uint64_t v15 = a2 + 56;
    uint64_t v16 = _swiftEmptyArrayStorage;
    uint64_t v36 = a2;
    uint64_t v32 = (char *)&v30 - v10;
    long long v33 = v8;
    uint64_t v31 = v14;
    do
    {
      sub_1000C19F8(v35 + v14 * v13, (uint64_t)v11);
      if (*(void *)(a2 + 16))
      {
        uint64_t v38 = v16;
        uint64_t v18 = *(void *)v11;
        uint64_t v17 = *((void *)v11 + 1);
        int v19 = v11[16];
        sub_1001ED170();
        swift_bridgeObjectRetain();
        sub_1001EC440();
        sub_1001ED190(v19);
        Swift::Int v20 = sub_1001ED1A0();
        uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v22 = v20 & ~v21;
        if ((*(void *)(v15 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
        {
          uint64_t v23 = ~v21;
          uint64_t v24 = *(void *)(v36 + 48);
          do
          {
            uint64_t v25 = v24 + 24 * v22;
            int v26 = *(unsigned __int8 *)(v25 + 16);
            if (*(void *)v25 == v18 && *(void *)(v25 + 8) == v17)
            {
              if (v19 == v26) {
                goto LABEL_3;
              }
            }
            else if ((sub_1001ED080() & 1) != 0 && ((v19 ^ v26) & 1) == 0)
            {
LABEL_3:
              swift_bridgeObjectRelease();
              uint64_t v11 = v32;
              sub_1000C1A5C((uint64_t)v32);
              a2 = v36;
              uint64_t v8 = v33;
              uint64_t v14 = v31;
              uint64_t v16 = v38;
              goto LABEL_4;
            }
            unint64_t v22 = (v22 + 1) & v23;
          }
          while (((*(void *)(v15 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) != 0);
        }
        swift_bridgeObjectRelease();
        a2 = v36;
        uint64_t v11 = v32;
        uint64_t v8 = v33;
        uint64_t v14 = v31;
        uint64_t v16 = v38;
      }
      sub_10013F604((uint64_t)v11, (uint64_t)v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1000CF84C(0, v16[2] + 1, 1);
      }
      uint64_t v16 = v39;
      unint64_t v29 = v39[2];
      unint64_t v28 = v39[3];
      if (v29 >= v28 >> 1)
      {
        sub_1000CF84C(v28 > 1, v29 + 1, 1);
        uint64_t v16 = v39;
      }
      void v16[2] = v29 + 1;
      sub_10013F604((uint64_t)v8, (uint64_t)v16 + v34 + v29 * v14);
LABEL_4:
      ++v13;
    }
    while (v13 != v37);
    return v39;
  }
  return result;
}

uint64_t sub_10013F0E0(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_10013F1A4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1001EAD30();
  swift_allocObject();
  uint64_t result = sub_1001EACE0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1001EAFA0();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_10013F220(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1001EAD30();
  swift_allocObject();
  uint64_t result = sub_1001EACE0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_10013F2A4(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_10013F0E0(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_10013F1A4((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_10013F220((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_10013F308(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_1001EAD30();
      swift_allocObject();
      sub_1001EAD00();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1001EAFA0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void *sub_10013F3A8(void *a1)
{
  id v1 = [a1 stringForKey:@"BDSPriceTracker_CardManager_cardListV1"];
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = v1;
  unint64_t v3 = sub_1001EC370();
  unint64_t v5 = v4;

  uint64_t v6 = sub_10013D88C(v3, v5);
  unint64_t v8 = v7;
  sub_10013F668();
  sub_1001EABA0();
  sub_100081714(v6, v8);
  return (void *)v10;
}

uint64_t sub_10013F604(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8CardItemVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10013F668()
{
  unint64_t result = qword_100294C18;
  if (!qword_100294C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294C18);
  }
  return result;
}

uint64_t sub_10013F6BC(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100294C28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_10013F71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  unint64_t result = sub_10013EC38((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_10013F788, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_10013F788@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10013ED5C(a1, a2);
}

uint64_t sub_10013F7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 152) = a4;
  *(void *)(v6 + 160) = a6;
  *(unsigned char *)(v6 + 272) = a5;
  *(void *)(v6 + 136) = a2;
  *(void *)(v6 + 144) = a3;
  *(void *)(v6 + 128) = a1;
  uint64_t v7 = sub_1001EAB80();
  *(void *)(v6 + 168) = v7;
  *(void *)(v6 + 176) = *(void *)(v7 - 8);
  *(void *)(v6 + 184) = swift_task_alloc();
  uint64_t v8 = sub_1001EAC00();
  *(void *)(v6 + 192) = v8;
  *(void *)(v6 + 200) = *(void *)(v8 - 8);
  *(void *)(v6 + 208) = swift_task_alloc();
  *(void *)(v6 + 216) = swift_task_alloc();
  uint64_t v9 = sub_1001EAC20();
  *(void *)(v6 + 224) = v9;
  *(void *)(v6 + 232) = *(void *)(v9 - 8);
  *(void *)(v6 + 240) = swift_task_alloc();
  return _swift_task_switch(sub_10013F93C, 0, 0);
}

uint64_t sub_10013F93C()
{
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v3 = *(char **)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 192);
  int v28 = *(unsigned __int8 *)(v0 + 272);
  sub_1001EAC60();
  swift_allocObject();
  uint64_t v8 = sub_1001EAC50();
  *(void *)(v0 + 248) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for JSONEncoder.DateEncodingStrategy.millisecondsSince1970(_:), v4);
  sub_1001EAC30();
  sub_10007DC14(&qword_100293BF0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100215310;
  sub_1001EABD0();
  sub_1001EABF0();
  *(void *)(v0 + 120) = v9;
  sub_10013FF0C(&qword_100293BF8, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
  sub_10007DC14(&qword_100293C00);
  sub_10013FF54();
  sub_1001ECC30();
  uint64_t v10 = (void (*)(uint64_t, void))sub_1001EAC10();
  sub_10010D8C4(v3, v5);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v5, v7);
  v11((uint64_t)v3, v7);
  v10(v0 + 56, 0);
  if (v28 == 1)
  {
    uint64_t v13 = *(void *)(v0 + 208);
    uint64_t v12 = *(char **)(v0 + 216);
    uint64_t v14 = *(void *)(v0 + 192);
    sub_1001EABE0();
    uint64_t v15 = (void (*)(uint64_t, void))sub_1001EAC10();
    sub_10010D8C4(v12, v13);
    v11(v13, v14);
    v11((uint64_t)v12, v14);
    v15(v0 + 88, 0);
  }
  uint64_t v17 = *(void *)(v0 + 176);
  uint64_t v16 = *(void *)(v0 + 184);
  uint64_t v18 = *(void *)(v0 + 168);
  uint64_t v20 = *(void *)(v0 + 144);
  uint64_t v19 = *(void *)(v0 + 152);
  uint64_t v21 = *(void **)(v0 + 136);
  sub_1001EABC0();
  swift_allocObject();
  uint64_t v22 = sub_1001EABB0();
  *(void *)(v0 + 256) = v22;
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v16, enum case for JSONDecoder.DateDecodingStrategy.millisecondsSince1970(_:), v18);
  sub_1001EAB90();
  *(void *)(v0 + 16) = v21;
  *(void *)(v0 + 24) = v8;
  *(void *)(v0 + 32) = v22;
  *(void *)(v0 + 40) = v20;
  *(void *)(v0 + 48) = v19;
  id v23 = v21;
  swift_retain_n();
  swift_retain_n();
  id v24 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_10013FCA0;
  uint64_t v26 = *(void *)(v0 + 160);
  return sub_10013D09C(v26);
}

uint64_t sub_10013FCA0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 136);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10013FE34, 0, 0);
}

uint64_t sub_10013FE34()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[18];
  uint64_t v8 = v0[19];
  uint64_t v4 = (void *)v0[16];
  uint64_t v5 = (void *)v0[17];

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *uint64_t v4 = v5;
  v4[1] = v1;
  v4[2] = v2;
  _OWORD v4[3] = v3;
  v4[4] = v8;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10013FF0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10013FF54()
{
  unint64_t result = qword_100293C08;
  if (!qword_100293C08)
  {
    sub_10008155C(&qword_100293C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100293C08);
  }
  return result;
}

uint64_t sub_10013FFB0@<X0>(uint64_t a1@<X8>)
{
  sub_1001EABC0();
  swift_allocObject();
  sub_1001EABB0();
  id v2 = [self books];
  id v3 = [v2 userDefaults];

  NSString v4 = sub_1001EC340();
  id v5 = [v3 dataForKey:v4];

  if (v5)
  {
    uint64_t v6 = sub_1001EAFE0();
    unint64_t v8 = v7;

    uint64_t v9 = type metadata accessor for CRDTModelRevisionInfo();
    sub_100093680(v6, v8);
    sub_100140A84((unint64_t *)&unk_100294CF8);
    sub_1001EABA0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 0, 1, v9);
    sub_100081714(v6, v8);
    sub_100081714(v6, v8);
  }
  else
  {
    uint64_t v10 = type metadata accessor for CRDTModelRevisionInfo();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
  return swift_release();
}

uint64_t sub_100140388()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReadingHistoryServiceContext()
{
  return self;
}

void *sub_1001403FC(uint64_t a1)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = 0xD000000000000029;
  result[3] = 0x8000000100221A80;
  result[4] = 0xD000000000000029;
  result[5] = 0x8000000100221AB0;
  result[6] = 0xD000000000000031;
  result[7] = 0x8000000100221AE0;
  result[8] = a1;
  return result;
}

uint64_t sub_100140478(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007DC14((uint64_t *)&unk_100291B90);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - v10;
  sub_1001EAC60();
  swift_allocObject();
  sub_1001EAC50();
  sub_1001409F4();
  uint64_t v12 = sub_1001EAC40();
  unint64_t v14 = v13;
  id v15 = [self books];
  id v16 = [v15 userDefaults];

  unint64_t v33 = v14;
  Class isa = sub_1001EAFD0().super.isa;
  NSString v18 = sub_1001EC340();
  [v16 setValue:isa forKey:v18];

  os_log_type_t v19 = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_100293A68;
  sub_10011A968(a3, (uint64_t)v11);
  BOOL v21 = os_log_type_enabled(v20, v19);
  swift_bridgeObjectRetain_n();
  uint64_t v22 = v20;
  id v23 = v22;
  if (v21)
  {
    os_log_t v32 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v35[0] = v31;
    *(_DWORD *)uint64_t v24 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1001A8090(a1, a2, v35);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    sub_10011A968((uint64_t)v11, (uint64_t)v9);
    uint64_t v25 = type metadata accessor for CRDTModelRevisionInfo();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v9, 1, v25) == 1)
    {
      sub_100140AC8((uint64_t)v9);
      unint64_t v26 = 0xE300000000000000;
      uint64_t v27 = 7104878;
    }
    else
    {
      uint64_t v27 = CRDTModelRevisionInfo.description.getter();
      unint64_t v26 = v29;
      sub_1000B3544((uint64_t)v9);
    }
    uint64_t v34 = sub_1001A8090(v27, v26, v35);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    sub_100140AC8((uint64_t)v11);
    os_log_t v30 = v32;
    _os_log_impl((void *)&_mh_execute_header, v32, v19, "ReadingHistoryServiceContext saved revisionInfo for %s: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100081714(v12, v33);

    return swift_release();
  }
  else
  {
    sub_100081714(v12, v33);
    swift_bridgeObjectRelease_n();

    swift_release();
    return sub_100140AC8((uint64_t)v11);
  }
}

unint64_t sub_1001409F4()
{
  unint64_t result = qword_100294D08;
  if (!qword_100294D08)
  {
    sub_10008155C((uint64_t *)&unk_100291B90);
    sub_100140A84((unint64_t *)&unk_100294D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294D08);
  }
  return result;
}

uint64_t sub_100140A84(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CRDTModelRevisionInfo();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100140AC8(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100291B90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id CloudSyncDiagnosticCloudFetcher.__allocating_init(cloudKitDatabaseController:)(void *a1)
{
  id v3 = (char *)objc_allocWithZone(v1);
  sub_1001EB550();
  *(void *)&v3[OBJC_IVAR____TtC14bookdatastored31CloudSyncDiagnosticCloudFetcher_cloudKitDatabaseController] = a1;
  id v4 = a1;

  v7.receiver = v3;
  v7.super_class = v1;
  id v5 = objc_msgSendSuper2(&v7, "init");

  return v5;
}

uint64_t CloudSyncDiagnosticCloudFetcher.fetchZone(zoneName:recordBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  uint64_t v5[2] = a1;
  return _swift_task_switch(sub_100140C10, 0, 0);
}

uint64_t sub_100140C10()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 24);
  sub_100081668(0, (unint64_t *)&unk_100296550);
  long long v11 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = sub_1001EC370();
  id v5 = v4;
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v2;
  v13._object = v1;
  v14._countAndFlagsBits = v3;
  v14._object = v5;
  Class isa = sub_1001EC920(v13, v14).super.isa;
  *(void *)(v0 + 56) = isa;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 64) = v7;
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = isa;
  *(_OWORD *)(v8 + 32) = v11;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100140DAC;
  return withCheckedContinuation<A>(isolation:function:_:)(v9, 0, 0, 0xD00000000000001ELL, 0x8000000100225B90, sub_100141548, v8, (char *)&type metadata for () + 8);
}

uint64_t sub_100140DAC()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100140EE0, 0, 0);
}

uint64_t sub_100140EE0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id CloudSyncDiagnosticCloudFetcher.init(cloudKitDatabaseController:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = v1;
  sub_1001EB550();
  *(void *)&v4[OBJC_IVAR____TtC14bookdatastored31CloudSyncDiagnosticCloudFetcher_cloudKitDatabaseController] = a1;
  id v5 = a1;

  v8.receiver = v4;
  v8.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v8, "init");

  return v6;
}

uint64_t CloudSyncDiagnosticCloudFetcher.fetchZone(zoneID:recordBlock:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  _OWORD v4[3] = a2;
  return _swift_task_switch(sub_1001410F4, 0, 0);
}

uint64_t sub_1001410F4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 48) = v2;
  long long v6 = *(_OWORD *)(v0 + 16);
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(void *)(v3 + 40) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100141224;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000001ELL, 0x8000000100225B90, sub_100142DBC, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100141224()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100141358, 0, 0);
}

uint64_t sub_100141358()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014136C()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001413A4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_10007DC14(&qword_100294D78);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v13 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v15 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    CloudSyncDiagnosticCloudFetcher._fetchZoneChanges(zoneID:recordBlock:completion:)(a3, a4, a5, (uint64_t)sub_100142D54, v15);
    swift_release();
  }
  else
  {
    sub_1001EC670();
  }
}

void sub_100141548(uint64_t a1)
{
  sub_1001413A4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void CloudSyncDiagnosticCloudFetcher._fetchZoneChanges(zoneID:recordBlock:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v45 = a2;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v46 = a3;
  uint64_t v43 = sub_1001EB560();
  uint64_t v8 = *(void *)(v43 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v43);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)CKFetchRecordZoneChangesConfiguration) init];
  [v11 setPreviousServerChangeToken:0];
  sub_100081668(0, &qword_100294D30);
  sub_10007DC14(&qword_100293470);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100217610;
  *(void *)(v12 + 32) = a1;
  uint64_t v51 = (void *)v12;
  sub_1001EC600();
  Swift::String v13 = v51;
  sub_10007DC14(&qword_100294D38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215320;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = v11;
  id v15 = a1;
  id v47 = v11;
  v52.is_nil = sub_1001219A4(inited);
  v52.value._rawValue = v13;
  Class isa = sub_1001ECA70(v52, v53).super.super.super.super.isa;
  uint64_t v50 = v6 + OBJC_IVAR____TtC14bookdatastored31CloudSyncDiagnosticCloudFetcher_logger;
  long long v40 = *(void (**)(char *))(v8 + 16);
  uint64_t v17 = v43;
  v40(v10);
  v36[1] = v8 + 16;
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  uint64_t v38 = v18 | 7;
  uint64_t v39 = v19 + v9;
  unint64_t v20 = (v19 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = v20;
  unint64_t v42 = v20 + 16;
  uint64_t v21 = swift_allocObject();
  v36[0] = v19;
  uint64_t v37 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v37(v21 + v19, v10, v17);
  uint64_t v22 = (void *)(v21 + v20);
  uint64_t v23 = v46;
  *uint64_t v22 = v45;
  v22[1] = v23;
  swift_retain();
  sub_1001ECA80();
  uint64_t v24 = v10;
  uint64_t v25 = v10;
  uint64_t v26 = v50;
  uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v40;
  ((void (*)(char *, uint64_t, uint64_t))v40)(v25, v50, v17);
  uint64_t v28 = swift_allocObject() + v19;
  unint64_t v29 = v37;
  v37(v28, v24, v17);
  sub_1001ECA90();
  v27(v24, v26, v17);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v36[0];
  v29(v30 + v36[0], v24, v17);
  sub_1001ECA60();
  v27(v24, v50, v17);
  uint64_t v32 = swift_allocObject();
  v29(v32 + v31, v24, v17);
  unint64_t v33 = (void *)(v32 + v41);
  uint64_t v34 = v49;
  *unint64_t v33 = v48;
  v33[1] = v34;
  swift_retain();
  sub_1001ECA50();
  id v35 = [*(id *)(v44 + OBJC_IVAR____TtC14bookdatastored31CloudSyncDiagnosticCloudFetcher_cloudKitDatabaseController) database];
  [v35 addOperation:isa];
}

void sub_100141980(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(id))
{
  if (a3)
  {
    sub_100142CA8(a2, 1);
    sub_100142CA8(a2, 1);
    id v21 = a1;
    sub_100142CA8(a2, 1);
    id v22 = v21;
    uint64_t v23 = sub_1001EB540();
    os_log_type_t v24 = sub_1001EC8F0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412546;
      id v27 = v22;
      sub_1001ECBC0();
      *uint64_t v26 = v22;

      *(_WORD *)(v25 + 12) = 2112;
      swift_errorRetain();
      uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
      sub_1001ECBC0();
      v26[1] = v30;
      sub_100142CB4(a2, 1);
      sub_100142CB4(a2, 1);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "recordWasChangedBlock - %@, error:%@", (uint8_t *)v25, 0x16u);
      sub_10007DC14(&qword_100293190);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100142CB4(a2, 1);
    }
    else
    {
      sub_100142CB4(a2, 1);

      sub_100142CB4(a2, 1);
      sub_100142CB4(a2, 1);
    }
  }
  else
  {
    uint64_t v8 = self;
    id v9 = a2;
    id v10 = [v8 localIdentifierFromRecord:v9];
    uint64_t v11 = sub_1001EC370();
    unint64_t v13 = v12;

    sub_100142CA8(a2, 0);
    id v14 = a1;
    sub_100142CA8(a2, 0);
    id v15 = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1001EB540();
    os_log_type_t v17 = sub_1001EC8D0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138412802;
      log = v16;
      id v19 = v15;
      sub_1001ECBC0();
      void *v28 = v15;

      *(_WORD *)(v18 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1001A8090(v11, v13, &v30);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2112;
      id v20 = v9;
      sub_1001ECBC0();
      v28[1] = a2;
      sub_100142CB4(a2, 0);
      sub_100142CB4(a2, 0);
      _os_log_impl((void *)&_mh_execute_header, log, v17, "recordWasChangedBlock - %@ (localId:%s) %@", (uint8_t *)v18, 0x20u);
      sub_10007DC14(&qword_100293190);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_100142CB4(a2, 0);
      sub_100142CB4(a2, 0);
    }
    a5(v9);
    sub_100142CB4(a2, 0);
  }
}

void sub_100141E68(void *a1, void *a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(sub_1001EB560() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  id v9 = *(void (**)(id))(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_100141980(a1, a2, v6, v3 + v8, v9);
}

void sub_100141F20(void *a1, uint64_t a2, unint64_t a3)
{
  id v5 = a1;
  swift_bridgeObjectRetain_n();
  id v6 = v5;
  oslog = sub_1001EB540();
  os_log_type_t v7 = sub_1001EC8D0();
  if (os_log_type_enabled(oslog, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    id v9 = (void *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    uint64_t v10 = a2;
    id v11 = v6;
    sub_1001ECBC0();
    *id v9 = v6;

    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1001A8090(v10, a3, &v13);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, oslog, v7, "recordWithIDWasDeletedBlock - %@ (%s)", (uint8_t *)v8, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

void sub_100142150(void *a1, uint64_t a2, unint64_t a3)
{
  sub_1001EB560();
  sub_100141F20(a1, a2, a3);
}

void sub_1001421D8(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a5 & 0x100) != 0)
  {
    sub_100142C00(a2, a3, a4, a5, 1);
    swift_errorRetain();
    swift_errorRetain();
    id v11 = sub_1001EB540();
    os_log_type_t v12 = sub_1001EC8F0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      os_log_t osloga = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      swift_errorRetain();
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      sub_1001ECBC0();
      osloga->Class isa = (Class)v16;
      sub_100142C54(a2, a3, a4, a5, 1);
      sub_100142C54(a2, a3, a4, a5, 1);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "recordZoneFetchCompletionBlock - error: %@", v13, 0xCu);
      sub_10007DC14(&qword_100293190);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100142C54(a2, a3, a4, a5, 1);
    }
    else
    {
      sub_100142C54(a2, a3, a4, a5, 1);

      sub_100142C54(a2, a3, a4, a5, 1);
      sub_100142C54(a2, a3, a4, a5, 1);
    }
  }
  else
  {
    oslog = sub_1001EB540();
    os_log_type_t v6 = sub_1001EC910();
    if (os_log_type_enabled(oslog, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v7 = 67109120;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "recordZoneFetchCompletionBlock - moreComing:%{BOOL}d", v7, 8u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_1001424EC()
{
  uint64_t v1 = sub_1001EB560();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

void sub_10014257C(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, __int16 a5)
{
  uint64_t v9 = a5 & 0x1FF;
  sub_1001EB560();
  sub_1001421D8(a1, a2, a3, a4, v9);
}

uint64_t sub_100142624(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (a2)
  {
    sub_100142BE8(a1, 1);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = sub_1001EB540();
    os_log_type_t v9 = sub_1001EC8F0();
    if (!os_log_type_enabled(v5, v9))
    {
      sub_100142BF4(a1, 1);

      sub_100142BF4(a1, 1);
      uint64_t v12 = sub_100142BF4(a1, 1);
      return a4(v12);
    }
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    swift_errorRetain();
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    sub_1001ECBC0();
    *id v11 = v14;
    sub_100142BF4(a1, 1);
    sub_100142BF4(a1, 1);
    _os_log_impl((void *)&_mh_execute_header, v5, v9, "fetchRecordZoneChangesCompletionBlock - error:%@", v10, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100142BF4(a1, 1);
  }
  else
  {
    uint64_t v5 = sub_1001EB540();
    os_log_type_t v6 = sub_1001EC910();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "fetchRecordZoneChangesCompletionBlock", v7, 2u);
      swift_slowDealloc();
    }
  }

  return a4(v12);
}

uint64_t sub_100142850()
{
  uint64_t v1 = sub_1001EB560();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001428F8(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_1001EB560() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  os_log_type_t v7 = *(uint64_t (**)(uint64_t))(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_100142624(a1, v4, v2 + v6, v7);
}

Swift::Void __swiftcall CloudSyncDiagnosticCloudFetcher._addOperation(_:)(CKDatabaseOperation a1)
{
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC14bookdatastored31CloudSyncDiagnosticCloudFetcher_cloudKitDatabaseController) database];
  [v3 addOperation:a1.super.super.super.isa];
}

void CloudSyncDiagnosticCloudFetcher.init()()
{
}

uint64_t sub_100142AF8()
{
  return type metadata accessor for CloudSyncDiagnosticCloudFetcher();
}

uint64_t type metadata accessor for CloudSyncDiagnosticCloudFetcher()
{
  uint64_t result = qword_100294D68;
  if (!qword_100294D68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100142B4C()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100142BE8(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100142BF4(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100142C00(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return swift_errorRetain();
  }
  else
  {
    id v9 = a1;
    return sub_10009366C(a2, a3);
  }
}

uint64_t sub_100142C54(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return swift_errorRelease();
  }
  else
  {

    return sub_100081700(a2, a3);
  }
}

id sub_100142CA8(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

void sub_100142CB4(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_100142CC0()
{
  uint64_t v1 = sub_10007DC14(&qword_100294D78);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100142D54()
{
  return sub_1001EC670();
}

uint64_t sub_100142DC0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10007DC14(&qword_100294E48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_100144B68();
  sub_1001ED1F0();
  uint64_t v9 = v3[1];
  char v10 = *((unsigned char *)v3 + 16);
  uint64_t v13 = *v3;
  uint64_t v14 = v9;
  char v15 = v10;
  v12[7] = 0;
  sub_100144CD8();
  sub_1001ED020();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1001ECFE0();
    _s4DealVMa();
    LOBYTE(v13) = 2;
    sub_1001EAF60();
    sub_100144D2C((unint64_t *)&qword_100292F38, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_1001ED020();
    LOBYTE(v13) = 3;
    sub_1001EB0C0();
    sub_100144D2C(&qword_100292138, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001ED020();
    LOBYTE(v13) = 4;
    sub_1001ED000();
    LOBYTE(v13) = 5;
    sub_1001ECFE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100143098@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = sub_1001EB0C0();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EAF60();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100294E28);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  __chkstk_darwin(v8);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s4DealVMa();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  unint64_t v42 = a1;
  sub_100094758(a1, v15);
  sub_100144B68();
  unint64_t v41 = v11;
  uint64_t v16 = v43;
  sub_1001ED1D0();
  if (v16) {
    return sub_1000947F0((uint64_t)v42);
  }
  unint64_t v33 = v4;
  uint64_t v34 = v7;
  uint64_t v43 = (int *)v12;
  uint64_t v17 = v38;
  char v47 = 0;
  sub_100144BBC();
  uint64_t v18 = v39;
  sub_1001ECFA0();
  uint64_t v19 = v45;
  char v20 = v46;
  uint64_t v21 = (uint64_t)v14;
  *(void *)uint64_t v14 = v44;
  *((void *)v14 + 1) = v19;
  unsigned char v14[16] = v20;
  LOBYTE(v44) = 1;
  *((void *)v14 + 3) = sub_1001ECF60();
  *((void *)v14 + 4) = v22;
  LOBYTE(v44) = 2;
  sub_100144D2C(&qword_100294E40, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v23 = v34;
  sub_1001ECFA0();
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v21 + v43[6], v23, v5);
  LOBYTE(v44) = 3;
  sub_100144D2C(&qword_100292148, (void (*)(uint64_t))&type metadata accessor for Date);
  os_log_type_t v24 = v33;
  uint64_t v34 = 0;
  sub_1001ECFA0();
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v21 + v43[7], v24, v17);
  LOBYTE(v44) = 4;
  sub_1001ECF80();
  uint64_t v25 = v43;
  *(void *)(v21 + v43[8]) = v26;
  LOBYTE(v44) = 5;
  uint64_t v27 = sub_1001ECF60();
  unint64_t v33 = v28;
  uint64_t v29 = v27;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v18);
  uint64_t v30 = (uint64_t *)(v21 + v25[9]);
  uint64_t v31 = v33;
  uint64_t *v30 = v29;
  v30[1] = (uint64_t)v31;
  sub_100144C10(v21, v35, (uint64_t (*)(void))_s4DealVMa);
  sub_1000947F0((uint64_t)v42);
  return sub_100144C78(v21, (uint64_t (*)(void))_s4DealVMa);
}

unint64_t sub_1001436C0()
{
  unint64_t result = 0x44496D657469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 7107189;
      break;
    case 3:
      unint64_t result = 1702125924;
      break;
    case 4:
      unint64_t result = 0x636E657265666572;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100143780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100145010(a1, a2);
  *a3 = result;
  return result;
}

void sub_1001437A8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1001437B4(uint64_t a1)
{
  unint64_t v2 = sub_100144B68();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001437F0(uint64_t a1)
{
  unint64_t v2 = sub_100144B68();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10014382C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100143098(a1, a2);
}

uint64_t sub_100143844(void *a1)
{
  return sub_100142DC0(a1);
}

uint64_t sub_100143860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v58 = a2;
  uint64_t v62 = a6;
  uint64_t v14 = _s11TrackedItemVMa();
  __chkstk_darwin(v14);
  uint64_t v59 = (uint64_t)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007DC14(&qword_100294D80);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (double *)((char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1001EAF60();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = a3;
  if (!a3)
  {
    sub_100144C78(a5, (uint64_t (*)(void))_s11TrackedItemVMa);
    sub_1000816A4(a4, &qword_100295230);
    uint64_t v28 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(a1, v28);
    goto LABEL_11;
  }
  uint64_t v26 = v25;
  uint64_t v60 = a1;
  sub_1000936F8(a4, (uint64_t)v21, &qword_100295230);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100144C78(a5, (uint64_t (*)(void))_s11TrackedItemVMa);
    sub_1000816A4(a4, &qword_100295230);
    uint64_t v27 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v60, v27);
    sub_1000816A4((uint64_t)v21, &qword_100295230);
LABEL_11:
    uint64_t v36 = v62;
    uint64_t v37 = _s4DealVMa();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
  }
  uint64_t v57 = a4;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v29(v26, v21, v22);
  uint64_t v30 = a5;
  unint64_t v31 = *(void *)(a5 + 40);
  if (v31 < 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v56 = (void (*)(uint64_t, char *, uint64_t))v29;
  uint64_t v32 = *(uint64_t *)(a5 + 24);
  uint64_t v33 = *(void *)(a5 + 32);
  sub_1000936F8(v30 + *(int *)(v14 + 24), (uint64_t)v18, &qword_100294D80);
  uint64_t v34 = _s11RecentPriceVMa();
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v18, 1, v34) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1000816A4((uint64_t)v18, &qword_100294D80);
LABEL_9:
    sub_100144C78(v30, (uint64_t (*)(void))_s11TrackedItemVMa);
    sub_1000816A4(v57, &qword_100295230);
    uint64_t v35 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v60, v35);
LABEL_10:
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    goto LABEL_11;
  }
  double v39 = *v18;
  swift_bridgeObjectRetain();
  sub_100144C78((uint64_t)v18, (uint64_t (*)(void))_s11RecentPriceVMa);
  if (*(double *)&v32 <= 0.0)
  {
    swift_bridgeObjectRelease();
    sub_100144114(v32, v33, v31);
    goto LABEL_9;
  }
  uint64_t v40 = v60;
  if (a7 == 0.0 && a8 == 0.0)
  {
    swift_bridgeObjectRelease();
    sub_100144114(v32, v33, v31);
    sub_100144C78(v30, (uint64_t (*)(void))_s11TrackedItemVMa);
    sub_1000816A4(v57, &qword_100295230);
LABEL_16:
    uint64_t v41 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
    goto LABEL_10;
  }
  uint64_t v55 = v32;
  uint64_t v42 = v59;
  sub_100144C10(v30, v59, (uint64_t (*)(void))_s11TrackedItemVMa);
  if (v39 == 0.0)
  {
    sub_1000816A4(v57, &qword_100295230);
    sub_100144C78(v42, (uint64_t (*)(void))_s11TrackedItemVMa);
  }
  else
  {
    double v43 = sub_1001BA540();
    double v45 = v44;
    sub_1000816A4(v57, &qword_100295230);
    sub_100144C78(v42, (uint64_t (*)(void))_s11TrackedItemVMa);
    if (v43 < a7 || v45 < a8)
    {
      swift_bridgeObjectRelease();
      sub_100144114(v55, v33, v31);
      sub_100144C78(v30, (uint64_t (*)(void))_s11TrackedItemVMa);
      goto LABEL_16;
    }
  }
  uint64_t v47 = *(void *)v30;
  uint64_t v46 = *(void *)(v30 + 8);
  char v48 = *(unsigned char *)(v30 + 16);
  swift_bridgeObjectRetain();
  sub_100144C78(v30, (uint64_t (*)(void))_s11TrackedItemVMa);
  uint64_t v49 = (int *)_s4DealVMa();
  uint64_t v50 = v62;
  v56(v62 + v49[6], v26, v22);
  *(void *)uint64_t v50 = v47;
  *(void *)(v50 + 8) = v46;
  *(unsigned char *)(v50 + 16) = v48;
  uint64_t v51 = v61;
  *(void *)(v50 + 24) = v58;
  *(void *)(v50 + 32) = v51;
  uint64_t v52 = v50 + v49[7];
  uint64_t v53 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v52, v60, v53);
  *(void *)(v50 + v49[8]) = v55;
  uint64_t v54 = (uint64_t *)(v50 + v49[9]);
  *uint64_t v54 = v33;
  v54[1] = v31;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v49 - 1) + 56))(v50, 0, 1, v49);
}

uint64_t sub_100143F94(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v4 != v5) {
      return 0;
    }
  }
  else
  {
    char v7 = sub_1001ED080();
    uint64_t result = 0;
    if (v7 & 1) == 0 || ((v4 ^ v5)) {
      return result;
    }
  }
  BOOL v9 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (v9 || (v10 = sub_1001ED080(), uint64_t result = 0, (v10 & 1) != 0))
  {
    uint64_t v11 = _s4DealVMa();
    if ((sub_1001EAF00() & 1) != 0
      && (sub_1001EB090() & 1) != 0
      && *(double *)(a1 + *(int *)(v11 + 32)) == *(double *)(a2 + *(int *)(v11 + 32)))
    {
      uint64_t v12 = *(int *)(v11 + 36);
      uint64_t v13 = *(void *)(a1 + v12);
      uint64_t v14 = *(void *)(a1 + v12 + 8);
      uint64_t v15 = (void *)(a2 + v12);
      if (v13 == *v15 && v14 == v15[1]) {
        return 1;
      }
      return sub_1001ED080();
    }
    return 0;
  }
  return result;
}

uint64_t _s4DealVMa()
{
  uint64_t result = qword_100294DE0;
  if (!qword_100294DE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100144114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100144128(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    uint64_t v9 = a3[6];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v12 = sub_1001EAF60();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_1001EB0C0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1001442A0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100144378(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001EAF60();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001444A0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001445EC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_1001446E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1001EB0C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001447FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100144810);
}

uint64_t sub_100144810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001EAF60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1001EB0C0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10014493C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100144950);
}

uint64_t sub_100144950(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1001EAF60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1001EB0C0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_100144A7C()
{
  uint64_t result = sub_1001EAF60();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001EB0C0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_100144B68()
{
  unint64_t result = qword_100294E30;
  if (!qword_100294E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294E30);
  }
  return result;
}

unint64_t sub_100144BBC()
{
  unint64_t result = qword_100294E38;
  if (!qword_100294E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294E38);
  }
  return result;
}

uint64_t sub_100144C10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100144C78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100144CD8()
{
  unint64_t result = qword_100294E50;
  if (!qword_100294E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294E50);
  }
  return result;
}

uint64_t sub_100144D2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s4DealV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s4DealV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100144ED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4DealV10CodingKeysOMa()
{
  return &_s4DealV10CodingKeysON;
}

unint64_t sub_100144F0C()
{
  unint64_t result = qword_100294E58;
  if (!qword_100294E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294E58);
  }
  return result;
}

unint64_t sub_100144F64()
{
  unint64_t result = qword_100294E60;
  if (!qword_100294E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294E60);
  }
  return result;
}

unint64_t sub_100144FBC()
{
  unint64_t result = qword_100294E68;
  if (!qword_100294E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294E68);
  }
  return result;
}

uint64_t sub_100145010(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xEE00656369725065 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000100225C40)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void *ReadingHistoryBackupManager.__allocating_init(transactionProvider:)(uint64_t a1)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = 0xD000000000000055;
  result[3] = 0x80000001002212C0;
  result[4] = 0xD000000000000012;
  result[5] = 0x8000000100221320;
  result[6] = 0xD000000000000013;
  result[7] = 0x8000000100221340;
  result[8] = 0x736B6F6F42;
  result[9] = 0xE500000000000000;
  result[10] = 0xD000000000000019;
  result[11] = 0x8000000100221360;
  result[12] = a1;
  return result;
}

uint64_t ReadingHistoryBackupManager.backup(name:)(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  sub_10007DC14(&qword_100295230);
  v3[11] = swift_task_alloc();
  uint64_t v4 = sub_1001EAF60();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  return _swift_task_switch(sub_100145450, 0, 0);
}

uint64_t sub_100145450()
{
  uint64_t v54 = v0;
  os_log_type_t v1 = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_100293A68;
  if (os_log_type_enabled((os_log_t)qword_100293A68, v1))
  {
    uint64_t v4 = v0[8];
    unint64_t v3 = v0[9];
    swift_bridgeObjectRetain_n();
    log = v2;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    if (v3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 7104878;
    }
    if (v3) {
      unint64_t v7 = v3;
    }
    else {
      unint64_t v7 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    v0[7] = sub_1001A8090(v6, v7, &v53);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v1, "ReadingHistoryBackupManager backup: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[13];
  uint64_t v10 = v0[11];
  uint64_t v12 = v0[8];
  uint64_t v11 = v0[9];
  id v13 = [*(id *)(v0[10] + 96) createTransactionWithName:"com.apple.bookdatastored.ReadingHistoryBackupManager.backup"];
  sub_1001484F8(v12, v11, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    sub_1000816A4(v0[11], &qword_100295230);
    sub_100149204();
    swift_allocError();
    *uint64_t v14 = 2;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[11], v0[12]);
    id v15 = [self defaultManager];
    sub_1001EAF30();
    NSString v16 = sub_1001EC340();
    swift_bridgeObjectRelease();
    unsigned __int8 v17 = [v15 fileExistsAtPath:v16];

    uint64_t v19 = v0[14];
    if (v17)
    {
      uint64_t v20 = v0[13];
      os_log_t loga = (os_log_t)v0[12];
      sub_1001EC8F0();
      uint64_t v21 = (void *)qword_100293A68;
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_100215320;
      id v23 = v21;
      uint64_t v24 = sub_1001EAF30();
      uint64_t v26 = v25;
      *(void *)(v22 + 56) = &type metadata for String;
      *(void *)(v22 + 64) = sub_10007DC58();
      *(void *)(v22 + 32) = v24;
      *(void *)(v22 + 40) = v26;
      sub_1001EB530();
      swift_bridgeObjectRelease();

      sub_100149204();
      swift_allocError();
      *uint64_t v27 = 0;
      swift_willThrow();

      (*(void (**)(uint64_t, os_log_t))(v20 + 8))(v19, loga);
    }
    else
    {
      sub_1001EAEC0(v18);
      uint64_t v29 = v28;
      v0[5] = 0;
      unsigned int v30 = [v15 createDirectoryAtURL:v28 withIntermediateDirectories:1 attributes:0 error:v0 + 5];

      unint64_t v31 = (void *)v0[5];
      uint64_t v32 = v0[13];
      uint64_t v33 = v0[14];
      if (v30)
      {
        id v34 = v31;
        sub_100148C2C(v33);
        uint64_t v35 = v0[14];
        uint64_t v36 = v0[12];

        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v35, v36);
        swift_task_dealloc();
        swift_task_dealloc();
        char v48 = (uint64_t (*)(void))v0[1];
        goto LABEL_19;
      }
      os_log_t logb = (os_log_t)v0[12];
      id v37 = v31;
      sub_1001EAE60();

      swift_willThrow();
      sub_1001EC8F0();
      uint64_t v38 = (void *)qword_100293A68;
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_100215310;
      id v40 = v38;
      uint64_t v41 = sub_1001EAF30();
      uint64_t v49 = v33;
      uint64_t v43 = v42;
      *(void *)(v39 + 56) = &type metadata for String;
      unint64_t v44 = sub_10007DC58();
      *(void *)(v39 + 64) = v44;
      *(void *)(v39 + 32) = v41;
      *(void *)(v39 + 40) = v43;
      swift_getErrorValue();
      uint64_t v45 = sub_1001ED110();
      *(void *)(v39 + 96) = &type metadata for String;
      *(void *)(v39 + 104) = v44;
      *(void *)(v39 + 72) = v45;
      *(void *)(v39 + 80) = v46;
      sub_1001EB530();
      swift_bridgeObjectRelease();

      swift_willThrow();
      (*(void (**)(uint64_t, os_log_t))(v32 + 8))(v49, logb);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  char v48 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v48();
}

uint64_t sub_100145A94()
{
  v1[3] = v0;
  sub_10007DC14(&qword_100295230);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100145B88, 0, 0);
}

uint64_t sub_100145B88()
{
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_100293A68;
  sub_1001EB530();

  id v2 = objc_msgSend(self, "bu_booksGroupContainerURL");
  uint64_t v3 = v0[7];
  if (v2)
  {
    uint64_t v4 = v2;
    sub_1001EAF10();

    uint64_t v5 = sub_1001EAF60();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 0, 1, v5);
  }
  else
  {
    uint64_t v5 = sub_1001EAF60();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  }
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[5];
  sub_1000935F8(v0[7], v6, &qword_100295230);
  sub_1000936F8(v6, v7, &qword_100295230);
  sub_1001EAF60();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v9(v7, 1, v5) == 1)
  {
    sub_1000816A4(v0[5], &qword_100295230);
    uint64_t v10 = 1;
  }
  else
  {
    uint64_t v11 = v0[5];
    sub_1001EAED0();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v5);
    uint64_t v10 = 0;
  }
  uint64_t v12 = v0[6];
  uint64_t v13 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v12, v10, 1, v5);
  sub_1000936F8(v12, v13, &qword_100295230);
  if (v9(v13, 1, v5) == 1)
  {
    uint64_t v14 = v0[8];
    uint64_t v15 = v0[6];
    sub_1000816A4(v0[4], &qword_100295230);
    sub_1001EC8F0();
    id v16 = (id)qword_100293A68;
    sub_1001EB530();

    sub_100149204();
    swift_allocError();
    *unsigned __int8 v17 = 2;
    swift_willThrow();
LABEL_19:
    sub_1000816A4(v15, &qword_100295230);
    sub_1000816A4(v14, &qword_100295230);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = (uint64_t (*)(void))v0[1];
    return v35();
  }
  uint64_t v18 = v0[4];
  sub_1001EAF30();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v18, v5);
  id v19 = [self defaultManager];
  NSString v20 = sub_1001EC340();
  swift_bridgeObjectRelease();
  v0[2] = 0;
  id v21 = [v19 contentsOfDirectoryAtPath:v20 error:v0 + 2];

  uint64_t v22 = (void *)v0[2];
  if (!v21)
  {
    uint64_t v14 = v0[8];
    uint64_t v15 = v0[6];
    id v34 = v22;
    sub_1001EAE60();

    swift_willThrow();
    goto LABEL_19;
  }
  id v40 = v19;
  uint64_t v23 = sub_1001EC5E0();
  id v24 = v22;

  uint64_t v25 = *(void *)(v23 + 16);
  if (v25)
  {
    uint64_t v26 = sub_1000A6B10(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v27 = v26[2];
    uint64_t v28 = 2 * v27;
    uint64_t v29 = (uint64_t *)(v23 + 40);
    do
    {
      uint64_t v31 = *(v29 - 1);
      uint64_t v30 = *v29;
      unint64_t v32 = v26[3];
      swift_bridgeObjectRetain();
      if (v27 >= v32 >> 1) {
        uint64_t v26 = sub_1000A6B10((void *)(v32 > 1), v27 + 1, 1, v26);
      }
      v26[2] = v27 + 1;
      uint64_t v33 = &v26[v28];
      v33[4] = v31;
      v33[5] = v30;
      v28 += 2;
      v29 += 2;
      ++v27;
      --v25;
    }
    while (v25);
  }
  else
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  uint64_t v37 = v0[8];
  uint64_t v38 = v0[6];

  swift_bridgeObjectRelease();
  sub_1000816A4(v38, &qword_100295230);
  sub_1000816A4(v37, &qword_100295230);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = (uint64_t (*)(void *))v0[1];
  return v39(v26);
}

uint64_t ReadingHistoryBackupManager.restore(name:)(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  sub_10007DC14(&qword_100295230);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  uint64_t v4 = sub_1001EAF60();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  return _swift_task_switch(sub_1001462F8, 0, 0);
}

uint64_t sub_1001462F8()
{
  uint64_t v82 = v0;
  os_log_type_t v1 = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_100293A68;
  if (os_log_type_enabled((os_log_t)qword_100293A68, v1))
  {
    uint64_t v3 = v0[7];
    unint64_t v4 = v0[8];
    swift_bridgeObjectRetain_n();
    uint64_t v5 = v2;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v81 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    v0[6] = sub_1001A8090(v3, v4, &v81);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v1, "ReadingHistoryBackupManager restore: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v8 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v9 = v0[13];
  uint64_t v10 = v0[8];
  uint64_t v11 = v0[7];
  id v12 = [*(id *)(v0[9] + 96) createTransactionWithName:"com.apple.bookdatastored.ReadingHistoryBackupManager.restore"];
  sub_1001484F8(v11, v10, v9);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v13(v9, 1, v8) == 1)
  {
    sub_1000816A4(v0[13], &qword_100295230);
    sub_100149204();
    swift_allocError();
    *uint64_t v14 = 2;
    swift_willThrow();
  }
  else
  {
    uint64_t v80 = v12;
    uint64_t v15 = *(void (**)(void, void, uint64_t))(v0[15] + 32);
    v15(v0[20], v0[13], v0[14]);
    id v16 = objc_msgSend(self, "bu_booksGroupContainerURL");
    if (v16)
    {
      unsigned __int8 v17 = v16;
      sub_1001EAF10();

      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v18 = 1;
    }
    uint64_t v19 = v0[14];
    uint64_t v21 = v0[11];
    uint64_t v20 = v0[12];
    uint64_t v22 = v0[10];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[15] + 56))(v21, v18, 1, v19);
    sub_1000935F8(v21, v20, &qword_100295230);
    sub_1000936F8(v20, v22, &qword_100295230);
    int v23 = v13(v22, 1, v19);
    uint64_t v24 = v0[20];
    if (v23 == 1)
    {
      uint64_t v26 = v0[14];
      uint64_t v25 = v0[15];
      uint64_t v27 = v0[12];
      sub_1000816A4(v0[10], &qword_100295230);
      sub_1001EC8F0();
      id v28 = (id)qword_100293A68;
      sub_1001EB530();

      sub_100149204();
      swift_allocError();
      unsigned char *v29 = 1;
      swift_willThrow();

      sub_1000816A4(v27, &qword_100295230);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    }
    else
    {
      uint64_t v30 = v0[17];
      uint64_t v32 = v0[14];
      uint64_t v31 = v0[15];
      v15(v0[19], v0[10], v32);
      sub_1001EAED0();
      sub_1001EAEE0();
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v33(v30, v32);
      id v34 = [self defaultManager];
      sub_1001EAF30();
      NSString v35 = sub_1001EC340();
      swift_bridgeObjectRelease();
      unsigned int v36 = [v34 fileExistsAtPath:v35];

      if (v36)
      {
        uint64_t v37 = v0[17];
        uint64_t v38 = v0[14];
        sub_1001EAED0();
        sub_1001EAEE0();
        v33(v37, v38);
        sub_1001EAF30();
        uint64_t v39 = v33;
        NSString v40 = sub_1001EC340();
        swift_bridgeObjectRelease();
        unsigned int v41 = [v34 fileExistsAtPath:v40];

        uint64_t v42 = v34;
        if (v41)
        {
          uint64_t v75 = v39;
          sub_100148D0C(v0[18], v0[16]);
          uint64_t v44 = v0[19];
          uint64_t v43 = v0[20];
          uint64_t v72 = v0[18];
          uint64_t v66 = v0[16];
          uint64_t v67 = v0[14];
          uint64_t v68 = v0[12];

          v75(v66, v67);
          v75(v72, v67);
          v75(v44, v67);
          sub_1000816A4(v68, &qword_100295230);
          v75(v43, v67);

          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v69 = (uint64_t (*)(void))v0[1];
          goto LABEL_18;
        }
        uint64_t v70 = v0[18];
        uint64_t v71 = v0[19];
        uint64_t v56 = v0[16];
        uint64_t v57 = v0[14];
        uint64_t v74 = v0[12];
        uint64_t v77 = v0[20];
        sub_1001EC8F0();
        uint64_t v79 = v34;
        uint64_t v58 = (void *)qword_100293A68;
        sub_10007DC14((uint64_t *)&unk_100291A20);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_100215320;
        id v60 = v58;
        uint64_t v61 = sub_1001EAF30();
        uint64_t v63 = v62;
        *(void *)(v59 + 56) = &type metadata for String;
        *(void *)(v59 + 64) = sub_10007DC58();
        *(void *)(v59 + 32) = v61;
        *(void *)(v59 + 40) = v63;
        sub_1001EB530();
        swift_bridgeObjectRelease();

        sub_100149204();
        swift_allocError();
        *uint64_t v64 = 1;
        swift_willThrow();

        v39(v56, v57);
        v39(v70, v57);
        v39(v71, v57);
        sub_1000816A4(v74, &qword_100295230);
        v39(v77, v57);
      }
      else
      {
        uint64_t v45 = v0[18];
        uint64_t v73 = v0[19];
        uint64_t v46 = v0[14];
        uint64_t v76 = v0[12];
        uint64_t v78 = v0[20];
        sub_1001EC8F0();
        uint64_t v47 = (void *)qword_100293A68;
        sub_10007DC14((uint64_t *)&unk_100291A20);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_100215320;
        id v49 = v47;
        uint64_t v50 = v34;
        id v51 = v49;
        uint64_t v52 = sub_1001EAF30();
        uint64_t v54 = v53;
        *(void *)(v48 + 56) = &type metadata for String;
        *(void *)(v48 + 64) = sub_10007DC58();
        *(void *)(v48 + 32) = v52;
        *(void *)(v48 + 40) = v54;
        sub_1001EB530();
        swift_bridgeObjectRelease();

        sub_100149204();
        swift_allocError();
        *uint64_t v55 = 1;
        swift_willThrow();

        v33(v45, v46);
        v33(v73, v46);
        sub_1000816A4(v76, &qword_100295230);
        v33(v78, v46);
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v69 = (uint64_t (*)(void))v0[1];
LABEL_18:
  return v69();
}

uint64_t sub_100146DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100146E54(a1, a2, a3, a4, 0xD000000000000026, (void *)0x8000000100226590, (void (*)(uint64_t, char *, void, void))sub_10014786C);
}

uint64_t sub_100146E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(uint64_t, char *, void, void))
{
  uint64_t v64 = a7;
  uint64_t v66 = a6;
  uint64_t v67 = a2;
  uint64_t v11 = sub_1001EADC0();
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v71 = v11;
  __chkstk_darwin(v11);
  uint64_t v69 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14(&qword_100295230);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v63 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unsigned __int8 v17 = (char *)&v60 - v16;
  uint64_t v18 = sub_1001EAF60();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v62 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v60 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v60 - v26;
  __chkstk_darwin(v25);
  id v28 = *(void (**)(void))(v19 + 16);
  uint64_t v72 = (char *)&v60 - v29;
  uint64_t v61 = v28;
  v28();
  *(void *)&long long v73 = a3;
  *((void *)&v73 + 1) = a4;
  swift_bridgeObjectRetain();
  v76._countAndFlagsBits = 45;
  v76._object = (void *)0xE100000000000000;
  sub_1001EC490(v76);
  v77._countAndFlagsBits = a5;
  v77._object = v66;
  sub_1001EC490(v77);
  long long v30 = v73;
  sub_1001EAEE0();
  sub_1000936F8(v67, (uint64_t)v17, &qword_100295230);
  int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  uint64_t v68 = v18;
  if (v31 == 1)
  {
    swift_bridgeObjectRelease();
    sub_1000816A4((uint64_t)v17, &qword_100295230);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v17, v18);
    v64(a1, v24, v30, *((void *)&v30 + 1));
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
  }
  sub_1001EC910();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  uint64_t v32 = (void *)qword_100292120;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100215320;
  id v34 = v32;
  uint64_t v35 = (uint64_t)v27;
  uint64_t v36 = sub_1001EAE90();
  uint64_t v38 = v37;
  *(void *)(v33 + 56) = &type metadata for String;
  unint64_t v39 = sub_10007DC58();
  *(void *)(v33 + 64) = v39;
  *(void *)(v33 + 32) = v36;
  *(void *)(v33 + 40) = v38;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  NSString v40 = v69;
  sub_1001EADB0();
  sub_1001EADA0();
  id v41 = [self defaultManager];
  sub_1001EAEC0(v42);
  uint64_t v44 = v43;
  *(void *)&long long v73 = 0;
  LODWORD(v33) = [v41 createDirectoryAtURL:v43 withIntermediateDirectories:1 attributes:0 error:&v73];

  uint64_t v65 = v19;
  if (v33)
  {
    id v45 = (id)v73;
    sub_1001EAEB0();
    sub_1001EC190();
    uint64_t v67 = v35;
    uint64_t v57 = v68;
    ((void (*)(char *, uint64_t, uint64_t))v61)(v62, v35, v68);
    uint64_t v75 = 0;
    long long v73 = 0u;
    long long v74 = 0u;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v63, 1, 1, v57);
    uint64_t v58 = sub_1001EC180();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v40, v71);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v59(v67, v57);
    v59((uint64_t)v72, v57);
  }
  else
  {
    id v46 = (id)v73;
    sub_1001EAE60();

    swift_willThrow();
    uint64_t v47 = v68;
    sub_1001EC8F0();
    uint64_t v48 = (void *)qword_100292120;
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_100215310;
    id v50 = v48;
    uint64_t v51 = sub_1001EAE90();
    *(void *)(v49 + 56) = &type metadata for String;
    *(void *)(v49 + 64) = v39;
    *(void *)(v49 + 32) = v51;
    *(void *)(v49 + 40) = v52;
    swift_getErrorValue();
    uint64_t v53 = sub_1001ED110();
    *(void *)(v49 + 96) = &type metadata for String;
    *(void *)(v49 + 104) = v39;
    *(void *)(v49 + 72) = v53;
    *(void *)(v49 + 80) = v54;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    sub_1001EC190();
    uint64_t v75 = 0;
    long long v73 = 0u;
    long long v74 = 0u;
    uint64_t v58 = sub_1001EC170();
    swift_errorRelease();
    sub_1000816A4((uint64_t)&v73, &qword_1002931D0);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v40, v71);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v55(v35, v47);
    v55((uint64_t)v72, v47);
  }
  return v58;
}

uint64_t sub_100147588(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v2 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EAF60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v20 - v11;
  __chkstk_darwin(v10);
  uint64_t v21 = (uint64_t)&v20 - v13;
  type metadata accessor for _CRDTModelContextStoreUtils();
  sub_100130220((uint64_t)v12);
  sub_1001EAEE0();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v12, v5);
  id v15 = [self books];
  id v16 = [v15 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  v14(v9, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v12, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v17 = v21;
  uint64_t v18 = sub_100146E54(v21, (uint64_t)v4, v22, v23, 0xD00000000000001DLL, (void *)0x8000000100226000, (void (*)(uint64_t, char *, void, void))sub_100147E70);
  sub_1000816A4((uint64_t)v4, &qword_100295230);
  v14(v12, v5);
  v14((char *)v17, v5);
  return v18;
}

void sub_10014786C(uint64_t a1)
{
  uint64_t v2 = sub_1001EAF60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v67 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v61 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v61 - v9;
  sub_1001EAEE0();
  id v11 = [self defaultManager];
  sub_1001EAF30();
  NSString v12 = sub_1001EC340();
  swift_bridgeObjectRelease();
  unsigned int v13 = [v11 fileExistsAtPath:v12];

  if (!v13)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);

    return;
  }
  uint64_t v62 = a1;
  uint64_t v63 = v2;
  uint64_t v65 = v8;
  uint64_t v66 = v3;
  id v64 = v11;
  sub_1001EC910();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_100292120;
  uint64_t v15 = sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v16 = swift_allocObject();
  long long v61 = xmmword_100215320;
  *(_OWORD *)(v16 + 16) = xmmword_100215320;
  id v17 = v14;
  uint64_t v18 = sub_1001EAE90();
  uint64_t v20 = v19;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v21 = sub_10007DC58();
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v22 = v65;
  uint64_t v23 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v62, v63);
  uint64_t v24 = v67;
  sub_1001EAEE0();
  sub_1001EAF30();
  NSString v25 = sub_1001EC340();
  swift_bridgeObjectRelease();
  id v26 = v64;
  LOBYTE(v20) = [v64 fileExistsAtPath:v25];

  if ((v20 & 1) == 0)
  {
    uint64_t v62 = v15;
    sub_1001EAEC0(v27);
    uint64_t v35 = v34;
    id v68 = 0;
    unsigned __int8 v36 = [v26 createDirectoryAtURL:v34 withIntermediateDirectories:1 attributes:0 error:&v68];

    id v37 = v68;
    if (v36)
    {
      id v38 = v68;
      sub_1001EAEC0(v39);
      id v41 = v40;
      sub_1001EAEC0(v42);
      uint64_t v44 = v43;
      id v68 = 0;
      unsigned int v45 = [v26 moveItemAtURL:v41 toURL:v43 error:&v68];

      id v37 = v68;
      uint64_t v33 = v66;
      if (v45)
      {
        id v46 = v68;
        sub_1001EC910();
        uint64_t v47 = (void *)qword_100292120;
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = v61;
        id v49 = v47;
        uint64_t v50 = sub_1001EAE90();
        *(void *)(v48 + 56) = &type metadata for String;
        *(void *)(v48 + 64) = v21;
        *(void *)(v48 + 32) = v50;
        *(void *)(v48 + 40) = v51;
        sub_1001EB530();

        uint64_t v22 = v65;
        swift_bridgeObjectRelease();

        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v33 = v66;
    }
    id v52 = v37;
    sub_1001EAE60();

    swift_willThrow();
    LODWORD(v66) = sub_1001EC8F0();
    uint64_t v53 = (void *)qword_100292120;
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_100215310;
    id v55 = v53;
    uint64_t v56 = sub_1001EAE90();
    *(void *)(v54 + 56) = &type metadata for String;
    *(void *)(v54 + 64) = v21;
    *(void *)(v54 + 32) = v56;
    *(void *)(v54 + 40) = v57;
    swift_getErrorValue();
    uint64_t v58 = sub_1001ED110();
    *(void *)(v54 + 96) = &type metadata for String;
    *(void *)(v54 + 104) = v21;
    *(void *)(v54 + 72) = v58;
    *(void *)(v54 + 80) = v59;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    goto LABEL_12;
  }
  sub_1001EC8F0();
  id v28 = (void *)qword_100292120;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v61;
  id v30 = v28;
  uint64_t v31 = sub_1001EAE90();
  *(void *)(v29 + 56) = &type metadata for String;
  *(void *)(v29 + 64) = v21;
  *(void *)(v29 + 32) = v31;
  *(void *)(v29 + 40) = v32;
  sub_1001EB530();

  uint64_t v22 = v65;
  swift_bridgeObjectRelease();

  uint64_t v33 = v66;
LABEL_12:
  uint64_t v60 = *(void (**)(char *, uint64_t))(v33 + 8);
  v60(v24, v23);
  v60(v22, v23);
  v60(v10, v23);
}

void sub_100147E70(uint64_t a1)
{
  uint64_t v2 = sub_1001EAF60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v67 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v61 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v61 - v9;
  sub_1001EAEE0();
  id v11 = [self defaultManager];
  sub_1001EAF30();
  NSString v12 = sub_1001EC340();
  swift_bridgeObjectRelease();
  unsigned int v13 = [v11 fileExistsAtPath:v12];

  if (!v13)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);

    return;
  }
  uint64_t v62 = a1;
  uint64_t v63 = v2;
  uint64_t v65 = v8;
  uint64_t v66 = v3;
  id v64 = v11;
  sub_1001EC910();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_100292120;
  uint64_t v15 = sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v16 = swift_allocObject();
  long long v61 = xmmword_100215320;
  *(_OWORD *)(v16 + 16) = xmmword_100215320;
  id v17 = v14;
  uint64_t v18 = sub_1001EAE90();
  uint64_t v20 = v19;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v21 = sub_10007DC58();
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 32) = v18;
  *(void *)(v16 + 40) = v20;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v22 = v65;
  uint64_t v23 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v62, v63);
  uint64_t v24 = v67;
  sub_1001EAEE0();
  sub_1001EAF30();
  NSString v25 = sub_1001EC340();
  swift_bridgeObjectRelease();
  id v26 = v64;
  LOBYTE(v20) = [v64 fileExistsAtPath:v25];

  if ((v20 & 1) == 0)
  {
    uint64_t v62 = v15;
    sub_1001EAEC0(v27);
    uint64_t v35 = v34;
    id v68 = 0;
    unsigned __int8 v36 = [v26 createDirectoryAtURL:v34 withIntermediateDirectories:1 attributes:0 error:&v68];

    id v37 = v68;
    if (v36)
    {
      id v38 = v68;
      sub_1001EAEC0(v39);
      id v41 = v40;
      sub_1001EAEC0(v42);
      uint64_t v44 = v43;
      id v68 = 0;
      unsigned int v45 = [v26 moveItemAtURL:v41 toURL:v43 error:&v68];

      id v37 = v68;
      uint64_t v33 = v66;
      if (v45)
      {
        id v46 = v68;
        sub_1001EC910();
        uint64_t v47 = (void *)qword_100292120;
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = v61;
        id v49 = v47;
        uint64_t v50 = sub_1001EAE90();
        *(void *)(v48 + 56) = &type metadata for String;
        *(void *)(v48 + 64) = v21;
        *(void *)(v48 + 32) = v50;
        *(void *)(v48 + 40) = v51;
        sub_1001EB530();

        uint64_t v22 = v65;
        swift_bridgeObjectRelease();

        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v33 = v66;
    }
    id v52 = v37;
    sub_1001EAE60();

    swift_willThrow();
    LODWORD(v66) = sub_1001EC8F0();
    uint64_t v53 = (void *)qword_100292120;
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_100215310;
    id v55 = v53;
    uint64_t v56 = sub_1001EAE90();
    *(void *)(v54 + 56) = &type metadata for String;
    *(void *)(v54 + 64) = v21;
    *(void *)(v54 + 32) = v56;
    *(void *)(v54 + 40) = v57;
    swift_getErrorValue();
    uint64_t v58 = sub_1001ED110();
    *(void *)(v54 + 96) = &type metadata for String;
    *(void *)(v54 + 104) = v21;
    *(void *)(v54 + 72) = v58;
    *(void *)(v54 + 80) = v59;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    goto LABEL_12;
  }
  sub_1001EC8F0();
  id v28 = (void *)qword_100292120;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v61;
  id v30 = v28;
  uint64_t v31 = sub_1001EAE90();
  *(void *)(v29 + 56) = &type metadata for String;
  *(void *)(v29 + 64) = v21;
  *(void *)(v29 + 32) = v31;
  *(void *)(v29 + 40) = v32;
  sub_1001EB530();

  uint64_t v22 = v65;
  swift_bridgeObjectRelease();
  uint64_t v33 = v66;
LABEL_12:
  uint64_t v60 = *(void (**)(char *, uint64_t))(v33 + 8);
  v60(v24, v23);
  v60(v22, v23);
  v60(v10, v23);
}

void *ReadingHistoryBackupManager.init(transactionProvider:)(uint64_t a1)
{
  v1[2] = 0xD000000000000055;
  v1[3] = 0x80000001002212C0;
  v1[4] = 0xD000000000000012;
  v1[5] = 0x8000000100221320;
  v1[6] = 0xD000000000000013;
  v1[7] = 0x8000000100221340;
  v1[8] = 0x736B6F6F42;
  v1[9] = 0xE500000000000000;
  v1[10] = 0xD000000000000019;
  v1[11] = 0x8000000100221360;
  v1[12] = a1;
  return v1;
}

uint64_t sub_1001484F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v65 = a2;
  uint64_t v66 = a3;
  uint64_t v3 = sub_10007DC14(&qword_100295230);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v62 = (uint64_t)&v60 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v60 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  unsigned int v13 = (char *)&v60 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  id v68 = (char *)&v60 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  unint64_t v21 = (char *)&v60 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v60 - v23;
  __chkstk_darwin(v22);
  id v26 = (char *)&v60 - v25;
  id v27 = objc_msgSend(self, "bu_booksGroupContainerURL");
  if (v27)
  {
    id v28 = v27;
    sub_1001EAF10();

    uint64_t v29 = sub_1001EAF60();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v24, 0, 1, v29);
  }
  else
  {
    uint64_t v29 = sub_1001EAF60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v24, 1, 1, v29);
  }
  sub_1000935F8((uint64_t)v24, (uint64_t)v26, &qword_100295230);
  uint64_t v69 = v26;
  sub_1000936F8((uint64_t)v26, (uint64_t)v18, &qword_100295230);
  sub_1001EAF60();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v31(v18, 1, v29) == 1)
  {
    sub_1000816A4((uint64_t)v18, &qword_100295230);
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
    uint64_t v33 = v21;
    uint64_t v34 = 1;
  }
  else
  {
    sub_1001EAED0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v29);
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
    uint64_t v33 = v21;
    uint64_t v34 = 0;
  }
  uint64_t v67 = v32;
  v32((uint64_t)v33, v34, 1, v29);
  uint64_t v35 = (uint64_t)v68;
  sub_1001493D8(v64, v65);
  sub_1000936F8((uint64_t)v21, (uint64_t)v13, &qword_100295230);
  if (v31(v13, 1, v29) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1000816A4((uint64_t)v13, &qword_100295230);
    uint64_t v36 = 1;
  }
  else
  {
    sub_1001EAED0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v29);
    uint64_t v36 = 0;
  }
  id v37 = v67;
  v67(v35, v36, 1, v29);
  sub_1000936F8(v35, (uint64_t)v10, &qword_100295230);
  if (v31(v10, 1, v29) == 1)
  {
    uint64_t v65 = v30 + 56;
    sub_1000816A4((uint64_t)v10, &qword_100295230);
    LODWORD(v64) = sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v38 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_100215310;
    uint64_t v40 = v62;
    sub_1000936F8((uint64_t)v69, v62, &qword_100295230);
    unsigned int v41 = v31((char *)v40, 1, v29);
    id v61 = v38;
    if (v41 == 1)
    {
      sub_1000816A4(v40, &qword_100295230);
      uint64_t v42 = 0;
      unint64_t v43 = 0;
    }
    else
    {
      uint64_t v42 = sub_1001EAF30();
      unint64_t v43 = v46;
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v40, v29);
    }
    *(void *)(v39 + 56) = &type metadata for String;
    unint64_t v47 = sub_10007DC58();
    *(void *)(v39 + 64) = v47;
    if (v43) {
      uint64_t v48 = v42;
    }
    else {
      uint64_t v48 = 0x296C696E28;
    }
    unint64_t v49 = 0xE500000000000000;
    if (v43) {
      unint64_t v49 = v43;
    }
    *(void *)(v39 + 32) = v48;
    *(void *)(v39 + 40) = v49;
    uint64_t v50 = v63;
    sub_1000936F8((uint64_t)v21, v63, &qword_100295230);
    if (v31((char *)v50, 1, v29) == 1)
    {
      sub_1000816A4(v50, &qword_100295230);
      uint64_t v51 = (uint64_t *)(v39 + 72);
      *(void *)(v39 + 96) = &type metadata for String;
      *(void *)(v39 + 104) = v47;
      uint64_t v52 = (uint64_t)v68;
      uint64_t v53 = (uint64_t)v69;
    }
    else
    {
      uint64_t v54 = v50;
      uint64_t v55 = sub_1001EAF30();
      unint64_t v57 = v56;
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v54, v29);
      uint64_t v51 = (uint64_t *)(v39 + 72);
      *(void *)(v39 + 96) = &type metadata for String;
      *(void *)(v39 + 104) = v47;
      uint64_t v53 = (uint64_t)v69;
      if (v57)
      {
        *uint64_t v51 = v55;
        id v37 = v67;
        uint64_t v52 = (uint64_t)v68;
        uint64_t v58 = v61;
LABEL_28:
        *(void *)(v39 + 80) = v57;
        sub_1001EB530();

        swift_bridgeObjectRelease();
        sub_1000816A4(v52, &qword_100295230);
        sub_1000816A4((uint64_t)v21, &qword_100295230);
        sub_1000816A4(v53, &qword_100295230);
        uint64_t v45 = 1;
        uint64_t v44 = v66;
        return v37(v44, v45, 1, v29);
      }
      uint64_t v52 = (uint64_t)v68;
    }
    id v37 = v67;
    uint64_t v58 = v61;
    *uint64_t v51 = 0x296C696E28;
    unint64_t v57 = 0xE500000000000000;
    goto LABEL_28;
  }
  sub_1000816A4(v35, &qword_100295230);
  sub_1000816A4((uint64_t)v21, &qword_100295230);
  sub_1000816A4((uint64_t)v69, &qword_100295230);
  uint64_t v44 = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v66, v10, v29);
  uint64_t v45 = 0;
  return v37(v44, v45, 1, v29);
}

uint64_t sub_100148C2C(uint64_t a1)
{
  uint64_t result = sub_10014A488();
  if (!v2)
  {
    sub_10014AC9C(0xD000000000000010, 0x8000000100221570, 0xD00000000000002CLL, 0x8000000100226020, a1);
    sub_10014AC9C(0xD000000000000011, 0x8000000100224310, 0xD00000000000001CLL, 0x8000000100224330, a1);
    sub_10014AC9C(0xD000000000000018, 0x80000001002243C0, 0xD000000000000035, 0x8000000100226050, a1);
    return sub_10014AC9C(v1[4], v1[5], v1[6], v1[7], a1);
  }
  return result;
}

uint64_t sub_100148D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EBF80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unsigned int v13 = (char *)&v34 - v12;
  uint64_t result = sub_1001EAF80();
  if (!v2)
  {
    uint64_t v16 = result;
    id v38 = v7;
    uint64_t v39 = v5;
    uint64_t v17 = v42;
    uint64_t v40 = v11;
    uint64_t v41 = a2;
    unint64_t v18 = v15;
    sub_100093680(result, v15);
    sub_10014CBBC((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
    sub_1001EC000();
    unint64_t v37 = v18;
    uint64_t v19 = sub_1001EAF80();
    uint64_t v36 = v13;
    uint64_t v20 = v19;
    unint64_t v22 = v21;
    sub_100093680(v19, v21);
    uint64_t v23 = (uint64_t)v40;
    sub_1001EC000();
    uint64_t v34 = v20;
    unint64_t v35 = v22;
    sub_10014B4C8((uint64_t)v36, v23);
    uint64_t v24 = sub_100147588(*(void *)(v17 + 64), *(void *)(v17 + 72));
    uint64_t v25 = v38;
    uint64_t v26 = v39;
    uint64_t v27 = v4;
    id v28 = (void *)v24;
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, enum case for CRCodableVersion.version3(_:), v27);
    uint64_t v29 = sub_1001EBFF0();
    unint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
    sub_1001EAFF0();
    uint64_t v32 = v28;
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v33 = (id)qword_100293A68;
    sub_1001EB530();

    sub_100081714(v29, v31);
    sub_100081714(v34, v35);
    sub_100081714(v16, v37);
    sub_10014CC68(v23, type metadata accessor for ReadingHistoryModel);
    return sub_10014CC68((uint64_t)v36, type metadata accessor for ReadingHistoryModel);
  }
  return result;
}

uint64_t ReadingHistoryBackupManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ReadingHistoryBackupManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_100149204()
{
  unint64_t result = qword_100294E80;
  if (!qword_100294E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294E80);
  }
  return result;
}

unint64_t sub_10014925C()
{
  unint64_t result = qword_100294E90;
  if (!qword_100294E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294E90);
  }
  return result;
}

uint64_t type metadata accessor for ReadingHistoryBackupManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ReadingHistoryBackupManager.BackupError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001493A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistoryBackupManager.BackupError()
{
  return &type metadata for ReadingHistoryBackupManager.BackupError;
}

uint64_t sub_1001493D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EB180();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    id v12 = [objc_allocWithZone((Class)NSDateFormatter) init];
    sub_1001EB0F0();
    Class isa = sub_1001EB120().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    [v12 setCalendar:isa];

    NSString v14 = sub_1001EC340();
    [v12 setDateFormat:v14];

    sub_1001EB0B0();
    Class v15 = sub_1001EB060().super.isa;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    id v16 = [v12 stringFromDate:v15];

    uint64_t v17 = sub_1001EC370();
    uint64_t v19 = v18;

    v21[0] = 0x2D70756B636142;
    v21[1] = 0xE700000000000000;
    v22._countAndFlagsBits = v17;
    v22._object = v19;
    sub_1001EC490(v22);

    swift_bridgeObjectRelease();
    a1 = v21[0];
  }
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_100149664()
{
  sub_10007DC14(&qword_100294FC0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215330;
  sub_1001EC370();
  sub_1001ECCD0();
  *(void *)(inited + 96) = &type metadata for Bool;
  *(unsigned char *)(inited + 72) = 1;
  sub_1001EC370();
  sub_1001ECCD0();
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = 1;
  sub_1001EC370();
  sub_1001ECCD0();
  *(void *)(inited + 240) = &type metadata for Bool;
  *(unsigned char *)(inited + 216) = 1;
  return sub_100120FC0(inited);
}

void sub_100149784()
{
  uint64_t v1 = sub_1001EC960();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self defaultManager];
  sub_1001EAF30();
  NSString v6 = sub_1001EC340();
  swift_bridgeObjectRelease();
  unsigned int v7 = [v5 fileExistsAtPath:v6];

  if (!v7)
  {
    sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v27 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_100215320;
    id v29 = v27;
    uint64_t v30 = sub_1001EAF30();
    uint64_t v32 = v31;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_10007DC58();
    *(void *)(v28 + 32) = v30;
    *(void *)(v28 + 40) = v32;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    sub_100149204();
    swift_allocError();
    *id v33 = 1;
    goto LABEL_9;
  }
  uint64_t v38 = v1;
  uint64_t v39 = v0;
  uint64_t v40 = v2;
  id v41 = v5;
  int v37 = sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_100293A68;
  uint64_t v36 = sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v9 = swift_allocObject();
  long long v35 = xmmword_100215310;
  *(_OWORD *)(v9 + 16) = xmmword_100215310;
  id v10 = v8;
  uint64_t v11 = sub_1001EAF30();
  uint64_t v13 = v12;
  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v14 = sub_10007DC58();
  *(void *)(v9 + 64) = v14;
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  uint64_t v15 = sub_1001EAF30();
  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v14;
  *(void *)(v9 + 72) = v15;
  *(void *)(v9 + 80) = v16;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  id v17 = sub_10008E4E0();
  id v18 = [v17 persistentStoreCoordinator];

  sub_100149664();
  sub_1001EC950();
  uint64_t v19 = v39;
  sub_1001ECA40();
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v38);

    swift_bridgeObjectRelease();
    sub_1001EC8F0();
    uint64_t v20 = (void *)qword_100293A68;
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v35;
    id v22 = v20;
    uint64_t v23 = sub_1001EAF30();
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = v14;
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v24;
    swift_getErrorValue();
    uint64_t v25 = sub_1001ED110();
    *(void *)(v21 + 96) = &type metadata for String;
    *(void *)(v21 + 104) = v14;
    *(void *)(v21 + 72) = v25;
    *(void *)(v21 + 80) = v26;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    id v5 = v41;
LABEL_9:
    swift_willThrow();

    return;
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v38);

  swift_bridgeObjectRelease();
  sub_1001EC910();
  id v34 = (id)qword_100293A68;
  sub_1001EB530();
}

uint64_t sub_100149C50(uint64_t a1)
{
  uint64_t v2 = sub_1001EAF60();
  uint64_t v86 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  Swift::String v76 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v74 = (char *)&v69 - v5;
  uint64_t v6 = sub_10007DC14(&qword_100295230);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v79 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v84 = (char *)&v69 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v83 = (uint64_t)&v69 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v85 = (char *)&v69 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v69 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v87 = (uint64_t)&v69 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = (char *)&v69 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v69 - v23;
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)qword_100293A68;
  uint64_t v73 = sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100215320;
  id v27 = v25;
  uint64_t v77 = a1;
  uint64_t v28 = sub_1001EAF30();
  uint64_t v30 = v29;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v75 = sub_10007DC58();
  *(void *)(v26 + 64) = v75;
  *(void *)(v26 + 32) = v28;
  *(void *)(v26 + 40) = v30;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(self, "bu_booksGroupContainerDocumentsURL");
  if (v31)
  {
    uint64_t v32 = v31;
    sub_1001EAF10();

    uint64_t v33 = v86;
    id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
    v34(v22, 0, 1, v2);
  }
  else
  {
    uint64_t v33 = v86;
    id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56);
    v34(v22, 1, 1, v2);
  }
  sub_1000935F8((uint64_t)v22, (uint64_t)v24, &qword_100295230);
  uint64_t v80 = v24;
  sub_1000936F8((uint64_t)v24, (uint64_t)v17, &qword_100295230);
  long long v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v35(v17, 1, v2) == 1)
  {
    sub_1000816A4((uint64_t)v17, &qword_100295230);
    uint64_t v36 = 1;
    uint64_t v37 = v87;
  }
  else
  {
    uint64_t v37 = v87;
    sub_1001EAEE0();
    uint64_t v33 = v86;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v17, v2);
    uint64_t v36 = 0;
  }
  uint64_t v81 = v33 + 56;
  v34((char *)v37, v36, 1, v2);
  uint64_t v88 = sub_1001ECD40();
  uint64_t v89 = v38;
  uint64_t v39 = v33;
  v91._countAndFlagsBits = 45;
  v91._object = (void *)0xE100000000000000;
  sub_1001EC490(v91);
  uint64_t v90 = type metadata accessor for ReadingHistoryModel(0);
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  v92._countAndFlagsBits = sub_1001EC3D0();
  sub_1001EC490(v92);
  swift_bridgeObjectRelease();
  uint64_t v41 = v88;
  uint64_t v40 = v89;
  uint64_t v42 = v83;
  sub_1000936F8(v37, v83, &qword_100295230);
  unsigned int v43 = v35((char *)v42, 1, v2);
  uint64_t v82 = v40;
  uint64_t v72 = v41;
  if (v43 == 1)
  {
    sub_1000816A4(v42, &qword_100295230);
    uint64_t v44 = 1;
    uint64_t v45 = (uint64_t)v85;
  }
  else
  {
    uint64_t v70 = v34;
    uint64_t v71 = v35;
    unint64_t v46 = v74;
    sub_1001EAED0();
    unint64_t v47 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v47(v42, v2);
    uint64_t v45 = (uint64_t)v85;
    sub_1001EAED0();
    uint64_t v48 = v46;
    id v34 = v70;
    long long v35 = v71;
    v47((uint64_t)v48, v2);
    uint64_t v44 = 0;
  }
  uint64_t v49 = (uint64_t)v84;
  v34((char *)v45, v44, 1, v2);
  sub_1000936F8(v45, v49, &qword_100295230);
  if (v35((char *)v49, 1, v2) == 1)
  {
    uint64_t v50 = 0x296C696E28;
    sub_1000816A4(v49, &qword_100295230);
    sub_1001EC8F0();
    uint64_t v51 = (void *)qword_100293A68;
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_100215310;
    uint64_t v53 = v79;
    sub_1000936F8(v87, v79, &qword_100295230);
    unsigned int v54 = v35((char *)v53, 1, v2);
    id v55 = v51;
    if (v54 == 1)
    {
      sub_1000816A4(v53, &qword_100295230);
      unint64_t v56 = v75;
      *(void *)(v52 + 56) = &type metadata for String;
      *(void *)(v52 + 64) = v56;
    }
    else
    {
      uint64_t v62 = sub_1001EAF30();
      unint64_t v64 = v63;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v53, v2);
      unint64_t v56 = v75;
      *(void *)(v52 + 56) = &type metadata for String;
      *(void *)(v52 + 64) = v56;
      if (v64)
      {
        uint64_t v50 = v62;
LABEL_20:
        uint64_t v60 = v87;
        *(void *)(v52 + 32) = v50;
        *(void *)(v52 + 40) = v64;
        *(void *)(v52 + 96) = &type metadata for String;
        *(void *)(v52 + 104) = v56;
        uint64_t v65 = v82;
        *(void *)(v52 + 72) = v72;
        *(void *)(v52 + 80) = v65;
        sub_1001EB530();

        swift_bridgeObjectRelease();
        sub_100149204();
        swift_allocError();
        *uint64_t v66 = 2;
        swift_willThrow();
        uint64_t v61 = (uint64_t)v80;
        uint64_t v45 = (uint64_t)v85;
        goto LABEL_21;
      }
    }
    unint64_t v64 = 0xE500000000000000;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t v57 = v86;
  uint64_t v58 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v76, v49, v2);
  uint64_t v59 = v78;
  sub_100149784();
  if (!v59)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v2);
    sub_1000816A4(v45, &qword_100295230);
    sub_1000816A4(v87, &qword_100295230);
    uint64_t v67 = (uint64_t)v80;
    return sub_1000816A4(v67, &qword_100295230);
  }
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v2);
  uint64_t v60 = v87;
  uint64_t v61 = (uint64_t)v80;
LABEL_21:
  sub_1000816A4(v45, &qword_100295230);
  sub_1000816A4(v60, &qword_100295230);
  uint64_t v67 = v61;
  return sub_1000816A4(v67, &qword_100295230);
}

uint64_t sub_10014A488()
{
  uint64_t v0 = sub_1001EAF60();
  uint64_t v31 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v28 - v4;
  id v33 = (id)sub_1001ECD40();
  uint64_t v34 = v6;
  v35._countAndFlagsBits = 45;
  v35._object = (void *)0xE100000000000000;
  sub_1001EC490(v35);
  uint64_t v7 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v32 = v7;
  sub_10007DC14((uint64_t *)&unk_1002915A0);
  v36._countAndFlagsBits = sub_1001EC3D0();
  sub_1001EC490(v36);
  swift_bridgeObjectRelease();
  sub_1001EAED0();
  swift_bridgeObjectRelease();
  id v33 = (id)sub_1001ECD40();
  uint64_t v34 = v8;
  v37._countAndFlagsBits = 45;
  v37._object = (void *)0xE100000000000000;
  sub_1001EC490(v37);
  uint64_t v32 = v7;
  v38._countAndFlagsBits = sub_1001EC3D0();
  sub_1001EC490(v38);
  swift_bridgeObjectRelease();
  sub_1001EAED0();
  swift_bridgeObjectRelease();
  id v9 = [self defaultManager];
  sub_1001EAEC0(v10);
  uint64_t v12 = v11;
  id v33 = 0;
  unsigned int v13 = [v9 createDirectoryAtURL:v11 withIntermediateDirectories:1 attributes:0 error:&v33];

  if (v13)
  {
    id v14 = v33;
    sub_100149C50((uint64_t)v3);
    uint64_t v15 = v3;
  }
  else
  {
    uint64_t v29 = v3;
    uint64_t v30 = v0;
    id v16 = v33;
    sub_1001EAE60();

    swift_willThrow();
    sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v17 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100215310;
    id v19 = v17;
    uint64_t v20 = sub_1001EAF30();
    uint64_t v22 = v21;
    *(void *)(v18 + 56) = &type metadata for String;
    unint64_t v23 = sub_10007DC58();
    *(void *)(v18 + 64) = v23;
    *(void *)(v18 + 32) = v20;
    *(void *)(v18 + 40) = v22;
    swift_getErrorValue();
    uint64_t v24 = sub_1001ED110();
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v23;
    *(void *)(v18 + 72) = v24;
    *(void *)(v18 + 80) = v25;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_willThrow();
    uint64_t v15 = v29;
    uint64_t v0 = v30;
  }
  uint64_t v26 = *(void (**)(char *, uint64_t))(v31 + 8);
  v26(v15, v0);
  return ((uint64_t (*)(char *, uint64_t))v26)(v5, v0);
}

void sub_10014A858()
{
  id v0 = [self defaultManager];
  sub_1001EAF30();
  NSString v1 = sub_1001EC340();
  swift_bridgeObjectRelease();
  unsigned int v2 = [v0 fileExistsAtPath:v1];

  if (v2)
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_100215310;
    id v5 = v3;
    uint64_t v6 = sub_1001EAF30();
    uint64_t v8 = v7;
    *(void *)(v4 + 56) = &type metadata for String;
    unint64_t v9 = sub_10007DC58();
    *(void *)(v4 + 64) = v9;
    *(void *)(v4 + 32) = v6;
    *(void *)(v4 + 40) = v8;
    uint64_t v10 = sub_1001EAF30();
    *(void *)(v4 + 96) = &type metadata for String;
    *(void *)(v4 + 104) = v9;
    *(void *)(v4 + 72) = v10;
    *(void *)(v4 + 80) = v11;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    sub_1001EAEC0(v12);
    id v14 = v13;
    sub_1001EAEC0(v15);
    id v17 = v16;
    id v36 = 0;
    unsigned __int8 v18 = [v0 copyItemAtURL:v14 toURL:v16 error:&v36];

    if (v18)
    {
      id v19 = v36;
      sub_1001EC910();
      id v20 = (id)qword_100293A68;
      sub_1001EB530();

      return;
    }
    id v28 = v36;
    sub_1001EAE60();

    swift_willThrow();
    sub_1001EC8F0();
    uint64_t v29 = (void *)qword_100293A68;
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_100215310;
    id v31 = v29;
    uint64_t v32 = sub_1001EAF30();
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = v9;
    *(void *)(v30 + 32) = v32;
    *(void *)(v30 + 40) = v33;
    swift_getErrorValue();
    uint64_t v34 = sub_1001ED110();
    *(void *)(v30 + 96) = &type metadata for String;
    *(void *)(v30 + 104) = v9;
    *(void *)(v30 + 72) = v34;
    *(void *)(v30 + 80) = v35;
    sub_1001EB530();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v21 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100215320;
    id v23 = v21;
    uint64_t v24 = sub_1001EAF30();
    uint64_t v26 = v25;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_10007DC58();
    *(void *)(v22 + 32) = v24;
    *(void *)(v22 + 40) = v26;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    sub_100149204();
    swift_allocError();
    *id v27 = 1;
  }
  swift_willThrow();
}

uint64_t sub_10014AC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v82 = a5;
  uint64_t v86 = a3;
  uint64_t v87 = a4;
  uint64_t v88 = a1;
  uint64_t v89 = a2;
  uint64_t v5 = sub_1001EAF60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v80 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v80 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v84 = (char *)&v80 - v12;
  __chkstk_darwin(v11);
  uint64_t v81 = (char *)&v80 - v13;
  uint64_t v14 = sub_10007DC14(&qword_100295230);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v83 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  id v19 = (char *)&v80 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v80 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v80 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  id v28 = (char *)&v80 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v80 - v29;
  id v31 = objc_msgSend(self, "bu_booksGroupContainerURL");
  if (v31)
  {
    uint64_t v32 = v31;
    sub_1001EAF10();

    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v33(v28, 0, 1, v5);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v33(v28, 1, 1, v5);
  }
  sub_1000935F8((uint64_t)v28, (uint64_t)v30, &qword_100295230);
  uint64_t v90 = v30;
  sub_1000936F8((uint64_t)v30, (uint64_t)v22, &qword_100295230);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  int v35 = v34(v22, 1, v5);
  uint64_t v91 = v6;
  Swift::String v92 = v25;
  if (v35 == 1)
  {
    sub_1000816A4((uint64_t)v22, &qword_100295230);
    uint64_t v36 = 1;
  }
  else
  {
    Swift::String v37 = v81;
    sub_1001EAED0();
    Swift::String v38 = *(void (**)(char *, uint64_t))(v91 + 8);
    v38(v22, v5);
    sub_1001EAEE0();
    v38(v37, v5);
    uint64_t v6 = v91;
    uint64_t v25 = v92;
    uint64_t v36 = 0;
  }
  v33(v25, v36, 1, v5);
  sub_1000936F8((uint64_t)v25, (uint64_t)v19, &qword_100295230);
  if (v34(v19, 1, v5) == 1)
  {
    sub_1000816A4((uint64_t)v19, &qword_100295230);
    sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v39 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_100215330;
    uint64_t v41 = v83;
    sub_1000936F8((uint64_t)v90, v83, &qword_100295230);
    int v42 = v34((char *)v41, 1, v5);
    id v43 = v39;
    if (v42 == 1)
    {
      sub_1000816A4(v41, &qword_100295230);
      uint64_t v44 = 0;
      unint64_t v45 = 0;
    }
    else
    {
      uint64_t v44 = sub_1001EAF30();
      uint64_t v58 = v5;
      unint64_t v45 = v59;
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v41, v58);
    }
    *(void *)(v40 + 56) = &type metadata for String;
    unint64_t v60 = sub_10007DC58();
    uint64_t v61 = 0x296C696E28;
    if (v45) {
      uint64_t v61 = v44;
    }
    unint64_t v62 = 0xE500000000000000;
    if (v45) {
      unint64_t v62 = v45;
    }
    *(void *)(v40 + 32) = v61;
    *(void *)(v40 + 40) = v62;
    *(void *)(v40 + 96) = &type metadata for String;
    *(void *)(v40 + 104) = v60;
    uint64_t v63 = v88;
    uint64_t v64 = v89;
    *(void *)(v40 + 64) = v60;
    *(void *)(v40 + 72) = v63;
    *(void *)(v40 + 80) = v64;
    *(void *)(v40 + 136) = &type metadata for String;
    *(void *)(v40 + 144) = v60;
    uint64_t v65 = v87;
    *(void *)(v40 + 112) = v86;
    *(void *)(v40 + 120) = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001EB530();

    swift_bridgeObjectRelease();
    sub_100149204();
    swift_allocError();
    *uint64_t v66 = 2;
    swift_willThrow();
    uint64_t v56 = (uint64_t)v90;
  }
  else
  {
    unint64_t v46 = v84;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v84, v19, v5);
    unint64_t v47 = v85;
    sub_1001EAEE0();
    id v48 = [self defaultManager];
    sub_1001EAEC0(v49);
    uint64_t v51 = v50;
    id v93 = 0;
    unsigned int v52 = [v48 createDirectoryAtURL:v50 withIntermediateDirectories:1 attributes:0 error:&v93];

    if (v52)
    {
      id v53 = v93;
      unsigned int v54 = v80;
      id v55 = v47;
      sub_1001EAEE0();
      sub_10014A858();
      uint64_t v56 = (uint64_t)v90;
      uint64_t v57 = *(void (**)(char *, uint64_t))(v91 + 8);
      v57(v54, v5);
      v57(v55, v5);
      v57(v46, v5);
    }
    else
    {
      uint64_t v89 = v5;
      id v67 = v93;
      sub_1001EAE60();

      swift_willThrow();
      sub_1001EC8F0();
      uint64_t v56 = (uint64_t)v90;
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      id v68 = (void *)qword_100293A68;
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_100215310;
      id v70 = v68;
      uint64_t v71 = sub_1001EAF30();
      uint64_t v73 = v72;
      *(void *)(v69 + 56) = &type metadata for String;
      unint64_t v74 = sub_10007DC58();
      *(void *)(v69 + 64) = v74;
      *(void *)(v69 + 32) = v71;
      *(void *)(v69 + 40) = v73;
      swift_getErrorValue();
      uint64_t v75 = sub_1001ED110();
      *(void *)(v69 + 96) = &type metadata for String;
      *(void *)(v69 + 104) = v74;
      *(void *)(v69 + 72) = v75;
      *(void *)(v69 + 80) = v76;
      sub_1001EB530();

      swift_bridgeObjectRelease();
      swift_willThrow();
      uint64_t v77 = *(void (**)(char *, uint64_t))(v91 + 8);
      uint64_t v78 = v89;
      v77(v85, v89);
      v77(v84, v78);
    }
  }
  sub_1000816A4((uint64_t)v92, &qword_100295230);
  return sub_1000816A4(v56, &qword_100295230);
}

uint64_t sub_10014B4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v185 = a2;
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100292000);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007DC14(&qword_100294F68);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (uint64_t *)((char *)&v137 - v9);
  uint64_t v188 = sub_10007DC14(&qword_100294F70);
  uint64_t v186 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  unint64_t v189 = (char *)&v137 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_10007DC14(&qword_100294F78);
  unint64_t v179 = *(char **)(v167 - 8);
  uint64_t v12 = __chkstk_darwin(v167);
  os_log_type_t v166 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v165 = (char *)&v137 - v14;
  uint64_t v180 = type metadata accessor for ReadingHistoryMonth(0);
  uint64_t v15 = __chkstk_darwin(v180);
  uint64_t v164 = (uint64_t)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v187 = (char *)&v137 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v154 = (char *)&v137 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v152 = (char *)&v137 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  os_log_type_t v153 = (char *)&v137 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v151 = (char *)&v137 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v160 = (uint64_t)&v137 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v183 = (uint64_t)&v137 - v30;
  __chkstk_darwin(v29);
  uint64_t v182 = (uint64_t)&v137 - v31;
  uint64_t v32 = sub_10007DC14(&qword_100291F90);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v169 = (char *)&v137 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v173 = (uint64_t)&v137 - v36;
  __chkstk_darwin(v35);
  Swift::String v38 = (char *)&v137 - v37;
  uint64_t v39 = sub_10007DC14(&qword_100291FC0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  unint64_t v181 = (char *)&v137 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v137 - v43;
  uint64_t v45 = sub_10007DC14(&qword_100291FA0);
  uint64_t v46 = __chkstk_darwin(v45 - 8);
  uint64_t v175 = (char *)&v137 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  unint64_t v174 = (uint64_t *)((char *)&v137 - v48);
  uint64_t v177 = sub_10007DC14(&qword_100291FA8);
  uint64_t v138 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v50 = (char *)&v137 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10007DC14(&qword_100291BD0);
  uint64_t v176 = v50;
  uint64_t v184 = v51;
  sub_1001EBEF0();
  unint64_t v171 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  char v172 = (void (**)(char *, char *, uint64_t))(v40 + 32);
  unint64_t v155 = (void (**)(char *, char *, uint64_t))(v40 + 16);
  uint64_t v168 = (void (**)(char *, void, uint64_t, uint64_t))(v40 + 56);
  unint64_t v162 = (uint64_t (**)(uint64_t))(v179 + 8);
  unint64_t v170 = (void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v52 = (uint64_t)v38;
  os_log_type_t v140 = &v192;
  uint64_t v150 = &v191;
  unint64_t v149 = (void (**)(char *, uint64_t))(v186 + 8);
  *(void *)&long long v53 = 134217984;
  long long v156 = v53;
  *(void *)&long long v53 = 134218240;
  long long v148 = v53;
  *(void *)&long long v53 = 134218242;
  long long v147 = v53;
  unint64_t v139 = (char *)&type metadata for Any + 8;
  unint64_t v163 = v38;
  uint64_t v178 = v39;
  unint64_t v179 = v44;
  unint64_t v159 = v4;
  uint64_t v158 = v8;
  while (1)
  {
    id v55 = v175;
    sub_1001EBEB0();
    uint64_t v56 = (uint64_t)v55;
    uint64_t v57 = v174;
    sub_1000935F8(v56, (uint64_t)v174, &qword_100291FA0);
    uint64_t v58 = sub_10007DC14(&qword_100291F98);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v57, 1, v58) == 1) {
      return (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v176, v177);
    }
    unint64_t v59 = v8;
    uint64_t v60 = *v57;
    uint64_t v61 = (char *)v57 + *(int *)(v58 + 48);
    unint64_t v62 = *v172;
    (*v172)(v44, v61, v39);
    uint64_t v186 = v60;
    uint64_t v191 = v60;
    sub_1001EBF50();
    uint64_t v63 = v173;
    sub_1000936F8(v52, v173, &qword_100291F90);
    if ((*v171)(v63, 1, v39) == 1)
    {
      sub_1000816A4(v63, &qword_100291F90);
      os_log_type_t v64 = sub_1001EC910();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      uint64_t v65 = (void *)qword_100293A68;
      BOOL v66 = os_log_type_enabled((os_log_t)qword_100293A68, v64);
      uint64_t v67 = v186;
      uint64_t v8 = v59;
      if (v66)
      {
        id v68 = v65;
        uint64_t v69 = swift_slowAlloc();
        *(_DWORD *)uint64_t v69 = v156;
        *(void *)(v69 + 4) = v67;
        _os_log_impl((void *)&_mh_execute_header, v68, v64, "ReadingHistoryBackupManager _restoreModel: %ld missing in destination", (uint8_t *)v69, 0xCu);
        swift_slowDealloc();
      }
      uint64_t v39 = v178;
      uint64_t v44 = v179;
      sub_1001EC100();
      sub_10014CBBC(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
      unsigned int v54 = v169;
      sub_1001EC140();
      (*v168)(v54, 0, 1, v39);
      uint64_t v191 = v67;
      sub_1001EBF60();
      sub_1000816A4(v52, &qword_100291F90);
      (*v170)(v44, v39);
    }
    else
    {
      v62(v181, (char *)v63, v39);
      sub_1001EC100();
      sub_1001EC100();
      sub_10014CBBC(&qword_100294F88, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
      char v70 = sub_1001EBE30();
      uint64_t v71 = v159;
      if (v70)
      {
        os_log_type_t v72 = sub_1001EC910();
        if (qword_1002910E8 != -1) {
          swift_once();
        }
        uint64_t v73 = (void *)qword_100293A68;
        BOOL v74 = os_log_type_enabled((os_log_t)qword_100293A68, v72);
        uint64_t v75 = v186;
        uint64_t v76 = v178;
        if (v74)
        {
          uint64_t v77 = v73;
          uint64_t v78 = swift_slowAlloc();
          *(_DWORD *)uint64_t v78 = v148;
          *(void *)(v78 + 4) = v75;
          *(_WORD *)(v78 + 12) = 2048;
          *(void *)(v78 + 14) = v75;
          _os_log_impl((void *)&_mh_execute_header, v77, v72, "ReadingHistoryBackupManager _restoreModel: backup[%ld] has changes from dest[%ld]", (uint8_t *)v78, 0x16u);
          swift_slowDealloc();
        }
        uint64_t v79 = v181;
        sub_1001EC110();
        uint64_t v80 = v169;
        (*v155)(v169, v79, v76);
        (*v168)(v80, 0, 1, v76);
        uint64_t v191 = v75;
        sub_1001EBF60();
      }
      sub_10007DC14(&qword_100294F90);
      uint64_t v81 = sub_1000815A4(&qword_100294F98, &qword_100294F90);
      uint64_t v82 = v165;
      sub_1001EC7A0();
      uint64_t v83 = v166;
      sub_1001EC7E0();
      sub_1000815A4((unint64_t *)&unk_100294FA0, &qword_100294F78);
      uint64_t v84 = v167;
      char v85 = sub_1001EC330();
      uint64_t v86 = *v162;
      ((void (*)(char *, uint64_t))*v162)(v83, v84);
      uint64_t v161 = v86;
      ((void (*)(char *, uint64_t))v86)(v82, v84);
      uint64_t v87 = v160;
      sub_10014CC04(v183, v160);
      if (v85)
      {
        uint64_t v157 = v81;
        char v88 = sub_1001EC7B0();
        sub_10014CC68(v87, type metadata accessor for ReadingHistoryMonth);
        uint64_t v52 = (uint64_t)v163;
        uint64_t v39 = v178;
        if ((v88 & 1) == 0) {
          goto LABEL_24;
        }
        os_log_type_t v89 = sub_1001EC910();
        if (qword_1002910E8 != -1) {
          swift_once();
        }
        uint64_t v90 = (void *)qword_100293A68;
        BOOL v91 = os_log_type_enabled((os_log_t)qword_100293A68, v89);
        uint64_t v92 = (uint64_t)v153;
        uint64_t v93 = (uint64_t)v151;
        if (v91)
        {
          uint64_t v94 = v90;
          uint64_t v95 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v95 = v156;
          uint64_t v191 = v186;
          sub_1001ECBC0();
          _os_log_impl((void *)&_mh_execute_header, v94, v89, "ReadingHistoryBackupManager _restoreModel: dest[%ld] is possibly pruned", v95, 0xCu);
          swift_slowDealloc();
        }
        os_log_type_t v96 = sub_1001EC910();
        uint64_t v97 = qword_100293A68;
        uint64_t v98 = v183;
        sub_10014CC04(v183, v93);
        sub_10014CC04(v98, v92);
        int v99 = v96;
        if (os_log_type_enabled(v97, v96))
        {
          os_log_t v146 = v97;
          uint64_t v100 = swift_slowAlloc();
          uint64_t v145 = swift_slowAlloc();
          uint64_t v191 = v145;
          *(_DWORD *)uint64_t v100 = v147;
          uint64_t v142 = v100 + 4;
          uint64_t v101 = v93;
          uint64_t v102 = v165;
          sub_1001EC7A0();
          int v144 = v99;
          uint64_t v103 = v166;
          sub_1001EC7E0();
          uint64_t v141 = sub_1001EC7D0();
          unint64_t v104 = v103;
          uint64_t v105 = v167;
          Swift::String v106 = v161;
          ((void (*)(char *, uint64_t))v161)(v104, v167);
          ((void (*)(char *, uint64_t))v106)(v102, v105);
          unint64_t v143 = type metadata accessor for ReadingHistoryMonth;
          sub_10014CC68(v101, type metadata accessor for ReadingHistoryMonth);
          uint64_t v190 = v141;
          sub_1001ECBC0();
          *(_WORD *)(v100 + 12) = 2080;
          uint64_t v142 = v100 + 14;
          uint64_t v107 = (uint64_t)v153;
          sub_10007DC14(&qword_100291C50);
          sub_1000815A4((unint64_t *)&unk_100294FB0, &qword_100291C50);
          uint64_t v108 = sub_1001ED040();
          uint64_t v190 = sub_1001A8090(v108, v109, &v191);
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          sub_10014CC68(v107, v143);
          os_log_t v110 = v146;
          _os_log_impl((void *)&_mh_execute_header, v146, (os_log_type_t)v144, "    - backup: #days=%ld, lastDayStreak=%s", (uint8_t *)v100, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_10014CC68(v93, type metadata accessor for ReadingHistoryMonth);
          sub_10014CC68(v92, type metadata accessor for ReadingHistoryMonth);
        }
        uint64_t v112 = (uint64_t)v154;
        uint64_t v113 = (uint64_t)v152;
        os_log_type_t v114 = sub_1001EC910();
        uint64_t v115 = qword_100293A68;
        uint64_t v116 = v182;
        sub_10014CC04(v182, v113);
        sub_10014CC04(v116, v112);
        if (os_log_type_enabled(v115, v114))
        {
          os_log_t v146 = v115;
          uint64_t v117 = swift_slowAlloc();
          uint64_t v145 = swift_slowAlloc();
          uint64_t v191 = v145;
          *(_DWORD *)uint64_t v117 = v147;
          unint64_t v143 = (uint64_t (*)(uint64_t))(v117 + 4);
          uint64_t v118 = v113;
          uint64_t v119 = v165;
          sub_1001EC7A0();
          int v144 = v114;
          uint64_t v120 = v166;
          sub_1001EC7E0();
          uint64_t v157 = sub_1001EC7D0();
          uint64_t v121 = v167;
          uint64_t v122 = v161;
          ((void (*)(char *, uint64_t))v161)(v120, v167);
          ((void (*)(char *, uint64_t))v122)(v119, v121);
          uint64_t v161 = type metadata accessor for ReadingHistoryMonth;
          sub_10014CC68(v118, type metadata accessor for ReadingHistoryMonth);
          uint64_t v190 = v157;
          sub_1001ECBC0();
          *(_WORD *)(v117 + 12) = 2080;
          uint64_t v157 = v117 + 14;
          uint64_t v123 = (uint64_t)v154;
          sub_10007DC14(&qword_100291C50);
          sub_1000815A4((unint64_t *)&unk_100294FB0, &qword_100291C50);
          uint64_t v124 = sub_1001ED040();
          uint64_t v190 = sub_1001A8090(v124, v125, &v191);
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          sub_10014CC68(v123, v161);
          os_log_t v126 = v146;
          _os_log_impl((void *)&_mh_execute_header, v146, (os_log_type_t)v144, "    - dest  : #days=%ld, lastDayStreak=%s", (uint8_t *)v117, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_10014CC68(v113, type metadata accessor for ReadingHistoryMonth);
          sub_10014CC68(v112, type metadata accessor for ReadingHistoryMonth);
        }
        uint64_t v8 = v158;
        sub_1001EC130();
        sub_1001EBEF0();
        while (1)
        {
          sub_1001EBEB0();
          sub_1000935F8((uint64_t)v8, (uint64_t)v10, &qword_100294F68);
          uint64_t v127 = sub_10007DC14(&qword_100292E40);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 48))(v10, 1, v127) == 1)break; {
          uint64_t v128 = *v10;
          }
          unint64_t v129 = (char *)v10 + *(int *)(v127 + 48);
          uint64_t v130 = sub_10007DC14(&qword_100291220);
          uint64_t v131 = *(void *)(v130 - 8);
          (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v71, v129, v130);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v71, 0, 1, v130);
          uint64_t v191 = v128;
          sub_1001EBF60();
        }
        (*v149)(v189, v188);
        uint64_t v132 = v183;
        sub_10007DC14(&qword_100291C50);
        sub_1001EBAE0();
        uint64_t v190 = v191;
        uint64_t v133 = (uint64_t)v187;
        sub_1001EBAF0();
        sub_1001EBAE0();
        uint64_t v190 = v191;
        sub_1001EBAF0();
        sub_10014CC04(v133, v164);
        sub_10014CBBC(&qword_100294F80, (void (*)(uint64_t))type metadata accessor for ReadingHistoryMonth);
        uint64_t v134 = v169;
        sub_1001EC140();
        (*v168)(v134, 0, 1, v39);
        uint64_t v191 = v186;
        sub_1001EBF60();
        sub_10014CC68(v133, type metadata accessor for ReadingHistoryMonth);
        sub_10014CC68(v132, type metadata accessor for ReadingHistoryMonth);
        sub_10014CC68(v182, type metadata accessor for ReadingHistoryMonth);
        unint64_t v135 = *v170;
        (*v170)(v181, v39);
        uint64_t v52 = (uint64_t)v163;
        sub_1000816A4((uint64_t)v163, &qword_100291F90);
        uint64_t v44 = v179;
        v135(v179, v39);
      }
      else
      {
        sub_10014CC68(v87, type metadata accessor for ReadingHistoryMonth);
        uint64_t v52 = (uint64_t)v163;
        uint64_t v39 = v178;
LABEL_24:
        sub_10014CC68(v183, type metadata accessor for ReadingHistoryMonth);
        sub_10014CC68(v182, type metadata accessor for ReadingHistoryMonth);
        Swift::String v111 = *v170;
        (*v170)(v181, v39);
        sub_1000816A4(v52, &qword_100291F90);
        uint64_t v44 = v179;
        v111(v179, v39);
        uint64_t v8 = v158;
      }
    }
  }
}

uint64_t sub_10014CBBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10014CC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistoryMonth(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014CC68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10014CCC8(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100294FE0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_10014D518();
  sub_1001ED1F0();
  v8[15] = 0;
  sub_1001ED000();
  if (!v1)
  {
    v8[14] = 1;
    sub_1001ECFB0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10014CE44()
{
  if (*v0) {
    return 0x657474616D726F66;
  }
  else {
    return 0x65756C6176;
  }
}

uint64_t sub_10014CE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10014D25C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10014CEB0(uint64_t a1)
{
  unint64_t v2 = sub_10014D518();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10014CEEC(uint64_t a1)
{
  unint64_t v2 = sub_10014D518();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10014CF28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10014D36C(a1);
  if (!v2)
  {
    *a2 = v6;
    a2[1] = result;
    a2[2] = v5;
  }
  return result;
}

uint64_t sub_10014CF58(void *a1)
{
  return sub_10014CCC8(a1);
}

uint64_t sub_10014CF78(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2)
  {
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = *(void *)(a2 + 16);
    if (v3)
    {
      if (v4)
      {
        BOOL v5 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && v3 == v4;
        if (v5 || (sub_1001ED080() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_10014CFE4(uint64_t a1, void *a2)
{
  sub_1001EC730();
  v7._countAndFlagsBits = 10272;
  v7._object = (void *)0xE200000000000000;
  sub_1001EC490(v7);
  if (a2)
  {
    v8._countAndFlagsBits = a1;
    v8._object = a2;
    sub_1001EC490(v8);
    v9._countAndFlagsBits = 39;
    v9._object = (void *)0xE100000000000000;
    sub_1001EC490(v9);
    v4._countAndFlagsBits = 39;
    BOOL v5 = (void *)0xE100000000000000;
  }
  else
  {
    BOOL v5 = (void *)0xE300000000000000;
    v4._countAndFlagsBits = 7104878;
  }
  v4._object = v5;
  sub_1001EC490(v4);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  sub_1001EC490(v10);
  return 0;
}

uint64_t sub_10014D0B4()
{
  return sub_10014CFE4(*(void *)(v0 + 8), *(void **)(v0 + 16));
}

uint64_t _s5PriceVwCP(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5PriceVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s5PriceVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s5PriceVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *_s5PriceVwta(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5PriceVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s5PriceVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *_s5PriceVMa()
{
  return &_s5PriceVN;
}

uint64_t sub_10014D25C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657474616D726F66 && a2 == 0xEE0065756C615664)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10014D36C(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100294FD0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)sub_100094758(a1, a1[3]);
  sub_10014D518();
  sub_1001ED1D0();
  if (!v1)
  {
    char v11 = 0;
    sub_1001ECF80();
    char v10 = 1;
    uint64_t v7 = sub_1001ECF30();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_1000947F0((uint64_t)a1);
  return v7;
}

unint64_t sub_10014D518()
{
  unint64_t result = qword_100294FD8;
  if (!qword_100294FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294FD8);
  }
  return result;
}

unsigned char *_s5PriceV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014D638);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s5PriceV10CodingKeysOMa()
{
  return &_s5PriceV10CodingKeysON;
}

unint64_t sub_10014D674()
{
  unint64_t result = qword_100294FE8;
  if (!qword_100294FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294FE8);
  }
  return result;
}

unint64_t sub_10014D6CC()
{
  unint64_t result = qword_100294FF0;
  if (!qword_100294FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294FF0);
  }
  return result;
}

unint64_t sub_10014D724()
{
  unint64_t result = qword_100294FF8;
  if (!qword_100294FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100294FF8);
  }
  return result;
}

id sub_10014D78C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CloudSecureManagerService()) init];
  qword_1002A41F8 = (uint64_t)result;
  return result;
}

uint64_t sub_10014D81C()
{
  uint64_t v0 = sub_1001EB560();
  sub_10008176C(v0, qword_100295000);
  sub_10007CFF8(v0, (uint64_t)qword_100295000);
  return sub_1001EB550();
}

void sub_10014D8A0()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EAF60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v53 = (char *)&v52 - v10;
  char v11 = &v1[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_dataModelName];
  strcpy(&v1[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_dataModelName], "BDSSecureData");
  *((_WORD *)v11 + 7) = -4864;
  uint64_t v52 = (uint64_t *)v11;
  *(void *)&v1[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_saltVersionIdentifierManager] = 0;
  uint64_t v12 = self;
  uint64_t v13 = v1;
  id v14 = [v12 secureSharedInstance];
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v17 = sub_1001EC340();
  NSString v18 = sub_1001EC340();
  id v19 = [v16 URLForResource:v17 withExtension:v18];

  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_7;
  }
  sub_1001EAF10();

  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v20(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v21 = v5;
  uint64_t v22 = v6;
  v20(v53, v4, v21);
  id v23 = objc_allocWithZone((Class)NSManagedObjectModel);
  sub_1001EAEC0(v24);
  uint64_t v26 = v25;
  id v27 = [v23 initWithContentsOfURL:v25];

  if (!v27)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(void *)&v13[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_objectModel] = v27;
  uint64_t v28 = v52;
  id v29 = objc_allocWithZone((Class)BCCloudDataSource);
  swift_bridgeObjectRetain();
  id v30 = v27;
  NSString v31 = sub_1001EC340();
  swift_bridgeObjectRelease();
  id v32 = [v29 initWithManagedObjectModel:v30 nameOnDisk:v31];

  uint64_t v33 = OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_secureDataSource;
  *(void *)&v13[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_secureDataSource] = v32;
  type metadata accessor for CloudSecureUserDataMigrator();
  swift_allocObject();
  sub_100151FE4();
  uint64_t v34 = *v28;
  uint64_t v35 = (void *)v28[1];
  id v36 = v32;
  swift_bridgeObjectRetain();
  sub_100150280(v36, v34, v35);
  swift_release();

  swift_bridgeObjectRelease();
  id v37 = [*(id *)&v13[v33] managedObjectContext];
  id v38 = [objc_allocWithZone((Class)BCCloudChangeTokenController) initWithMOC:v37 zoneName:@"SecureUserDataZone" cloudKitController:v14];

  *(void *)&v13[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_changeTokenController] = v38;
  uint64_t v39 = *(void **)&v13[v33];
  id v40 = objc_allocWithZone((Class)type metadata accessor for CloudSecureEngagementManagerService());
  id v41 = v39;
  id v42 = v14;
  *(void *)&v13[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_engagementManagerImpl] = sub_1000C2AE4(v41, v42);
  id v43 = [objc_allocWithZone((Class)BCCloudSecureUserDataManager) initWithCloudDataSource:v41 cloudKitController:v42];
  if (v43)
  {
    *(void *)&v13[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_userDataManagerImpl] = v43;

    uint64_t v44 = (objc_class *)type metadata accessor for CloudSecureManagerService();
    v54.receiver = v13;
    v54.super_class = v44;
    uint64_t v45 = (char *)objc_msgSendSuper2(&v54, "init");
    uint64_t v46 = *(void **)&v45[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_changeTokenController];
    uint64_t v47 = v45;
    id v48 = v46;
    id v49 = [v42 privateCloudDatabaseController];
    id v50 = [objc_allocWithZone((Class)BDSSaltVersionIdentifierManager) initWithZoneDataManager:v47 tokenController:v48 databaseController:v49];

    (*(void (**)(char *, uint64_t))(v22 + 8))(v53, v21);
    uint64_t v51 = *(void **)&v47[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_saltVersionIdentifierManager];
    *(void *)&v47[OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_saltVersionIdentifierManager] = v50;

    return;
  }
LABEL_9:
  __break(1u);
}

id sub_10014DF1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudSecureManagerService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CloudSecureManagerService()
{
  return self;
}

uint64_t sub_10014E014()
{
  id v1 = [objc_allocWithZone((Class)NSMutableArray) init];
  [v1 addObject:*(void *)(v0 + OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_userDataManagerImpl)];
  [v1 addObject:*(void *)(v0 + OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_engagementManagerImpl)];
  [v1 copy];
  sub_1001ECBF0();

  swift_unknownObjectRelease();
  sub_10014E94C();
  swift_dynamicCast();
  return v3;
}

uint64_t sub_10014E0E0()
{
  id v1 = [objc_allocWithZone((Class)NSMutableArray) init];
  [v1 addObject:*(void *)(v0 + OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_userDataManagerImpl)];
  [v1 addObject:*(void *)(v0 + OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_engagementManagerImpl)];
  [v1 addObject:*(void *)(v0 + OBJC_IVAR____TtC14bookdatastored25CloudSecureManagerService_changeTokenController)];
  [v1 copy];
  sub_1001ECBF0();

  swift_unknownObjectRelease();
  sub_10014E94C();
  swift_dynamicCast();
  return v3;
}

void sub_10014E1C4(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (void *)sub_10014E014();
  if (qword_100291110 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1001EB560();
  sub_10007CFF8(v5, (uint64_t)qword_100295000);
  id v6 = v4;
  uint64_t v7 = sub_1001EB540();
  os_log_type_t v8 = sub_1001EC910();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v14 = a2;
    uint64_t v9 = a1;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    char v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    aBlock[0] = v6;
    id v12 = v6;
    sub_1001ECBC0();
    *char v11 = v6;

    a1 = v9;
    a2 = v14;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "CloudSecureManagerService hasSaltChangedWithCompletion with managers:%@", v10, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001AE1A8;
  void aBlock[3] = &unk_1002694F8;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v6, "bds_chainUntilNoErrorCompletionSelectorCallsForSelector:completion:", "hasSaltChangedWithCompletion:", v13);
  _Block_release(v13);
}

void sub_10014E4A0(void *a1, uint64_t a2)
{
  if (qword_100291110 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1001EB560();
  sub_10007CFF8(v4, (uint64_t)qword_100295000);
  uint64_t v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC910();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "CloudSecureManagerService dissociateCloudDataFromSyncWithCompletion - Service mode", v7, 2u);
    swift_slowDealloc();
  }

  os_log_type_t v8 = (void *)sub_10014E0E0();
  if (a1)
  {
    v9[4] = a1;
    v9[5] = a2;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    void v9[2] = sub_1001AE1A8;
    v9[3] = &unk_1002694A8;
    a1 = _Block_copy(v9);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v8, "bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:", "dissociateCloudDataFromSyncWithCompletion:", a1);
  _Block_release(a1);
}

void sub_10014E774(uint64_t a1, uint64_t a2)
{
  if (qword_100291110 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1001EB560();
  sub_10007CFF8(v4, (uint64_t)qword_100295000);
  uint64_t v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC910();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "CloudSecureManagerService deleteCloudDataWithCompletion:", v7, 2u);
    swift_slowDealloc();
  }

  if (a1)
  {
    v9[4] = a1;
    v9[5] = a2;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    void v9[2] = sub_1001AE1A8;
    v9[3] = &unk_100269458;
    os_log_type_t v8 = _Block_copy(v9);
    swift_retain();
    swift_release();
  }
  else
  {
    os_log_type_t v8 = 0;
  }
  [self deleteCloudDataWithCompletion:v8];
  _Block_release(v8);
}

uint64_t sub_10014E8FC()
{
  _Block_release(*(const void **)(v0 + 16));
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014E934(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014E944()
{
  return swift_release();
}

unint64_t sub_10014E94C()
{
  unint64_t result = qword_100295078;
  if (!qword_100295078)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100295078);
  }
  return result;
}

uint64_t sub_10014E9A4()
{
  *(void *)(v1 + 232) = v0;
  return _swift_task_switch(sub_10014E9C4, 0, 0);
}

uint64_t sub_10014E9C4()
{
  uint64_t v1 = (void *)v0[29];
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_10014EAC0;
  uint64_t v2 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_10014ED58;
  v0[26] = &unk_1002695A0;
  v0[27] = v2;
  [v1 getPendingNotificationRequestsWithCompletionHandler:v0 + 23];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10014EAC0()
{
  return _swift_task_switch(sub_10014EBA0, 0, 0);
}

uint64_t sub_10014EBA0()
{
  unint64_t v1 = *(void *)(v0 + 224);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_13;
    }
  }
  uint64_t result = sub_1000CF754(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v5 = (id)sub_1001ECD50();
    }
    else {
      id v5 = *(id *)(v1 + 8 * v4 + 32);
    }
    sub_10014FFF8(v5, (uint64_t *)(v0 + 80));
    unint64_t v7 = _swiftEmptyArrayStorage[2];
    unint64_t v6 = _swiftEmptyArrayStorage[3];
    if (v7 >= v6 >> 1) {
      sub_1000CF754(v6 > 1, v7 + 1, 1);
    }
    ++v4;
    _swiftEmptyArrayStorage[2] = v7 + 1;
    os_log_type_t v8 = &_swiftEmptyArrayStorage[13 * v7];
    long long v9 = *(_OWORD *)(v0 + 80);
    long long v10 = *(_OWORD *)(v0 + 112);
    *((_OWORD *)v8 + 3) = *(_OWORD *)(v0 + 96);
    *((_OWORD *)v8 + 4) = v10;
    *((_OWORD *)v8 + 2) = v9;
    long long v11 = *(_OWORD *)(v0 + 128);
    long long v12 = *(_OWORD *)(v0 + 144);
    long long v13 = *(_OWORD *)(v0 + 160);
    unsigned char v8[16] = *(void *)(v0 + 176);
    *((_OWORD *)v8 + 6) = v12;
    *((_OWORD *)v8 + 7) = v13;
    *((_OWORD *)v8 + 5) = v11;
  }
  while (v2 != v4);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v14 = *(uint64_t (**)(void *))(v0 + 8);
  return v14(_swiftEmptyArrayStorage);
}

uint64_t sub_10014ED58(uint64_t a1, uint64_t a2)
{
  return sub_10014F5C4(a1, a2, &qword_100295138);
}

uint64_t sub_10014ED6C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10014ED8C(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return _swift_task_switch(sub_10014EDAC, 0, 0);
}

uint64_t sub_10014EDAC()
{
  uint64_t v2 = *(_OWORD **)(v0 + 136);
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v3 = self;
  *(_OWORD *)(v0 + 120) = *v2;
  sub_1000879B4((uint64_t)v2);
  sub_100087ABC(v0 + 120);
  NSString v4 = sub_1001EC340();
  sub_100087A3C(v0 + 120);
  sub_100081668(0, &qword_100295128);
  id v5 = sub_10014FE5C((uint64_t)v2);
  id v6 = [v3 requestWithIdentifier:v4 content:v5 trigger:0];
  *(void *)(v0 + 152) = v6;

  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_10014EF5C;
  uint64_t v7 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10014F140;
  *(void *)(v0 + 104) = &unk_100269588;
  *(void *)(v0 + 112) = v7;
  [v1 addNotificationRequest:v6 withCompletionHandler:v0 + 80];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10014EF5C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_10014F0D0;
  }
  else {
    uint64_t v2 = sub_10014F06C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014F06C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10014F0D0()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10014F140(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_10007DC14(&qword_1002929F0);
    uint64_t v4 = swift_allocError();
    *id v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return _swift_continuation_throwingResume(v7);
  }
}

uint64_t sub_10014F1D8()
{
  *(void *)(v1 + 232) = v0;
  return _swift_task_switch(sub_10014F1F8, 0, 0);
}

uint64_t sub_10014F1F8()
{
  uint64_t v1 = (void *)v0[29];
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_10014F2F4;
  uint64_t v2 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_10014F5B0;
  v0[26] = &unk_100269570;
  v0[27] = v2;
  [v1 getDeliveredNotificationsWithCompletionHandler:v0 + 23];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10014F2F4()
{
  return _swift_task_switch(sub_10014F3D4, 0, 0);
}

uint64_t sub_10014F3D4()
{
  unint64_t v1 = *(void *)(v0 + 224);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_13;
    }
  }
  uint64_t result = sub_1000CF754(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  id v5 = (uint64_t *)(v0 + 80);
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v6 = (id)sub_1001ECD50();
    }
    else {
      id v6 = *(id *)(v1 + 8 * v4 + 32);
    }
    uint64_t v7 = v6;
    sub_10014FFF8([v6 request], v5);

    unint64_t v9 = _swiftEmptyArrayStorage[2];
    unint64_t v8 = _swiftEmptyArrayStorage[3];
    if (v9 >= v8 >> 1) {
      sub_1000CF754(v8 > 1, v9 + 1, 1);
    }
    ++v4;
    _swiftEmptyArrayStorage[2] = v9 + 1;
    long long v10 = &_swiftEmptyArrayStorage[13 * v9];
    long long v11 = *(_OWORD *)v5;
    long long v12 = *(_OWORD *)(v0 + 112);
    *((_OWORD *)v10 + 3) = *(_OWORD *)(v0 + 96);
    *((_OWORD *)v10 + 4) = v12;
    *((_OWORD *)v10 + 2) = v11;
    long long v13 = *(_OWORD *)(v0 + 128);
    long long v14 = *(_OWORD *)(v0 + 144);
    long long v15 = *(_OWORD *)(v0 + 160);
    unsigned char v10[16] = *(void *)(v0 + 176);
    *((_OWORD *)v10 + 6) = v14;
    *((_OWORD *)v10 + 7) = v15;
    *((_OWORD *)v10 + 5) = v13;
  }
  while (v2 != v4);
LABEL_13:
  swift_bridgeObjectRelease();
  id v16 = *(uint64_t (**)(void *))(v0 + 8);
  return v16(_swiftEmptyArrayStorage);
}

uint64_t sub_10014F5B0(uint64_t a1, uint64_t a2)
{
  return sub_10014F5C4(a1, a2, &qword_100295118);
}

uint64_t sub_10014F5C4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  sub_100081668(0, a3);
  **(void **)(*(void *)(v3 + 64) + 40) = sub_1001EC5E0();
  return swift_continuation_resume();
}

void sub_10014F634(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100082C60(a4, 0, a2, (uint64_t)&type metadata for String, (uint64_t)&type metadata for Never, a3, (uint64_t)&protocol witness table for Never, a8);
  Class isa = sub_1001EC5D0().super.isa;
  swift_bridgeObjectRelease();
  [v8 removeDeliveredNotificationsWithIdentifiers:isa];
}

uint64_t sub_10014F6DC()
{
  *(void *)(v1 + 128) = v0;
  return _swift_task_switch(sub_10014F6FC, 0, 0);
}

uint64_t sub_10014F6FC()
{
  uint64_t v1 = (void *)v0[16];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10014F7F8;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10014F988;
  v0[13] = &unk_100269558;
  v0[14] = v2;
  [v1 getNotificationSettingsWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10014F7F8()
{
  return _swift_task_switch(sub_10014F8D8, 0, 0);
}

uint64_t sub_10014F8D8()
{
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = [v1 authorizationStatus];
  id v3 = [v1 alertSetting];
  id v4 = [v1 alertStyle];

  id v5 = *(uint64_t (**)(id, id, id))(v0 + 8);
  return v5(v2, v3, v4);
}

uint64_t sub_10014F988(uint64_t a1, void *a2)
{
  **(void **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  id v2 = a2;
  return swift_continuation_resume();
}

uint64_t sub_10014F9DC()
{
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_10015027C;
  v2[29] = v0;
  return _swift_task_switch(sub_10014E9C4, 0, 0);
}

void sub_10014FA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_10014FAB0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100093200;
  v4[17] = a1;
  v4[18] = v1;
  return _swift_task_switch(sub_10014EDAC, 0, 0);
}

uint64_t sub_10014FB5C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000F8378;
  v2[29] = v0;
  return _swift_task_switch(sub_10014F1F8, 0, 0);
}

void sub_10014FC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_10014FC30()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10014FCD8;
  v2[16] = v0;
  return _swift_task_switch(sub_10014F6FC, 0, 0);
}

uint64_t sub_10014FCD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

void sub_10014FDEC()
{
  id v0 = objc_allocWithZone((Class)UNUserNotificationCenter);
  NSString v1 = sub_1001EC340();
  id v2 = [v0 initWithBundleIdentifier:v1];

  qword_1002950E0 = (uint64_t)v2;
}

id sub_10014FE5C(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  NSString v3 = sub_1001EC340();
  [v2 setTitle:v3];

  NSString v4 = sub_1001EC340();
  [v2 setSubtitle:v4];

  NSString v5 = sub_1001EC340();
  [v2 setBody:v5];

  long long v11 = *(_OWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  NSString v6 = sub_1001EC340();
  sub_100087A3C((uint64_t)&v11);
  [v2 setCategoryIdentifier:v6];

  long long v10 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRetain();
  NSString v7 = sub_1001EC340();
  sub_100087A3C((uint64_t)&v10);
  objc_msgSend(v2, "setThreadIdentifier:", v7, v10, v11);

  Class isa = sub_1001EC250().super.isa;
  sub_10008792C(a1);
  [v2 setUserInfo:isa];

  return v2;
}

void sub_10014FFF8(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = [a1 identifier];
  uint64_t v5 = sub_1001EC370();
  uint64_t v37 = v6;
  uint64_t v38 = v5;

  id v7 = [a1 content];
  id v8 = [v7 title];

  uint64_t v9 = sub_1001EC370();
  uint64_t v35 = v10;
  uint64_t v36 = v9;

  id v11 = [a1 content];
  id v12 = [v11 subtitle];

  uint64_t v13 = sub_1001EC370();
  uint64_t v33 = v14;
  uint64_t v34 = v13;

  id v15 = [a1 content];
  id v16 = [v15 body];

  uint64_t v17 = sub_1001EC370();
  uint64_t v19 = v18;

  id v20 = [a1 content];
  id v21 = [v20 categoryIdentifier];

  uint64_t v22 = sub_1001EC370();
  uint64_t v24 = v23;

  id v25 = [a1 content];
  id v26 = [v25 threadIdentifier];

  uint64_t v27 = sub_1001EC370();
  uint64_t v29 = v28;

  id v30 = [a1 content];
  id v31 = [v30 userInfo];

  uint64_t v32 = sub_1001EC260();
  *a2 = v38;
  a2[1] = v37;
  a2[2] = v36;
  a2[3] = v35;
  a2[4] = v34;
  a2[5] = v33;
  a2[6] = v17;
  a2[7] = v19;
  a2[8] = v22;
  a2[9] = v24;
  a2[10] = v27;
  a2[11] = v29;
  a2[12] = v32;
}

uint64_t sub_100150264@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10014ED6C(a1, a2);
}

void sub_100150280(void *a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  id v56 = a1;
  id v57 = a3;
  uint64_t v59 = *v3;
  uint64_t v5 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t isEscapingClosureAtFileLocation = sub_1001EAF60();
  uint64_t v9 = *(void *)(isEscapingClosureAtFileLocation - 8);
  uint64_t v10 = __chkstk_darwin(isEscapingClosureAtFileLocation);
  id v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v58 = (char *)&v56 - v13;
  if (qword_100291120 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1001EB560();
  sub_10007CFF8(v14, (uint64_t)qword_100295140);
  id v15 = sub_1001EB540();
  os_log_type_t v16 = sub_1001EC910();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "migrateIfNecessary()", v17, 2u);
    swift_slowDealloc();
  }

  if (sub_100150BE0())
  {
    uint64_t v18 = sub_1001EB540();
    os_log_type_t v19 = sub_1001EC910();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "migrateIfNecessary() needsMigration=true", v20, 2u);
      swift_slowDealloc();
    }

    id v21 = [self standardUserDefaults];
    id v22 = [objc_allocWithZone((Class)NSNumber) initWithInteger:1];
    NSString v23 = sub_1001EC340();
    [v21 setObject:v22 forKey:v23];

    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v25 = [self bundleForClass:ObjCClassFromMetadata];
    NSString v26 = sub_1001EC340();
    NSString v27 = sub_1001EC340();
    id v28 = [v25 URLForResource:v26 withExtension:v27];

    if (v28)
    {
      sub_1001EAF10();

      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v29(v7, v12, isEscapingClosureAtFileLocation);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, isEscapingClosureAtFileLocation);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, isEscapingClosureAtFileLocation) == 1)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      v29(v58, v7, isEscapingClosureAtFileLocation);
      id v30 = objc_allocWithZone((Class)NSManagedObjectModel);
      sub_1001EAEC0(v31);
      uint64_t v33 = v32;
      id v34 = [v30 initWithContentsOfURL:v32];

      if (!v34)
      {
LABEL_26:
        __break(1u);
        return;
      }
      id v35 = objc_allocWithZone((Class)BCCloudDataSource);
      id v36 = v34;
      swift_bridgeObjectRetain();
      NSString v37 = sub_1001EC340();
      swift_bridgeObjectRelease();
      id v38 = [v35 initWithManagedObjectModel:v36 nameOnDisk:v37];

      uint64_t v67 = &_swiftEmptyDictionarySingleton;
      id v57 = v38;
      id v39 = [v38 managedObjectContext];
      id v7 = (char *)swift_allocObject();
      *((void *)v7 + 2) = v39;
      *((void *)v7 + 3) = &v67;
      uint64_t v40 = v59;
      *((void *)v7 + 4) = v4;
      *((void *)v7 + 5) = v40;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = sub_100151F5C;
      *(void *)(v41 + 24) = v7;
      uint64_t v65 = sub_1000AC2B4;
      uint64_t v66 = v41;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v62 = 1107296256;
      uint64_t v63 = sub_100089470;
      os_log_type_t v64 = &unk_100269608;
      id v42 = _Block_copy(&aBlock);
      id v43 = v39;
      swift_retain();
      swift_retain();
      swift_release();
      [v43 performBlockAndWait:v42];
      _Block_release(v42);
      LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v42)
      {
        __break(1u);
      }
      else
      {
        uint64_t v44 = v67[2];
        uint64_t v45 = sub_1001EB540();
        os_log_type_t v46 = sub_1001EC910();
        BOOL v47 = os_log_type_enabled(v45, v46);
        if (!v44)
        {
          if (v47)
          {
            id v55 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v55 = 0;
            _os_log_impl((void *)&_mh_execute_header, v45, v46, "migrateIfNecessary() No data to write to new data source", v55, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v9 + 8))(v58, isEscapingClosureAtFileLocation);
          goto LABEL_20;
        }
        if (v47)
        {
          id v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v48 = 0;
          _os_log_impl((void *)&_mh_execute_header, v45, v46, "migrateIfNecessary() migrating data to new data source", v48, 2u);
          swift_slowDealloc();
        }

        uint64_t v60 = v67;
        swift_bridgeObjectRetain();
        id v49 = [v56 managedObjectContext];
        id v50 = (void *)swift_allocObject();
        v50[2] = v49;
        v50[3] = &v60;
        v50[4] = v59;
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = sub_100151FC8;
        *(void *)(v51 + 24) = v50;
        uint64_t v65 = sub_1000B0738;
        uint64_t v66 = v51;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v62 = 1107296256;
        uint64_t v63 = sub_100089470;
        os_log_type_t v64 = &unk_100269680;
        uint64_t v52 = _Block_copy(&aBlock);
        id v53 = v49;
        swift_retain();
        swift_release();
        [v53 performBlockAndWait:v52];
        _Block_release(v52);

        objc_super v54 = *(void (**)(char *, uint64_t))(v9 + 8);
        v9 += 8;
        v54(v58, isEscapingClosureAtFileLocation);
        uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
LABEL_20:
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
      }
      __break(1u);
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, isEscapingClosureAtFileLocation);
    goto LABEL_25;
  }
}

uint64_t sub_100150B5C()
{
  uint64_t v0 = sub_1001EB560();
  sub_10008176C(v0, qword_100295140);
  sub_10007CFF8(v0, (uint64_t)qword_100295140);
  return sub_1001EB550();
}

BOOL sub_100150BE0()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_1001EC340();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_1001ECBF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100152D0C((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    sub_100081668(0, (unint64_t *)&qword_100293B60);
    if (swift_dynamicCast())
    {
      uint64_t v3 = (uint64_t)[v5 integerValue];

      return v3 < 1;
    }
  }
  else
  {
    sub_100152D74((uint64_t)v7);
  }
  return 1;
}

void sub_100150D0C(uint64_t a1, uint64_t *a2)
{
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = sub_1001EC340();
  id v5 = [v3 initWithEntityName:v4];

  sub_100081668(0, &qword_100295218);
  unint64_t v6 = sub_1001ECA20();
  unint64_t v14 = v6;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    id v15 = (uint64_t *)sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_6;
    }
LABEL_40:

LABEL_41:
    swift_bridgeObjectRelease();
    return;
  }
  id v15 = *(uint64_t **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v15) {
    goto LABEL_40;
  }
LABEL_6:
  objc_super v54 = v5;
  id v55 = v15;
  unint64_t v56 = v14;
  unint64_t v57 = v14 & 0xC000000000000001;
  uint64_t v16 = 4;
  while (1)
  {
    os_log_type_t v19 = v57 ? sub_1001ECD50() : *(id *)(v14 + 8 * v16);
    id v20 = v19;
    uint64_t v18 = (uint64_t *)(v16 - 3);
    if (__OFADD__(v16 - 4, 1)) {
      break;
    }
    id v21 = [v19 key];
    if (!v21)
    {
      __break(1u);
LABEL_45:
      sub_1001ED0E0();
      __break(1u);
      return;
    }
    id v22 = v21;
    uint64_t v23 = sub_1001EC370();
    uint64_t v25 = v24;

    os_log_t osloga = v20;
    id v26 = [v20 value];
    if (!v26)
    {
      swift_bridgeObjectRetain();
      unint64_t v44 = sub_1001A87A0(v23, v25);
      char v46 = v45;
      swift_bridgeObjectRelease();
      if (v46)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v48 = *a2;
        v60[0] = *a2;
        *a2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1001ACB44();
          uint64_t v48 = v60[0];
        }
        swift_bridgeObjectRelease();
        sub_100152724(v44, v48);
        *a2 = v48;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      goto LABEL_9;
    }
    NSString v27 = v26;
    uint64_t v28 = sub_1001EC370();
    uint64_t v30 = v29;

    char v31 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = a2;
    char v33 = v31;
    v60[0] = *v32;
    uint64_t v34 = v60[0];
    id v15 = v32;
    *uint64_t v32 = 0x8000000000000000;
    unint64_t v36 = sub_1001A87A0(v23, v25);
    uint64_t v37 = *(void *)(v34 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      goto LABEL_37;
    }
    char v40 = v35;
    if (*(void *)(v34 + 24) >= v39)
    {
      if (v33)
      {
        id v43 = (void *)v60[0];
        if ((v35 & 1) == 0) {
          goto LABEL_27;
        }
      }
      else
      {
        sub_1001ACB44();
        id v43 = (void *)v60[0];
        if ((v40 & 1) == 0) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      sub_1001AADC4(v39, v33);
      unint64_t v41 = sub_1001A87A0(v23, v25);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_45;
      }
      unint64_t v36 = v41;
      id v43 = (void *)v60[0];
      if ((v40 & 1) == 0)
      {
LABEL_27:
        v43[(v36 >> 6) + 8] |= 1 << v36;
        id v49 = (uint64_t *)(v43[6] + 16 * v36);
        *id v49 = v23;
        v49[1] = v25;
        id v50 = (uint64_t *)(v43[7] + 16 * v36);
        *id v50 = v28;
        v50[1] = v30;
        uint64_t v51 = v43[2];
        BOOL v52 = __OFADD__(v51, 1);
        uint64_t v53 = v51 + 1;
        if (v52) {
          goto LABEL_38;
        }
        v43[2] = v53;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      }
    }
    uint64_t v17 = (uint64_t *)(v43[7] + 16 * v36);
    swift_bridgeObjectRelease();
    *uint64_t v17 = v28;
    v17[1] = v30;
LABEL_8:
    *id v15 = (uint64_t)v43;
    a2 = v15;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v15 = v55;
    unint64_t v14 = v56;
    uint64_t v18 = (uint64_t *)(v16 - 3);
LABEL_9:
    ++v16;
    if (v18 == v15)
    {

      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  swift_once();
  uint64_t v7 = sub_1001EB560();
  sub_10007CFF8(v7, (uint64_t)qword_100295140);
  swift_errorRetain();
  swift_errorRetain();
  swift_retain();
  oslog = sub_1001EB540();
  os_log_type_t v8 = sub_1001EC8F0();
  if (os_log_type_enabled(oslog, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    v60[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = v15[2];
    unint64_t v11 = v15[3];
    swift_bridgeObjectRetain();
    sub_1001A8090(v10, v11, v60);
    sub_1001ECBC0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v12 = sub_1001ED110();
    sub_1001A8090(v12, v13, v60);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "migrateIfNecessary() error reading %s %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_100151368(void *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v87 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v8 = sub_1001EC340();
  uint64_t v9 = [v7 initWithEntityName:v8];

  uint64_t v10 = sub_100081668(0, &qword_100295218);
  unint64_t v17 = sub_1001ECA20();
  uint64_t v93 = (void *)v10;
  id v94 = a1;
  sub_1001EB0B0();
  uint64_t v95 = v9;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  os_log_type_t v19 = v93;
  uint64_t v20 = v4;
  uint64_t v86 = v4;
  uint64_t v90 = v6;
  if (v18)
  {
    unint64_t v92 = v17 & 0xC000000000000001;
    uint64_t v21 = 4;
    while (1)
    {
      id v22 = v92 ? (id)sub_1001ECD50() : *(id *)(v17 + 8 * v21);
      uint64_t v23 = v22;
      uint64_t v24 = v21 - 3;
      if (__OFADD__(v21 - 4, 1)) {
        break;
      }
      id v25 = [v22 key];
      if (!v25)
      {
        __break(1u);
LABEL_67:
        __break(1u);
      }
      id v26 = v25;
      uint64_t v27 = sub_1001EC370();
      uint64_t v29 = v28;

      if (*(void *)(*a2 + 16) && (sub_1001A87A0(v27, v29), (v30 & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        NSString v31 = sub_1001EC340();
        swift_bridgeObjectRelease();
        [v23 setValue:v31];

        id v32 = v23;
        char v33 = (char *)[v32 editGeneration];
        if (__OFADD__(v33, 1)) {
          goto LABEL_62;
        }
        [v32 setEditGeneration:v33 + 1];

        id v34 = v32;
        Class isa = sub_1001EB060().super.isa;
        [v34 setModificationDate:isa];

        id v36 = [v34 key];
        if (!v36) {
          goto LABEL_67;
        }
        uint64_t v37 = v36;
        uint64_t v38 = sub_1001EC370();
        uint64_t v40 = v39;

        swift_bridgeObjectRetain();
        unint64_t v41 = sub_1001A87A0(v38, v40);
        char v43 = v42;
        swift_bridgeObjectRelease();
        if (v43)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v45 = (id)*a2;
          id v97 = (id)*a2;
          *a2 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1001ACB44();
            id v45 = v97;
          }
          swift_bridgeObjectRelease();
          sub_100152724(v41, (uint64_t)v45);
          *a2 = (uint64_t)v45;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
        }
        swift_bridgeObjectRelease();
        uint64_t v20 = v86;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v21;
      unint64_t v6 = v90;
      os_log_type_t v19 = v93;
      if (v24 == v18) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    swift_once();
    goto LABEL_3;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  id v97 = v19;
  sub_10007DC14((uint64_t *)&unk_100295220);
  uint64_t v91 = sub_1001EC3D0();
  unint64_t v92 = v46;
  uint64_t v47 = *a2;
  uint64_t v48 = *(void *)(*a2 + 64);
  uint64_t v88 = *a2 + 64;
  uint64_t v49 = 1 << *(unsigned char *)(v47 + 32);
  uint64_t v50 = -1;
  if (v49 < 64) {
    uint64_t v50 = ~(-1 << v49);
  }
  unint64_t v51 = v50 & v48;
  int64_t v89 = (unint64_t)(v49 + 63) >> 6;
  uint64_t v93 = (void *)v47;
  swift_bridgeObjectRetain();
  int64_t v52 = 0;
  *(void *)&long long v53 = 136315394;
  long long v85 = v53;
  v84[1] = (char *)&type metadata for Any + 8;
  while (1)
  {
    uint64_t v12 = v95;
    if (v51)
    {
      unint64_t v59 = __clz(__rbit64(v51));
      v51 &= v51 - 1;
      unint64_t v60 = v59 | (v52 << 6);
      goto LABEL_46;
    }
    int64_t v61 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      goto LABEL_61;
    }
    uint64_t v62 = v87;
    if (v61 >= v89) {
      break;
    }
    unint64_t v63 = *(void *)(v88 + 8 * v61);
    ++v52;
    if (!v63)
    {
      int64_t v52 = v61 + 1;
      if (v61 + 1 >= v89) {
        break;
      }
      unint64_t v63 = *(void *)(v88 + 8 * v52);
      if (!v63)
      {
        int64_t v52 = v61 + 2;
        if (v61 + 2 >= v89) {
          break;
        }
        unint64_t v63 = *(void *)(v88 + 8 * v52);
        if (!v63)
        {
          int64_t v64 = v61 + 3;
          if (v64 >= v89) {
            break;
          }
          unint64_t v63 = *(void *)(v88 + 8 * v64);
          if (!v63)
          {
            while (1)
            {
              int64_t v52 = v64 + 1;
              if (__OFADD__(v64, 1)) {
                goto LABEL_63;
              }
              if (v52 >= v89) {
                goto LABEL_53;
              }
              unint64_t v63 = *(void *)(v88 + 8 * v52);
              ++v64;
              if (v63) {
                goto LABEL_45;
              }
            }
          }
          int64_t v52 = v64;
        }
      }
    }
LABEL_45:
    unint64_t v51 = (v63 - 1) & v63;
    unint64_t v60 = __clz(__rbit64(v63)) + (v52 << 6);
LABEL_46:
    uint64_t v65 = 16 * v60;
    uint64_t v66 = (uint64_t *)(v93[6] + v65);
    uint64_t v68 = *v66;
    unint64_t v67 = v66[1];
    uint64_t v69 = (uint64_t *)(v93[7] + v65);
    uint64_t v70 = *v69;
    unint64_t v71 = v69[1];
    os_log_type_t v72 = self;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v73 = sub_1001EC340();
    id v74 = [v72 insertNewObjectForEntityForName:v73 inManagedObjectContext:v94];

    self;
    uint64_t v75 = swift_dynamicCastObjCClass();
    if (v75)
    {
      objc_super v54 = (void *)v75;
      swift_bridgeObjectRetain();
      NSString v55 = sub_1001EC340();
      swift_bridgeObjectRelease();
      [v54 setKey:v55];
      swift_bridgeObjectRelease();

      NSString v56 = sub_1001EC340();
      swift_bridgeObjectRelease();
      [v54 setValue:v56];

      [v54 setEditGeneration:1];
      id v57 = v74;
      Class v58 = sub_1001EB060().super.isa;
      [v54 setModificationDate:v58];
    }
    else
    {

      if (qword_100291120 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_1001EB560();
      sub_10007CFF8(v76, (uint64_t)qword_100295140);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v77 = sub_1001EB540();
      os_log_type_t v78 = sub_1001EC8F0();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = swift_slowAlloc();
        id v97 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v79 = v85;
        swift_bridgeObjectRetain();
        *(void *)(v79 + 4) = sub_1001A8090(v68, v67, (uint64_t *)&v97);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v79 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v79 + 14) = sub_1001A8090(v70, v71, (uint64_t *)&v97);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "migrateIfNecessary() unable to insert key/value pair %s=%s", (uint8_t *)v79, 0x16u);
        swift_arrayDestroy();
        uint64_t v20 = v86;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      unint64_t v6 = v90;
    }
  }
LABEL_53:
  swift_bridgeObjectRelease();
  swift_release();
  id v80 = v94;
  if (([v94 hasChanges] & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v6, v20);
    goto LABEL_58;
  }
  id v97 = 0;
  if ([v80 save:&v97])
  {
    uint64_t v81 = *(void (**)(char *, uint64_t))(v62 + 8);
    id v82 = v97;
    v81(v6, v20);

    return;
  }
  id v83 = v97;
  sub_1001EAE60();

  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v6, v20);
  if (qword_100291120 != -1) {
    goto LABEL_64;
  }
LABEL_3:
  uint64_t v11 = sub_1001EB560();
  sub_10007CFF8(v11, (uint64_t)qword_100295140);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = sub_1001EB540();
  os_log_type_t v13 = sub_1001EC8F0();
  if (os_log_type_enabled(v12, v13))
  {
    unint64_t v14 = (uint8_t *)swift_slowAlloc();
    id v97 = (id)swift_slowAlloc();
    *(_DWORD *)unint64_t v14 = 136315138;
    swift_getErrorValue();
    uint64_t v15 = sub_1001ED110();
    uint64_t v96 = sub_1001A8090(v15, v16, (uint64_t *)&v97);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "migrateIfNecessary() error %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_58:
  }
}

uint64_t CloudSecureUserDataMigrator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CloudSecureUserDataMigrator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudSecureUserDataMigrator()
{
  return self;
}

uint64_t sub_100151F1C()
{
  swift_release();
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100151F5C()
{
  sub_100150D0C(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_100151F68()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100151F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100151F88()
{
  return swift_release();
}

uint64_t sub_100151F90()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100151FC8()
{
  sub_100151368(*(void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_100151FD4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100151FE4()
{
  *(void *)(v0 + 16) = 0xD000000000000015;
  *(void *)(v0 + 24) = 0x8000000100221380;
  *(void *)(v0 + 32) = 0xD000000000000020;
  *(void *)(v0 + 40) = 0x80000001002213A0;
  *(_OWORD *)(v0 + 48) = xmmword_100219410;
  *(void *)(v0 + 64) = 0x80000001002213D0;
  sub_10007DC14(&qword_1002911F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215330;
  *(void *)(inited + 32) = sub_1001EC370();
  *(void *)(inited + 40) = v2;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = sub_1001EC370();
  *(void *)(inited + 64) = v3;
  *(unsigned char *)(inited + 72) = 1;
  *(void *)(inited + 80) = sub_1001EC370();
  *(void *)(inited + 88) = v4;
  *(unsigned char *)(inited + 96) = 1;
  *(void *)(v0 + 72) = sub_100121AB0(inited);
  return v0;
}

unint64_t sub_1001520E8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1001ECC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_1001ED160();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *unint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            unint64_t v16 = (_OWORD *)(v15 + 16 * v3);
            unint64_t v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *unint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100152280(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v41 = a2 + 64;
    unint64_t result = sub_1001ECC40();
    uint64_t v12 = v41;
    if ((*(void *)(v41 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v39 = (result + 1) & v11;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v38 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v38(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_100152DD4();
        uint64_t v18 = sub_1001EC2E0();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v39)
        {
          if (v19 < v39 || a1 < (uint64_t)v19) {
            goto LABEL_6;
          }
        }
        else if (v19 < v39 && a1 < (uint64_t)v19)
        {
          goto LABEL_6;
        }
        uint64_t v22 = *(void *)(a2 + 48);
        unint64_t v23 = v22 + v15 * a1;
        unint64_t v24 = v22 + v17 + v15;
        if (v15 * a1 < v17 || v23 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v15 * a1 != v17)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v26 = *(void *)(a2 + 56);
        uint64_t v27 = *(void *)(*(void *)(type metadata accessor for ReadingHistoryDay(0) - 8) + 72);
        int64_t v28 = v27 * a1;
        unint64_t result = v26 + v27 * a1;
        int64_t v29 = v27 * v10;
        unint64_t v30 = v26 + v27 * v10 + v27;
        if (v28 < v29 || result >= v30)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v28 == v29) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v12 = v41;
      }
      while (((*(void *)(v41 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    id v32 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v32;
    uint64_t v34 = (-1 << a1) - 1;
  }
  else
  {
    id v32 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v34 = *v32;
    uint64_t v33 = (-1 << a1) - 1;
  }
  *id v32 = v34 & v33;
  uint64_t v35 = *(void *)(a2 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_100152570(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1001ECC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = sub_1001ECAF0(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            int64_t v17 = (void *)(v16 + 8 * v3);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *int64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (void *)(v19 + 8 * v3);
            uint64_t v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *uint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_100152724(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1001ECC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1001ED170();
        swift_bridgeObjectRetain();
        sub_1001EC440();
        Swift::Int v9 = sub_1001ED1A0();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          Swift::Int v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            _OWORD *v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1001528FC(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1001ECC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v12 = *(void *)(a2 + 40);
        id v13 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v14 = sub_1001ECAF0(v12);

        Swift::Int v15 = v14 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v15 >= v9 && v3 >= v15)
          {
LABEL_16:
            uint64_t v18 = *(void *)(a2 + 48);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || v19 >= v20 + 1) {
              *uint64_t v19 = *v20;
            }
            uint64_t v21 = *(void *)(a2 + 56);
            unint64_t v22 = v21 + 40 * v3;
            uint64_t v23 = (long long *)(v21 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v22 >= (unint64_t)v23 + 40))
            {
              long long v10 = *v23;
              long long v11 = v23[1];
              *(void *)(v22 + 32) = *((void *)v23 + 4);
              *(_OWORD *)unint64_t v22 = v10;
              *(_OWORD *)(v22 + 16) = v11;
              int64_t v3 = v6;
            }
          }
        }
        else if (v15 >= v9 || v3 >= v15)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_100152AC4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1001ECC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        uint64_t v9 = 24 * v6;
        Swift::UInt8 v10 = *(unsigned char *)(*(void *)(a2 + 48) + 24 * v6 + 16);
        sub_1001ED170();
        swift_bridgeObjectRetain();
        sub_1001EC440();
        sub_1001ED190(v10);
        Swift::Int v11 = sub_1001ED1A0();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v12 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        unint64_t v14 = v13 + 24 * v3;
        Swift::Int v15 = (long long *)(v13 + v9);
        if (24 * v3 < v9 || v14 >= (unint64_t)v15 + 24 || v3 != v6)
        {
          long long v16 = *v15;
          *(void *)(v14 + 16) = *((void *)v15 + 2);
          *(_OWORD *)unint64_t v14 = v16;
        }
        uint64_t v17 = *(void *)(a2 + 56);
        uint64_t v18 = *(void *)(*(void *)(_s14PricingServiceV12FetchedPriceVMa(0) - 8) + 72);
        int64_t v19 = v18 * v3;
        unint64_t result = v17 + v18 * v3;
        int64_t v20 = v18 * v6;
        unint64_t v21 = v17 + v18 * v6 + v18;
        if (v19 < v20 || result >= v21)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v19 == v20) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_22;
        }
      }
      if (v12 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_22:
    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100152D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100295B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100152D74(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100295B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100152DD4()
{
  unint64_t result = qword_100295B60;
  if (!qword_100295B60)
  {
    sub_1001EB0C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100295B60);
  }
  return result;
}

Swift::Int sub_100152E34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9 = sub_1001EC460();
  swift_bridgeObjectRetain();
  sub_1001ECBA0();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1001ECBA0();
  uint64_t v13 = v12;
  Swift::Int result = swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  unint64_t v15 = a4 & 0x800000000000000;
  char v16 = (a5 & 0x1000000000000000) == 0 || (a4 & 0x800000000000000) != 0;
  uint64_t v17 = a2;
  if ((a5 & 0x1000000000000000) != 0)
  {
    Swift::Int result = sub_1001EC4E0();
    Swift::Int v18 = result;
    if (v15) {
      uint64_t v19 = 7;
    }
    else {
      uint64_t v19 = 11;
    }
  }
  else
  {
    Swift::Int v18 = 0;
    uint64_t v19 = 7;
  }
  uint64_t v20 = 4 << v16;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v21 = HIBYTE(a5) & 0xF;
  }
  else {
    unint64_t v21 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v22 = 4 << (v15 >> 59);
  unint64_t v23 = v19 | (v21 << 16);
  if ((a5 & 0x1000000000000000) == 0) {
    uint64_t v22 = 8;
  }
  unint64_t v24 = v9;
  if ((v9 & 0xC) == v22)
  {
    Swift::Int v28 = v18;
    Swift::Int result = sub_1000D5F2C(v9, a4, a5);
    Swift::Int v18 = v28;
    unint64_t v24 = result;
  }
  if ((v19 & 0xC) == v20)
  {
    Swift::Int v29 = v18;
    Swift::Int result = sub_1000D5F2C(v19, a4, a5);
    Swift::Int v18 = v29;
    unint64_t v23 = result;
    uint64_t v25 = v17;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v26 = (v23 >> 16) - (v24 >> 16);
      if ((a3 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v25 = v17;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_17;
    }
  }
  if (v21 < v24 >> 16)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v21 >= v23 >> 16)
  {
    Swift::Int v30 = v18;
    uint64_t v31 = sub_1001EC4E0();
    Swift::Int v18 = v30;
    uint64_t v26 = v31;
    if ((a3 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a3 & 0x2000000000000000) != 0)
      {
        Swift::Int result = HIBYTE(a3) & 0xF;
        Swift::Int v27 = v18 + result;
        if (!__OFADD__(v18, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        Swift::Int result = v25 & 0xFFFFFFFFFFFFLL;
        Swift::Int v27 = v18 + (v25 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v18, v25 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_35;
    }
LABEL_33:
    Swift::Int v32 = v18;
    Swift::Int result = sub_1001EC4B0();
    Swift::Int v27 = v32 + result;
    if (!__OFADD__(v32, result))
    {
LABEL_23:
      Swift::Int result = v27 + v26;
      if (!__OFADD__(v27, v26))
      {
        sub_1001EC420(result);
LABEL_25:
        sub_1001EC550();
        sub_1000D6CE8();
        sub_1001EC480();
        swift_bridgeObjectRelease();
        sub_1001EC480();
        sub_100157520(v9, a4, a5);
        sub_1001EC480();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_36;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100153134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_1002952C0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v18 - v8;
  uint64_t v10 = (uint64_t)v2 + OBJC_IVAR____TtC14bookdatastored19CRDTModelSyncEntity____lazy_storage___logger;
  swift_beginAccess();
  sub_100158070(v10, (uint64_t)v9);
  uint64_t v11 = sub_1001EB560();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v9, v11);
  }
  sub_1000816A4((uint64_t)v9, (uint64_t *)&unk_1002952C0);
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  sub_1001ECD20(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v18, "CRDTModelSync.");
  HIBYTE(v18[1]) = -18;
  id v13 = objc_msgSend(v2, "type", v18[0], v18[1]);
  uint64_t v14 = sub_1001EC370();
  char v16 = v15;

  v19._countAndFlagsBits = v14;
  v19._object = v16;
  sub_1001EC490(v19);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v7, a1, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  swift_beginAccess();
  sub_1001580D8((uint64_t)v7, v10);
  return swift_endAccess();
}

Swift::Void __swiftcall CRDTModelSyncEntity.configure(from:withMergers:)(BCCloudData from, Swift::OpaquePointer_optional withMergers)
{
  int64_t v3 = v2;
  privacyDelegate = from._privacyDelegate;
  Class isa = from.super.super.isa;
  uint64_t v6 = sub_1001EB560();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = __chkstk_darwin((char *)&v131 - v10);
  id v13 = (char *)&v131 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v17 = __chkstk_darwin(v16);
  unint64_t v24 = (char *)&v131 - v23;
  if (!privacyDelegate) {
    return;
  }
  uint64_t v144 = v19;
  uint64_t v142 = v18;
  uint64_t v139 = v17;
  uint64_t v140 = v22;
  uint64_t v141 = v21;
  os_log_t v145 = v20;
  id v25 = [(objc_class *)isa recordType];
  uint64_t v26 = sub_1001EC370();
  uint64_t v28 = v27;

  uint64_t v143 = v26;
  uint64_t v147 = v26;
  uint64_t v148 = v28;
  swift_bridgeObjectRetain();
  sub_1001ECCD0();
  if (!*((void *)privacyDelegate + 2) || (unint64_t v29 = sub_1001A8680((uint64_t)v149), (v30 & 1) == 0))
  {
    sub_100087A68((uint64_t)v149);
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v136 = *(const void **)(*((void *)privacyDelegate + 7) + 8 * v29);
  _Block_copy(v136);
  sub_100087A68((uint64_t)v149);
  swift_getObjectType();
  uint64_t v31 = swift_conformsToProtocol2();
  if (v31) {
    uint64_t v32 = v31;
  }
  else {
    uint64_t v32 = 0;
  }
  if (v31) {
    Class v33 = isa;
  }
  else {
    Class v33 = 0;
  }
  Class v138 = v33;
  if (v33)
  {
    uint64_t v133 = v7;
    uint64_t v134 = v6;
    Class v137 = isa;
    swift_unknownObjectRetain();
    id v34 = [v3 type];
    uint64_t v35 = sub_1001EC370();
    unint64_t v37 = v36;

    swift_bridgeObjectRelease();
    uint64_t v38 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0) {
      uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v135 = v32;
    if (v38)
    {
      id v39 = [v3 type];
      uint64_t v40 = sub_1001EC370();
      uint64_t v42 = v41;

      uint64_t ObjectType = swift_getObjectType();
      unint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8);
      uint64_t v131 = ObjectType;
      uint64_t v132 = v44;
      uint64_t v45 = v44(ObjectType, v32);
      uint64_t v47 = v144;
      if (v40 == v45 && v42 == v46)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v53 = sub_1001ED080();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v53 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_100153134((uint64_t)v24);
          swift_unknownObjectRetain_n();
          id v71 = v3;
          os_log_type_t v72 = sub_1001EB540();
          os_log_type_t v73 = sub_1001EC8F0();
          int v74 = v73;
          if (os_log_type_enabled(v72, v73))
          {
            uint64_t v75 = swift_slowAlloc();
            v149[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v75 = 136315394;
            os_log_t v145 = v72;
            LODWORD(v144) = v74;
            uint64_t v76 = v132(v131, v135);
            uint64_t v147 = sub_1001A8090(v76, v77, v149);
            sub_1001ECBC0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v75 + 12) = 2080;
            id v78 = [v71 type];
            uint64_t v79 = sub_1001EC370();
            unint64_t v81 = v80;

            uint64_t v147 = sub_1001A8090(v79, v81, v149);
            sub_1001ECBC0();

            swift_bridgeObjectRelease();
            os_log_t v82 = v145;
            _os_log_impl((void *)&_mh_execute_header, v145, (os_log_type_t)v144, "CRDTModelSyncEntity incompatible type %s passed in. Expecting %s", (uint8_t *)v75, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            _Block_release(v136);
            swift_unknownObjectRelease();
          }
          else
          {

            swift_unknownObjectRelease_n();
            _Block_release(v136);

            swift_unknownObjectRelease();
          }
          (*(void (**)(char *, uint64_t))(v133 + 8))(v24, v134);
          return;
        }
      }
      uint64_t v52 = v135;
      unint64_t v51 = (void (*)(uint64_t, uint64_t))v132;
    }
    else
    {
      unint64_t v51 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      uint64_t v52 = v32;
      uint64_t v47 = v144;
    }
    Class v54 = v138;
    uint64_t v144 = swift_getObjectType();
    v51(v144, v52);
    NSString v55 = sub_1001EC340();
    swift_bridgeObjectRelease();
    [v3 setType:v55];

    swift_unknownObjectRetain();
    sub_10007DC14(&qword_1002924D0);
    Class v56 = sub_1001EC250().super.isa;
    id v57 = (objc_class *)type metadata accessor for CRDTModelSyncEntity();
    v146.receiver = v3;
    v146.super_class = v57;
    objc_msgSendSuper2(&v146, "configureFromCloudData:withMergers:", v54, v56);
    swift_unknownObjectRelease();

    sub_100153134(v47);
    swift_unknownObjectRetain_n();
    Class v58 = v3;
    unint64_t v59 = sub_1001EB540();
    os_log_type_t v60 = sub_1001EC910();
    BOOL v61 = os_log_type_enabled(v59, v60);
    uint64_t v132 = v58;
    if (v61)
    {
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 134218240;
      id v63 = [v58 protoData];
      if (v63)
      {
        int64_t v64 = v63;
        uint64_t v65 = sub_1001EAFE0();
        unint64_t v67 = v66;

        uint64_t v68 = v133;
        switch(v67 >> 62)
        {
          case 1uLL:
            sub_100081714(v65, v67);

            LODWORD(v69) = HIDWORD(v65) - v65;
            if (__OFSUB__(HIDWORD(v65), v65))
            {
              __break(1u);
LABEL_70:
              __break(1u);
LABEL_71:
              __break(1u);
LABEL_72:
              __break(1u);
LABEL_73:
              __break(1u);
LABEL_74:
              __break(1u);
              JUMPOUT(0x100154AA4);
            }
            uint64_t v69 = (int)v69;
            break;
          case 2uLL:
            id v83 = v58;
            uint64_t v85 = *(void *)(v65 + 16);
            uint64_t v84 = *(void *)(v65 + 24);
            sub_100081714(v65, v67);

            uint64_t v69 = v84 - v85;
            if (__OFSUB__(v84, v85)) {
              goto LABEL_70;
            }
            uint64_t v68 = v133;
            break;
          case 3uLL:
            sub_100081714(v65, v67);

            uint64_t v69 = 0;
            goto LABEL_41;
          default:
            sub_100081714(v65, v67);

            uint64_t v69 = BYTE6(v67);
            goto LABEL_41;
        }
        Class v58 = v132;
      }
      else
      {

        uint64_t v69 = -1;
        uint64_t v68 = v133;
      }
LABEL_41:
      v149[0] = v69;
      sub_1001ECBC0();

      *(_WORD *)(v62 + 12) = 2048;
      uint64_t v86 = (*(uint64_t (**)(uint64_t))(v135 + 16))(v144);
      if (v87 >> 60 == 15)
      {
        swift_unknownObjectRelease();
        uint64_t v88 = -1;
      }
      else
      {
        unsigned __int8 v89 = BYTE6(v87);
        int v90 = v86;
        switch(v87 >> 62)
        {
          case 1uLL:
            int v91 = HIDWORD(v86);
            sub_100081700(v86, v87);
            swift_unknownObjectRelease();
            LODWORD(v88) = v91 - v90;
            if (__OFSUB__(v91, v90)) {
              goto LABEL_73;
            }
            uint64_t v88 = (int)v88;
            break;
          case 2uLL:
            uint64_t v93 = *(void *)(v86 + 16);
            uint64_t v92 = *(void *)(v86 + 24);
            sub_100081700(v86, v87);
            swift_unknownObjectRelease();
            uint64_t v88 = v92 - v93;
            if (__OFSUB__(v92, v93)) {
              goto LABEL_74;
            }
            uint64_t v68 = v133;
            break;
          case 3uLL:
            sub_100081700(v86, v87);
            swift_unknownObjectRelease();
            uint64_t v88 = 0;
            goto LABEL_51;
          default:
            sub_100081700(v86, v87);
            swift_unknownObjectRelease();
            uint64_t v88 = v89;
            goto LABEL_51;
        }
        Class v58 = v132;
      }
LABEL_51:
      v149[0] = v88;
      sub_1001ECBC0();
      swift_unknownObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "CRDTModelSyncEntity Merging: existing data (%ld bytes) with incoming data (%ld bytes)", (uint8_t *)v62, 0x16u);
      swift_slowDealloc();

      uint64_t v70 = v134;
    }
    else
    {

      swift_unknownObjectRelease_n();
      uint64_t v70 = v134;
      uint64_t v68 = v133;
    }
    id v94 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    v94(v47, v70);
    uint64_t v95 = (*(uint64_t (**)(uint64_t))(v135 + 16))(v144);
    unint64_t v97 = v96;
    swift_bridgeObjectRetain();
    uint64_t v98 = v136;
    _Block_copy(v136);
    sub_100157B80(v95, v97, v58, v98);
    swift_bridgeObjectRelease_n();
    sub_100081700(v95, v97);
    uint64_t v99 = v142;
    sub_100153134(v142);
    Class v100 = v137;
    swift_unknownObjectRetain_n();
    uint64_t v101 = v58;
    uint64_t v102 = sub_1001EB540();
    os_log_type_t v103 = sub_1001EC910();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = swift_slowAlloc();
      uint64_t v143 = swift_slowAlloc();
      v149[0] = v143;
      *(_DWORD *)uint64_t v104 = 136315394;
      id v105 = [(objc_class *)v100 recordType];
      uint64_t v106 = sub_1001EC370();
      uint64_t v144 = (uint64_t)v94;
      unint64_t v108 = v107;

      uint64_t v147 = sub_1001A8090(v106, v108, v149);
      sub_1001ECBC0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v104 + 12) = 2080;
      id v109 = [v101 debugDescription];
      uint64_t v110 = sub_1001EC370();
      unint64_t v112 = v111;

      uint64_t v113 = v110;
      id v94 = (void (*)(uint64_t, uint64_t))v144;
      uint64_t v114 = v134;
      uint64_t v147 = sub_1001A8090(v113, v112, v149);
      uint64_t v70 = v114;
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "CRDTModelSyncEntity Merging: Adopted properties from cloudData: %s %s", (uint8_t *)v104, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v115 = v142;
      uint64_t v116 = v114;
    }
    else
    {

      swift_unknownObjectRelease_n();
      uint64_t v115 = v99;
      uint64_t v116 = v70;
    }
    v94(v115, v116);
    os_log_t v117 = v145;
    uint64_t v118 = v132;
    sub_100153134((uint64_t)v145);
    uint64_t v119 = v118;
    uint64_t v120 = sub_1001EB540();
    os_log_type_t v121 = sub_1001EC910();
    if (os_log_type_enabled(v120, v121))
    {
      uint64_t v122 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v122 = 134217984;
      id v123 = [v119 protoData];
      if (v123)
      {
        uint64_t v124 = v123;
        uint64_t v125 = sub_1001EAFE0();
        unint64_t v127 = v126;

        switch(v127 >> 62)
        {
          case 1uLL:
            sub_100081714(v125, v127);

            LODWORD(v128) = HIDWORD(v125) - v125;
            if (__OFSUB__(HIDWORD(v125), v125)) {
              goto LABEL_71;
            }
            uint64_t v128 = (int)v128;
            goto LABEL_66;
          case 2uLL:
            uint64_t v130 = *(void *)(v125 + 16);
            uint64_t v129 = *(void *)(v125 + 24);
            sub_100081714(v125, v127);

            uint64_t v128 = v129 - v130;
            if (__OFSUB__(v129, v130)) {
              goto LABEL_72;
            }
            os_log_t v117 = v145;
            uint64_t v70 = v134;
            goto LABEL_67;
          case 3uLL:
            sub_100081714(v125, v127);

            uint64_t v128 = 0;
            goto LABEL_66;
          default:
            sub_100081714(v125, v127);

            uint64_t v128 = BYTE6(v127);
            goto LABEL_66;
        }
      }

      uint64_t v128 = -1;
LABEL_66:
      os_log_t v117 = v145;
LABEL_67:
      v149[0] = v128;
      sub_1001ECBC0();

      _os_log_impl((void *)&_mh_execute_header, v120, v121, "CRDTModelSyncEntity Merging: merged data (%ld bytes)", v122, 0xCu);
      swift_slowDealloc();
      _Block_release(v136);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();

      _Block_release(v136);
      uint64_t v120 = v119;
    }

    v94((uint64_t)v117, v70);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100153134((uint64_t)v13);
    uint64_t v48 = sub_1001EB540();
    os_log_type_t v49 = sub_1001EC8F0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "CRDTModelSyncEntity configure(from:) wrong class passed in", v50, 2u);
      swift_slowDealloc();
    }
    _Block_release(v136);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
}

Swift::Bool __swiftcall CRDTModelSyncEntity.isEqualExceptForDate(_:ignoringEmptySalt:)(BCCloudData _, Swift::Bool ignoringEmptySalt)
{
  int64_t v3 = v2;
  char privacyDelegate = (char)_._privacyDelegate;
  Class isa = _.super.super.isa;
  swift_getObjectType();
  uint64_t v6 = swift_conformsToProtocol2();
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v6) {
    Class v8 = isa;
  }
  else {
    Class v8 = 0;
  }
  if (!v8) {
    goto LABEL_25;
  }
  v27.receiver = v3;
  v27.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  swift_unknownObjectRetain();
  if (!objc_msgSendSuper2(&v27, "isEqualExceptForDate:ignoringEmptySalt:", isa, privacyDelegate & 1)) {
    goto LABEL_14;
  }
  id v9 = objc_msgSend(v3, "type", v27.receiver, v27.super_class);
  uint64_t v10 = sub_1001EC370();
  uint64_t v12 = v11;

  uint64_t ObjectType = swift_getObjectType();
  if (v10 == (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7) && v12 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_1001ED080();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
LABEL_14:
      swift_unknownObjectRelease();
LABEL_25:
      char v25 = 0;
      return v25 & 1;
    }
  }
  id v17 = [v3 protoData];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_1001EAFE0();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xF000000000000000;
  }
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  unint64_t v24 = v22;
  if (v21 >> 60 != 15)
  {
    if (v22 >> 60 != 15)
    {
      sub_10009366C(v19, v21);
      char v25 = sub_1001578E8(v19, v21, v23, v24);
      swift_unknownObjectRelease();
      sub_100081700(v23, v24);
      sub_100081700(v19, v21);
      sub_100081700(v19, v21);
      return v25 & 1;
    }
    swift_unknownObjectRelease();
    goto LABEL_24;
  }
  swift_unknownObjectRelease();
  if (v24 >> 60 != 15)
  {
LABEL_24:
    sub_100081700(v19, v21);
    sub_100081700(v23, v24);
    goto LABEL_25;
  }
  char v25 = 1;
  return v25 & 1;
}

Swift::Void __swiftcall CRDTModelSyncEntity.resolveConflicts(from:withResolvers:)(CKRecord from, Swift::OpaquePointer_optional withResolvers)
{
  rawValue = withResolvers.value._rawValue;
  uint64_t v4 = sub_1001EB560();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Class v8 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v83 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v83 - v13;
  __chkstk_darwin(v12);
  uint64_t v94 = (uint64_t)v83 - v15;
  uint64_t v16 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v16 - 8);
  uint64_t v95 = (uint64_t)v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001EAF60();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  __chkstk_darwin(v20);
  if (!rawValue) {
    return;
  }
  int v90 = v14;
  unsigned __int8 v89 = v11;
  int v91 = v8;
  uint64_t v92 = (char *)v83 - v21;
  Class isa = from.super.isa;
  uint64_t v98 = sub_1001ECAB0();
  uint64_t v99 = v22;
  swift_bridgeObjectRetain();
  sub_1001ECCD0();
  if (!rawValue[2] || (unint64_t v23 = sub_1001A8680((uint64_t)v100), (v24 & 1) == 0))
  {
    sub_100087A68((uint64_t)v100);
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v84 = v4;
  uint64_t v86 = v18;
  uint64_t v85 = v5;
  uint64_t v87 = v19;
  uint64_t v88 = *(const void **)(rawValue[7] + 8 * v23);
  _Block_copy(v88);
  sub_100087A68((uint64_t)v100);
  uint64_t v25 = sub_1001ECAB0();
  uint64_t v27 = v26;
  id v28 = [v96 recordType];
  uint64_t v29 = sub_1001EC370();
  uint64_t v31 = v30;

  if (v25 == v29 && v27 == v31)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v32 = sub_1001ED080();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
LABEL_16:
      _Block_release(v88);
      goto LABEL_8;
    }
  }
  Class v33 = isa;
  uint64_t v34 = sub_1001ECAC0();
  if (!v34) {
    goto LABEL_16;
  }
  uint64_t v35 = v34;
  self;
  unint64_t v36 = (void *)swift_dynamicCastObjCClass();
  if (!v36)
  {
    _Block_release(v88);
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  v83[1] = v35;
  id v37 = [v36 fileURL];
  if (v37)
  {
    uint64_t v38 = v37;
    sub_1001EAF10();

    uint64_t v39 = v87;
    uint64_t v40 = *(void (**)(void))(v87 + 32);
    uint64_t v41 = v95;
    uint64_t v42 = v86;
    v40();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v42);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v41, 1, v42) != 1)
    {
      uint64_t v43 = v41;
      Class v44 = v33;
      ((void (*)(char *, uint64_t, uint64_t))v40)(v92, v43, v42);
      sub_10007DC14(&qword_1002924D0);
      Class v45 = sub_1001EC250().super.isa;
      uint64_t v46 = (objc_class *)type metadata accessor for CRDTModelSyncEntity();
      id v47 = v96;
      v97.receiver = v96;
      v97.super_class = v46;
      objc_msgSendSuper2(&v97, "resolveConflictsFromRecord:withResolvers:", v44, v45);

      uint64_t v61 = sub_1001EAF80();
      id v63 = v62;
      swift_bridgeObjectRetain();
      int64_t v64 = v88;
      _Block_copy(v88);
      sub_100093680(v61, (unint64_t)v63);
      sub_100157B80(v61, (unint64_t)v63, v47, v64);
      swift_bridgeObjectRelease_n();
      sub_100081714(v61, (unint64_t)v63);
      uint64_t v65 = v94;
      sub_100153134(v94);
      unint64_t v66 = isa;
      id v67 = v47;
      uint64_t v68 = v66;
      id v69 = v67;
      uint64_t v70 = sub_1001EB540();
      os_log_type_t v71 = sub_1001EC910();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = swift_slowAlloc();
        v100[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v72 = 136315394;
        id v96 = v63;
        id v73 = [(objc_class *)v68 recordID];
        uint64_t v95 = v61;
        id v74 = v73;
        id v75 = [v73 recordName];

        uint64_t v76 = sub_1001EC370();
        unint64_t v78 = v77;

        uint64_t v98 = sub_1001A8090(v76, v78, v100);
        sub_1001ECBC0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v72 + 12) = 2080;
        id v79 = [v69 debugDescription];
        uint64_t v80 = sub_1001EC370();
        unint64_t v82 = v81;

        uint64_t v98 = sub_1001A8090(v80, v82, v100);
        sub_1001ECBC0();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "CRDTModelSyncEntity Resolving: Adopted properties from record: %s %s", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        _Block_release(v88);

        swift_unknownObjectRelease();
        sub_100081714(v95, (unint64_t)v96);
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v94, v84);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v92, v86);
      }
      else
      {
        _Block_release(v88);

        swift_unknownObjectRelease();
        sub_100081714(v61, (unint64_t)v63);
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v65, v84);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v92, v42);
      }
      return;
    }
  }
  else
  {
    uint64_t v41 = v95;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v95, 1, 1, v86);
  }
  swift_bridgeObjectRelease();
  sub_1000816A4(v41, &qword_100295230);
  sub_1001EC8F0();
  if (qword_1002910C8 != -1) {
    swift_once();
  }
  uint64_t v48 = (void *)qword_100292120;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_100215310;
  id v50 = v48;
  id v51 = [v96 type];
  uint64_t v52 = sub_1001EC370();
  uint64_t v54 = v53;

  *(void *)(v49 + 56) = &type metadata for String;
  unint64_t v55 = sub_10007DC58();
  *(void *)(v49 + 64) = v55;
  *(void *)(v49 + 32) = v52;
  *(void *)(v49 + 40) = v54;
  id v56 = [(objc_class *)v33 recordID];
  id v57 = [v56 recordName];

  uint64_t v58 = sub_1001EC370();
  uint64_t v60 = v59;

  *(void *)(v49 + 96) = &type metadata for String;
  *(void *)(v49 + 104) = v55;
  *(void *)(v49 + 72) = v58;
  *(void *)(v49 + 80) = v60;
  sub_1001EB530();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  _Block_release(v88);
}

uint64_t sub_100156048(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  NSString v8 = sub_1001EC340();
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = sub_1001EAFD0().super.isa;
  }
  if (a4 >> 60 == 15) {
    Class v10 = 0;
  }
  else {
    Class v10 = sub_1001EAFD0().super.isa;
  }
  id v11 = (id)(*(uint64_t (**)(uint64_t, NSString, Class, Class))(a5 + 16))(a5, v8, isa, v10);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_1001ECBF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_100152D0C((uint64_t)v14, (uint64_t)v15);
  if (v16)
  {
    if (swift_dynamicCast()) {
      return v13;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1000816A4((uint64_t)v15, &qword_100295B50);
    return 0;
  }
}

uint64_t static CRDTModelSyncEntity.propertyIDKey()()
{
  return 1701869940;
}

id CRDTModelSyncEntity.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone(v2) initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

id CRDTModelSyncEntity.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  id v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

id CRDTModelSyncEntity.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10015647C()
{
  id v1 = [v0 type];
  uint64_t v2 = sub_1001EC370();

  return v2;
}

uint64_t sub_1001564D4()
{
  id v1 = [v0 protoData];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1001EAFE0();

  return v3;
}

id CRDTModelSyncEntity.mutableCopy()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = (objc_class *)type metadata accessor for CRDTModelSync();
  id result = [objc_allocWithZone(v4) initWithCloudData:v2];
  if (result)
  {
    a1[3] = v4;
    *a1 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CRDTModelSyncEntity.debugDescription.getter()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  id v1 = objc_msgSendSuper2(&v7, "debugDescription");
  uint64_t v2 = sub_1001EC370();

  uint64_t v3 = sub_10015756C(v0);
  id v5 = v4;
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v3;
  v8._object = v5;
  sub_1001EC490(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

Swift::String __swiftcall CRDTModelSyncEntity.recordType()()
{
  id v1 = [v0 type];
  uint64_t v2 = sub_1001EC370();
  unint64_t v4 = v3;

  sub_1001EC530();
  uint64_t v5 = sub_1001EC3E0();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  Swift::Int v8 = sub_100152E34(15, v5, v7, v2, v4);
  Class v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v8;
  uint64_t v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

Swift::String_optional __swiftcall CRDTModelSyncEntity.identifier()()
{
  uint64_t v1 = sub_1001576A8(v0);
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

NSString CRDTModelSyncEntity.zoneName()()
{
  id v1 = [v0 type];
  sub_1001EC370();

  NSString v2 = sub_1001EC340();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_100156AF4(uint64_t a1)
{
  NSString v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0xE000000000000000;
  unint64_t v6 = &v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
  *(_OWORD *)&v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData] = xmmword_100215AF0;
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v9)
  {
    uint64_t v10 = swift_getObjectType();
    v24.receiver = v2;
    v24.super_class = ObjectType;
    swift_unknownObjectRetain_n();
    id v11 = objc_msgSendSuper2(&v24, "initWithCloudData:", v9);
    swift_unknownObjectRelease();
    if (v11)
    {

      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      uint64_t v13 = (char *)v11;
      uint64_t v14 = v12(v10, v8);
      uint64_t v15 = (uint64_t *)&v13[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type];
      *uint64_t v15 = v14;
      v15[1] = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v10, v8);
      uint64_t v19 = v18;
      swift_unknownObjectRelease_n();
      uint64_t v20 = (uint64_t *)&v13[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
      uint64_t v21 = *(void *)&v13[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData];
      unint64_t v22 = *(void *)&v13[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8];
      *uint64_t v20 = v17;
      v20[1] = v19;
      sub_100081700(v21, v22);
    }
    else
    {
      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_100081700(*(void *)v6, *((void *)v6 + 1));
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

uint64_t sub_100156E14()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100156E50()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData);
  sub_10009366C(v1, *(void *)(v0 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8));
  return v1;
}

uint64_t sub_100156EF8()
{
  uint64_t v1 = v0;
  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  id v2 = objc_msgSendSuper2(&v10, "debugDescription");
  uint64_t v3 = sub_1001EC370();

  uint64_t v9 = v3;
  v11._countAndFlagsBits = 32;
  v11._object = (void *)0xE100000000000000;
  sub_1001EC490(v11);
  sub_1001ECD20(23);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type + 8];
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v4;
  v12._object = v5;
  sub_1001EC490(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x446F746F7270202CLL;
  v13._object = (void *)0xED0000203A617461;
  sub_1001EC490(v13);
  if (*(void *)&v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8] >> 60 == 15) {
    v6._countAndFlagsBits = 1701736302;
  }
  else {
    v6._countAndFlagsBits = 7562617;
  }
  if (*(void *)&v1[OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_protoData + 8] >> 60 == 15) {
    uint64_t v7 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v7 = (void *)0xE300000000000000;
  }
  v6._object = v7;
  sub_1001EC490(v6);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x203A65707974;
  v14._object = (void *)0xE600000000000000;
  sub_1001EC490(v14);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100157138()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14bookdatastored13CRDTModelSync_type + 8);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100157260@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100093680(a2, a3);
      objc_super v10 = (char *)sub_1001EACF0();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1001EAD20();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1001EAD10();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1001574C4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100081714(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1001EACF0();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1001EAD20();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1001EAD10();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t type metadata accessor for CRDTModelSyncEntity()
{
  uint64_t result = qword_100295268;
  if (!qword_100295268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100157520(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1001EC550();
  }
  __break(1u);
  return result;
}

uint64_t sub_10015756C(void *a1)
{
  sub_1001ECD20(23);
  swift_bridgeObjectRelease();
  id v2 = [a1 type];
  uint64_t v3 = sub_1001EC370();
  uint64_t v5 = v4;

  v14._countAndFlagsBits = v3;
  v14._object = v5;
  sub_1001EC490(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x446F746F7270202CLL;
  v15._object = (void *)0xED0000203A617461;
  sub_1001EC490(v15);
  id v6 = [a1 protoData];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1001EAFE0();
    unint64_t v10 = v9;

    sub_100081714(v8, v10);
    uint64_t v11 = (void *)0xE300000000000000;
    v12._countAndFlagsBits = 7562617;
  }
  else
  {
    uint64_t v11 = (void *)0xE400000000000000;
    v12._countAndFlagsBits = 1701736302;
  }
  v12._object = v11;
  sub_1001EC490(v12);
  swift_bridgeObjectRelease();
  return 0x203A65707974;
}

uint64_t sub_1001576A8(void *a1)
{
  id v2 = [a1 type];
  uint64_t v3 = sub_1001EC370();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6) {
    return 0;
  }
  id v7 = [a1 type];
  uint64_t v8 = sub_1001EC370();

  return v8;
}

uint64_t sub_100157758(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_100157260((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_100157830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1001EACF0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1001EAD20();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1001EAD10();
  sub_100157260(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1001578E8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x100157B50);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_100093680(a3, a4);
                  sub_100093680(a1, a2);
                  char v17 = sub_100157830((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_100081714(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_100093680(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_100157830(v21, v22, v20, a3, a4);
                  sub_100081714(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_100093680(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_100093680(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_100157758(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_100081714(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

void sub_100157B80(uint64_t a1, unint64_t a2, id a3, const void *a4)
{
  id v8 = [a3 protoData];
  if (!v8)
  {
    unint64_t v12 = 0xF000000000000000;
    uint64_t v19 = sub_100156048(0, 0xF000000000000000, a1, a2, (uint64_t)a4);
    uint64_t v10 = 0;
    if (v20 >> 60 != 15)
    {
      uint64_t v15 = v19;
      unint64_t v16 = v20;
      goto LABEL_10;
    }
LABEL_7:
    sub_10015801C();
    swift_allocError();
    *uint64_t v21 = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1001EAFE0();
  unint64_t v12 = v11;

  uint64_t v13 = sub_100156048(v10, v12, a1, a2, (uint64_t)a4);
  if (v14 >> 60 == 15) {
    goto LABEL_7;
  }
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  if (v12 >> 60 == 15)
  {
LABEL_10:
    sub_100093680(v15, v16);
    sub_100081700(v15, v16);
    sub_100081700(v10, v12);
    goto LABEL_11;
  }
  sub_100093680(v10, v12);
  char v17 = sub_1001578E8(v15, v16, v10, v12);
  sub_100081700(v10, v12);
  if (v17)
  {
    sub_10015801C();
    swift_allocError();
    *uint64_t v18 = 1;
    swift_willThrow();
    sub_100081700(v15, v16);
LABEL_8:
    sub_100081700(v10, v12);
    _Block_release(a4);
    return;
  }
LABEL_11:
  Class isa = sub_1001EAFD0().super.isa;
  [a3 setProtoData:isa];

  sub_100081700(v15, v16);
  sub_100081700(v10, v12);
  _Block_release(a4);
}

uint64_t type metadata accessor for CRDTModelSync()
{
  return self;
}

uint64_t sub_100157DD0()
{
  return type metadata accessor for CRDTModelSyncEntity();
}

void sub_100157DD8()
{
  sub_100157E68();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100157E68()
{
  if (!qword_100295278)
  {
    sub_1001EB560();
    unint64_t v0 = sub_1001ECB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100295278);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CRDTModelSyncEntity.MergerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100157F8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRDTModelSyncEntity.MergerError()
{
  return &type metadata for CRDTModelSyncEntity.MergerError;
}

unint64_t sub_100157FC8()
{
  unint64_t result = qword_1002952B8;
  if (!qword_1002952B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002952B8);
  }
  return result;
}

unint64_t sub_10015801C()
{
  unint64_t result = qword_1002952D0;
  if (!qword_1002952D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002952D0);
  }
  return result;
}

uint64_t sub_100158070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_1002952C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001580D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_1002952C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100158140@<X0>(uint64_t a1@<X8>)
{
  sub_1001ED1B0();
  swift_bridgeObjectRetain();
  sub_1001ECD70();
  uint64_t v2 = enum case for DecodingError.dataCorrupted(_:);
  uint64_t v3 = sub_1001ECD80();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t PBPropertyValue.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t type metadata accessor for PBPropertyValue(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_100295868);
}

uint64_t PBPropertyValue.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10007DC14(&qword_100292E58);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_100292E58);
  uint64_t v7 = sub_1001EB300();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  }
  sub_1001EB2F0();
  return sub_1000816A4((uint64_t)v5, &qword_100292E58);
}

uint64_t PBPropertyBundle.configuration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_10007DC14(&qword_100292E48);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PBPropertyBundle(0);
  sub_1000936F8(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_100292E48);
  uint64_t v7 = type metadata accessor for PBPropertyConfiguration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_100159C74((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBPropertyConfiguration);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_1000816A4((uint64_t)v5, &qword_100292E48);
}

uint64_t PBPropertyTimeSlice.startOfTimeSlice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10007DC14(&qword_100292E58);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PBPropertyTimeSlice(0);
  sub_1000936F8(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_100292E58);
  uint64_t v7 = sub_1001EB300();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  }
  sub_1001EB2F0();
  return sub_1000816A4((uint64_t)v5, &qword_100292E58);
}

uint64_t PBPropertyTimeSlice.init()@<X0>(void *a1@<X8>)
{
  *a1 = _swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for PBPropertyTimeSlice(0);
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t v4 = sub_1001EB300();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 1, 1, v4);
}

BOOL PBPropertyTimeSlice.hasStartOfTimeSlice.getter()
{
  uint64_t v1 = sub_10007DC14(&qword_100292E58);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PBPropertyTimeSlice(0);
  sub_1000936F8(v0 + *(int *)(v4 + 24), (uint64_t)v3, &qword_100292E58);
  uint64_t v5 = sub_1001EB300();
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1000816A4((uint64_t)v3, &qword_100292E58);
  return v6;
}

uint64_t PBPropertyTimeSlice.startOfTimeSlice.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBPropertyTimeSlice(0) + 24);
  sub_1000816A4(v3, &qword_100292E58);
  uint64_t v4 = sub_1001EB300();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(v3, 0, 1, v4);
}

BOOL PBPropertyValue.hasIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32) + 8) != 0;
}

uint64_t PBPropertyBundle.init()@<X0>(void *a1@<X8>)
{
  *a1 = _swiftEmptyArrayStorage;
  a1[1] = _swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for PBPropertyBundle(0);
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 28);
  uint64_t v4 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 1, 1, v4);
}

uint64_t PBPropertyBundle.configuration.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBPropertyBundle(0) + 28);
  sub_1000816A4(v3, &qword_100292E48);
  sub_100159C74(a1, v3, type metadata accessor for PBPropertyConfiguration);
  uint64_t v4 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(v3, 0, 1, v4);
}

void sub_1001589C8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t sub_1001589D8@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void *sub_1001589F0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 3uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

Swift::Int sub_100158A0C()
{
  return sub_1001ED1A0();
}

uint64_t sub_100158A78(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1001651C4();
  return Enum.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100158AC4()
{
  return sub_1001ED1A0();
}

void sub_100158B2C()
{
  static MarkedAsFinishedMechanism.allCases = (uint64_t)&off_100262440;
}

uint64_t *MarkedAsFinishedMechanism.allCases.unsafeMutableAddressor()
{
  if (qword_100291128 != -1) {
    swift_once();
  }
  return &static MarkedAsFinishedMechanism.allCases;
}

uint64_t static MarkedAsFinishedMechanism.allCases.getter()
{
  if (qword_100291128 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static MarkedAsFinishedMechanism.allCases.setter(uint64_t a1)
{
  if (qword_100291128 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static MarkedAsFinishedMechanism.allCases = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MarkedAsFinishedMechanism.allCases.modify())()
{
  if (qword_100291128 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_100158D0C@<X0>(void *a1@<X8>)
{
  if (qword_100291128 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = static MarkedAsFinishedMechanism.allCases;
  return swift_bridgeObjectRetain();
}

uint64_t PBPropertyConfiguration.countLimit.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t PBPropertyConfiguration.eventName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBPropertyConfiguration.eventName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t PBPropertyConfiguration.recordType.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t PBPropertyConfiguration.recordType.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*PBPropertyConfiguration.recordType.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t PBPropertyConfiguration.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBPropertyConfiguration(0) + 32);
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t PBPropertyConfiguration.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBPropertyConfiguration(0) + 32);
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*PBPropertyConfiguration.unknownFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t PBPropertyConfiguration.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  type metadata accessor for PBPropertyConfiguration(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t type metadata accessor for PBPropertyBundle(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_1002959C0);
}

uint64_t type metadata accessor for PBPropertyConfiguration(uint64_t a1)
{
  return sub_1000AC710(a1, qword_1002954F0);
}

uint64_t type metadata accessor for PBPropertyTimeSlice(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100295A60);
}

uint64_t PBPropertyNoParams.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001EB330();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t PBPropertyNoParams.unknownFields.setter(uint64_t a1)
{
  uint64_t v3 = sub_1001EB330();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

float PBPropertySingleFloatParam.value.getter()
{
  return *(float *)v0;
}

void PBPropertySingleFloatParam.value.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t PBPropertySingleFloatParam.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001592E4(type metadata accessor for PBPropertySingleFloatParam, a1);
}

uint64_t type metadata accessor for PBPropertySingleFloatParam(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100295620);
}

uint64_t PBPropertySingleFloatParam.unknownFields.setter(uint64_t a1)
{
  return sub_10015939C(a1, type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t (*PBPropertySingleFloatParam.unknownFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t PBPropertySingleFloatParam.init()@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for PBPropertySingleFloatParam(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PBPropertyBookImpressionParam.wasRecommendedByBooksPersonalization.getter()
{
  return *v0;
}

uint64_t PBPropertyBookImpressionParam.wasRecommendedByBooksPersonalization.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

float PBPropertyBookReadParams.progress.getter()
{
  return *(float *)(v0 + 4);
}

void PBPropertyBookReadParams.progress.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*PBPropertyBookReadParams.progress.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t PBPropertyBookReadParams.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10015B05C(type metadata accessor for PBPropertyBookReadParams, a1);
}

uint64_t type metadata accessor for PBPropertyBookReadParams(uint64_t a1)
{
  return sub_1000AC710(a1, qword_1002956B0);
}

uint64_t PBPropertyBookReadParams.unknownFields.setter(uint64_t a1)
{
  return sub_10015B0F4(a1, type metadata accessor for PBPropertyBookReadParams);
}

uint64_t (*PBPropertyBookReadParams.unknownFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t PBPropertyBookReadParams.init()@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  type metadata accessor for PBPropertyBookReadParams(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PBPropertyBookImpressionParam.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001592E4(type metadata accessor for PBPropertyBookImpressionParam, a1);
}

uint64_t sub_1001592E4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = sub_1001EB330();
  BOOL v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for PBPropertyBookImpressionParam(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100295748);
}

uint64_t PBPropertyBookImpressionParam.unknownFields.setter(uint64_t a1)
{
  return sub_10015939C(a1, type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_10015939C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = sub_1001EB330();
  BOOL v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBPropertyBookImpressionParam.unknownFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t PBPropertyBookImpressionParam.init()@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for PBPropertyBookImpressionParam(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PBPropertyMarkedAsFinishedParam.value.getter()
{
  return *(void *)v0;
}

uint64_t PBPropertyMarkedAsFinishedParam.value.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t PBPropertyMarkedAsFinishedParam.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001592E4(type metadata accessor for PBPropertyMarkedAsFinishedParam, a1);
}

uint64_t type metadata accessor for PBPropertyMarkedAsFinishedParam(uint64_t a1)
{
  return sub_1000AC710(a1, qword_1002957D8);
}

uint64_t PBPropertyMarkedAsFinishedParam.unknownFields.setter(uint64_t a1)
{
  return sub_10015939C(a1, type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t (*PBPropertyMarkedAsFinishedParam.unknownFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t PBPropertyMarkedAsFinishedParam.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PBPropertyValue.createdAt.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBPropertyValue(0) + 28);
  sub_1000816A4(v3, &qword_100292E58);
  uint64_t v4 = sub_1001EB300();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(v3, 0, 1, v4);
}

uint64_t (*PBPropertyValue.createdAt.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292E58);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_1001EB300();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for PBPropertyValue(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_1000936F8(v1 + v11, (uint64_t)v5, &qword_100292E58);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_1001EB2F0();
    sub_1000816A4((uint64_t)v5, &qword_100292E58);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_1001597F0;
}

BOOL PBPropertyValue.hasCreatedAt.getter()
{
  return sub_10015B768(&qword_100292E58, type metadata accessor for PBPropertyValue, (uint64_t (*)(void))&type metadata accessor for Google_Protobuf_Timestamp);
}

Swift::Void __swiftcall PBPropertyValue.clearCreatedAt()()
{
}

uint64_t PBPropertyValue.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PBPropertyValue.identifier.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for PBPropertyValue(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_100159920;
}

uint64_t sub_100159920(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)(a1[2] + *((int *)a1 + 6));
  uint64_t v4 = *a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void *v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    void *v3 = v4;
    v3[1] = v2;
  }
  return result;
}

Swift::Void __swiftcall PBPropertyValue.clearIdentifier()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32));
  swift_bridgeObjectRelease();
  *uint64_t v1 = 0;
  v1[1] = 0;
}

uint64_t PBPropertyValue.params.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PBPropertyValue(0);
  return sub_1000936F8(v1 + *(int *)(v3 + 20), a1, &qword_100292E50);
}

uint64_t PBPropertyValue.params.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  return sub_100159A5C(a1, v3);
}

uint64_t sub_100159A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100292E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PBPropertyValue.params.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t PBPropertyValue.noParams.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100292E50);
  uint64_t v7 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
    return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  }
  return sub_100159C74((uint64_t)v5, a1, type metadata accessor for PBPropertyNoParams);
}

uint64_t type metadata accessor for PBPropertyValue.OneOf_Params(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100295930);
}

uint64_t sub_100159C74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PBPropertyNoParams(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100295590);
}

uint64_t PBPropertyValue.noParams.setter(uint64_t a1)
{
  return sub_10015AC1C(a1, type metadata accessor for PBPropertyNoParams);
}

void (*PBPropertyValue.noParams.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292E50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  size_t v6 = *(void *)(*(void *)(type metadata accessor for PBPropertyNoParams(0) - 8) + 64);
  v3[2] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[3] = v7;
  uint64_t v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_1000936F8(v1 + v8, (uint64_t)v5, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_100159C74((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertyNoParams);
      return sub_100159ED0;
    }
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  return sub_100159ED0;
}

void sub_100159ED0(uint64_t a1, char a2)
{
}

uint64_t sub_100159F14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t PBPropertyValue.floatParam.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v3 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100292E50);
  uint64_t v7 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      return sub_100159C74((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBPropertySingleFloatParam);
    }
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *a1 = 0;
  type metadata accessor for PBPropertySingleFloatParam(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PBPropertyValue.floatParam.setter(uint64_t a1)
{
  return sub_10015AC1C(a1, type metadata accessor for PBPropertySingleFloatParam);
}

void (*PBPropertyValue.floatParam.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292E50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  size_t v6 = *(void *)(*(void *)(type metadata accessor for PBPropertySingleFloatParam(0) - 8) + 64);
  v3[2] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[3] = v7;
  uint64_t v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_1000936F8(v1 + v8, (uint64_t)v5, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
LABEL_6:
    *uint64_t v7 = 0;
    _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_10015A2C0;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_6;
  }
  sub_100159C74((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertySingleFloatParam);
  return sub_10015A2C0;
}

void sub_10015A2C0(uint64_t a1, char a2)
{
}

uint64_t sub_10015A304(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t PBPropertyValue.bookReadParams.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100292E50);
  uint64_t v7 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      return sub_100159C74((uint64_t)v5, a1, type metadata accessor for PBPropertyBookReadParams);
    }
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  type metadata accessor for PBPropertyBookReadParams(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PBPropertyValue.bookReadParams.setter(uint64_t a1)
{
  return sub_10015AC1C(a1, type metadata accessor for PBPropertyBookReadParams);
}

void (*PBPropertyValue.bookReadParams.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292E50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  size_t v6 = *(void *)(*(void *)(type metadata accessor for PBPropertyBookReadParams(0) - 8) + 64);
  v3[2] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[3] = v7;
  uint64_t v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_1000936F8(v1 + v8, (uint64_t)v5, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
LABEL_6:
    *(unsigned char *)uint64_t v7 = 0;
    v7[1] = 0;
    _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_10015A6C0;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_6;
  }
  sub_100159C74((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertyBookReadParams);
  return sub_10015A6C0;
}

void sub_10015A6C0(uint64_t a1, char a2)
{
}

uint64_t PBPropertyValue.markedAsFinishedParam.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100292E50);
  uint64_t v7 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3) {
      return sub_100159C74((uint64_t)v5, a1, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    }
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PBPropertyValue.markedAsFinishedParam.setter(uint64_t a1)
{
  return sub_10015AC1C(a1, type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

void (*PBPropertyValue.markedAsFinishedParam.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292E50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  size_t v6 = *(void *)(*(void *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) - 8) + 64);
  v3[2] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[3] = v7;
  uint64_t v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_1000936F8(v1 + v8, (uint64_t)v5, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
LABEL_6:
    *(void *)uint64_t v7 = 0;
    v7[8] = 1;
    _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_10015AA60;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_6;
  }
  sub_100159C74((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertyMarkedAsFinishedParam);
  return sub_10015AA60;
}

void sub_10015AA60(uint64_t a1, char a2)
{
}

uint64_t PBPropertyValue.bookImpressionParam.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100292E50);
  uint64_t v7 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4) {
      return sub_100159C74((uint64_t)v5, (uint64_t)a1, type metadata accessor for PBPropertyBookImpressionParam);
    }
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *a1 = 0;
  type metadata accessor for PBPropertyBookImpressionParam(0);
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t PBPropertyValue.bookImpressionParam.setter(uint64_t a1)
{
  return sub_10015AC1C(a1, type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_10015AC1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_1000816A4(v5, &qword_100292E50);
  sub_100159C74(a1, v5, a2);
  uint64_t v6 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, 0, 1, v6);
}

void (*PBPropertyValue.bookImpressionParam.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292E50);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  size_t v6 = *(void *)(*(void *)(type metadata accessor for PBPropertyBookImpressionParam(0) - 8) + 64);
  v3[2] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[3] = v7;
  uint64_t v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_1000936F8(v1 + v8, (uint64_t)v5, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v5, &qword_100292E50);
LABEL_6:
    *uint64_t v7 = 0;
    _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    return sub_10015AEB0;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_6;
  }
  sub_100159C74((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertyBookImpressionParam);
  return sub_10015AEB0;
}

void sub_10015AEB0(uint64_t a1, char a2)
{
}

void sub_10015AEF4(uint64_t a1, char a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 32);
  uint64_t v9 = *(void *)(*(void *)a1 + 40);
  uint64_t v10 = *(int *)(*(void *)a1 + 48);
  uint64_t v11 = *(void **)(*(void *)a1 + 16);
  unint64_t v12 = *(void **)(*(void *)a1 + 24);
  uint64_t v13 = *(void **)(*(void *)a1 + 8);
  uint64_t v14 = **(void **)a1 + v10;
  if (a2)
  {
    sub_10015A304(*(void *)(*(void *)a1 + 24), (uint64_t)v11, a5);
    sub_1000816A4(v14, &qword_100292E50);
    sub_100159C74((uint64_t)v11, v14, a3);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    sub_100159F14((uint64_t)v12, a6);
  }
  else
  {
    sub_1000816A4(**(void **)a1 + v10, &qword_100292E50);
    sub_100159C74((uint64_t)v12, v14, a3);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
  }
  free(v12);
  free(v11);
  free(v13);
  free(v7);
}

uint64_t PBPropertyValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10015B05C(type metadata accessor for PBPropertyValue, a1);
}

uint64_t sub_10015B05C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 24);
  uint64_t v5 = sub_1001EB330();
  size_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t PBPropertyValue.unknownFields.setter(uint64_t a1)
{
  return sub_10015B0F4(a1, type metadata accessor for PBPropertyValue);
}

uint64_t sub_10015B0F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 24);
  uint64_t v5 = sub_1001EB330();
  size_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*PBPropertyValue.unknownFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t static PBPropertyNoParams.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v14 - v9, a1, v4);
  v11(v8, a2, v4);
  sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  LOBYTE(a2) = sub_1001EC330();
  unint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v12(v10, v4);
  return a2 & 1;
}

uint64_t PBPropertyValue.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = (int *)type metadata accessor for PBPropertyValue(0);
  uint64_t v3 = (char *)a1 + v2[5];
  uint64_t v4 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v5 = (char *)a1 + v2[7];
  uint64_t v6 = sub_1001EB300();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v8 = (void *)((char *)a1 + v2[8]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  return result;
}

void (*PBPropertyBundle.configuration.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292E48);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for PBPropertyConfiguration(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for PBPropertyBundle(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_1000936F8(v1 + v11, (uint64_t)v5, &qword_100292E48);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v10 = 0;
    v10[1] = 0;
    v10[2] = 0;
    uint64_t v10[3] = 0xE000000000000000;
    void v10[4] = 0;
    _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
    sub_1000816A4((uint64_t)v5, &qword_100292E48);
  }
  else
  {
    sub_100159C74((uint64_t)v5, (uint64_t)v10, type metadata accessor for PBPropertyConfiguration);
  }
  return sub_10015B5D8;
}

void sub_10015B5D8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void **)(*(void *)a1 + 8);
  uint64_t v9 = **(void **)a1 + v3;
  if (a2)
  {
    sub_10015A304(*(void *)(*(void *)a1 + 40), (uint64_t)v4, type metadata accessor for PBPropertyConfiguration);
    sub_1000816A4(v9, &qword_100292E48);
    sub_100159C74((uint64_t)v4, v9, type metadata accessor for PBPropertyConfiguration);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    sub_100159F14((uint64_t)v5, type metadata accessor for PBPropertyConfiguration);
  }
  else
  {
    sub_1000816A4(**(void **)a1 + v3, &qword_100292E48);
    sub_100159C74((uint64_t)v5, v9, type metadata accessor for PBPropertyConfiguration);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL PBPropertyBundle.hasConfiguration.getter()
{
  return sub_10015B768(&qword_100292E48, type metadata accessor for PBPropertyBundle, type metadata accessor for PBPropertyConfiguration);
}

BOOL sub_10015B768(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_10007DC14(a1);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2(0);
  sub_1000936F8(v3 + *(int *)(v10 + 28), (uint64_t)v9, a1);
  uint64_t v11 = a3(0);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_1000816A4((uint64_t)v9, a1);
  return v12;
}

Swift::Void __swiftcall PBPropertyBundle.clearConfiguration()()
{
}

uint64_t sub_10015B890(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 28);
  sub_1000816A4(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(v6, 1, 1, v7);
}

uint64_t PBPropertyBundle.propertyValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBPropertyBundle.propertyValues.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t PBPropertyBundle.deletedPropertyValueTimestamps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBPropertyBundle.deletedPropertyValueTimestamps.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t PBPropertyBundle.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10015B05C(type metadata accessor for PBPropertyBundle, a1);
}

uint64_t PBPropertyBundle.unknownFields.setter(uint64_t a1)
{
  return sub_10015B0F4(a1, type metadata accessor for PBPropertyBundle);
}

uint64_t (*PBPropertyBundle.unknownFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t (*PBPropertyTimeSlice.startOfTimeSlice.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100292E58);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = sub_1001EB300();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for PBPropertyTimeSlice(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_1000936F8(v1 + v11, (uint64_t)v5, &qword_100292E58);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_1001EB2F0();
    sub_1000816A4((uint64_t)v5, &qword_100292E58);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_1001597F0;
}

void sub_10015BB9C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void **)(*(void *)a1 + 8);
  uint64_t v9 = **(void **)a1 + v3;
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v7 + 16))(*(void *)(*(void *)a1 + 32), v5, v6);
    sub_1000816A4(v9, &qword_100292E58);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v4, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    sub_1000816A4(**(void **)a1 + v3, &qword_100292E58);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

Swift::Void __swiftcall PBPropertyTimeSlice.clearStartOfTimeSlice()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PBPropertyTimeSlice(0) + 24);
  sub_1000816A4(v1, &qword_100292E58);
  uint64_t v2 = sub_1001EB300();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
}

uint64_t PBPropertyTimeSlice.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001592E4(type metadata accessor for PBPropertyTimeSlice, a1);
}

uint64_t PBPropertyTimeSlice.unknownFields.setter(uint64_t a1)
{
  return sub_10015939C(a1, type metadata accessor for PBPropertyTimeSlice);
}

uint64_t (*PBPropertyTimeSlice.unknownFields.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t sub_10015BDF8()
{
  uint64_t v0 = sub_1001EB520();
  sub_10008176C(v0, static MarkedAsFinishedMechanism._protobuf_nameMap);
  sub_10007CFF8(v0, (uint64_t)static MarkedAsFinishedMechanism._protobuf_nameMap);
  sub_10007DC14(&qword_100295AF0);
  uint64_t v1 = (int *)(sub_10007DC14(&qword_100295AF8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100215330;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "Unknown";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001EB4F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "Manually";
  *((void *)v10 + 1) = 8;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 2;
  *(void *)uint64_t v11 = "Automatically";
  *(void *)(v11 + 8) = 13;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001EB500();
}

uint64_t MarkedAsFinishedMechanism._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291130, (uint64_t)static MarkedAsFinishedMechanism._protobuf_nameMap);
}

uint64_t static MarkedAsFinishedMechanism._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291130, (uint64_t)static MarkedAsFinishedMechanism._protobuf_nameMap, a1);
}

uint64_t sub_10015C040@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291130, (uint64_t)static MarkedAsFinishedMechanism._protobuf_nameMap, a1);
}

void *PBPropertyConfiguration.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertyConfiguration.protoMessageName;
}

unint64_t static PBPropertyConfiguration.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_10015C08C()
{
  uint64_t v0 = sub_1001EB520();
  sub_10008176C(v0, static PBPropertyConfiguration._protobuf_nameMap);
  sub_10007CFF8(v0, (uint64_t)static PBPropertyConfiguration._protobuf_nameMap);
  sub_10007DC14(&qword_100295AF0);
  uint64_t v1 = (int *)(sub_10007DC14(&qword_100295AF8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100215850;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "ageToExpire";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001EB4F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "countLimit";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  BOOL v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)BOOL v12 = "eventName";
  *((void *)v12 + 1) = 9;
  unsigned char v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "recordType";
  *((void *)v14 + 1) = 10;
  unsigned char v14[16] = 2;
  v9();
  return sub_1001EB500();
}

uint64_t PBPropertyConfiguration._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291138, (uint64_t)static PBPropertyConfiguration._protobuf_nameMap);
}

uint64_t static PBPropertyConfiguration._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291138, (uint64_t)static PBPropertyConfiguration._protobuf_nameMap, a1);
}

uint64_t PBPropertyConfiguration.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001EB390();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
          sub_1001EB3E0();
          break;
        case 3:
          sub_1001EB400();
          break;
        default:
          break;
      }
      uint64_t result = sub_1001EB390();
    }
  }
  return result;
}

uint64_t PBPropertyConfiguration.traverse<A>(visitor:)()
{
  if (!*v0 || (uint64_t result = sub_1001EB4B0(), !v1))
  {
    if (!v0[1] || (uint64_t result = sub_1001EB4B0(), !v1))
    {
      unint64_t v3 = v0[3];
      uint64_t v4 = HIBYTE(v3) & 0xF;
      if ((v3 & 0x2000000000000000) == 0) {
        uint64_t v4 = v0[2] & 0xFFFFFFFFFFFFLL;
      }
      if (!v4 || (uint64_t result = sub_1001EB4C0(), !v1))
      {
        if (!v0[4] || (uint64_t result = sub_1001EB4B0(), !v1))
        {
          type metadata accessor for PBPropertyConfiguration(0);
          return sub_1001EB310();
        }
      }
    }
  }
  return result;
}

Swift::Int PBPropertyConfiguration.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertyConfiguration, &qword_100295348, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
}

uint64_t sub_10015C558@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10015C58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_1001EB330();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_10015C5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1001EB330();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_10015C66C())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t sub_10015C690()
{
  return PBPropertyConfiguration.decodeMessage<A>(decoder:)();
}

uint64_t sub_10015C6A8()
{
  return PBPropertyConfiguration.traverse<A>(visitor:)();
}

uint64_t sub_10015C6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AE0, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10015C744@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291138, (uint64_t)static PBPropertyConfiguration._protobuf_nameMap, a1);
}

uint64_t sub_10015C768(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_1002953E0, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10015C7D8()
{
  sub_10016517C(&qword_1002953E0, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
  return sub_1001EB470();
}

void *PBPropertyNoParams.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertyNoParams.protoMessageName;
}

unint64_t static PBPropertyNoParams.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_10015C884()
{
  uint64_t v0 = sub_1001EB520();
  sub_10008176C(v0, static PBPropertyNoParams._protobuf_nameMap);
  sub_10007CFF8(v0, (uint64_t)static PBPropertyNoParams._protobuf_nameMap);
  return sub_1001EB510();
}

uint64_t PBPropertyNoParams._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291140, (uint64_t)static PBPropertyNoParams._protobuf_nameMap);
}

uint64_t static PBPropertyNoParams._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291140, (uint64_t)static PBPropertyNoParams._protobuf_nameMap, a1);
}

uint64_t PBPropertyNoParams.decodeMessage<A>(decoder:)()
{
  do
    uint64_t result = sub_1001EB390();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t PBPropertyNoParams.traverse<A>(visitor:)()
{
  return sub_1001EB310();
}

Swift::Int PBPropertyNoParams.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertyNoParams, &qword_100295350, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
}

uint64_t sub_10015C9BC()
{
  return PBPropertyNoParams.decodeMessage<A>(decoder:)();
}

uint64_t sub_10015C9D4()
{
  return PBPropertyNoParams.traverse<A>(visitor:)();
}

uint64_t sub_10015C9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AD8, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10015CA68@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291140, (uint64_t)static PBPropertyNoParams._protobuf_nameMap, a1);
}

uint64_t sub_10015CA8C(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_1002953F8, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10015CAF8()
{
  sub_10016517C(&qword_1002953F8, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
  return sub_1001EB470();
}

void *PBPropertySingleFloatParam.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertySingleFloatParam.protoMessageName;
}

unint64_t static PBPropertySingleFloatParam.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_10015CB9C(uint64_t a1)
{
  return sub_10015D934(a1, static PBPropertySingleFloatParam._protobuf_nameMap, (uint64_t)"value", 5);
}

uint64_t PBPropertySingleFloatParam._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291148, (uint64_t)static PBPropertySingleFloatParam._protobuf_nameMap);
}

uint64_t static PBPropertySingleFloatParam._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291148, (uint64_t)static PBPropertySingleFloatParam._protobuf_nameMap, a1);
}

uint64_t PBPropertySingleFloatParam.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_1001EB390();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1001EB3D0();
    }
  }
  return result;
}

uint64_t PBPropertySingleFloatParam.traverse<A>(visitor:)()
{
  if (*v0 == 0.0 || (uint64_t result = sub_1001EB4A0(), !v1))
  {
    type metadata accessor for PBPropertySingleFloatParam(0);
    return sub_1001EB310();
  }
  return result;
}

Swift::Int PBPropertySingleFloatParam.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertySingleFloatParam, &qword_100295358, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t sub_10015CD4C@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t (*sub_10015CD78())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t sub_10015CD9C()
{
  return PBPropertySingleFloatParam.decodeMessage<A>(decoder:)();
}

uint64_t sub_10015CDB4()
{
  return PBPropertySingleFloatParam.traverse<A>(visitor:)();
}

uint64_t sub_10015CDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AD0, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10015CE48@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291148, (uint64_t)static PBPropertySingleFloatParam._protobuf_nameMap, a1);
}

uint64_t sub_10015CE6C(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_100295410, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10015CED8()
{
  sub_10016517C(&qword_100295410, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
  return sub_1001EB470();
}

void *PBPropertyBookReadParams.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertyBookReadParams.protoMessageName;
}

unint64_t static PBPropertyBookReadParams.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_10015CF7C()
{
  uint64_t v0 = sub_1001EB520();
  sub_10008176C(v0, static PBPropertyBookReadParams._protobuf_nameMap);
  sub_10007CFF8(v0, (uint64_t)static PBPropertyBookReadParams._protobuf_nameMap);
  sub_10007DC14(&qword_100295AF0);
  uint64_t v1 = (int *)(sub_10007DC14(&qword_100295AF8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100215310;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "isSample";
  *(void *)(v6 + 8) = 8;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001EB4F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "progress";
  *((void *)v10 + 1) = 8;
  unsigned char v10[16] = 2;
  v9();
  return sub_1001EB500();
}

uint64_t PBPropertyBookReadParams._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291150, (uint64_t)static PBPropertyBookReadParams._protobuf_nameMap);
}

uint64_t static PBPropertyBookReadParams._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291150, (uint64_t)static PBPropertyBookReadParams._protobuf_nameMap, a1);
}

uint64_t PBPropertyBookReadParams.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001EB390();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1001EB3D0();
      }
      else if (result == 1)
      {
        sub_1001EB3B0();
      }
      uint64_t result = sub_1001EB390();
    }
  }
  return result;
}

uint64_t PBPropertyBookReadParams.traverse<A>(visitor:)()
{
  if (*(unsigned char *)v0 != 1 || (uint64_t result = sub_1001EB480(), !v1))
  {
    if (*(float *)(v0 + 4) == 0.0 || (uint64_t result = sub_1001EB4A0(), !v1))
    {
      type metadata accessor for PBPropertyBookReadParams(0);
      return sub_1001EB310();
    }
  }
  return result;
}

Swift::Int PBPropertyBookReadParams.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertyBookReadParams, &qword_100295360, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
}

uint64_t sub_10015D330@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t (*sub_10015D360())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t sub_10015D384()
{
  return PBPropertyBookReadParams.decodeMessage<A>(decoder:)();
}

uint64_t sub_10015D39C()
{
  return PBPropertyBookReadParams.traverse<A>(visitor:)();
}

uint64_t sub_10015D3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AC8, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10015D430@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291150, (uint64_t)static PBPropertyBookReadParams._protobuf_nameMap, a1);
}

uint64_t sub_10015D454(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_100295428, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10015D4C0()
{
  sub_10016517C(&qword_100295428, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
  return sub_1001EB470();
}

void *PBPropertyBookImpressionParam.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertyBookImpressionParam.protoMessageName;
}

unint64_t static PBPropertyBookImpressionParam.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_10015D564(uint64_t a1)
{
  return sub_10015D934(a1, static PBPropertyBookImpressionParam._protobuf_nameMap, (uint64_t)"wasRecommendedByBooksPersonalization", 36);
}

uint64_t PBPropertyBookImpressionParam._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291158, (uint64_t)static PBPropertyBookImpressionParam._protobuf_nameMap);
}

uint64_t static PBPropertyBookImpressionParam._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291158, (uint64_t)static PBPropertyBookImpressionParam._protobuf_nameMap, a1);
}

uint64_t PBPropertyBookImpressionParam.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = sub_1001EB390();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1001EB3B0();
    }
  }
  return result;
}

uint64_t PBPropertyBookImpressionParam.traverse<A>(visitor:)()
{
  if (*v0 != 1 || (uint64_t result = sub_1001EB480(), !v1))
  {
    type metadata accessor for PBPropertyBookImpressionParam(0);
    return sub_1001EB310();
  }
  return result;
}

Swift::Int PBPropertyBookImpressionParam.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertyBookImpressionParam, &qword_100295368, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_10015D718@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10015D73C()
{
  return PBPropertyBookImpressionParam.decodeMessage<A>(decoder:)();
}

uint64_t sub_10015D754()
{
  return PBPropertyBookImpressionParam.traverse<A>(visitor:)();
}

uint64_t sub_10015D76C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AC0, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10015D7E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291158, (uint64_t)static PBPropertyBookImpressionParam._protobuf_nameMap, a1);
}

uint64_t sub_10015D80C(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_100295440, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10015D878()
{
  sub_10016517C(&qword_100295440, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
  return sub_1001EB470();
}

void *PBPropertyMarkedAsFinishedParam.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertyMarkedAsFinishedParam.protoMessageName;
}

unint64_t static PBPropertyMarkedAsFinishedParam.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_10015D91C(uint64_t a1)
{
  return sub_10015D934(a1, static PBPropertyMarkedAsFinishedParam._protobuf_nameMap, (uint64_t)"value", 5);
}

uint64_t sub_10015D934(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1001EB520();
  sub_10008176C(v7, a2);
  sub_10007CFF8(v7, (uint64_t)a2);
  sub_10007DC14(&qword_100295AF0);
  uint64_t v8 = (int *)(sub_10007DC14(&qword_100295AF8) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100215320;
  unint64_t v11 = v10 + v9 + v8[14];
  *(void *)(v10 + v9) = 1;
  *(void *)unint64_t v11 = a3;
  *(void *)(v11 + 8) = a4;
  *(unsigned char *)(v11 + 16) = 2;
  uint64_t v12 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v13 = sub_1001EB4F0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  return sub_1001EB500();
}

uint64_t PBPropertyMarkedAsFinishedParam._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291160, (uint64_t)static PBPropertyMarkedAsFinishedParam._protobuf_nameMap);
}

uint64_t static PBPropertyMarkedAsFinishedParam._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291160, (uint64_t)static PBPropertyMarkedAsFinishedParam._protobuf_nameMap, a1);
}

uint64_t PBPropertyMarkedAsFinishedParam.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001EB390();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        sub_1001651C4();
        sub_1001EB3C0();
      }
      uint64_t result = sub_1001EB390();
    }
  }
  return result;
}

uint64_t PBPropertyMarkedAsFinishedParam.traverse<A>(visitor:)()
{
  if (!*v0 || (sub_1001651C4(), uint64_t result = sub_1001EB490(), !v1))
  {
    type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
    return sub_1001EB310();
  }
  return result;
}

Swift::Int PBPropertyMarkedAsFinishedParam.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertyMarkedAsFinishedParam, &qword_100295378, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_10015DC8C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  return _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
}

uint64_t sub_10015DCB8()
{
  return PBPropertyMarkedAsFinishedParam.decodeMessage<A>(decoder:)();
}

uint64_t sub_10015DCD0()
{
  return PBPropertyMarkedAsFinishedParam.traverse<A>(visitor:)();
}

uint64_t sub_10015DCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AB8, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10015DD64@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291160, (uint64_t)static PBPropertyMarkedAsFinishedParam._protobuf_nameMap, a1);
}

uint64_t sub_10015DD88(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_100295458, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10015DDF4()
{
  sub_10016517C(&qword_100295458, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
  return sub_1001EB470();
}

void *PBPropertyValue.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertyValue.protoMessageName;
}

uint64_t static PBPropertyValue.protoMessageName.getter()
{
  return 0x7265706F72504250;
}

uint64_t sub_10015DEA0()
{
  uint64_t v0 = sub_1001EB520();
  sub_10008176C(v0, static PBPropertyValue._protobuf_nameMap);
  sub_10007CFF8(v0, (uint64_t)static PBPropertyValue._protobuf_nameMap);
  sub_10007DC14(&qword_100295AF0);
  uint64_t v1 = (int *)(sub_10007DC14(&qword_100295AF8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1002195F0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "createdAt";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001EB4F0();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "identifier";
  *(void *)(v10 + 8) = 10;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  unint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *unint64_t v11 = 3;
  *(void *)uint64_t v12 = "assetID";
  *((void *)v12 + 1) = 7;
  unsigned char v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "noParams";
  *((void *)v14 + 1) = 8;
  unsigned char v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)unint64_t v16 = "floatParam";
  *((void *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  char v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *char v17 = 6;
  *(void *)uint64_t v18 = "bookReadParams";
  *((void *)v18 + 1) = 14;
  unsigned char v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  unint64_t v20 = (char *)v19 + v1[14];
  *uint64_t v19 = 7;
  *(void *)unint64_t v20 = "markedAsFinishedParam";
  *((void *)v20 + 1) = 21;
  v20[16] = 2;
  v9();
  uint64_t v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *uint64_t v21 = 8;
  *(void *)uint64_t v22 = "bookImpressionParam";
  *((void *)v22 + 1) = 19;
  v22[16] = 2;
  v9();
  return sub_1001EB500();
}

uint64_t PBPropertyValue._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291168, (uint64_t)static PBPropertyValue._protobuf_nameMap);
}

uint64_t static PBPropertyValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291168, (uint64_t)static PBPropertyValue._protobuf_nameMap, a1);
}

uint64_t PBPropertyValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_1001EB390();
    if (v4 || (v10 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_10015E3FC();
        break;
      case 2:
        type metadata accessor for PBPropertyValue(0);
        sub_1001EB3F0();
        break;
      case 3:
        sub_1001EB3E0();
        break;
      case 4:
        sub_10015E4AC(v5, a1, a2, a3);
        break;
      case 5:
        sub_10015EA24(v5, a1, a2, a3);
        break;
      case 6:
        sub_10015EFA0(v5, a1, a2, a3);
        break;
      case 7:
        sub_10015F51C(v5, a1, a2, a3);
        break;
      case 8:
        sub_10015FA98(v5, a1, a2, a3);
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_10015E3FC()
{
  return sub_1001EB420();
}

uint64_t sub_10015E4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a1;
  uint64_t v4 = type metadata accessor for PBPropertyNoParams(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v34 - v8;
  uint64_t v9 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = sub_10007DC14(&qword_100295B10);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v23 = (char *)&v34 - v22;
  uint64_t v39 = v5;
  char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v41 = v4;
  v24((char *)&v34 - v22, 1, 1, v4);
  uint64_t v35 = v46 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_1000936F8(v35, (uint64_t)v11, &qword_100292E50);
  uint64_t v36 = v13;
  LODWORD(v46) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v46 == 1)
  {
    sub_1000816A4((uint64_t)v11, &qword_100292E50);
    uint64_t v25 = v12;
LABEL_5:
    uint64_t v28 = v41;
    uint64_t v27 = v42;
    goto LABEL_6;
  }
  uint64_t v26 = (uint64_t)v40;
  sub_100159C74((uint64_t)v11, (uint64_t)v18, type metadata accessor for PBPropertyValue.OneOf_Params);
  sub_100159C74((uint64_t)v18, (uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
  uint64_t v25 = v12;
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100159F14((uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_5;
  }
  sub_1000816A4((uint64_t)v23, &qword_100295B10);
  sub_100159C74((uint64_t)v16, v26, type metadata accessor for PBPropertyNoParams);
  sub_100159C74(v26, (uint64_t)v23, type metadata accessor for PBPropertyNoParams);
  uint64_t v28 = v41;
  v24(v23, 0, 1, v41);
  uint64_t v27 = v42;
LABEL_6:
  sub_10016517C(&qword_1002953F8, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
  sub_1001EB420();
  if (v27) {
    return sub_1000816A4((uint64_t)v23, &qword_100295B10);
  }
  uint64_t v30 = v38;
  sub_1000936F8((uint64_t)v23, v38, &qword_100295B10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v30, 1, v28) == 1)
  {
    sub_1000816A4((uint64_t)v23, &qword_100295B10);
    return sub_1000816A4(v30, &qword_100295B10);
  }
  else
  {
    uint64_t v31 = v30;
    uint64_t v32 = v37;
    sub_100159C74(v31, v37, type metadata accessor for PBPropertyNoParams);
    if (v46 != 1) {
      sub_1001EB3A0();
    }
    sub_1000816A4((uint64_t)v23, &qword_100295B10);
    uint64_t v33 = v35;
    sub_1000816A4(v35, &qword_100292E50);
    sub_100159C74(v32, v33, type metadata accessor for PBPropertyNoParams);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v25);
  }
}

uint64_t sub_10015EA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a1;
  uint64_t v4 = type metadata accessor for PBPropertySingleFloatParam(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v34 - v8;
  uint64_t v9 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = sub_10007DC14(&qword_100295B18);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v23 = (char *)&v34 - v22;
  uint64_t v39 = v5;
  char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v41 = v4;
  v24((char *)&v34 - v22, 1, 1, v4);
  uint64_t v35 = v46 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_1000936F8(v35, (uint64_t)v11, &qword_100292E50);
  uint64_t v36 = v13;
  LODWORD(v46) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v46 == 1)
  {
    sub_1000816A4((uint64_t)v11, &qword_100292E50);
    uint64_t v25 = v12;
  }
  else
  {
    uint64_t v26 = (uint64_t)v40;
    sub_100159C74((uint64_t)v11, (uint64_t)v18, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_100159C74((uint64_t)v18, (uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
    uint64_t v25 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1000816A4((uint64_t)v23, &qword_100295B18);
      sub_100159C74((uint64_t)v16, v26, type metadata accessor for PBPropertySingleFloatParam);
      sub_100159C74(v26, (uint64_t)v23, type metadata accessor for PBPropertySingleFloatParam);
      uint64_t v27 = v41;
      v24(v23, 0, 1, v41);
      uint64_t v28 = v42;
      goto LABEL_7;
    }
    sub_100159F14((uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  uint64_t v27 = v41;
  uint64_t v28 = v42;
LABEL_7:
  sub_10016517C(&qword_100295410, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
  sub_1001EB420();
  if (v28) {
    return sub_1000816A4((uint64_t)v23, &qword_100295B18);
  }
  uint64_t v30 = v38;
  sub_1000936F8((uint64_t)v23, v38, &qword_100295B18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v30, 1, v27) == 1)
  {
    sub_1000816A4((uint64_t)v23, &qword_100295B18);
    return sub_1000816A4(v30, &qword_100295B18);
  }
  else
  {
    uint64_t v31 = v30;
    uint64_t v32 = v37;
    sub_100159C74(v31, v37, type metadata accessor for PBPropertySingleFloatParam);
    if (v46 != 1) {
      sub_1001EB3A0();
    }
    sub_1000816A4((uint64_t)v23, &qword_100295B18);
    uint64_t v33 = v35;
    sub_1000816A4(v35, &qword_100292E50);
    sub_100159C74(v32, v33, type metadata accessor for PBPropertySingleFloatParam);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v25);
  }
}

uint64_t sub_10015EFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a1;
  uint64_t Params = type metadata accessor for PBPropertyBookReadParams(0);
  uint64_t v5 = *(void *)(Params - 8);
  uint64_t v6 = __chkstk_darwin(Params);
  uint64_t v37 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v34 - v8;
  uint64_t v9 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = sub_10007DC14(&qword_100295B20);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v23 = (char *)&v34 - v22;
  uint64_t v39 = v5;
  char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v41 = Params;
  v24((char *)&v34 - v22, 1, 1, Params);
  uint64_t v35 = v46 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_1000936F8(v35, (uint64_t)v11, &qword_100292E50);
  uint64_t v36 = v13;
  LODWORD(v46) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v46 == 1)
  {
    sub_1000816A4((uint64_t)v11, &qword_100292E50);
    uint64_t v25 = v12;
  }
  else
  {
    uint64_t v26 = (uint64_t)v40;
    sub_100159C74((uint64_t)v11, (uint64_t)v18, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_100159C74((uint64_t)v18, (uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
    uint64_t v25 = v12;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1000816A4((uint64_t)v23, &qword_100295B20);
      sub_100159C74((uint64_t)v16, v26, type metadata accessor for PBPropertyBookReadParams);
      sub_100159C74(v26, (uint64_t)v23, type metadata accessor for PBPropertyBookReadParams);
      uint64_t v27 = v41;
      v24(v23, 0, 1, v41);
      uint64_t v28 = v42;
      goto LABEL_7;
    }
    sub_100159F14((uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  uint64_t v27 = v41;
  uint64_t v28 = v42;
LABEL_7:
  sub_10016517C(&qword_100295428, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
  sub_1001EB420();
  if (v28) {
    return sub_1000816A4((uint64_t)v23, &qword_100295B20);
  }
  uint64_t v30 = v38;
  sub_1000936F8((uint64_t)v23, v38, &qword_100295B20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v30, 1, v27) == 1)
  {
    sub_1000816A4((uint64_t)v23, &qword_100295B20);
    return sub_1000816A4(v30, &qword_100295B20);
  }
  else
  {
    uint64_t v31 = v30;
    uint64_t v32 = v37;
    sub_100159C74(v31, v37, type metadata accessor for PBPropertyBookReadParams);
    if (v46 != 1) {
      sub_1001EB3A0();
    }
    sub_1000816A4((uint64_t)v23, &qword_100295B20);
    uint64_t v33 = v35;
    sub_1000816A4(v35, &qword_100292E50);
    sub_100159C74(v32, v33, type metadata accessor for PBPropertyBookReadParams);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v25);
  }
}

uint64_t sub_10015F51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a1;
  uint64_t v4 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v34 - v8;
  uint64_t v9 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = sub_10007DC14(&qword_100295B28);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v23 = (char *)&v34 - v22;
  uint64_t v39 = v5;
  char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v41 = v4;
  v24((char *)&v34 - v22, 1, 1, v4);
  uint64_t v35 = v46 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_1000936F8(v35, (uint64_t)v11, &qword_100292E50);
  uint64_t v36 = v13;
  LODWORD(v46) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v46 == 1)
  {
    sub_1000816A4((uint64_t)v11, &qword_100292E50);
    uint64_t v25 = v12;
  }
  else
  {
    uint64_t v26 = (uint64_t)v40;
    sub_100159C74((uint64_t)v11, (uint64_t)v18, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_100159C74((uint64_t)v18, (uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
    uint64_t v25 = v12;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_1000816A4((uint64_t)v23, &qword_100295B28);
      sub_100159C74((uint64_t)v16, v26, type metadata accessor for PBPropertyMarkedAsFinishedParam);
      sub_100159C74(v26, (uint64_t)v23, type metadata accessor for PBPropertyMarkedAsFinishedParam);
      uint64_t v27 = v41;
      v24(v23, 0, 1, v41);
      uint64_t v28 = v42;
      goto LABEL_7;
    }
    sub_100159F14((uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  uint64_t v27 = v41;
  uint64_t v28 = v42;
LABEL_7:
  sub_10016517C(&qword_100295458, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
  sub_1001EB420();
  if (v28) {
    return sub_1000816A4((uint64_t)v23, &qword_100295B28);
  }
  uint64_t v30 = v38;
  sub_1000936F8((uint64_t)v23, v38, &qword_100295B28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v30, 1, v27) == 1)
  {
    sub_1000816A4((uint64_t)v23, &qword_100295B28);
    return sub_1000816A4(v30, &qword_100295B28);
  }
  else
  {
    uint64_t v31 = v30;
    uint64_t v32 = v37;
    sub_100159C74(v31, v37, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    if (v46 != 1) {
      sub_1001EB3A0();
    }
    sub_1000816A4((uint64_t)v23, &qword_100295B28);
    uint64_t v33 = v35;
    sub_1000816A4(v35, &qword_100292E50);
    sub_100159C74(v32, v33, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v25);
  }
}

uint64_t sub_10015FA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v46 = a1;
  uint64_t v4 = type metadata accessor for PBPropertyBookImpressionParam(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v40 = (char *)&v34 - v8;
  uint64_t v9 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = sub_10007DC14(&qword_100295B30);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v23 = (char *)&v34 - v22;
  uint64_t v39 = v5;
  char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v41 = v4;
  v24((char *)&v34 - v22, 1, 1, v4);
  uint64_t v35 = v46 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_1000936F8(v35, (uint64_t)v11, &qword_100292E50);
  uint64_t v36 = v13;
  LODWORD(v46) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v46 == 1)
  {
    sub_1000816A4((uint64_t)v11, &qword_100292E50);
    uint64_t v25 = v12;
  }
  else
  {
    uint64_t v26 = (uint64_t)v40;
    sub_100159C74((uint64_t)v11, (uint64_t)v18, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_100159C74((uint64_t)v18, (uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
    uint64_t v25 = v12;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_1000816A4((uint64_t)v23, &qword_100295B30);
      sub_100159C74((uint64_t)v16, v26, type metadata accessor for PBPropertyBookImpressionParam);
      sub_100159C74(v26, (uint64_t)v23, type metadata accessor for PBPropertyBookImpressionParam);
      uint64_t v27 = v41;
      v24(v23, 0, 1, v41);
      uint64_t v28 = v42;
      goto LABEL_7;
    }
    sub_100159F14((uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  uint64_t v27 = v41;
  uint64_t v28 = v42;
LABEL_7:
  sub_10016517C(&qword_100295440, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
  sub_1001EB420();
  if (v28) {
    return sub_1000816A4((uint64_t)v23, &qword_100295B30);
  }
  uint64_t v30 = v38;
  sub_1000936F8((uint64_t)v23, v38, &qword_100295B30);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v30, 1, v27) == 1)
  {
    sub_1000816A4((uint64_t)v23, &qword_100295B30);
    return sub_1000816A4(v30, &qword_100295B30);
  }
  else
  {
    uint64_t v31 = v30;
    uint64_t v32 = v37;
    sub_100159C74(v31, v37, type metadata accessor for PBPropertyBookImpressionParam);
    if (v46 != 1) {
      sub_1001EB3A0();
    }
    sub_1000816A4((uint64_t)v23, &qword_100295B30);
    uint64_t v33 = v35;
    sub_1000816A4(v35, &qword_100292E50);
    sub_100159C74(v32, v33, type metadata accessor for PBPropertyBookImpressionParam);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v25);
  }
}

uint64_t PBPropertyValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_100160298((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    sub_10016049C((uint64_t)v3);
    if (*v3) {
      sub_1001EB4B0();
    }
    uint64_t v12 = type metadata accessor for PBPropertyValue(0);
    sub_1000936F8((uint64_t)v3 + *(int *)(v12 + 20), (uint64_t)v10, &qword_100292E50);
    uint64_t v13 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13) != 1)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_100160740((uint64_t)v3);
          break;
        case 2u:
          sub_100160970((uint64_t)v3);
          break;
        case 3u:
          sub_100160BA0((uint64_t)v3);
          break;
        case 4u:
          sub_100160DD0((uint64_t)v3);
          break;
        default:
          sub_100160514((uint64_t)v3);
          break;
      }
      sub_100159F14((uint64_t)v10, type metadata accessor for PBPropertyValue.OneOf_Params);
    }
    return sub_1001EB310();
  }
  return result;
}

uint64_t sub_100160298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_10007DC14(&qword_100292E58);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EB300();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_100292E58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1000816A4((uint64_t)v7, &qword_100292E58);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_10016517C(&qword_100295390, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  sub_1001EB4E0();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10016049C(uint64_t a1)
{
  uint64_t result = type metadata accessor for PBPropertyValue(0);
  if (*(void *)(a1 + *(int *)(result + 32) + 8)) {
    return sub_1001EB4C0();
  }
  return result;
}

uint64_t sub_100160514(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PBPropertyNoParams(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v4, &qword_100292E50);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_100159C74((uint64_t)v4, (uint64_t)v7, type metadata accessor for PBPropertyNoParams);
    sub_10016517C(&qword_1002953F8, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
    sub_1001EB4E0();
    return sub_100159F14((uint64_t)v7, type metadata accessor for PBPropertyNoParams);
  }
  uint64_t result = sub_100159F14((uint64_t)v4, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t sub_100160740(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PBPropertySingleFloatParam(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v4, &qword_100292E50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100159C74((uint64_t)v4, (uint64_t)v7, type metadata accessor for PBPropertySingleFloatParam);
    sub_10016517C(&qword_100295410, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
    sub_1001EB4E0();
    return sub_100159F14((uint64_t)v7, type metadata accessor for PBPropertySingleFloatParam);
  }
  uint64_t result = sub_100159F14((uint64_t)v4, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t sub_100160970(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Params = type metadata accessor for PBPropertyBookReadParams(0);
  __chkstk_darwin(Params);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v4, &qword_100292E50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_100159C74((uint64_t)v4, (uint64_t)v7, type metadata accessor for PBPropertyBookReadParams);
    sub_10016517C(&qword_100295428, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
    sub_1001EB4E0();
    return sub_100159F14((uint64_t)v7, type metadata accessor for PBPropertyBookReadParams);
  }
  uint64_t result = sub_100159F14((uint64_t)v4, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t sub_100160BA0(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v4, &qword_100292E50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_100159C74((uint64_t)v4, (uint64_t)v7, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    sub_10016517C(&qword_100295458, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
    sub_1001EB4E0();
    return sub_100159F14((uint64_t)v7, type metadata accessor for PBPropertyMarkedAsFinishedParam);
  }
  uint64_t result = sub_100159F14((uint64_t)v4, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t sub_100160DD0(uint64_t a1)
{
  uint64_t v2 = sub_10007DC14(&qword_100292E50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PBPropertyBookImpressionParam(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_100292E50);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1000816A4((uint64_t)v4, &qword_100292E50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_100159C74((uint64_t)v4, (uint64_t)v7, type metadata accessor for PBPropertyBookImpressionParam);
    sub_10016517C(&qword_100295440, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
    sub_1001EB4E0();
    return sub_100159F14((uint64_t)v7, type metadata accessor for PBPropertyBookImpressionParam);
  }
  uint64_t result = sub_100159F14((uint64_t)v4, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

Swift::Int PBPropertyValue.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertyValue, &qword_100295380, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
}

uint64_t sub_10016104C@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  uint64_t v4 = (char *)a2 + a1[5];
  uint64_t v5 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v6 = (char *)a2 + a1[7];
  uint64_t v7 = sub_1001EB300();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v9 = (void *)((char *)a2 + a1[8]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  return result;
}

uint64_t sub_100161124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_10016113C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100161154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AB0, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001611D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291168, (uint64_t)static PBPropertyValue._protobuf_nameMap, a1);
}

uint64_t sub_1001611F4(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_100295388, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100161260()
{
  sub_10016517C(&qword_100295388, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
  return sub_1001EB470();
}

void *PBPropertyBundle.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertyBundle.protoMessageName;
}

unint64_t static PBPropertyBundle.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_100161304()
{
  uint64_t v0 = sub_1001EB520();
  sub_10008176C(v0, static PBPropertyBundle._protobuf_nameMap);
  sub_10007CFF8(v0, (uint64_t)static PBPropertyBundle._protobuf_nameMap);
  sub_10007DC14(&qword_100295AF0);
  uint64_t v1 = (int *)(sub_10007DC14(&qword_100295AF8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100215330;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "configuration";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001EB4F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "propertyValues";
  *((void *)v10 + 1) = 14;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "deletedPropertyValueTimestamps";
  *(void *)(v11 + 8) = 30;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1001EB500();
}

uint64_t PBPropertyBundle._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291170, (uint64_t)static PBPropertyBundle._protobuf_nameMap);
}

uint64_t static PBPropertyBundle._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291170, (uint64_t)static PBPropertyBundle._protobuf_nameMap, a1);
}

uint64_t PBPropertyBundle.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001EB390();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        type metadata accessor for PBPropertyValue(0);
        sub_10016517C(&qword_100295388, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
        goto LABEL_5;
      }
      if (result == 1) {
        sub_1001616D0();
      }
LABEL_11:
      uint64_t result = sub_1001EB390();
    }
    sub_1001EB300();
    sub_10016517C(&qword_100295390, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
LABEL_5:
    sub_1001EB410();
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1001616D0()
{
  return sub_1001EB420();
}

uint64_t PBPropertyBundle.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100161900((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*(void *)(*v3 + 16))
    {
      type metadata accessor for PBPropertyValue(0);
      sub_10016517C(&qword_100295388, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
      sub_1001EB4D0();
    }
    if (*(void *)(v3[1] + 16))
    {
      sub_1001EB300();
      sub_10016517C(&qword_100295390, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
      sub_1001EB4D0();
    }
    type metadata accessor for PBPropertyBundle(0);
    return sub_1001EB310();
  }
  return result;
}

uint64_t sub_100161900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_10007DC14(&qword_100292E48);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBPropertyBundle(0);
  sub_1000936F8(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_100292E48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1000816A4((uint64_t)v7, &qword_100292E48);
  }
  sub_100159C74((uint64_t)v7, (uint64_t)v11, type metadata accessor for PBPropertyConfiguration);
  sub_10016517C(&qword_1002953E0, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
  sub_1001EB4E0();
  return sub_100159F14((uint64_t)v11, type metadata accessor for PBPropertyConfiguration);
}

Swift::Int PBPropertyBundle.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertyBundle, &qword_100295398, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
}

uint64_t sub_100161B50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = _swiftEmptyArrayStorage;
  a2[1] = _swiftEmptyArrayStorage;
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

uint64_t sub_100161BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1001EB330();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_100161C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001EB330();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_100161CC0()
{
  return PBPropertyBundle.decodeMessage<A>(decoder:)();
}

uint64_t sub_100161CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyBundle.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100161CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AA8, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100161D6C@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291170, (uint64_t)static PBPropertyBundle._protobuf_nameMap, a1);
}

uint64_t sub_100161D90(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_1002953A0, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100161DFC()
{
  sub_10016517C(&qword_1002953A0, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
  return sub_1001EB470();
}

void *PBPropertyTimeSlice.protoMessageName.unsafeMutableAddressor()
{
  return &static PBPropertyTimeSlice.protoMessageName;
}

unint64_t static PBPropertyTimeSlice.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_100161EA0()
{
  uint64_t v0 = sub_1001EB520();
  sub_10008176C(v0, static PBPropertyTimeSlice._protobuf_nameMap);
  sub_10007CFF8(v0, (uint64_t)static PBPropertyTimeSlice._protobuf_nameMap);
  sub_10007DC14(&qword_100295AF0);
  uint64_t v1 = (int *)(sub_10007DC14(&qword_100295AF8) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100215310;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "startOfTimeSlice";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = sub_1001EB4F0();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "propertyBundles";
  *((void *)v10 + 1) = 15;
  unsigned char v10[16] = 2;
  v9();
  return sub_1001EB500();
}

uint64_t PBPropertyTimeSlice._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_10016207C(&qword_100291178, (uint64_t)static PBPropertyTimeSlice._protobuf_nameMap);
}

uint64_t sub_10016207C(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1001EB520();
  return sub_10007CFF8(v3, a2);
}

uint64_t static PBPropertyTimeSlice._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001620F4(&qword_100291178, (uint64_t)static PBPropertyTimeSlice._protobuf_nameMap, a1);
}

uint64_t sub_1001620F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1001EB520();
  uint64_t v6 = sub_10007CFF8(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t PBPropertyTimeSlice.decodeMessage<A>(decoder:)()
{
  uint64_t result = sub_1001EB390();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for PBPropertyBundle(0);
        sub_10016517C(&qword_1002953A0, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
        sub_1001EB410();
      }
      else if (result == 1)
      {
        sub_1001622A8();
      }
      uint64_t result = sub_1001EB390();
    }
  }
  return result;
}

uint64_t sub_1001622A8()
{
  return sub_1001EB420();
}

uint64_t PBPropertyTimeSlice.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_10016245C(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(void *)(*(void *)v3 + 16))
    {
      type metadata accessor for PBPropertyBundle(0);
      sub_10016517C(&qword_1002953A0, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
      sub_1001EB4D0();
    }
    type metadata accessor for PBPropertyTimeSlice(0);
    return sub_1001EB310();
  }
  return result;
}

uint64_t sub_10016245C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = sub_10007DC14(&qword_100292E58);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EB300();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PBPropertyTimeSlice(0);
  sub_1000936F8(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_100292E58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1000816A4((uint64_t)v7, &qword_100292E58);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_10016517C(&qword_100295390, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  sub_1001EB4E0();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

Swift::Int PBPropertyTimeSlice.hashValue.getter()
{
  return sub_1001626AC((void (*)(void))type metadata accessor for PBPropertyTimeSlice, &qword_1002953A8, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
}

Swift::Int sub_1001626AC(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1001ED1A0();
}

uint64_t sub_100162734@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = _swiftEmptyArrayStorage;
  _s14bookdatastored31PBPropertyMarkedAsFinishedParamV13unknownFields21InternalSwiftProtobuf14UnknownStorageVvpfi_0();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1001EB300();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

uint64_t sub_1001627C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1001EB330();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_100162834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001EB330();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_1001628A4()
{
  return PBPropertyTimeSlice.decodeMessage<A>(decoder:)();
}

uint64_t sub_1001628BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyTimeSlice.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1001628D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10016517C(&qword_100295AA0, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100162950@<X0>(uint64_t a1@<X8>)
{
  return sub_100162974(&qword_100291178, (uint64_t)static PBPropertyTimeSlice._protobuf_nameMap, a1);
}

uint64_t sub_100162974@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1001EB520();
  uint64_t v6 = sub_10007CFF8(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_100162A10(uint64_t a1)
{
  uint64_t v2 = sub_10016517C(&qword_100294BD0, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
  return Message.debugDescription.getter(a1, v2);
}

Swift::Int sub_100162A7C()
{
  return sub_1001ED1A0();
}

uint64_t sub_100162AD4()
{
  sub_10016517C(&qword_100294BD0, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
  return sub_1001EB470();
}

Swift::Int sub_100162B50()
{
  return sub_1001ED1A0();
}

uint64_t _s14bookdatastored31PBPropertyMarkedAsFinishedParamV2eeoiySbAC_ACtFZ_0(char *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *a2;
  if (*((unsigned char *)a2 + 8) != 1)
  {
    if (v11 == v12) {
      goto LABEL_7;
    }
LABEL_9:
    char v15 = 0;
    return v15 & 1;
  }
  if (!v12)
  {
    if (!v11) {
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v12 != 1)
  {
    if (v11 == 2) {
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v11 != 1) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v13 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v14(v10, &a1[*(int *)(v13 + 20)], v4);
  v14(v8, (char *)a2 + *(int *)(v13 + 20), v4);
  sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v15 = sub_1001EC330();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return v15 & 1;
}

uint64_t _s14bookdatastored29PBPropertyBookImpressionParamV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2)
  {
    uint64_t v12 = type metadata accessor for PBPropertyBookImpressionParam(0);
    uint64_t v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v13(v10, &a1[*(int *)(v12 + 20)], v4);
    v13(v8, &a2[*(int *)(v12 + 20)], v4);
    sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v11 = sub_1001EC330();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s14bookdatastored26PBPropertySingleFloatParamV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2)
  {
    uint64_t v11 = type metadata accessor for PBPropertySingleFloatParam(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 20), v4);
    v12(v8, (char *)a2 + *(int *)(v11 + 20), v4);
    sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v13 = sub_1001EC330();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s14bookdatastored24PBPropertyBookReadParamsV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1])
  {
    uint64_t Params = type metadata accessor for PBPropertyBookReadParams(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(Params + 24), v4);
    v12(v8, (char *)a2 + *(int *)(Params + 24), v4);
    sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v13 = sub_1001EC330();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s14bookdatastored19PBPropertyTimeSliceV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v48 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v47 = (char *)&v45 - v7;
  uint64_t v8 = sub_1001EB300();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v51 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100295AE8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10007DC14(&qword_100292E58);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v54 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v45 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v45 - v21;
  uint64_t v23 = type metadata accessor for PBPropertyTimeSlice(0);
  uint64_t v24 = *(int *)(v23 + 24);
  uint64_t v52 = a1;
  sub_1000936F8((uint64_t)a1 + v24, (uint64_t)v22, &qword_100292E58);
  uint64_t v46 = v23;
  uint64_t v25 = *(int *)(v23 + 24);
  uint64_t v26 = v9;
  uint64_t v53 = a2;
  sub_1000936F8((uint64_t)a2 + v25, (uint64_t)v20, &qword_100292E58);
  uint64_t v27 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1000936F8((uint64_t)v22, (uint64_t)v14, &qword_100292E58);
  sub_1000936F8((uint64_t)v20, v27, &qword_100292E58);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v28((uint64_t)v14, 1, v8) == 1)
  {
    sub_1000816A4((uint64_t)v20, &qword_100292E58);
    sub_1000816A4((uint64_t)v22, &qword_100292E58);
    if (v28(v27, 1, v8) == 1)
    {
      sub_1000816A4((uint64_t)v14, &qword_100292E58);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v29 = v54;
  sub_1000936F8((uint64_t)v14, v54, &qword_100292E58);
  if (v28(v27, 1, v8) == 1)
  {
    sub_1000816A4((uint64_t)v20, &qword_100292E58);
    sub_1000816A4((uint64_t)v22, &qword_100292E58);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v29, v8);
LABEL_6:
    sub_1000816A4((uint64_t)v14, &qword_100295AE8);
LABEL_10:
    char v42 = 0;
    return v42 & 1;
  }
  uint64_t v30 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v51, v27, v8);
  sub_10016517C(&qword_100294BD8, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  char v31 = sub_1001EC330();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v26 + 8);
  v32(v30, v8);
  sub_1000816A4((uint64_t)v20, &qword_100292E58);
  sub_1000816A4((uint64_t)v22, &qword_100292E58);
  v32((char *)v29, v8);
  sub_1000816A4((uint64_t)v14, &qword_100292E58);
  if ((v31 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v33 = v52;
  uint64_t v34 = v53;
  if ((sub_1001B5200(*v52, *v53) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v36 = v46;
  uint64_t v35 = v47;
  uint64_t v38 = v49;
  uint64_t v37 = v50;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  v39(v47, (char *)v33 + *(int *)(v46 + 20), v50);
  uint64_t v40 = (char *)v34 + *(int *)(v36 + 20);
  uint64_t v41 = v48;
  v39(v48, v40, v37);
  sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v42 = sub_1001EC330();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43(v41, v37);
  v43(v35, v37);
  return v42 & 1;
}

uint64_t _s14bookdatastored23PBPropertyConfigurationV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (*(void *)a1 != *(void *)a2 || *((void *)a1 + 1) != *((void *)a2 + 1)) {
    goto LABEL_8;
  }
  if (*((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3)
    || (char v11 = 0, (sub_1001ED080() & 1) != 0))
  {
    if (*((void *)a1 + 4) == *((void *)a2 + 4))
    {
      uint64_t v12 = type metadata accessor for PBPropertyConfiguration(0);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v13(v10, &a1[*(int *)(v12 + 32)], v4);
      v13(v8, &a2[*(int *)(v12 + 32)], v4);
      sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v11 = sub_1001EC330();
      uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
      v14(v8, v4);
      v14(v10, v4);
      return v11 & 1;
    }
LABEL_8:
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s14bookdatastored16PBPropertyBundleV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v51 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100295B00);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10007DC14(&qword_100292E48);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for PBPropertyBundle(0);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v49 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_1000936F8(v26, (uint64_t)v23, &qword_100292E48);
  uint64_t v28 = *(int *)(v27 + 28);
  uint64_t v50 = a2;
  sub_1000936F8((uint64_t)a2 + v28, (uint64_t)v21, &qword_100292E48);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1000936F8((uint64_t)v23, (uint64_t)v14, &qword_100292E48);
  sub_1000936F8((uint64_t)v21, v29, &qword_100292E48);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) != 1)
  {
    char v31 = v51;
    sub_1000936F8((uint64_t)v14, (uint64_t)v18, &qword_100292E48);
    if (v30(v29, 1, v8) != 1)
    {
      sub_100159C74(v29, (uint64_t)v31, type metadata accessor for PBPropertyConfiguration);
      char v32 = _s14bookdatastored23PBPropertyConfigurationV2eeoiySbAC_ACtFZ_0(v18, v31);
      sub_100159F14((uint64_t)v31, type metadata accessor for PBPropertyConfiguration);
      sub_1000816A4((uint64_t)v21, &qword_100292E48);
      sub_1000816A4((uint64_t)v23, &qword_100292E48);
      sub_100159F14((uint64_t)v18, type metadata accessor for PBPropertyConfiguration);
      sub_1000816A4((uint64_t)v14, &qword_100292E48);
      if (v32) {
        goto LABEL_8;
      }
LABEL_11:
      char v41 = 0;
      return v41 & 1;
    }
    sub_1000816A4((uint64_t)v21, &qword_100292E48);
    sub_1000816A4((uint64_t)v23, &qword_100292E48);
    sub_100159F14((uint64_t)v18, type metadata accessor for PBPropertyConfiguration);
LABEL_6:
    sub_1000816A4((uint64_t)v14, &qword_100295B00);
    goto LABEL_11;
  }
  sub_1000816A4((uint64_t)v21, &qword_100292E48);
  sub_1000816A4((uint64_t)v23, &qword_100292E48);
  if (v30(v29, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_1000816A4((uint64_t)v14, &qword_100292E48);
LABEL_8:
  uint64_t v33 = v49;
  uint64_t v34 = v50;
  if ((sub_1001B5B28(*v49, *v50) & 1) == 0 || (sub_1001B5B7C(v33[1], v34[1]) & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v36 = v47;
  uint64_t v35 = v48;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 24), v48);
  uint64_t v39 = (char *)v34 + *(int *)(v27 + 24);
  uint64_t v40 = v46;
  v37(v46, v39, v35);
  sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = sub_1001EC330();
  char v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t _s14bookdatastored15PBPropertyValueV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  unint64_t v81 = a1;
  unint64_t v82 = a2;
  uint64_t v2 = sub_1001EB330();
  uint64_t v71 = *(void *)(v2 - 8);
  uint64_t v72 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v70 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v69 = (char *)&v67 - v5;
  uint64_t v6 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v77 = v6;
  __chkstk_darwin(v6);
  uint64_t v68 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10007DC14(&qword_100295B08);
  __chkstk_darwin(v74);
  uint64_t v78 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14(&qword_100292E50);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v73 = (uint64_t)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v79 = (uint64_t)&v67 - v13;
  __chkstk_darwin(v12);
  uint64_t v75 = (uint64_t)&v67 - v14;
  uint64_t v15 = sub_1001EB300();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10007DC14(&qword_100295AE8);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10007DC14(&qword_100292E58);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v67 - v28;
  __chkstk_darwin(v27);
  char v31 = (char *)&v67 - v30;
  uint64_t v32 = type metadata accessor for PBPropertyValue(0);
  sub_1000936F8((uint64_t)v81 + *(int *)(v32 + 28), (uint64_t)v31, &qword_100292E58);
  uint64_t v80 = (int *)v32;
  sub_1000936F8((uint64_t)v82 + *(int *)(v32 + 28), (uint64_t)v29, &qword_100292E58);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_1000936F8((uint64_t)v31, (uint64_t)v22, &qword_100292E58);
  sub_1000936F8((uint64_t)v29, v33, &qword_100292E58);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_1000816A4((uint64_t)v29, &qword_100292E58);
    sub_1000816A4((uint64_t)v31, &qword_100292E58);
    if (v34(v33, 1, v15) == 1)
    {
      sub_1000816A4((uint64_t)v22, &qword_100292E58);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v35 = &qword_100295AE8;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_1000816A4(v36, v35);
LABEL_8:
    char v37 = 0;
    return v37 & 1;
  }
  sub_1000936F8((uint64_t)v22, (uint64_t)v26, &qword_100292E58);
  if (v34(v33, 1, v15) == 1)
  {
    sub_1000816A4((uint64_t)v29, &qword_100292E58);
    sub_1000816A4((uint64_t)v31, &qword_100292E58);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v26, v15);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v18, v33, v15);
  sub_10016517C(&qword_100294BD8, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
  char v39 = sub_1001EC330();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v16 + 8);
  v40(v18, v15);
  sub_1000816A4((uint64_t)v29, &qword_100292E58);
  sub_1000816A4((uint64_t)v31, &qword_100292E58);
  v40(v26, v15);
  sub_1000816A4((uint64_t)v22, &qword_100292E58);
  if ((v39 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  char v41 = v81;
  uint64_t v42 = v80[8];
  uint64_t v43 = (void *)((char *)v81 + v42);
  uint64_t v44 = *(void *)((char *)v81 + v42 + 8);
  uint64_t v45 = v82;
  uint64_t v46 = (void *)((char *)v82 + v42);
  uint64_t v47 = v46[1];
  if (!v44)
  {
    if (v47) {
      goto LABEL_8;
    }
LABEL_18:
    if (*v41 != *v45) {
      goto LABEL_8;
    }
    uint64_t v48 = v80;
    uint64_t v49 = v75;
    sub_1000936F8((uint64_t)v41 + v80[5], v75, &qword_100292E50);
    uint64_t v50 = v79;
    sub_1000936F8((uint64_t)v45 + v48[5], v79, &qword_100292E50);
    uint64_t v51 = v78;
    uint64_t v52 = v78 + *(int *)(v74 + 48);
    sub_1000936F8(v49, v78, &qword_100292E50);
    sub_1000936F8(v50, v52, &qword_100292E50);
    uint64_t v53 = v77;
    uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
    if (v54(v51, 1, v77) == 1)
    {
      sub_1000816A4(v50, &qword_100292E50);
      sub_1000816A4(v49, &qword_100292E50);
      if (v54(v52, 1, v53) == 1)
      {
        sub_1000816A4(v51, &qword_100292E50);
LABEL_26:
        uint64_t v58 = v80;
        uint64_t v59 = (char *)v41 + v80[6];
        uint64_t v61 = v71;
        uint64_t v60 = v72;
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
        id v63 = v69;
        v62(v69, v59, v72);
        int64_t v64 = (char *)v45 + v58[6];
        uint64_t v65 = v70;
        v62(v70, v64, v60);
        sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v37 = sub_1001EC330();
        unint64_t v66 = *(void (**)(char *, uint64_t))(v61 + 8);
        v66(v65, v60);
        v66(v63, v60);
        return v37 & 1;
      }
    }
    else
    {
      uint64_t v55 = v73;
      sub_1000936F8(v51, v73, &qword_100292E50);
      if (v54(v52, 1, v53) != 1)
      {
        uint64_t v56 = v68;
        sub_100159C74(v52, v68, type metadata accessor for PBPropertyValue.OneOf_Params);
        char v57 = _s14bookdatastored15PBPropertyValueV12OneOf_ParamsO21__derived_enum_equalsySbAE_AEtFZ_0(v55, v56);
        sub_100159F14(v56, type metadata accessor for PBPropertyValue.OneOf_Params);
        sub_1000816A4(v79, &qword_100292E50);
        sub_1000816A4(v49, &qword_100292E50);
        sub_100159F14(v55, type metadata accessor for PBPropertyValue.OneOf_Params);
        sub_1000816A4(v51, &qword_100292E50);
        if (v57) {
          goto LABEL_26;
        }
        goto LABEL_8;
      }
      sub_1000816A4(v79, &qword_100292E50);
      sub_1000816A4(v49, &qword_100292E50);
      sub_100159F14(v55, type metadata accessor for PBPropertyValue.OneOf_Params);
    }
    uint64_t v35 = &qword_100295B08;
    uint64_t v36 = v51;
    goto LABEL_7;
  }
  if (!v47) {
    goto LABEL_8;
  }
  if (*v43 == *v46 && v44 == v47) {
    goto LABEL_18;
  }
  char v37 = 0;
  if (sub_1001ED080()) {
    goto LABEL_18;
  }
  return v37 & 1;
}

uint64_t _s14bookdatastored15PBPropertyValueV12OneOf_ParamsO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v46 = type metadata accessor for PBPropertyBookImpressionParam(0);
  __chkstk_darwin(v46);
  uint64_t v51 = (unsigned __int8 *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v49 = (uint64_t *)((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Params = type metadata accessor for PBPropertyBookReadParams(0);
  __chkstk_darwin(Params);
  uint64_t v50 = (float *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = type metadata accessor for PBPropertySingleFloatParam(0);
  __chkstk_darwin(v47);
  uint64_t v48 = (float *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for PBPropertyNoParams(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (unsigned __int8 *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (float *)((char *)&v44 - v18);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (float *)((char *)&v44 - v21);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v25 = sub_10007DC14(&qword_100295B38);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = (uint64_t)&v28[*(int *)(v26 + 56)];
  sub_10015A304(v52, (uint64_t)v28, type metadata accessor for PBPropertyValue.OneOf_Params);
  sub_10015A304(v53, v29, type metadata accessor for PBPropertyValue.OneOf_Params);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10015A304((uint64_t)v28, (uint64_t)v22, type metadata accessor for PBPropertyValue.OneOf_Params);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v30 = type metadata accessor for PBPropertySingleFloatParam;
        uint64_t v31 = (uint64_t)v22;
        goto LABEL_24;
      }
      uint64_t v32 = v48;
      sub_100159C74(v29, (uint64_t)v48, type metadata accessor for PBPropertySingleFloatParam);
      if (*v22 == *v32)
      {
        sub_1001EB330();
        sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        if (sub_1001EC330())
        {
          uint64_t v33 = type metadata accessor for PBPropertySingleFloatParam;
          sub_100159F14((uint64_t)v32, type metadata accessor for PBPropertySingleFloatParam);
          uint64_t v34 = (uint64_t)v22;
          goto LABEL_19;
        }
      }
      char v41 = type metadata accessor for PBPropertySingleFloatParam;
      sub_100159F14((uint64_t)v32, type metadata accessor for PBPropertySingleFloatParam);
      uint64_t v42 = (uint64_t)v22;
      goto LABEL_30;
    case 2u:
      sub_10015A304((uint64_t)v28, (uint64_t)v19, type metadata accessor for PBPropertyValue.OneOf_Params);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v30 = type metadata accessor for PBPropertyBookReadParams;
        uint64_t v31 = (uint64_t)v19;
        goto LABEL_24;
      }
      uint64_t v35 = v50;
      sub_100159C74(v29, (uint64_t)v50, type metadata accessor for PBPropertyBookReadParams);
      if (*(unsigned __int8 *)v19 == *(unsigned __int8 *)v35 && v19[1] == v35[1])
      {
        sub_1001EB330();
        sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        if (sub_1001EC330())
        {
          uint64_t v33 = type metadata accessor for PBPropertyBookReadParams;
          sub_100159F14((uint64_t)v35, type metadata accessor for PBPropertyBookReadParams);
          uint64_t v34 = (uint64_t)v19;
          goto LABEL_19;
        }
      }
      char v41 = type metadata accessor for PBPropertyBookReadParams;
      sub_100159F14((uint64_t)v35, type metadata accessor for PBPropertyBookReadParams);
      uint64_t v42 = (uint64_t)v19;
      goto LABEL_30;
    case 3u:
      sub_10015A304((uint64_t)v28, (uint64_t)v16, type metadata accessor for PBPropertyValue.OneOf_Params);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v36 = v49;
        sub_100159C74(v29, (uint64_t)v49, type metadata accessor for PBPropertyMarkedAsFinishedParam);
        char v37 = _s14bookdatastored31PBPropertyMarkedAsFinishedParamV2eeoiySbAC_ACtFZ_0(v16, v36);
        uint64_t v38 = type metadata accessor for PBPropertyMarkedAsFinishedParam;
        sub_100159F14((uint64_t)v36, type metadata accessor for PBPropertyMarkedAsFinishedParam);
        uint64_t v39 = (uint64_t)v16;
        goto LABEL_27;
      }
      uint64_t v30 = type metadata accessor for PBPropertyMarkedAsFinishedParam;
      uint64_t v31 = (uint64_t)v16;
      goto LABEL_24;
    case 4u:
      sub_10015A304((uint64_t)v28, (uint64_t)v13, type metadata accessor for PBPropertyValue.OneOf_Params);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        uint64_t v30 = type metadata accessor for PBPropertyBookImpressionParam;
        uint64_t v31 = (uint64_t)v13;
        goto LABEL_24;
      }
      uint64_t v40 = v51;
      sub_100159C74(v29, (uint64_t)v51, type metadata accessor for PBPropertyBookImpressionParam);
      if (*v13 == *v40)
      {
        sub_1001EB330();
        sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        if (sub_1001EC330())
        {
          uint64_t v33 = type metadata accessor for PBPropertyBookImpressionParam;
          sub_100159F14((uint64_t)v40, type metadata accessor for PBPropertyBookImpressionParam);
          uint64_t v34 = (uint64_t)v13;
LABEL_19:
          sub_100159F14(v34, v33);
          sub_100159F14((uint64_t)v28, type metadata accessor for PBPropertyValue.OneOf_Params);
          char v37 = 1;
          return v37 & 1;
        }
      }
      char v41 = type metadata accessor for PBPropertyBookImpressionParam;
      sub_100159F14((uint64_t)v40, type metadata accessor for PBPropertyBookImpressionParam);
      uint64_t v42 = (uint64_t)v13;
LABEL_30:
      sub_100159F14(v42, v41);
      sub_100159F14((uint64_t)v28, type metadata accessor for PBPropertyValue.OneOf_Params);
      goto LABEL_31;
    default:
      sub_10015A304((uint64_t)v28, (uint64_t)v24, type metadata accessor for PBPropertyValue.OneOf_Params);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v30 = type metadata accessor for PBPropertyNoParams;
        uint64_t v31 = (uint64_t)v24;
LABEL_24:
        sub_100159F14(v31, v30);
        sub_1000816A4((uint64_t)v28, &qword_100295B38);
LABEL_31:
        char v37 = 0;
      }
      else
      {
        sub_100159C74(v29, (uint64_t)v9, type metadata accessor for PBPropertyNoParams);
        sub_1001EB330();
        sub_10016517C(&qword_100295340, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v37 = sub_1001EC330();
        uint64_t v38 = type metadata accessor for PBPropertyNoParams;
        sub_100159F14((uint64_t)v9, type metadata accessor for PBPropertyNoParams);
        uint64_t v39 = (uint64_t)v24;
LABEL_27:
        sub_100159F14(v39, v38);
        sub_100159F14((uint64_t)v28, type metadata accessor for PBPropertyValue.OneOf_Params);
      }
      return v37 & 1;
  }
}

uint64_t sub_10016517C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001651C4()
{
  unint64_t result = qword_100295370;
  if (!qword_100295370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100295370);
  }
  return result;
}

unint64_t sub_10016521C()
{
  unint64_t result = qword_1002953B0;
  if (!qword_1002953B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002953B0);
  }
  return result;
}

unint64_t sub_100165274()
{
  unint64_t result = qword_1002953B8;
  if (!qword_1002953B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002953B8);
  }
  return result;
}

unint64_t sub_1001652CC()
{
  unint64_t result = qword_1002953C0;
  if (!qword_1002953C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002953C0);
  }
  return result;
}

unint64_t sub_100165324()
{
  unint64_t result = qword_1002953C8;
  if (!qword_1002953C8)
  {
    sub_10008155C(&qword_1002953D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002953C8);
  }
  return result;
}

uint64_t sub_100165380()
{
  return sub_10016517C(&qword_1002953D8, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
}

uint64_t sub_1001653C8()
{
  return sub_10016517C(&qword_1002953E0, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
}

uint64_t sub_100165410()
{
  return sub_10016517C(&qword_100295348, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
}

uint64_t sub_100165458()
{
  return sub_10016517C(&qword_1002953E8, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
}

uint64_t sub_1001654A0()
{
  return sub_10016517C(&qword_1002953F0, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
}

uint64_t sub_1001654E8()
{
  return sub_10016517C(&qword_1002953F8, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
}

uint64_t sub_100165530()
{
  return sub_10016517C(&qword_100295350, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
}

uint64_t sub_100165578()
{
  return sub_10016517C(&qword_100295400, (void (*)(uint64_t))type metadata accessor for PBPropertyNoParams);
}

uint64_t sub_1001655C0()
{
  return sub_10016517C(&qword_100295408, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t sub_100165608()
{
  return sub_10016517C(&qword_100295410, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t sub_100165650()
{
  return sub_10016517C(&qword_100295358, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t sub_100165698()
{
  return sub_10016517C(&qword_100295418, (void (*)(uint64_t))type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t sub_1001656E0()
{
  return sub_10016517C(&qword_100295420, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
}

uint64_t sub_100165728()
{
  return sub_10016517C(&qword_100295428, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
}

uint64_t sub_100165770()
{
  return sub_10016517C(&qword_100295360, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
}

uint64_t sub_1001657B8()
{
  return sub_10016517C(&qword_100295430, (void (*)(uint64_t))type metadata accessor for PBPropertyBookReadParams);
}

uint64_t sub_100165800()
{
  return sub_10016517C(&qword_100295438, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_100165848()
{
  return sub_10016517C(&qword_100295440, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_100165890()
{
  return sub_10016517C(&qword_100295368, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_1001658D8()
{
  return sub_10016517C(&qword_100295448, (void (*)(uint64_t))type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_100165920()
{
  return sub_10016517C(&qword_100295450, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_100165968()
{
  return sub_10016517C(&qword_100295458, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_1001659B0()
{
  return sub_10016517C(&qword_100295378, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_1001659F8()
{
  return sub_10016517C(&qword_100295460, (void (*)(uint64_t))type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_100165A40()
{
  return sub_10016517C(&qword_100295468, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
}

uint64_t sub_100165A88()
{
  return sub_10016517C(&qword_100295388, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
}

uint64_t sub_100165AD0()
{
  return sub_10016517C(&qword_100295380, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
}

uint64_t sub_100165B18()
{
  return sub_10016517C(&qword_100295470, (void (*)(uint64_t))type metadata accessor for PBPropertyValue);
}

uint64_t sub_100165B60()
{
  return sub_10016517C(&qword_100295478, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
}

uint64_t sub_100165BA8()
{
  return sub_10016517C(&qword_1002953A0, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
}

uint64_t sub_100165BF0()
{
  return sub_10016517C(&qword_100295398, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
}

uint64_t sub_100165C38()
{
  return sub_10016517C(&qword_100295480, (void (*)(uint64_t))type metadata accessor for PBPropertyBundle);
}

uint64_t sub_100165C80()
{
  return sub_10016517C(&qword_100295488, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
}

uint64_t sub_100165CC8()
{
  return sub_10016517C(&qword_100294BD0, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
}

uint64_t sub_100165D10()
{
  return sub_10016517C(&qword_1002953A8, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
}

uint64_t sub_100165D58()
{
  return sub_10016517C(&qword_100295490, (void (*)(uint64_t))type metadata accessor for PBPropertyTimeSlice);
}

uint64_t getEnumTagSinglePayload for MarkedAsFinishedMechanism(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MarkedAsFinishedMechanism(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100165DF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100165E0C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MarkedAsFinishedMechanism()
{
  return &type metadata for MarkedAsFinishedMechanism;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    char v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    a1[4] = a2[4];
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001EB330();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBPropertyConfiguration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1001EB330();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for PBPropertyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1001EB330();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for PBPropertyConfiguration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBPropertyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBPropertyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016623C);
}

uint64_t sub_10016623C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001EB330();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100166300);
}

uint64_t sub_100166300(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001EB330();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1001663A8()
{
  uint64_t result = sub_1001EB330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for PBPropertyNoParams(uint64_t a1)
{
  uint64_t v2 = sub_1001EB330();
  char v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyNoParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001666C4);
}

uint64_t sub_1001666C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PBPropertyNoParams(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100166744);
}

uint64_t sub_100166744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EB330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1001667B4()
{
  uint64_t result = sub_1001EB330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertySingleFloatParam(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    char v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1001EB330();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_DWORD *initializeWithCopy for PBPropertySingleFloatParam(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithCopy for PBPropertySingleFloatParam(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *initializeWithTake for PBPropertySingleFloatParam(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithTake for PBPropertySingleFloatParam(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertySingleFloatParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100166B14);
}

uint64_t storeEnumTagSinglePayload for PBPropertySingleFloatParam(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100166B2C);
}

uint64_t sub_100166B30()
{
  return sub_10016795C();
}

void *initializeBufferWithCopyOfBuffer for PBPropertyBookReadParams(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    void *v3 = *a2;
    char v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_1001EB330();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBPropertyBookReadParams(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1001EB330();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100166EA0);
}

uint64_t sub_100166EA0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1001EB330();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100166F64);
}

unsigned char *sub_100166F64(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1001EB330();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100167008()
{
  uint64_t result = sub_1001EB330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyBookImpressionParam(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    int v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1001EB330();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

unsigned char *initializeWithCopy for PBPropertyBookImpressionParam(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  int v6 = &a2[v4];
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for PBPropertyBookImpressionParam(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  int v6 = &a2[v4];
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *initializeWithTake for PBPropertyBookImpressionParam(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  int v6 = &a2[v4];
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for PBPropertyBookImpressionParam(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  int v6 = &a2[v4];
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyBookImpressionParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016737C);
}

uint64_t sub_10016737C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1001EB330();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 20)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyBookImpressionParam(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100167440);
}

unsigned char *sub_100167440(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1001EB330();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1001674E4()
{
  return sub_10016795C();
}

void *initializeBufferWithCopyOfBuffer for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_1001EB330();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s14bookdatastored26PBPropertySingleFloatParamVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1001EB330();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = (uint64_t)a2 + v5;
  uint64_t v8 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100167850);
}

uint64_t sub_100167854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1001EB330();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001678D8);
}

uint64_t sub_1001678DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1001EB330();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_100167950()
{
  return sub_10016795C();
}

uint64_t sub_10016795C()
{
  uint64_t result = sub_1001EB330();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyValue(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (_DWORD *)((char *)a1 + v7);
    uint64_t v9 = (_DWORD *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10007DC14(&qword_100292E50);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v8 = *v9;
          uint64_t v15 = type metadata accessor for PBPropertySingleFloatParam(0);
          goto LABEL_11;
        case 2u:
          *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
          v8[1] = v9[1];
          uint64_t v16 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
          goto LABEL_12;
        case 3u:
          *(void *)uint64_t v8 = *(void *)v9;
          *((unsigned char *)v8 + 8) = *((unsigned char *)v9 + 8);
          uint64_t v15 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
          goto LABEL_11;
        case 4u:
          *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
          uint64_t v15 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_11:
          uint64_t v16 = *(int *)(v15 + 20);
LABEL_12:
          uint64_t v17 = (char *)v8 + v16;
          uint64_t v18 = (char *)v9 + v16;
          uint64_t v19 = sub_1001EB330();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
          break;
        default:
          uint64_t v14 = sub_1001EB330();
          (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v20 = a3[6];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1001EB330();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[7];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_1001EB300();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_10007DC14(&qword_100292E58);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v30 = a3[8];
    uint64_t v31 = (uint64_t *)((char *)v4 + v30);
    uint64_t v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PBPropertyValue(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_9;
      case 1u:
        uint64_t v6 = type metadata accessor for PBPropertySingleFloatParam(0);
        goto LABEL_7;
      case 2u:
        uint64_t v7 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        goto LABEL_8;
      case 3u:
        uint64_t v6 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
        goto LABEL_7;
      case 4u:
        uint64_t v6 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_7:
        uint64_t v7 = *(int *)(v6 + 20);
LABEL_8:
        v4 += v7;
LABEL_9:
        uint64_t v8 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
        break;
      default:
        break;
    }
  }
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[7];
  uint64_t v12 = sub_1001EB300();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PBPropertyValue(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10007DC14(&qword_100292E50);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v7 = *v8;
        uint64_t v13 = type metadata accessor for PBPropertySingleFloatParam(0);
        goto LABEL_9;
      case 2u:
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        v7[1] = v8[1];
        uint64_t v14 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        goto LABEL_10;
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((unsigned char *)v7 + 8) = *((unsigned char *)v8 + 8);
        uint64_t v13 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
        goto LABEL_9;
      case 4u:
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        uint64_t v13 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_9:
        uint64_t v14 = *(int *)(v13 + 20);
LABEL_10:
        uint64_t v15 = (char *)v7 + v14;
        uint64_t v16 = (char *)v8 + v14;
        uint64_t v17 = sub_1001EB330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        break;
      default:
        uint64_t v12 = sub_1001EB330();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1001EB300();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_10007DC14(&qword_100292E58);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PBPropertyValue(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
          uint64_t v17 = type metadata accessor for PBPropertySingleFloatParam(0);
          goto LABEL_15;
        case 2u:
          *(unsigned char *)uint64_t v7 = *v8;
          *(_DWORD *)(v7 + 4) = *((_DWORD *)v8 + 1);
          uint64_t v18 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
          goto LABEL_16;
        case 3u:
          uint64_t v19 = *(void *)v8;
          *(unsigned char *)(v7 + 8) = v8[8];
          *(void *)uint64_t v7 = v19;
          uint64_t v17 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
          goto LABEL_15;
        case 4u:
          *(unsigned char *)uint64_t v7 = *v8;
          uint64_t v17 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_15:
          uint64_t v18 = *(int *)(v17 + 20);
LABEL_16:
          uint64_t v20 = v7 + v18;
          uint64_t v21 = &v8[v18];
          uint64_t v22 = sub_1001EB330();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
          break;
        default:
          uint64_t v14 = sub_1001EB330();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v15 = sub_10007DC14(&qword_100292E50);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_18;
  }
  if (v13)
  {
    sub_100159F14(v7, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_100159F14(v7, type metadata accessor for PBPropertyValue.OneOf_Params);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        uint64_t v40 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
        uint64_t v41 = v7 + v40;
        uint64_t v42 = &v8[v40];
        uint64_t v43 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(unsigned char *)uint64_t v7 = *v8;
        *(_DWORD *)(v7 + 4) = *((_DWORD *)v8 + 1);
        uint64_t v44 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        uint64_t v45 = v7 + v44;
        uint64_t v46 = &v8[v44];
        uint64_t v47 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v48 = *(void *)v8;
        *(unsigned char *)(v7 + 8) = v8[8];
        *(void *)uint64_t v7 = v48;
        uint64_t v49 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
        uint64_t v50 = v7 + v49;
        uint64_t v51 = &v8[v49];
        uint64_t v52 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(unsigned char *)uint64_t v7 = *v8;
        uint64_t v53 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
        uint64_t v54 = v7 + v53;
        uint64_t v55 = &v8[v53];
        uint64_t v56 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v16 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v7, v8, v16);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_18:
  uint64_t v23 = a3[6];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[7];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_1001EB300();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_23;
  }
  if (v34)
  {
LABEL_23:
    uint64_t v35 = sub_10007DC14(&qword_100292E58);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_24:
  uint64_t v36 = a3[8];
  char v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  void *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for PBPropertyValue(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_DWORD *)((char *)a1 + v6);
  uint64_t v8 = (_DWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10007DC14(&qword_100292E50);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v7 = *v8;
        uint64_t v13 = type metadata accessor for PBPropertySingleFloatParam(0);
        goto LABEL_9;
      case 2u:
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        v7[1] = v8[1];
        uint64_t v14 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        goto LABEL_10;
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        *((unsigned char *)v7 + 8) = *((unsigned char *)v8 + 8);
        uint64_t v13 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
        goto LABEL_9;
      case 4u:
        *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
        uint64_t v13 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_9:
        uint64_t v14 = *(int *)(v13 + 20);
LABEL_10:
        uint64_t v15 = (char *)v7 + v14;
        uint64_t v16 = (char *)v8 + v14;
        uint64_t v17 = sub_1001EB330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      default:
        uint64_t v12 = sub_1001EB330();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1001EB300();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_10007DC14(&qword_100292E58);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for PBPropertyValue(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
          uint64_t v17 = type metadata accessor for PBPropertySingleFloatParam(0);
          goto LABEL_15;
        case 2u:
          *(unsigned char *)uint64_t v7 = *v8;
          *(_DWORD *)(v7 + 4) = *((_DWORD *)v8 + 1);
          uint64_t v18 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
          goto LABEL_16;
        case 3u:
          *(void *)uint64_t v7 = *(void *)v8;
          *(unsigned char *)(v7 + 8) = v8[8];
          uint64_t v17 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
          goto LABEL_15;
        case 4u:
          *(unsigned char *)uint64_t v7 = *v8;
          uint64_t v17 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_15:
          uint64_t v18 = *(int *)(v17 + 20);
LABEL_16:
          uint64_t v19 = v7 + v18;
          uint64_t v20 = &v8[v18];
          uint64_t v21 = sub_1001EB330();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
          break;
        default:
          uint64_t v14 = sub_1001EB330();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v15 = sub_10007DC14(&qword_100292E50);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_18;
  }
  if (v13)
  {
    sub_100159F14(v7, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_100159F14(v7, type metadata accessor for PBPropertyValue.OneOf_Params);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)uint64_t v7 = *(_DWORD *)v8;
        uint64_t v41 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
        uint64_t v42 = v7 + v41;
        uint64_t v43 = &v8[v41];
        uint64_t v44 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(unsigned char *)uint64_t v7 = *v8;
        *(_DWORD *)(v7 + 4) = *((_DWORD *)v8 + 1);
        uint64_t v45 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        uint64_t v46 = v7 + v45;
        uint64_t v47 = &v8[v45];
        uint64_t v48 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(void *)uint64_t v7 = *(void *)v8;
        *(unsigned char *)(v7 + 8) = v8[8];
        uint64_t v49 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
        uint64_t v50 = v7 + v49;
        uint64_t v51 = &v8[v49];
        uint64_t v52 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(unsigned char *)uint64_t v7 = *v8;
        uint64_t v53 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
        uint64_t v54 = v7 + v53;
        uint64_t v55 = &v8[v53];
        uint64_t v56 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v16 = sub_1001EB330();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v7, v8, v16);
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_18:
  uint64_t v22 = a3[6];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  uint64_t v26 = a3[7];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_1001EB300();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v27, v28, v29);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_23;
  }
  if (v33)
  {
LABEL_23:
    uint64_t v34 = sub_10007DC14(&qword_100292E58);
    memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_24:
  uint64_t v35 = a3[8];
  uint64_t v36 = (void *)((char *)a1 + v35);
  char v37 = (void *)((char *)a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001693DC);
}

uint64_t sub_1001693DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10007DC14(&qword_100292E50);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_7:
    int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v12(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1001EB330();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_7;
  }
  uint64_t v11 = sub_10007DC14(&qword_100292E58);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_7;
  }
  unint64_t v14 = *(void *)(a1 + a3[8] + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for PBPropertyValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100169564);
}

uint64_t sub_100169564(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10007DC14(&qword_100292E50);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t v12 = sub_1001EB330();
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = *(void *)(v12 - 8);
      uint64_t v11 = a4[6];
    }
    else
    {
      uint64_t result = sub_10007DC14(&qword_100292E58);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[8] + 8) = a2;
        return result;
      }
      uint64_t v9 = result;
      uint64_t v10 = *(void *)(result - 8);
      uint64_t v11 = a4[7];
    }
  }
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v14(a1 + v11, a2, a2, v9);
}

void sub_1001696C8()
{
  sub_10016981C(319, &qword_100295878, (void (*)(uint64_t))type metadata accessor for PBPropertyValue.OneOf_Params);
  if (v0 <= 0x3F)
  {
    sub_1001EB330();
    if (v1 <= 0x3F)
    {
      sub_10016981C(319, (unint64_t *)&unk_100295880, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10016981C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001ECB50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = v7 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v8 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
        uint64_t v9 = a1 + v8;
        uint64_t v10 = (uint64_t)a2 + v8;
        uint64_t v11 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
        uint64_t v12 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        uint64_t v13 = a1 + v12;
        uint64_t v14 = (uint64_t)a2 + v12;
        uint64_t v15 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        break;
      case 3u:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v16 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
        uint64_t v17 = a1 + v16;
        uint64_t v18 = (uint64_t)a2 + v16;
        uint64_t v19 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        break;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v20 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
        uint64_t v21 = a1 + v20;
        uint64_t v22 = (uint64_t)a2 + v20;
        uint64_t v23 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        break;
      default:
        uint64_t v6 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PBPropertyValue.OneOf_Params(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_8;
    case 1:
      uint64_t v3 = type metadata accessor for PBPropertySingleFloatParam(0);
      goto LABEL_6;
    case 2:
      uint64_t v4 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
      goto LABEL_7;
    case 3:
      uint64_t v3 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
      goto LABEL_6;
    case 4:
      uint64_t v3 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_6:
      uint64_t v4 = *(int *)(v3 + 20);
LABEL_7:
      a1 += v4;
LABEL_8:
      uint64_t v5 = sub_1001EB330();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t result = v6(a1, v5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v5 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      break;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
      uint64_t v9 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v13 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
      uint64_t v14 = a1 + v13;
      uint64_t v15 = a2 + v13;
      uint64_t v16 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      break;
    case 4u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v17 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      break;
    default:
      uint64_t v4 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t *a2)
{
  if ((uint64_t *)a1 != a2)
  {
    sub_100159F14(a1, type metadata accessor for PBPropertyValue.OneOf_Params);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v5 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
        uint64_t v6 = a1 + v5;
        uint64_t v7 = (uint64_t)a2 + v5;
        uint64_t v8 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
        uint64_t v9 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        uint64_t v10 = a1 + v9;
        uint64_t v11 = (uint64_t)a2 + v9;
        uint64_t v12 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        break;
      case 3u:
        uint64_t v13 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        *(void *)a1 = v13;
        uint64_t v14 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
        uint64_t v15 = a1 + v14;
        uint64_t v16 = (uint64_t)a2 + v14;
        uint64_t v17 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        break;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v18 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
        uint64_t v19 = a1 + v18;
        uint64_t v20 = (uint64_t)a2 + v18;
        uint64_t v21 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        break;
      default:
        uint64_t v4 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v5 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
      break;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
      uint64_t v9 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v13 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
      uint64_t v14 = a1 + v13;
      uint64_t v15 = a2 + v13;
      uint64_t v16 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      break;
    case 4u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v17 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      break;
    default:
      uint64_t v4 = sub_1001EB330();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100159F14(a1, type metadata accessor for PBPropertyValue.OneOf_Params);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v5 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
        uint64_t v6 = a1 + v5;
        uint64_t v7 = a2 + v5;
        uint64_t v8 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
        uint64_t v9 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        uint64_t v10 = a1 + v9;
        uint64_t v11 = a2 + v9;
        uint64_t v12 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v13 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
        uint64_t v14 = a1 + v13;
        uint64_t v15 = a2 + v13;
        uint64_t v16 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        break;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v17 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        uint64_t v20 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        break;
      default:
        uint64_t v4 = sub_1001EB330();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10016A638()
{
  uint64_t result = sub_1001EB330();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PBPropertySingleFloatParam(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PBPropertyBookReadParams(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for PBPropertyMarkedAsFinishedParam(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for PBPropertyBookImpressionParam(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyBundle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001EB330();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for PBPropertyConfiguration(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10007DC14(&qword_100292E48);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v19 = v15[3];
      void v14[2] = v15[2];
      v14[3] = v19;
      uint64_t v14[4] = v15[4];
      uint64_t v20 = *(int *)(v16 + 32);
      uint64_t v21 = (char *)v14 + v20;
      uint64_t v22 = (char *)v15 + v20;
      swift_bridgeObjectRetain();
      v12(v21, v22, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t destroy for PBPropertyBundle(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001EB330();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 32);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *initializeWithCopy for PBPropertyBundle(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001EB330();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10007DC14(&qword_100292E48);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    uint64_t v18 = v14[3];
    void v13[2] = v14[2];
    _OWORD v13[3] = v18;
    v13[4] = v14[4];
    uint64_t v19 = *(int *)(v15 + 32);
    uint64_t v20 = (char *)v13 + v19;
    uint64_t v21 = (char *)v14 + v19;
    swift_bridgeObjectRetain();
    v11(v20, v21, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *assignWithCopy for PBPropertyBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB330();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v24 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      void *v12 = *v13;
      v12[1] = v13[1];
      void v12[2] = v13[2];
      v12[3] = v13[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v12[4] = v13[4];
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v25);
      return a1;
    }
    sub_100159F14((uint64_t)v12, type metadata accessor for PBPropertyConfiguration);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v22 = sub_10007DC14(&qword_100292E48);
    memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  void *v12 = *v13;
  v12[1] = v13[1];
  void v12[2] = v13[2];
  v12[3] = v13[3];
  void v12[4] = v13[4];
  uint64_t v18 = *(int *)(v14 + 32);
  uint64_t v19 = (char *)v12 + v18;
  uint64_t v20 = (char *)v13 + v18;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

_OWORD *initializeWithTake for PBPropertyBundle(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB330();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10007DC14(&qword_100292E48);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    _OWORD *v12 = *v13;
    v12[1] = v17;
    *((void *)v12 + 4) = *((void *)v13 + 4);
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *assignWithTake for PBPropertyBundle(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB330();
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v22 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (uint64_t)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for PBPropertyConfiguration(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16((uint64_t)v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      uint64_t v21 = *((void *)v13 + 3);
      *(void *)(v12 + 16) = *((void *)v13 + 2);
      *(void *)(v12 + 24) = v21;
      swift_bridgeObjectRelease();
      *(void *)(v12 + 32) = *((void *)v13 + 4);
      ((void (*)(uint64_t, char *, uint64_t))v10)(v12 + *(int *)(v14 + 32), &v13[*(int *)(v14 + 32)], v23);
      return a1;
    }
    sub_100159F14(v12, type metadata accessor for PBPropertyConfiguration);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = sub_10007DC14(&qword_100292E48);
    memcpy((void *)v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  long long v18 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v18;
  *(void *)(v12 + 32) = *((void *)v13 + 4);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v12 + *(int *)(v14 + 32), &v13[*(int *)(v14 + 32)], v23);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyBundle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016B2C8);
}

uint64_t sub_10016B2C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001EB330();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10007DC14(&qword_100292E48);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyBundle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10016B40C);
}

void *sub_10016B40C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1001EB330();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10007DC14(&qword_100292E48);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10016B53C()
{
  sub_1001EB330();
  if (v0 <= 0x3F)
  {
    sub_10016981C(319, (unint64_t *)&unk_1002959D0, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyTimeSlice(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001EB330();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1001EB300();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10007DC14(&qword_100292E58);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t destroy for PBPropertyTimeSlice(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001EB330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1001EB300();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for PBPropertyTimeSlice(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB330();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001EB300();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_10007DC14(&qword_100292E58);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *assignWithCopy for PBPropertyTimeSlice(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001EB300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10007DC14(&qword_100292E58);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

void *initializeWithTake for PBPropertyTimeSlice(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001EB300();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10007DC14(&qword_100292E58);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

void *assignWithTake for PBPropertyTimeSlice(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001EB330();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001EB300();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10007DC14(&qword_100292E58);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyTimeSlice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016BFB8);
}

uint64_t sub_10016BFB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001EB330();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10007DC14(&qword_100292E58);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyTimeSlice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10016C0FC);
}

void *sub_10016C0FC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1001EB330();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10007DC14(&qword_100292E58);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10016C22C()
{
  sub_1001EB330();
  if (v0 <= 0x3F)
  {
    sub_10016981C(319, (unint64_t *)&unk_100295880, (void (*)(uint64_t))&type metadata accessor for Google_Protobuf_Timestamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_10016C328(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10007DC14(&qword_100295C68);
    unint64_t v2 = (void *)sub_1001ECEE0();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v12 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v12 >= v27) {
    goto LABEL_32;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v12);
  int64_t v14 = i + 1;
  if (!v13)
  {
    int64_t v14 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v14);
    if (!v13)
    {
      int64_t v14 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v28 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v28 + 8 * v14);
        if (!v13)
        {
          int64_t v15 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v13 = *(void *)(v28 + 8 * v15);
            if (v13)
            {
              int64_t v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v14 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_36;
              }
              if (v14 >= v27) {
                break;
              }
              unint64_t v13 = *(void *)(v28 + 8 * v14);
              ++v15;
              if (v13) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1000B251C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v13 - 1) & v13;
  unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; unint64_t v11 = v10 | (i << 6))
  {
    int v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = *(void **)(*(void *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    id v20 = v19;
    unint64_t result = sub_1001A87A0(v18, v17);
    unint64_t v21 = result;
    if (v22)
    {
      uint64_t v8 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v8 = v18;
      v8[1] = v17;
      uint64_t v9 = v2[7];
      unint64_t result = swift_unknownObjectRelease();
      *(void *)(v9 + 8 * v21) = v20;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v23 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v23 = v18;
    v23[1] = v17;
    *(void *)(v2[7] + 8 * result) = v20;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_10016C5CC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10007DC14(&qword_100294370);
    unint64_t v2 = (void *)sub_1001ECEE0();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v26) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v26) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v26) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v26) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v26)
          {
            unint64_t v12 = *(void *)(v27 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v26) {
                break;
              }
              unint64_t v12 = *(void *)(v27 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1000B251C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    int64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_100170D9C(*(void *)(a1 + 56) + 40 * v10, (uint64_t)&v35);
    uint64_t v33 = v17;
    uint64_t v34 = v16;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v19 = v17;
    uint64_t v18 = v16;
    sub_100125B2C(&v29, v31);
    sub_100125B2C(v31, v32);
    sub_100125B2C(v32, &v30);
    unint64_t result = sub_1001A87A0(v19, v16);
    unint64_t v20 = result;
    if (v21)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v7 = v19;
      v7[1] = v18;
      uint64_t v8 = (_OWORD *)(v2[7] + 32 * v20);
      sub_1000947F0((uint64_t)v8);
      unint64_t result = (unint64_t)sub_100125B2C(&v30, v8);
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v22 = (uint64_t *)(v2[6] + 16 * result);
    *char v22 = v19;
    v22[1] = v18;
    unint64_t result = (unint64_t)sub_100125B2C(&v30, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_34;
    }
    v2[2] = v25;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_10016C91C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10007DC14((uint64_t *)&unk_100296940);
    unint64_t v2 = (void *)sub_1001ECEE0();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v33 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v32 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v8 = (uint64_t *)&unk_100295C40;
  unint64_t v9 = (uint64_t *)&unk_100292708;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v19 >= v32) {
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v33 + 8 * v19);
  int64_t v21 = i + 1;
  if (!v20)
  {
    int64_t v21 = i + 2;
    if (i + 2 >= v32) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v33 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = i + 3;
      if (i + 3 >= v32) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = i + 4;
        if (i + 4 >= v32) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          int64_t v22 = i + 5;
          if (i + 5 < v32)
          {
            unint64_t v20 = *(void *)(v33 + 8 * v22);
            if (v20)
            {
              int64_t v21 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v32) {
                break;
              }
              unint64_t v20 = *(void *)(v33 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_1000B251C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v20 - 1) & v20;
  unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
  for (i = v21; ; unint64_t v18 = v17 | (i << 6))
  {
    uint64_t v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v18);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_10007DC14(v8);
    sub_10007DC14(v9);
    swift_dynamicCast();
    unint64_t result = sub_1001A87A0(v25, v24);
    unint64_t v26 = result;
    if (v27)
    {
      unint64_t v10 = v5;
      uint64_t v11 = v1;
      int64_t v12 = i;
      int64_t v13 = v9;
      int64_t v14 = v8;
      int64_t v15 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v15 = v25;
      v15[1] = v24;
      uint64_t v8 = v14;
      unint64_t v9 = v13;
      int64_t i = v12;
      uint64_t v1 = v11;
      unint64_t v5 = v10;
      uint64_t v16 = v2[7];
      unint64_t result = swift_unknownObjectRelease();
      *(void *)(v16 + 8 * v26) = v34;
      if (!v10) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v28 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v28 = v25;
    v28[1] = v24;
    *(void *)(v2[7] + 8 * result) = v34;
    uint64_t v29 = v2[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_34;
    }
    v2[2] = v31;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v17 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t ReadingGoalsDataStore.__allocating_init(localStore:syncStore:)(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  ReadingGoalsDataStore.init(localStore:syncStore:)(a1, a2);
  return v4;
}

Swift::Void __swiftcall ReadingGoalsDataStore.migrate(bookFinishedGoalDict:streakDayGoalDict:)(Swift::OpaquePointer_optional bookFinishedGoalDict, Swift::OpaquePointer_optional streakDayGoalDict)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)&bookFinishedGoalDict.is_nil;
  rawValue = bookFinishedGoalDict.value._rawValue;
  uint64_t v6 = v2 + 2;
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  sub_100094758(v2 + 2, v7);
  uint64_t v9 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 8))(0xD00000000000001ALL, 0x8000000100226BC0, v7, v8);
  swift_bridgeObjectRelease();
  if (v9) {
    BOOL v10 = 1;
  }
  else {
    BOOL v10 = rawValue == 0;
  }
  int v11 = !v10;
  int v29 = v11;
  if (!v10)
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    int64_t v12 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100215310;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_10007DC58();
    *(void *)(v13 + 32) = 0xD00000000000001ALL;
    *(void *)(v13 + 40) = 0x8000000100226BC0;
    *(void *)(v13 + 96) = sub_10007DC14(&qword_100295B40);
    *(void *)(v13 + 104) = sub_100170ACC();
    *(void *)(v13 + 72) = rawValue;
    id v14 = v12;
    swift_bridgeObjectRetain();
    sub_1001EB530();

    swift_bridgeObjectRelease();
    uint64_t v15 = v3[5];
    uint64_t v16 = v3[6];
    sub_100094758(v6, v15);
    (*(void (**)(void *, unint64_t, unint64_t, uint64_t, uint64_t))(v16 + 16))(rawValue, 0xD00000000000001ALL, 0x8000000100226BC0, v15, v16);
  }
  uint64_t v17 = v3[5];
  uint64_t v18 = v3[6];
  sub_100094758(v6, v17);
  uint64_t v19 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v18 + 8))(0xD000000000000016, 0x8000000100226BE0, v17, v18);
  swift_bridgeObjectRelease();
  if (v19) {
    BOOL v20 = 1;
  }
  else {
    BOOL v20 = v4 == 0;
  }
  if (v20)
  {
    if (!v29) {
      return;
    }
  }
  else
  {
    sub_1001EC910();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    int64_t v21 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100215310;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_10007DC58();
    *(void *)(v22 + 32) = 0xD000000000000016;
    *(void *)(v22 + 40) = 0x8000000100226BE0;
    *(void *)(v22 + 96) = sub_10007DC14(&qword_100295B40);
    *(void *)(v22 + 104) = sub_100170ACC();
    *(void *)(v22 + 72) = v4;
    id v23 = v21;
    swift_bridgeObjectRetain();
    sub_1001EB530();

    swift_bridgeObjectRelease();
    uint64_t v24 = v3[5];
    uint64_t v25 = v3[6];
    sub_100094758(v6, v24);
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v25 + 16))(v4, 0xD000000000000016, 0x8000000100226BE0, v24, v25);
  }
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  id v26 = (id)qword_100293A68;
  sub_1001EB530();

  swift_beginAccess();
  char v27 = (void (*)(uint64_t))v3[12];
  if (v27)
  {
    uint64_t v28 = swift_retain();
    v27(v28);
    sub_1000B0100((uint64_t)v27);
  }
}

uint64_t sub_10016D0C4(uint64_t a1)
{
  uint64_t result = sub_1001EC770();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    int v11 = (Swift::Int *)(*(void *)(a1 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100197DF4(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

const char *ReadingGoalsDataStore.Constants.GoalDictKey.value.unsafeMutableAddressor()
{
  return "goal";
}

uint64_t static ReadingGoalsDataStore.Constants.GoalDictKey.value.getter()
{
  return 1818324839;
}

const char *ReadingGoalsDataStore.Constants.GoalDictKey.date.unsafeMutableAddressor()
{
  return "date";
}

uint64_t static ReadingGoalsDataStore.Constants.GoalDictKey.date.getter()
{
  return 1702125924;
}

uint64_t ReadingGoalsDataStore.onRemoteChange.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  sub_100170B28(v1);
  return v1;
}

uint64_t ReadingGoalsDataStore.onRemoteChange.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 96);
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return sub_1000B0100(v5);
}

uint64_t (*ReadingGoalsDataStore.onRemoteChange.modify())()
{
  return j__swift_endAccess;
}

uint64_t ReadingGoalsDataStore.init(localStore:syncStore:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  sub_1000AF9BC((uint64_t)a1, v2 + 16);
  sub_1000AF9BC((uint64_t)a2, v2 + 56);
  sub_100094758(a2, a2[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v7 = a2[4];
  id v8 = [self defaultCenter];
  unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  unint64_t v10 = (void *)v9(DynamicType, v7);
  uint64_t v11 = a2[3];
  Swift::Int v12 = sub_100094758(a2, v11);
  uint64_t v13 = *(void *)(v11 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  uint64_t v16 = sub_1001ED070();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  [v8 addObserver:v3 selector:"handleCloudChangeNotification:" name:v10 object:v16];

  uint64_t v36 = v3;
  swift_release();

  swift_unknownObjectRelease();
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[4];
  sub_100094758(a2, v17);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18))
  {
    char v19 = 0;
    uint64_t v20 = 0;
    unint64_t v39 = 0x8000000100226BC0;
    unint64_t v37 = 0x8000000100226BE0;
    long long v38 = xmmword_100215310;
    do
    {
      char v22 = v19;
      int v23 = *((unsigned __int8 *)&off_1002622C8 + v20 + 32);
      uint64_t v25 = a2[3];
      uint64_t v24 = a2[4];
      sub_100094758(a2, v25);
      if (v23) {
        unint64_t v26 = 0xD000000000000016;
      }
      else {
        unint64_t v26 = 0xD00000000000001ALL;
      }
      if (v23) {
        unint64_t v27 = v37;
      }
      else {
        unint64_t v27 = v39;
      }
      uint64_t v28 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t))(*(void *)(v24 + 8) + 8))(v26, v27, v25);
      swift_bridgeObjectRelease();
      uint64_t v30 = a1[3];
      uint64_t v29 = a1[4];
      sub_100094758(a1, v30);
      (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v26, v27, v30, v29);
      swift_bridgeObjectRelease();
      sub_1001EC910();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      uint64_t v31 = (void *)qword_100293A68;
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v38;
      *(void *)(v32 + 56) = &type metadata for String;
      unint64_t v33 = sub_10007DC58();
      *(void *)(v32 + 64) = v33;
      *(void *)(v32 + 32) = v26;
      *(void *)(v32 + 40) = v27;
      if (v28)
      {
        uint64_t v41 = sub_10007DC14(&qword_100295B40);
        unint64_t v42 = sub_100170ACC();
        *(void *)&long long v40 = v28;
        sub_10010080C(&v40, v32 + 72);
      }
      else
      {
        *(void *)(v32 + 96) = &type metadata for String;
        *(void *)(v32 + 104) = v33;
        *(void *)(v32 + 72) = 7104878;
        *(void *)(v32 + 80) = 0xE300000000000000;
      }
      id v21 = v31;
      sub_1001EB530();

      swift_bridgeObjectRelease();
      char v19 = 1;
      uint64_t v20 = &_mh_execute_header.magic + 1;
    }
    while ((v22 & 1) == 0);
  }
  else
  {
    sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v34 = (id)qword_100293A68;
    sub_1001EB530();
  }
  sub_1000947F0((uint64_t)a1);
  sub_1000947F0((uint64_t)a2);
  return v36;
}

void sub_10016D838()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001EAC90();
  if (!v2) {
    goto LABEL_16;
  }
  uint64_t v3 = v2;
  unint64_t v34 = sub_1001EC370();
  sub_1001ECCD0();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1001A8680((uint64_t)v36), (v5 & 1) != 0))
  {
    sub_100087AE8(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v37);
  }
  else
  {
    long long v37 = 0u;
    long long v38 = 0u;
  }
  sub_100087A68((uint64_t)v36);
  if (!*((void *)&v38 + 1))
  {
    swift_bridgeObjectRelease();
    sub_1000816A4((uint64_t)&v37, &qword_100295B50);
LABEL_16:
    sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    id v11 = (id)qword_100293A68;
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1001EC910();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100215320;
  *(void *)(v7 + 56) = &type metadata for Int;
  *(void *)(v7 + 64) = &protocol witness table for Int;
  *(void *)(v7 + 32) = v34;
  id v8 = v6;
  sub_1001EB530();

  swift_bridgeObjectRelease();
  if (v34 <= 1)
  {
    uint64_t v35 = sub_1001EC370();
    sub_1001ECCD0();
    if (*(void *)(v3 + 16) && (unint64_t v9 = sub_1001A8680((uint64_t)v36), (v10 & 1) != 0))
    {
      sub_100087AE8(*(void *)(v3 + 56) + 32 * v9, (uint64_t)&v37);
    }
    else
    {
      long long v37 = 0u;
      long long v38 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_100087A68((uint64_t)v36);
    if (*((void *)&v38 + 1))
    {
      sub_10007DC14(&qword_100292710);
      if (swift_dynamicCast())
      {
        v36[0] = _swiftEmptyArrayStorage;
        sub_1000CF7D0(0, 2, 0);
        uint64_t v12 = v36[0];
        unint64_t v13 = *(void *)(v36[0] + 16);
        unint64_t v14 = *(void *)(v36[0] + 24);
        unint64_t v15 = v14 >> 1;
        unint64_t v16 = v13 + 1;
        if (v14 >> 1 <= v13)
        {
          unint64_t v31 = v13 + 1;
          unint64_t v33 = *(void *)(v36[0] + 16);
          sub_1000CF7D0(v14 > 1, v13 + 1, 1);
          unint64_t v13 = v33;
          unint64_t v16 = v31;
          uint64_t v12 = v36[0];
          unint64_t v14 = *(void *)(v36[0] + 24);
          unint64_t v15 = v14 >> 1;
        }
        *(void *)(v12 + 16) = v16;
        uint64_t v17 = v12 + 16 * v13;
        *(void *)(v17 + 32) = 0xD00000000000001ALL;
        *(void *)(v17 + 40) = 0x8000000100226BC0;
        unint64_t v18 = v13 + 2;
        if (v15 <= v16)
        {
          unint64_t v32 = v16;
          sub_1000CF7D0(v14 > 1, v13 + 2, 1);
          unint64_t v16 = v32;
          uint64_t v12 = v36[0];
        }
        *(void *)(v12 + 16) = v18;
        uint64_t v19 = v12 + 16 * v16;
        *(void *)(v19 + 32) = 0xD000000000000016;
        *(void *)(v19 + 40) = 0x8000000100226BE0;
        uint64_t v20 = sub_100170C18(v12);
        swift_release();
        uint64_t v21 = sub_100170C18(v35);
        swift_bridgeObjectRelease();
        uint64_t v22 = sub_100170130(v21, v20);
        swift_bridgeObjectRelease();
        LOBYTE(v37) = 0;
        swift_retain();
        sub_1001707F8(v22, v1, &v37);
        swift_release();
        swift_release();
        if (v37)
        {
          swift_beginAccess();
          int v23 = (void (*)(uint64_t))v1[12];
          if (v23)
          {
            uint64_t v24 = swift_retain();
            v23(v24);
            sub_1000B0100((uint64_t)v23);
          }
        }
        return;
      }
    }
    else
    {
      sub_1000816A4((uint64_t)&v37, &qword_100295B50);
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (v34 == 3)
  {
    sub_1001EC8E0();
    id v25 = (id)qword_100293A68;
    sub_1001EB530();

    unint64_t v26 = v1 + 2;
    uint64_t v27 = v1[5];
    uint64_t v28 = v1[6];
    sub_100094758(v1 + 2, v27);
    (*(void (**)(void, unint64_t, unint64_t, uint64_t, uint64_t))(v28 + 16))(0, 0xD00000000000001ALL, 0x8000000100226BC0, v27, v28);
    swift_bridgeObjectRelease();
    uint64_t v30 = v1[5];
    uint64_t v29 = v1[6];
    sub_100094758(v26, v30);
    (*(void (**)(void, unint64_t, unint64_t, uint64_t, uint64_t))(v29 + 16))(0, 0xD000000000000016, 0x8000000100226BE0, v30, v29);
    swift_bridgeObjectRelease();
    return;
  }
  if (v34 == 2)
  {
LABEL_23:
    sub_1001EC8F0();
    id v11 = (id)qword_100293A68;
LABEL_19:
    sub_1001EB530();
  }
}

uint64_t sub_10016DEC4(uint64_t *a1, void *a2, unsigned char *a3)
{
  uint64_t v80 = a3;
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_1002924C0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v75 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v65 - v8;
  uint64_t v10 = sub_1001EB0C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  uint64_t v79 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v73 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v76 = (char *)&v65 - v14;
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a2 + 2;
  uint64_t v18 = a2[5];
  uint64_t v19 = a2[6];
  sub_100094758(a2 + 2, v18);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(v15, v16, v18, v19);
  uint64_t v21 = a2[10];
  uint64_t v22 = a2[11];
  uint64_t v74 = a2 + 7;
  sub_100094758(a2 + 7, v21);
  uint64_t v23 = *(void *)(v22 + 8);
  uint64_t v24 = v15;
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 8))(v15, v16, v21);
  uint64_t v26 = v25;
  if (!v20)
  {
    uint64_t v46 = a2[5];
    uint64_t v45 = a2[6];
    sub_100094758(v17, v46);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 16))(v26, v15, v16, v46, v45);
    uint64_t result = swift_bridgeObjectRelease();
    unsigned char *v80 = 1;
    return result;
  }
  uint64_t v77 = a2 + 2;
  uint64_t v27 = v80;
  if (!v25)
  {
    swift_bridgeObjectRelease();
    uint64_t v53 = a2[5];
    uint64_t v54 = a2[6];
    sub_100094758(v77, v53);
    uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 16))(0, v24, v16, v53, v54);
LABEL_17:
    *uint64_t v27 = 1;
    return result;
  }
  uint64_t v28 = v16;
  uint64_t v72 = v24;
  if (!*(void *)(v20 + 16) || (uint64_t v29 = v80, v30 = sub_1001A87A0(1702125924, 0xE400000000000000), (v31 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v9, 1, 1, v78);
    goto LABEL_13;
  }
  sub_100087AE8(*(void *)(v20 + 56) + 32 * v30, (uint64_t)v81);
  uint64_t v32 = v78;
  int v33 = swift_dynamicCast();
  uint64_t v34 = v79;
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56);
  uint64_t v71 = v79 + 56;
  v70(v9, v33 ^ 1u, 1, v32);
  uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  uint64_t v69 = v34 + 48;
  if (v68(v9, 1, v32) == 1)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_1000816A4((uint64_t)v9, (uint64_t *)&unk_1002924C0);
    sub_1001EC8F0();
    if (qword_1002910E8 != -1) {
      swift_once();
    }
    uint64_t v47 = (void *)qword_100293A68;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_100215320;
    *(void *)(v48 + 56) = &type metadata for String;
    *(void *)(v48 + 64) = sub_10007DC58();
    uint64_t v49 = v72;
    *(void *)(v48 + 32) = v72;
    *(void *)(v48 + 40) = v28;
    swift_bridgeObjectRetain();
    id v50 = v47;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    uint64_t v52 = a2[5];
    uint64_t v51 = a2[6];
    sub_100094758(v77, v52);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 16))(v26, v49, v28, v52, v51);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v35 = v76;
  unint64_t v66 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  uint64_t v67 = v34 + 32;
  v66(v76, v9, v32);
  if (*(void *)(v26 + 16) && (unint64_t v36 = sub_1001A87A0(1702125924, 0xE400000000000000), (v37 & 1) != 0))
  {
    sub_100087AE8(*(void *)(v26 + 56) + 32 * v36, (uint64_t)v81);
    uint64_t v38 = (uint64_t)v75;
    int v39 = swift_dynamicCast();
    v70((char *)v38, v39 ^ 1u, 1, v32);
    if (v68((char *)v38, 1, v32) != 1)
    {
      long long v40 = v73;
      v66(v73, (char *)v38, v32);
      if (sub_1001EB070())
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = a2[10];
        uint64_t v42 = a2[11];
        sub_100094758(v74, v41);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 + 8) + 16))(v20, v72, v28, v41);
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void (**)(char *, uint64_t))(v79 + 8);
        v43(v40, v32);
        return ((uint64_t (*)(char *, uint64_t))v43)(v35, v32);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v61 = v40;
        uint64_t v63 = a2[5];
        uint64_t v62 = a2[6];
        sub_100094758(v77, v63);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 16))(v26, v72, v28, v63, v62);
        swift_bridgeObjectRelease();
        int64_t v64 = *(void (**)(char *, uint64_t))(v79 + 8);
        v64(v61, v32);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v64)(v35, v32);
        unsigned char *v29 = 1;
      }
      return result;
    }
  }
  else
  {
    uint64_t v38 = (uint64_t)v75;
    v70(v75, 1, 1, v32);
  }
  swift_bridgeObjectRelease();
  sub_1000816A4(v38, (uint64_t *)&unk_1002924C0);
  sub_1001EC8F0();
  if (qword_1002910E8 != -1) {
    swift_once();
  }
  uint64_t v55 = (void *)qword_100293A68;
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_100215320;
  *(void *)(v56 + 56) = &type metadata for String;
  *(void *)(v56 + 64) = sub_10007DC58();
  uint64_t v57 = v72;
  *(void *)(v56 + 32) = v72;
  *(void *)(v56 + 40) = v28;
  id v58 = v55;
  swift_bridgeObjectRetain();
  sub_1001EB530();

  swift_bridgeObjectRelease();
  uint64_t v59 = a2[10];
  uint64_t v60 = a2[11];
  sub_100094758(v74, v59);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 + 8) + 16))(v20, v57, v28, v59);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v76, v78);
}

uint64_t ReadingGoalsDataStore.deinit()
{
  sub_1000947F0(v0 + 16);
  sub_1000947F0(v0 + 56);
  sub_1000B0100(*(void *)(v0 + 96));
  return v0;
}

uint64_t ReadingGoalsDataStore.__deallocating_deinit()
{
  sub_1000947F0(v0 + 16);
  sub_1000947F0(v0 + 56);
  sub_1000B0100(*(void *)(v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t sub_10016E81C(char a1)
{
  return sub_10016E834(a1);
}

uint64_t sub_10016E828(char a1)
{
  return sub_10016E834(a1);
}

uint64_t sub_10016E834(char a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  sub_100094758(v1 + 2, v3);
  if (a1) {
    unint64_t v5 = 0xD000000000000016;
  }
  else {
    unint64_t v5 = 0xD00000000000001ALL;
  }
  if (a1) {
    unint64_t v6 = 0x8000000100226BE0;
  }
  else {
    unint64_t v6 = 0x8000000100226BC0;
  }
  uint64_t v7 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 8))(v5, v6, v3, v4);
  swift_bridgeObjectRelease();
  if (v7)
  {
    if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1001A87A0(1818324839, 0xE400000000000000), (v9 & 1) != 0))
    {
      sub_100087AE8(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v13);
    }
    else
    {
      long long v13 = 0u;
      long long v14 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  sub_10007DC14(&qword_100295B50);
  int v10 = swift_dynamicCast();
  uint64_t v11 = v15;
  if (!v10) {
    return 0;
  }
  return v11;
}

uint64_t ReadingGoalsDataStore.value<A>(for:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = v3[5];
  uint64_t v8 = v3[6];
  sub_100094758(v3 + 2, v7);
  if (a1) {
    unint64_t v9 = 0xD000000000000016;
  }
  else {
    unint64_t v9 = 0xD00000000000001ALL;
  }
  if (a1) {
    unint64_t v10 = 0x8000000100226BE0;
  }
  else {
    unint64_t v10 = 0x8000000100226BC0;
  }
  uint64_t v11 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 8))(v9, v10, v7, v8);
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (*(void *)(v11 + 16) && (unint64_t v12 = sub_1001A87A0(1818324839, 0xE400000000000000), (v13 & 1) != 0))
    {
      sub_100087AE8(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v16);
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_10007DC14(&qword_100295B50);
  int v14 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v14 ^ 1u, 1, a2);
}

uint64_t sub_10016EAD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1001EB0C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)v24 - v11;
  sub_10007DC14(&qword_100295B58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215310;
  *(void *)(inited + 32) = 1818324839;
  *(void *)(inited + 40) = 0xE400000000000000;
  v24[1] = a1;
  sub_1001ECCD0();
  *(void *)(inited + 88) = 1702125924;
  *(void *)(inited + 96) = 0xE400000000000000;
  sub_1001EB0B0();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  sub_100152DD4();
  sub_1001ECCD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  unint64_t v14 = sub_100121354(inited);
  uint64_t v15 = v3[5];
  uint64_t v16 = v3[6];
  sub_100094758(v3 + 2, v15);
  unint64_t v17 = sub_10016C5CC(v14);
  if (a2) {
    unint64_t v18 = 0xD000000000000016;
  }
  else {
    unint64_t v18 = 0xD00000000000001ALL;
  }
  if (a2) {
    unint64_t v19 = 0x8000000100226BE0;
  }
  else {
    unint64_t v19 = 0x8000000100226BC0;
  }
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v18, v19, v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v3[10];
  uint64_t v21 = v3[11];
  sub_100094758(v3 + 7, v20);
  unint64_t v22 = sub_10016C5CC(v14);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t))(*(void *)(v21 + 8) + 16))(v22, v18, v19, v20);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10016ED74(char a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1001EB0C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)v24 - v11;
  sub_10007DC14(&qword_100295B58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215310;
  *(void *)(inited + 32) = 1818324839;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(double *)&v24[1] = a2;
  sub_1001ECCD0();
  *(void *)(inited + 88) = 1702125924;
  *(void *)(inited + 96) = 0xE400000000000000;
  sub_1001EB0B0();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  sub_100152DD4();
  sub_1001ECCD0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  unint64_t v14 = sub_100121354(inited);
  uint64_t v15 = v3[5];
  uint64_t v16 = v3[6];
  sub_100094758(v3 + 2, v15);
  unint64_t v17 = sub_10016C5CC(v14);
  if (a1) {
    unint64_t v18 = 0xD000000000000016;
  }
  else {
    unint64_t v18 = 0xD00000000000001ALL;
  }
  if (a1) {
    unint64_t v19 = 0x8000000100226BE0;
  }
  else {
    unint64_t v19 = 0x8000000100226BC0;
  }
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v18, v19, v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v3[10];
  uint64_t v21 = v3[11];
  sub_100094758(v3 + 7, v20);
  unint64_t v22 = sub_10016C5CC(v14);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t))(*(void *)(v21 + 8) + 16))(v22, v18, v19, v20);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ReadingGoalsDataStore.set<A>(value:forGoal:)(uint64_t a1, int a2)
{
  int v22 = a2;
  uint64_t v3 = sub_1001EB0C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8];
  sub_10007DC14(&qword_100295B58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100215310;
  *(void *)(inited + 32) = 1818324839;
  *(void *)(inited + 40) = 0xE400000000000000;
  sub_1001ECF10();
  *(void *)(inited + 88) = 1702125924;
  *(void *)(inited + 96) = 0xE400000000000000;
  sub_1001EB0B0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_100152DD4();
  sub_1001ECCD0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  unint64_t v11 = sub_100121354(inited);
  uint64_t v12 = v2[5];
  uint64_t v13 = v2[6];
  sub_100094758(v2 + 2, v12);
  unint64_t v14 = sub_10016C5CC(v11);
  if (v22) {
    unint64_t v15 = 0xD000000000000016;
  }
  else {
    unint64_t v15 = 0xD00000000000001ALL;
  }
  if (v22) {
    unint64_t v16 = 0x8000000100226BE0;
  }
  else {
    unint64_t v16 = 0x8000000100226BC0;
  }
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v15, v16, v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v2[10];
  uint64_t v18 = v2[11];
  sub_100094758(v2 + 7, v17);
  unint64_t v19 = sub_10016C5CC(v11);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t))(*(void *)(v18 + 8) + 16))(v19, v15, v16, v17);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall ReadingGoalsDataStore.clearData()()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_100094758(v0 + 2, v1);
  (*(void (**)(void, unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 16))(0, 0xD00000000000001ALL, 0x8000000100226BC0, v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  sub_100094758(v0 + 7, v3);
  (*(void (**)(void, unint64_t, unint64_t, uint64_t))(*(void *)(v4 + 8) + 16))(0, 0xD00000000000001ALL, 0x8000000100226BC0, v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  sub_100094758(v0 + 2, v5);
  (*(void (**)(void, unint64_t, unint64_t, uint64_t, uint64_t))(v6 + 16))(0, 0xD000000000000016, 0x8000000100226BE0, v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v0[10];
  uint64_t v7 = v0[11];
  sub_100094758(v0 + 7, v8);
  (*(void (**)(void, unint64_t, unint64_t, uint64_t))(*(void *)(v7 + 8) + 16))(0, 0xD000000000000016, 0x8000000100226BE0, v8);
  swift_bridgeObjectRelease();
}

uint64_t ReadingGoalsDataStore.state.getter()
{
  uint64_t v0 = sub_10016E834(0);
  if (v1) {
    uint64_t v2 = 3;
  }
  else {
    uint64_t v2 = v0;
  }
  sub_10016E834(1);
  return v2;
}

Swift::Void __swiftcall ReadingGoalsDataStore.changeBooksFinishedGoal(to:)(Swift::Int to)
{
}

Swift::Void __swiftcall ReadingGoalsDataStore.changeDailyGoal(to:)(Swift::Double to)
{
}

uint64_t sub_10016F500()
{
  uint64_t v0 = sub_10016E834(0);
  if (v1) {
    uint64_t v2 = 3;
  }
  else {
    uint64_t v2 = v0;
  }
  sub_10016E834(1);
  return v2;
}

uint64_t sub_10016F568()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 96);
  sub_100170B28(v2);
  return v2;
}

uint64_t sub_10016F5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 96);
  *(void *)(v5 + 96) = a1;
  *(void *)(v5 + 104) = a2;
  return sub_1000B0100(v6);
}

uint64_t (*sub_10016F614())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10016F66C(uint64_t a1)
{
  return sub_10016EAD4(a1, 0);
}

uint64_t sub_10016F694(double a1)
{
  return sub_10016ED74(1, a1);
}

void sub_10016F6BC()
{
}

uint64_t sub_10016F6E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10007DC14(&qword_100295C60);
  uint64_t result = sub_1001ECD10();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (Swift::UInt *)(*(void *)(v4 + 48) + 16 * v13);
    Swift::UInt v18 = *v17;
    Swift::UInt v19 = v17[1];
    sub_1001ED170();
    sub_1001ED180(v18);
    sub_1001ED180(v19);
    uint64_t result = sub_1001ED1A0();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (Swift::UInt *)(*((void *)v8 + 6) + 16 * v23);
    Swift::UInt *v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10016F978(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10007DC14(&qword_100296720);
  uint64_t result = sub_1001ECD10();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v31) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v31) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v31) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v4 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    Swift::UInt8 v20 = *(unsigned char *)(v17 + 16);
    sub_1001ED170();
    swift_bridgeObjectRetain_n();
    sub_1001EC440();
    swift_bridgeObjectRelease();
    sub_1001ED190(v20);
    uint64_t result = sub_1001ED1A0();
    uint64_t v21 = -1 << v8[32];
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = *((void *)v8 + 6) + 24 * v24;
    *(void *)uint64_t v29 = v18;
    *(void *)(v29 + 8) = v19;
    *(unsigned char *)(v29 + 16) = v20;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v31) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10016FC38(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10007DC14(&qword_100295C18);
  uint64_t result = sub_1001ECD10();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1001ED170();
    swift_bridgeObjectRetain();
    sub_1001EC440();
    uint64_t result = sub_1001ED1A0();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10016FED0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10007DC14((uint64_t *)&unk_100295C50);
  uint64_t result = sub_1001ECD10();
  unint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1001ECAF0(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100170130(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1001702B8((uint64_t)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1001702B8((uint64_t)v8, v5, a2, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_1001702B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_1001ED170();
        swift_bridgeObjectRetain();
        sub_1001EC440();
        Swift::Int v20 = sub_1001ED1A0();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      BOOL v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1001ED080() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          uint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1001ED080() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_1001ED170();
    swift_bridgeObjectRetain();
    sub_1001EC440();
    Swift::Int v47 = sub_1001ED1A0();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1001ED080() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_10016FC38(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1001ED080() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1001707F8(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v7 = a1 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a1 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain();
    sub_10016DEC4(v22, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17)
    {
      int64_t v18 = v13 + 1;
      if (v13 + 1 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 3;
      if (v13 + 3 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v18);
      if (v17)
      {
LABEL_14:
        int64_t v13 = v18;
        goto LABEL_15;
      }
      int64_t v21 = v13 + 4;
      if (v13 + 4 >= v11) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v7 + 8 * v21);
      v13 += 4;
      if (!v17) {
        break;
      }
    }
LABEL_15:
    unint64_t v10 = (v17 - 1) & v17;
  }
  while (1)
  {
    int64_t v13 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v13 >= v11) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v21;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t _s14bookdatastored21ReadingGoalsDataStoreC011clearCachedD02inyAA0b4GoaldE8Protocol_p_tFZ_0(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_100094758(a1, v2);
  (*(void (**)(void, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16))(0, 0xD00000000000001ALL, 0x8000000100226BC0, v2, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_100094758(a1, v4);
  (*(void (**)(void, unint64_t, unint64_t, uint64_t, uint64_t))(v5 + 16))(0, 0xD000000000000016, 0x8000000100226BE0, v4, v5);
  return swift_bridgeObjectRelease();
}

unint64_t sub_100170ACC()
{
  unint64_t result = qword_100295B48;
  if (!qword_100295B48)
  {
    sub_10008155C(&qword_100295B40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100295B48);
  }
  return result;
}

uint64_t sub_100170B28(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t type metadata accessor for ReadingGoalsDataStore()
{
  return self;
}

ValueMetadata *type metadata accessor for ReadingGoalsDataStore.Constants()
{
  return &type metadata for ReadingGoalsDataStore.Constants;
}

ValueMetadata *type metadata accessor for ReadingGoalsDataStore.Constants.GoalDictKey()
{
  return &type metadata for ReadingGoalsDataStore.Constants.GoalDictKey;
}

uint64_t sub_100170B7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100112224();
  uint64_t result = sub_1001EC770();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      Swift::Int v5 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      int v7 = *v4;
      v4 += 24;
      swift_bridgeObjectRetain();
      sub_100197C08((uint64_t)&v8, v5, v6, v7);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_100170C18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1001EC770();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100197DF4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100170CB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100170D48();
  uint64_t result = sub_1001EC770();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100197FA4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_100170D48()
{
  unint64_t result = qword_100295C30;
  if (!qword_100295C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100295C30);
  }
  return result;
}

uint64_t sub_100170D9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100170DF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ReadingHistoryModel(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v5 - 8);
  Swift::Int v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000936F8(v1, (uint64_t)v7, (uint64_t *)&unk_100291BA0);
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 2, v8);
  if (v9)
  {
    if (v9 == 1) {
      return 0x6C61636F6CLL;
    }
    else {
      return 0x6465726F7473;
    }
  }
  else
  {
    sub_100175250((uint64_t)v7, (uint64_t)v4, type metadata accessor for ReadingHistoryModel);
    v12[0] = 0x2865746F6D6572;
    v12[1] = 0xE700000000000000;
    v13._countAndFlagsBits = ReadingHistoryModel.description.getter();
    sub_1001EC490(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 41;
    v14._object = (void *)0xE100000000000000;
    sub_1001EC490(v14);
    uint64_t v10 = v12[0];
    sub_100171E84((uint64_t)v4, type metadata accessor for ReadingHistoryModel);
  }
  return v10;
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.init(readingDay:longestStreak:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = a5 + *(int *)(type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0) + 20);
  uint64_t v11 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  return sub_1000AF3B4(a4, v10, &qword_100291C78);
}

uint64_t type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(uint64_t a1)
{
  return sub_1000AC710(a1, qword_100295D80);
}

uint64_t ReadingHistory.ModelSnapshot.init(loaded:lastSource:modelValues:remoteModelValues:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  char v9 = a1 & 1;
  uint64_t v10 = (int *)type metadata accessor for ReadingHistory.ModelSnapshot(0);
  uint64_t v11 = (uint64_t)&a5[v10[7]];
  uint64_t v12 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *a5 = v9;
  sub_100171198(a2, (uint64_t)&a5[v10[5]]);
  sub_100175250(a3, (uint64_t)&a5[v10[6]], type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  return sub_1000AF3B4(a4, v11, (uint64_t *)&unk_100291C90);
}

uint64_t type metadata accessor for ReadingHistory.ModelSnapshot(uint64_t a1)
{
  return sub_1000AC710(a1, (uint64_t *)&unk_100295CC8);
}

uint64_t sub_100171198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.readingDay.getter()
{
  return *(void *)v0;
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.readingDay.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(unsigned char *)(v3 + 16) = a3;
  return result;
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.longestStreak.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001714C4(type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues, &qword_100291C78, a1);
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.longestStreak.setter(uint64_t a1)
{
  return sub_100171534(a1, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues, &qword_100291C78);
}

uint64_t (*ReadingHistory.ModelSnapshot.ModelValues.longestStreak.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.description.getter()
{
  uint64_t v1 = sub_10007DC14(&qword_100291C78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100215310;
  int v5 = *(unsigned __int8 *)(v0 + 16);
  if (v5 == 2)
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
  }
  else
  {
    uint64_t v6 = ReadingHistory.Day.description.getter(*(void *)v0, *(void *)(v0 + 8), v5 & 1);
    unint64_t v7 = v8;
  }
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v9 = sub_10007DC58();
  *(void *)(v4 + 64) = v9;
  if (v7) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = 7104878;
  }
  unint64_t v11 = 0xE300000000000000;
  if (v7) {
    unint64_t v11 = v7;
  }
  *(void *)(v4 + 32) = v10;
  *(void *)(v4 + 4sub_10016EAD4(to, 0) = v11;
  uint64_t v12 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  sub_1000936F8(v0 + *(int *)(v12 + 20), (uint64_t)v3, &qword_100291C78);
  uint64_t v13 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v3, 1, v13) == 1)
  {
    sub_1000816A4((uint64_t)v3, &qword_100291C78);
    Swift::String v14 = (uint64_t *)(v4 + 72);
    *(void *)(v4 + 96) = &type metadata for String;
    *(void *)(v4 + 104) = v9;
LABEL_13:
    *Swift::String v14 = 7104878;
    unint64_t v17 = 0xE300000000000000;
    goto LABEL_14;
  }
  uint64_t v15 = ReadingHistory.Streak.description.getter();
  unint64_t v17 = v16;
  sub_100171E84((uint64_t)v3, type metadata accessor for ReadingHistory.Streak);
  Swift::String v14 = (uint64_t *)(v4 + 72);
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v9;
  if (!v17) {
    goto LABEL_13;
  }
  *Swift::String v14 = v15;
LABEL_14:
  *(void *)(v4 + 8sub_10016EAD4(to, 0) = v17;
  return sub_1001EC3A0();
}

uint64_t ReadingHistory.ModelSnapshot.loaded.setter(uint64_t result)
{
  *uint64_t v1 = result & 1;
  return result;
}

uint64_t ReadingHistory.ModelSnapshot.lastSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001714C4(type metadata accessor for ReadingHistory.ModelSnapshot, (uint64_t *)&unk_100291BA0, a1);
}

uint64_t sub_1001714C4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1(0);
  return sub_1000936F8(v3 + *(int *)(v6 + 20), a3, a2);
}

uint64_t ReadingHistory.ModelSnapshot.lastSource.setter(uint64_t a1)
{
  return sub_100171534(a1, type metadata accessor for ReadingHistory.ModelSnapshot, (uint64_t *)&unk_100291BA0);
}

uint64_t sub_100171534(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v6 = a2(0);
  return sub_1000AF3B4(a1, v3 + *(int *)(v6 + 20), a3);
}

uint64_t (*ReadingHistory.ModelSnapshot.lastSource.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.ModelSnapshot.modelValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.ModelSnapshot(0) + 24);
  return sub_100171DBC(v3, a1);
}

uint64_t ReadingHistory.ModelSnapshot.modelValues.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.ModelSnapshot(0) + 24);
  return sub_100171E20(a1, v3);
}

uint64_t (*ReadingHistory.ModelSnapshot.modelValues.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.ModelSnapshot.remoteModelValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  return sub_1000936F8(v1 + *(int *)(v3 + 28), a1, (uint64_t *)&unk_100291C90);
}

uint64_t ReadingHistory.ModelSnapshot.remoteModelValues.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  return sub_1000AF3B4(a1, v1 + *(int *)(v3 + 28), (uint64_t *)&unk_100291C90);
}

uint64_t (*ReadingHistory.ModelSnapshot.remoteModelValues.modify())()
{
  return MarkedAsFinishedMechanism.rawValue.getter;
}

uint64_t ReadingHistory.ModelSnapshot.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100291C90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DC14((uint64_t *)&unk_100291A20);
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = (void *)v5;
  *(_OWORD *)(v5 + 16) = xmmword_100215850;
  BOOL v7 = *v0 == 0;
  if (*v0) {
    uint64_t v8 = 0x7964616572;
  }
  else {
    uint64_t v8 = 0x676E6964616F6CLL;
  }
  if (v7) {
    unint64_t v9 = 0xE700000000000000;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v10 = sub_10007DC58();
  v6[8] = v10;
  v6[4] = v8;
  v6[5] = v9;
  uint64_t v11 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  uint64_t v12 = sub_100170DF8();
  v6[12] = &type metadata for String;
  v6[13] = v10;
  v6[9] = v12;
  v6[10] = v13;
  uint64_t v14 = ReadingHistory.ModelSnapshot.ModelValues.description.getter();
  v6[17] = &type metadata for String;
  v6[18] = v10;
  v6[14] = v14;
  v6[15] = v15;
  sub_1000936F8((uint64_t)&v1[*(int *)(v11 + 28)], (uint64_t)v4, (uint64_t *)&unk_100291C90);
  uint64_t v16 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v4, 1, v16) == 1)
  {
    sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_100291C90);
    unint64_t v17 = v6 + 19;
    v6[22] = &type metadata for String;
    v6[23] = v10;
LABEL_11:
    *unint64_t v17 = 7104878;
    unint64_t v20 = 0xE300000000000000;
    goto LABEL_12;
  }
  uint64_t v18 = ReadingHistory.ModelSnapshot.ModelValues.description.getter();
  unint64_t v20 = v19;
  sub_100171E84((uint64_t)v4, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  unint64_t v17 = v6 + 19;
  v6[22] = &type metadata for String;
  v6[23] = v10;
  if (!v20) {
    goto LABEL_11;
  }
  *unint64_t v17 = v18;
LABEL_12:
  v6[20] = v20;
  return sub_1001EC3A0();
}

BOOL _s14bookdatastored14ReadingHistoryO13ModelSnapshotV0D6ValuesV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100292E20);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14(&qword_100291C78);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (char *)&v32 - v16;
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v32 - v18;
  int v20 = *(unsigned __int8 *)(a1 + 16);
  int v21 = *(unsigned __int8 *)(a2 + 16);
  if (v20 == 2)
  {
    if (v21 != 2) {
      return 0;
    }
    goto LABEL_8;
  }
  if (v21 == 2) {
    return 0;
  }
  BOOL result = 0;
  BOOL v23 = (v20 & 1) == 0;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8) && ((v23 ^ v21) & 1) != 0)
  {
LABEL_8:
    BOOL v33 = v7;
    uint64_t v24 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
    sub_1000936F8(a1 + *(int *)(v24 + 20), (uint64_t)v19, &qword_100291C78);
    sub_1000936F8(a2 + *(int *)(v24 + 20), (uint64_t)v17, &qword_100291C78);
    uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1000936F8((uint64_t)v19, (uint64_t)v10, &qword_100291C78);
    sub_1000936F8((uint64_t)v17, v25, &qword_100291C78);
    BOOL v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v26((uint64_t)v10, 1, v4) == 1)
    {
      sub_1000816A4((uint64_t)v17, &qword_100291C78);
      sub_1000816A4((uint64_t)v19, &qword_100291C78);
      if (v26(v25, 1, v4) == 1)
      {
        sub_1000816A4((uint64_t)v10, &qword_100291C78);
        return 1;
      }
      BOOL v27 = &qword_100292E20;
    }
    else
    {
      sub_1000936F8((uint64_t)v10, (uint64_t)v14, &qword_100291C78);
      if (v26(v25, 1, v4) == 1)
      {
        BOOL v27 = &qword_100292E20;
      }
      else
      {
        uint64_t v28 = (uint64_t)v33;
        sub_100175250(v25, (uint64_t)v33, type metadata accessor for ReadingHistory.Streak);
        if (sub_1001EB090())
        {
          uint64_t v29 = *(int *)(v4 + 20);
          uint64_t v30 = *(void *)&v14[v29];
          uint64_t v31 = *(void *)(v28 + v29);
          sub_100171E84(v28, type metadata accessor for ReadingHistory.Streak);
          sub_1000816A4((uint64_t)v17, &qword_100291C78);
          sub_1000816A4((uint64_t)v19, &qword_100291C78);
          sub_100171E84((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
          sub_1000816A4((uint64_t)v10, &qword_100291C78);
          return v30 == v31;
        }
        sub_100171E84(v28, type metadata accessor for ReadingHistory.Streak);
        BOOL v27 = &qword_100291C78;
      }
      sub_1000816A4((uint64_t)v17, &qword_100291C78);
      sub_1000816A4((uint64_t)v19, &qword_100291C78);
      sub_100171E84((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
    }
    sub_1000816A4((uint64_t)v10, v27);
    return 0;
  }
  return result;
}

uint64_t sub_100171DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100171E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100171E84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL _s14bookdatastored14ReadingHistoryO13ModelSnapshotV23__derived_struct_equalsySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100295DB8);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007DC14((uint64_t *)&unk_100291C90);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (char *)&v25 - v16;
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v25 - v18;
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v26 = v5;
  int v20 = (int *)type metadata accessor for ReadingHistory.ModelSnapshot(0);
  if ((sub_1001165C8((uint64_t)&a1[v20[5]], (uint64_t)&a2[v20[5]]) & 1) == 0
    || !_s14bookdatastored14ReadingHistoryO13ModelSnapshotV0D6ValuesV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)&a1[v20[6]], (uint64_t)&a2[v20[6]]))
  {
    return 0;
  }
  sub_1000936F8((uint64_t)&a1[v20[7]], (uint64_t)v19, (uint64_t *)&unk_100291C90);
  sub_1000936F8((uint64_t)&a2[v20[7]], (uint64_t)v17, (uint64_t *)&unk_100291C90);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000936F8((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_100291C90);
  sub_1000936F8((uint64_t)v17, v21, (uint64_t *)&unk_100291C90);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_100291C90);
    sub_1000816A4((uint64_t)v19, (uint64_t *)&unk_100291C90);
    if (v22(v21, 1, v4) == 1)
    {
      sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_100291C90);
      return 1;
    }
    goto LABEL_9;
  }
  sub_1000936F8((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_100291C90);
  if (v22(v21, 1, v4) == 1)
  {
    sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_100291C90);
    sub_1000816A4((uint64_t)v19, (uint64_t *)&unk_100291C90);
    sub_100171E84((uint64_t)v14, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
LABEL_9:
    sub_1000816A4((uint64_t)v10, &qword_100295DB8);
    return 0;
  }
  sub_100175250(v21, (uint64_t)v7, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  BOOL v23 = _s14bookdatastored14ReadingHistoryO13ModelSnapshotV0D6ValuesV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t)v14, (uint64_t)v7);
  sub_100171E84((uint64_t)v7, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  sub_1000816A4((uint64_t)v17, (uint64_t *)&unk_100291C90);
  sub_1000816A4((uint64_t)v19, (uint64_t *)&unk_100291C90);
  sub_100171E84((uint64_t)v14, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  sub_1000816A4((uint64_t)v10, (uint64_t *)&unk_100291C90);
  return v23;
}

void *_s14descr10025F2E9V13ModelSnapshotVwCP(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_10007DC14((uint64_t *)&unk_1002963C0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10))
    {
      uint64_t v12 = sub_10007DC14((uint64_t *)&unk_100291BA0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_10007DC14(&qword_100291BD0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      uint64_t v15 = type metadata accessor for ReadingHistoryModel(0);
      uint64_t v16 = *(int *)(v15 + 20);
      unint64_t v17 = &v8[v16];
      uint64_t v18 = &v9[v16];
      uint64_t v19 = sub_10007DC14(&qword_100291BD8);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      *(void *)&v8[*(int *)(v15 + 24)] = *(void *)&v9[*(int *)(v15 + 24)];
      int v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      v20(v8, 0, 2, v10);
    }
    uint64_t v21 = a3[6];
    uint64_t v22 = (char *)v4 + v21;
    BOOL v23 = (char *)a2 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)((char *)a2 + v21);
    v22[16] = *((unsigned char *)a2 + v21 + 16);
    uint64_t v24 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
    uint64_t v25 = *(int *)(v24 + 20);
    uint64_t v26 = &v22[v25];
    BOOL v27 = &v23[v25];
    uint64_t v28 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    if (v30(v27, 1, v28))
    {
      uint64_t v31 = sub_10007DC14(&qword_100291C78);
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v32 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v26, v27, v32);
      *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v33 = a3[7];
    int64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    uint64_t v36 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)a2 + v33, 1, v24))
    {
      uint64_t v37 = sub_10007DC14((uint64_t *)&unk_100291C90);
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      *(_OWORD *)int64_t v34 = *(_OWORD *)v35;
      v34[16] = v35[16];
      uint64_t v38 = *(int *)(v24 + 20);
      unint64_t v39 = &v34[v38];
      unint64_t v40 = &v35[v38];
      if (v30(v40, 1, v28))
      {
        uint64_t v41 = sub_10007DC14(&qword_100291C78);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        uint64_t v42 = sub_1001EB0C0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v39, v40, v42);
        *(void *)&v39[*(int *)(v28 + 20)] = *(void *)&v40[*(int *)(v28 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v39, 0, 1, v28);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v36 + 56))(v34, 0, 1, v24);
    }
  }
  return v4;
}

uint64_t _s14descr10025F2E9V13ModelSnapshotVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 2, v5))
  {
    uint64_t v6 = sub_10007DC14(&qword_100291BD0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = v4 + *(int *)(type metadata accessor for ReadingHistoryModel(0) + 20);
    uint64_t v8 = sub_10007DC14(&qword_100291BD8);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  uint64_t v11 = v9 + *(int *)(v10 + 20);
  uint64_t v12 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  if (!v13(v11, 1, v12))
  {
    uint64_t v14 = sub_1001EB0C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v11, v14);
  }
  uint64_t v15 = a1 + a2[7];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v15, 1, v10);
  if (!result)
  {
    uint64_t v17 = v15 + *(int *)(v10 + 20);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v17, 1, v12);
    if (!result)
    {
      uint64_t v18 = sub_1001EB0C0();
      uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
      return v19(v17, v18);
    }
  }
  return result;
}

unsigned char *_s14descr10025F2E9V13ModelSnapshotVwcp(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 2, v9))
  {
    uint64_t v11 = sub_10007DC14((uint64_t *)&unk_100291BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_10007DC14(&qword_100291BD0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
    uint64_t v13 = type metadata accessor for ReadingHistoryModel(0);
    uint64_t v14 = *(int *)(v13 + 20);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    uint64_t v17 = sub_10007DC14(&qword_100291BD8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    *(void *)&v7[*(int *)(v13 + 24)] = *(void *)&v8[*(int *)(v13 + 24)];
    uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    swift_bridgeObjectRetain();
    v18(v7, 0, 2, v9);
  }
  uint64_t v19 = a3[6];
  int v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *(_OWORD *)int v20 = *(_OWORD *)&a2[v19];
  v20[16] = a2[v19 + 16];
  uint64_t v22 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = &v20[v23];
  uint64_t v25 = &v21[v23];
  uint64_t v26 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v25, 1, v26))
  {
    uint64_t v29 = sub_10007DC14(&qword_100291C78);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v24, v25, v30);
    *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v31 = a3[7];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(&a2[v31], 1, v22))
  {
    uint64_t v35 = sub_10007DC14((uint64_t *)&unk_100291C90);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    uint64_t v36 = *(int *)(v22 + 20);
    uint64_t v37 = &v32[v36];
    uint64_t v38 = &v33[v36];
    if (v28(v38, 1, v26))
    {
      uint64_t v39 = sub_10007DC14(&qword_100291C78);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      uint64_t v40 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v37, v38, v40);
      *(void *)&v37[*(int *)(v26 + 20)] = *(void *)&v38[*(int *)(v26 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v37, 0, 1, v26);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v22);
  }
  return a1;
}

unsigned char *_s14descr10025F2E9V13ModelSnapshotVwca(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 2, v9);
  int v13 = v11(v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_10007DC14(&qword_100291BD0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      uint64_t v15 = type metadata accessor for ReadingHistoryModel(0);
      uint64_t v16 = *(int *)(v15 + 20);
      uint64_t v17 = &v7[v16];
      uint64_t v18 = &v8[v16];
      uint64_t v19 = sub_10007DC14(&qword_100291BD8);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      *(void *)&v7[*(int *)(v15 + 24)] = *(void *)&v8[*(int *)(v15 + 24)];
      int v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
      swift_bridgeObjectRetain();
      v20(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1000816A4((uint64_t)v7, (uint64_t *)&unk_1002963C0);
LABEL_6:
    uint64_t v21 = sub_10007DC14((uint64_t *)&unk_100291BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v50 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v7, v8, v50);
  uint64_t v51 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v52 = *(int *)(v51 + 20);
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  uint64_t v55 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
  *(void *)&v7[*(int *)(v51 + 24)] = *(void *)&v8[*(int *)(v51 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  long long v25 = *(_OWORD *)&a2[v22];
  v23[16] = a2[v22 + 16];
  *(_OWORD *)uint64_t v23 = v25;
  uint64_t v26 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  uint64_t v27 = *(int *)(v26 + 20);
  uint64_t v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  uint64_t v30 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v68 = *(void *)(v30 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48);
  int v32 = v31(v28, 1, v30);
  int v33 = v31(v29, 1, v30);
  if (v32)
  {
    if (!v33)
    {
      uint64_t v34 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v28, v29, v34);
      *(void *)&v28[*(int *)(v30 + 20)] = *(void *)&v29[*(int *)(v30 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v28, 0, 1, v30);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_100171E84((uint64_t)v28, type metadata accessor for ReadingHistory.Streak);
LABEL_12:
    uint64_t v35 = sub_10007DC14(&qword_100291C78);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v56 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 24))(v28, v29, v56);
  *(void *)&v28[*(int *)(v30 + 20)] = *(void *)&v29[*(int *)(v30 + 20)];
LABEL_13:
  uint64_t v36 = a3[7];
  uint64_t v37 = (uint64_t)&a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v67 = *(void *)(v26 - 8);
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
  int v40 = v39(&a1[v36], 1, v26);
  int v41 = v39(v38, 1, v26);
  if (!v40)
  {
    if (!v41)
    {
      long long v57 = *(_OWORD *)v38;
      *(unsigned char *)(v37 + 16) = v38[16];
      *(_OWORD *)uint64_t v37 = v57;
      uint64_t v58 = *(int *)(v26 + 20);
      uint64_t v59 = v37 + v58;
      uint64_t v60 = &v38[v58];
      int v61 = v31((char *)v59, 1, v30);
      int v62 = v31(v60, 1, v30);
      if (v61)
      {
        if (!v62)
        {
          uint64_t v63 = sub_1001EB0C0();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v59, v60, v63);
          *(void *)(v59 + *(int *)(v30 + 20)) = *(void *)&v60[*(int *)(v30 + 20)];
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v59, 0, 1, v30);
          return a1;
        }
      }
      else
      {
        if (!v62)
        {
          uint64_t v66 = sub_1001EB0C0();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v59, v60, v66);
          *(void *)(v59 + *(int *)(v30 + 20)) = *(void *)&v60[*(int *)(v30 + 20)];
          return a1;
        }
        sub_100171E84(v59, type metadata accessor for ReadingHistory.Streak);
      }
      size_t v47 = *(void *)(*(void *)(sub_10007DC14(&qword_100291C78) - 8) + 64);
      uint64_t v48 = (void *)v59;
      unint64_t v49 = v60;
      goto LABEL_20;
    }
    sub_100171E84(v37, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
LABEL_19:
    size_t v47 = *(void *)(*(void *)(sub_10007DC14((uint64_t *)&unk_100291C90) - 8) + 64);
    uint64_t v48 = (void *)v37;
    unint64_t v49 = v38;
LABEL_20:
    memcpy(v48, v49, v47);
    return a1;
  }
  if (v41) {
    goto LABEL_19;
  }
  long long v42 = *(_OWORD *)v38;
  *(unsigned char *)(v37 + 16) = v38[16];
  *(_OWORD *)uint64_t v37 = v42;
  uint64_t v43 = *(int *)(v26 + 20);
  uint64_t v44 = (char *)(v37 + v43);
  uint64_t v45 = &v38[v43];
  if (v31(v45, 1, v30))
  {
    uint64_t v46 = sub_10007DC14(&qword_100291C78);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v64 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v44, v45, v64);
    *(void *)&v44[*(int *)(v30 + 20)] = *(void *)&v45[*(int *)(v30 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v44, 0, 1, v30);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v37, 0, 1, v26);
  return a1;
}

unsigned char *_s14descr10025F2E9V13ModelSnapshotVwtk(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 2, v9))
  {
    uint64_t v11 = sub_10007DC14((uint64_t *)&unk_100291BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_10007DC14(&qword_100291BD0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    uint64_t v13 = type metadata accessor for ReadingHistoryModel(0);
    uint64_t v14 = *(int *)(v13 + 20);
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    uint64_t v17 = sub_10007DC14(&qword_100291BD8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    *(void *)&v7[*(int *)(v13 + 24)] = *(void *)&v8[*(int *)(v13 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  int v20 = &a2[v18];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)&a2[v18];
  v19[16] = a2[v18 + 16];
  uint64_t v21 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  uint64_t v22 = *(int *)(v21 + 20);
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  uint64_t v25 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    uint64_t v28 = sub_10007DC14(&qword_100291C78);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v23, v24, v29);
    *(void *)&v23[*(int *)(v25 + 20)] = *(void *)&v24[*(int *)(v25 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v30 = a3[7];
  uint64_t v31 = &a1[v30];
  int v32 = &a2[v30];
  uint64_t v33 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(&a2[v30], 1, v21))
  {
    uint64_t v34 = sub_10007DC14((uint64_t *)&unk_100291C90);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    uint64_t v35 = *(int *)(v21 + 20);
    uint64_t v36 = &v31[v35];
    uint64_t v37 = &v32[v35];
    if (v27(v37, 1, v25))
    {
      uint64_t v38 = sub_10007DC14(&qword_100291C78);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      uint64_t v39 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v36, v37, v39);
      *(void *)&v36[*(int *)(v25 + 20)] = *(void *)&v37[*(int *)(v25 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v36, 0, 1, v25);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v21);
  }
  return a1;
}

unsigned char *_s14descr10025F2E9V13ModelSnapshotVwta(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002963C0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 2, v9);
  int v13 = v11(v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = sub_10007DC14(&qword_100291BD0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      uint64_t v15 = type metadata accessor for ReadingHistoryModel(0);
      uint64_t v16 = *(int *)(v15 + 20);
      uint64_t v17 = &v7[v16];
      uint64_t v18 = &v8[v16];
      uint64_t v19 = sub_10007DC14(&qword_100291BD8);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *(void *)&v7[*(int *)(v15 + 24)] = *(void *)&v8[*(int *)(v15 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1000816A4((uint64_t)v7, (uint64_t *)&unk_1002963C0);
LABEL_6:
    uint64_t v20 = sub_10007DC14((uint64_t *)&unk_100291BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v47 = sub_10007DC14(&qword_100291BD0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40))(v7, v8, v47);
  uint64_t v48 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v49 = *(int *)(v48 + 20);
  uint64_t v50 = &v7[v49];
  uint64_t v51 = &v8[v49];
  uint64_t v52 = sub_10007DC14(&qword_100291BD8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40))(v50, v51, v52);
  *(void *)&v7[*(int *)(v48 + 24)] = *(void *)&v8[*(int *)(v48 + 24)];
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v21 = a3[6];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)&a2[v21];
  v22[16] = a2[v21 + 16];
  uint64_t v24 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  uint64_t v28 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v64 = *(void *)(v28 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  int v30 = v29(v26, 1, v28);
  int v31 = v29(v27, 1, v28);
  if (v30)
  {
    if (!v31)
    {
      uint64_t v32 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v26, v27, v32);
      *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    sub_100171E84((uint64_t)v26, type metadata accessor for ReadingHistory.Streak);
LABEL_12:
    uint64_t v33 = sub_10007DC14(&qword_100291C78);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v53 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 40))(v26, v27, v53);
  *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
LABEL_13:
  uint64_t v34 = a3[7];
  uint64_t v35 = (uint64_t)&a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v63 = *(void *)(v24 - 8);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  int v38 = v37(&a1[v34], 1, v24);
  int v39 = v37(v36, 1, v24);
  if (!v38)
  {
    if (!v39)
    {
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *(unsigned char *)(v35 + 16) = v36[16];
      uint64_t v54 = *(int *)(v24 + 20);
      uint64_t v55 = v35 + v54;
      uint64_t v56 = &v36[v54];
      int v57 = v29((char *)v55, 1, v28);
      int v58 = v29(v56, 1, v28);
      if (v57)
      {
        if (!v58)
        {
          uint64_t v59 = sub_1001EB0C0();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v55, v56, v59);
          *(void *)(v55 + *(int *)(v28 + 20)) = *(void *)&v56[*(int *)(v28 + 20)];
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v55, 0, 1, v28);
          return a1;
        }
      }
      else
      {
        if (!v58)
        {
          uint64_t v62 = sub_1001EB0C0();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v55, v56, v62);
          *(void *)(v55 + *(int *)(v28 + 20)) = *(void *)&v56[*(int *)(v28 + 20)];
          return a1;
        }
        sub_100171E84(v55, type metadata accessor for ReadingHistory.Streak);
      }
      size_t v44 = *(void *)(*(void *)(sub_10007DC14(&qword_100291C78) - 8) + 64);
      uint64_t v45 = (void *)v55;
      uint64_t v46 = v56;
      goto LABEL_20;
    }
    sub_100171E84(v35, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
LABEL_19:
    size_t v44 = *(void *)(*(void *)(sub_10007DC14((uint64_t *)&unk_100291C90) - 8) + 64);
    uint64_t v45 = (void *)v35;
    uint64_t v46 = v36;
LABEL_20:
    memcpy(v45, v46, v44);
    return a1;
  }
  if (v39) {
    goto LABEL_19;
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(unsigned char *)(v35 + 16) = v36[16];
  uint64_t v40 = *(int *)(v24 + 20);
  int v41 = (char *)(v35 + v40);
  long long v42 = &v36[v40];
  if (v29(v42, 1, v28))
  {
    uint64_t v43 = sub_10007DC14(&qword_100291C78);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v60 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v41, v42, v60);
    *(void *)&v41[*(int *)(v28 + 20)] = *(void *)&v42[*(int *)(v28 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v41, 0, 1, v28);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 56))(v35, 0, 1, v24);
  return a1;
}

uint64_t _s14descr10025F2E9V13ModelSnapshotVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100174208);
}

uint64_t sub_100174208(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    int v13 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = sub_10007DC14((uint64_t *)&unk_100291C90);
  uint64_t v15 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = &a1[a3[7]];
  return v15(v17, a2, v16);
}

uint64_t _s14descr10025F2E9V13ModelSnapshotVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100174394);
}

unsigned char *sub_100174394(unsigned char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
    return result;
  }
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    int v13 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (unsigned char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_10007DC14((uint64_t *)&unk_100291C90);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[7]];
  return (unsigned char *)v15(v17, a2, a2, v16);
}

void sub_100174510()
{
  sub_10017463C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(319);
    if (v1 <= 0x3F)
    {
      sub_1001751FC(319, (unint64_t *)&unk_100295CF0, (void (*)(uint64_t))type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10017463C()
{
  if (!qword_100295CD8)
  {
    type metadata accessor for ReadingHistoryModel(255);
    sub_1001746EC(&qword_100295CE0);
    sub_1001746EC(&qword_100295CE8);
    unint64_t v0 = type metadata accessor for ModelState.Source();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100295CD8);
    }
  }
}

uint64_t sub_1001746EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ReadingHistoryModel(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s14descr10025F2E9V13ModelSnapshotV11ModelValuesVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for ReadingHistory.Streak(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_10007DC14(&qword_100291C78);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
      *(void *)&v6[*(int *)(v8 + 20)] = *(void *)&v7[*(int *)(v8 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t _s14descr10025F2E9V13ModelSnapshotV11ModelValuesVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = sub_1001EB0C0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v2, v5);
  }
  return result;
}

uint64_t _s14descr10025F2E9V13ModelSnapshotV11ModelValuesVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10007DC14(&qword_100291C78);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v5, v6, v10);
    *(void *)&v5[*(int *)(v7 + 20)] = *(void *)&v6[*(int *)(v7 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t _s14descr10025F2E9V13ModelSnapshotV11ModelValuesVwca(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v4 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      uint64_t v16 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v6, v7, v16);
      *(void *)&v6[*(int *)(v8 + 20)] = *(void *)&v7[*(int *)(v8 + 20)];
      return a1;
    }
    sub_100171E84((uint64_t)v6, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10007DC14(&qword_100291C78);
    memcpy(v6, v7, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  uint64_t v13 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v7, v13);
  *(void *)&v6[*(int *)(v8 + 20)] = *(void *)&v7[*(int *)(v8 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t _s14descr10025F2E9V13ModelSnapshotV11ModelValuesVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10007DC14(&qword_100291C78);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1001EB0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    *(void *)&v5[*(int *)(v7 + 20)] = *(void *)&v6[*(int *)(v7 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t _s14descr10025F2E9V13ModelSnapshotV11ModelValuesVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ReadingHistory.Streak(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = sub_1001EB0C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v5, v6, v15);
      *(void *)&v5[*(int *)(v7 + 20)] = *(void *)&v6[*(int *)(v7 + 20)];
      return a1;
    }
    sub_100171E84((uint64_t)v5, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10007DC14(&qword_100291C78);
    memcpy(v5, v6, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1001EB0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
  *(void *)&v5[*(int *)(v7 + 20)] = *(void *)&v6[*(int *)(v7 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t _s14descr10025F2E9V13ModelSnapshotV11ModelValuesVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100174FC4);
}

uint64_t sub_100174FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2) {
      int v5 = ((v4 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v5 = -2;
    }
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10007DC14(&qword_100291C78);
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t _s14descr10025F2E9V13ModelSnapshotV11ModelValuesVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001750A0);
}

uint64_t sub_1001750A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *(unsigned char *)(result + 16) = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_10007DC14(&qword_100291C78);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100175148()
{
  sub_1001751FC(319, (unint64_t *)&qword_100291E28, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Streak);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001751FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001ECB50();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100175250(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t MutableObservableContainer.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v3 = sub_1001783E4(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 264) - 8) + 8))(a1);
  return v3;
}

void *ObservableTransaction.__allocating_init(name:transactionProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return sub_1001782B8(a1, a2, a3);
}

uint64_t MutableObservableContainer.mutate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(NSObject **)(v3 + 16);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v3;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100178458;
  *(void *)(v8 + 24) = v7;
  v11[4] = sub_1000AC2B4;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_100089470;
  v11[3] = &unk_100269948;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6) {
    __break(1u);
  }
  return result;
}

uint64_t ObservableContainer.Event.currentValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 16);
  if (EnumCaseMultiPayload != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a2, v5, v8);
  }
  uint64_t v9 = &v5[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v9, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v8);
}

uint64_t MutableObservableContainer.value.getter()
{
  return sub_1001EC9E0();
}

uint64_t sub_1001756C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  sub_1000A456C(a1, (uint64_t)sub_100179DCC, v6);
  return swift_release();
}

uint64_t sub_10017575C(uint64_t a1, uint64_t (*a2)(unsigned char *))
{
  sub_100119CA8(a1, (uint64_t)v4);
  return a2(v4);
}

Swift::Void __swiftcall ObservationToken.invalidate()()
{
  (*(void (**)())(v0 + 16))();
}

uint64_t ObservationToken.deinit()
{
  (*(void (**)(uint64_t))(v0 + 16))(v0);
  swift_release();
  return v0;
}

uint64_t ObservationToken.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(v0 + 16))(v0);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_100175858(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v18 = type metadata accessor for ObservableContainer.Event();
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v6 = __chkstk_darwin(v18);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = *(void *)(v5 - 8);
  __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = (uint64_t)v2 + *(void *)(v4 + 120);
  swift_beginAccess();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, v12, v5);
  uint64_t v19 = a1;
  char v14 = sub_1001EC330();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v5);
  if ((v14 & 1) == 0)
  {
    uint64_t v16 = &v8[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    v13(v8, v19, v5);
    v13(v16, v12, v5);
    uint64_t v17 = v18;
    swift_storeEnumTagMultiPayload();
    sub_100176164((uint64_t)v8);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v8, v17);
  }
  return result;
}

uint64_t ObservableContainer.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t ObservableContainer.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t ObservableContainer.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(void *)(*(void *)v2 + 128);
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*ObservableContainer.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100175CD8;
}

void sub_100175CD8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t ObservableContainer.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ObservableContainer.init(value:)(a1);
  return v2;
}

char *ObservableContainer.init(value:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v14 = *(void *)v1;
  uint64_t v15 = a1;
  uint64_t v13 = sub_1001EC9C0();
  uint64_t v3 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EC990();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1001EBAA0();
  __chkstk_darwin(v7 - 8);
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA80();
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_10017A344((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000CA6C0((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  uint64_t v8 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  uint64_t v9 = v13;
  v8(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *((void *)v1 + 2) = sub_1001ECA00();
  sub_1001EBA90();
  sub_1001EC980();
  v8(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v9);
  *((void *)v1 + 3) = sub_1001ECA00();
  uint64_t v10 = *(void *)(v14 + 80);
  type metadata accessor for ObservableContainer.Event();
  swift_getFunctionTypeMetadata1();
  *((void *)v2 + 4) = sub_1001EC220();
  uint64_t v11 = &v2[*(void *)(*(void *)v2 + 128)];
  *((void *)v11 + 1) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *((void *)v11 + 1) = 0;
  swift_unknownObjectWeakAssign();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(&v2[*(void *)(*(void *)v2 + 120)], v15, v10);
  return v2;
}

uint64_t sub_100176164(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = sub_1001EBAA0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EBA60();
  uint64_t v28 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)v1 + v2[16];
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v11 = *((void *)v10 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 8))(v1, ObjectType, v11);
    swift_unknownObjectRelease();
  }
  uint64_t v26 = v1[3];
  sub_1001EBA50();
  uint64_t v33 = MarkedAsFinishedMechanism.rawValue.getter;
  uint64_t v34 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  int v31 = sub_1000DB998;
  uint64_t v32 = &unk_100269C80;
  uint64_t v13 = _Block_copy(&aBlock);
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v13);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v23 = v4 + 8;
  uint64_t v25 = v14;
  v14(v6, v3);
  uint64_t v28 = *(void *)(v28 + 8);
  ((void (*)(char *, uint64_t))v28)(v9, v7);
  swift_beginAccess();
  uint64_t v15 = (void **)v1[4];
  uint64_t v17 = v2[10];
  uint64_t v16 = v2[11];
  type metadata accessor for ObservableContainer.Event();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  uint64_t v24 = v7;
  uint64_t aBlock = v15;
  __chkstk_darwin(FunctionTypeMetadata1);
  *(&v23 - 4) = v17;
  *(&v23 - 3) = v16;
  *(&v23 - 2) = v27;
  sub_1001EC2B0();
  uint64_t v27 = v3;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1001EC580();
  swift_bridgeObjectRelease();
  sub_1001EBA50();
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v17;
  v20[3] = v16;
  v20[4] = v19;
  uint64_t v33 = sub_100179D88;
  uint64_t v34 = v20;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  int v31 = sub_1000DB998;
  uint64_t v32 = &unk_100269CD0;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v21);
  v25(v6, v27);
  ((void (*)(char *, uint64_t))v28)(v9, v24);
  swift_release();
  return swift_release();
}

uint64_t _s14bookdatastored19ObservableContainerC11addObserver_8callbackyyXl_yAC5EventOyx_GctF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(NSObject **)(v4 + 16);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = v4;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100179ED0;
  *(void *)(v10 + 24) = v9;
  v13[4] = sub_1000B0738;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_100089470;
  _OWORD v13[3] = &unk_100269E60;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001767B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a4;
  uint64_t v49 = a3;
  uint64_t v52 = a2;
  uint64_t v5 = (void *)*a1;
  uint64_t v47 = sub_1001EBAA0();
  uint64_t v46 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1001EBA60();
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v5[10];
  uint64_t v51 = v5[11];
  uint64_t v10 = type metadata accessor for ObservableContainer.Event();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = (char *)a1 + v5[15];
  swift_beginAccess();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  uint64_t v50 = v9;
  v18(v16, v17, v9);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (char *)a1 + *(void *)(*a1 + 128);
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v20 = *((void *)v19 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v20 + 8))(a1, ObjectType, v20);
    swift_unknownObjectRelease();
  }
  uint64_t v41 = a1[3];
  sub_1001EBA50();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  uint64_t v23 = *(unsigned __int8 *)(v11 + 80);
  long long v42 = v16;
  uint64_t v24 = (v23 + 48) & ~v23;
  uint64_t v25 = v8;
  unint64_t v26 = (v12 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v49;
  uint64_t v29 = v51;
  void v27[2] = v50;
  v27[3] = v29;
  v27[4] = v52;
  v27[5] = v28;
  uint64_t v30 = (char *)v27 + v24;
  uint64_t v31 = v10;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v14, v10);
  *(void *)((char *)v27 + v26) = v22;
  aBlock[4] = sub_10017A04C;
  aBlock[5] = v27;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_100269EB0;
  uint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v33 = v45;
  sub_1001EBA80();
  sub_1001EC9F0();
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v44);
  swift_release();
  swift_release();
  uint64_t v34 = swift_allocObject();
  swift_weakInit();
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v48;
  swift_unknownObjectWeakInit();
  uint64_t v37 = (void *)swift_allocObject();
  uint64_t v38 = v51;
  v37[2] = v50;
  v37[3] = v38;
  v37[4] = v34;
  v37[5] = v35;
  uint64_t v39 = v52;
  v37[6] = v36;
  v37[7] = v39;
  v37[8] = v28;
  uint64_t v54 = sub_10017A180;
  uint64_t v55 = v37;
  uint64_t v53 = v36;
  swift_beginAccess();
  swift_getFunctionTypeMetadata1();
  sub_1001EC2C0();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1001EC2D0();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v31);
  swift_release();
  return swift_release();
}

void *sub_100176DC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v35 = a4;
  uint64_t v36 = a1;
  uint64_t v10 = sub_1001EBA60();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1001EBAA0();
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ObservableContainer.Event();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v35 - v18;
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v21 = result;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong)
    {
      uint64_t v35 = v21[3];
      (*(void (**)(char *, void *, uint64_t))(v17 + 16))(v19, v36, v16);
      uint64_t v23 = *(unsigned __int8 *)(v17 + 80);
      uint64_t v36 = v21;
      uint64_t v24 = (v23 + 48) & ~v23;
      uint64_t v25 = (char *)swift_allocObject();
      *((void *)v25 + 2) = a7;
      *((void *)v25 + 3) = a8;
      uint64_t v26 = v38;
      *((void *)v25 + 4) = v37;
      *((void *)v25 + 5) = v26;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[v24], v19, v16);
      aBlock[4] = sub_10017A2D8;
      aBlock[5] = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_100269F50;
      uint64_t v27 = _Block_copy(aBlock);
      swift_retain();
      sub_1001EBA80();
      uint64_t v44 = _swiftEmptyArrayStorage;
      sub_10017A344((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10007DC14((uint64_t *)&unk_100291BF0);
      sub_1000CA6C0(&qword_100296750, (uint64_t *)&unk_100291BF0);
      uint64_t v28 = v42;
      sub_1001ECC30();
      sub_1001EC9F0();
      _Block_release(v27);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v28);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v40);
      swift_release();
      return (void *)swift_release();
    }
    else
    {
      sub_1001EC910();
      sub_10007DC14((uint64_t *)&unk_100291A20);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_100215320;
      uint64_t v30 = v35;
      aBlock[0] = v35;
      uint64_t v31 = sub_1001EC3D0();
      uint64_t v33 = v32;
      *(void *)(v29 + 56) = &type metadata for String;
      *(void *)(v29 + 64) = sub_10007DC58();
      *(void *)(v29 + 32) = v31;
      *(void *)(v29 + 4sub_10016EAD4(to, 0) = v33;
      sub_100081668(0, (unint64_t *)&qword_100291EE0);
      uint64_t v34 = (void *)sub_1001ECB30();
      sub_1001EB530();
      swift_bridgeObjectRelease();

      void aBlock[6] = v30;
      swift_beginAccess();
      swift_getFunctionTypeMetadata1();
      sub_1001EC2C0();
      sub_1001EC280();
      swift_endAccess();
      swift_release();
      uint64_t result = v44;
      if (v44) {
        return (void *)sub_1000B0100((uint64_t)v44);
      }
    }
  }
  return result;
}

uint64_t ObservableContainer.observe(callback:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = *(void *)(v5 + 80);
  v7[3] = *(void *)(v5 + 88);
  v7[4] = v6;
  type metadata accessor for ObservationToken();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1001784F8;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = swift_retain();
  _s14bookdatastored19ObservableContainerC11addObserver_8callbackyyXl_yAC5EventOyx_GctF_0(v9, a1, a2);
  swift_release();
  return v8;
}

uint64_t sub_100177410()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    type metadata accessor for ObservableContainer.Event();
    swift_getFunctionTypeMetadata1();
    sub_1001EC2C0();
    sub_1001EC280();
    swift_endAccess();
    swift_release();
    uint64_t result = v1;
    if (v1) {
      return sub_1000B0100(v1);
    }
  }
  return result;
}

uint64_t ObservableContainer.removeObserver(_:)(uint64_t a1)
{
  uint64_t v3 = *(NSObject **)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100178568;
  *(void *)(v5 + 24) = v4;
  v8[4] = sub_1000B0738;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100089470;
  v8[3] = &unk_100269A10;
  uint64_t v6 = _Block_copy(v8);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100177674()
{
  swift_beginAccess();
  type metadata accessor for ObservableContainer.Event();
  swift_getFunctionTypeMetadata1();
  sub_1001EC2C0();
  sub_1001EC280();
  swift_endAccess();
  uint64_t result = v1;
  if (v1) {
    return sub_1000B0100(v1);
  }
  return result;
}

id *ObservableContainer.deinit()
{
  uint64_t v1 = *v0;

  swift_bridgeObjectRelease();
  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 15));
  sub_1000CA710((uint64_t)v0 + *((void *)*v0 + 16));
  return v0;
}

uint64_t MutableObservableContainer.__deallocating_deinit()
{
  ObservableContainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_100177858@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (uint64_t)a1 + *(void *)(*a1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 264) - 8) + 16))(a2, v4);
}

uint64_t sub_100177910(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)a3 + 264);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v10 = v9 + *(void *)(v8 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  a1(v7);
  sub_1001786F0((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MutableObservableContainer.init(value:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100178324(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 264) - 8) + 8))(a1);
  return v4;
}

void *ObservableTransaction.init(name:transactionProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return sub_10017800C(a1, a2, a3, v3);
}

void sub_100177B30(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (!*(void *)(a1 + 32))
  {
    id v6 = [*(id *)(a1 + 48) createTransactionWithName:sub_1001EC400() + 32];
    swift_release();
    uint64_t v7 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v6;

    swift_bridgeObjectRetain_n();
    oslog = sub_1001EB540();
    os_log_type_t v8 = sub_1001EC8D0();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_1001A8090(a2, a3, &v11);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "[Transaction]: Created transaction %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_100177D20(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = 0;

  swift_bridgeObjectRetain_n();
  oslog = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC8D0();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1001A8090(a2, a3, &v9);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "[Transaction]: Ended transaction %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t ObservableTransaction.deinit()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14bookdatastored21ObservableTransaction_logger;
  uint64_t v2 = sub_1001EB560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ObservableTransaction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC14bookdatastored21ObservableTransaction_logger;
  uint64_t v2 = sub_1001EB560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void *sub_10017800C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v6 = sub_1001EC990();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1001EBAA0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1001EC9C0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4[4] = 0;
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v8);
  sub_1001EBA80();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_10017A344((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000CA6C0((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  a4[5] = sub_1001ECA00();
  sub_1001EB550();
  uint64_t v12 = v15;
  a4[2] = a1;
  a4[3] = v12;
  a4[6] = v16;
  return a4;
}

void *sub_1001782B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ObservableTransaction();
  uint64_t v6 = (void *)swift_allocObject();
  return sub_10017800C(a1, a2, a3, v6);
}

uint64_t sub_100178324(uint64_t a1)
{
  __chkstk_darwin(a1);
  uint64_t v3 = (char *)&v6 - v2;
  (*(void (**)(char *))(v4 + 16))((char *)&v6 - v2);
  ObservableContainer.init(value:)((uint64_t)v3);
  return v1;
}

uint64_t sub_1001783E4(uint64_t a1)
{
  return sub_100178324(a1);
}

uint64_t sub_100178420()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100178458()
{
  return sub_100177910(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100178464()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100178474(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_10016EAD4(to, 0) = v2;
  return swift_retain();
}

uint64_t sub_100178484()
{
  return swift_release();
}

uint64_t sub_10017848C@<X0>(uint64_t a1@<X8>)
{
  return sub_100177858(v1, a1);
}

uint64_t type metadata accessor for ObservableContainer.Event()
{
  return sub_1000C08A4();
}

uint64_t sub_1001784C0()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001784F8()
{
  return sub_100177410();
}

uint64_t type metadata accessor for ObservationToken()
{
  return self;
}

uint64_t sub_100178528()
{
  swift_unknownObjectRelease();
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100178568()
{
  return sub_100177674();
}

uint64_t sub_100178570()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t _s14bookdatastored21ObservableTransactionC26observableCallbacksWillRun6targetyyXl_tF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(NSObject **)(v1 + 40);
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100179E6C;
  *(void *)(v6 + 24) = v5;
  v9[4] = sub_1000B0738;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  void v9[2] = sub_100089470;
  v9[3] = &unk_100269DE8;
  uint64_t v7 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001786F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = &v10[-v5];
  uint64_t v8 = v1 + *(void *)(v7 + 120);
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v8, a1, v3);
  swift_endAccess();
  sub_100175858((uint64_t)v6);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t _s14bookdatastored21ObservableTransactionC25observableCallbacksDidRun6targetyyXl_tF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(NSObject **)(v1 + 40);
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100179E0C;
  *(void *)(v6 + 24) = v5;
  v9[4] = sub_1000B0738;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  void v9[2] = sub_100089470;
  v9[3] = &unk_100269D70;
  uint64_t v7 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001789C0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ObservableContainer()
{
  return sub_1000C08A4();
}

uint64_t sub_100178A94()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100178B34(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = ~(unint64_t)v8;
  uint64_t v11 = v7 + v8;
  if (((v7 + v9) & ~v9) + v7 <= v7) {
    uint64_t v12 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v12 = ((v7 + v8) & ~(unint64_t)v8) + v7;
  }
  int v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    uint64_t v16 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    unsigned int v17 = a2[v12];
    if (v17 >= 2)
    {
      if (v12 <= 3) {
        uint64_t v18 = v12;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_22;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_22;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_22;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_22:
          int v20 = (v19 | ((v17 - 2) << (8 * v12))) + 2;
          unsigned int v21 = v19 + 2;
          if (v12 >= 4) {
            unsigned int v17 = v21;
          }
          else {
            unsigned int v17 = v20;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v22 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16);
    v22(a1, a2, v5);
    if (v17 == 1)
    {
      v22((void *)(((unint64_t)v4 + v11) & v10), (unsigned __int8 *)((unint64_t)&a2[v11] & v10), v5);
      *((unsigned char *)v4 + v12) = 1;
    }
    else
    {
      *((unsigned char *)v4 + v12) = 0;
    }
  }
  return v4;
}

uint64_t sub_100178CF8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = v5 + v6;
  if (((v5 + v6) & ~v6) + v5 > v5) {
    v5 += (v5 + v6) & ~v6;
  }
  unsigned int v8 = a1[v5];
  if (v8 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_12;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_12:
        int v11 = (v10 | ((v8 - 2) << (8 * v5))) + 2;
        unsigned int v12 = v10 + 2;
        if (v5 >= 4) {
          unsigned int v8 = v12;
        }
        else {
          unsigned int v8 = v11;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v4 + 8);
  uint64_t result = v14(a1, v3);
  if (v8 == 1)
  {
    return v14((unsigned __int8 *)((unint64_t)&a1[v7] & ~v6), v3);
  }
  return result;
}

uint64_t sub_100178E84(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 <= v7) {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v10 = ((v7 + v8) & ~v8) + v7;
  }
  unsigned int v11 = a2[v10];
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_13;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_13:
        int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
        unsigned int v15 = v13 + 2;
        if (v10 >= 4) {
          unsigned int v11 = v15;
        }
        else {
          unsigned int v11 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 16);
  v16(a1, a2, v5);
  if (v11 == 1)
  {
    v16((v9 + a1) & ~v8, (unsigned __int8 *)((unint64_t)&a2[v9] & ~v8), v5);
    char v17 = 1;
  }
  else
  {
    char v17 = 0;
  }
  *(unsigned char *)(a1 + v1sub_10016EAD4(to, 0) = v17;
  return a1;
}

unsigned __int8 *sub_100179010(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 <= v7) {
      uint64_t v10 = *(void *)(v6 + 64);
    }
    else {
      uint64_t v10 = ((v7 + v8) & ~v8) + v7;
    }
    unsigned int v11 = a1[v10];
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
          unsigned int v15 = v13 + 2;
          if (v10 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    char v17 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
    v17(a1, v5);
    if (v11 == 1) {
      v17((unsigned __int8 *)((unint64_t)&a1[v9] & v16), v5);
    }
    unsigned int v18 = a2[v10];
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_28;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_28:
          int v21 = (v20 | ((v18 - 2) << (8 * v10))) + 2;
          unsigned int v22 = v20 + 2;
          if (v10 >= 4) {
            unsigned int v18 = v22;
          }
          else {
            unsigned int v18 = v21;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v23 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
    v23(a1, a2, v5);
    if (v18 == 1)
    {
      v23((unsigned __int8 *)((unint64_t)&a1[v9] & v16), (unsigned __int8 *)((unint64_t)&a2[v9] & v16), v5);
      char v24 = 1;
    }
    else
    {
      char v24 = 0;
    }
    a1[v10] = v24;
  }
  return a1;
}

uint64_t sub_10017926C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 <= v7) {
    uint64_t v10 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v10 = ((v7 + v8) & ~v8) + v7;
  }
  unsigned int v11 = a2[v10];
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_13;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_13:
        int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
        unsigned int v15 = v13 + 2;
        if (v10 >= 4) {
          unsigned int v11 = v15;
        }
        else {
          unsigned int v11 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 32);
  v16(a1, a2, v5);
  if (v11 == 1)
  {
    v16((v9 + a1) & ~v8, (unsigned __int8 *)((unint64_t)&a2[v9] & ~v8), v5);
    char v17 = 1;
  }
  else
  {
    char v17 = 0;
  }
  *(unsigned char *)(a1 + v1sub_10016EAD4(to, 0) = v17;
  return a1;
}

unsigned __int8 *sub_1001793F8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 <= v7) {
      uint64_t v10 = *(void *)(v6 + 64);
    }
    else {
      uint64_t v10 = ((v7 + v8) & ~v8) + v7;
    }
    unsigned int v11 = a1[v10];
    if (v11 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | ((v11 - 2) << (8 * v10))) + 2;
          unsigned int v15 = v13 + 2;
          if (v10 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    char v17 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
    v17(a1, v5);
    if (v11 == 1) {
      v17((unsigned __int8 *)((unint64_t)&a1[v9] & v16), v5);
    }
    unsigned int v18 = a2[v10];
    if (v18 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v19 = v10;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_28;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_28:
          int v21 = (v20 | ((v18 - 2) << (8 * v10))) + 2;
          unsigned int v22 = v20 + 2;
          if (v10 >= 4) {
            unsigned int v18 = v22;
          }
          else {
            unsigned int v18 = v21;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v23 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
    v23(a1, a2, v5);
    if (v18 == 1)
    {
      v23((unsigned __int8 *)((unint64_t)&a1[v9] & v16), (unsigned __int8 *)((unint64_t)&a2[v9] & v16), v5);
      char v24 = 1;
    }
    else
    {
      char v24 = 0;
    }
    a1[v10] = v24;
  }
  return a1;
}

uint64_t sub_100179654(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v5 <= v4) {
    unint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_22:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 2) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_22;
  }
LABEL_14:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 255;
}

void sub_1001797C0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v7 > v6) {
    unint64_t v6 = v7;
  }
  size_t v8 = v6 + 1;
  if (a3 < 0xFF)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v10 = a2 - 255;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v6 != -1)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1001799C0);
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1001799E8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = ((v3 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v4 <= v3) {
    unint64_t v4 = v3;
  }
  uint64_t v5 = a1[v4];
  int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v9 = (v8 | (v6 << (8 * v4))) + 2;
        LODWORD(v5) = v8 + 2;
        if (v4 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v9;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_100179AD8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  size_t v5 = *(void *)(v4 + 64);
  size_t v6 = ((v5 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (a2 > 1)
  {
    if (v6 <= v5) {
      size_t v7 = v5;
    }
    else {
      size_t v7 = v6;
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    if (v6 > v5) {
      size_t v5 = v6;
    }
    a1[v5] = a2;
  }
}

uint64_t sub_100179BF0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MutableObservableContainer()
{
  return sub_1000C08A4();
}

uint64_t sub_100179C40()
{
  return type metadata accessor for ObservableTransaction();
}

uint64_t type metadata accessor for ObservableTransaction()
{
  uint64_t result = qword_100296018;
  if (!qword_100296018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100179C94()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100179D50(uint64_t (**a1)(void))
{
  return (*a1)(*(void *)(v1 + 32));
}

uint64_t sub_100179D88()
{
  return sub_1001189D0();
}

uint64_t sub_100179D94()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100179DCC(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(unsigned char *))(v1 + 16);
  sub_100119CA8(a1, (uint64_t)v4);
  return v2(v4);
}

void sub_100179E0C()
{
  sub_100177D20(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100179E18()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100179E2C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100179E6C()
{
  sub_100177B30(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100179E78()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100179E88()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100179ED0()
{
  return sub_1001767B0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100179EDC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100179EEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for ObservableContainer.Event() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  size_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v7(v0 + v4, v1);
  if (EnumCaseMultiPayload == 1)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v7(v0 + v4 + *(int *)(TupleTypeMetadata2 + 48), v1);
  }
  swift_release();
  return _swift_deallocObject(v0, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

uint64_t sub_10017A04C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ObservableContainer.Event() - 8);
  uint64_t v2 = *(void (**)(uint64_t))(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1000A5570(v2, v3, v4);
}

uint64_t sub_10017A100()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10017A138()
{
  swift_release();
  swift_release();
  swift_release();
  return _swift_deallocObject(v0, 72, 7);
}

void *sub_10017A180(void *a1)
{
  return sub_100176DC8(a1, v1[4], v1[5], v1[6], v1[7], v1[8], v1[2], v1[3]);
}

uint64_t sub_10017A194()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for ObservableContainer.Event() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  size_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v7(v0 + v4, v1);
  if (EnumCaseMultiPayload == 1)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v7(v0 + v4 + *(int *)(TupleTypeMetadata2 + 48), v1);
  }
  return _swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10017A2D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ObservableContainer.Event() - 8);
  return (*(uint64_t (**)(unint64_t))(v0 + 32))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_10017A344(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10017A3D4()
{
  uint64_t v1 = v0;
  uint64_t v57 = sub_1001EAF60();
  uint64_t v2 = *(void *)(v57 - 8);
  uint64_t v3 = __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  size_t v7 = (char *)&v52 - v6;
  __chkstk_darwin(v5);
  unsigned int v9 = (char *)&v52 - v8;
  id v10 = [self defaultManager];
  _s11PersistenceVMa();
  _s15PersistentStateOMa(0);
  sub_10017C604(&qword_100293EB8, (void (*)(uint64_t))_s15PersistentStateOMa);
  uint64_t v11 = sub_1001EAC40();
  unint64_t v13 = v12;
  sub_1001EAEF0();
  sub_1001EAEC0(v14);
  uint64_t v16 = v15;
  id v59 = 0;
  unsigned int v17 = [v10 createDirectoryAtURL:v15 withIntermediateDirectories:1 attributes:0 error:&v59];

  if (v17)
  {
    id v18 = v59;
    sub_1001EAFF0();
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1001EB560();
    sub_10007CFF8(v40, (uint64_t)qword_1002A4198);
    sub_100093680(v11, v13);
    uint64_t v41 = sub_1001EB540();
    os_log_type_t v42 = sub_1001EC910();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = v11;
      uint64_t v44 = v10;
      uint64_t v45 = v2;
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 134217984;
      uint64_t v47 = v46;
      unint64_t v48 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          LODWORD(v48) = HIDWORD(v43) - v43;
          if (__OFSUB__(HIDWORD(v43), v43))
          {
            __break(1u);
LABEL_20:
            __break(1u);
          }
          unint64_t v48 = (int)v48;
LABEL_17:
          id v59 = (id)v48;
          sub_1001ECBC0();
          sub_100081714(v43, v13);
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "[Persistence] Saved (%ld bytes)", v47, 0xCu);
          swift_slowDealloc();

          uint64_t v11 = v43;
          uint64_t v2 = v45;
          break;
        case 2uLL:
          uint64_t v50 = *(void *)(v43 + 16);
          uint64_t v49 = *(void *)(v43 + 24);
          BOOL v51 = __OFSUB__(v49, v50);
          unint64_t v48 = v49 - v50;
          if (!v51) {
            goto LABEL_17;
          }
          goto LABEL_20;
        case 3uLL:
          goto LABEL_17;
        default:
          unint64_t v48 = BYTE6(v13);
          goto LABEL_17;
      }
    }
    else
    {

      sub_100081714(v11, v13);
    }
    sub_100081714(v11, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v9, v57);
  }
  else
  {
    id v19 = v59;
    uint64_t v55 = (char *)v13;
    int v20 = v10;
    id v21 = v19;
    sub_1001EAE60();

    swift_willThrow();
    sub_100081714(v11, (unint64_t)v55);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v57);
    unsigned int v22 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v22(v7, v1, v57);
    uint64_t v23 = v56;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_1001EB560();
    sub_10007CFF8(v24, (uint64_t)qword_1002A4198);
    v22(v23, (uint64_t)v7, v57);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v25 = sub_1001EB540();
    os_log_type_t v26 = sub_1001EC8F0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v55 = v7;
      uint64_t v28 = v27;
      uint64_t v53 = (void *)swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      id v59 = v54;
      *(_DWORD *)uint64_t v28 = 136315394;
      sub_10017C604(&qword_100293400, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v29 = v57;
      uint64_t v30 = sub_1001ED040();
      uint64_t v58 = sub_1001A8090(v30, v31, (uint64_t *)&v59);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      uint64_t v32 = v29;
      uint64_t v33 = *(void (**)(char *))(v2 + 8);
      uint64_t v34 = v23;
      uint64_t v35 = v32;
      v33(v34);
      *(_WORD *)(v28 + 12) = 2112;
      swift_errorRetain();
      uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v58 = v36;
      sub_1001ECBC0();
      void *v53 = v36;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[Persistence] Failed to store to url '%s', error: %@", (uint8_t *)v28, 0x16u);
      sub_10007DC14(&qword_100293190);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return ((uint64_t (*)(char *, uint64_t))v33)(v55, v35);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v2 + 8);
      uint64_t v39 = v57;
      v38(v23, v57);
      swift_errorRelease();
      return ((uint64_t (*)(char *, uint64_t))v38)(v7, v39);
    }
  }
}

uint64_t sub_10017AB44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001EAF60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)&v28 - v5;
  id v6 = [self defaultManager];
  uint64_t v7 = (uint64_t)sub_10017BE58();
  if (v7 <= 100000)
  {
    uint64_t v31 = v3;
    uint64_t v12 = a1;
    uint64_t v13 = sub_1001EAF80();
    unint64_t v15 = v14;
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1001EB560();
    sub_10007CFF8(v16, (uint64_t)qword_1002A4198);
    sub_100093680(v13, v15);
    unsigned int v17 = sub_1001EB540();
    int v18 = sub_1001EC910();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      LODWORD(v29) = v18;
      unint64_t v30 = v15 >> 62;
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v19 = 134217984;
      int v20 = v19;
      uint64_t v21 = 0;
      switch(v30)
      {
        case 1uLL:
          LODWORD(v21) = HIDWORD(v13) - v13;
          if (__OFSUB__(HIDWORD(v13), v13))
          {
            __break(1u);
LABEL_19:
            __break(1u);
            JUMPOUT(0x10017B320);
          }
          uint64_t v21 = (int)v21;
LABEL_16:
          uint64_t v33 = v21;
          sub_1001ECBC0();
          sub_100081714(v13, v15);
          _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v29, "[Persistence] Loaded %ld bytes", v20, 0xCu);
          swift_slowDealloc();
          break;
        case 2uLL:
          uint64_t v23 = *(void *)(v13 + 16);
          uint64_t v22 = *(void *)(v13 + 24);
          BOOL v24 = __OFSUB__(v22, v23);
          uint64_t v21 = v22 - v23;
          if (!v24) {
            goto LABEL_16;
          }
          goto LABEL_19;
        case 3uLL:
          goto LABEL_16;
        default:
          uint64_t v21 = BYTE6(v15);
          goto LABEL_16;
      }
    }
    else
    {
      sub_100081714(v13, v15);
    }

    _s11PersistenceVMa();
    uint64_t v25 = _s15PersistentStateOMa(0);
    sub_10017C604(&qword_1002960E8, (void (*)(uint64_t))_s15PersistentStateOMa);
    sub_1001EABA0();
    sub_100081714(v13, v15);

    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 0, 1, v25);
  }
  else
  {
    if (qword_1002910B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1001EB560();
    sub_10007CFF8(v8, (uint64_t)qword_1002A4198);
    unsigned int v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC8F0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134218240;
      uint64_t v33 = v7;
      sub_1001ECBC0();
      *(_WORD *)(v11 + 12) = 2048;
      uint64_t v33 = 100000;
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "[Persistence] Refusing to decode data from large file (%ld > %ld)", (uint8_t *)v11, 0x16u);
      swift_slowDealloc();
    }

    uint64_t v26 = _s15PersistentStateOMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a1, 1, 1, v26);
  }
}

void sub_10017B330()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001EAF60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - v7;
  id v9 = [self defaultManager];
  sub_1001EAEC0(v10);
  uint64_t v12 = v11;
  id v36 = 0;
  unsigned int v13 = [v9 removeItemAtURL:v11 error:&v36];

  if (v13)
  {
    uint64_t v14 = qword_1002910B8;
    id v15 = v36;
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_1001EB560();
    sub_10007CFF8(v16, (uint64_t)qword_1002A4198);
    unsigned int v17 = sub_1001EB540();
    os_log_type_t v18 = sub_1001EC910();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Persistence] Deleted", v19, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    id v20 = v36;
    sub_1001EAE60();

    swift_willThrow();
    swift_getErrorValue();
    if (sub_10017C2AC(v35))
    {
      swift_errorRelease();
    }
    else
    {
      uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      v21(v8, v1, v2);
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1001EB560();
      sub_10007CFF8(v22, (uint64_t)qword_1002A4198);
      v21(v6, (uint64_t)v8, v2);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v23 = sub_1001EB540();
      os_log_type_t v24 = sub_1001EC8F0();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v31 = (void *)swift_slowAlloc();
        uint64_t v33 = (void *)swift_slowAlloc();
        id v36 = v33;
        *(_DWORD *)uint64_t v25 = 136315394;
        uint64_t v32 = (void (*)(char *, uint64_t))(v25 + 4);
        sub_10017C604(&qword_100293400, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v26 = sub_1001ED040();
        uint64_t v34 = sub_1001A8090(v26, v27, (uint64_t *)&v36);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        uint64_t v32 = *(void (**)(char *, uint64_t))(v3 + 8);
        v32(v6, v2);
        *(_WORD *)(v25 + 12) = 2112;
        swift_errorRetain();
        uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v34 = v28;
        sub_1001ECBC0();
        *uint64_t v31 = v28;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "[Persistence] Failed to reset url '%s', error: %@", (uint8_t *)v25, 0x16u);
        sub_10007DC14(&qword_100293190);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v32(v8, v2);
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        uint64_t v29 = *(void (**)(char *, uint64_t))(v3 + 8);
        v29(v6, v2);
        swift_errorRelease();
        v29(v8, v2);
      }
    }
  }
}

uint64_t sub_10017B87C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v39 = a2;
  uint64_t v41 = a3;
  uint64_t v4 = sub_1001EAC00();
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_log_type_t v10 = (char *)&v38 - v9;
  uint64_t v11 = sub_1001EAF60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  os_log_type_t v42 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v40((char *)&v38 - v15, a1, v11);
  uint64_t v17 = sub_1001EAE80();
  id v19 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t v18 = v12 + 8;
  uint64_t v43 = v19;
  v19((uint64_t)v16, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v38 = v18;
  uint64_t v44 = a1;
  sub_1001EAC60();
  swift_allocObject();
  uint64_t v17 = sub_1001EAC50();
  sub_10007DC14(&qword_100293BF0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100215310;
  sub_1001EABD0();
  sub_1001EABF0();
  v46[0] = v20;
  sub_10017C604(&qword_100293BF8, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
  sub_10007DC14(&qword_100293C00);
  sub_10013FF54();
  sub_1001ECC30();
  uint64_t v21 = (void (*)(uint64_t *, void))sub_1001EAC10();
  sub_10010D8C4(v10, (uint64_t)v8);
  uint64_t v22 = (void (*)(char *, uint64_t))*((void *)v5 + 1);
  v22(v8, v4);
  v22(v10, v4);
  v21(v46, 0);
  if (v39)
  {
    sub_1001EABE0();
    uint64_t v23 = (void (*)(uint64_t *, void))sub_1001EAC10();
    sub_10010D8C4(v10, (uint64_t)v8);
    v22(v8, v4);
    v22(v10, v4);
    v23(v46, 0);
  }
  sub_1001EABC0();
  swift_allocObject();
  uint64_t v24 = sub_1001EABB0();
  uint64_t v5 = v40;
  uint64_t v25 = v41;
  a1 = v44;
  v40((char *)v41, v44, v11);
  uint64_t v26 = _s11PersistenceVMa();
  *(void *)(v25 + *(int *)(v26 + 20)) = v17;
  *(void *)(v25 + *(int *)(v26 + 24)) = v24;
  uint64_t v27 = qword_1002910B8;
  swift_retain();
  swift_retain();
  if (v27 != -1) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v28 = sub_1001EB560();
  sub_10007CFF8(v28, (uint64_t)qword_1002A4198);
  uint64_t v29 = v42;
  v5(v42, a1, v11);
  uint64_t v30 = sub_1001EB540();
  os_log_type_t v31 = sub_1001EC8D0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    v46[0] = swift_slowAlloc();
    uint64_t v41 = v17;
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v33 = sub_1001EAE90();
    uint64_t v45 = sub_1001A8090(v33, v34, v46);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    uint64_t v35 = v43;
    v43((uint64_t)v29, v11);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[Persistence] URL: '%s'", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();

    return v35(v44, v11);
  }
  else
  {

    uint64_t v37 = v43;
    v43((uint64_t)v29, v11);
    swift_release();
    swift_release();
    return v37(a1, v11);
  }
}

id sub_10017BE58()
{
  sub_1001EAF20(0);
  NSString v1 = sub_1001EC340();
  swift_bridgeObjectRelease();
  *(void *)&long long v23 = 0;
  id v2 = [v0 attributesOfItemAtPath:v1 error:&v23];

  uint64_t v3 = (void *)v23;
  if (v2)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_10017C604(&qword_1002916B0, type metadata accessor for FileAttributeKey);
    uint64_t v4 = sub_1001EC260();
    id v5 = v3;

    if (*(void *)(v4 + 16))
    {
      uint64_t v6 = NSFileSize;
      unint64_t v7 = sub_1001A8868((uint64_t)v6);
      if (v8)
      {
        sub_100087AE8(*(void *)(v4 + 56) + 32 * v7, (uint64_t)&v23);
      }
      else
      {
        long long v23 = 0u;
        long long v24 = 0u;
      }
    }
    else
    {
      long long v23 = 0u;
      long long v24 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v24 + 1))
    {
      sub_100125B2C(&v23, v25);
      sub_100087AE8((uint64_t)v25, (uint64_t)&v23);
      sub_10017C5C4();
      if (swift_dynamicCast())
      {
        id v9 = (id)sub_1001EC790();

        sub_1000947F0((uint64_t)v25);
        return v9;
      }
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1001EB560();
      sub_10007CFF8(v14, (uint64_t)qword_1002A4198);
      sub_100087AE8((uint64_t)v25, (uint64_t)&v23);
      uint64_t v15 = sub_1001EB540();
      os_log_type_t v16 = sub_1001EC8F0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136446210;
        sub_100087AE8((uint64_t)&v23, (uint64_t)v21);
        uint64_t v18 = sub_1001EC3D0();
        v21[0] = (id)sub_1001A8090(v18, v19, &v22);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1000947F0((uint64_t)&v23);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Persistence] Unable to convert reported file size: %{public}s to NSNumber", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_1000947F0((uint64_t)&v23);
      }
      sub_1000947F0((uint64_t)v25);
    }
    else
    {
      sub_100152D74((uint64_t)&v23);
      if (qword_1002910B8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1001EB560();
      sub_10007CFF8(v10, (uint64_t)qword_1002A4198);
      uint64_t v11 = sub_1001EB540();
      os_log_type_t v12 = sub_1001EC8F0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[Persistence] No file size was returned", v13, 2u);
        swift_slowDealloc();
      }
    }
    return 0;
  }
  id v9 = (id)v23;
  sub_1001EAE60();

  swift_willThrow();
  return v9;
}

BOOL sub_10017C2AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v24 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v24 - v8, v2, a1);
  if (sub_1001ED060())
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11, v9, a1);
  }
  os_log_type_t v12 = (void *)sub_1001EAE50();
  swift_errorRelease();
  id v13 = [v12 domain];

  uint64_t v14 = sub_1001EC370();
  uint64_t v16 = v15;

  v10(v7, v2, a1);
  if (sub_1001ED060())
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v17, v7, a1);
  }
  uint64_t v18 = (void *)sub_1001EAE50();
  swift_errorRelease();
  unint64_t v19 = (unint64_t)[v18 code];

  if (v14 == sub_1001EC370() && v16 == v20)
  {
    swift_bridgeObjectRelease_n();
    return (v19 & 0xFFFFFFFFFFFFFEFFLL) == 4;
  }
  char v22 = sub_1001ED080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if (v22) {
    return (v19 & 0xFFFFFFFFFFFFFEFFLL) == 4;
  }
  return result;
}

uint64_t _s11PersistenceVMa()
{
  uint64_t result = qword_100296148;
  if (!qword_100296148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_10017C5C4()
{
  unint64_t result = qword_100293B60;
  if (!qword_100293B60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100293B60);
  }
  return result;
}

uint64_t sub_10017C604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10017C64C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1001EAF60();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10017C728(uint64_t a1)
{
  uint64_t v2 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_10017C7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10017C838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10017C8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10017C964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EAF60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_10017C9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017CA10);
}

uint64_t sub_10017CA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EAF60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_10016EAD4(to, 0) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10017CAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017CAE4);
}

uint64_t sub_10017CAE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001EAF60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10017CBA0()
{
  uint64_t result = sub_1001EAF60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for UserNotification()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UserNotification(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UserNotification(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for UserNotification(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 8sub_10016EAD4(to, 0) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for UserNotification(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_10016EAD4(to, 0) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8sub_10016EAD4(to, 0) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserNotification(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserNotification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_10016EAD4(to, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserNotification()
{
  return &type metadata for UserNotification;
}

ValueMetadata *type metadata accessor for UserNotification.ID()
{
  return &type metadata for UserNotification.ID;
}

uint64_t sub_10017CFEC()
{
  return sub_1001EC5A0();
}

unint64_t sub_10017D044()
{
  unint64_t result = qword_100296188;
  if (!qword_100296188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296188);
  }
  return result;
}

unint64_t sub_10017D09C()
{
  unint64_t result = qword_100296190;
  if (!qword_100296190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296190);
  }
  return result;
}

unint64_t sub_10017D0F0()
{
  unint64_t result = qword_100296198;
  if (!qword_100296198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296198);
  }
  return result;
}

ValueMetadata *type metadata accessor for UserNotification.ThreadID()
{
  return &type metadata for UserNotification.ThreadID;
}

ValueMetadata *type metadata accessor for UserNotification.CategoryID()
{
  return &type metadata for UserNotification.CategoryID;
}

unint64_t sub_10017D168()
{
  unint64_t result = qword_1002961A0;
  if (!qword_1002961A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002961A0);
  }
  return result;
}

unint64_t sub_10017D1C0()
{
  unint64_t result = qword_1002961A8[0];
  if (!qword_1002961A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1002961A8);
  }
  return result;
}

void sub_10017D224()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1001EBF80();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EAF60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007DC14(&qword_1002963D0);
  __chkstk_darwin(v10 - 8);
  os_log_type_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *((void *)*v0 + 21);
  if (*(id *)((char *)v0 + v13))
  {
    swift_retain_n();
    uint64_t v14 = sub_1001EB540();
    os_log_type_t v15 = sub_1001EC910();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      v30[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      if (*((unsigned char *)v1 + *((void *)*v1 + 22))) {
        uint64_t v17 = 0x657463656E6E6F63;
      }
      else {
        uint64_t v17 = 0x697463656E6E6F63;
      }
      if (*((unsigned char *)v1 + *((void *)*v1 + 22))) {
        unint64_t v18 = 0xE900000000000064;
      }
      else {
        unint64_t v18 = 0xEA0000000000676ELL;
      }
      v30[3] = sub_1001A8090(v17, v18, v30);
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "CRDTModelFileSyncTransport reconnect: Already %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    if (*(id *)((char *)v1 + v13)) {
      swift_retain();
    }
    else {
      __break(1u);
    }
  }
  else
  {
    uint64_t v28 = v3;
    uint64_t v29 = v13;
    unint64_t v19 = sub_1001EB540();
    os_log_type_t v20 = sub_1001EC910();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "CRDTModelFileSyncTransport reconnect: About to initialize file sync manager", v21, 2u);
      swift_slowDealloc();
    }

    char v22 = (void *)sub_10007DC14(&qword_1002963D8);
    v27[0] = v1[4];
    v27[1] = v22;
    long long v23 = (char *)v1 + *((void *)*v1 + 16);
    uint64_t v24 = sub_10007DC14((uint64_t *)&unk_1002933D0);
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v12, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v12, 0, 1, v24);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, (char *)v1 + *((void *)*v1 + 17), v6);
    (*(void (**)(char *, void, uint64_t))(v28 + 104))(v5, enum case for CRCodableVersion.version3(_:), v2);
    id v26 = v27[0];
    *(id *)((char *)v1 + v29) = (id)sub_1001EBFD0();
    swift_retain();
    swift_release();
    sub_1001EBF90();
    v30[0] = sub_1001EBFB0();
    swift_allocObject();
    swift_weakInit();
    swift_allocObject();
    swift_weakInit();
    sub_10007DC14(&qword_1002963E0);
    sub_1000815A4(&qword_1002963E8, &qword_1002963E0);
    sub_1001EB5C0();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_1001EB580();
    swift_endAccess();
    swift_release();
  }
}

uint64_t sub_10017D850(uint64_t a1)
{
  uint64_t v2 = sub_1001EB560();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - v7;
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, Strong + *(void *)(*(void *)Strong + 192), v2);
      swift_errorRetain();
      swift_release();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v10 = sub_1001EB540();
      os_log_type_t v11 = sub_1001EC8F0();
      if (os_log_type_enabled(v10, v11))
      {
        os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        v22[0] = v20;
        *(_DWORD *)os_log_type_t v12 = 136315138;
        v19[1] = v12 + 4;
        swift_getErrorValue();
        uint64_t v13 = sub_1001ED110();
        uint64_t v21 = sub_1001A8090(v13, v14, v22);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "CRDTModelFileSyncTransport sink: error: %s", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      swift_errorRetain();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_10017DC2C();
      swift_errorRelease();
      return swift_release();
    }
    else
    {
      return swift_errorRelease();
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, result + *(void *)(*(void *)result + 192), v2);
      swift_release();
      uint64_t v16 = sub_1001EB540();
      os_log_type_t v17 = sub_1001EC910();
      if (os_log_type_enabled(v16, v17))
      {
        unint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "CRDTModelFileSyncTransport sink: finished", v18, 2u);
        swift_slowDealloc();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  return result;
}

uint64_t sub_10017DC2C()
{
  uint64_t v1 = sub_1001EBA60();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EBAA0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + *(void *)(*(void *)v0 + 152));
  aBlock[4] = sub_100188484;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_10026A450;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_1001EBA80();
  v11[1] = _swiftEmptyArrayStorage;
  sub_1001886CC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_10017DEE4(uint64_t a1)
{
  uint64_t v2 = sub_1001EB560();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, Strong + *(void *)(*(void *)Strong + 192), v2);
    swift_release();
    uint64_t v7 = sub_1001EB540();
    os_log_type_t v8 = sub_1001EC8E0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "CRDTModelFileSyncTransport sink: receiveValue", v9, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10017E0BC(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10017E0BC(uint64_t a1)
{
  uint64_t v3 = sub_1001EBA60();
  uint64_t v19 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001EBAA0();
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v18 = v6;
  __chkstk_darwin(v6);
  os_log_type_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  v16[1] = *(void *)(v1 + *(void *)(*(void *)v1 + 152));
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_10018841C;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_10026A428;
  unint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1001EBA80();
  uint64_t v20 = _swiftEmptyArrayStorage;
  sub_1001886CC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
  return swift_release();
}

void sub_10017E458(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 176);
  if ((*(unsigned char *)(v1 + v4) & 1) == 0)
  {
    if (*(void *)(v1 + *(void *)(*(void *)v1 + 168)))
    {
      *(unsigned char *)(v1 + v4) = 1;
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_1000C7204();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v5 = sub_1001EB540();
      os_log_type_t v6 = sub_1001EC8F0();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "CRDTModelFileSyncTransport: got disconnected before load complete", v7, 2u);
        swift_slowDealloc();
      }
    }
  }
  os_log_type_t v8 = *(void (**)(uint64_t))(v2 + *(void *)(*(void *)v2 + 144));
  if (v8)
  {
    swift_retain();
    v8(a1);
    sub_1000B0100((uint64_t)v8);
  }
}

uint64_t sub_10017E5E0(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + *(void *)(*(void *)a1 + 160));
  swift_beginAccess();
  *uint64_t v2 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(void *)(*(void *)a1 + 168)) = 0;
  swift_release();
  *(unsigned char *)(a1 + *(void *)(*(void *)a1 + 176)) = 0;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000C69A0();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10017E69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v6 = sub_1001EBA60();
  uint64_t v24 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001EBAA0();
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  if (*(void *)(v3 + *(void *)(*(void *)v3 + 168)))
  {
    swift_retain();
    sub_1001EBFA0();
    return swift_release();
  }
  else
  {
    v21[1] = *(void *)(v3 + *(void *)(*(void *)v3 + 152));
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
    unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v4;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    uint64_t v18 = (void *)(v17 + ((v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v19 = v26;
    *uint64_t v18 = v25;
    v18[1] = v19;
    aBlock[4] = sub_100188220;
    void aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000DB998;
    void aBlock[3] = &unk_10026A3B0;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1001EBA80();
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_1001886CC((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10007DC14((uint64_t *)&unk_100291BF0);
    sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
    sub_1001ECC30();
    sub_1001EC9F0();
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v23);
    return swift_release();
  }
}

uint64_t sub_10017EAE0()
{
  return sub_1001EC9E0();
}

uint64_t CRDTModelFileSyncManager.model.getter()
{
  return sub_1001EC9E0();
}

uint64_t sub_10017EB98()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 80);
}

uint64_t CRDTModelFileSyncManager.enableCloudSync.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t sub_10017EC0C(char a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 8sub_10016EAD4(to, 0) = a1;
  return result;
}

uint64_t CRDTModelFileSyncManager.enableCloudSync.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 8sub_10016EAD4(to, 0) = a1;
  return result;
}

uint64_t (*sub_10017EC90())()
{
  return j_j__swift_endAccess;
}

uint64_t (*CRDTModelFileSyncManager.enableCloudSync.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_10017ED3C()
{
  sub_10007DC14(&qword_100291BB0);
  sub_1001EC9E0();
  return v1;
}

uint64_t CRDTModelFileSyncManager.observable.getter()
{
  type metadata accessor for ModelState();
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  sub_1001EC9E0();
  return v1;
}

uint64_t sub_10017EE80(uint64_t a1)
{
  uint64_t v3 = sub_1001EBA60();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *v1;
  sub_1001EBA50();
  uint64_t v10 = v7;
  uint64_t v11 = a1;
  char v12 = 0;
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CRDTModelFileSyncManager.sync(_:)(uint64_t a1)
{
  return CRDTModelFileSyncManager.sync(_:isRemote:)(a1, 0);
}

void *CRDTModelFileSyncManager.__allocating_init(clientName:groupContext:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, char a3, char *a4, char *a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_10018733C(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v6;
}

uint64_t CRDTModelFileSyncManager.modelSyncVersionObservable.getter()
{
  sub_10007DC14((uint64_t *)&unk_1002933C0);
  sub_1001EC9E0();
  return v1;
}

uint64_t CRDTModelFileSyncManager.syncAfterLoaded(_:isRemote:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1001EBA60();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = &v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001EBA50();
  uint64_t v15 = v4;
  uint64_t v16 = a1;
  char v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  sub_10007DC14((uint64_t *)&unk_100293450);
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t CRDTModelFileSyncManager.modelSyncVersion.getter()
{
  return sub_1001EC9E0();
}

unint64_t sub_10017F214()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  sub_1001ECD20(45);
  unint64_t v5 = ReadingHistoryModel.description.getter();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  unint64_t v16 = v5;
  unint64_t v17 = v7;
  v18._countAndFlagsBits = 0x646564616F6C202CLL;
  v18._object = (void *)0xE90000000000003DLL;
  sub_1001EC490(v18);
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  if (*(unsigned char *)(v1 + *(int *)(v8 + 44))) {
    v9._countAndFlagsBits = 0x7964616572;
  }
  else {
    v9._countAndFlagsBits = 0x676E6964616F6CLL;
  }
  if (*(unsigned char *)(v1 + *(int *)(v8 + 44))) {
    uint64_t v10 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v10 = (void *)0xE700000000000000;
  }
  v9._object = v10;
  sub_1001EC490(v9);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 0x6F537473616C202CLL;
  v19._object = (void *)0xED00003D65637275;
  sub_1001EC490(v19);
  v20._countAndFlagsBits = sub_100170DF8();
  sub_1001EC490(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0x697369766572202CLL;
  v21._object = (void *)0xEF3D6F666E496E6FLL;
  sub_1001EC490(v21);
  sub_1000936F8(v1 + *(int *)(v8 + 52), (uint64_t)v4, (uint64_t *)&unk_100291B90);
  uint64_t v11 = type metadata accessor for CRDTModelRevisionInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v4, 1, v11) == 1)
  {
    sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_100291B90);
    char v12 = (void *)0xE300000000000000;
    uint64_t v13 = 7104878;
  }
  else
  {
    uint64_t v13 = CRDTModelRevisionInfo.description.getter();
    char v12 = v14;
    sub_10018852C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CRDTModelRevisionInfo);
  }
  v22._countAndFlagsBits = v13;
  v22._object = v12;
  sub_1001EC490(v22);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_10017F46C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t CRDTModelFileSyncInfo.additionalFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CRDTModelFileSyncInfo.additionalFields.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t static CRDTModelFileSyncInfo.fields.getter()
{
  return 0x6C65646F6DLL;
}

uint64_t CRDTModelFileSyncInfo.init()@<X0>(uint64_t a1@<X8>)
{
  sub_1001EBEE0();
  uint64_t result = type metadata accessor for CRDTModelFileSyncInfo();
  *(void *)(a1 + *(int *)(result + 52)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t CRDTModelFileSyncInfo.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + *(int *)(type metadata accessor for CRDTModelFileSyncInfo() + 52)) = &_swiftEmptyDictionarySingleton;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 40))(a3, a1, a2);
}

uint64_t sub_10017F640()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_10017F674(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return static CRStruct_1.fieldKeys.getter(a1, WitnessTable);
}

uint64_t sub_10017F6C8@<X0>(uint64_t a1@<X8>)
{
  return CRDTModelFileSyncInfo.init()(a1);
}

uint64_t sub_10017F6E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRType.context.getter(a1, WitnessTable);
}

uint64_t sub_10017F734(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.actionUndoingDifference(from:)(a1, a2, WitnessTable);
}

uint64_t sub_10017F79C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.apply(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10017F7FC()
{
  swift_getWitnessTable();
  return sub_1001EBC10();
}

uint64_t sub_10017F85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.delta(_:from:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_10017F8D8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.canMerge(delta:)(a1, a2, WitnessTable);
}

uint64_t sub_10017F938(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.merge(delta:)(a1, a2, WitnessTable);
}

uint64_t sub_10017F998(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.copy(renamingReferences:)(a1, a2, WitnessTable);
}

uint64_t sub_10017FA00(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.copy(renamingReferences:)(a1, a2, WitnessTable);
}

uint64_t sub_10017FA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_10017FAE4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.visitReferences(_:)(a1, a2, WitnessTable);
}

BOOL sub_10017FB44()
{
  swift_getWitnessTable();
  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_10017FB98(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10017FBFC()
{
  swift_getWitnessTable();
  return sub_1001EBBE0();
}

uint64_t sub_10017FC5C()
{
  return sub_1001EBFF0();
}

uint64_t sub_10017FCC4()
{
  return sub_1001EC000();
}

uint64_t sub_10017FD3C()
{
  return sub_1001EBBA0();
}

uint64_t sub_10017FDA0()
{
  return sub_1001EBBF0();
}

uint64_t sub_10017FE00(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRStruct_1.minEncodingVersion.getter(a1, WitnessTable);
}

uint64_t CRDTModelFileSyncInfo.description.getter()
{
  return sub_1001ED040();
}

uint64_t static CRDTModelFileSyncInfo.modelName.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (*(uint64_t (**)(void))(a4 + 8))();
  v6._countAndFlagsBits = 0x666E49636E79532DLL;
  v6._object = (void *)0xE90000000000006FLL;
  sub_1001EC490(v6);
  return v5;
}

uint64_t sub_10017FEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CRDTModelFileSyncInfo.modelName.getter(*(void *)(a1 + 16), a2, a3, *(void *)(a1 + 40));
}

uint64_t CRDTModelFileSyncManager.DefaultConfig.storeDirectory.getter()
{
  uint64_t v0 = sub_1001EAF60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self books];
  id v5 = [v4 containerURL];

  sub_1001EAF10();
  sub_1001EAEE0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10018003C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

BOOL sub_100180190()
{
  uint64_t v0 = type metadata accessor for ModelState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - v2;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  int v4 = v3[*(int *)(v0 + 44)];
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return static CRDTModelLocalFileManager.SyncError.__derived_enum_equals(_:_:)(v4, 1);
}

uint64_t sub_1001802E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v2);
  int v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001EC9E0();
  swift_release();
  sub_10018861C((uint64_t)v4, a1, type metadata accessor for ReadingHistoryModel);
  return sub_1000816A4((uint64_t)v4, (uint64_t *)&unk_100291CA0);
}

uint64_t sub_1001803E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 80);
  uint64_t v4 = type metadata accessor for ModelState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - v6;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v3 - 8) + 16))(a2, v7, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10018054C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001803E4(v1, a1);
}

uint64_t sub_100180568()
{
  return sub_100180594();
}

uint64_t sub_100180594()
{
  return swift_release();
}

uint64_t CRDTModelFileSyncManager.disableReadingInBackground.getter()
{
  return sub_1000C9E34() & 1;
}

uint64_t CRDTModelFileSyncManager.disableReadingInBackground.setter(char a1)
{
  return sub_1000C9EA8(a1);
}

uint64_t (*CRDTModelFileSyncManager.disableReadingInBackground.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = sub_1000C9E34() & 1;
  return sub_1001806AC;
}

uint64_t sub_1001806AC(uint64_t a1)
{
  return sub_1000C9EA8(*(unsigned char *)(a1 + 8));
}

id CRDTModelFileSyncManager.crdtContext.getter()
{
  return *(id *)(v0 + 96);
}

uint64_t CRDTModelFileSyncManager.__allocating_init(config:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100180710(a1, a2, a3, a4, (uint64_t (*)(void))sub_1001872D8);
}

uint64_t CRDTModelFileSyncManager.init(config:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100180710(a1, a2, a3, a4, (uint64_t (*)(void))sub_100185FB0);
}

uint64_t sub_100180710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a5();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_10018075C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001807BC(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001807BC(uint64_t a1)
{
  uint64_t v3 = sub_1001EBA60();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001EBA50();
  uint64_t v9 = v1;
  uint64_t v10 = a1;
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1001808C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v134 = a1;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v4 - 8);
  uint64_t v124 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v3[10];
  uint64_t v7 = v3[11];
  uint64_t v8 = v3[12];
  uint64_t v9 = type metadata accessor for ModelState();
  uint64_t v126 = *(void *)(v9 - 8);
  uint64_t v127 = v9;
  __chkstk_darwin(v9);
  uint64_t v125 = (uint64_t)&v103 - v10;
  uint64_t v118 = type metadata accessor for ModelState.Source();
  os_log_t v117 = *(os_log_t *)(v118 - 8);
  uint64_t v11 = __chkstk_darwin(v118);
  os_log_type_t v121 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v116 = (char *)&v103 - v14;
  uint64_t v132 = *(void *)(v6 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v120 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v129 = (char *)&v103 - v17;
  uint64_t v18 = v3[13];
  uint64_t v133 = v6;
  uint64_t v139 = v6;
  uint64_t v140 = v7;
  uint64_t v123 = v7;
  uint64_t v122 = v8;
  uint64_t v141 = v8;
  uint64_t v142 = v18;
  uint64_t v19 = type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v20 = sub_1001EC0F0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v103 - v23;
  uint64_t v25 = *(void *)(v19 - 8);
  uint64_t v26 = __chkstk_darwin(v22);
  uint64_t v128 = (char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  unint64_t v107 = (char *)&v103 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v113 = (char *)&v103 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v108 = (char *)&v103 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v106 = (char *)&v103 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v103 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v103 - v39;
  uint64_t v41 = (uint64_t)v2 + v3[24];
  swift_beginAccess();
  os_log_type_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v112 = v21 + 16;
  unint64_t v111 = v42;
  v42(v24, v41, v20);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1001EC0D0();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v114 = v24;
  uint64_t v115 = v21 + 8;
  id v109 = v44;
  v44(v24, v20);
  uint64_t v105 = v20;
  uint64_t v110 = WitnessTable;
  sub_1001EC0D0();
  BOOL v130 = sub_100180190();
  swift_getWitnessTable();
  char v45 = sub_1001EBC10();
  uint64_t v135 = v2;
  uint64_t v136 = v25;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  if (v45)
  {
    uint64_t v134 = v41;
    uint64_t v47 = v106;
    uint64_t v131 = v38;
    v46(v106, v38, v19);
    unint64_t v48 = v108;
    uint64_t v119 = v40;
    v46(v108, v40, v19);
    uint64_t v49 = sub_1001EB540();
    os_log_type_t v50 = sub_1001EC910();
    int v51 = v50;
    BOOL v52 = os_log_type_enabled(v49, v50);
    uint64_t v104 = v19;
    if (v52)
    {
      uint64_t v53 = swift_slowAlloc();
      unint64_t v107 = (char *)swift_slowAlloc();
      Class v137 = v107;
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v103 = *(void *)(v19 + 32);
      LODWORD(v128) = v51;
      uint64_t v54 = sub_1001ED040();
      uint64_t v138 = sub_1001A8090(v54, v55, (uint64_t *)&v137);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      uint64_t v56 = *(void (**)(char *, uint64_t))(v136 + 8);
      v56(v47, v19);
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v57 = sub_1001ED040();
      uint64_t v138 = sub_1001A8090(v57, v58, (uint64_t *)&v137);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      v56(v48, v19);
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v128, "CRDTModelFileSyncManager q_handle -- incoming=%s and existing=%s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v56 = *(void (**)(char *, uint64_t))(v136 + 8);
      v56(v47, v19);
      uint64_t v59 = ((uint64_t (*)(char *, uint64_t))v56)(v48, v19);
    }
    uint64_t v72 = v129;
    __chkstk_darwin(v59);
    uint64_t v73 = v131;
    *(&v103 - 2) = (uint64_t)v131;
    uint64_t v74 = v134;
    swift_beginAccess();
    uint64_t v75 = v105;
    sub_1001EC0A0();
    swift_endAccess();
    uint64_t v76 = v132;
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
    uint64_t v78 = v73;
    uint64_t v79 = v133;
    v77(v72, v78, v133);
    if (sub_100180190())
    {
      uint64_t v80 = v116;
      v77(v116, v72, v79);
      uint64_t v81 = 0;
    }
    else
    {
      uint64_t v81 = 2;
      uint64_t v80 = v116;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v80, v81, 2, v79);
    int v91 = v114;
    v111(v114, v74, v75);
    uint64_t v92 = v113;
    sub_1001EC0D0();
    v109(v91, v75);
    uint64_t v93 = (uint64_t)v120;
    v77(v120, v92, v79);
    uint64_t v19 = v104;
    uint64_t v128 = (char *)v56;
    v56(v92, v104);
    os_log_t v94 = v117;
    uint64_t v95 = (uint64_t)v121;
    uint64_t v96 = v118;
    ((void (*)(char *, char *, uint64_t))v117[2].isa)(v121, v80, v118);
    uint64_t v97 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v98 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v124, 1, 1, v97);
    uint64_t v99 = v125;
    ModelState.init(model:loaded:source:revisionInfo:)(v93, 1, v95, v98, v79, v125);
    sub_100181B4C(v99, 0x656C646E61685F71, 0xE800000000000000);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v99, v127);
    sub_1001821A0();
    ((void (*)(char *, uint64_t))v94[1].isa)(v80, v96);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v129, v79);
    if (v130)
    {
      uint64_t v38 = v131;
      uint64_t v40 = v119;
      goto LABEL_20;
    }
    BOOL v100 = sub_100180190();
    uint64_t v38 = v131;
    uint64_t v40 = v119;
    if (!v100) {
      goto LABEL_20;
    }
LABEL_19:
    sub_100185268();
    goto LABEL_20;
  }
  uint64_t v60 = v107;
  v46(v107, v38, v19);
  v46(v128, v40, v19);
  int v61 = sub_1001EB540();
  os_log_type_t v62 = sub_1001EC910();
  int v63 = v62;
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v129 = (char *)swift_slowAlloc();
    Class v137 = v129;
    *(_DWORD *)uint64_t v64 = 136315394;
    uint64_t v119 = v40;
    uint64_t v131 = v38;
    LODWORD(v118) = v63;
    uint64_t v65 = sub_1001ED040();
    uint64_t v138 = sub_1001A8090(v65, v66, (uint64_t *)&v137);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    os_log_t v117 = v61;
    uint64_t v67 = *(void (**)(char *, uint64_t))(v136 + 8);
    v67(v60, v19);
    *(_WORD *)(v64 + 12) = 2080;
    uint64_t v68 = v128;
    uint64_t v38 = v131;
    uint64_t v69 = sub_1001ED040();
    uint64_t v138 = sub_1001A8090(v69, v70, (uint64_t *)&v137);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    uint64_t v128 = (char *)v67;
    v67(v68, v19);
    os_log_t v71 = v117;
    _os_log_impl((void *)&_mh_execute_header, v117, (os_log_type_t)v118, "CRDTModelFileSyncManager q_handle -- no delta, incoming=%s and existing=%s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v40 = v119;
    swift_slowDealloc();
  }
  else
  {

    unint64_t v82 = *(void (**)(char *, uint64_t))(v136 + 8);
    v82(v60, v19);
    id v83 = v128;
    uint64_t v128 = (char *)v82;
    v82(v83, v19);
  }
  uint64_t v85 = v132;
  uint64_t v84 = v133;
  if (!sub_100180190())
  {
    uint64_t v86 = (uint64_t)v120;
    sub_10018003C((uint64_t)v120);
    uint64_t v87 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v121, 2, 2, v84);
    uint64_t v88 = type metadata accessor for CRDTModelRevisionInfo();
    uint64_t v89 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v124, 1, 1, v88);
    uint64_t v90 = v125;
    ModelState.init(model:loaded:source:revisionInfo:)(v86, 1, v87, v89, v84, v125);
    sub_100181B4C(v90, 0xD000000000000012, 0x80000001002243A0);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v90, v127);
  }
  sub_100181ECC(v134);
  if (!v130 && sub_100180190()) {
    goto LABEL_19;
  }
LABEL_20:
  uint64_t v101 = (uint64_t (*)(char *, uint64_t))v128;
  ((void (*)(char *, uint64_t))v128)(v40, v19);
  return v101(v38, v19);
}

uint64_t sub_1001817A0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000936F8(a1, (uint64_t)v9, (uint64_t *)&unk_100291CA0);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1001EB540();
  os_log_type_t v11 = sub_1001EC910();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1001A8090(a2, a3, aBlock);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    unint64_t v13 = sub_10017F214();
    uint64_t v23 = sub_1001A8090(v13, v14, aBlock);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    sub_1000816A4((uint64_t)v9, (uint64_t *)&unk_100291CA0);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "CRDTModelFileSyncManager q_updateState (%s) -- newState=%s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v15 = sub_1000816A4((uint64_t)v9, (uint64_t *)&unk_100291CA0);
  }
  uint64_t v16 = *(void *)(v3 + 32);
  __chkstk_darwin(v15);
  *(&v22 - 2) = a1;
  uint64_t v17 = *(NSObject **)(v16 + 16);
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = sub_100093B3C;
  v18[3] = &v22 - 4;
  v18[4] = v16;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000935DC;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = (uint64_t)sub_1000B0738;
  void aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100089470;
  void aBlock[3] = (uint64_t)&unk_10026A5B8;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v17, v20);
  _Block_release(v20);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v17) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100181B4C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v26 = (void *)*v3;
  uint64_t v6 = v26[10];
  uint64_t v7 = v26[12];
  uint64_t v24 = v26[11];
  uint64_t v25 = v6;
  uint64_t v23 = v7;
  uint64_t v8 = type metadata accessor for ModelState();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)&v21 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v21 - v10, a1, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_1001EB540();
  os_log_type_t v13 = sub_1001EC910();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v28 = v21;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1001A8090(v22, a3, &v28);
    uint64_t v22 = a1;
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v15 = ModelState.description.getter(v8);
    uint64_t v27 = sub_1001A8090(v15, v16, &v28);
    a1 = v22;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "CRDTModelFileSyncManager q_updateState (%s) -- newState=%s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  __chkstk_darwin(v17);
  uint64_t v18 = v24;
  *(&v21 - 6) = v25;
  *(&v21 - 5) = v18;
  uint64_t v19 = v26[13];
  *(&v21 - 4) = v23;
  *(&v21 - 3) = v19;
  *(&v21 - 2) = a1;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_100136B48, (uint64_t)(&v21 - 8));
  return swift_release();
}

uint64_t sub_100181ECC(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 192);
  swift_beginAccess();
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v4 = sub_1001EC0F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a1, v4);
  swift_endAccess();
  return sub_1001821A0();
}

uint64_t sub_100181FD8()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_10007DC14((uint64_t *)&unk_1002933D0);
  sub_1001EC080();
  swift_endAccess();
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(NSObject **)(v2 + 16);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = sub_1001884A8;
  _OWORD v4[3] = v1;
  v4[4] = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1001884E8;
  *(void *)(v5 + 24) = v4;
  v8[4] = sub_1000AC2B4;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100089470;
  v8[3] = &unk_10026A4C8;
  uint64_t v6 = _Block_copy(v8);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001821A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  swift_beginAccess();
  long long v3 = *(_OWORD *)(v2 + 96);
  long long v10 = *(_OWORD *)(v2 + 80);
  long long v11 = v3;
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  sub_1001EC0F0();
  sub_1001EC080();
  swift_endAccess();
  uint64_t v4 = v0[5];
  uint64_t v5 = *(NSObject **)(v4 + 16);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = sub_100188504;
  v6[3] = v1;
  v6[4] = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10018894C;
  *(void *)(v7 + 24) = v6;
  uint64_t v12 = sub_1000B0738;
  uint64_t v13 = v7;
  *(void *)&long long v10 = _NSConcreteStackBlock;
  *((void *)&v10 + 1) = 1107296256;
  *(void *)&long long v11 = sub_100089470;
  *((void *)&v11 + 1) = &unk_10026A540;
  uint64_t v8 = _Block_copy(&v10);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v8);
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001823D0(char *a1, void *a2)
{
  uint64_t v4 = sub_1001EC210();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018852C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  uint64_t v12 = (void *)a2[12];
  uint64_t v13 = (char *)a2 + *(void *)(*a2 + 192);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v13, v8);
  id v14 = v12;
  sub_1001EC0B0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(void *)a1 = v14;
  uint64_t v15 = type metadata accessor for CRDTModelSyncVersion();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(&a1[*(int *)(v15 + 20)], v7, v4);
}

uint64_t sub_1001825D8(char *a1, void *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = sub_1001EC210();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(v4 + 96);
  v19[0] = *(_OWORD *)(v4 + 80);
  v19[1] = v9;
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v10 = sub_1001EC0F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - v12;
  sub_10018852C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  id v14 = (void *)a2[12];
  uint64_t v15 = (char *)a2 + *(void *)(*a2 + 192);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v15, v10);
  id v16 = v14;
  sub_1001EC0B0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(void *)a1 = v16;
  uint64_t v17 = type metadata accessor for CRDTModelSyncVersion();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(&a1[*(int *)(v17 + 20)], v8, v5);
}

uint64_t CRDTModelFileSyncManager.sync(_:isRemote:)(uint64_t a1, char a2)
{
  uint64_t v5 = sub_1001EBA60();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001EBA50();
  uint64_t v11 = v2;
  uint64_t v12 = a1;
  char v13 = a2;
  sub_1001EC9D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100182964(void (*a1)(uint64_t, uint64_t), int a2, uint64_t a3)
{
  int v113 = a2;
  uint64_t v122 = a1;
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_100291BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v112 = (uint64_t)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1001EBF80();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  id v109 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10007DC14((uint64_t *)&unk_1002933E0);
  uint64_t v7 = __chkstk_darwin(v108);
  uint64_t v115 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v117 = (uint64_t)&v101 - v9;
  uint64_t v123 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v119 = *(void *)(v123 - 8);
  uint64_t v10 = __chkstk_darwin(v123);
  uint64_t v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v101 - v13;
  uint64_t v15 = sub_10007DC14((uint64_t *)&unk_100291CA0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ReadingHistoryModel(0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v106 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v107 = (uint64_t)&v101 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v101 - v23;
  id v118 = [*(id *)(a3 + 64) createTransactionWithName:"com.apple.ibooks.CRDTModelFileSyncManager.q_sync"];
  swift_retain();
  uint64_t v114 = v15;
  uint64_t v25 = v124;
  sub_1001EC9E0();
  swift_release();
  sub_10018861C((uint64_t)v17, (uint64_t)v24, type metadata accessor for ReadingHistoryModel);
  uint64_t v116 = v17;
  uint64_t v26 = (uint64_t)v17;
  uint64_t v27 = a3;
  uint64_t v28 = (uint64_t)v122;
  sub_1000816A4(v26, (uint64_t *)&unk_100291CA0);
  sub_1001886CC((unint64_t *)&qword_100291BC0, (void (*)(uint64_t))type metadata accessor for ReadingHistoryModel);
  char v29 = sub_1001EBFE0();
  sub_10018852C((uint64_t)v24, type metadata accessor for ReadingHistoryModel);
  uint64_t v30 = *(void *)(*(void *)v27 + 200);
  uint64_t v124 = v27;
  uint64_t v31 = v27 + v30;
  uint64_t v121 = v25;
  if (v29)
  {
    unint64_t v105 = v18;
    uint64_t v106 = v24;
    uint64_t v103 = v12;
    uint64_t v120 = v14;
    uint64_t v32 = v107;
    sub_10018861C(v28, v107, type metadata accessor for ReadingHistoryModel);
    swift_retain_n();
    uint64_t v33 = sub_1001EB540();
    os_log_type_t v34 = sub_1001EC910();
    int v35 = v34;
    BOOL v36 = os_log_type_enabled(v33, v34);
    uint64_t v104 = v31;
    if (v36)
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v102 = (void (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
      v127[0] = (uint64_t)v102;
      *(_DWORD *)uint64_t v37 = 67109634;
      LODWORD(v126) = v113 & 1;
      sub_1001ECBC0();
      *(_WORD *)(v37 + 8) = 2080;
      unint64_t v38 = ReadingHistoryModel.description.getter();
      uint64_t v126 = sub_1001A8090(v38, v39, v127);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_10018852C(v32, type metadata accessor for ReadingHistoryModel);
      *(_WORD *)(v37 + 18) = 2080;
      uint64_t v101 = v37 + 20;
      LODWORD(v107) = v35;
      swift_retain();
      uint64_t v40 = (uint64_t)v116;
      uint64_t v41 = v121;
      sub_1001EC9E0();
      uint64_t v121 = v41;
      swift_release();
      uint64_t v42 = (uint64_t)v106;
      sub_10018861C(v40, (uint64_t)v106, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v40, (uint64_t *)&unk_100291CA0);
      unint64_t v43 = ReadingHistoryModel.description.getter();
      unint64_t v45 = v44;
      sub_10018852C(v42, type metadata accessor for ReadingHistoryModel);
      uint64_t v126 = sub_1001A8090(v43, v45, v127);
      uint64_t v28 = (uint64_t)v122;
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v107, "CRDTModelFileSyncManager q_sync: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v37, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v46 = v119;
    }
    else
    {

      sub_10018852C(v32, type metadata accessor for ReadingHistoryModel);
      swift_release_n();
      uint64_t v46 = v119;
      uint64_t v42 = (uint64_t)v106;
    }
    uint64_t v58 = v124 + *(void *)(*(void *)v124 + 192);
    swift_beginAccess();
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16);
    uint64_t v101 = v58;
    uint64_t v107 = v46 + 16;
    uint64_t v102 = v59;
    v59((uint64_t)v120, v58, v123);
    sub_10018861C(v28, v42, type metadata accessor for ReadingHistoryModel);
    sub_10007DC14(&qword_100291FC0);
    sub_1000815A4(&qword_100291240, &qword_100291FC0);
    sub_1000815A4(&qword_100291248, &qword_100291FC0);
    uint64_t v60 = (uint64_t)v115;
    sub_1001EBF00();
    uint64_t v61 = v42;
    unint64_t v62 = v105;
    sub_1001EB0C0();
    sub_1001886CC(&qword_100291250, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001EBF00();
    *(void *)(v60 + *(int *)(v62 + 24)) = &_swiftEmptyDictionarySingleton;
    *(void *)(v60 + *(int *)(v108 + 52)) = &_swiftEmptyDictionarySingleton;
    sub_1000AF6A0(v61, v60);
    uint64_t v63 = v117;
    uint64_t v64 = sub_1001880C4(v60, v117);
    __chkstk_darwin(v64);
    *(&v101 - 2) = v63;
    uint64_t v65 = v121;
    sub_1001EC0A0();
    uint64_t v66 = v110;
    uint64_t v67 = v109;
    uint64_t v68 = v111;
    (*(void (**)(char *, void, uint64_t))(v110 + 104))(v109, enum case for CRCodableVersion.version3(_:), v111);
    uint64_t v121 = sub_1000815A4(&qword_1002933F0, (uint64_t *)&unk_1002933E0);
    uint64_t v69 = sub_1001EC0C0();
    if (v65)
    {
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
      os_log_t v71 = sub_1001EB540();
      os_log_type_t v72 = sub_1001EC8F0();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        uint64_t v124 = swift_slowAlloc();
        uint64_t v128 = v124;
        *(_DWORD *)uint64_t v73 = 136315138;
        uint64_t v122 = (void (*)(uint64_t, uint64_t))(v73 + 4);
        uint64_t v74 = v120;
        swift_beginAccess();
        uint64_t v75 = (uint64_t)v115;
        uint64_t v76 = v123;
        sub_1001EC0D0();
        unint64_t v77 = ReadingHistoryModel.description.getter();
        unint64_t v79 = v78;
        sub_1000816A4(v75, (uint64_t *)&unk_1002933E0);
        uint64_t v125 = sub_1001A8090(v77, v79, &v128);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "CRDTModelFileSyncManager q_sync: couldn't serialize model to sync: %s", v73, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v76 = v123;
        uint64_t v74 = v120;
      }
      sub_10007DC14((uint64_t *)&unk_100293460);
      sub_1000815A4((unint64_t *)&unk_1002963B0, (uint64_t *)&unk_100293460);
      swift_allocError();
      *uint64_t v84 = 1;
      swift_willThrow();

      sub_1000816A4(v117, (uint64_t *)&unk_1002933E0);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v74, v76);
    }
    else
    {
      unint64_t v105 = v70;
      uint64_t v108 = v69;
      uint64_t v81 = (uint64_t)v122;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
      uint64_t v82 = v112;
      if (v113)
      {
        sub_10018861C(v81, v112, type metadata accessor for ReadingHistoryModel);
        uint64_t v83 = sub_10007DC14((uint64_t *)&unk_1002963C0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 0, 2, v83);
      }
      else
      {
        uint64_t v85 = sub_10007DC14((uint64_t *)&unk_1002963C0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v82, 1, 2, v85);
      }
      uint64_t v86 = (uint64_t)v115;
      uint64_t v87 = v124;
      swift_retain();
      uint64_t v88 = (uint64_t)v116;
      uint64_t v89 = v114;
      sub_1001EC9E0();
      swift_release();
      uint64_t v90 = v123;
      int v91 = v120;
      sub_1001EC0D0();
      uint64_t v92 = (uint64_t)v106;
      sub_10018861C(v86, (uint64_t)v106, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v86, (uint64_t *)&unk_1002933E0);
      sub_1000C0094(v92, v88);
      sub_1000F2D3C(v112, v88 + *(int *)(v89 + 48));
      sub_10018852C(v92, type metadata accessor for ReadingHistoryModel);
      sub_1001817A0(v88, 0x636E79735F71, 0xE600000000000000);
      uint64_t v93 = (uint64_t)v103;
      os_log_t v94 = v102;
      v102((uint64_t)v103, (uint64_t)v91, v90);
      uint64_t v95 = v101;
      swift_beginAccess();
      uint64_t v96 = v119;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 24))(v95, v93, v90);
      swift_endAccess();
      sub_100181FD8();
      uint64_t v122 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v122(v93, v90);
      v94(v93, v95, v90);
      uint64_t v97 = (void *)swift_allocObject();
      v97[2] = v87;
      v97[3] = MarkedAsFinishedMechanism.rawValue.getter;
      id v98 = v118;
      v97[4] = 0;
      v97[5] = v98;
      swift_retain();
      id v99 = v98;
      sub_10017E69C(v93, (uint64_t)sub_1000F2DEC, (uint64_t)v97);
      swift_release();
      sub_100081714(v108, v105);

      BOOL v100 = (void (*)(char *, uint64_t))v122;
      v122(v93, v90);
      sub_1000816A4((uint64_t)v116, (uint64_t *)&unk_100291CA0);
      sub_1000816A4(v112, (uint64_t *)&unk_100291BA0);
      sub_1000816A4(v117, (uint64_t *)&unk_1002933E0);
      v100(v120, v90);
    }
  }
  else
  {
    uint64_t v47 = (uint64_t)v106;
    sub_10018861C(v28, (uint64_t)v106, type metadata accessor for ReadingHistoryModel);
    swift_retain_n();
    unint64_t v48 = sub_1001EB540();
    os_log_type_t v49 = sub_1001EC910();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint64_t)v24;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v123 = swift_slowAlloc();
      v127[0] = v123;
      *(_DWORD *)uint64_t v51 = 67109634;
      LODWORD(v126) = v113 & 1;
      sub_1001ECBC0();
      *(_WORD *)(v51 + 8) = 2080;
      unint64_t v52 = ReadingHistoryModel.description.getter();
      uint64_t v126 = sub_1001A8090(v52, v53, v127);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      sub_10018852C(v47, type metadata accessor for ReadingHistoryModel);
      *(_WORD *)(v51 + 18) = 2080;
      uint64_t v122 = (void (*)(uint64_t, uint64_t))(v51 + 20);
      swift_retain();
      uint64_t v54 = (uint64_t)v116;
      sub_1001EC9E0();
      swift_release();
      sub_10018861C(v54, v50, type metadata accessor for ReadingHistoryModel);
      sub_1000816A4(v54, (uint64_t *)&unk_100291CA0);
      unint64_t v55 = ReadingHistoryModel.description.getter();
      unint64_t v57 = v56;
      sub_10018852C(v50, type metadata accessor for ReadingHistoryModel);
      uint64_t v126 = sub_1001A8090(v55, v57, v127);
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "CRDTModelFileSyncManager q_sync -- no delta: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v51, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10018852C(v47, type metadata accessor for ReadingHistoryModel);
      swift_release_n();
    }
    sub_10007DC14((uint64_t *)&unk_100293460);
    sub_1000815A4((unint64_t *)&unk_1002963B0, (uint64_t *)&unk_100293460);
    swift_allocError();
    unsigned char *v80 = 0;
    swift_willThrow();
  }
}

void sub_100183BD0(uint64_t a1, int a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v145 = a4;
  uint64_t v143 = a3;
  LODWORD(v139) = a2;
  uint64_t v7 = *v4;
  uint64_t v8 = *((void *)*v4 + 10);
  uint64_t v9 = *((void *)*v4 + 11);
  uint64_t v10 = (char *)*((void *)*v4 + 12);
  uint64_t v131 = type metadata accessor for ModelState();
  uint64_t v127 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  BOOL v130 = (char *)&v113 - v11;
  uint64_t v126 = type metadata accessor for ModelState.Source();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v129 = (char *)&v113 - v12;
  uint64_t v136 = sub_1001EBF80();
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v134 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v7[13];
  uint64_t v154 = (void (*)(void, void))v8;
  uint64_t v155 = v9;
  uint64_t v151 = v10;
  long long v156 = v10;
  uint64_t v157 = v14;
  uint64_t v149 = v14;
  uint64_t v15 = type metadata accessor for CRDTModelFileSyncInfo();
  uint64_t v132 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v128 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  os_log_t v144 = (os_log_t)((char *)&v113 - v18);
  swift_getWitnessTable();
  uint64_t v146 = sub_1001EC0F0();
  uint64_t v141 = *(void *)(v146 - 8);
  uint64_t v19 = __chkstk_darwin(v146);
  uint64_t v124 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v113 - v22;
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = __chkstk_darwin(v21);
  uint64_t v138 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t WitnessTable = (char *)&v113 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (uint8_t *)&v113 - v29;
  id v142 = [v5[8] createTransactionWithName:"com.apple.ibooks.CRDTModelFileSyncManager.q_sync"];
  sub_10018003C((uint64_t)v30);
  uint64_t v150 = v9;
  LOBYTE(v9) = sub_1001EBFE0();
  uint64_t v31 = *(void (**)(uint8_t *, uint64_t))(v24 + 8);
  uint64_t v140 = v30;
  uint64_t v147 = v31;
  uint64_t v148 = v24 + 8;
  v31(v30, v8);
  unint64_t v32 = (unint64_t)v5 + *((void *)*v5 + 25);
  uint64_t v33 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v24 + 16);
  if (v9)
  {
    uint64_t v117 = v24;
    uint64_t v122 = v23;
    uint64_t v138 = (char *)v15;
    os_log_type_t v34 = (uint8_t *)WitnessTable;
    uint64_t v119 = a1;
    uint64_t v121 = v24 + 16;
    uint64_t v123 = v33;
    v33((uint8_t *)WitnessTable, a1, v8);
    swift_retain_n();
    unint64_t v118 = v32;
    int v35 = sub_1001EB540();
    os_log_type_t v36 = sub_1001EC910();
    int v37 = v36;
    BOOL v38 = os_log_type_enabled(v35, v36);
    uint64_t v39 = v8;
    uint64_t v120 = v5;
    if (v38)
    {
      uint64_t v40 = swift_slowAlloc();
      LODWORD(v116) = v37;
      uint64_t v41 = v40;
      uint64_t v115 = swift_slowAlloc();
      uint64_t v154 = (void (*)(void, void))v115;
      *(_DWORD *)uint64_t v41 = 67109634;
      LODWORD(v152) = v139 & 1;
      sub_1001ECBC0();
      *(_WORD *)(v41 + 8) = 2080;
      os_log_t v114 = v35;
      uint64_t v42 = sub_1001ED040();
      uint64_t v152 = sub_1001A8090(v42, v43, (uint64_t *)&v154);
      int v113 = &v153;
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      unint64_t v44 = v147;
      v147(v34, v8);
      *(_WORD *)(v41 + 18) = 2080;
      uint64_t WitnessTable = (char *)(v41 + 20);
      unint64_t v45 = v140;
      sub_10018003C((uint64_t)v140);
      uint64_t v46 = sub_1001ED040();
      unint64_t v48 = v47;
      v44(v45, v39);
      uint64_t v152 = sub_1001A8090(v46, v48, (uint64_t *)&v154);
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v49 = v114;
      _os_log_impl((void *)&_mh_execute_header, v114, (os_log_type_t)v116, "CRDTModelFileSyncManager q_sync: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v41, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      os_log_t v50 = v144;
      uint64_t v51 = v146;
    }
    else
    {

      v147(v34, v8);
      swift_release_n();
      os_log_t v50 = v144;
      uint64_t v51 = v146;
      unint64_t v45 = v140;
    }
    uint64_t v67 = v137;
    uint64_t v68 = (char *)v120 + *((void *)*v120 + 24);
    swift_beginAccess();
    uint64_t v69 = v141 + 16;
    unint64_t v70 = v122;
    uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v141 + 16);
    v116(v122, v68, v51);
    v123(v45, v119, v39);
    uint64_t v137 = v39;
    uint64_t v71 = CRDTModelFileSyncInfo.init(model:)((uint64_t)v45, v39, (uint64_t)v50);
    __chkstk_darwin(v71);
    *(&v113 - 2) = (char *)v50;
    sub_1001EC0A0();
    uint64_t v72 = v67;
    uint64_t v73 = v135;
    uint64_t v74 = v134;
    uint64_t v75 = v136;
    (*(void (**)(char *, void, uint64_t))(v135 + 104))(v134, enum case for CRCodableVersion.version3(_:), v136);
    uint64_t v76 = (uint64_t)v70;
    uint64_t WitnessTable = (char *)swift_getWitnessTable();
    uint64_t v77 = sub_1001EC0C0();
    if (v72)
    {
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
      unint64_t v79 = sub_1001EB540();
      os_log_type_t v80 = sub_1001EC8F0();
      int v81 = v80;
      if (os_log_type_enabled(v79, v80))
      {
        LODWORD(v148) = v81;
        uint64_t v82 = (uint8_t *)swift_slowAlloc();
        uint64_t v147 = (void (*)(uint8_t *, uint64_t))swift_slowAlloc();
        uint64_t v154 = (void (*)(void, void))v147;
        uint64_t v140 = v82;
        *(_DWORD *)uint64_t v82 = 136315138;
        uint64_t v139 = (uint64_t)(v82 + 4);
        swift_beginAccess();
        uint64_t v83 = v76;
        uint64_t v84 = v128;
        uint64_t v85 = v146;
        sub_1001EC0D0();
        uint64_t v86 = v138;
        uint64_t v87 = sub_1001ED040();
        unint64_t v89 = v88;
        uint64_t v90 = v132;
        int v91 = v84;
        uint64_t v76 = v83;
        (*(void (**)(char *, char *))(v132 + 8))(v91, v86);
        uint64_t v158 = sub_1001A8090(v87, v89, (uint64_t *)&v154);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v148, "CRDTModelFileSyncManager q_sync: couldn't serialize model to sync: %s", v140, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v92 = v151;
      }
      else
      {

        uint64_t v85 = v146;
        uint64_t v92 = v151;
        uint64_t v86 = v138;
        uint64_t v90 = v132;
      }
      uint64_t v100 = v137;
      v143();
      uint64_t v154 = (void (*)(void, void))v100;
      uint64_t v155 = v150;
      long long v156 = v92;
      uint64_t v157 = v149;
      type metadata accessor for CRDTModelFileSyncManager.SyncError();
      swift_getWitnessTable();
      swift_allocError();
      *uint64_t v101 = 1;
      swift_willThrow();

      (*(void (**)(os_log_t, char *))(v90 + 8))(v144, v86);
      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v76, v85);
    }
    else
    {
      unint64_t v118 = v78;
      uint64_t v149 = v77;
      uint64_t v150 = v69;
      uint64_t v151 = v68;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
      uint64_t v94 = v137;
      uint64_t v95 = (uint64_t)v129;
      uint64_t v96 = v117;
      uint64_t v97 = v120;
      if (v139)
      {
        id v98 = (void (*)(uint8_t *, char *, uint64_t))v123;
        v123((uint8_t *)v129, v119, v137);
        uint64_t v99 = 0;
      }
      else
      {
        uint64_t v99 = 1;
        id v98 = (void (*)(uint8_t *, char *, uint64_t))v123;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v95, v99, 2, v94);
      swift_retain();
      MutableObservableContainer.value.getter();
      swift_release();
      uint64_t v102 = v76;
      uint64_t v103 = v128;
      sub_1001EC0D0();
      uint64_t v104 = v140;
      v98(v140, v103, v94);
      uint64_t v139 = *(void *)(v132 + 8);
      ((void (*)(char *, char *))v139)(v103, v138);
      uint64_t v105 = (uint64_t)v130;
      ModelState.updating(model:source:)((uint64_t)v104, v95, v131);
      v147(v104, v94);
      sub_100181B4C(v105, 0x636E79735F71, 0xE600000000000000);
      sub_100181ECC(v102);
      uint64_t v106 = (uint64_t)v124;
      uint64_t v107 = v146;
      v116(v124, v151, v146);
      uint64_t v108 = (void *)swift_allocObject();
      id v110 = v142;
      id v109 = v143;
      v108[2] = v97;
      v108[3] = v109;
      v108[4] = v145;
      v108[5] = v110;
      swift_retain();
      swift_retain();
      id v111 = v110;
      sub_1000C9EF0(v106, (uint64_t)sub_1001885F4, (uint64_t)v108);
      swift_release();
      sub_100081714(v149, v118);

      uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v141 + 8);
      v112(v106, v107);
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v105, v131);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v129, v126);
      ((void (*)(os_log_t, char *))v139)(v144, v138);
      v112((uint64_t)v122, v107);
    }
  }
  else
  {
    unint64_t v52 = (uint8_t *)v138;
    v33((uint8_t *)v138, a1, v8);
    swift_retain_n();
    unint64_t v53 = sub_1001EB540();
    os_log_type_t v54 = sub_1001EC910();
    int v55 = v54;
    uint64_t v56 = v8;
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v146 = swift_slowAlloc();
      uint64_t v154 = (void (*)(void, void))v146;
      *(_DWORD *)uint64_t v57 = 67109634;
      LODWORD(v152) = v139 & 1;
      sub_1001ECBC0();
      *(_WORD *)(v57 + 8) = 2080;
      os_log_t v144 = v53;
      uint64_t v58 = sub_1001ED040();
      uint64_t v152 = sub_1001A8090(v58, v59, (uint64_t *)&v154);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      LODWORD(v141) = v55;
      uint64_t v60 = v147;
      v147(v52, v56);
      *(_WORD *)(v57 + 18) = 2080;
      uint64_t v139 = v57 + 20;
      uint64_t v61 = v140;
      sub_10018003C((uint64_t)v140);
      uint64_t v62 = sub_1001ED040();
      unint64_t v64 = v63;
      v60(v61, v56);
      uint64_t v152 = sub_1001A8090(v62, v64, (uint64_t *)&v154);
      sub_1001ECBC0();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v65 = v144;
      _os_log_impl((void *)&_mh_execute_header, v144, (os_log_type_t)v141, "CRDTModelFileSyncManager q_sync -- no delta: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v57, 0x1Cu);
      swift_arrayDestroy();
      uint64_t v66 = v151;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v147(v52, v8);
      swift_release_n();
      uint64_t v66 = v151;
    }
    v143();
    uint64_t v154 = (void (*)(void, void))v56;
    uint64_t v155 = v150;
    long long v156 = v66;
    uint64_t v157 = v149;
    type metadata accessor for CRDTModelFileSyncManager.SyncError();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v93 = 0;
    swift_willThrow();
  }
}

void sub_100184DCC(uint64_t a1@<X1>, char a2@<W2>, void (*a3)(void)@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  BOOL v11 = sub_100180190();
  int v12 = a2 & 1;
  if (!v11)
  {
    sub_100184E74(a1, v12, (uint64_t)a3, a4);
    goto LABEL_5;
  }
  sub_100183BD0(a1, v12, a3, a4);
  if (!v5)
  {
LABEL_5:
    char v13 = 0;
    goto LABEL_6;
  }
  swift_errorRelease();
  char v13 = 1;
LABEL_6:
  *a5 = v13;
}

uint64_t sub_100184E74(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  HIDWORD(v27) = a2;
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(a1);
  int v12 = (char *)&v27 - v11;
  char v13 = sub_1001EB540();
  os_log_type_t v14 = sub_1001EC910();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "CRDTModelFileSyncManager q_enqueuePendingSync", v15, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  unint64_t v18 = ((v16 + v10) & 0xFFFFFFFFFFFFFFF8) + v17;
  *(void *)(v17 + 16) = v8;
  *(_OWORD *)(v17 + 24) = *(_OWORD *)(v7 + 88);
  *(void *)(v17 + 4sub_10016EAD4(to, 0) = *(void *)(v7 + 104);
  *(void *)(v17 + 48) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v12, v8);
  *(unsigned char *)(v17 + v16 + v1sub_10016EAD4(to, 0) = BYTE4(v27) & 1;
  uint64_t v19 = v29;
  *(void *)(v18 + 8) = v28;
  *(void *)(v18 + 16) = v19;
  uint64_t v20 = v5 + 9;
  swift_beginAccess();
  uint64_t v21 = (void *)v5[9];
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v5[9] = (uint64_t)v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v21 = sub_1000A6AFC(0, v21[2] + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  unint64_t v24 = v21[2];
  unint64_t v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    uint64_t v21 = sub_1000A6AFC((void *)(v23 > 1), v24 + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  void v21[2] = v24 + 1;
  uint64_t v25 = &v21[2 * v24];
  v25[4] = sub_100188884;
  v25[5] = v17;
  return swift_endAccess();
}

void sub_100185144(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v9 = sub_1001EB540();
  os_log_type_t v10 = sub_1001EC910();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "CRDTModelFileSyncManager q_enqueuePendingSync -- about to run", v11, 2u);
    swift_slowDealloc();
  }

  sub_100183BD0(a2, a3 & 1, a4, a5);
}

uint64_t sub_100185268()
{
  uint64_t v19 = sub_1001EBAA0();
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  long long v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001EBA60();
  uint64_t v4 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 72);
  *(void *)(v0 + 72) = _swiftEmptyArrayStorage;
  uint64_t v17 = v7;
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (long long *)(v17 + 32);
    os_log_type_t v10 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v11 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      uint64_t v12 = swift_allocObject();
      long long v13 = *v9++;
      *(_OWORD *)(v12 + 16) = v13;
      swift_retain();
      sub_1001EBA50();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_10018877C;
      *(void *)(v14 + 24) = v12;
      aBlock[4] = sub_100092AA0;
      void aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000DB998;
      void aBlock[3] = &unk_10026A6A8;
      uint64_t v15 = _Block_copy(aBlock);
      swift_retain();
      sub_1001EBA80();
      sub_1001EC9F0();
      _Block_release(v15);
      swift_release();
      (*v10)(v3, v19);
      (*v11)(v6, v18);
      swift_release();
      --v8;
    }
    while (v8);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100185524()
{
  sub_1000815A4(&qword_1002933F0, (uint64_t *)&unk_1002933E0);
  uint64_t v0 = (uint64_t (*)(uint64_t *, void))sub_1001EC090();
  sub_10007DC14((uint64_t *)&unk_1002933E0);
  sub_1000815A4(&qword_100293408, (uint64_t *)&unk_1002933E0);
  sub_1001EBBE0();
  return v0(&v2, 0);
}

uint64_t sub_100185608()
{
  swift_getWitnessTable();
  uint64_t v0 = (uint64_t (*)(uint64_t *, void))sub_1001EC090();
  swift_getWitnessTable();
  sub_1001EBBE0();
  return v0(&v2, 0);
}

uint64_t sub_1001856F4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  long long v3 = sub_1001EB540();
  os_log_type_t v4 = sub_1001EC910();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "CRDTModelFileSyncManager q_sync: finished", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = sub_100185894();
  return a2(v6);
}

uint64_t sub_1001857C4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  long long v3 = sub_1001EB540();
  os_log_type_t v4 = sub_1001EC910();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "CRDTModelFileSyncManager q_sync: finished", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = sub_100185AE0();
  return a2(v6);
}

uint64_t sub_100185894()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRDTModelSyncVersion();
  __chkstk_darwin(v2);
  os_log_type_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC910();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    v11[1] = sub_1001A8090(0xD000000000000013, 0x8000000100221340, v12);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "CRDTModelFileSyncManager: Model did sync %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    sub_1001EC9E0();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 8))(v4, ObjectType, v9);
    swift_unknownObjectRelease();
    return sub_10018852C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  }
  return result;
}

uint64_t sub_100185AE0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for CRDTModelSyncVersion();
  __chkstk_darwin(v2);
  os_log_type_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC910();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v14[0] = v2;
    v15[0] = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = (*(uint64_t (**)(void))(*(void *)(v1 + 104) + 8))(*(void *)(v1 + 80));
    v14[1] = sub_1001A8090(v9, v10, v15);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "CRDTModelFileSyncManager: Model did sync %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = v0[3];
    uint64_t ObjectType = swift_getObjectType();
    sub_1001EC9E0();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 8))(v4, ObjectType, v12);
    swift_unknownObjectRelease();
    return sub_10018852C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  }
  return result;
}

Swift::Void __swiftcall CRDTModelFileSyncManager.suspend()()
{
}

Swift::Void __swiftcall CRDTModelFileSyncManager.resume()()
{
}

id *CRDTModelFileSyncManager.deinit()
{
  sub_1000CA710((uint64_t)(v0 + 2));
  swift_release();
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  uint64_t v1 = (char *)v0 + *((void *)*v0 + 24);
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v2 = sub_1001EC0F0();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = (char *)v0 + *((void *)*v0 + 25);
  uint64_t v4 = sub_1001EB560();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CRDTModelFileSyncManager.__deallocating_deinit()
{
  CRDTModelFileSyncManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_100185F90@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_retain();
}

void *sub_100185FB0(void *a1, char *a2, char *a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v128 = a4;
  uint64_t v129 = a3;
  uint64_t v136 = a2;
  uint64_t v152 = a1;
  os_log_type_t v6 = (void *)*v4;
  uint64_t v125 = sub_1001EAF60();
  uint64_t v149 = *(void *)(v125 - 8);
  uint64_t v7 = __chkstk_darwin(v125);
  uint64_t v139 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v135 = (char *)&v119 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v148 = (char *)&v119 - v12;
  __chkstk_darwin(v11);
  char v153 = (char *)&v119 - v13;
  uint64_t v138 = sub_1001EC210();
  uint64_t v134 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v131 = (char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for CRDTModelSyncVersion() - 8;
  uint64_t v15 = __chkstk_darwin(v132);
  uint64_t v133 = (void (*)(void))((char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  BOOL v130 = (char *)&v119 - v17;
  uint64_t v18 = (void *)v6[10];
  unint64_t v19 = v6[11];
  uint64_t v20 = v6[12];
  uint64_t v151 = v6[13];
  id v155 = v18;
  unint64_t v156 = v19;
  unint64_t v21 = v19;
  uint64_t v157 = v20;
  uint64_t v158 = (_UNKNOWN **)v151;
  uint64_t v22 = v20;
  uint64_t v23 = type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t v147 = (void *)v23;
  uint64_t v142 = sub_1001EC0F0();
  uint64_t v150 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v140 = (char *)&v119 - v24;
  uint64_t v25 = sub_10007DC14((uint64_t *)&unk_100291B90);
  __chkstk_darwin(v25 - 8);
  uint64_t v127 = (char *)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v146 = v21;
  uint64_t v145 = v22;
  uint64_t v27 = type metadata accessor for ModelState.Source();
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v121 = (char *)&v119 - v29;
  uint64_t v120 = *((void *)v18 - 1);
  __chkstk_darwin(v28);
  uint64_t v119 = (char *)&v119 - v30;
  uint64_t v144 = type metadata accessor for ModelState();
  uint64_t v137 = *(void *)(v144 - 8);
  uint64_t v31 = __chkstk_darwin(v144);
  uint64_t v141 = (uint64_t)&v119 - v32;
  uint64_t v143 = *(void *)(v23 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v126 = (char *)&v119 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  os_log_type_t v36 = (char *)&v119 - v35;
  uint64_t v37 = sub_1001EC9C0();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v119 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1001EC990();
  __chkstk_darwin(v41 - 8);
  uint64_t v42 = sub_1001EBAA0();
  __chkstk_darwin(v42 - 8);
  v5[3] = 0;
  swift_unknownObjectWeakInit();
  sub_1000C0728();
  sub_1001EBA90();
  sub_1001EC980();
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v40, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v37);
  v5[6] = sub_1001ECA00();
  *((unsigned char *)v5 + 8sub_10016EAD4(to, 0) = 0;
  uint64_t v124 = (char *)v5 + *(void *)(*v5 + 200);
  id v155 = 0;
  unint64_t v156 = 0xE000000000000000;
  sub_1001ECD20(20);
  swift_bridgeObjectRelease();
  id v155 = (id)0xD000000000000012;
  unint64_t v156 = 0x80000001002214C0;
  unint64_t v43 = (_UNKNOWN **)v151;
  unint64_t v44 = *(uint64_t (**)(void *, uint64_t))(v151 + 8);
  uint64_t v122 = v151 + 8;
  uint64_t v123 = v44;
  v159._countAndFlagsBits = v44(v18, v151);
  sub_1001EC490(v159);
  swift_bridgeObjectRelease();
  sub_1001EB550();
  unint64_t v45 = v146;
  sub_1001EBEE0();
  id v155 = v18;
  unint64_t v156 = v45;
  uint64_t v157 = v145;
  uint64_t v158 = v43;
  *(void *)&v36[*(int *)(type metadata accessor for CRDTModelFileSyncInfo() + 52)] = &_swiftEmptyDictionarySingleton;
  uint64_t v46 = v152[3];
  uint64_t v47 = v152[4];
  sub_100094758(v152, v46);
  unint64_t v48 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
  v5[12] = v48;
  swift_beginAccess();
  v5[3] = v128;
  swift_unknownObjectWeakAssign();
  uint64_t v49 = (uint64_t)v136;
  v5[8] = v136;
  type metadata accessor for ObservableTransaction();
  os_log_t v50 = (void *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain_n();
  v5[7] = sub_10017800C(0xD000000000000034, 0x80000001002242D0, v49, v50);
  uint64_t v51 = v120;
  uint64_t v52 = (uint64_t)v119;
  (*(void (**)(char *, char *, void *))(v120 + 16))(v119, v36, v18);
  uint64_t v53 = (uint64_t)v121;
  (*(void (**)(char *, uint64_t, uint64_t, void *))(v51 + 56))(v121, 1, 2, v18);
  uint64_t v54 = type metadata accessor for CRDTModelRevisionInfo();
  uint64_t v55 = (uint64_t)v127;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v127, 1, 1, v54);
  uint64_t v56 = v141;
  ModelState.init(model:loaded:source:revisionInfo:)(v52, 0, v53, v55, (uint64_t)v18, v141);
  swift_getWitnessTable();
  type metadata accessor for MutableObservableContainer();
  v5[4] = sub_1001783E4(v56);
  uint64_t v57 = *(void (**)(char *, char *, void *))(v143 + 16);
  uint64_t v136 = v36;
  v57(v126, v36, v147);
  swift_getWitnessTable();
  uint64_t v58 = v140;
  sub_1001EC0E0();
  unint64_t v59 = (char *)v5 + *(void *)(*v5 + 192);
  uint64_t v60 = v150;
  uint64_t v61 = v142;
  (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v59, v58, v142);
  swift_beginAccess();
  id v62 = v48;
  sub_1001EC080();
  swift_endAccess();

  unint64_t v63 = (void *)v5[12];
  unint64_t v64 = *(char **)(v60 + 16);
  uint64_t v129 = v59;
  uint64_t v127 = (char *)(v60 + 16);
  uint64_t v126 = v64;
  ((void (*)(char *, char *, uint64_t))v64)(v58, v59, v61);
  id v65 = v63;
  uint64_t v66 = v131;
  sub_1001EC0B0();
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  uint64_t v150 = v60 + 8;
  uint64_t v128 = v67;
  v67((uint64_t)v58, v61);
  uint64_t v68 = v130;
  *(void *)BOOL v130 = v65;
  uint64_t v69 = (uint64_t)v68;
  (*(void (**)(char *, char *, uint64_t))(v134 + 32))(&v68[*(int *)(v132 + 28)], v66, v138);
  sub_10007DC14((uint64_t *)&unk_1002933C0);
  swift_allocObject();
  unint64_t v70 = v133;
  sub_10018861C(v69, (uint64_t)v133, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  uint64_t v71 = sub_100090B54((uint64_t)v70);
  sub_10018852C(v69, (uint64_t (*)(void))type metadata accessor for CRDTModelSyncVersion);
  v5[5] = v71;
  uint64_t v72 = v152[3];
  uint64_t v73 = v152[4];
  sub_100094758(v152, v72);
  (*(void (**)(uint64_t, uint64_t))(v73 + 16))(v72, v73);
  uint64_t v138 = (uint64_t)v18;
  uint64_t v74 = (void *)v123(v18, v151);
  uint64_t v75 = v125;
  uint64_t v76 = v149;
  id v155 = v74;
  unint64_t v156 = v77;
  v160._countAndFlagsBits = 0x666E49636E79532DLL;
  v160._object = (void *)0xE90000000000006FLL;
  sub_1001EC490(v160);
  sub_1001EAEE0();
  swift_bridgeObjectRelease();
  unint64_t v78 = *(void (**)(void))(v76 + 16);
  unint64_t v79 = v135;
  uint64_t v134 = v76 + 16;
  uint64_t v133 = v78;
  v78();
  os_log_type_t v80 = sub_1001EB540();
  os_log_type_t v81 = sub_1001EC8E0();
  if (os_log_type_enabled(v80, v81))
  {
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    id v155 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v82 = 136315138;
    sub_1001886CC(&qword_100293400, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v83 = sub_1001ED040();
    uint64_t v154 = sub_1001A8090(v83, v84, (uint64_t *)&v155);
    uint64_t v85 = v149;
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    uint64_t v135 = *(char **)(v85 + 8);
    ((void (*)(char *, uint64_t))v135)(v79, v75);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "CRDTModelFileSyncManager Init: modelFileURL: %s", v82, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v135 = *(char **)(v76 + 8);
    ((void (*)(char *, uint64_t))v135)(v79, v75);
  }

  id v86 = [self defaultManager];
  sub_1001EAEC0(v87);
  unint64_t v89 = v88;
  id v155 = 0;
  unsigned int v90 = [v86 createDirectoryAtURL:v88 withIntermediateDirectories:1 attributes:0 error:&v155];

  if (v90)
  {
    id v91 = v155;
  }
  else
  {
    id v92 = v155;
    sub_1001EAE60();

    swift_willThrow();
    sub_1001EC8F0();
    if (qword_1002910C8 != -1) {
      swift_once();
    }
    uint64_t v93 = (void *)qword_100292120;
    sub_10007DC14((uint64_t *)&unk_100291A20);
    uint64_t v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = xmmword_100215310;
    id v95 = v93;
    uint64_t v96 = sub_1001EAE90();
    uint64_t v98 = v97;
    *(void *)(v94 + 56) = &type metadata for String;
    unint64_t v99 = sub_10007DC58();
    *(void *)(v94 + 64) = v99;
    *(void *)(v94 + 32) = v96;
    *(void *)(v94 + 4sub_10016EAD4(to, 0) = v98;
    swift_getErrorValue();
    uint64_t v100 = sub_1001ED110();
    *(void *)(v94 + 96) = &type metadata for String;
    *(void *)(v94 + 104) = v99;
    *(void *)(v94 + 72) = v100;
    *(void *)(v94 + 8sub_10016EAD4(to, 0) = v101;
    sub_1001EB530();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  uint64_t v102 = v147;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v104 = swift_getWitnessTable();
  id v155 = v102;
  unint64_t v156 = WitnessTable;
  uint64_t v157 = v104;
  uint64_t v158 = &protocol witness table for CRDTModelFileSyncInfo<A>;
  type metadata accessor for CRDTModelFileSyncTransport();
  uint64_t v105 = (void *)v5[12];
  uint64_t v106 = (uint64_t)v140;
  uint64_t v107 = v142;
  ((void (*)(char *, char *, uint64_t))v126)(v140, v129, v142);
  uint64_t v108 = (uint64_t)v139;
  id v109 = v148;
  ((void (*)(char *, char *, uint64_t))v133)(v139, v148, v75);
  id v110 = v105;
  uint64_t v111 = sub_1000CB094((uint64_t)v110, v106, v108);
  v128(v106, v107);

  v5[11] = v111;
  uint64_t v112 = v5[4] + *(void *)(*(void *)v5[4] + 128);
  swift_beginAccess();
  *(void *)(v112 + 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  v5[9] = _swiftEmptyArrayStorage;
  uint64_t v113 = swift_allocObject();
  swift_weakInit();
  os_log_t v114 = (void *)swift_allocObject();
  unint64_t v115 = v146;
  v114[2] = v138;
  v114[3] = v115;
  uint64_t v116 = v151;
  v114[4] = v145;
  v114[5] = v116;
  v114[6] = v113;
  sub_1000C9ECC((uint64_t)sub_1001886BC, (uint64_t)v114);
  swift_release();
  uint64_t v117 = (void (*)(char *, uint64_t))v135;
  ((void (*)(char *, uint64_t))v135)(v109, v75);
  v117(v153, v75);
  (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v141, v144);
  (*(void (**)(char *, void *))(v143 + 8))(v136, v102);
  sub_1000947F0((uint64_t)v152);
  return v5;
}

void *sub_1001872D8(void *a1, char *a2, char *a3, void (*a4)(uint64_t, uint64_t))
{
  return sub_100185FB0(a1, a2, a3, a4);
}

void *sub_10018733C(uint64_t a1, uint64_t a2, char a3, char *a4, char *a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v7 = v6;
  uint64_t v11 = *(void *)(v7 + 88);
  uint64_t v12 = *(void *)(v7 + 96);
  if (a3)
  {
    uint64_t v18 = type metadata accessor for CRDTModelFileSyncInfo();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v20 = swift_getWitnessTable();
    unint64_t v21 = &protocol witness table for CRDTModelFileSyncInfo<A>;
    type metadata accessor for CRDTModelFileSyncContextStore();
    uint64_t v13 = static CRDTModelFileSyncContextStore.groupPersistentContext(_:)(a1, a2);
  }
  else
  {
    uint64_t v18 = type metadata accessor for CRDTModelFileSyncInfo();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v20 = swift_getWitnessTable();
    unint64_t v21 = &protocol witness table for CRDTModelFileSyncInfo<A>;
    type metadata accessor for CRDTModelFileSyncContextStore();
    uint64_t v13 = static CRDTModelFileSyncContextStore.persistentContext(_:)(a1, a2);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t WitnessTable = v11;
  uint64_t v20 = v12;
  unint64_t v21 = (_UNKNOWN **)type metadata accessor for CRDTModelFileSyncManager.DefaultConfig();
  uint64_t v22 = &protocol witness table for CRDTModelFileSyncManager<A>.DefaultConfig;
  uint64_t v18 = v14;
  swift_allocObject();
  return sub_100185FB0(&v18, a4, a5, a6);
}

void sub_100187500(char *a1@<X8>)
{
  sub_100184DCC(*(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_100187524()
{
  return sub_100180594();
}

uint64_t type metadata accessor for CRDTModelFileSyncInfo()
{
  return swift_getGenericMetadata();
}

void sub_10018756C()
{
  sub_100183BD0(*(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), (void (*)(void))MarkedAsFinishedMechanism.rawValue.getter, 0);
}

uint64_t sub_1001875B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001875CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1001875E8(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 + 24) + 8);
}

uint64_t sub_1001875F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100187610()
{
  return swift_getWitnessTable();
}

uint64_t sub_10018762C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100187648()
{
  return swift_getWitnessTable();
}

uint64_t sub_100187664()
{
  return swift_getWitnessTable();
}

uint64_t sub_100187680()
{
  return swift_getWitnessTable();
}

uint64_t sub_10018769C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100187738(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100187834(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001878A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100187924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001879B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100187A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100187AB0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100187BFCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v1sub_10016EAD4(to, 0) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_100187C10(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x100187DECLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_100187E14()
{
  type metadata accessor for CRDTModelFileSyncInfo();
  swift_getWitnessTable();
  uint64_t result = sub_1001EC0F0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001EB560();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelFileSyncManager()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CRDTModelFileSyncManager.DefaultConfig()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_100187F98(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100188064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelFileSyncManager.SyncError()
{
  return swift_getGenericMetadata();
}

void sub_1001880A4()
{
  sub_100182964(*(void (**)(uint64_t, uint64_t))(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_1001880C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14((uint64_t *)&unk_1002933E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100188130()
{
  uint64_t v1 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100188220()
{
  sub_10007DC14((uint64_t *)&unk_1002933D0);
  sub_10017D224();
  sub_1001EBFA0();
  return swift_release();
}

uint64_t sub_1001882E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_10016EAD4(to, 0) = v2;
  return swift_retain();
}

uint64_t sub_1001882F8()
{
  return swift_release();
}

uint64_t sub_100188300()
{
  swift_weakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100188338(uint64_t *a1)
{
  return sub_10017D850(*a1);
}

uint64_t sub_100188344(uint64_t a1)
{
  return sub_10017DEE4(a1);
}

uint64_t sub_10018834C()
{
  uint64_t v1 = sub_10007DC14((uint64_t *)&unk_1002933D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

void sub_10018841C()
{
  uint64_t v1 = *(void *)(sub_10007DC14((uint64_t *)&unk_1002933D0) - 8);
  sub_10017E458(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_100188484()
{
  return sub_10017E5E0(v0);
}

uint64_t sub_10018848C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A6688(v1, a1);
}

uint64_t sub_1001884A8(char *a1)
{
  return sub_1001823D0(a1, v1);
}

uint64_t sub_1001884B0()
{
  swift_release();
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001884E8()
{
  return sub_100118B8C(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1001884F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100188504(char *a1)
{
  return sub_1001825D8(a1, v1);
}

uint64_t sub_10018850C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018851C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018852C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10018858C()
{
  return sub_100185608();
}

uint64_t sub_1001885AC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001885F4()
{
  return sub_1001857C4(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_100188600@<X0>(uint64_t a1@<X8>)
{
  return sub_1001802E0(a1);
}

uint64_t sub_10018861C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100188684()
{
  swift_release();
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001886BC(uint64_t a1)
{
  return sub_10018075C(a1);
}

uint64_t sub_1001886CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100188714()
{
  return sub_1001808C8(*(void *)(v0 + 24));
}

uint64_t sub_100188744()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018877C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001887A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 24;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return _swift_deallocObject(v0, v6, v5);
}

void sub_100188884()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  sub_100185144(*(void *)(v0 + 48), v0 + v1, *(unsigned char *)(v0 + v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)), *(void (**)(void))(((v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)) & 0xFFFFFFFFFFFFFFF8)+ v0+ 8), *(void *)(((v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 16));
}

uint64_t sub_1001888F4@<X0>(void *a1@<X8>)
{
  return sub_10013211C(a1);
}

uint64_t sub_100188950()
{
  return sub_10018858C();
}

uint64_t sub_100188968(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1001EC530();
  }
  else {
    return 0;
  }
}

Swift::Int sub_1001889B0()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 16);
  sub_1001ED170();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  sub_1001ED190(v1);
  return sub_1001ED1A0();
}

void sub_100188A24()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  sub_1001ED190(v1);
}

Swift::Int sub_100188A80()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 16);
  sub_1001ED170();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  sub_1001ED190(v1);
  return sub_1001ED1A0();
}

uint64_t sub_100188AF0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 ^ v3 ^ 1u;
  }
  char v5 = sub_1001ED080();
  uint64_t result = 0;
  if (v5) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

unint64_t sub_100188B50@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_100188E54(a1, a2);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v6;
  return result;
}

uint64_t sub_100188B7C()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(void **)(v0 + 8);
  if (*(unsigned char *)(v0 + 16)) {
    v3._countAndFlagsBits = 65;
  }
  else {
    v3._countAndFlagsBits = 66;
  }
  v3._object = (void *)0xE100000000000000;
  sub_1001EC490(v3);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 46;
  v5._object = (void *)0xE100000000000000;
  sub_1001EC490(v5);
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v1;
  v6._object = v2;
  sub_1001EC490(v6);
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_100188C0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100189088(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_100188C40(void *a1)
{
  uint64_t v2 = *(void *)v1;
  Swift::String v3 = *(void **)(v1 + 8);
  int v4 = *(unsigned __int8 *)(v1 + 16);
  sub_100094758(a1, a1[3]);
  sub_1001ED1E0();
  if (v4) {
    v5._countAndFlagsBits = 65;
  }
  else {
    v5._countAndFlagsBits = 66;
  }
  v5._object = (void *)0xE100000000000000;
  sub_1001EC490(v5);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 46;
  v9._object = (void *)0xE100000000000000;
  sub_1001EC490(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v2;
  v10._object = v3;
  sub_1001EC490(v10);
  swift_bridgeObjectRelease();
  sub_100095C78((uint64_t)v7, v8);
  sub_1001ED0A0();
  swift_bridgeObjectRelease();
  return sub_1000947F0((uint64_t)v7);
}

unint64_t sub_100188D50()
{
  unint64_t result = qword_1002963F0;
  if (!qword_1002963F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002963F0);
  }
  return result;
}

unint64_t sub_100188DA4(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = sub_1001EC470();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1001EC550();
}

unint64_t sub_100188E54(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_100188968(a1, a2);
  if (!v5) {
    goto LABEL_21;
  }
  uint64_t v6 = v4;
  uint64_t v7 = v5;
  if (v4 == 66 && v5 == 0xE100000000000000 || (sub_1001ED080() & 1) != 0 || v6 == 65 && v7 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      goto LABEL_21;
    }
  }
  unint64_t v8 = sub_100188DA4(1uLL, a1, a2);
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10 >> 14 == v8 >> 14) {
    goto LABEL_21;
  }
  if (sub_1001ECB80() == 46 && v11 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_21;
    }
  }
  unint64_t result = sub_1001ECB70();
  if (v14) {
    unint64_t result = v10;
  }
  if (v10 >> 14 >= result >> 14)
  {
    uint64_t v15 = sub_1001ECB90();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if ((v15 ^ v17) >= 0x4000)
    {
      uint64_t v18 = sub_1001EC410();
      swift_bridgeObjectRelease();
      return v18;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

void *sub_100189088(void *a1)
{
  uint64_t v3 = sub_100094758(a1, a1[3]);
  sub_1001ED1C0();
  if (!v1)
  {
    sub_100094758(&v12, v14);
    uint64_t v4 = sub_1001ED090();
    uint64_t v6 = v5;
    sub_1000947F0((uint64_t)&v12);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_100188E54(v4, (unint64_t)v6);
    if (v9)
    {
      uint64_t v3 = (void *)v8;
      swift_bridgeObjectRelease();
      sub_1000947F0((uint64_t)a1);
      return v3;
    }
    unint64_t v10 = sub_100094758(a1, a1[3]);
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_1001ECD20(25);
    swift_bridgeObjectRelease();
    uint64_t v12 = 39;
    unint64_t v13 = 0xE100000000000000;
    v15._countAndFlagsBits = v4;
    v15._object = v6;
    sub_1001EC490(v15);
    swift_bridgeObjectRelease();
    v16._object = (void *)0x8000000100227000;
    v16._countAndFlagsBits = 0xD000000000000016;
    sub_1001EC490(v16);
    sub_1001ECD80();
    swift_allocError();
    uint64_t v3 = v10;
    sub_100158140(v11);
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  sub_1000947F0((uint64_t)a1);
  return v3;
}

uint64_t sub_100189254(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13TrackedItemIDVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s13TrackedItemIDVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s13TrackedItemIDVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13TrackedItemIDVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13TrackedItemIDVMa()
{
  return &_s13TrackedItemIDVN;
}

unint64_t sub_1001893C0()
{
  unint64_t result = qword_1002963F8;
  if (!qword_1002963F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002963F8);
  }
  return result;
}

uint64_t _s20TemplateNotificationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s20TemplateNotificationVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s20TemplateNotificationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s20TemplateNotificationVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8sub_10016EAD4(to, 0) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *_s20TemplateNotificationVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20TemplateNotificationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s20TemplateNotificationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_10016EAD4(to, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s20TemplateNotificationVMa()
{
  return &_s20TemplateNotificationVN;
}

unint64_t sub_100189744(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6953656C746974;
      break;
    case 2:
      unint64_t result = 0x6C754D656C746974;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x676E695379646F62;
      break;
    case 5:
      unint64_t result = 0x746C754D79646F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100189848(void *a1)
{
  uint64_t v3 = sub_10007DC14(&qword_100296428);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100094758(a1, a1[3]);
  sub_10018AC14();
  sub_1001ED1F0();
  v8[15] = 0;
  sub_1001ECFE0();
  if (!v1)
  {
    v8[14] = 1;
    sub_1001ECFE0();
    v8[13] = 2;
    sub_1001ECFE0();
    v8[12] = 3;
    sub_1001ECFE0();
    v8[11] = 4;
    sub_1001ECFE0();
    v8[10] = 5;
    sub_1001ECFE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_100189A48()
{
  return sub_100189744(*v0);
}

uint64_t sub_100189A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10018A458(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100189A78(uint64_t a1)
{
  unint64_t v2 = sub_10018AC14();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100189AB4(uint64_t a1)
{
  unint64_t v2 = sub_10018AC14();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100189AF0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10018A758(a1, (uint64_t *)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_100189B3C(void *a1)
{
  return sub_100189848(a1);
}

uint64_t sub_100189B54(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  void v9[2] = a1[2];
  v9[3] = v2;
  long long v3 = a1[5];
  v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  v10[2] = a2[2];
  uint64_t v10[3] = v5;
  long long v6 = a2[5];
  void v10[4] = a2[4];
  v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_10018A320(v9, v10) & 1;
}

uint64_t sub_100189BB0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v64 = sub_1001EB0C0();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  long long v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EAF60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v63 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v15 = (char *)&v55 - v14;
  uint64_t v16 = _s4DealVMa();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    uint64_t v61 = v17;
    sub_10018AC68(a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), (uint64_t)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    if (v21 == 1)
    {
      if (v20[16] == 1)
      {
        uint64_t v22 = v2 + 1;
        uint64_t v23 = v2 + 6;
        uint64_t v24 = v2 + 7;
      }
      else
      {
        uint64_t v22 = v2 + 3;
        uint64_t v23 = v2 + 8;
        uint64_t v24 = v2 + 9;
        v2 += 2;
      }
      uint64_t v36 = *v22;
      uint64_t v57 = *v2;
      uint64_t v37 = *v24;
      uint64_t v38 = *v23;
      uint64_t v59 = v36;
      uint64_t v60 = v38;
      swift_bridgeObjectRetain();
      uint64_t v58 = v37;
      swift_bridgeObjectRetain();
      unint64_t v39 = *((void *)v20 + 4);
      uint64_t v56 = *((void *)v20 + 3);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, &v20[*(int *)(v61 + 24)], v10);
      unint64_t v55 = v39;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v33 = v2[4];
      uint64_t v32 = v2[5];
      uint64_t v34 = v2[10];
      uint64_t v35 = v2[11];
      uint64_t v60 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001EAF40();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      if (result == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v57 = v33;
      uint64_t v58 = v35;
      uint64_t v59 = v32;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v9, v10);
      unint64_t v55 = 0xE000000000000000;
      uint64_t v56 = 0;
    }
    sub_10007DC14(&qword_100296430);
    uint64_t v40 = sub_1001EACC0();
    uint64_t v41 = *(void *)(v40 - 8);
    unint64_t v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_100215320;
    unint64_t v44 = v43 + v42;
    if (qword_100291180 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_10007CFF8(v40, (uint64_t)qword_100296400);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v41 + 16))(v44, v45, v40);
    uint64_t v46 = v63;
    sub_1001EAF50();
    swift_bridgeObjectRelease();
    uint64_t v47 = v62;
    uint64_t v48 = v64;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v6, &v20[*(int *)(v61 + 28)], v64);
    sub_1001EB010();
    double v50 = v49;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v6, v48);
    if ((~*(void *)&v50 & 0x7FF0000000000000) != 0)
    {
      if (v50 > -9.22337204e18)
      {
        if (v50 < 9.22337204e18)
        {
          (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
          sub_10018ACCC((uint64_t)v20);
          uint64_t v51 = v57;
          *(void *)a2 = (uint64_t)v50;
          *((void *)a2 + 1) = v51;
          uint64_t v52 = v56;
          *((void *)a2 + 2) = v59;
          *((void *)a2 + 3) = v52;
          uint64_t v53 = v60;
          *((void *)a2 + 4) = v55;
          *((void *)a2 + 5) = v53;
          *((void *)a2 + 6) = v58;
          uint64_t v54 = _s21PriceDropNotificationVMa();
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&a2[*(int *)(v54 + 32)], v46, v10);
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(a2, 0, 1, v54);
        }
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (qword_1002910B8 != -1) {
LABEL_24:
  }
    swift_once();
  uint64_t v25 = sub_1001EB560();
  sub_10007CFF8(v25, (uint64_t)qword_1002A4198);
  uint64_t v26 = sub_1001EB540();
  os_log_type_t v27 = sub_1001EC910();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "[TemplateNotification] No notification (no deals)", v28, 2u);
    swift_slowDealloc();
  }

  uint64_t v29 = _s21PriceDropNotificationVMa();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  return v30(a2, 1, 1, v29);
}

uint64_t sub_10018A29C()
{
  uint64_t v0 = sub_1001EACC0();
  sub_10008176C(v0, qword_100296400);
  sub_10007CFF8(v0, (uint64_t)qword_100296400);
  return sub_1001EACB0();
}

uint64_t sub_10018A320(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1001ED080(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_1001ED080(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (v9 = sub_1001ED080(), uint64_t result = 0, (v9 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7] || (v10 = sub_1001ED080(), uint64_t result = 0, (v10 & 1) != 0))
        {
          if (a1[8] == a2[8] && a1[9] == a2[9] || (v11 = sub_1001ED080(), uint64_t result = 0, (v11 & 1) != 0))
          {
            if (a1[10] == a2[10] && a1[11] == a2[11])
            {
              return 1;
            }
            else
            {
              return sub_1001ED080();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10018A458(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000100227050 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6953656C746974 && a2 == 0xEF6B6F6F42656C67 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C754D656C746974 && a2 == 0xED0000656C706974 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100227070 || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E695379646F62 && a2 == 0xEE006B6F6F42656CLL || (sub_1001ED080() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746C754D79646F62 && a2 == 0xEC000000656C7069)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1001ED080();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10018A758@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10007DC14(&qword_100296418);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100094758(a1, a1[3]);
  sub_10018AC14();
  sub_1001ED1D0();
  if (v2) {
    return sub_1000947F0((uint64_t)a1);
  }
  char v41 = 0;
  uint64_t v9 = sub_1001ECF60();
  uint64_t v11 = v10;
  char v40 = 1;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1001ECF60();
  uint64_t v34 = v9;
  char v39 = 2;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1001ECF60();
  uint64_t v35 = v15;
  uint64_t v30 = v14;
  char v38 = 3;
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  uint64_t v29 = sub_1001ECF60();
  char v37 = 4;
  uint64_t v32 = v16;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1001ECF60();
  uint64_t v28 = v17;
  char v36 = 5;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1001ECF60();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v31 = v18;
  v21(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = v35;
  swift_bridgeObjectRetain();
  uint64_t v23 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000947F0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v24 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v34;
  a2[1] = v11;
  a2[2] = v33;
  a2[3] = v13;
  a2[4] = v30;
  a2[5] = v22;
  a2[6] = v29;
  a2[7] = v23;
  a2[8] = v27;
  a2[9] = v24;
  a2[10] = v31;
  a2[11] = v20;
  return result;
}

unint64_t sub_10018AC14()
{
  unint64_t result = qword_100296420;
  if (!qword_100296420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296420);
  }
  return result;
}

uint64_t sub_10018AC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s4DealVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018ACCC(uint64_t a1)
{
  uint64_t v2 = _s4DealVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s20TemplateNotificationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018ADF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20TemplateNotificationV10CodingKeysOMa()
{
  return &_s20TemplateNotificationV10CodingKeysON;
}

unint64_t sub_10018AE30()
{
  unint64_t result = qword_100296438;
  if (!qword_100296438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296438);
  }
  return result;
}

unint64_t sub_10018AE88()
{
  unint64_t result = qword_100296440;
  if (!qword_100296440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296440);
  }
  return result;
}

unint64_t sub_10018AEE0()
{
  unint64_t result = qword_100296448;
  if (!qword_100296448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296448);
  }
  return result;
}

unint64_t sub_10018AF38()
{
  unint64_t result = qword_100296450;
  if (!qword_100296450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296450);
  }
  return result;
}

BOOL sub_10018AF8C(double *a1, double *a2)
{
  if (*a1 == *a2) {
    return a1[1] < a2[1];
  }
  else {
    return *a1 < *a2;
  }
}

BOOL sub_10018AFAC(double *a1, double *a2)
{
  if (*a2 == *a1) {
    return a2[1] >= a1[1];
  }
  else {
    return *a2 >= *a1;
  }
}

BOOL sub_10018AFCC(double *a1, double *a2)
{
  if (*a1 == *a2) {
    return a1[1] >= a2[1];
  }
  else {
    return *a1 >= *a2;
  }
}

BOOL sub_10018AFEC(double *a1, double *a2)
{
  if (*a2 == *a1) {
    return a2[1] < a1[1];
  }
  else {
    return *a2 < *a1;
  }
}

ValueMetadata *_s15PriceDifferenceVMa()
{
  return &_s15PriceDifferenceVN;
}

uint64_t initializeWithCopy for SystemTaskRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SystemTaskRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

__n128 initializeWithTake for SystemTaskRequest(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SystemTaskRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemTaskRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemTaskRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 4sub_10016EAD4(to, 0) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemTaskRequest()
{
  return &type metadata for SystemTaskRequest;
}

unint64_t sub_10018B20C()
{
  unint64_t result = qword_100296458;
  if (!qword_100296458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296458);
  }
  return result;
}

uint64_t sub_10018B260(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t result = *(unsigned __int8 *)(a2 + 16);
  if ((v3 & 1) == 0)
  {
    if (result)
    {
      return 0;
    }
    else
    {
      double v5 = *(double *)a1;
      BOOL v6 = *(double *)(a1 + 8) == *(double *)(a2 + 8);
      return v5 == *(double *)a2 && v6;
    }
  }
  return result;
}

uint64_t sub_10018B298(__n128 *a1, __n128 *a2)
{
  __n128 v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  uint64_t v5[2] = a1[2];
  unsigned __int8 v6 = a1[3].n128_u8[0];
  __n128 v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v7[2] = a2[2];
  unsigned __int8 v8 = a2[3].n128_u8[0];
  return sub_10018B6DC(v5, v7) & 1;
}

unint64_t sub_10018B2F8()
{
  unint64_t result = qword_100296460;
  if (!qword_100296460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100296460);
  }
  return result;
}

uint64_t sub_10018B34C()
{
  uint64_t v4 = sub_10018B41C();
  v5._countAndFlagsBits = 124;
  v5._object = (void *)0xE100000000000000;
  sub_1001EC490(v5);
  sub_10018B540();
  sub_1001EC490(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 124;
  v7._object = (void *)0xE100000000000000;
  sub_1001EC490(v7);
  if (*(unsigned char *)(v0 + 25)) {
    v1._countAndFlagsBits = 80;
  }
  else {
    v1._countAndFlagsBits = 45;
  }
  v1._object = (void *)0xE100000000000000;
  sub_1001EC490(v1);
  v8._countAndFlagsBits = 124;
  v8._object = (void *)0xE100000000000000;
  sub_1001EC490(v8);
  if (*(unsigned char *)(v0 + 24)) {
    v2._countAndFlagsBits = 30574;
  }
  else {
    v2._countAndFlagsBits = 11565;
  }
  v2._object = (void *)0xE200000000000000;
  sub_1001EC490(v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10018B41C()
{
  uint64_t result = 1701736270;
  switch(*(void *)(v0 + 16))
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x616E65746E69614DLL;
      break;
    case 2:
      uint64_t result = 0x7974696C697455;
      break;
    case 3:
      uint64_t result = 0x74696E4972657355;
      break;
    default:
      v2._countAndFlagsBits = sub_1001ED040();
      sub_1001EC490(v2);
      swift_bridgeObjectRelease();
      v3._countAndFlagsBits = 41;
      v3._object = (void *)0xE100000000000000;
      sub_1001EC490(v3);
      uint64_t result = 0x286E776F6E6B6E55;
      break;
  }
  return result;
}

void sub_10018B540()
{
  sub_1000DB57C(v0 + 2, &v4);
  sub_1000DB57C(&v4, &v5);
  if ((v6 & 1) == 0)
  {
    double v1 = round(v5.n128_f64[0]);
    if ((~*(void *)&v1 & 0x7FF0000000000000) != 0)
    {
      if (v1 > -9.22337204e18)
      {
        if (v1 < 9.22337204e18)
        {
          double v2 = v5.n128_f64[1];
          sub_1001ED040();
          v7._countAndFlagsBits = 47;
          v7._object = (void *)0xE100000000000000;
          sub_1001EC490(v7);
          double v3 = round(v2);
          if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
          {
            if (v3 > -9.22337204e18)
            {
              if (v3 < 9.22337204e18)
              {
                v8._countAndFlagsBits = sub_1001ED040();
                sub_1001EC490(v8);
                swift_bridgeObjectRelease();
                return;
              }
LABEL_15:
              __break(1u);
              return;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

uint64_t sub_10018B698()
{
  return sub_10018B34C();
}

uint64_t sub_10018B6DC(__n128 *a1, __n128 *a2)
{
  BOOL v4 = a1->n128_u64[0] == a2->n128_u64[0] && a1->n128_u64[1] == a2->n128_u64[1];
  if (v4 || (v5 = sub_1001ED080(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if (a1[1].n128_u64[0] != a2[1].n128_u64[0]
      || ((a1[1].n128_u8[8] ^ a2[1].n128_u8[8]) & 1) != 0
      || ((a1[1].n128_u8[9] ^ a2[1].n128_u8[9]) & 1) != 0)
    {
      return 0;
    }
    sub_1000DB57C(a1 + 2, &v9);
    sub_1000DB57C(a2 + 2, &v8);
    sub_1000DB57C(&v9, &v10);
    if (v11)
    {
      sub_1000DB57C(&v8, &v12);
      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      __n128 v7 = v10;
      sub_1000DB57C(&v8, &v12);
      if ((v13 & 1) != 0 || v7.n128_f64[0] != v12.n128_f64[0] || v7.n128_f64[1] != v12.n128_f64[1]) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SystemTaskRequest.TaskType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SystemTaskRequest.TaskType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_10018B83C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10018B858(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemTaskRequest.TaskType()
{
  return &type metadata for SystemTaskRequest.TaskType;
}

ValueMetadata *type metadata accessor for SystemTaskRequest.ID()
{
  return &type metadata for SystemTaskRequest.ID;
}

uint64_t sub_10018B898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B8EC(a1, a2, a3);
}

uint64_t sub_10018B8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10018B8EC(a1, a2, a3);
}

uint64_t sub_10018B8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001EC6A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1001EC690();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000816A4(a1, &qword_100293840);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1001EC650();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t *BDSSyncEngine.shared.unsafeMutableAddressor()
{
  if (qword_100291188 != -1) {
    swift_once();
  }
  return &static BDSSyncEngine.shared;
}

Swift::Void __swiftcall BDSSyncEngine.scheduleSync()()
{
  uint64_t v0 = sub_1001EB540();
  os_log_type_t v1 = sub_1001EC910();
  if (os_log_type_enabled(v0, v1))
  {
    double v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v3 = swift_slowAlloc();
    *(_DWORD *)double v2 = 136315138;
    sub_1001A8090(0x656C756465686373, 0xEE002928636E7953, &v3);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "BDSSyncEngine - %s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10018FCD4(1);
}

uint64_t BDSSyncEngine.addSaltChangeObserver(_:)(uint64_t a1)
{
  swift_getObjectType();
  return sub_10019C01C(a1, v1);
}

uint64_t BDSSyncEngine.sendChangesIfReady()()
{
  v1[3] = v0;
  uint64_t v2 = sub_1001EB680();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_1001EB6B0();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_10018BD90, 0, 0);
}

uint64_t sub_10018BD90()
{
  __n128 v10 = v0;
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC910();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    v0[2] = sub_1001A8090(0xD000000000000014, 0x8000000100227090, &v9);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "BDSSyncEngine - %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if ((sub_10018FFD0() & 1) != 0
    && (uint64_t v4 = *(void *)(v0[3] + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine), (v0[10] = v4) != 0))
  {
    (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for CKSyncEngine.SendChangesOptions.Scope.all(_:), v0[4]);
    swift_retain();
    sub_1001EB690();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[11] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10018C008;
    uint64_t v6 = v0[9];
    return CKSyncEngine.sendChanges(_:)(v6);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10018C008()
{
  uint64_t v2 = *(void *)(*v1 + 72);
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *v1;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    return _swift_task_switch(sub_10018C1DC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_10018C1DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10018C24C(unint64_t a1)
{
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    sub_100081668(0, (unint64_t *)&unk_100296550);
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1001EC5F0();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1001A8090(v5, v7, &v8);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - handleZoneMissingOrDeleted: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100193F10(a1, 1);
}

Swift::Void __swiftcall BDSSyncEngine.resetCloudKitZone(_:)(CKRecordZone a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10007DC14(&qword_100293840);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine);
  if (v7)
  {
    uint64_t v8 = a1.super.isa;
    swift_retain();
    uint64_t v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC910();
    BOOL v11 = os_log_type_enabled(v9, v10);
    char v40 = v8;
    if (v11)
    {
      uint64_t v12 = swift_slowAlloc();
      char v39 = v6;
      uint64_t v13 = v12;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v37 = v7;
      uint64_t v15 = (void *)v14;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v38 = v1;
      v36[1] = v16;
      v41[0] = v16;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v42 = sub_1001A8090(0xD000000000000015, 0x80000001002270B0, v41);
      sub_1001ECBC0();
      *(_WORD *)(v13 + 12) = 2114;
      uint64_t v42 = (uint64_t)v8;
      uint64_t v17 = v8;
      sub_1001ECBC0();
      *uint64_t v15 = v8;

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "BDSSyncEngine - %s. Removing zone - %{public}@", (uint8_t *)v13, 0x16u);
      sub_10007DC14(&qword_100293190);
      swift_arrayDestroy();
      uint64_t v7 = v37;
      swift_slowDealloc();
      swift_arrayDestroy();
      uint64_t v2 = v38;
      swift_slowDealloc();
      unint64_t v6 = v39;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v20 = (id *)(v2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
    swift_beginAccess();
    if (*v20)
    {
      [*v20 invalidateSalt];
    }
    else
    {
      uint64_t v21 = sub_1001EB540();
      os_log_type_t v22 = sub_1001EC8F0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "BDSSyncEngine - invalidateSalt: saltManager not initialized", v23, 2u);
        swift_slowDealloc();
      }
    }
    sub_1001EBA00();
    sub_10007DC14(&qword_100292E10);
    uint64_t v24 = sub_1001EB740();
    uint64_t v25 = *(void *)(v24 - 8);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v27 = (_OWORD *)swift_allocObject();
    v27[1] = xmmword_100215320;
    uint64_t v28 = (void *)((char *)v27 + v26);
    uint64_t v29 = v40;
    void *v28 = [v40 zoneID];
    (*(void (**)(void *, void, uint64_t))(v25 + 104))(v28, enum case for CKSyncEngine.PendingDatabaseChange.deleteZone(_:), v24);
    v30._rawValue = v27;
    sub_1001EB9F0(v30);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v31 = sub_1001EC6A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v6, 1, 1, v31);
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = 0;
    v33[3] = 0;
    v33[4] = v32;
    v33[5] = v7;
    v33[6] = v29;
    uint64_t v34 = v29;
    sub_10018B8EC((uint64_t)v6, (uint64_t)&unk_1002964A8, (uint64_t)v33);
    swift_release();
  }
  else
  {
    char v40 = sub_1001EB540();
    os_log_type_t v18 = sub_1001EC900();
    if (os_log_type_enabled(v40, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      v41[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v42 = sub_1001A8090(0xD000000000000015, 0x80000001002270B0, v41);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v40, v18, "BDSSyncEngine - %s: syncEngine not initialized", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v35 = v40;
    }
  }
}

void sub_10018CA1C()
{
  uint64_t v0 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1001EAF60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  os_log_type_t v10 = (char *)v27 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v27 - v11;
  type metadata accessor for BDSSyncEngineMetadataStore();
  sub_1001016F0((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000816A4((uint64_t)v2, &qword_100295230);
    if (qword_1002910E0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1001EB560();
    sub_10007CFF8(v13, (uint64_t)qword_1002938A0);
    uint64_t v14 = sub_1001EB540();
    os_log_type_t v15 = sub_1001EC8F0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Could not save metadata. No BaseURL", v16, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v2, v3);
    sub_1001EAEE0();
    sub_1001EAC60();
    swift_allocObject();
    sub_1001EAC50();
    type metadata accessor for BDSSyncEngineStateMetadata();
    sub_1001A2FD0((unint64_t *)&unk_1002967B0, (void (*)(uint64_t))type metadata accessor for BDSSyncEngineStateMetadata);
    uint64_t v17 = sub_1001EAC40();
    unint64_t v19 = v18;
    swift_release();
    sub_1001EAFF0();
    uint64_t v30 = v17;
    if (qword_1002910E0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1001EB560();
    sub_10007CFF8(v20, (uint64_t)qword_1002938A0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v10, v3);
    uint64_t v21 = sub_1001EB540();
    os_log_type_t v22 = sub_1001EC910();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v32 = v29;
      uint64_t v28 = v23;
      *(_DWORD *)uint64_t v23 = 136315138;
      v27[1] = v23 + 4;
      sub_1001A2FD0(&qword_100293400, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v24 = sub_1001ED040();
      uint64_t v31 = sub_1001A8090(v24, v25, &v32);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      unint64_t v26 = *(void (**)(char *, uint64_t))(v4 + 8);
      v26(v7, v3);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Saved sync engine metadata at: %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100081714(v30, v19);
    }
    else
    {
      sub_100081714(v30, v19);

      unint64_t v26 = *(void (**)(char *, uint64_t))(v4 + 8);
      v26(v7, v3);
    }
    v26(v10, v3);
    v26(v12, v3);
  }
}

uint64_t sub_10018D1EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v1 = sub_10007DC14(&qword_100295230);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EAF60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v43 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v48 = type metadata accessor for BDSSyncEngineStateMetadata();
  type metadata accessor for BDSSyncEngineMetadataStore();
  sub_1001016F0((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1000816A4((uint64_t)v3, &qword_100295230);
    if (qword_1002910E0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1001EB560();
    sub_10007CFF8(v15, (uint64_t)qword_1002938A0);
    uint64_t v16 = sub_1001EB540();
    os_log_type_t v17 = sub_1001EC8F0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v49;
    if (v18)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Could not get metadata. No BaseURL", v20, 2u);
      swift_slowDealloc();
    }

    uint64_t v21 = 1;
  }
  else
  {
    uint64_t v47 = v5;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v14, v3, v4);
    uint64_t v46 = v14;
    sub_1001EAEE0();
    id v22 = [self defaultManager];
    sub_1001EAF30();
    NSString v23 = sub_1001EC340();
    swift_bridgeObjectRelease();
    unsigned __int8 v24 = [v22 fileExistsAtPath:v23];

    uint64_t v25 = v4;
    if (v24)
    {
      uint64_t v45 = v12;
      uint64_t v26 = sub_1001EAF80();
      uint64_t v19 = v49;
      uint64_t v36 = v26;
      unint64_t v38 = v37;
      unint64_t v44 = (uint8_t *)v4;
      sub_1001EABC0();
      swift_allocObject();
      sub_1001EABB0();
      sub_1001A2FD0(&qword_1002967D0, (void (*)(uint64_t))type metadata accessor for BDSSyncEngineStateMetadata);
      sub_1001EABA0();
      uint64_t v39 = v47;
      swift_release();
      sub_100081714(v36, v38);
      char v40 = *(void (**)(char *, uint8_t *))(v39 + 8);
      char v41 = v44;
      v40(v45, v44);
      v40(v46, v41);
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v19 = v49;
      if (qword_1002910E0 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1001EB560();
      sub_10007CFF8(v27, (uint64_t)qword_1002938A0);
      uint64_t v28 = v47;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v9, v12, v25);
      uint64_t v29 = sub_1001EB540();
      os_log_type_t v30 = sub_1001EC8F0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315138;
        unint64_t v44 = v31 + 4;
        sub_1001A2FD0(&qword_100293400, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v32 = sub_1001ED040();
        uint64_t v50 = sub_1001A8090(v32, v33, &v51);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        uint64_t v34 = *(void (**)(char *, uint64_t))(v28 + 8);
        v34(v9, v25);
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Could not locate metadata file at %s", v31, 0xCu);
        uint64_t v21 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v19 = v49;
        swift_slowDealloc();

        v34(v12, v25);
        v34(v46, v25);
      }
      else
      {

        uint64_t v35 = *(void (**)(char *, uint64_t))(v28 + 8);
        v35(v9, v25);
        v35(v12, v25);
        v35(v46, v25);
        uint64_t v21 = 1;
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v19, v21, 1);
}

BDSCloudSyncDiagnosticSyncEngineInfo __swiftcall BDSSyncEngine.diagnosticSyncEngineInfo()()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v1) {
    id v2 = [*v1 establishedSalt];
  }
  else {
    id v2 = 0;
  }
  result.super.Class isa = (Class)[objc_allocWithZone((Class)BDSCloudSyncDiagnosticSyncEngineInfo) initWithEstablishedSalt:v2];
  result._establishedSalt = v3;
  return result;
}

uint64_t BDSSyncEngine.clearMetadata()()
{
  sub_10007DC14(&qword_1002964C0);
  sub_1001EC9E0();
  return v1;
}

uint64_t BDSSyncEngine.fetchRemoteChanges()()
{
  v1[2] = v0;
  uint64_t v2 = sub_1001EB700();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_1001EB730();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_10018DE58, 0, 0);
}

uint64_t sub_10018DE58()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine);
  v0[9] = v1;
  if (v1)
  {
    (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), v0[3]);
    swift_retain();
    sub_1001EB710();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10018DF9C;
    uint64_t v3 = v0[8];
    return CKSyncEngine.fetchChanges(_:)(v3);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4(0);
  }
}

uint64_t sub_10018DF9C()
{
  uint64_t v2 = *(void *)(*v1 + 64);
  uint64_t v3 = *(void *)(*v1 + 56);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v5 = *v1;
  *(void *)(v5 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    return _swift_task_switch(sub_10018E170, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6(0);
  }
}

uint64_t sub_10018E170()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

id sub_10018E1E4()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for BDSSyncEngine()) init];
  static BDSSyncEngine.shared = (uint64_t)result;
  return result;
}

id static BDSSyncEngine.shared.getter()
{
  if (qword_100291188 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static BDSSyncEngine.shared;
  return v0;
}

Swift::Void __swiftcall BDSSyncEngine.setDatabase(_:config:)(CKDatabase _, BCCloudKitConfiguration *config)
{
  uint64_t v3 = v2;
  Class isa = _.super.isa;
  char v41 = config;
  uint64_t v4 = sub_1001EB660();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&isa - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&isa - v8;
  uint64_t v10 = sub_10007DC14((uint64_t *)&unk_1002964D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&isa - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10007DC14(&qword_100293988);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&isa - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  BOOL v18 = (char *)&isa - v17;
  uint64_t v19 = sub_1001EB540();
  os_log_type_t v20 = sub_1001EC910();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Setting up CKSyncEngine...", v21, 2u);
    swift_slowDealloc();
  }

  sub_10018D1EC((uint64_t)v12);
  uint64_t v22 = type metadata accessor for BDSSyncEngineStateMetadata();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v12, 1, v22) == 1)
  {
    sub_1000816A4((uint64_t)v12, (uint64_t *)&unk_1002964D0);
    uint64_t v23 = sub_1001EB9C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 1, 1, v23);
  }
  else
  {
    sub_10019C46C((uint64_t)&v12[*(int *)(v22 + 20)], (uint64_t)v18);
    sub_100102B30((uint64_t)v12);
  }
  uint64_t v24 = v4;
  Class v25 = isa;
  uint64_t v26 = v41;
  sub_10019C46C((uint64_t)v18, (uint64_t)v16);
  sub_1001A2FD0(&qword_1002964E0, (void (*)(uint64_t))type metadata accessor for BDSSyncEngine);
  uint64_t v27 = v25;
  uint64_t v28 = v3;
  sub_1001EB650();
  swift_bridgeObjectRetain();
  sub_1001EB640();
  uint64_t v29 = [(BCCloudKitConfiguration *)v26 dbSubscriptionID];
  if (v29)
  {
    os_log_type_t v30 = v29;
    sub_1001EC370();
  }
  sub_1001EB630();
  uint64_t v31 = v42;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v7, v9, v24);
  sub_1001EBA10();
  swift_allocObject();
  *(void *)&v28[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine] = sub_1001EBA20();
  swift_release();
  sub_10018F2D4("BDSSyncEngine - setting hasPendingUntrackedChanges=false", 0, 0xD00000000000001FLL, 0x8000000100227690);
  id v32 = [objc_allocWithZone((Class)BDSSyncEngineSaltManager) initWithDatabase:v27 observer:v28];
  unint64_t v33 = (void **)&v28[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager];
  swift_beginAccess();
  uint64_t v34 = *v33;
  *unint64_t v33 = v32;

  swift_beginAccess();
  uint64_t v35 = *v33;
  if (*v33)
  {
    swift_endAccess();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v28;
    aBlock[4] = sub_10019C520;
    void aBlock[5] = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10018E8AC;
    void aBlock[3] = &unk_10026AB30;
    unint64_t v37 = _Block_copy(aBlock);
    unint64_t v38 = v28;
    id v39 = v35;
    swift_release();
    [v39 refreshSalt:v37];
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v24);
    sub_1000816A4((uint64_t)v18, &qword_100293988);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v24);
    sub_1000816A4((uint64_t)v18, &qword_100293988);
    swift_endAccess();
  }
}

void sub_10018E8AC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_10018E980(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltObservers) addObject:a2];
    uint64_t v5 = (id *)&v4[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager];
    swift_beginAccess();
    if (*v5
      && [*v5 establishedSalt]
      && *v5
      && (id v6 = [*v5 establishedSaltVersionIdentifier]) != 0)
    {
      uint64_t v7 = v6;
      sub_1001EC370();

      uint64_t v8 = sub_1001EB540();
      os_log_type_t v9 = sub_1001EC910();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "BDSSyncEngine: Added salt change observer with a valid salt. Calling -saltUpdated with current salt", v10, 2u);
        swift_slowDealloc();
      }

      NSString v11 = sub_1001EC340();
      swift_bridgeObjectRelease();
      [a2 saltUpdatedWithSaltVersionIdentifier:v11];
    }
    else
    {
      uint64_t v12 = sub_1001EB540();
      os_log_type_t v13 = sub_1001EC910();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "BDSSyncEngine: Added salt change observer but no valid salt yet", v14, 2u);
        swift_slowDealloc();
      }
      NSString v11 = v4;
      id v4 = (char *)v12;
    }
  }
}

Swift::Bool __swiftcall BDSSyncEngine.establishedSalt()()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*v1) {
    LOBYTE(v2) = [v2 establishedSalt];
  }
  return (char)v2;
}

Swift::Void __swiftcall BDSSyncEngine.reestablishSalt()()
{
  uint64_t v1 = (void **)&v0[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager];
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (v2)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    aBlock[4] = sub_1001A447C;
    void aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10018E8AC;
    void aBlock[3] = &unk_10026AB80;
    id v4 = _Block_copy(aBlock);
    uint64_t v5 = v2;
    id v6 = v0;
    swift_release();
    [v5 refreshSalt:v4];
    _Block_release(v4);
  }
  else
  {
    uint64_t v5 = sub_1001EB540();
    os_log_type_t v7 = sub_1001EC8F0();
    if (os_log_type_enabled(v5, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v7, "BDSSyncEngine - reestablishSalt: saltManager not initialized", v8, 2u);
      swift_slowDealloc();
    }
  }
}

Swift::Void __swiftcall BDSSyncEngine.reestablishSaltIfNeeded()()
{
  uint64_t v1 = (void **)&v0[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager];
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (v2)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    aBlock[4] = sub_1001A447C;
    void aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10018E8AC;
    void aBlock[3] = &unk_10026ABD0;
    id v4 = _Block_copy(aBlock);
    uint64_t v5 = v2;
    id v6 = v0;
    swift_release();
    [v5 refreshSaltIfNeeded:v4];
    _Block_release(v4);
  }
  else
  {
    uint64_t v5 = sub_1001EB540();
    os_log_type_t v7 = sub_1001EC8F0();
    if (os_log_type_enabled(v5, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v7, "BDSSyncEngine - reestablishSaltIfNeeded: saltManager not initialized", v8, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10018EFAC()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v0 = sub_1001EB540();
  os_log_type_t v1 = sub_1001EC8F0();
  if (os_log_type_enabled(v0, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v3 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 138543362;
    swift_errorRetain();
    uint64_t v4 = _swift_stdlib_bridgeErrorToNSError();
    sub_1001ECBC0();
    void *v3 = v4;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "BDSSyncEngine: Error encountered while trying to refresh salt: %{public}@", v2, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_10018F188(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1000AF9BC(a3, (uint64_t)v5);
  swift_beginAccess();
  sub_1001BD54C((uint64_t)v5, a2);
  return swift_endAccess();
}

uint64_t sub_10018F1F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_registeredDataSourceByRecordType);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    id v7 = a2;
    unint64_t v8 = sub_1001A89F0((uint64_t)v7);
    if (v9)
    {
      sub_1000AF9BC(*(void *)(v6 + 56) + 40 * v8, a3);
    }
    else
    {
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return swift_endAccess();
}

Swift::Void __swiftcall BDSSyncEngine.add(recordZonesToSave:)(Swift::OpaquePointer recordZonesToSave)
{
}

void sub_10018F2D4(const char *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (*(void *)(v4 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine))
  {
    swift_retain();
    uint64_t v6 = sub_1001EB540();
    os_log_type_t v7 = sub_1001EC910();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, a1, v8, 2u);
      swift_slowDealloc();
    }

    sub_1001EBA00();
    sub_1001EB9E0();
    swift_release();
    swift_release();
  }
  else
  {
    oslog = sub_1001EB540();
    os_log_type_t v11 = sub_1001EC8F0();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      sub_1001A8090(a3, a4, &v14);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "BDSSyncEngine - %s: syncEngine not initialized", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

Swift::Void __swiftcall BDSSyncEngine.add(recordZoneIDsToDelete:)(Swift::OpaquePointer recordZoneIDsToDelete)
{
}

void sub_10018F544(void (*a1)(void, void, void), _DWORD *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = v4;
  uint64_t v10 = sub_1001EB740();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (void **)((char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v16 = (void *)((char *)v32 - v15);
  uint64_t v17 = *(void *)(v8 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine);
  if (v17)
  {
    swift_retain();
    unint64_t v33 = (unint64_t)a1;
    v32[3] = sub_1001EBA00();
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1001ECEA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v19 = _swiftEmptyArrayStorage;
    if (!v18)
    {
LABEL_21:
      v31._rawValue = v19;
      sub_1001EB9F0(v31);
      swift_release();
      swift_bridgeObjectRelease();
      sub_10018F2D4("BDSSyncEngine - setting hasPendingUntrackedChanges=true", 1, 0x6C7564656863735FLL, 0xEF2928636E795365);
      swift_release();
      return;
    }
    unint64_t v37 = _swiftEmptyArrayStorage;
    sub_1000CF810(0, v18 & ~(v18 >> 63), 0);
    if ((v18 & 0x8000000000000000) == 0)
    {
      v32[1] = v17;
      _OWORD v32[2] = v8;
      uint64_t v19 = v37;
      if ((v33 & 0xC000000000000001) != 0)
      {
        uint64_t v20 = 0;
        LODWORD(v35) = *a2;
        uint64_t v34 = v11 + 32;
        do
        {
          *uint64_t v16 = sub_1001ECD50();
          (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v16, v35, v10);
          unint64_t v37 = v19;
          unint64_t v22 = v19[2];
          unint64_t v21 = v19[3];
          if (v22 >= v21 >> 1)
          {
            sub_1000CF810(v21 > 1, v22 + 1, 1);
            uint64_t v19 = v37;
          }
          ++v20;
          _OWORD v19[2] = v22 + 1;
          (*(void (**)(unint64_t, uint64_t *, uint64_t))(v11 + 32))((unint64_t)v19+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v22, v16, v10);
        }
        while (v18 != v20);
      }
      else
      {
        uint64_t v26 = (void **)(v33 + 32);
        LODWORD(v35) = *a2;
        unint64_t v33 = *(void *)(v11 + 104);
        uint64_t v34 = v11 + 104;
        v32[4] = v11 + 32;
        do
        {
          uint64_t v27 = *v26;
          *uint64_t v14 = *v26;
          ((void (*)(void **, void, uint64_t))v33)(v14, v35, v10);
          unint64_t v37 = v19;
          unint64_t v28 = v19[2];
          unint64_t v29 = v19[3];
          id v30 = v27;
          if (v28 >= v29 >> 1)
          {
            sub_1000CF810(v29 > 1, v28 + 1, 1);
            uint64_t v19 = v37;
          }
          _OWORD v19[2] = v28 + 1;
          (*(void (**)(unint64_t, void **, uint64_t))(v11 + 32))((unint64_t)v19+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v28, v14, v10);
          ++v26;
          --v18;
        }
        while (v18);
      }
      goto LABEL_21;
    }
    __break(1u);
  }
  else
  {
    uint64_t v35 = sub_1001EB540();
    os_log_type_t v23 = sub_1001EC900();
    if (os_log_type_enabled(v35, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      unint64_t v37 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v36 = sub_1001A8090(a3, a4, (uint64_t *)&v37);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v35, v23, "BDSSyncEngine - %s: syncEngine not initialized", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      Class v25 = v35;
    }
  }
}

void sub_10018F9F4(void *a1)
{
  id v3 = [a1 zoneID];
  id v4 = [v3 zoneName];

  uint64_t v5 = sub_1001EC370();
  uint64_t v7 = v6;

  uint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneResetsInProgress);
  swift_beginAccess();
  uint64_t v9 = *v8;
  swift_bridgeObjectRetain();
  char v10 = sub_1000F3850(v5, v7, v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = a1;
    uint64_t v12 = sub_1001EB540();
    os_log_type_t v13 = sub_1001EC910();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t type = v13;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      sub_1001A8090(0xD000000000000017, 0x8000000100227530, v18);
      sub_1001ECBC0();
      *(_WORD *)(v14 + 12) = 2114;
      uint64_t v15 = v11;
      sub_1001ECBC0();
      *uint64_t v16 = v11;

      uint64_t v11 = v12;
      _os_log_impl((void *)&_mh_execute_header, v12, type, "BDSSyncEngine - %s. Zone reset in progress while a new zone was added - %{public}@. Re-establishing salt", (uint8_t *)v14, 0x16u);
      sub_10007DC14(&qword_100293190);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_beginAccess();
    sub_10019B194(v5, v7);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BDSSyncEngine.reestablishSalt()();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10018FCD4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EBA60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1001EBAA0();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(v2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_queue);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = a1;
  aBlock[4] = sub_1001A4364;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_10026AEC8;
  os_log_type_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1001EBA80();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_1001A2FD0((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  return swift_release();
}

id sub_10018FFD0()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  id result = *v1;
  if (*v1)
  {
    id result = [result establishedSalt];
    if (result)
    {
      uint64_t v3 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock;
      [*(id *)(v0 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock) lock];
      uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_validCKZones);
      swift_beginAccess();
      uint64_t v5 = *v4;
      uint64_t v6 = *(void **)(v0 + v3);
      swift_bridgeObjectRetain();
      [v6 unlock];
      if ((v5 & 0xC000000000000001) != 0) {
        uint64_t v7 = sub_1001ECC70();
      }
      else {
        uint64_t v7 = *(void *)(v5 + 16);
      }
      swift_bridgeObjectRelease();
      return (id)(v7 != 0);
    }
  }
  return result;
}

Swift::Void __swiftcall BDSSyncEngine.setCloudKitZone(_:enabled:)(CKRecordZoneID _, Swift::Bool enabled)
{
  uint64_t v3 = v2;
  uint64_t v5 = _.super.isa;
  uint64_t v6 = sub_1001EB540();
  os_log_type_t v7 = sub_1001EC910();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    sub_1001A8090(0xD00000000000001BLL, 0x8000000100227110, v20);
    sub_1001ECBC0();
    *(_WORD *)(v8 + 12) = 2114;
    HIDWORD(v19) = HIDWORD(v5);
    uint64_t v9 = v5;
    sub_1001ECBC0();
    *uint64_t v18 = v5;

    *(_WORD *)(v8 + 22) = 1024;
    LODWORD(v19) = enabled;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "BDSSyncEngine - %s. Zone: %{public}@. Enabled: %{BOOL}d", (uint8_t *)v8, 0x1Cu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v10 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock;
  [*(id *)(v3 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock) lock];
  swift_beginAccess();
  if (enabled)
  {
    sub_100198164(&v19, v5);
    swift_endAccess();
  }
  else
  {
    uint64_t v11 = (void *)sub_10019B324(v5);
    swift_endAccess();
  }
  uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_validCKZones);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1001ECC70();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)(v13 + 16);
  }
  [*(id *)(v3 + v10) unlock];
  if (v14)
  {
    uint64_t v15 = sub_1001EB540();
    os_log_type_t v16 = sub_1001EC910();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "BDSSyncEngine - Valid zones found", v17, 2u);
      swift_slowDealloc();
    }

    BDSSyncEngine.fetchRemoteChanges()();
  }
}

Swift::Void __swiftcall BDSSyncEngine.fetchRemoteChanges()()
{
  uint64_t v1 = sub_10007DC14(&qword_100293840);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC6A0();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1000816A4((uint64_t)v3, &qword_100293840);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1001EC690();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1001EC650();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_100296508;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    void v13[2] = v9;
    _OWORD v13[3] = v10;
  }
  swift_task_create();
  swift_release();
}

uint64_t BDSSyncEngine.enabledCloudKitZones()()
{
  uint64_t v1 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock;
  [*(id *)(v0 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock) lock];
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_validCKZones);
  swift_beginAccess();
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(v0 + v1);
  swift_bridgeObjectRetain();
  [v4 unlock];
  return v3;
}

uint64_t sub_100190864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  uint64_t v7 = sub_1001EBA60();
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  uint64_t v8 = sub_1001EBAA0();
  v6[20] = v8;
  v6[21] = *(void *)(v8 - 8);
  v6[22] = swift_task_alloc();
  uint64_t v9 = sub_1001EB680();
  v6[23] = v9;
  v6[24] = *(void *)(v9 - 8);
  v6[25] = swift_task_alloc();
  uint64_t v10 = sub_1001EB6B0();
  v6[26] = v10;
  v6[27] = *(void *)(v10 - 8);
  v6[28] = swift_task_alloc();
  return _swift_task_switch(sub_100190A3C, 0, 0);
}

uint64_t sub_100190A3C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[29] = Strong;
  uint64_t v2 = (uint64_t *)v0[25];
  if (Strong)
  {
    uint64_t v3 = v0[23];
    uint64_t v4 = v0[24];
    uint64_t v5 = (void *)v0[16];
    sub_10007DC14(&qword_100293470);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100217610;
    *(void *)(v6 + 32) = [v5 zoneID];
    sub_1001EC600();
    *uint64_t v2 = v6;
    (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v2, enum case for CKSyncEngine.SendChangesOptions.Scope.zoneIDs(_:), v3);
    sub_1001EB690();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[30] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100190C1C;
    uint64_t v8 = v0[28];
    return CKSyncEngine.sendChanges(_:)(v8);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_100190C1C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 224);
  uint64_t v3 = *(void *)(*(void *)v1 + 216);
  uint64_t v4 = *(void *)(*(void *)v1 + 208);
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_100190FE8;
  }
  else {
    uint64_t v5 = sub_100190D8C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100190D8C()
{
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[19];
  uint64_t v13 = v0[21];
  uint64_t v14 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v6 = (void *)v0[16];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v6;
  v0[6] = sub_1001A41DC;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1000DB998;
  v0[5] = &unk_10026AE00;
  uint64_t v8 = _Block_copy(v0 + 2);
  id v12 = v1;
  id v9 = v6;
  sub_1001EBA80();
  v0[13] = _swiftEmptyArrayStorage;
  sub_1001A2FD0((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100190FE8()
{
  uint64_t v14 = v0;
  id v1 = *(id *)(v0 + 128);
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC8F0();
  if (os_log_type_enabled(v2, v3))
  {
    id v12 = *(void **)(v0 + 232);
    uint64_t v4 = *(void **)(v0 + 128);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 88) = sub_1001A8090(0xD000000000000015, 0x80000001002270B0, &v13);
    sub_1001ECBC0();
    *(_WORD *)(v5 + 12) = 2114;
    *(void *)(v0 + 96) = v4;
    id v6 = v4;
    sub_1001ECBC0();
    *uint64_t v11 = v4;

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - %s: Could not delete %{public}@", (uint8_t *)v5, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    uint64_t v7 = *(void **)(v0 + 232);
    uint64_t v8 = *(void **)(v0 + 128);
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100191260(char *a1, void *a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293840);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v26[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EB540();
  os_log_type_t v8 = sub_1001EC910();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)id v9 = 136315138;
    Swift::Int v27 = sub_1001A8090(0xD000000000000015, 0x80000001002270B0, v26);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "BDSSyncEngine - %s. Zone removed. Saving it again...", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v10 = [a2 zoneID];
  id v11 = [v10 zoneName];

  Swift::Int v12 = sub_1001EC370();
  Swift::Int v14 = v13;

  swift_beginAccess();
  sub_100197DF4(&v27, v12, v14);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (*(void *)&a1[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine])
  {
    swift_retain();
    sub_1001EBA00();
    swift_release();
    sub_10007DC14(&qword_100292E10);
    uint64_t v15 = *(void *)(sub_1001EB740() - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = (_OWORD *)swift_allocObject();
    v17[1] = xmmword_100215320;
    *(void *)((char *)v17 + v16) = a2;
    (*(void (**)(void))(v15 + 104))();
    id v18 = a2;
    v19._rawValue = v17;
    sub_1001EB9F0(v19);
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v20 = sub_1001EC6A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  unint64_t v21 = (void *)swift_allocObject();
  void v21[2] = 0;
  v21[3] = 0;
  id v21[4] = a1;
  v21[5] = a2;
  id v22 = a2;
  os_log_type_t v23 = a1;
  sub_10018B8EC((uint64_t)v6, (uint64_t)&unk_1002967F0, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_100191638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = sub_1001EB680();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  uint64_t v7 = sub_1001EB6B0();
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_100191754, 0, 0);
}

uint64_t sub_100191754()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0[5] + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine);
  v0[13] = v1;
  if (v1)
  {
    uint64_t v3 = v0[8];
    uint64_t v2 = (uint64_t *)v0[9];
    uint64_t v4 = (void *)v0[6];
    uint64_t v5 = v0[7];
    sub_10007DC14(&qword_100293470);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100217610;
    swift_retain();
    *(void *)(v6 + 32) = [v4 zoneID];
    uint64_t v14 = v6;
    sub_1001EC600();
    *uint64_t v2 = v6;
    (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v2, enum case for CKSyncEngine.SendChangesOptions.Scope.zoneIDs(_:), v5);
    sub_1001EB690();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[14] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100191A24;
    uint64_t v8 = v0[12];
    return CKSyncEngine.sendChanges(_:)(v8);
  }
  else
  {
    uint64_t v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC910();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)id v11 = 136315138;
      v0[4] = sub_1001A8090(0xD000000000000015, 0x80000001002270B0, &v14);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "BDSSyncEngine - %s  Zone should have been created again!", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    Swift::Int v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_100191A24()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 12sub_10016EAD4(to, 0) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_100191D48;
  }
  else {
    uint64_t v5 = sub_100191BB8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100191BB8()
{
  uint64_t v7 = v0;
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC910();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    *(void *)(v0 + 32) = sub_1001A8090(0xD000000000000015, 0x80000001002270B0, &v6);
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "BDSSyncEngine - %s  Zone should have been created again!", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100191D48()
{
  uint64_t v12 = v0;
  id v1 = *(id *)(v0 + 48);
  os_log_type_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC8F0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void **)(v0 + 48);
    uint64_t v5 = swift_slowAlloc();
    os_log_type_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    *(void *)(v0 + 16) = sub_1001A8090(0xD000000000000015, 0x80000001002270B0, &v11);
    sub_1001ECBC0();
    *(_WORD *)(v5 + 12) = 2114;
    *(void *)(v0 + 24) = v4;
    id v6 = v4;
    sub_1001ECBC0();
    *os_log_type_t v10 = v4;

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - %s: Could not add %{public}@", (uint8_t *)v5, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    uint64_t v7 = *(void **)(v0 + 48);
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

void sub_100191FE8(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine))
  {
    id v2 = a1;
    swift_retain();
    os_log_type_t v3 = sub_1001EB540();
    os_log_type_t v4 = sub_1001EC910();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136446210;
      id v6 = [v2 zoneName];
      uint64_t v7 = sub_1001EC370();
      unint64_t v9 = v8;

      sub_1001A8090(v7, v9, &v13);
      sub_1001ECBC0();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "BDSSyncEngine - resetChangeToken: resetting change token for %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_1001EBA00();
    v16.value.super.Class isa = 0;
    v16.is_nil = (char)v2;
    sub_1001EB9D0(v16, v15);
    swift_release();
    swift_release();
  }
  else
  {
    oslog = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC900();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v10, "BDSSyncEngine - resetChangeToken: syncEngine not initialized", v11, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t BDSSyncEngine.handleEvent(_:syncEngine:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_100296528 + dword_100296528);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100093200;
  return v5(a1);
}

void BDSSyncEngine.syncEngine(_:accountChangedFromUserRecordID:toUserRecordID:)(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t BDSSyncEngine.syncEngine(_:failedToFetchChangesFor:error:)(uint64_t a1, void *a2)
{
  return sub_10019F8C8(a2);
}

uint64_t BDSSyncEngine.nextRecordZoneChangeBatch(_:syncEngine:)(uint64_t a1, uint64_t a2)
{
  v3[37] = a2;
  v3[38] = v2;
  v3[36] = a1;
  uint64_t v4 = sub_1001EB7A0();
  v3[39] = v4;
  v3[40] = *(void *)(v4 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  sub_10007DC14(&qword_100293558);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  uint64_t v5 = sub_1001EB790();
  v3[46] = v5;
  v3[47] = *(void *)(v5 - 8);
  v3[48] = swift_task_alloc();
  uint64_t v6 = sub_1001EB6B0();
  v3[49] = v6;
  v3[50] = *(void *)(v6 - 8);
  v3[51] = swift_task_alloc();
  uint64_t v7 = sub_1001EB680();
  v3[52] = v7;
  v3[53] = *(void *)(v7 - 8);
  v3[54] = swift_task_alloc();
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  return _swift_task_switch(sub_1001925D8, 0, 0);
}

uint64_t sub_1001925D8()
{
  uint64_t v87 = v0;
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v7 = *(void *)(v0 + 392);
  sub_1001EB670();
  sub_1001EB6A0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  *(void *)(v0 + 224) = &_swiftEmptySetSingleton;
  unint64_t v8 = (void *)(v0 + 224);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v9(v2, v1, v3);
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v2, v3);
  if (v10 == enum case for CKSyncEngine.SendChangesOptions.Scope.zoneIDs(_:))
  {
    uint64_t v11 = *(unint64_t **)(v0 + 440);
    uint64_t v12 = *(void *)(v0 + 304);
    (*(void (**)(unint64_t *, void))(*(void *)(v0 + 424) + 96))(v11, *(void *)(v0 + 416));
    unint64_t v13 = *v11;
    uint64_t v14 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock;
    [*(id *)(v12 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock) lock];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_1001A3584(v15, v13);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    [*(id *)(v12 + v14) unlock];
    swift_bridgeObjectRelease();
    *(void *)(v0 + 224) = v17;
  }
  else if (v10 == enum case for CKSyncEngine.SendChangesOptions.Scope.all(_:))
  {
    uint64_t v18 = *(void *)(v0 + 304);
    uint64_t v19 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock;
    [*(id *)(v18 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock) lock];
    uint64_t v20 = (uint64_t *)(v18 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_validCKZones);
    swift_beginAccess();
    uint64_t v21 = *v20;
    id v22 = *(void **)(v18 + v19);
    swift_bridgeObjectRetain();
    [v22 unlock];
    *(void *)(v0 + 224) = v21;
  }
  else
  {
    v9(*(void *)(v0 + 432), *(void *)(v0 + 448), *(void *)(v0 + 416));
    os_log_type_t v23 = sub_1001EB540();
    os_log_type_t v24 = sub_1001EC900();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 424);
    uint64_t v27 = *(void *)(v0 + 432);
    uint64_t v28 = *(void *)(v0 + 416);
    if (v25)
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)unint64_t v29 = 136315138;
      v86[0] = v30;
      sub_1001A2FD0(&qword_100296560, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.SendChangesOptions.Scope);
      uint64_t v31 = sub_1001ED040();
      *(void *)(v0 + 264) = sub_1001A8090(v31, v32, v86);
      sub_1001ECBC0();
      swift_bridgeObjectRelease();
      unint64_t v33 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v33(v27, v28);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "BDSSyncEngine - Ignoring scope %s. This is unexpected", v29, 0xCu);
      swift_arrayDestroy();
      unint64_t v8 = (void *)(v0 + 224);
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v33 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v33(v27, v28);
    }
    v33(*(void *)(v0 + 440), *(void *)(v0 + 416));
  }
  uint64_t v34 = sub_1001EB540();
  os_log_type_t v35 = sub_1001EC910();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136315394;
    v8[2] = sub_1001A8090(0xD000000000000028, 0x8000000100227130, v86);
    sub_1001ECBC0();
    *(_WORD *)(v36 + 12) = 2082;
    swift_beginAccess();
    sub_100081668(0, (unint64_t *)&unk_100296550);
    sub_10013CE90();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1001EC760();
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    v8[4] = sub_1001A8090(v37, v39, v86);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "BDSSyncEngine - %s, enabledZoneIDs: %{public}s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v40 = *(void *)(v0 + 304);
  *(void *)(swift_task_alloc() + 16) = v40;
  sub_10007DC14((uint64_t *)&unk_100296540);
  sub_1001EC9E0();
  swift_task_dealloc();
  uint64_t v41 = *(void *)(v0 + 272);
  *(void *)(v0 + 456) = v41;
  if (!*(void *)(v41 + 16))
  {
    unint64_t v63 = sub_1001EB540();
    os_log_type_t v64 = sub_1001EC910();
    BOOL v65 = os_log_type_enabled(v63, v64);
    uint64_t v66 = *(void *)(v0 + 448);
    uint64_t v67 = *(void *)(v0 + 416);
    uint64_t v68 = *(void *)(v0 + 424);
    if (v65)
    {
      uint64_t v85 = *(void *)(v0 + 448);
      uint64_t v83 = *(void *)(v0 + 416);
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 136315138;
      v8[1] = sub_1001A8090(0xD000000000000028, 0x8000000100227130, v86);
      sub_1001ECBC0();
      unint64_t v70 = "BDSSyncEngine - %s, record sources not found";
LABEL_27:
      _os_log_impl((void *)&_mh_execute_header, v63, v64, v70, v69, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v85, v83);
LABEL_34:
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 376) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 368));
      goto LABEL_35;
    }
LABEL_33:
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
    goto LABEL_34;
  }
  uint64_t v42 = (id *)(*(void *)(v0 + 304) + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (!*v42 || ![*v42 establishedSalt])
  {
    uint64_t v56 = sub_1001EB540();
    os_log_type_t v57 = sub_1001EC910();
    BOOL v58 = os_log_type_enabled(v56, v57);
    uint64_t v59 = *(void *)(v0 + 448);
    uint64_t v61 = *(void *)(v0 + 416);
    uint64_t v60 = *(void *)(v0 + 424);
    if (v58)
    {
      uint64_t v84 = *(void *)(v0 + 448);
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136315138;
      v8[3] = sub_1001A8090(0xD000000000000028, 0x8000000100227130, v86);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "BDSSyncEngine - %s, salt not ready", v62, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v84, v61);
    }
    else
    {
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
    }
    goto LABEL_34;
  }
  swift_beginAccess();
  if ((*v8 & 0xC000000000000001) == 0)
  {
    if (*(void *)(*v8 + 16)) {
      goto LABEL_16;
    }
LABEL_31:
    unint64_t v63 = sub_1001EB540();
    os_log_type_t v64 = sub_1001EC910();
    BOOL v71 = os_log_type_enabled(v63, v64);
    uint64_t v66 = *(void *)(v0 + 448);
    uint64_t v67 = *(void *)(v0 + 416);
    uint64_t v68 = *(void *)(v0 + 424);
    if (v71)
    {
      uint64_t v85 = *(void *)(v0 + 448);
      uint64_t v83 = *(void *)(v0 + 416);
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 136315138;
      *(void *)(v0 + 28sub_10016EAD4(to, 0) = sub_1001A8090(0xD000000000000028, 0x8000000100227130, v86);
      sub_1001ECBC0();
      unint64_t v70 = "BDSSyncEngine - %s, enabledZoneIDs is empty";
      goto LABEL_27;
    }
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1001ECC70();
  swift_bridgeObjectRelease();
  if (!v43) {
    goto LABEL_31;
  }
LABEL_16:
  char v44 = *(unsigned char *)(v41 + 32);
  *(unsigned char *)(v0 + 528) = v44;
  uint64_t v45 = -1;
  uint64_t v46 = -1 << v44;
  if (-(-1 << v44) < 64) {
    uint64_t v45 = ~(-1 << -(char)(-1 << v44));
  }
  unint64_t v47 = v45 & *(void *)(v41 + 64);
  *(_DWORD *)(v0 + 52sub_10016EAD4(to, 0) = enum case for CKSyncEngine.PendingRecordZoneChange.saveRecord(_:);
  *(_DWORD *)(v0 + 524) = enum case for CKSyncEngine.PendingRecordZoneChange.deleteRecord(_:);
  *(void *)(v0 + 48sub_10016EAD4(to, 0) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 464) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 472) = 250;
  swift_bridgeObjectRetain();
  if (v47)
  {
    uint64_t v48 = 0;
    unint64_t v49 = __clz(__rbit64(v47));
    uint64_t v50 = (v47 - 1) & v47;
    uint64_t v51 = *(void **)(v0 + 456);
LABEL_20:
    *(void *)(v0 + 488) = v50;
    *(void *)(v0 + 496) = v48;
    sub_1000AF9BC(v51[7] + 40 * v49, (uint64_t)(v8 - 21));
    sub_10010080C((long long *)(v8 - 21), v0 + 16);
    sub_100094758((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v52 = *(void *)(v0 + 224);
    *(void *)(v0 + 504) = v52;
    swift_bridgeObjectRetain();
    uint64_t v53 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v53;
    void *v53 = v0;
    v53[1] = sub_10019340C;
    uint64_t v54 = *(void *)(v0 + 360);
    return BDSSyncEnginePipeline.nextRecordZoneChangeBatch(zoneIDs:fetchLimit:)(v54, v52, 250);
  }
  unint64_t v73 = 63 - v46;
  uint64_t v51 = *(void **)(v0 + 456);
  if ((unint64_t)(63 - v46) > 0x7F)
  {
    unint64_t v74 = v51[9];
    if (v74)
    {
      uint64_t v48 = 1;
LABEL_41:
      uint64_t v50 = (v74 - 1) & v74;
      unint64_t v49 = __clz(__rbit64(v74)) + (v48 << 6);
      goto LABEL_20;
    }
    if (v73 >= 0xC0)
    {
      unint64_t v74 = v51[10];
      if (v74)
      {
        uint64_t v48 = 2;
        goto LABEL_41;
      }
      if (v73 >= 0x100)
      {
        unint64_t v74 = v51[11];
        if (v74)
        {
          uint64_t v48 = 3;
          goto LABEL_41;
        }
        if (v73 >= 0x140)
        {
          unint64_t v74 = v51[12];
          if (v74)
          {
            uint64_t v48 = 4;
            goto LABEL_41;
          }
          if (v73 > 0x17F)
          {
            unint64_t v74 = v51[13];
            if (v74)
            {
              uint64_t v48 = 5;
              goto LABEL_41;
            }
            uint64_t v75 = 0;
            uint64_t v76 = v73 >> 6;
            if (v76 <= 6) {
              uint64_t v76 = 6;
            }
            uint64_t v77 = v76 - 6;
            while (v77 != v75)
            {
              unint64_t v74 = v51[v75++ + 14];
              if (v74)
              {
                uint64_t v48 = v75 + 5;
                goto LABEL_41;
              }
            }
          }
        }
      }
    }
  }
  swift_release();
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 376) + 56))(*(void *)(v0 + 352), 1, 1, *(void *)(v0 + 368));
  uint64_t v78 = *(void *)(v0 + 448);
  uint64_t v79 = *(void *)(v0 + 416);
  uint64_t v80 = *(void *)(v0 + 424);
  if (_swiftEmptyArrayStorage[2])
  {
    uint64_t v82 = *(void *)(v0 + 344);
    uint64_t v81 = *(void *)(v0 + 352);
    *(void *)(swift_task_alloc() + 16) = &_swiftEmptyDictionarySingleton;
    sub_1001EB770();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_1000816A4(v81, &qword_100293558);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
    swift_bridgeObjectRelease();
    sub_1001A2F68(v82, v81);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10018F2D4("BDSSyncEngine - setting hasPendingUntrackedChanges=false", 0, 0xD00000000000001FLL, 0x8000000100227690);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
  }
  sub_1001A2F68(*(void *)(v0 + 352), *(void *)(v0 + 288));
LABEL_35:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v72 = *(uint64_t (**)(void))(v0 + 8);
  return v72();
}

uint64_t sub_10019340C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100193524, 0, 0);
}

unint64_t sub_100193524()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 360);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_1000816A4(v4, &qword_100293558);
    uint64_t v6 = *(void *)(v0 + 472);
    unint64_t v5 = *(void *)(v0 + 480);
    Swift::Int v7 = *(void *)(v0 + 464);
    goto LABEL_63;
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 384), v4, v2);
  unint64_t v8 = sub_1001EB760();
  unint64_t v9 = v8;
  if (v8 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    uint64_t v81 = v1;
    if (v10) {
      goto LABEL_5;
    }
LABEL_40:
    unint64_t v5 = *(void *)(v0 + 480);
    Swift::Int v7 = *(void *)(v0 + 464);
LABEL_41:
    swift_bridgeObjectRelease();
    unint64_t result = sub_1001EB780();
    unint64_t v42 = result;
    if (result >> 62)
    {
      unint64_t result = sub_1001ECEA0();
      uint64_t v43 = result;
      if (!result) {
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v43 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v43) {
        goto LABEL_55;
      }
    }
    if (v43 < 1)
    {
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    uint64_t v44 = 0;
    do
    {
      if ((v42 & 0xC000000000000001) != 0) {
        id v45 = (id)sub_1001ECD50();
      }
      else {
        id v45 = *(id *)(v42 + 8 * v44 + 32);
      }
      uint64_t v46 = v45;
      uint64_t v47 = *(void *)(v0 + 320);
      **(void **)(v0 + 328) = v45;
      (*(void (**)(void))(v47 + 104))();
      id v48 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v5 = sub_1000A7634(0, *(void *)(v5 + 16) + 1, 1, v5);
      }
      unint64_t v50 = *(void *)(v5 + 16);
      unint64_t v49 = *(void *)(v5 + 24);
      if (v50 >= v49 >> 1) {
        unint64_t v5 = sub_1000A7634(v49 > 1, v50 + 1, 1, v5);
      }
      ++v44;
      uint64_t v52 = *(void *)(v0 + 320);
      uint64_t v51 = *(void *)(v0 + 328);
      uint64_t v53 = *(void *)(v0 + 312);
      *(void *)(v5 + 16) = v50 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v52 + 32))(v5+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v50, v51, v53);
    }
    while (v43 != v44);
LABEL_55:
    swift_bridgeObjectRelease();
    unint64_t v54 = sub_1001EB760();
    if (v54 >> 62) {
      uint64_t v55 = sub_1001ECEA0();
    }
    else {
      uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v56 = *(void *)(v0 + 472);
    swift_bridgeObjectRelease();
    uint64_t v57 = v56 - v55;
    if (__OFSUB__(v56, v55))
    {
      __break(1u);
    }
    else
    {
      unint64_t v58 = sub_1001EB780();
      if (!(v58 >> 62))
      {
        uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_60:
        uint64_t v61 = *(void *)(v0 + 376);
        uint64_t v60 = *(void *)(v0 + 384);
        uint64_t v62 = *(void *)(v0 + 368);
        swift_bridgeObjectRelease();
        unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
        uint64_t v6 = v57 - v59;
        if (__OFSUB__(v57, v59))
        {
          __break(1u);
LABEL_96:
          __break(1u);
          goto LABEL_97;
        }
        if (v6 <= 0)
        {
          swift_release();
          sub_1000947F0(v81);
          goto LABEL_86;
        }
        uint64_t v1 = v81;
LABEL_63:
        unint64_t result = sub_1000947F0(v1);
        unint64_t v64 = *(void *)(v0 + 488);
        int64_t v63 = *(void *)(v0 + 496);
        *(void *)(v0 + 472) = v6;
        *(void *)(v0 + 48sub_10016EAD4(to, 0) = v5;
        *(void *)(v0 + 464) = v7;
        if (v64)
        {
          uint64_t v65 = (v64 - 1) & v64;
          unint64_t v66 = __clz(__rbit64(v64)) | (v63 << 6);
          unint64_t result = *(void *)(v0 + 456);
LABEL_65:
          *(void *)(v0 + 488) = v65;
          *(void *)(v0 + 496) = v63;
          sub_1000AF9BC(*(void *)(result + 56) + 40 * v66, v0 + 56);
          sub_10010080C((long long *)(v0 + 56), v1);
          sub_100094758((void *)v1, *(void *)(v0 + 40));
          uint64_t v67 = *(void *)(v0 + 224);
          *(void *)(v0 + 504) = v67;
          swift_bridgeObjectRetain();
          uint64_t v68 = (void *)swift_task_alloc();
          *(void *)(v0 + 512) = v68;
          *uint64_t v68 = v0;
          v68[1] = sub_10019340C;
          uint64_t v69 = *(void *)(v0 + 360);
          return BDSSyncEnginePipeline.nextRecordZoneChangeBatch(zoneIDs:fetchLimit:)(v69, v67, v6);
        }
        int64_t v70 = v63 + 1;
        if (!__OFADD__(v63, 1))
        {
          int64_t v71 = (unint64_t)((1 << *(unsigned char *)(v0 + 528)) + 63) >> 6;
          unint64_t result = *(void *)(v0 + 456);
          if (v70 < v71)
          {
            unint64_t v72 = result + 64;
            unint64_t v73 = *(void *)(result + 64 + 8 * v70);
            ++v63;
            if (v73)
            {
LABEL_71:
              uint64_t v65 = (v73 - 1) & v73;
              unint64_t v66 = __clz(__rbit64(v73)) + (v63 << 6);
              goto LABEL_65;
            }
            int64_t v63 = v70 + 1;
            if (v70 + 1 < v71)
            {
              unint64_t v73 = *(void *)(v72 + 8 * v63);
              if (v73) {
                goto LABEL_71;
              }
              int64_t v63 = v70 + 2;
              if (v70 + 2 < v71)
              {
                unint64_t v73 = *(void *)(v72 + 8 * v63);
                if (v73) {
                  goto LABEL_71;
                }
                int64_t v63 = v70 + 3;
                if (v70 + 3 < v71)
                {
                  unint64_t v73 = *(void *)(v72 + 8 * v63);
                  if (v73) {
                    goto LABEL_71;
                  }
                  int64_t v74 = v70 + 4;
                  if (v74 < v71)
                  {
                    unint64_t v73 = *(void *)(v72 + 8 * v74);
                    if (v73)
                    {
                      int64_t v63 = v74;
                      goto LABEL_71;
                    }
                    while (1)
                    {
                      int64_t v63 = v74 + 1;
                      if (__OFADD__(v74, 1)) {
                        break;
                      }
                      if (v63 >= v71) {
                        goto LABEL_85;
                      }
                      unint64_t v73 = *(void *)(v72 + 8 * v63);
                      ++v74;
                      if (v73) {
                        goto LABEL_71;
                      }
                    }
LABEL_98:
                    __break(1u);
                    return result;
                  }
                }
              }
            }
          }
LABEL_85:
          swift_release();
LABEL_86:
          (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 376) + 56))(*(void *)(v0 + 352), 1, 1, *(void *)(v0 + 368));
          uint64_t v75 = *(void *)(v0 + 448);
          uint64_t v76 = *(void *)(v0 + 416);
          uint64_t v77 = *(void *)(v0 + 424);
          if (*(void *)(v5 + 16))
          {
            uint64_t v79 = *(void *)(v0 + 344);
            uint64_t v78 = *(void *)(v0 + 352);
            *(void *)(swift_task_alloc() + 16) = v7;
            sub_1001EB770();
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            sub_1000816A4(v78, &qword_100293558);
            (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v76);
            swift_bridgeObjectRelease();
            sub_1001A2F68(v79, v78);
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10018F2D4("BDSSyncEngine - setting hasPendingUntrackedChanges=false", 0, 0xD00000000000001FLL, 0x8000000100227690);
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v76);
          }
          sub_1001A2F68(*(void *)(v0 + 352), *(void *)(v0 + 288));
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v80 = *(uint64_t (**)(void))(v0 + 8);
          return v80();
        }
        goto LABEL_96;
      }
    }
    uint64_t v59 = sub_1001ECEA0();
    goto LABEL_60;
  }
  uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v81 = v0 + 16;
  if (!v10) {
    goto LABEL_40;
  }
LABEL_5:
  uint64_t v11 = 0;
  id v86 = (Swift::Int *)(v0 + 216);
  unint64_t v83 = v9;
  unint64_t v84 = v9 & 0xC000000000000001;
  unint64_t v5 = *(void *)(v0 + 480);
  Swift::Int v7 = *(void *)(v0 + 464);
  uint64_t v12 = &selRef_isTrackedAsRecent;
  uint64_t v82 = v10;
  while (1)
  {
    if (v84) {
      id v15 = (id)sub_1001ECD50();
    }
    else {
      id v15 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v16 = v15;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    uint64_t v85 = v11 + 1;
    uint64_t v17 = *(unsigned int *)(v0 + 520);
    uint64_t v18 = *(void **)(v0 + 336);
    uint64_t v1 = *(void *)(v0 + 312);
    uint64_t v19 = *(void *)(v0 + 320);
    *uint64_t v18 = [v15 v12[231]];
    (*(void (**)(void *, uint64_t, uint64_t))(v19 + 104))(v18, v17, v1);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v5 = sub_1000A7634(0, *(void *)(v5 + 16) + 1, 1, v5);
    }
    unint64_t v9 = *(void *)(v5 + 16);
    unint64_t v20 = *(void *)(v5 + 24);
    if (v9 >= v20 >> 1) {
      unint64_t v5 = sub_1000A7634(v20 > 1, v9 + 1, 1, v5);
    }
    uint64_t v21 = *(void *)(v0 + 336);
    uint64_t v22 = *(void *)(v0 + 312);
    uint64_t v23 = *(void *)(v0 + 320);
    *(void *)(v5 + 16) = v9 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v5+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v9, v21, v22);
    id v24 = [v16 v12[231]];
    if ((v7 & 0xC000000000000001) != 0)
    {
      if (v7 < 0) {
        uint64_t v25 = v7;
      }
      else {
        uint64_t v25 = v7 & 0xFFFFFFFFFFFFFF8;
      }
      id v26 = v16;
      uint64_t v27 = sub_1001ECE50();
      if (__OFADD__(v27, 1)) {
        goto LABEL_37;
      }
      Swift::Int v7 = sub_10019A434(v25, v27 + 1, &qword_100296768, (unint64_t *)&unk_1002915B0, (uint64_t)CKRecord_ptr, (void (*)(unint64_t, uint64_t))sub_1001AA124);
    }
    else
    {
      id v28 = v16;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int *v86 = v7;
    unint64_t v9 = sub_1001A8818((uint64_t)v24);
    uint64_t v31 = *(void *)(v7 + 16);
    BOOL v32 = (v30 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32)) {
      goto LABEL_36;
    }
    uint64_t v1 = v30;
    if (*(void *)(v7 + 24) < v33) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1001AC41C();
    }
LABEL_29:
    Swift::Int v7 = *v86;
    if (v1)
    {
      uint64_t v13 = *(void *)(v7 + 56);
      uint64_t v14 = 8 * v9;

      *(void *)(v13 + v14) = v16;
    }
    else
    {
      *(void *)(v7 + 8 * (v9 >> 6) + 64) |= 1 << v9;
      uint64_t v36 = 8 * v9;
      *(void *)(*(void *)(v7 + 48) + v36) = v24;
      *(void *)(*(void *)(v7 + 56) + v36) = v16;
      uint64_t v37 = *(void *)(v7 + 16);
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_38;
      }
      *(void *)(v7 + 16) = v39;
      id v40 = v24;
    }
    swift_bridgeObjectRelease();

    ++v11;
    unint64_t v9 = v83;
    uint64_t v12 = &selRef_isTrackedAsRecent;
    if (v85 == v82) {
      goto LABEL_41;
    }
  }
  sub_1001AA124(v33, isUniquelyReferenced_nonNull_native);
  unint64_t v34 = sub_1001A8818((uint64_t)v24);
  if ((v1 & 1) == (v35 & 1))
  {
    unint64_t v9 = v34;
    goto LABEL_29;
  }
  sub_100081668(0, (unint64_t *)&unk_100293740);
  return sub_1001ED0E0();
}

void sub_100193F10(unint64_t a1, char a2)
{
  unint64_t v5 = (id *)(v2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v5)
  {
    [*v5 invalidateSalt];
  }
  else
  {
    uint64_t v6 = sub_1001EB540();
    os_log_type_t v7 = sub_1001EC8F0();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "BDSSyncEngine - invalidateSalt: saltManager not initialized", v8, 2u);
      swift_slowDealloc();
    }
  }
  BDSSyncEngine.reestablishSalt()();
  if (a2)
  {
    if (!(a1 >> 62))
    {
      uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v9) {
        return;
      }
      sub_1001ECDD0();
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1001ECEA0();
      swift_bridgeObjectRelease();
      if (!v9)
      {
LABEL_15:
        BDSSyncEngine.add(recordZonesToSave:)((Swift::OpaquePointer)_swiftEmptyArrayStorage);
        swift_bridgeObjectRelease();
        return;
      }
      sub_1001ECDD0();
      if (v9 < 0)
      {
        __break(1u);
        return;
      }
LABEL_10:
      uint64_t v10 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v11 = (id)sub_1001ECD50();
        }
        else {
          id v11 = *(id *)(a1 + 8 * v10 + 32);
        }
        uint64_t v12 = v11;
        ++v10;
        [objc_allocWithZone((Class)CKRecordZone) initWithZoneID:v11];

        sub_1001ECDA0();
        sub_1001ECDE0();
        sub_1001ECDF0();
        sub_1001ECDB0();
      }
      while (v9 != v10);
      goto LABEL_15;
    }
  }
}

void sub_100194160()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    sub_100081668(0, (unint64_t *)&unk_100296550);
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1001EC5F0();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1001A8090(v5, v7, v12);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - handleZoneDidReset: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v0;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v8 = (id *)(v1 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v8)
  {
    [*v8 invalidateSalt];
  }
  else
  {
    uint64_t v9 = sub_1001EB540();
    os_log_type_t v10 = sub_1001EC8F0();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "BDSSyncEngine - invalidateSalt: saltManager not initialized", v11, 2u);
      swift_slowDealloc();
    }
  }
  BDSSyncEngine.reestablishSalt()();
}

void sub_1001943C0(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_10018F9F4(a2);
  }
}

void sub_10019441C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_100194478(a2);
  }
}

uint64_t sub_100194478(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EBA60();
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EBAA0();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001EB9C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_persistFetchCoordinatorGroup);
  v19[0] = *(void *)(v2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_queue);
  v19[1] = v13;
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1001A40A8;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_10026AD38;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  sub_1001EBA80();
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_1001A2FD0((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC970();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_10019483C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for BDSSyncEngineStateMetadata();
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1001EB560();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, Strong + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_logger, v6);

    uint64_t v12 = sub_1001EB540();
    os_log_type_t v13 = sub_1001EC8E0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "BDSSyncEngine - q_saveMetadataState: About to save state metadata", v14, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  unint64_t v15 = (char *)v5 + *(int *)(v3 + 20);
  uint64_t v16 = sub_1001EB9C0();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a2, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  *uint64_t v5 = 0x69676E45636E7953;
  v5[1] = 0xEF6574617453656ELL;
  sub_10018CA1C();
  return sub_100102B30((uint64_t)v5);
}

uint64_t BDSSyncEngine.nextFetchChangesOptions(_:syncEngine:)(uint64_t a1, uint64_t a2)
{
  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  uint64_t v4 = sub_1001EB600();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v5 = sub_1001EB6E0();
  v3[26] = v5;
  v3[27] = *(void *)(v5 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v6 = sub_1001EB700();
  v3[29] = v6;
  v3[30] = *(void *)(v6 - 8);
  v3[31] = swift_task_alloc();
  uint64_t v7 = sub_1001EB730();
  v3[32] = v7;
  v3[33] = *(void *)(v7 - 8);
  v3[34] = swift_task_alloc();
  return _swift_task_switch(sub_100194CE4, 0, 0);
}

uint64_t sub_100194CE4()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 176);
  sub_1001EB6D0();
  uint64_t v2 = (id *)(v1 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v2)
  {
    unsigned __int8 v3 = [*v2 establishedSalt];
    uint64_t v4 = swift_allocObject();
    if (v3)
    {
      uint64_t v5 = *(void *)(v0 + 176);
      uint64_t v6 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock;
      [*(id *)(v5 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock) lock];
      uint64_t v7 = (uint64_t *)(v5 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_validCKZones);
      swift_beginAccess();
      uint64_t v8 = *v7;
      uint64_t v9 = *(void **)(v5 + v6);
      swift_bridgeObjectRetain();
      [v9 unlock];
      uint64_t v10 = sub_10013AD88(v8);
      swift_bridgeObjectRelease();
      *(void *)(v4 + 16) = v10;
      int v46 = 1;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v4 = swift_allocObject();
  }
  int v46 = 0;
  uint64_t v10 = _swiftEmptyArrayStorage;
  *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
LABEL_6:
  uint64_t v11 = *(void *)(v0 + 240);
  uint64_t v12 = *(void **)(v0 + 248);
  uint64_t v14 = *(void *)(v0 + 224);
  uint64_t v13 = *(void *)(v0 + 232);
  uint64_t v15 = *(void *)(v0 + 208);
  uint64_t v16 = *(void *)(v0 + 216);
  uint64_t v17 = *(void *)(v0 + 168);
  void *v12 = v10;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v12, enum case for CKSyncEngine.FetchChangesOptions.Scope.zoneIDs(_:), v13);
  swift_bridgeObjectRetain();
  sub_1001EB720();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v17, v15);
  uint64_t v18 = sub_1001EB540();
  os_log_type_t v19 = sub_1001EC910();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t type = v19;
    uint64_t v20 = *(void *)(v0 + 216);
    uint64_t v41 = *(void *)(v0 + 224);
    uint64_t v21 = *(void *)(v0 + 200);
    uint64_t v43 = *(void *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 192);
    uint64_t v42 = *(void *)(v0 + 184);
    log = v18;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136446978;
    swift_beginAccess();
    uint64_t v24 = sub_1001EB6F0();
    *(void *)(v0 + 136) = sub_1001A8090(v24, v25, &v47);
    sub_1001ECBC0();
    swift_retain();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    sub_1001EB6C0();
    uint64_t v26 = sub_1001EB5F0();
    unint64_t v28 = v27;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v42);
    *(void *)(v0 + 152) = sub_1001A8090(v26, v28, &v47);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v41, v43);
    *(_WORD *)(v23 + 22) = 1024;
    *(_DWORD *)(v0 + 28sub_10016EAD4(to, 0) = v46;
    sub_1001ECBC0();
    *(_WORD *)(v23 + 28) = 2082;
    swift_beginAccess();
    sub_100081668(0, (unint64_t *)&unk_100296550);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1001EC5F0();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = sub_1001A8090(v29, v31, &v47);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, type, "BDSSyncEngine: Returning %{public}s for nextFetchChangesOptions:syncEngine:%{public}s.\nValid salt: %{BOOL}d. Allowed zones: %{public}s", (uint8_t *)v23, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v33 = *(void *)(v0 + 216);
    uint64_t v32 = *(void *)(v0 + 224);
    uint64_t v34 = *(void *)(v0 + 208);
    swift_retain();

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    swift_release();
  }
  uint64_t v36 = *(void *)(v0 + 264);
  uint64_t v35 = *(void *)(v0 + 272);
  uint64_t v37 = *(void *)(v0 + 256);
  uint64_t v38 = *(void *)(v0 + 160);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v38, v35, v37);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

Swift::Void __swiftcall BDSSyncEngine.saltManager(_:updatedSaltWithVersion:)(BDSSyncEngineSaltManager *_, Swift::String updatedSaltWithVersion)
{
}

void sub_100195240()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = (id *)(Strong + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
    swift_beginAccess();
    if (*v2 && [*v2 establishedSalt])
    {
      unsigned __int8 v3 = sub_1001EB540();
      os_log_type_t v4 = sub_1001EC910();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "BDSSyncEngine - salt established. Fetching remote changes and updating pending modifications", v5, 2u);
        swift_slowDealloc();
      }

      BDSSyncEngine.fetchRemoteChanges()();
      sub_10018FCD4(0);
    }
    id v6 = [*(id *)&v1[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltObservers] allObjects];
    sub_10007DC14((uint64_t *)&unk_100296758);
    unint64_t v7 = sub_1001EC5E0();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1001ECEA0();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8)
      {
LABEL_9:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v9 = 0;
        do
        {
          if ((v7 & 0xC000000000000001) != 0)
          {
            uint64_t v10 = (void *)sub_1001ECD50();
          }
          else
          {
            uint64_t v10 = *(void **)(v7 + 8 * v9 + 32);
            swift_unknownObjectRetain();
          }
          ++v9;
          NSString v11 = sub_1001EC340();
          [v10 saltUpdatedWithSaltVersionIdentifier:v11];

          swift_unknownObjectRelease();
        }
        while (v8 != v9);
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100195500@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for BDSSyncEngineMetadataStore();
  uint64_t result = sub_1001019A8();
  *a1 = result;
  return result;
}

uint64_t sub_100195564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[3] = a4;
  uint64_t v5 = sub_1001EB700();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  void v4[6] = swift_task_alloc();
  uint64_t v6 = sub_1001EB730();
  v4[7] = v6;
  v4[8] = *(void *)(v6 - 8);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_100195680, 0, 0);
}

uint64_t sub_100195680()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine);
  v0[10] = v1;
  if (v1)
  {
    (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), v0[4]);
    swift_retain();
    sub_1001EB710();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1001957C0;
    uint64_t v3 = v0[9];
    return CKSyncEngine.fetchChanges(_:)(v3);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1001957C0()
{
  uint64_t v2 = *(void *)(*v1 + 72);
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *v1;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    return _swift_task_switch(sub_100195990, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_100195990()
{
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1001EB540();
  os_log_type_t v2 = sub_1001EC8F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    sub_1001ECBC0();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "BDSSyncEngine - Error fetching remote changes - %@", v3, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

Swift::String_optional __swiftcall BDSSyncEngine.recordName(fromRecordType:identifier:)(Swift::String fromRecordType, Swift::String identifier)
{
  uint64_t v3 = (id *)(v2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v3
    && (id v4 = *v3,
        NSString v5 = sub_1001EC340(),
        NSString v6 = sub_1001EC340(),
        id v7 = [v4 recordNameFromRecordType:v5 identifier:v6],
        v4,
        v5,
        v6,
        v7))
  {
    uint64_t v8 = sub_1001EC370();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v11 = v8;
  uint64_t v12 = v10;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

id BDSSyncEngine.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = sub_1001EC9C0();
  uint64_t v18 = *(void *)(v1 - 8);
  uint64_t v19 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC990();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001EBAA0();
  __chkstk_darwin(v5 - 8);
  *(void *)&v0[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_registeredDataSourceByRecordType] = &_swiftEmptyDictionarySingleton;
  *(void *)&v0[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_maxRecordCountPerBatch] = 250;
  uint64_t v6 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_recordChangePublisher;
  sub_10007DC14(&qword_1002911F8);
  swift_allocObject();
  id v7 = v0;
  *(void *)&v0[v6] = sub_1001EB5A0();
  uint64_t v8 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_recordDeletionPublisher;
  sub_10007DC14(&qword_100291200);
  swift_allocObject();
  *(void *)&v7[v8] = sub_1001EB5A0();
  uint64_t v9 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_accountChangedPublisher;
  sub_10007DC14(&qword_100291208);
  swift_allocObject();
  *(void *)&v7[v9] = sub_1001EB5A0();
  uint64_t v10 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_endFetchingChangesPublisher;
  sub_10007DC14((uint64_t *)&unk_100291210);
  swift_allocObject();
  *(void *)&v7[v10] = sub_1001EB5A0();
  uint64_t v11 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_updateMetadataPublisher;
  sub_10007DC14(&qword_100293810);
  swift_allocObject();
  *(void *)&v7[v11] = sub_1001EB5A0();
  uint64_t v12 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_queue;
  sub_100081668(0, (unint64_t *)&qword_1002919A0);
  sub_1001EBA80();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_1001A2FD0((unint64_t *)&unk_1002911D0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10007DC14((uint64_t *)&unk_1002919B0);
  sub_1000815A4((unint64_t *)&unk_1002911E0, (uint64_t *)&unk_1002919B0);
  sub_1001ECC30();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v19);
  *(void *)&v7[v12] = sub_1001ECA00();
  uint64_t v13 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_persistFetchCoordinatorGroup;
  *(void *)&v7[v13] = dispatch_group_create();
  uint64_t v14 = &v7[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_BDSAPSDelegatePort];
  *(void *)uint64_t v14 = 0xD00000000000001CLL;
  *((void *)v14 + 1) = 0x8000000100221500;
  *(void *)&v7[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine] = 0;
  sub_1001EB550();
  *(void *)&v7[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltManager] = 0;
  uint64_t v15 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_saltObservers;
  *(void *)&v7[v15] = [self weakObjectsHashTable];
  *(void *)&v7[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_validCKZones] = &_swiftEmptySetSingleton;
  uint64_t v16 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock;
  *(void *)&v7[v16] = [objc_allocWithZone((Class)NSLock) init];
  v7[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_waitingPendingModifications] = 0;
  *(void *)&v7[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneResetsInProgress] = &_swiftEmptySetSingleton;
  *(void *)&v7[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_invalidTokenZoneIDs] = _swiftEmptyArrayStorage;

  v21.receiver = v7;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, "init");
}

uint64_t sub_1001963E4(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_100296528 + dword_100296528);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100093EB4;
  return v5(a1);
}

uint64_t sub_100196490(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100093EB4;
  return BDSSyncEngine.nextRecordZoneChangeBatch(_:syncEngine:)(a1, a2);
}

uint64_t sub_100196538(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100093EB4;
  return BDSSyncEngine.nextFetchChangesOptions(_:syncEngine:)(a1, a2);
}

uint64_t sub_1001965E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1000F8378;
  return CKSyncEngineDelegate.shouldFetchChanges(zoneID:syncEngine:)(a1, a2, ObjectType, a4);
}

uint64_t sub_1001966A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1000F8378;
  return CKSyncEngineDelegate.relatedApplicationBundleIdentifiers(zoneIDs:recordIDs:syncEngine:)(a1, a2, a3, ObjectType, a5);
}

void sub_100196820(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (unsigned char *)Strong;
    if ((sub_10018FFD0() & 1) == 0)
    {
      if (a2)
      {
        uint64_t v10 = sub_1001EB540();
        os_log_type_t v11 = sub_1001EC910();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v12 = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, v11, "BDSSyncEngine - setting waitingPendingModifications=true since there are pending modifications", v12, 2u);
          swift_slowDealloc();
        }

        v4[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_waitingPendingModifications] = 1;
      }
      goto LABEL_13;
    }
    uint64_t v5 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_waitingPendingModifications;
    if ((v4[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_waitingPendingModifications] & 1) == 0 && (a2 & 1) == 0)
    {
LABEL_13:

      return;
    }
    uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_syncEngine];
    uint64_t v7 = sub_1001EB540();
    if (v6)
    {
      os_log_type_t v8 = sub_1001EC910();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "BDSSyncEngine - CKSyncEngine.setHasPendingModifications called since there were pending modifications", v9, 2u);
        swift_slowDealloc();
      }

      sub_10018F2D4("BDSSyncEngine - setting hasPendingUntrackedChanges=true", 1, 0x6C7564656863735FLL, 0xEF2928636E795365);
      v4[v5] = 0;
      goto LABEL_13;
    }
    os_log_type_t v13 = sub_1001EC8F0();
    if (os_log_type_enabled(v7, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_1001A8090(0xD00000000000002DLL, 0x80000001002276B0, &v15);
      sub_1001ECBC0();
      _os_log_impl((void *)&_mh_execute_header, v7, v13, "BDSSyncEngine - %s: syncEngine not initialized", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100196AF4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10010720C;
  return v6(a1);
}

uint64_t sub_100196BD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14(&qword_100295C60);
  uint64_t result = sub_1001ECCF0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = (Swift::UInt *)(*(void *)(v2 + 48) + 16 * v14);
      Swift::UInt v19 = *v18;
      Swift::UInt v20 = v18[1];
      sub_1001ED170();
      sub_1001ED180(v19);
      sub_1001ED180(v20);
      uint64_t result = sub_1001ED1A0();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (Swift::UInt *)(*(void *)(v4 + 48) + 16 * v11);
      Swift::UInt *v12 = v19;
      v12[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_100196EA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14(&qword_100296720);
  uint64_t v3 = sub_1001ECCF0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      Swift::UInt8 v22 = *(unsigned char *)(v19 + 16);
      sub_1001ED170();
      swift_bridgeObjectRetain();
      sub_1001EC440();
      swift_bridgeObjectRelease();
      sub_1001ED190(v22);
      uint64_t result = sub_1001ED1A0();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(unsigned char *)(v12 + 16) = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1001971D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14(&qword_100295C18);
  uint64_t v3 = sub_1001ECCF0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1001ED170();
      sub_1001EC440();
      uint64_t result = sub_1001ED1A0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1001974B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14(&qword_100296728);
  uint64_t v3 = sub_1001ECCF0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1001ED170();
      swift_bridgeObjectRetain();
      sub_1001EC440();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1001ED1A0();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1001977A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14((uint64_t *)&unk_100295C50);
  uint64_t v3 = sub_1001ECCF0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1001ECAF0(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_100197A44(uint64_t a1, void *a2)
{
  sub_1001ECAF0(a2[5]);
  unint64_t result = sub_1001ECC50();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_100197AC8(_OWORD *a1, Swift::UInt a2, Swift::UInt a3)
{
  uint64_t v7 = *v3;
  sub_1001ED170();
  sub_1001ED180(a2);
  sub_1001ED180(a3);
  Swift::Int v8 = sub_1001ED1A0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      int64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      if (v14 == a2 && v13 == a3) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    long long v17 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v10);
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1001985FC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v19;
    swift_bridgeObjectRelease();
    *(void *)&long long v17 = a2;
    *((void *)&v17 + 1) = a3;
    uint64_t result = 1;
  }
  *a1 = v17;
  return result;
}

uint64_t sub_100197C08(uint64_t a1, Swift::Int a2, uint64_t a3, int a4)
{
  uint64_t v9 = *v4;
  sub_1001ED170();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  sub_1001ED190(a4 & 1);
  Swift::Int v10 = sub_1001ED1A0();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v24 = a1;
  int v23 = a4 & 1;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v9 + 48);
    while (1)
    {
      uint64_t v15 = v14 + 24 * v12;
      int v16 = *(unsigned __int8 *)(v15 + 16);
      BOOL v17 = *(void *)v15 == a2 && *(void *)(v15 + 8) == a3;
      if (v17 || (sub_1001ED080()) && ((v16 ^ a4) & 1) == 0) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(*v4 + 48) + 24 * v12;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    LOBYTE(v2sub_10016EAD4(to, 0) = *(unsigned char *)(v20 + 16);
    *(void *)uint64_t v24 = v22;
    *(void *)(v24 + 8) = v21;
    *(unsigned char *)(v24 + 16) = v20;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_10019875C(a2, a3, v23, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v25;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v24 = a2;
    *(void *)(v24 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(v24 + 16) = v23;
  }
  return result;
}

uint64_t sub_100197DF4(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_1001ED170();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  Swift::Int v8 = sub_1001ED1A0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1001ED080() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      int64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1001ED080() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10019891C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100197FA4(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_1001ED170();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  Swift::Int v8 = sub_1001ED1A0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1001ED080() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      int64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1001ED080() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_100198AB8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100198164(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1001ECC80();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100081668(0, (unint64_t *)&unk_100296550);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1001ECC70();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_100198404(v7, result + 1);
    uint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_1001977A4();
      int v23 = v28;
    }
    else
    {
      int v23 = (void *)v22;
      id v24 = v8;
    }
    sub_100197A44((uint64_t)v8, v23);
    uint64_t *v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_1001ECAF0(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100081668(0, (unint64_t *)&unk_100296550);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_1001ECB00();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_1001ECB00();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    id v8 = a2;
    sub_100198C64((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

Swift::Int sub_100198404(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10007DC14((uint64_t *)&unk_100295C50);
    uint64_t v2 = sub_1001ECD00();
    uint64_t v14 = v2;
    sub_1001ECC60();
    if (sub_1001ECC90())
    {
      sub_100081668(0, (unint64_t *)&unk_100296550);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1001977A4();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_1001ECAF0(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1001ECC90());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1001985FC(Swift::Int result, Swift::UInt a2, unint64_t a3, char a4)
{
  Swift::UInt v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_15;
  }
  if (a4)
  {
    sub_100196BD0();
  }
  else
  {
    if (v9 > v8)
    {
      Swift::Int result = (Swift::Int)sub_100198DEC();
      goto LABEL_15;
    }
    sub_100199658();
  }
  uint64_t v10 = *v4;
  sub_1001ED170();
  sub_1001ED180(v7);
  sub_1001ED180(a2);
  Swift::Int result = sub_1001ED1A0();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = (uint64_t *)(*(void *)(v10 + 48) + 16 * a3);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      if (v15 == v7 && v14 == a2) {
        goto LABEL_18;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_15:
  uint64_t v17 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  id v18 = (Swift::UInt *)(*(void *)(v17 + 48) + 16 * a3);
  *id v18 = v7;
  v18[1] = a2;
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v17 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_18:
  Swift::Int result = sub_1001ED0D0();
  __break(1u);
  return result;
}

Swift::Int sub_10019875C(Swift::Int result, uint64_t a2, int a3, unint64_t a4, char a5)
{
  unint64_t v6 = v5;
  Swift::Int v10 = result;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0) {
    goto LABEL_18;
  }
  if (a5)
  {
    sub_100196EA8();
  }
  else
  {
    if (v12 > v11)
    {
      Swift::Int result = (Swift::Int)sub_100198F84();
      goto LABEL_18;
    }
    sub_1001998FC();
  }
  uint64_t v13 = *v5;
  sub_1001ED170();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  sub_1001ED190(a3 & 1);
  Swift::Int result = sub_1001ED1A0();
  uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
  a4 = result & ~v14;
  uint64_t v15 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v13 + 48);
    do
    {
      uint64_t v18 = v17 + 24 * a4;
      Swift::Int result = *(void *)v18;
      int v19 = *(unsigned __int8 *)(v18 + 16);
      BOOL v20 = *(void *)v18 == v10 && *(void *)(v18 + 8) == a2;
      if (v20 || (Swift::Int result = sub_1001ED080(), (result & 1) != 0))
      {
        if (((v19 ^ a3) & 1) == 0) {
          goto LABEL_21;
        }
      }
      a4 = (a4 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_18:
  uint64_t v21 = *v6;
  *(void *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v22 = *(void *)(v21 + 48) + 24 * a4;
  *(void *)uint64_t v22 = v10;
  *(void *)(v22 + 8) = a2;
  *(unsigned char *)(v22 + 16) = a3 & 1;
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_21:
  Swift::Int result = sub_1001ED0D0();
  __break(1u);
  return result;
}

Swift::Int sub_10019891C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1001971D4();
  }
  else
  {
    if (v10 > v9)
    {
      Swift::Int result = (Swift::Int)sub_100199144();
      goto LABEL_22;
    }
    sub_100199BEC();
  }
  uint64_t v11 = *v4;
  sub_1001ED170();
  sub_1001EC440();
  Swift::Int result = sub_1001ED1A0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (Swift::Int result = sub_1001ED080(), (result & 1) != 0))
    {
LABEL_21:
      Swift::Int result = sub_1001ED0D0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          Swift::Int result = sub_1001ED080();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_100198AB8(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1001974B4();
  }
  else
  {
    if (v10 > v9)
    {
      Swift::Int result = (Swift::Int)sub_1001992F8();
      goto LABEL_22;
    }
    sub_100199E9C();
  }
  uint64_t v11 = *v4;
  sub_1001ED170();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  Swift::Int result = sub_1001ED1A0();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (Swift::Int result = sub_1001ED080(), (result & 1) != 0))
    {
LABEL_21:
      Swift::Int result = sub_1001ED0D0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          Swift::Int result = sub_1001ED080();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_100198C64(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1001977A4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1001994AC();
      goto LABEL_14;
    }
    sub_10019A158();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_1001ECAF0(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100081668(0, (unint64_t *)&unk_100296550);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1001ECB00();

    if (v12)
    {
LABEL_13:
      sub_1001ED0D0();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1001ECB00();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void *sub_100198DEC()
{
  uint64_t v1 = v0;
  sub_10007DC14(&qword_100295C60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECCE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::Int result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100198F84()
{
  uint64_t v1 = v0;
  sub_10007DC14(&qword_100296720);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECCE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::Int result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    LOBYTE(v17) = *(unsigned char *)(v17 + 16);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v20 = v19;
    *(void *)(v20 + 8) = v18;
    *(unsigned char *)(v20 + 16) = v17;
    Swift::Int result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100199144()
{
  uint64_t v1 = v0;
  sub_10007DC14(&qword_100295C18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECCE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::Int result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    Swift::Int result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001992F8()
{
  uint64_t v1 = v0;
  sub_10007DC14(&qword_100296728);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECCE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    Swift::Int result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  Swift::Int result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    Swift::Int result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    Swift::Int result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1001994AC()
{
  uint64_t v1 = v0;
  sub_10007DC14((uint64_t *)&unk_100295C50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1001ECCE0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100199658()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14(&qword_100295C60);
  uint64_t result = sub_1001ECCF0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    int64_t v18 = (Swift::UInt *)(*(void *)(v2 + 48) + 16 * v14);
    Swift::UInt v19 = *v18;
    Swift::UInt v20 = v18[1];
    sub_1001ED170();
    sub_1001ED180(v19);
    sub_1001ED180(v20);
    uint64_t result = sub_1001ED1A0();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (Swift::UInt *)(*(void *)(v4 + 48) + 16 * v11);
    Swift::UInt *v12 = v19;
    v12[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001998FC()
{
  uint64_t v1 = *v0;
  sub_10007DC14(&qword_100296720);
  uint64_t v2 = sub_1001ECCF0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v28 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v9);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v1 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    Swift::UInt8 v20 = *(unsigned char *)(v17 + 16);
    sub_1001ED170();
    swift_bridgeObjectRetain_n();
    sub_1001EC440();
    swift_bridgeObjectRelease();
    sub_1001ED190(v20);
    uint64_t result = sub_1001ED1A0();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v3 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 16) = v20;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100199BEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14(&qword_100295C18);
  uint64_t v3 = sub_1001ECCF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1001ED170();
    swift_bridgeObjectRetain();
    sub_1001EC440();
    uint64_t result = sub_1001ED1A0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100199E9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14(&qword_100296728);
  uint64_t v3 = sub_1001ECCF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1001ED170();
    swift_bridgeObjectRetain_n();
    sub_1001EC440();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1001ED1A0();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10019A158()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10007DC14((uint64_t *)&unk_100295C50);
  uint64_t v3 = sub_1001ECCF0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1001ECAF0(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

Swift::Int sub_10019A3D4(uint64_t a1, uint64_t a2)
{
  return sub_10019A434(a1, a2, (uint64_t *)&unk_100296730, &qword_100292788, (uint64_t)off_10025E470, (void (*)(unint64_t, uint64_t))sub_1001AA118);
}

Swift::Int sub_10019A404(uint64_t a1, uint64_t a2)
{
  return sub_10019A434(a1, a2, &qword_100296768, (unint64_t *)&unk_1002915B0, (uint64_t)CKRecord_ptr, (void (*)(unint64_t, uint64_t))sub_1001AA124);
}

Swift::Int sub_10019A434(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t, uint64_t))
{
  if (a2)
  {
    sub_10007DC14(a3);
    uint64_t v7 = sub_1001ECED0();
    uint64_t v24 = v7;
    sub_1001ECE40();
    uint64_t v8 = sub_1001ECE70();
    if (v8)
    {
      uint64_t v9 = v8;
      sub_100081668(0, (unint64_t *)&unk_100293740);
      do
      {
        swift_dynamicCast();
        sub_100081668(0, a4);
        swift_dynamicCast();
        uint64_t v7 = v24;
        unint64_t v17 = *(void *)(v24 + 16);
        if (*(void *)(v24 + 24) <= v17)
        {
          a6(v17 + 1, 1);
          uint64_t v7 = v24;
        }
        Swift::Int result = sub_1001ECAF0(*(void *)(v7 + 40));
        uint64_t v11 = v7 + 64;
        uint64_t v12 = -1 << *(unsigned char *)(v7 + 32);
        unint64_t v13 = result & ~v12;
        unint64_t v14 = v13 >> 6;
        if (((-1 << v13) & ~*(void *)(v7 + 64 + 8 * (v13 >> 6))) != 0)
        {
          unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v7 + 64 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v14 == v19;
            if (v14 == v19) {
              unint64_t v14 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v11 + 8 * v14);
          }
          while (v21 == -1);
          unint64_t v15 = __clz(__rbit64(~v21)) + (v14 << 6);
        }
        *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        uint64_t v16 = 8 * v15;
        *(void *)(*(void *)(v7 + 48) + v16) = v23;
        *(void *)(*(void *)(v7 + 56) + v16) = v9;
        ++*(void *)(v7 + 16);
        uint64_t v9 = sub_1001ECE70();
      }
      while (v9);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v7;
}

uint64_t sub_10019A688(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_10019A70C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1001AB7E0, (void (*)(void))sub_1001A91C0);
}

uint64_t sub_10019A6B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_10019A70C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1001AB7EC, (void (*)(void))sub_1001A91CC);
}

uint64_t sub_10019A6E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_10019A70C(a1, a2, a3, a4, (uint64_t (*)(void))sub_1001AB7F8, (void (*)(void))sub_1001A91D8);
}

uint64_t sub_10019A70C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(void), void (*a6)(void))
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1001A86C4(a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 < result || (a4 & 1) == 0)
  {
    if (v21 < result || (a4 & 1) != 0)
    {
      a6();
      uint64_t result = sub_1001A86C4(a3);
      if ((v20 & 1) != (v24 & 1))
      {
LABEL_17:
        uint64_t result = sub_1001ED0E0();
        __break(1u);
        return result;
      }
      unint64_t v16 = result;
      unint64_t v22 = (void *)*v9;
      if (v20) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = a5();
  }
  unint64_t v22 = (void *)*v9;
  if ((v20 & 1) == 0)
  {
LABEL_13:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    *(void *)(v22[6] + 8 * v16) = a3;
    unint64_t v25 = (void *)(v22[7] + 16 * v16);
    *unint64_t v25 = a1;
    v25[1] = a2;
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (!v27)
    {
      uint64_t v22[2] = v28;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v23 = (void *)(v22[7] + 16 * v16);
  *uint64_t v23 = a1;
  v23[1] = a2;
  return swift_release();
}

void sub_10019A888(uint64_t a1, void *a2, char a3)
{
}

void sub_10019A8B4(uint64_t a1, void *a2, char a3)
{
}

void sub_10019A8E0(uint64_t a1, void *a2, char a3, void (*a4)(void), void (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_1001A8818((uint64_t)a2);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 >= v16 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    unint64_t v19 = (void *)*v8;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];

      *(void *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  a5();
  unint64_t v21 = sub_1001A8818((uint64_t)a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_17:
    sub_100081668(0, (unint64_t *)&unk_100293740);
    sub_1001ED0E0();
    __break(1u);
    return;
  }
  unint64_t v13 = v21;
  unint64_t v19 = (void *)*v8;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v23 = 8 * v13;
  *(void *)(v19[6] + v23) = a2;
  *(void *)(v19[7] + v23) = a1;
  uint64_t v24 = v19[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v19[2] = v26;
  id v27 = a2;
}

uint64_t sub_10019AA70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_10019AAC8(a1, a2, a3, a4, (void (*)(void))sub_1001AC7CC, (void (*)(void))sub_1001AA78C);
}

uint64_t sub_10019AA9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_10019AAC8(a1, a2, a3, a4, (void (*)(void))sub_1001AC7D8, (void (*)(void))sub_1001AA798);
}

uint64_t sub_10019AAC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1001A87A0(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    char v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  a6();
  unint64_t v25 = sub_1001A87A0(a2, a3);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1001ED0E0();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  char v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  id v27 = (uint64_t *)(v22[6] + 16 * v16);
  *id v27 = a2;
  v27[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v28 = v22[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v22[2] = v30;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019AC54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1001A87A0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1001AC994();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1001AAAB8(result, a4 & 1);
  uint64_t result = sub_1001A87A0(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1001ED0E0();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v20 = (uint64_t *)(v18[6] + 16 * v12);
  *char v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019ADB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char a5)
{
  uint64_t v6 = (void **)v5;
  char v8 = a4;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1001A88FC(a2, a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a5 & 1) == 0)
  {
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1001ACECC();
      goto LABEL_7;
    }
    sub_1001AB3CC(v17, a5 & 1);
    unint64_t v24 = sub_1001A88FC(a2, a3, v8 & 1);
    if ((v18 & 1) == (v25 & 1))
    {
      unint64_t v14 = v24;
      char v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1001ED0E0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v6;
  if (v18)
  {
LABEL_8:
    uint64_t v21 = v20[7];
    uint64_t v22 = v21 + *(void *)(*(void *)(_s14PricingServiceV12FetchedPriceVMa(0) - 8) + 72) * v14;
    return sub_1001A3E88(a1, v22);
  }
LABEL_13:
  sub_10019AF38(v14, a2, a3, v8 & 1, a1, v20);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019AF38(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = a6[6] + 24 * a1;
  *(void *)uint64_t v9 = a2;
  *(void *)(v9 + 8) = a3;
  *(unsigned char *)(v9 + 16) = a4;
  uint64_t v10 = a6[7];
  uint64_t v11 = _s14PricingServiceV12FetchedPriceVMa(0);
  uint64_t result = sub_1001A3EEC(a5, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1);
  uint64_t v13 = a6[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a6[2] = v15;
  }
  return result;
}

uint64_t sub_10019AFD8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = *v3;
  sub_1001ED170();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  swift_bridgeObjectRelease();
  sub_1001ED190(a3 & 1);
  Swift::Int v8 = sub_1001ED1A0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v7 + 48);
    while (1)
    {
      uint64_t v13 = v12 + 24 * v10;
      int v14 = *(unsigned __int8 *)(v13 + 16);
      BOOL v15 = *(void *)v13 == a1 && *(void *)(v13 + 8) == a2;
      if (v15 || (sub_1001ED080()) && ((v14 ^ a3) & 1) == 0) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    uint64_t v20 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100198F84();
      uint64_t v18 = v20;
    }
    uint64_t v16 = *(void *)(*(void *)(v18 + 48) + 24 * v10);
    sub_10019B698(v10);
    uint64_t *v3 = v20;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v16;
}

uint64_t sub_10019B194(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1001ED170();
  swift_bridgeObjectRetain();
  sub_1001EC440();
  Swift::Int v6 = sub_1001ED1A0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1001ED080() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1001ED080() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100199144();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10019B898(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_10019B324(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_1001ECCA0();

    if (v6)
    {
      uint64_t v7 = sub_10019B4FC();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = sub_1001ECAF0(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_100081668(0, (unint64_t *)&unk_100296550);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = sub_1001ECB00();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = sub_1001ECB00();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001994AC();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_10019BA60(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10019B4FC()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1001ECC70();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_100198404(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_1001ECAF0(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_100081668(0, (unint64_t *)&unk_100296550);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_1001ECB00();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_10019BA60(v8);
      if (sub_1001ECB00())
      {
        *uint64_t v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_1001ECB00();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_10019B698(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1001ECC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v11 = 24 * v6;
        Swift::UInt8 v12 = *(unsigned char *)(*(void *)(v3 + 48) + 24 * v6 + 16);
        sub_1001ED170();
        swift_bridgeObjectRetain();
        sub_1001EC440();
        sub_1001ED190(v12);
        Swift::Int v13 = sub_1001ED1A0();
        swift_bridgeObjectRelease();
        unint64_t v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(v3 + 48);
          unint64_t v16 = v15 + 24 * v2;
          BOOL v17 = (long long *)(v15 + v11);
          if (24 * v2 < v11 || v16 >= (unint64_t)v17 + 24 || (v18 = v2 == v6, int64_t v2 = v6, !v18))
          {
            long long v10 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v10;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_10019B898(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1001ECC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1001ED170();
        swift_bridgeObjectRetain();
        sub_1001EC440();
        Swift::Int v10 = sub_1001ED1A0();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          Swift::Int v13 = (_OWORD *)(v12 + 16 * v2);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *Swift::Int v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_10019BA60(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1001ECC40();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = sub_1001ECAF0(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            BOOL v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t (*sub_10019BC04(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10019BD20(v6, a2, a3);
  return sub_10019BC6C;
}

uint64_t (*sub_10019BC70(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10019BDA8(v6, a2, a3);
  return sub_10019BC6C;
}

void sub_10019BCD8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_10019BD20(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1001ECD50();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_10019BDA0;
  }
  __break(1u);
  return result;
}

void sub_10019BDA0(id *a1)
{
}

void (*sub_10019BDA8(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_1001ECD50();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1001A44F0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019BE28(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_10019BF08;
  return v5(v2 + 32);
}

uint64_t sub_10019BF08()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_10019C01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EBA60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1001EBAA0();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  Swift::Int v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(a2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_queue);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1001007BC;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_10026AE78;
  Swift::Int v13 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  sub_1001EBA80();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_1001A2FD0((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_10019C31C()
{
  swift_unknownObjectWeakDestroy();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019C354()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10019C3A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100093EB4;
  return sub_100190864(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10019C46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BDSSyncEngine()
{
  uint64_t result = qword_1002966A8;
  if (!qword_1002966A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10019C520()
{
}

uint64_t sub_10019C53C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_10016EAD4(to, 0) = v2;
  return swift_retain();
}

uint64_t sub_10019C54C()
{
  return swift_release();
}

uint64_t sub_10019C554()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019C58C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10019C5CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100093EB4;
  return sub_100195564(a1, v4, v5, v6);
}

void *sub_10019C680(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  char v26 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_27;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = sub_1001ECEA0())
  {
    unint64_t v5 = 0;
    uint64_t v23 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v24 = v3 & 0xC000000000000001;
    uint64_t v22 = v3 + 32;
    uint64_t v21 = i;
    uint64_t v25 = a2 + 56;
    while (1)
    {
      if (v24)
      {
        id v6 = (id)sub_1001ECD50();
        goto LABEL_9;
      }
      if (v5 >= *(void *)(v23 + 16)) {
        break;
      }
      id v6 = *(id *)(v22 + 8 * v5);
LABEL_9:
      uint64_t v7 = v6;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_26;
      }
      if ((a2 & 0xC000000000000001) != 0)
      {
        uint64_t v3 = (uint64_t)v6;
        char v9 = sub_1001ECCA0();

        if ((v9 & 1) == 0)
        {

          goto LABEL_5;
        }
LABEL_4:
        uint64_t v3 = (uint64_t)&v26;
        sub_1001ECDA0();
        sub_1001ECDE0();
        sub_1001ECDF0();
        sub_1001ECDB0();
LABEL_5:
        uint64_t i = v21;
        if (v5 == v21) {
          return v26;
        }
      }
      else
      {
        if (*(void *)(a2 + 16))
        {
          uint64_t v3 = (uint64_t)v6;
          Swift::Int v10 = sub_1001ECAF0(*(void *)(a2 + 40));
          uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v12 = v10 & ~v11;
          if ((*(void *)(v25 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
          {
            uint64_t v3 = sub_100081668(0, (unint64_t *)&unk_100296550);
            id v13 = *(id *)(*(void *)(a2 + 48) + 8 * v12);
            char v14 = sub_1001ECB00();

            if ((v14 & 1) == 0)
            {
              uint64_t v15 = ~v11;
              for (unint64_t j = v12 + 1; ; unint64_t j = v17 + 1)
              {
                uint64_t v17 = j & v15;
                if (((*(void *)(v25 + (((j & v15) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v15)) & 1) == 0) {
                  break;
                }
                id v18 = *(id *)(*(void *)(a2 + 48) + 8 * v17);
                char v19 = sub_1001ECB00();

                if (v19) {
                  goto LABEL_4;
                }
              }

              goto LABEL_5;
            }
            goto LABEL_4;
          }
        }

        if (v5 == i) {
          return v26;
        }
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    ;
  }
  return _swiftEmptyArrayStorage;
}

void sub_10019C8E8(void *a1)
{
  id v2 = a1;
  uint64_t v3 = sub_1001EB540();
  os_log_type_t v4 = sub_1001EC910();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    id v6 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    sub_1001A8090(0xD00000000000003CLL, 0x80000001002273F0, &v11);
    sub_1001ECBC0();
    *(_WORD *)(v5 + 12) = 2112;
    if (a1) {
      id v7 = v2;
    }
    sub_1001ECBC0();
    *id v6 = a1;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "BDSSyncEngine - %s. newUserRecordID - %@", (uint8_t *)v5, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (uint64_t)a1;
  sub_1001EB590();
  if (a1)
  {
    BDSSyncEngine.reestablishSalt()();
  }
  else
  {
    uint64_t v8 = sub_1001EB540();
    os_log_type_t v9 = sub_1001EC910();
    if (os_log_type_enabled(v8, v9))
    {
      Swift::Int v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "BDSSyncEngine - Skipping salt establishment since no valid account found", v10, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10019CBA4(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v1 = sub_1001EBA60();
  uint64_t v26 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v25 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1001EBAA0();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  __chkstk_darwin(v3);
  uint64_t v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1001EB9C0();
  uint64_t v5 = *(void *)(v20 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v20);
  id v7 = sub_1001EB540();
  os_log_type_t v8 = sub_1001EC910();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v19 = v1;
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 136315138;
    id v27 = (void *)sub_1001A8090(0xD00000000000001DLL, 0x8000000100227460, aBlock);
    uint64_t v1 = v19;
    sub_1001ECBC0();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "BDSSyncEngine - %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10007DC14(&qword_100293810);
  sub_1000815A4((unint64_t *)&unk_1002967A0, &qword_100293810);
  sub_1001EB5B0();
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v20);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = (uint64_t)sub_1001A3FC0;
  void aBlock[5] = v13;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000DB998;
  void aBlock[3] = (uint64_t)&unk_10026ACE8;
  char v14 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v15 = v22;
  sub_1001EBA80();
  id v27 = _swiftEmptyArrayStorage;
  sub_1001A2FD0((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  uint64_t v16 = v25;
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v1);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v24);
  swift_release();
  return swift_release();
}

void sub_10019D0C8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1001EC830();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for CKDatabase.DatabaseChange.Deletion.Reason.deleted(_:))
  {
    unint64_t v9 = 0xE700000000000000;
    uint64_t v10 = 0x646574656C6564;
  }
  else if (v8 == enum case for CKDatabase.DatabaseChange.Deletion.Reason.purged(_:))
  {
    unint64_t v9 = 0xE600000000000000;
    uint64_t v10 = 0x646567727570;
  }
  else if (v8 == enum case for CKDatabase.DatabaseChange.Deletion.Reason.encryptedDataReset(_:))
  {
    uint64_t v10 = 0xD000000000000012;
    unint64_t v9 = 0x80000001002274B0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    unint64_t v9 = 0xE700000000000000;
    uint64_t v10 = 0x6E776F6E6B6E75;
  }
  id v11 = a1;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1001EB540();
  os_log_type_t v13 = sub_1001EC910();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v18 = sub_1001A8090(0xD00000000000002ALL, 0x8000000100227480, &v19);
    sub_1001ECBC0();
    *(_WORD *)(v14 + 12) = 2114;
    uint64_t v18 = (uint64_t)v11;
    id v15 = v11;
    sub_1001ECBC0();
    *uint64_t v16 = v11;

    *(_WORD *)(v14 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1001A8090(v10, v9, &v19);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "BDSSyncEngine - %s: %{public}@, reason=%{public}s", (uint8_t *)v14, 0x20u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10019D474(uint64_t a1)
{
  uint64_t v51 = (void (*)(char *, uint64_t, uint64_t))sub_1001EC830();
  uint64_t v2 = *((void *)v51 - 1);
  __chkstk_darwin(v51);
  uint64_t v48 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001EC860();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v49 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007DC14((uint64_t *)&unk_1002967C0);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v39 = v5;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v13 = a1;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    id v15 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 40);
    uint64_t v16 = *(void *)(v11 + 56);
    id v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    int v46 = v12;
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v44 = v16;
    uint64_t v47 = v11;
    uint64_t v41 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v42 = (void (**)(uint64_t, void (*)(char *, uint64_t, uint64_t)))(v2 + 8);
    uint64_t v38 = v13;
    swift_bridgeObjectRetain();
    uint64_t v17 = v10;
    uint64_t v19 = v48;
    uint64_t v18 = v49;
    while (1)
    {
      v46(v9, v14, v4);
      uint64_t v20 = *v15;
      (*v15)(v9, 0, 1, v4);
      if ((*v45)(v9, 1, v4) == 1) {
        break;
      }
      id v40 = v20;
      (*v43)(v18, v9, v4);
      uint64_t v21 = v4;
      uint64_t v22 = v9;
      uint64_t v23 = v15;
      uint64_t v24 = (void *)sub_1001EC850();
      sub_1001EC840();
      sub_10019D0C8(v24, v19);

      id v15 = v23;
      unint64_t v9 = v22;
      uint64_t v4 = v21;
      (*v42)(v19, v51);
      (*v41)(v18, v21);
      v14 += v44;
      if (!--v17)
      {
        a1 = v38;
        uint64_t v5 = v39;
        v40(v9, 1, 1, v21);
        goto LABEL_7;
      }
    }
    a1 = v38;
    swift_bridgeObjectRelease();
    uint64_t v5 = v39;
LABEL_10:
    uint64_t v27 = OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock;
    uint64_t v28 = v50;
    [*(id *)(v50 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_zoneLock) lock];
    BOOL v29 = (uint64_t *)(v28 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_validCKZones);
    swift_beginAccess();
    uint64_t v30 = *v29;
    int64_t v31 = *(void **)(v28 + v27);
    swift_bridgeObjectRetain();
    [v31 unlock];
    uint64_t v52 = _swiftEmptyArrayStorage;
    sub_1001ECDD0();
    uint64_t v48 = v30;
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v32 = v5 + 16;
    uint64_t v51 = v33;
    uint64_t v34 = a1 + ((*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64));
    uint64_t v35 = *(void *)(v32 + 56);
    uint64_t v36 = v49;
    do
    {
      v51(v36, v34, v4);
      sub_1001EC850();
      (*(void (**)(char *, uint64_t))(v32 - 8))(v36, v4);
      sub_1001ECDA0();
      sub_1001ECDE0();
      sub_1001ECDF0();
      sub_1001ECDB0();
      v34 += v35;
      --v10;
    }
    while (v10);
    uint64_t v37 = sub_10019C680((unint64_t)v52, v48);
    swift_bridgeObjectRelease();
    swift_release();
    sub_10018C24C((unint64_t)v37);
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_bridgeObjectRetain();
  v25(v9, 1, 1, v4);
LABEL_7:
  uint64_t result = swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10019D924(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v7 = sub_1001A8090(0xD000000000000017, 0x80000001002274D0, &v9);
    sub_1001ECBC0();
    *(_WORD *)(v4 + 12) = 2112;
    id v8 = objc_msgSend(v1, "recordID", v7);
    sub_1001ECBC0();
    *uint64_t v5 = v8;

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - %s: %@", (uint8_t *)v4, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v9 = (uint64_t)v1;
  return sub_1001EB590();
}

uint64_t sub_10019DB24(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    sub_1001A8090(0xD000000000000030, 0x80000001002274F0, &v8);
    sub_1001ECBC0();
    *(_WORD *)(v4 + 12) = 2112;
    id v6 = v1;
    sub_1001ECBC0();
    *uint64_t v5 = v1;

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - %s: %@", (uint8_t *)v4, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v8 = (uint64_t)v1;
  return sub_1001EB590();
}

uint64_t sub_10019DD20(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001EBA60();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001EBAA0();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  uint64_t v28 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  uint64_t v11 = sub_1001EB540();
  os_log_type_t v12 = sub_1001EC910();
  if (os_log_type_enabled(v11, v12))
  {
    v25[1] = v2;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = v4;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v7;
    uint64_t v16 = (void *)v15;
    *(_DWORD *)uint64_t v14 = 138543362;
    aBlock[0] = v10;
    uint64_t v17 = v5;
    id v18 = v10;
    sub_1001ECBC0();
    *uint64_t v16 = v10;

    uint64_t v5 = v17;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "BDSSyncEngine - didSave recordZone: %{public}@", v14, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    uint64_t v7 = v26;
    swift_slowDealloc();
    uint64_t v4 = v27;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v10;
  aBlock[4] = sub_1001A4178;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000DB998;
  void aBlock[3] = &unk_10026AD88;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = v10;
  swift_retain();
  uint64_t v23 = v28;
  sub_1001EBA80();
  int64_t v31 = _swiftEmptyArrayStorage;
  sub_1001A2FD0((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v30);
  swift_release();
  return swift_release();
}

void sub_10019E154(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    v15[0] = (uint64_t)[v1 recordID];
    sub_1001ECBC0();
    *uint64_t v5 = v15[0];

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - didSave recordID: %@", v4, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v6 = sub_1001ECAB0();
  unint64_t v8 = v7;
  NSString v9 = sub_1001EC340();
  __chkstk_darwin(v9);
  sub_10007DC14((uint64_t *)&unk_100296D80);
  sub_1001EC9E0();

  if (v14)
  {
    swift_bridgeObjectRelease();
    sub_10010080C(&v13, (uint64_t)v15);
    sub_100094758(v15, v15[3]);
    BDSSyncEnginePipeline.didSave(record:)((CKRecord)v1);
    sub_1000947F0((uint64_t)v15);
  }
  else
  {
    sub_1000816A4((uint64_t)&v13, (uint64_t *)&unk_100296D80);
    swift_bridgeObjectRetain();
    id v10 = sub_1001EB540();
    os_log_type_t v11 = sub_1001EC8F0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      v15[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315394;
      *(void *)&long long v13 = sub_1001A8090(0xD000000000000016, 0x8000000100227610, v15);
      sub_1001ECBC0();
      *(_WORD *)(v12 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)&long long v13 = sub_1001A8090(v6, v8, v15);
      sub_1001ECBC0();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_10019E4F4(void *a1, uint64_t a2)
{
  id v3 = a1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC910();
  uint64_t v28 = v5;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    unint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    id v9 = v4;
    sub_1001ECBC0();
    *unint64_t v8 = v4;

    *(_WORD *)(v7 + 12) = 2112;
    swift_errorRetain();
    v31[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_1001ECBC0();
    v8[1] = v31[0];
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v6, "BDSSyncEngine - failedToSaveRecordWith recordID: %@, error: %@", (uint8_t *)v7, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  id v10 = [v4 recordName];
  uint64_t v11 = sub_1001EC370();
  unint64_t v13 = v12;

  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  __chkstk_darwin(v14);
  uint64_t v26 = v31;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001A4460, (uint64_t)&v25, v11, v13);
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1001EC410();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    NSString v19 = sub_1001EC340();
    uint64_t v20 = __chkstk_darwin(v19);
    uint64_t v26 = v21;
    uint64_t v27 = v20;
    sub_10007DC14((uint64_t *)&unk_100296D80);
    sub_1001EC9E0();

    if (v30)
    {
      swift_bridgeObjectRelease();
      sub_10010080C(&v29, (uint64_t)v31);
      sub_100094758(v31, v31[3]);
      BDSSyncEnginePipeline.failedToSaveRecordWith(recordID:error:)(v4, a2);
      sub_1000947F0((uint64_t)v31);
    }
    else
    {
      sub_1000816A4((uint64_t)&v29, (uint64_t *)&unk_100296D80);
      swift_bridgeObjectRetain();
      id v22 = sub_1001EB540();
      os_log_type_t v23 = sub_1001EC8F0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        v31[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136315394;
        *(void *)&long long v29 = sub_1001A8090(0xD00000000000002BLL, 0x80000001002275E0, v31);
        sub_1001ECBC0();
        *(_WORD *)(v24 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v29 = sub_1001A8090(v16, v18, v31);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10019EA04(void *a1)
{
  uint64_t v2 = v1;
  id v3 = a1;
  id v4 = sub_1001EB540();
  os_log_type_t v5 = sub_1001EC910();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v6 = 138412290;
    v28[0] = (uint64_t)v3;
    id v7 = v3;
    sub_1001ECBC0();
    *uint64_t v25 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "BDSSyncEngine - didDeleteRecordWith recordID: %@", v6, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v8 = [v3 recordName];
  uint64_t v9 = sub_1001EC370();
  unint64_t v11 = v10;

  v28[0] = 46;
  v28[1] = 0xE100000000000000;
  __chkstk_darwin(v12);
  os_log_type_t v23 = v28;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001A4460, (uint64_t)&v22, v9, v11);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1001EC410();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    NSString v17 = sub_1001EC340();
    uint64_t v18 = __chkstk_darwin(v17);
    os_log_type_t v23 = v2;
    uint64_t v24 = v18;
    sub_10007DC14((uint64_t *)&unk_100296D80);
    sub_1001EC9E0();

    if (v27)
    {
      swift_bridgeObjectRelease();
      sub_10010080C(&v26, (uint64_t)v28);
      sub_100094758(v28, v28[3]);
      BDSSyncEnginePipeline.didDeleteRecordWith(recordID:)((CKRecordID)v3);
      sub_1000947F0((uint64_t)v28);
    }
    else
    {
      sub_1000816A4((uint64_t)&v26, (uint64_t *)&unk_100296D80);
      swift_bridgeObjectRetain();
      NSString v19 = sub_1001EB540();
      os_log_type_t v20 = sub_1001EC8F0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        v28[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315394;
        *(void *)&long long v26 = sub_1001A8090(0xD000000000000022, 0x80000001002275B0, v28);
        sub_1001ECBC0();
        *(_WORD *)(v21 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v26 = sub_1001A8090(v14, v16, v28);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10019EE94(void *a1, uint64_t a2)
{
  id v3 = a1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  os_log_type_t v5 = sub_1001EB540();
  os_log_type_t v6 = sub_1001EC910();
  uint64_t v28 = v5;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    id v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    id v9 = v4;
    sub_1001ECBC0();
    *id v8 = v4;

    *(_WORD *)(v7 + 12) = 2112;
    swift_errorRetain();
    v31[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_1001ECBC0();
    v8[1] = v31[0];
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v6, "BDSSyncEngine - failedToDeleteRecordWith recordID: %@, error: %@", (uint8_t *)v7, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  id v10 = [v4 recordName];
  uint64_t v11 = sub_1001EC370();
  unint64_t v13 = v12;

  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  __chkstk_darwin(v14);
  long long v26 = v31;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001A4460, (uint64_t)&v25, v11, v13);
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1001EC410();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    NSString v19 = sub_1001EC340();
    uint64_t v20 = __chkstk_darwin(v19);
    long long v26 = v21;
    uint64_t v27 = v20;
    sub_10007DC14((uint64_t *)&unk_100296D80);
    sub_1001EC9E0();

    if (v30)
    {
      swift_bridgeObjectRelease();
      sub_10010080C(&v29, (uint64_t)v31);
      sub_100094758(v31, v31[3]);
      BDSSyncEnginePipeline.failedToDeleteRecordWith(recordID:error:)(v4, a2);
      sub_1000947F0((uint64_t)v31);
    }
    else
    {
      sub_1000816A4((uint64_t)&v29, (uint64_t *)&unk_100296D80);
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1001EB540();
      os_log_type_t v23 = sub_1001EC8F0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        v31[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136315394;
        *(void *)&long long v29 = sub_1001A8090(0xD00000000000002DLL, 0x8000000100227580, v31);
        sub_1001ECBC0();
        *(_WORD *)(v24 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v29 = sub_1001A8090(v16, v18, v31);
        sub_1001ECBC0();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10019F3A4(uint64_t a1)
{
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  uint64_t v26 = a1;
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    v29[0] = swift_slowAlloc();
    *(_DWORD *)id v4 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1001EC760();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)&long long v27 = sub_1001A8090(v5, v7, v29);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    a1 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - didCompleteModifyRecordsBatch recordTypes: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v24 = a1 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a1 + 56);
  int64_t v25 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v10) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    swift_bridgeObjectRetain();
    NSString v20 = sub_1001EC340();
    __chkstk_darwin(v20);
    sub_10007DC14((uint64_t *)&unk_100296D80);
    sub_1001EC9E0();

    if (!v28) {
      break;
    }
    swift_bridgeObjectRelease();
    sub_10010080C(&v27, (uint64_t)v29);
    sub_100094758(v29, v29[3]);
    BDSSyncEnginePipeline.didCompleteModifyRecordsBatch()();
    sub_1000947F0((uint64_t)v29);
    a1 = v26;
    if (v10) {
      goto LABEL_7;
    }
LABEL_8:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return;
    }
    if (v11 >= v25) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v24 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v25) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v24 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v11 + 2;
        if (v11 + 2 >= v25) {
          goto LABEL_28;
        }
        unint64_t v15 = *(void *)(v24 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v11 + 3;
          if (v11 + 3 >= v25)
          {
LABEL_28:
            swift_release();
            return;
          }
          unint64_t v15 = *(void *)(v24 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_31;
              }
              if (v11 >= v25) {
                goto LABEL_28;
              }
              unint64_t v15 = *(void *)(v24 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_18;
              }
            }
          }
        }
      }
      int64_t v11 = v16;
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  sub_1000816A4((uint64_t)&v27, (uint64_t *)&unk_100296D80);
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1001EB540();
  os_log_type_t v22 = sub_1001EC8F0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    v29[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    *(void *)&long long v27 = sub_1001A8090(0xD00000000000002CLL, 0x8000000100227550, v29);
    sub_1001ECBC0();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)&long long v27 = sub_1001A8090(v19, v18, v29);
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {
    swift_release();

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10019F8C8(void *a1)
{
  uint64_t v2 = v1;
  swift_errorRetain();
  swift_errorRetain();
  id v4 = sub_1001EB540();
  os_log_type_t v5 = sub_1001EC8F0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v24 = a1;
    unint64_t v7 = (void *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_1001A8090(0xD00000000000002CLL, 0x80000001002273C0, v26);
    sub_1001ECBC0();
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
    sub_1001ECBC0();
    *unint64_t v7 = v25;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "BDSSyncEngine - %s. Error - %@", (uint8_t *)v6, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    a1 = v24;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = (void *)sub_1001EAE50();
  id v9 = [v8 domain];

  uint64_t v10 = sub_1001EC370();
  uint64_t v12 = v11;

  if (v10 == sub_1001EC370() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_1001ED080();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_14;
    }
  }
  swift_errorRetain();
  swift_errorRetain();
  int64_t v16 = sub_1001EB540();
  os_log_type_t v17 = sub_1001EC900();
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v18 = 138412290;
    swift_errorRetain();
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
    v26[0] = v20;
    sub_1001ECBC0();
    *uint64_t v19 = v20;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "BDSSyncEngineDataSource. Receieved error with NSCocoaErrorDomain - %@", v18, 0xCu);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_14:
  type metadata accessor for Code(0);
  v26[0] = 21;
  sub_1001A2FD0(&qword_100291690, type metadata accessor for Code);
  if ((sub_1001EADD0() & 1) != 0
    || (v26[0] = 26, (sub_1001EADD0() & 1) != 0)
    || (v26[0] = 28, uint64_t result = sub_1001EADD0(), (result & 1) != 0))
  {
    os_log_type_t v22 = (void *)(v2 + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_invalidTokenZoneIDs);
    swift_beginAccess();
    id v23 = a1;
    sub_1001EC5C0();
    if (*(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1001EC610();
    }
    sub_1001EC640();
    sub_1001EC600();
    return swift_endAccess();
  }
  return result;
}

void sub_10019FDB8(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    os_log_type_t v5 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    sub_1001A8090(0xD000000000000027, 0x8000000100227630, &v8);
    sub_1001ECBC0();
    *(_WORD *)(v4 + 12) = 2114;
    id v6 = v1;
    sub_1001ECBC0();
    *os_log_type_t v5 = v1;

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - %s: zoneID: %{public}@", (uint8_t *)v4, 0x16u);
    sub_10007DC14(&qword_100293190);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v8 = (uint64_t)v1;
  id v7 = v1;
  sub_1001EB590();
}

uint64_t sub_10019FFC0()
{
  id v1 = v0;
  uint64_t v2 = sub_1001EB540();
  os_log_type_t v3 = sub_1001EC910();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v11[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    sub_1001A8090(0xD000000000000023, 0x8000000100227660, v11);
    sub_1001ECBC0();
    *(_WORD *)(v4 + 12) = 2082;
    swift_beginAccess();
    sub_100081668(0, (unint64_t *)&unk_100296550);
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1001EC5F0();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1001A8090(v5, v7, v11);
    sub_1001ECBC0();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BDSSyncEngine - %s: invalidTokenZoneIDs: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v8 = &v1[OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_invalidTokenZoneIDs];
  swift_beginAccess();
  if (*(void *)v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1001ECEA0();
    swift_bridgeObjectRelease();
    if (!v10) {
      return sub_1001EB590();
    }
    goto LABEL_6;
  }
  if (*(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    swift_bridgeObjectRetain();
    sub_100194160();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v8 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  return sub_1001EB590();
}

uint64_t sub_1001A0274(uint64_t a1)
{
  v2[13] = a1;
  v2[14] = v1;
  uint64_t v3 = sub_1001EB800();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  uint64_t v4 = sub_1001EB810();
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  uint64_t v5 = sub_1001EB980();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v6 = sub_1001EB9A0();
  v2[26] = v6;
  v2[27] = *(void *)(v6 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  uint64_t v7 = sub_1001EB8A0();
  v2[30] = v7;
  v2[31] = *(void *)(v7 - 8);
  v2[32] = swift_task_alloc();
  uint64_t v8 = sub_1001EB8F0();
  v2[33] = v8;
  v2[34] = *(void *)(v8 - 8);
  v2[35] = swift_task_alloc();
  uint64_t v9 = sub_1001EB870();
  v2[36] = v9;
  v2[37] = *(void *)(v9 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  uint64_t v10 = sub_1001EC8B0();
  v2[40] = v10;
  v2[41] = *(void *)(v10 - 8);
  v2[42] = swift_task_alloc();
  sub_10007DC14(&qword_100296770);
  v2[43] = swift_task_alloc();
  uint64_t v11 = sub_1001EC880();
  v2[44] = v11;
  v2[45] = *(void *)(v11 - 8);
  v2[46] = swift_task_alloc();
  sub_10007DC14(&qword_100296778);
  v2[47] = swift_task_alloc();
  uint64_t v12 = sub_1001EB950();
  v2[48] = v12;
  v2[49] = *(void *)(v12 - 8);
  v2[50] = swift_task_alloc();
  uint64_t v13 = sub_1001EC820();
  v2[51] = v13;
  v2[52] = *(void *)(v13 - 8);
  v2[53] = swift_task_alloc();
  sub_10007DC14(&qword_100296780);
  v2[54] = swift_task_alloc();
  uint64_t v14 = sub_1001EB920();
  v2[55] = v14;
  v2[56] = *(void *)(v14 - 8);
  v2[57] = swift_task_alloc();
  uint64_t v15 = sub_1001EB9C0();
  v2[58] = v15;
  v2[59] = *(void *)(v15 - 8);
  v2[60] = swift_task_alloc();
  uint64_t v16 = sub_1001EB7C0();
  v2[61] = v16;
  v2[62] = *(void *)(v16 - 8);
  v2[63] = swift_task_alloc();
  uint64_t v17 = sub_1001EB7D0();
  v2[64] = v17;
  v2[65] = *(void *)(v17 - 8);
  v2[66] = swift_task_alloc();
  uint64_t v18 = sub_1001EB7F0();
  v2[67] = v18;
  v2[68] = *(void *)(v18 - 8);
  v2[69] = swift_task_alloc();
  uint64_t v19 = sub_1001EB9B0();
  v2[70] = v19;
  v2[71] = *(void *)(v19 - 8);
  v2[72] = swift_task_alloc();
  v2[73] = swift_task_alloc();
  return _swift_task_switch(sub_1001A09D4, 0, 0);
}

unint64_t sub_1001A09D4()
{
  v342 = v0;
  uint64_t v1 = v0;
  uint64_t v3 = v0 + 13;
  Class isa = v0[13].isa;
  Class v4 = v0[73].isa;
  Class v5 = v0[70].isa;
  Class v6 = v3[58].isa;
  uint64_t v7 = *((void *)v6 + 2);
  ((void (*)(Class, Class, Class))v7)(v4, isa, v5);
  int v8 = (*((uint64_t (**)(Class, Class))v6 + 11))(v4, v5);
  if (v8 == enum case for CKSyncEngine.Event.stateUpdate(_:))
  {
    Class v9 = v1[73].isa;
    Class v11 = v1[62].isa;
    Class v10 = v1[63].isa;
    uint64_t v13 = (uint64_t)v1[60].isa;
    Class v12 = v1[61].isa;
    Class v14 = v1[58].isa;
    Class v15 = v1[59].isa;
    (*((void (**)(Class, Class))v1[71].isa + 12))(v9, v1[70].isa);
    (*((void (**)(Class, Class, Class))v11 + 4))(v10, v9, v12);
    sub_1001EB7B0();
    sub_10019CBA4(v13);
    (*((void (**)(uint64_t, Class))v15 + 1))(v13, v14);
LABEL_3:
    (*((void (**)(Class, Class))v11 + 1))(v10, v12);
    goto LABEL_42;
  }
  if (v8 == enum case for CKSyncEngine.Event.accountChange(_:))
  {
    Class v16 = v1[73].isa;
    Class v17 = v1[69].isa;
    Class v18 = v1[68].isa;
    Class v19 = v1[67].isa;
    Class v20 = v1[66].isa;
    Class v21 = v1[65].isa;
    Class v22 = v1[64].isa;
    (*((void (**)(Class, Class))v1[71].isa + 12))(v16, v1[70].isa);
    (*((void (**)(Class, Class, Class))v18 + 4))(v17, v16, v19);
    sub_1001EB7E0();
    int v23 = (*((uint64_t (**)(Class, Class))v21 + 11))(v20, v22);
    if (v23 != enum case for CKSyncEngine.Event.AccountChange.ChangeType.signIn(_:))
    {
      if (v23 == enum case for CKSyncEngine.Event.AccountChange.ChangeType.signOut(_:))
      {
        Class v51 = v1[69].isa;
        Class v52 = v1[68].isa;
        Class v53 = v1[67].isa;
        unint64_t v54 = (id *)v1[66].isa;
        (*((void (**)(id *, Class))v1[65].isa + 12))(v54, v1[64].isa);
        id v55 = *v54;
        sub_10019C8E8(0);

        (*((void (**)(Class, Class))v52 + 1))(v51, v53);
        goto LABEL_42;
      }
      if (v23 != enum case for CKSyncEngine.Event.AccountChange.ChangeType.switchAccounts(_:))
      {
        uint64_t v93 = sub_1001EB540();
        os_log_type_t v94 = sub_1001EC8F0();
        if (os_log_type_enabled(v93, v94))
        {
          id v95 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v95 = 0;
          _os_log_impl((void *)&_mh_execute_header, v93, v94, "BDSSyncEngine - handleEvent(.accountChange): unknown changeType", v95, 2u);
          swift_slowDealloc();
        }
        Class v96 = v1[69].isa;
        Class v97 = v1[68].isa;
        Class v98 = v1[67].isa;
        Class v99 = v1[66].isa;
        Class v100 = v1[65].isa;
        Class v101 = v1[64].isa;

        (*((void (**)(Class, Class))v97 + 1))(v96, v98);
        (*((void (**)(Class, Class))v100 + 1))(v99, v101);
        goto LABEL_42;
      }
      Class v10 = v1[69].isa;
      Class v11 = v1[68].isa;
      Class v12 = v1[67].isa;
      Class v74 = v1[66].isa;
      (*((void (**)(Class, Class))v1[65].isa + 12))(v74, v1[64].isa);
      uint64_t v75 = *(void **)v74;
      uint64_t v76 = (void *)*((void *)v74 + 1);
      id v77 = v75;
      id v78 = v76;
      sub_10019C8E8(v76);

      goto LABEL_3;
    }
    Class v24 = v1[69].isa;
    Class v25 = v1[68].isa;
    Class v26 = v1[67].isa;
    long long v27 = (void **)v1[66].isa;
    (*((void (**)(void **, Class))v1[65].isa + 12))(v27, v1[64].isa);
    uint64_t v28 = *v27;
    id v29 = v28;
    sub_10019C8E8(v28);

    goto LABEL_7;
  }
  v339 = v1;
  if (v8 == enum case for CKSyncEngine.Event.fetchedDatabaseChanges(_:))
  {
    Class v30 = v1[73].isa;
    Class v31 = v1[56].isa;
    Class v32 = v1[57].isa;
    Class v33 = v1[55].isa;
    (*((void (**)(Class, Class))v1[71].isa + 12))(v30, v1[70].isa);
    (*((void (**)(Class, Class, Class))v31 + 4))(v32, v30, v33);
    uint64_t v34 = sub_1001EB900();
    uint64_t v35 = *(void *)(v34 + 16);
    Class v36 = v1[52].isa;
    if (v35)
    {
      uint64_t v39 = (void (*)(void, void, void))*((void *)v36 + 2);
      uint64_t v38 = (uint64_t)v36 + 16;
      uint64_t v37 = (void (*)(Class, unint64_t, Class))v39;
      unint64_t v40 = v34 + ((*(unsigned __int8 *)(v38 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 64));
      uint64_t v41 = (uint64_t)v1[14].isa + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_logger;
      v322 = (unsigned int (**)(Class, uint64_t, Class))(v38 + 32);
      v332 = (void (**)(Class, uint64_t, uint64_t, Class))(v38 + 40);
      v313 = (void (**)(Class, Class, Class))(v38 + 16);
      uint64_t type = *(void *)(v38 + 56);
      v310 = (void (**)(Class, Class))(v38 - 8);
      v307 = v39;
      while (1)
      {
        Class v42 = v1[54].isa;
        Class v43 = v1[51].isa;
        v37(v42, v40, v43);
        uint64_t v44 = *v332;
        (*v332)(v42, 0, 1, v43);
        if ((*v322)(v42, 1, v43) == 1) {
          break;
        }
        (*v313)(v1[53].isa, v1[54].isa, v1[51].isa);
        id v45 = (id)sub_1001EC810();
        int v46 = sub_1001EB540();
        os_log_type_t v47 = sub_1001EC910();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = swift_slowAlloc();
          uint64_t v49 = v41;
          uint64_t v50 = (void *)swift_slowAlloc();
          v341[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v48 = 136315394;
          *(void *)(v48 + 4) = sub_1001A8090(0xD000000000000020, 0x8000000100227430, v341);
          *(_WORD *)(v48 + 12) = 2114;
          *(void *)(v48 + 14) = v45;
          *uint64_t v50 = v45;

          _os_log_impl((void *)&_mh_execute_header, v46, v47, "BDSSyncEngine - %s: %{public}@", (uint8_t *)v48, 0x16u);
          sub_10007DC14(&qword_100293190);
          swift_arrayDestroy();
          uint64_t v41 = v49;
          swift_slowDealloc();
          swift_arrayDestroy();
          uint64_t v1 = v339;
          swift_slowDealloc();
          uint64_t v37 = (void (*)(Class, unint64_t, Class))v307;
          swift_slowDealloc();
        }
        else
        {
        }
        (*v310)(v1[53].isa, v1[51].isa);
        v40 += type;
        if (!--v35)
        {
          v44(v1[54].isa, 1, 1, v1[51].isa);
          break;
        }
      }
    }
    else
    {
      (*((void (**)(Class, uint64_t, uint64_t, Class))v36 + 7))(v1[54].isa, 1, 1, v1[51].isa);
    }
    Class v25 = v1[56].isa;
    Class v24 = v1[57].isa;
    Class v26 = v1[55].isa;
    swift_bridgeObjectRelease();
    uint64_t v91 = sub_1001EB910();
    sub_10019D474(v91);
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  if (v8 == enum case for CKSyncEngine.Event.fetchedRecordZoneChanges(_:))
  {
    Class v56 = v1[73].isa;
    Class v57 = v1[49].isa;
    Class v58 = v1[50].isa;
    Class v59 = v1[48].isa;
    (*((void (**)(Class, Class))v1[71].isa + 12))(v56, v1[70].isa);
    (*((void (**)(Class, Class, Class))v57 + 4))(v58, v56, v59);
    uint64_t v60 = sub_1001EB930();
    uint64_t v61 = v1;
    uint64_t v62 = *(void *)(v60 + 16);
    Class v63 = v61[45].isa;
    if (v62)
    {
      uint64_t v65 = (void (*)(void, void, void))*((void *)v63 + 2);
      uint64_t v64 = (uint64_t)v63 + 16;
      unint64_t v66 = v60 + ((*(unsigned __int8 *)(v64 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 64));
      uint64_t v314 = *(void *)(v64 + 56);
      v323 = (void (**)(Class, uint64_t, uint64_t, Class))(v64 + 40);
      v333 = (void (*)(Class, unint64_t, Class))v65;
      uint64_t v67 = v339;
      while (1)
      {
        Class v68 = v339[47].isa;
        Class v69 = v339[44].isa;
        v333(v68, v66, v69);
        int64_t v70 = *v323;
        (*v323)(v68, 0, 1, v69);
        if ((*(unsigned int (**)(Class, uint64_t, Class))(v64 + 32))(v68, 1, v69) == 1) {
          break;
        }
        Class v71 = v339[46].isa;
        Class v72 = v339[44].isa;
        (*(void (**)(Class, Class, Class))(v64 + 16))(v71, v339[47].isa, v72);
        unint64_t v73 = (void *)sub_1001EC870();
        sub_10019D924(v73);

        (*(void (**)(Class, Class))(v64 - 8))(v71, v72);
        v66 += v314;
        if (!--v62) {
          goto LABEL_58;
        }
      }
    }
    else
    {
      int64_t v70 = (void (*)(Class, uint64_t, uint64_t, Class))*((void *)v63 + 7);
LABEL_58:
      uint64_t v67 = v339;
      v70(v339[47].isa, 1, 1, v339[44].isa);
    }
    swift_bridgeObjectRelease();
    uint64_t v112 = sub_1001EB940();
    uint64_t v113 = *(void *)(v112 + 16);
    Class v114 = v67[41].isa;
    if (v113)
    {
      uint64_t v116 = (void (*)(void, void, void))*((void *)v114 + 2);
      uint64_t v115 = (uint64_t)v114 + 16;
      unint64_t v117 = v112 + ((*(unsigned __int8 *)(v115 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 64));
      typea = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 32);
      v308 = (void (**)(Class, Class, Class))(v115 + 16);
      uint64_t v311 = *(void *)(v115 + 56);
      v305 = (void (**)(uint64_t, uint64_t))(v115 - 8);
      v324 = (void (**)(Class, uint64_t, uint64_t, Class))(v115 + 40);
      v334 = (void (*)(Class, unint64_t, Class))v116;
      uint64_t v1 = v339;
      while (1)
      {
        Class v118 = v339[43].isa;
        Class v119 = v339[40].isa;
        v334(v118, v117, v119);
        uint64_t v120 = *v324;
        (*v324)(v118, 0, 1, v119);
        if ((*typea)((uint64_t)v118, 1, (uint64_t)v119) == 1) {
          break;
        }
        Class v121 = v339[42].isa;
        Class v122 = v339[40].isa;
        (*v308)(v121, v339[43].isa, v122);
        uint64_t v123 = (void *)sub_1001EC8A0();
        sub_1001EC890();
        sub_10019DB24(v123);

        swift_bridgeObjectRelease();
        (*v305)((uint64_t)v121, (uint64_t)v122);
        v117 += v311;
        if (!--v113) {
          goto LABEL_65;
        }
      }
    }
    else
    {
      uint64_t v120 = (void (*)(Class, uint64_t, uint64_t, Class))*((void *)v114 + 7);
LABEL_65:
      uint64_t v1 = v339;
      v120(v339[43].isa, 1, 1, v339[40].isa);
    }
    Class v124 = v1[49].isa;
    Class v125 = v1[50].isa;
    Class v126 = v1[48].isa;
    swift_bridgeObjectRelease();
    (*((void (**)(Class, Class))v124 + 1))(v125, v126);
    goto LABEL_42;
  }
  if (v8 == enum case for CKSyncEngine.Event.sentDatabaseChanges(_:))
  {
    Class v79 = v1[73].isa;
    Class v80 = v1[39].isa;
    Class v82 = v1[36].isa;
    Class v81 = v1[37].isa;
    (*((void (**)(Class, Class))v1[71].isa + 12))(v79, v1[70].isa);
    (*((void (**)(Class, Class, Class))v81 + 4))(v80, v79, v82);
    unint64_t v83 = sub_1001EB820();
    if (v83 >> 62) {
      uint64_t v84 = sub_1001ECEA0();
    }
    else {
      uint64_t v84 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v84)
    {
LABEL_98:
      uint64_t v202 = *(void *)(sub_1001EB850() + 16);
      swift_bridgeObjectRelease();
      if (v202)
      {
        (*((void (**)(Class, Class, Class))v1[37].isa + 2))(v1[38].isa, v1[39].isa, v1[36].isa);
        uint64_t v203 = sub_1001EB540();
        os_log_type_t v204 = sub_1001EC8F0();
        BOOL v205 = os_log_type_enabled(v203, v204);
        Class v206 = v1[37].isa;
        Class v207 = v1[38].isa;
        uint64_t v7 = (uint64_t)v1[36].isa;
        if (v205)
        {
          Class v328 = v1[36].isa;
          uint64_t v208 = (uint8_t *)swift_slowAlloc();
          v341[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v208 = 136446210;
          uint64_t v7 = sub_1001EB850();
          sub_1001EB830();
          p_Class isa = &v3[-1].isa;
          uint64_t v210 = sub_1001EC5F0();
          uint64_t v3 = v211;
          swift_bridgeObjectRelease();
          *p_Class isa = sub_1001A8090(v210, (unint64_t)v3, v341);
          sub_1001ECBC0();
          swift_bridgeObjectRelease();
          (*((void (**)(Class, Class))v206 + 1))(v207, v328);
          _os_log_impl((void *)&_mh_execute_header, v203, v204, "BDSSyncEngine - failedZoneSaves: %{public}s", v208, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          (*((void (**)(Class, uint64_t))v206 + 1))(v207, v7);
        }
      }
      unint64_t v212 = sub_1001EB840();
      if (v212 >> 62) {
        uint64_t v213 = sub_1001ECEA0();
      }
      else {
        uint64_t v213 = *(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (!v213) {
        goto LABEL_119;
      }
      unint64_t result = sub_1001EB840();
      unint64_t v214 = result;
      if (result >> 62)
      {
        unint64_t result = sub_1001ECEA0();
        uint64_t v7 = result;
        if (result)
        {
LABEL_107:
          if (v7 >= 1)
          {
            uint64_t v215 = 0;
            uint64_t v3 = (v214 & 0xC000000000000001);
            do
            {
              if (v3) {
                id v216 = (id)sub_1001ECD50();
              }
              else {
                id v216 = *(id *)(v214 + 8 * v215 + 32);
              }
              id v217 = v216;
              uint64_t v218 = sub_1001EB540();
              os_log_type_t v219 = sub_1001EC910();
              if (os_log_type_enabled(v218, v219))
              {
                uint64_t v220 = swift_slowAlloc();
                uint64_t v221 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v220 = 138543362;
                *(void *)(v220 + 4) = v217;
                *uint64_t v221 = v217;

                _os_log_impl((void *)&_mh_execute_header, v218, v219, "BDSSyncEngine - didDeleteRecordZoneWith recordZoneID: %{public}@", (uint8_t *)v220, 0xCu);
                sub_10007DC14(&qword_100293190);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
              }
              ++v215;

              uint64_t v1 = v339;
            }
            while (v7 != v215);
            goto LABEL_118;
          }
          goto LABEL_194;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v7) {
          goto LABEL_107;
        }
      }
LABEL_118:
      swift_bridgeObjectRelease();
LABEL_119:
      uint64_t v222 = *(void *)(sub_1001EB860() + 16);
      swift_bridgeObjectRelease();
      if (v222)
      {
        uint64_t v223 = sub_1001EB860();
        int64_t v224 = 0;
        uint64_t v329 = v223 + 64;
        uint64_t v225 = -1;
        uint64_t v226 = -1 << *(unsigned char *)(v223 + 32);
        if (-v226 < 64) {
          uint64_t v225 = ~(-1 << -(char)v226);
        }
        unint64_t v227 = v225 & *(void *)(v223 + 64);
        int64_t v336 = (unint64_t)(63 - v226) >> 6;
        while (1)
        {
          if (v227)
          {
            unint64_t v229 = __clz(__rbit64(v227));
            v227 &= v227 - 1;
            unint64_t v230 = v229 | (v224 << 6);
          }
          else
          {
            int64_t v231 = v224 + 1;
            if (__OFADD__(v224, 1))
            {
              __break(1u);
              goto LABEL_146;
            }
            if (v231 >= v336) {
              goto LABEL_143;
            }
            unint64_t v232 = *(void *)(v329 + 8 * v231);
            ++v224;
            if (!v232)
            {
              int64_t v224 = v231 + 1;
              if (v231 + 1 >= v336) {
                goto LABEL_143;
              }
              unint64_t v232 = *(void *)(v329 + 8 * v224);
              if (!v232)
              {
                int64_t v224 = v231 + 2;
                if (v231 + 2 >= v336) {
                  goto LABEL_143;
                }
                unint64_t v232 = *(void *)(v329 + 8 * v224);
                if (!v232)
                {
                  int64_t v233 = v231 + 3;
                  if (v233 >= v336)
                  {
LABEL_143:
                    swift_release();
                    break;
                  }
                  unint64_t v232 = *(void *)(v329 + 8 * v233);
                  if (!v232)
                  {
                    while (1)
                    {
                      int64_t v224 = v233 + 1;
                      if (__OFADD__(v233, 1)) {
                        break;
                      }
                      if (v224 >= v336) {
                        goto LABEL_143;
                      }
                      unint64_t v232 = *(void *)(v329 + 8 * v224);
                      ++v233;
                      if (v232) {
                        goto LABEL_140;
                      }
                    }
LABEL_146:
                    __break(1u);
LABEL_147:
                    unint64_t result = sub_1001ECEA0();
                    uint64_t v106 = result;
                    if (!result) {
                      goto LABEL_148;
                    }
                    goto LABEL_51;
                  }
                  int64_t v224 = v233;
                }
              }
            }
LABEL_140:
            unint64_t v227 = (v232 - 1) & v232;
            unint64_t v230 = __clz(__rbit64(v232)) + (v224 << 6);
          }
          uint64_t v234 = 8 * v230;
          uint64_t v7 = *(void *)(*(void *)(v223 + 56) + v234);
          id v235 = *(id *)(*(void *)(v223 + 48) + v234);
          id v236 = (id)v7;
          id v237 = v235;
          id v238 = v236;
          id v239 = v237;
          id v228 = v238;
          uint64_t v3 = sub_1001EB540();
          os_log_type_t v240 = sub_1001EC910();
          if (os_log_type_enabled(v3, v240))
          {
            uint64_t v241 = swift_slowAlloc();
            uint64_t v7 = swift_slowAlloc();
            *(_DWORD *)uint64_t v241 = 138543618;
            *(void *)(v241 + 4) = v239;
            *(void *)uint64_t v7 = v239;

            *(_WORD *)(v241 + 12) = 2114;
            swift_errorRetain();
            uint64_t v242 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v241 + 14) = v242;
            *(void *)(v7 + 8) = v242;

            _os_log_impl((void *)&_mh_execute_header, v3, v240, "BDSSyncEngine - failedToDeleteRecordZoneWith recordZoneID: %{public}@, error: %{public}@", (uint8_t *)v241, 0x16u);
            sub_10007DC14(&qword_100293190);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            id v228 = v239;
          }

          uint64_t v1 = v339;
        }
      }
      (*((void (**)(Class, Class))v1[37].isa + 1))(v1[39].isa, v1[36].isa);
      goto LABEL_42;
    }
    unint64_t result = sub_1001EB820();
    unint64_t v86 = result;
    if (result >> 62)
    {
      unint64_t result = sub_1001ECEA0();
      uint64_t v87 = result;
      if (result) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v87 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v87)
      {
LABEL_32:
        if (v87 < 1)
        {
          __break(1u);
LABEL_194:
          __break(1u);
          goto LABEL_195;
        }
        for (uint64_t i = 0; i != v87; ++i)
        {
          if ((v86 & 0xC000000000000001) != 0) {
            id v89 = (id)sub_1001ECD50();
          }
          else {
            id v89 = *(id *)(v86 + 8 * i + 32);
          }
          unsigned int v90 = v89;
          sub_10019DD20(v89);
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_98;
  }
  if (v8 != enum case for CKSyncEngine.Event.sentRecordZoneChanges(_:))
  {
    if (v8 == enum case for CKSyncEngine.Event.willFetchChanges(_:))
    {
      uint64_t v127 = sub_1001EB540();
      os_log_type_t v128 = sub_1001EC910();
      if (os_log_type_enabled(v127, v128))
      {
        uint64_t v129 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v129 = 0;
        _os_log_impl((void *)&_mh_execute_header, v127, v128, "BDSSyncEngine - willFetchChanges", v129, 2u);
        swift_slowDealloc();
      }
      Class v130 = v1[73].isa;
      Class v131 = v1[71].isa;
      Class v132 = v1[70].isa;

      (*((void (**)(Class, Class))v131 + 1))(v130, v132);
      goto LABEL_42;
    }
    uint64_t v133 = &v3[-4].isa;
    Class v134 = v1[70].isa;
    if (v8 == enum case for CKSyncEngine.Event.willFetchRecordZoneChanges(_:))
    {
      Class v135 = v1[73].isa;
      Class v136 = v1[28].isa;
      Class v137 = v1[29].isa;
      Class v138 = v1[26].isa;
      Class v139 = v1[27].isa;
      (*((void (**)(Class, Class))v1[71].isa + 12))(v135, v134);
      (*((void (**)(Class, Class, Class))v139 + 4))(v137, v135, v138);
      (*((void (**)(Class, Class, Class))v139 + 2))(v136, v137, v138);
      uint64_t v140 = sub_1001EB540();
      os_log_type_t v141 = sub_1001EC910();
      BOOL v142 = os_log_type_enabled(v140, v141);
      Class v144 = v1[27].isa;
      Class v143 = v1[28].isa;
      Class v145 = v1[26].isa;
      if (v142)
      {
        v325 = v140;
        unint64_t v146 = &v3[-5].isa;
        uint64_t v147 = (uint8_t *)swift_slowAlloc();
        uint64_t v148 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v147 = 138543362;
        uint64_t v149 = sub_1001EB990();
        void *v146 = v149;
        uint64_t v140 = v325;
        sub_1001ECBC0();
        *uint64_t v148 = v149;
        uint64_t v150 = (void (*)(Class, Class))*((void *)v144 + 1);
        v150(v143, v145);
        _os_log_impl((void *)&_mh_execute_header, v325, v141, "BDSSyncEngine - willFetchRecordZoneChanges: %{public}@", v147, 0xCu);
        sub_10007DC14(&qword_100293190);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v150 = (void (*)(Class, Class))*((void *)v144 + 1);
        v150(v143, v145);
      }

      v150(v1[29].isa, v1[26].isa);
      goto LABEL_42;
    }
    if (v8 != enum case for CKSyncEngine.Event.didFetchRecordZoneChanges(_:))
    {
      if (v8 == enum case for CKSyncEngine.Event.didFetchChanges(_:))
      {
        Class v159 = v1[73].isa;
        Class v160 = v1[71].isa;
        sub_10019FFC0();
        (*((void (**)(Class, Class))v160 + 1))(v159, v134);
      }
      else
      {
        if (v8 == enum case for CKSyncEngine.Event.willSendChanges(_:))
        {
          v326 = &v3[-3].isa;
          Class v161 = v1[73].isa;
          Class v162 = v1[21].isa;
          Class v163 = v1[22].isa;
          Class v165 = v1[19].isa;
          Class v164 = v1[20].isa;
          (*((void (**)(Class, Class))v1[71].isa + 12))(v161, v134);
          (*((void (**)(Class, Class, Class))v164 + 4))(v163, v161, v165);
          (*((void (**)(Class, Class, Class))v164 + 2))(v162, v163, v165);
          os_log_type_t v166 = sub_1001EB540();
          os_log_type_t v167 = sub_1001EC910();
          BOOL v168 = os_log_type_enabled(v166, v167);
          Class v170 = v1[21].isa;
          Class v169 = v1[22].isa;
          Class v172 = v1[19].isa;
          Class v171 = v1[20].isa;
          if (v168)
          {
            Class typed = v1[22].isa;
            uint64_t v173 = (uint8_t *)swift_slowAlloc();
            v341[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v173 = 136446210;
            sub_1001A2FD0(&qword_100296798, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.Event.WillSendChanges);
            uint64_t v174 = sub_1001ED040();
            void *v326 = sub_1001A8090(v174, v175, v341);
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            uint64_t v176 = (void (*)(Class, Class))*((void *)v171 + 1);
            v176(v170, v172);
            _os_log_impl((void *)&_mh_execute_header, v166, v167, "BDSSyncEngine - willSendChanges: %{public}s", v173, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v1 = v339;
            swift_slowDealloc();

            Class v177 = typed;
          }
          else
          {
            uint64_t v176 = (void (*)(Class, Class))*((void *)v171 + 1);
            v176(v1[21].isa, v1[19].isa);

            Class v177 = v169;
          }
        }
        else
        {
          if (v8 != enum case for CKSyncEngine.Event.didSendChanges(_:))
          {
            ((void (*)(Class, Class, Class))v7)(v1[72].isa, v1[13].isa, v1[70].isa);
            char v192 = sub_1001EB540();
            os_log_type_t v193 = sub_1001EC8F0();
            BOOL v194 = os_log_type_enabled(v192, v193);
            Class v195 = v1[72].isa;
            Class v196 = v1[71].isa;
            Class v197 = v1[70].isa;
            if (v194)
            {
              uint64_t v198 = (uint8_t *)swift_slowAlloc();
              v341[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v198 = 136315138;
              sub_1001A2FD0(&qword_100296788, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.Event);
              uint64_t v199 = sub_1001ED040();
              *uint64_t v133 = sub_1001A8090(v199, v200, v341);
              sub_1001ECBC0();
              swift_bridgeObjectRelease();
              uint64_t v201 = (void (*)(Class, Class))*((void *)v196 + 1);
              v201(v195, v197);
              _os_log_impl((void *)&_mh_execute_header, v192, v193, "BDSSyncEngine - handleEvent - unhandled event: %s", v198, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              uint64_t v201 = (void (*)(Class, Class))*((void *)v196 + 1);
              v201(v195, v197);
            }
            v201(v1[73].isa, v1[70].isa);
            goto LABEL_42;
          }
          v335 = &v3[-2].isa;
          Class v178 = v1[73].isa;
          Class v179 = v1[17].isa;
          Class v180 = v1[18].isa;
          Class v181 = v1[15].isa;
          Class v182 = v1[16].isa;
          (*((void (**)(Class, Class))v1[71].isa + 12))(v178, v134);
          (*((void (**)(Class, Class, Class))v182 + 4))(v180, v178, v181);
          (*((void (**)(Class, Class, Class))v182 + 2))(v179, v180, v181);
          uint64_t v183 = sub_1001EB540();
          os_log_type_t v184 = sub_1001EC910();
          BOOL v185 = os_log_type_enabled(v183, v184);
          Class v187 = v1[17].isa;
          Class v186 = v1[18].isa;
          Class v172 = v1[15].isa;
          Class v188 = v1[16].isa;
          if (v185)
          {
            Class v327 = v1[18].isa;
            unint64_t v189 = (uint8_t *)swift_slowAlloc();
            v341[0] = swift_slowAlloc();
            *(_DWORD *)unint64_t v189 = 136446210;
            sub_1001A2FD0(&qword_100296790, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.Event.DidSendChanges);
            uint64_t v190 = sub_1001ED040();
            void *v335 = sub_1001A8090(v190, v191, v341);
            sub_1001ECBC0();
            swift_bridgeObjectRelease();
            uint64_t v176 = (void (*)(Class, Class))*((void *)v188 + 1);
            v176(v187, v172);
            _os_log_impl((void *)&_mh_execute_header, v183, v184, "BDSSyncEngine - didSendChanges: %{public}s", v189, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v1 = v339;
            swift_slowDealloc();

            Class v177 = v327;
          }
          else
          {
            uint64_t v176 = (void (*)(Class, Class))*((void *)v188 + 1);
            v176(v1[17].isa, v1[15].isa);

            Class v177 = v186;
          }
        }
        v176(v177, v172);
      }
LABEL_42:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v92 = (uint64_t (*)(void))v1[1].isa;
      return v92();
    }
    Class v151 = v1[73].isa;
    Class v152 = v1[24].isa;
    Class v153 = v1[25].isa;
    Class v154 = v1[23].isa;
    (*((void (**)(Class, Class))v1[71].isa + 12))(v151, v1[70].isa);
    (*((void (**)(Class, Class, Class))v152 + 4))(v153, v151, v154);
    uint64_t v155 = sub_1001EB960();
    if (v155)
    {
      unint64_t v156 = (void *)v155;
      uint64_t v157 = (void *)sub_1001EB970();
      id v158 = v156;
      sub_10019F8C8(v157);
    }
    Class v25 = v1[24].isa;
    Class v24 = v1[25].isa;
    Class v26 = v1[23].isa;
    id v29 = (id)sub_1001EB970();
    sub_10019FDB8(v29);
LABEL_7:

LABEL_41:
    (*((void (**)(Class, Class))v25 + 1))(v24, v26);
    goto LABEL_42;
  }
  Class v102 = v1[73].isa;
  Class v103 = v1[34].isa;
  Class v104 = v1[35].isa;
  Class v105 = v1[33].isa;
  (*((void (**)(Class, Class))v1[71].isa + 12))(v102, v1[70].isa);
  (*((void (**)(Class, Class, Class))v103 + 4))(v104, v102, v105);
  v340 = &_swiftEmptySetSingleton;
  unint64_t result = sub_1001EB8E0();
  uint64_t v7 = result;
  if (result >> 62) {
    goto LABEL_147;
  }
  uint64_t v106 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v106)
  {
LABEL_148:
    swift_bridgeObjectRelease();
    uint64_t v243 = sub_1001EB8B0();
    uint64_t v244 = *(void *)(v243 + 16);
    v303 = v3;
    if (v244)
    {
      id v245 = 0;
      Class v246 = v1[31].isa;
      v247 = (void (*)(void, void, void))*((void *)v246 + 2);
      Class v246 = (Class)((char *)v246 + 16);
      v309 = (void (*)(Class, unint64_t, Class))v247;
      unint64_t v248 = v243 + ((*((unsigned __int8 *)v246 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v246 + 64));
      uint64_t v306 = *((void *)v246 + 7);
      v315 = v3 - 11;
      v304 = (void (**)(uint64_t, uint64_t))((char *)v246 - 8);
      do
      {
        v309(v1[32].isa, v248, v1[30].isa);
        v249 = (void *)sub_1001EB890();
        id v250 = [v249 recordID];

        id v251 = [v250 recordName];
        uint64_t v252 = sub_1001EC370();
        unint64_t v254 = v253;

        v1[2].Class isa = (Class)46;
        v1[3].Class isa = (Class)0xE100000000000000;
        uint64_t v255 = v1;
        uint64_t v256 = swift_task_alloc();
        *(void *)(v256 + 16) = v315;
        swift_bridgeObjectRetain();
        uint64_t v257 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001A3F9C, v256, v252, v254);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        if (!*(void *)(v257 + 16)) {
          goto LABEL_188;
        }
        Class v258 = v255[32].isa;
        Class v330 = v255[30].isa;
        uint64_t v337 = v244;
        unint64_t v259 = v248;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        Swift::Int v260 = sub_1001EC410();
        Swift::Int v262 = v261;
        swift_bridgeObjectRelease();
        sub_100197DF4(v341, v260, v262);
        swift_bridgeObjectRelease();
        v263 = (void *)sub_1001EB880();
        sub_10019E4F4(v250, (uint64_t)v263);

        (*v304)((uint64_t)v258, (uint64_t)v330);
        unint64_t v248 = v259 + v306;
        uint64_t v244 = v337 - 1;
        uint64_t v1 = v255;
      }
      while (v337 != 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v245 = 0;
    }
    unint64_t result = sub_1001EB8D0();
    uint64_t v252 = result;
    if (result >> 62) {
      goto LABEL_192;
    }
    for (uint64_t j = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t j = result)
    {
      v265 = v303;
      id v338 = v245;
      if (j)
      {
        if (j < 1) {
          goto LABEL_196;
        }
        uint64_t v266 = 0;
        unint64_t typeb = v252 & 0xC000000000000001;
        uint64_t v267 = v252;
        while (1)
        {
          id v268 = typeb ? (id)sub_1001ECD50() : *(id *)(v252 + 8 * v266 + 32);
          uint64_t v269 = v268;
          id v270 = [v268 recordName];
          uint64_t v252 = sub_1001EC370();
          unint64_t v272 = v271;

          v339[6].Class isa = (Class)46;
          v339[7].Class isa = (Class)0xE100000000000000;
          uint64_t v273 = swift_task_alloc();
          *(void *)(v273 + 16) = v303 - 7;
          swift_bridgeObjectRetain();
          id v245 = v338;
          uint64_t v274 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001A4460, v273, v252, v272);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          if (!*(void *)(v274 + 16)) {
            break;
          }
          ++v266;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          Swift::Int v275 = sub_1001EC410();
          id v245 = v276;
          swift_bridgeObjectRelease();
          sub_100197DF4(v341, v275, (Swift::Int)v245);
          swift_bridgeObjectRelease();
          sub_10019EA04(v269);

          uint64_t v252 = v267;
          if (j == v266)
          {
            v265 = v303;
            goto LABEL_165;
          }
        }
LABEL_189:
        __break(1u);
      }
      else
      {
LABEL_165:
        typec = v265 - 9;
        swift_bridgeObjectRelease();
        uint64_t v277 = sub_1001EB8C0();
        int64_t v278 = 0;
        uint64_t v279 = *(void *)(v277 + 64);
        uint64_t v312 = v277 + 64;
        uint64_t v331 = v277;
        uint64_t v280 = -1;
        uint64_t v281 = -1 << *(unsigned char *)(v277 + 32);
        if (-v281 < 64) {
          uint64_t v280 = ~(-1 << -(char)v281);
        }
        unint64_t v282 = v280 & v279;
        int64_t v316 = (unint64_t)(63 - v281) >> 6;
        if ((v280 & v279) != 0)
        {
LABEL_168:
          unint64_t v283 = __clz(__rbit64(v282));
          v282 &= v282 - 1;
          unint64_t v284 = v283 | (v278 << 6);
          uint64_t v1 = v339;
          goto LABEL_183;
        }
        while (1)
        {
          int64_t v285 = v278 + 1;
          uint64_t v1 = v339;
          if (__OFADD__(v278, 1)) {
            break;
          }
          if (v285 >= v316) {
            goto LABEL_186;
          }
          unint64_t v286 = *(void *)(v312 + 8 * v285);
          ++v278;
          if (!v286)
          {
            int64_t v278 = v285 + 1;
            if (v285 + 1 >= v316) {
              goto LABEL_186;
            }
            unint64_t v286 = *(void *)(v312 + 8 * v278);
            if (!v286)
            {
              int64_t v278 = v285 + 2;
              if (v285 + 2 >= v316) {
                goto LABEL_186;
              }
              unint64_t v286 = *(void *)(v312 + 8 * v278);
              if (!v286)
              {
                int64_t v287 = v285 + 3;
                if (v287 >= v316)
                {
LABEL_186:
                  Class v301 = v339[34].isa;
                  Class v300 = v339[35].isa;
                  Class v302 = v339[33].isa;
                  swift_release();
                  sub_10019F3A4((uint64_t)v340);
                  swift_bridgeObjectRelease();
                  (*((void (**)(Class, Class))v301 + 1))(v300, v302);
                  goto LABEL_42;
                }
                unint64_t v286 = *(void *)(v312 + 8 * v287);
                if (!v286)
                {
                  while (1)
                  {
                    int64_t v278 = v287 + 1;
                    if (__OFADD__(v287, 1)) {
                      goto LABEL_191;
                    }
                    if (v278 >= v316) {
                      goto LABEL_186;
                    }
                    unint64_t v286 = *(void *)(v312 + 8 * v278);
                    ++v287;
                    if (v286) {
                      goto LABEL_182;
                    }
                  }
                }
                int64_t v278 = v287;
              }
            }
          }
LABEL_182:
          unint64_t v282 = (v286 - 1) & v286;
          unint64_t v284 = __clz(__rbit64(v286)) + (v278 << 6);
LABEL_183:
          uint64_t v288 = 8 * v284;
          v289 = *(void **)(*(void *)(v331 + 56) + v288);
          id v290 = *(id *)(*(void *)(v331 + 48) + v288);
          id v291 = v289;
          id v292 = [v290 recordName];
          uint64_t v252 = sub_1001EC370();
          unint64_t v294 = v293;

          v1[4].Class isa = (Class)46;
          v1[5].Class isa = (Class)0xE100000000000000;
          uint64_t v295 = swift_task_alloc();
          *(void *)(v295 + 16) = typec;
          swift_bridgeObjectRetain();
          id v245 = v338;
          uint64_t v296 = sub_1000F3AD0(0x7FFFFFFFFFFFFFFFLL, 1, sub_1001A4460, v295, v252, v294);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          if (!*(void *)(v296 + 16))
          {
            __break(1u);
LABEL_188:
            __break(1u);
            goto LABEL_189;
          }
          uint64_t v252 = (uint64_t)v1[14].isa;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          Swift::Int v297 = sub_1001EC410();
          Swift::Int v299 = v298;
          swift_bridgeObjectRelease();
          sub_100197DF4(v341, v297, v299);
          swift_bridgeObjectRelease();
          id v245 = v291;
          sub_10019EE94(v290, (uint64_t)v245);

          if (v282) {
            goto LABEL_168;
          }
        }
      }
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      unint64_t result = sub_1001ECEA0();
    }
  }
LABEL_51:
  if (v106 >= 1)
  {
    uint64_t v107 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v108 = (id)sub_1001ECD50();
      }
      else {
        id v108 = *(id *)(v7 + 8 * v107 + 32);
      }
      id v109 = v108;
      ++v107;
      Swift::Int v110 = sub_1001ECAB0();
      sub_100197DF4(v341, v110, v111);
      swift_bridgeObjectRelease();
      sub_10019E154(v109);
    }
    while (v106 != v107);
    goto LABEL_148;
  }
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
  return result;
}

uint64_t sub_1001A2EC4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC14bookdatastored13BDSSyncEngine_registeredDataSourceByRecordType);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

void *sub_1001A2F2C(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  id v3 = a1;
  Class v4 = sub_1000F3520(v3, v2);

  return v4;
}

uint64_t sub_1001A2F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007DC14(&qword_100293558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A2FD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001A3018(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = a3;
  int64_t v6 = 0;
  uint64_t v32 = 0;
  uint64_t v33 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v34 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v37 = a4 & 0xFFFFFFFFFFFFFF8;
  unint64_t v36 = a4 & 0xC000000000000001;
  while (1)
  {
LABEL_5:
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_18;
    }
    BOOL v12 = __OFADD__(v6++, 1);
    if (v12) {
      goto LABEL_50;
    }
    if (v6 >= v34)
    {
LABEL_47:
      swift_retain();
      sub_10016FED0(a1, a2, v32, v5);
      return;
    }
    unint64_t v13 = *(void *)(v33 + 8 * v6);
    if (!v13) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_18:
    Class v15 = *(void **)(*(void *)(v5 + 48) + 8 * v11);
    if (a4 >> 62)
    {
      id v28 = v15;
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1001ECEA0();
      if (!v16) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v37 + 16);
      id v17 = v15;
      swift_bridgeObjectRetain();
      if (!v16) {
        goto LABEL_4;
      }
    }
    unint64_t v35 = v11;
    if (v36) {
      id v18 = (id)sub_1001ECD50();
    }
    else {
      id v18 = *(id *)(a4 + 32);
    }
    Class v19 = v18;
    sub_100081668(0, (unint64_t *)&unk_100296550);
    char v20 = sub_1001ECB00();

    if (v20)
    {

      swift_bridgeObjectRelease();
LABEL_36:
      *(unint64_t *)((char *)a1 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
      BOOL v12 = __OFADD__(v32++, 1);
      if (v12) {
        goto LABEL_51;
      }
    }
    else
    {
      if (v16 != 1)
      {
        if (v36)
        {
          uint64_t v21 = 1;
          while (1)
          {
            sub_1001ECD50();
            uint64_t v22 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              break;
            }
            char v23 = sub_1001ECB00();
            swift_unknownObjectRelease();
            if (v23) {
              goto LABEL_35;
            }
            ++v21;
            if (v22 == v16) {
              goto LABEL_34;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v24 = 5;
          while (1)
          {
            uint64_t v25 = v24 - 3;
            if (__OFADD__(v24 - 4, 1)) {
              break;
            }
            id v26 = *(id *)(a4 + 8 * v24);
            char v27 = sub_1001ECB00();

            if (v27)
            {
LABEL_35:

              swift_bridgeObjectRelease();
              uint64_t v5 = a3;
              goto LABEL_36;
            }
            ++v24;
            if (v25 == v16)
            {
LABEL_34:

              swift_bridgeObjectRelease();
              uint64_t v5 = a3;
              goto LABEL_5;
            }
          }
        }
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
LABEL_4:

      swift_bridgeObjectRelease();
    }
  }
  int64_t v14 = v6 + 1;
  if (v6 + 1 >= v34) {
    goto LABEL_47;
  }
  unint64_t v13 = *(void *)(v33 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v6 + 2;
  if (v6 + 2 >= v34) {
    goto LABEL_47;
  }
  unint64_t v13 = *(void *)(v33 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v6 + 3;
  if (v6 + 3 >= v34) {
    goto LABEL_47;
  }
  unint64_t v13 = *(void *)(v33 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v6 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v34) {
      goto LABEL_47;
    }
    unint64_t v13 = *(void *)(v33 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_52:
  __break(1u);
}

uint64_t sub_1001A33B8(uint64_t a1, unint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_1001A3018((unint64_t *)((char *)&v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    BOOL v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_1001A3018((unint64_t *)v12, v7, a1, a2);
    uint64_t v11 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

void sub_1001A3584(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_1001A33B8(a1, a2);
    return;
  }
  swift_bridgeObjectRetain();
  sub_1001ECC60();
  if (!sub_1001ECC90())
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  sub_100081668(0, (unint64_t *)&unk_100296550);
  unint64_t v24 = a2 & 0xC000000000000001;
  while (1)
  {
    swift_dynamicCast();
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1001ECEA0();
      if (!v9) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_14;
      }
    }
    if (v24) {
      id v10 = (id)sub_1001ECD50();
    }
    else {
      id v10 = *(id *)(a2 + 32);
    }
    uint64_t v11 = v10;
    char v12 = sub_1001ECB00();

    if (v12)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      if (*((void *)&_swiftEmptySetSingleton + 3) <= *((void *)&_swiftEmptySetSingleton + 2)) {
        sub_1001977A4();
      }
      Swift::Int v3 = sub_1001ECAF0(*((void *)&_swiftEmptySetSingleton + 5));
      uint64_t v4 = (char *)&_swiftEmptySetSingleton + 56;
      uint64_t v5 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
      unint64_t v6 = v3 & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~*((void *)&_swiftEmptySetSingleton + (v6 >> 6) + 7)) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*((void *)&_swiftEmptySetSingleton + (v6 >> 6) + 7))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v16 = 0;
        unint64_t v17 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v17 && (v16 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v18 = v7 == v17;
          if (v7 == v17) {
            unint64_t v7 = 0;
          }
          v16 |= v18;
          uint64_t v19 = *(void *)&v4[8 * v7];
        }
        while (v19 == -1);
        unint64_t v8 = __clz(__rbit64(~v19)) + (v7 << 6);
      }
      *(void *)&v4[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
      *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v8) = v25;
      ++*((void *)&_swiftEmptySetSingleton + 2);
      goto LABEL_7;
    }
    if (v9 != 1) {
      break;
    }
LABEL_14:
    swift_bridgeObjectRelease();

LABEL_7:
    if (!sub_1001ECC90()) {
      goto LABEL_40;
    }
  }
  if (v24)
  {
    uint64_t v13 = 1;
    while (1)
    {
      sub_1001ECD50();
      uint64_t v14 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      char v15 = sub_1001ECB00();
      swift_unknownObjectRelease();
      if (v15) {
        goto LABEL_34;
      }
      ++v13;
      if (v14 == v9) {
        goto LABEL_14;
      }
    }
LABEL_41:
    __break(1u);
  }
  else
  {
    uint64_t v20 = 5;
    while (1)
    {
      uint64_t v21 = v20 - 3;
      if (__OFADD__(v20 - 4, 1)) {
        break;
      }
      id v22 = *(id *)(a2 + 8 * v20);
      char v23 = sub_1001ECB00();

      if (v23) {
        goto LABEL_34;
      }
      ++v20;
      if (v21 == v9) {
        goto LABEL_14;
      }
    }
  }
  __break(1u);
}

uint64_t sub_1001A390C()
{
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A3944(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1001EBA60();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001EBAA0();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain_n();
  id v10 = sub_1001EB540();
  os_log_type_t v11 = sub_1001EC910();
  if (os_log_type_enabled(v10, v11))
  {
    BOOL v18 = v6;
    char v12 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)char v12 = 136446210;
    swift_bridgeObjectRetain();
    char v23 = (void *)sub_1001A8090(a1, a2, aBlock);
    unint64_t v6 = v18;
    sub_1001ECBC0();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "BDSSyncEngine - updatedSaltWithVersion %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = a1;
  uint64_t v14[4] = a2;
  aBlock[4] = (uint64_t)sub_1001A3F90;
  void aBlock[5] = (uint64_t)v14;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000DB998;
  void aBlock[3] = (uint64_t)&unk_10026AC98;
  char v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001EBA80();
  char v23 = _swiftEmptyArrayStorage;
  sub_1001A2FD0((unint64_t *)&unk_100296740, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007DC14((uint64_t *)&unk_100291BF0);
  sub_1000815A4(&qword_100296750, (uint64_t *)&unk_100291BF0);
  uint64_t v16 = v22;
  sub_1001ECC30();
  sub_1001EC9F0();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1001A3D80()
{
  return type metadata accessor for BDSSyncEngine();
}

uint64_t sub_1001A3D88()
{
  uint64_t result = sub_1001EB560();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1001A3E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14PricingServiceV12FetchedPriceVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A3EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14PricingServiceV12FetchedPriceVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A3F50()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001A3F90()
{
}

uint64_t sub_1001A3F9C(void *a1)
{
  return sub_1000FF9C4(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1001A3FC0()
{
  return sub_1001A40C0((uint64_t (*)(uint64_t, uint64_t))sub_10019441C);
}

uint64_t sub_1001A3FDC()
{
  uint64_t v1 = sub_1001EB9C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001A40A8()
{
  return sub_1001A40C0(sub_10019483C);
}

uint64_t sub_1001A40C0(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_1001EB9C0() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3, v4);
}

uint64_t sub_1001A4138()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001A4178()
{
  sub_1001943C0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001A4180@<X0>(uint64_t a1@<X8>)
{
  return sub_10018F1F8(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1001A419C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A41DC()
{
  return sub_100191260(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001A41E4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001A422C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100093EB4;
  return sub_100191638(a1, v4, v5, v7, v6);
}

uint64_t sub_1001A42EC()
{
  swift_release();
  swift_unknownObjectRelease();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A432C()
{
  swift_release();
  return _swift_deallocObject(v0, 25, 7);
}

void sub_1001A4364()
{
  sub_100196820(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001A4370()
{
  swift_release();
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A43A8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100093200;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1002967F8 + dword_1002967F8);
  return v6(a1, v4);
}

uint64_t sub_1001A4460(void *a1)
{
  return sub_1001A3F9C(a1) & 1;
}

uint64_t sub_1001A44D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A4180(a1);
}

uint64_t ReadingHistoryUpdate.days.getter()
{
  uint64_t v1 = OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days;
  if (*(void *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days);
  }
  else
  {
    uint64_t v2 = sub_1001A6B0C(v0);
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ReadingHistoryUpdate.editGeneration.getter()
{
  return *(void *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate_value + 8);
}

id ReadingHistoryUpdate.coalesce(newerUpdate:)(char *a1)
{
  Class ObjectType = (Class)swift_getObjectType();
  uint64_t v5 = sub_1001EB0C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v77 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007DC14(&qword_100296820);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  os_log_type_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v62 - v12;
  id v63 = v1;
  id v64 = a1;
  uint64_t v14 = &v1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  char v15 = *(void **)&v1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  uint64_t v65 = &a1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  unint64_t v66 = v14;
  unint64_t v16 = *(void *)&a1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  uint64_t v17 = *(void *)(*(void *)v65 + 64);
  uint64_t v68 = *(void *)v65 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v74 = v6 + 16;
  uint64_t v75 = v6;
  Class v71 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  Class v72 = (void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  int64_t v69 = (unint64_t)(v18 + 63) >> 6;
  int64_t v62 = v69 - 1;
  swift_bridgeObjectRetain();
  unint64_t v70 = v16;
  swift_bridgeObjectRetain();
  int64_t v73 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      uint64_t v22 = (v20 - 1) & v20;
      unint64_t v23 = v21 | (v73 << 6);
LABEL_8:
      unint64_t v24 = v70;
      (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v11, *(void *)(v70 + 48) + *(void *)(v75 + 72) * v23, v5);
      uint64_t v25 = (uint64_t *)(*(void *)(v24 + 56) + 16 * v23);
      uint64_t v26 = sub_10007DC14(&qword_100296828);
      char v27 = (uint64_t *)&v11[*(int *)(v26 + 48)];
      uint64_t v28 = *v25;
      unint64_t v29 = v25[1];
      *char v27 = v28;
      v27[1] = v29;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 0, 1, v26);
      sub_100093680(v28, v29);
      goto LABEL_27;
    }
    int64_t v30 = v73 + 1;
    if (__OFADD__(v73, 1)) {
      goto LABEL_44;
    }
    if (v30 < v69)
    {
      unint64_t v31 = *(void *)(v68 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      int64_t v32 = v73 + 2;
      ++v73;
      if (v30 + 1 < v69)
      {
        unint64_t v31 = *(void *)(v68 + 8 * v32);
        if (v31) {
          goto LABEL_15;
        }
        int64_t v73 = v30 + 1;
        if (v30 + 2 < v69)
        {
          unint64_t v31 = *(void *)(v68 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          int64_t v32 = v30 + 3;
          int64_t v73 = v30 + 2;
          if (v30 + 3 < v69) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v33 = sub_10007DC14(&qword_100296828);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 1, 1, v33);
    uint64_t v22 = 0;
LABEL_27:
    sub_1000935F8((uint64_t)v11, (uint64_t)v13, &qword_100296820);
    uint64_t v34 = sub_10007DC14(&qword_100296828);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v13, 1, v34) == 1)
    {
      swift_release();
      uint64_t v2 = (char *)*((void *)v66 + 1);
      int64_t v3 = *((void *)v65 + 1);
      if (v3 < (uint64_t)v2)
      {
        LOBYTE(v16) = sub_1001EC8F0();
        if (qword_1002910E8 != -1) {
          goto LABEL_45;
        }
        goto LABEL_39;
      }
LABEL_41:
      Class v58 = ObjectType;
      Class v59 = (char *)objc_allocWithZone(ObjectType);
      *(void *)&v59[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
      uint64_t v60 = &v59[OBJC_IVAR___BDSReadingHistoryUpdate_value];
      *(void *)uint64_t v60 = v15;
      *((void *)v60 + 1) = v3;
      v79.receiver = v59;
      v79.super_class = v58;
      return objc_msgSendSuper2(&v79, "init");
    }
    unint64_t v76 = v22;
    uint64_t v2 = v11;
    unint64_t v35 = (uint64_t *)&v13[*(int *)(v34 + 48)];
    uint64_t v36 = *v35;
    int64_t v3 = v35[1];
    uint64_t v37 = v77;
    uint64_t v38 = v13;
    uint64_t v39 = v13;
    uint64_t v40 = v5;
    (*v72)(v77, v39, v5);
    sub_100093680(v36, v3);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v78 = v15;
    unint64_t v16 = sub_1001A8708(v37);
    uint64_t v43 = v15[2];
    BOOL v44 = (v42 & 1) == 0;
    uint64_t v45 = v43 + v44;
    if (__OFADD__(v43, v44))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      swift_once();
LABEL_39:
      Class v53 = (void *)qword_100293A68;
      if (os_log_type_enabled((os_log_t)qword_100293A68, (os_log_type_t)v16))
      {
        id v54 = v63;
        id v55 = v64;
        Class v56 = v53;
        uint64_t v57 = swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 134218240;
        id v78 = v2;
        sub_1001ECBC0();

        *(_WORD *)(v57 + 12) = 2048;
        id v78 = (void *)v3;
        sub_1001ECBC0();

        _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v16, "ReadingHistoryUpdate: coalesce - unexpected editGeneration=%ld, newerUpdate.editGeneration=%ld", (uint8_t *)v57, 0x16u);
        swift_slowDealloc();
      }
      goto LABEL_41;
    }
    char v46 = v42;
    if (v15[3] >= v45)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1001ABEBC();
      }
    }
    else
    {
      sub_1001A9CD0(v45, isUniquelyReferenced_nonNull_native);
      unint64_t v47 = sub_1001A8708(v77);
      if ((v46 & 1) != (v48 & 1)) {
        goto LABEL_47;
      }
      unint64_t v16 = v47;
    }
    uint64_t v5 = v40;
    char v15 = v78;
    uint64_t v13 = v38;
    if (v46)
    {
      unint64_t v16 = v78[7] + 16 * v16;
      sub_100081714(*(void *)v16, *(void *)(v16 + 8));
      *(void *)unint64_t v16 = v36;
      *(void *)(v16 + 8) = v3;
    }
    else
    {
      v78[(v16 >> 6) + 8] |= 1 << v16;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v75 + 16))(v15[6] + *(void *)(v75 + 72) * v16, v77, v5);
      uint64_t v49 = (uint64_t *)(v15[7] + 16 * v16);
      *uint64_t v49 = v36;
      v49[1] = v3;
      uint64_t v50 = v15[2];
      BOOL v51 = __OFADD__(v50, 1);
      uint64_t v52 = v50 + 1;
      if (v51) {
        goto LABEL_43;
      }
      void v15[2] = v52;
    }
    swift_bridgeObjectRelease();
    (*v71)(v77, v5);
    sub_100081714(v36, v3);
    os_log_type_t v11 = v2;
    unint64_t v20 = v76;
  }
  unint64_t v31 = *(void *)(v68 + 8 * v32);
  if (v31)
  {
LABEL_15:
    int64_t v30 = v32;
LABEL_12:
    uint64_t v22 = (v31 - 1) & v31;
    unint64_t v23 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v73 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v69)
    {
      int64_t v73 = v62;
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v68 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_47:
  id result = (id)sub_1001ED0E0();
  __break(1u);
  return result;
}

uint64_t ReadingHistoryUpdate.hasDelta(from:)(uint64_t a1)
{
  uint64_t v103 = a1;
  uint64_t v2 = sub_10007DC14(&qword_100296830);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v102 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v109 = (uint64_t)&v87 - v5;
  os_log_t v101 = (os_log_t)type metadata accessor for ReadingHistoryDay(0);
  Class isa = v101[-1].isa;
  uint64_t v7 = __chkstk_darwin(v101);
  uint64_t v90 = (uint64_t)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_type_t v11 = (char *)&v87 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = ((char *)&v87 - v13);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v104 = (uint64_t)&v87 - v16;
  __chkstk_darwin(v15);
  uint64_t v106 = (uint64_t)&v87 - v17;
  uint64_t v18 = sub_1001EB0C0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  id v89 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v87 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v87 - v25;
  uint64_t v27 = sub_10007DC14(&qword_100296838);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  int64_t v30 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  Class v105 = ((char *)&v87 - v31);
  uint64_t result = ReadingHistoryUpdate.days.getter();
  uint64_t v107 = 0;
  uint64_t v33 = *(void *)(result + 64);
  uint64_t v91 = result + 64;
  uint64_t v34 = 1 << *(unsigned char *)(result + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  id v95 = (void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v96 = result;
  uint64_t v93 = v19;
  Class v94 = isa;
  Class v99 = (unsigned int (**)(uint64_t, uint64_t, os_log_t))((char *)isa + 48);
  Class v100 = (void (**)(char *, os_log_t, uint64_t))(v19 + 32);
  Class v98 = (id *)(v19 + 8);
  int64_t v92 = (unint64_t)(v34 + 63) >> 6;
  uint64_t v88 = (v92 - 1);
  if (!v36) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v108 = (v36 - 1) & v36;
  unint64_t v37 = __clz(__rbit64(v36)) | (v107 << 6);
  os_log_t v38 = v105;
LABEL_5:
  uint64_t v39 = v96;
  (*(void (**)(char *, unint64_t, uint64_t))(v93 + 16))(v30, *(void *)(v96 + 48) + *(void *)(v93 + 72) * v37, v18);
  uint64_t v40 = *(void *)(v39 + 56) + *((void *)v94 + 9) * v37;
  uint64_t v41 = sub_10007DC14((uint64_t *)&unk_100296840);
  sub_1001AD850(v40, (uint64_t)&v30[*(int *)(v41 + 48)], type metadata accessor for ReadingHistoryDay);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v30, 0, 1, v41);
  while (1)
  {
    sub_1000935F8((uint64_t)v30, (uint64_t)v38, &qword_100296838);
    uint64_t v46 = sub_10007DC14((uint64_t *)&unk_100296840);
    LODWORD(v1) = (*(uint64_t (**)(os_log_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v38, 1, v46);
    if (v1 == 1)
    {
      swift_release();
      sub_1001EC910();
      if (qword_1002910E8 != -1) {
        goto LABEL_45;
      }
      goto LABEL_30;
    }
    unint64_t v47 = (char *)v38 + *(int *)(v46 + 48);
    uint64_t v48 = v18;
    (*v100)(v26, v38, v18);
    uint64_t v49 = (uint64_t)v47;
    uint64_t v50 = v26;
    uint64_t v51 = v106;
    sub_1001AD8B8(v49, v106, type metadata accessor for ReadingHistoryDay);
    uint64_t v52 = v109;
    Class v53 = v50;
    ReadingHistoryModel.readingHistoryDay(for:)(v109);
    uint64_t v54 = v102;
    sub_1001AC198(v52, v102);
    if ((*v99)(v54, 1, v101) == 1)
    {
      sub_1001AC200(v54);
      os_log_type_t v57 = sub_1001EC910();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      Class v58 = qword_100293A68;
      Class v59 = v89;
      (*v95)(v89, v53, v48);
      uint64_t v60 = v106;
      uint64_t v61 = v90;
      sub_1001AD850(v106, v90, type metadata accessor for ReadingHistoryDay);
      if (os_log_type_enabled(v58, v57))
      {
        uint64_t v107 = v58;
        uint64_t v62 = swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        uint64_t v108 = (uint64_t)v53;
        v111[0] = v63;
        *(_DWORD *)uint64_t v62 = 136315394;
        sub_1001ADA20(&qword_100293430, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v64 = sub_1001ED040();
        uint64_t v110 = sub_1001A8090(v64, v65, v111);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        Class v105 = *v98;
        ((void (*)(char *, uint64_t))v105)(v59, v48);
        *(_WORD *)(v62 + 12) = 2080;
        uint64_t v66 = v90;
        uint64_t v67 = ReadingHistoryDay.description.getter();
        uint64_t v110 = sub_1001A8090(v67, v68, v111);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1001AC260(v66);
        os_log_t v69 = (os_log_t)v107;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v107, v57, "ReadingHistoryUpdate: has forward delta for %s - day=%s modelDay=nil", (uint8_t *)v62, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1001AC200(v109);
        sub_1001AC260(v106);
        ((void (*)(uint64_t, uint64_t))v105)(v108, v48);
LABEL_42:
        swift_release();
        return v1 != 1;
      }
      sub_1001AC260(v61);
      os_log_t v85 = (os_log_t)*v98;
      ((void (*)(char *, uint64_t))*v98)(v59, v48);
      sub_1001AC200(v109);
      uint64_t v86 = v60;
LABEL_41:
      sub_1001AC260(v86);
      ((void (*)(char *, uint64_t))v85)(v53, v48);
      goto LABEL_42;
    }
    int v97 = v1;
    uint64_t v1 = v104;
    sub_1001AD8B8(v54, v104, type metadata accessor for ReadingHistoryDay);
    sub_1001ADA20(&qword_100296850, (void (*)(uint64_t))type metadata accessor for ReadingHistoryDay);
    uint64_t v55 = v51;
    if (sub_1001EBD20())
    {
      os_log_type_t v70 = sub_1001EC910();
      if (qword_1002910E8 != -1) {
        swift_once();
      }
      Class v71 = qword_100293A68;
      Class v72 = v24;
      (*v95)(v24, v53, v48);
      uint64_t v107 = (uint64_t)v14;
      sub_1001AD850(v55, (uint64_t)v14, type metadata accessor for ReadingHistoryDay);
      uint64_t v73 = v104;
      sub_1001AD850(v104, (uint64_t)v11, type metadata accessor for ReadingHistoryDay);
      int v74 = v70;
      BOOL v75 = os_log_type_enabled(v71, v70);
      LODWORD(v1) = v97;
      if (v75)
      {
        Class v105 = v71;
        uint64_t v76 = swift_slowAlloc();
        uint64_t v103 = swift_slowAlloc();
        v111[0] = v103;
        *(_DWORD *)uint64_t v76 = 136315650;
        LODWORD(v102) = v74;
        sub_1001ADA20(&qword_100293430, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v77 = sub_1001ED040();
        uint64_t v110 = sub_1001A8090(v77, v78, v111);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        uint64_t v108 = (uint64_t)v53;
        os_log_t v101 = (os_log_t)*v98;
        ((void (*)(char *, uint64_t))v101)(v72, v48);
        *(_WORD *)(v76 + 12) = 2080;
        os_log_t v79 = (os_log_t)v107;
        uint64_t v80 = ReadingHistoryDay.description.getter();
        uint64_t v110 = sub_1001A8090(v80, v81, v111);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1001AC260((uint64_t)v79);
        *(_WORD *)(v76 + 22) = 2080;
        uint64_t v82 = ReadingHistoryDay.description.getter();
        uint64_t v110 = sub_1001A8090(v82, v83, v111);
        sub_1001ECBC0();
        swift_bridgeObjectRelease();
        sub_1001AC260((uint64_t)v11);
        os_log_t v84 = v105;
        _os_log_impl((void *)&_mh_execute_header, v105, (os_log_type_t)v102, "ReadingHistoryUpdate: has forward delta for %s - day=%s modelDay=%s", (uint8_t *)v76, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1001AC260(v104);
        sub_1001AC200(v109);
        sub_1001AC260(v106);
        ((void (*)(uint64_t, uint64_t))v101)(v108, v48);
        goto LABEL_42;
      }
      sub_1001AC260((uint64_t)v11);
      sub_1001AC260(v107);
      os_log_t v85 = (os_log_t)*v98;
      ((void (*)(char *, uint64_t))*v98)(v72, v48);
      sub_1001AC260(v73);
      sub_1001AC200(v109);
      uint64_t v86 = v55;
      goto LABEL_41;
    }
    sub_1001AC260(v1);
    sub_1001AC200(v109);
    sub_1001AC260(v51);
    uint64_t v26 = v53;
    uint64_t v18 = v48;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v98)(v53, v48);
    unint64_t v36 = v108;
    if (v108) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v42 = v107 + 1;
    os_log_t v38 = v105;
    if (__OFADD__(v107, 1)) {
      break;
    }
    if (v42 < v92)
    {
      unint64_t v43 = *(void *)(v91 + 8 * v42);
      if (v43) {
        goto LABEL_9;
      }
      uint64_t v44 = v107 + 2;
      ++v107;
      if (v42 + 1 < v92)
      {
        unint64_t v43 = *(void *)(v91 + 8 * v44);
        if (v43) {
          goto LABEL_12;
        }
        uint64_t v107 = v42 + 1;
        if (v42 + 2 < v92)
        {
          unint64_t v43 = *(void *)(v91 + 8 * (v42 + 2));
          if (v43)
          {
            v42 += 2;
            goto LABEL_9;
          }
          uint64_t v44 = v42 + 3;
          uint64_t v107 = v42 + 2;
          if (v42 + 3 < v92)
          {
            unint64_t v43 = *(void *)(v91 + 8 * v44);
            if (!v43)
            {
              while (1)
              {
                int64_t v42 = v44 + 1;
                if (__OFADD__(v44, 1)) {
                  break;
                }
                if (v42 >= v92)
                {
                  uint64_t v107 = (uint64_t)v88;
                  goto LABEL_23;
                }
                unint64_t v43 = *(void *)(v91 + 8 * v42);
                ++v44;
                if (v43) {
                  goto LABEL_9;
                }
              }
              __break(1u);
              return result;
            }
LABEL_12:
            int64_t v42 = v44;
LABEL_9:
            uint64_t v107 = v42;
            uint64_t v108 = (v43 - 1) & v43;
            unint64_t v37 = __clz(__rbit64(v43)) + (v42 << 6);
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v45 = sub_10007DC14((uint64_t *)&unk_100296840);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v30, 1, 1, v45);
    uint64_t v108 = 0;
  }
  __break(1u);
LABEL_45:
  swift_once();
LABEL_30:
  id v56 = (id)qword_100293A68;
  sub_1001EB530();

  return v1 != 1;
}